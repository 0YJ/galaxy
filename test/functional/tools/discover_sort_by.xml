<tool id="discover_sort_by" name="discover_sort_by" version="0.1.0">
    <command><![CDATA[
    echo "1" > 1.txt &&
    echo "2" > 2.txt &&
    echo "10" > 10.txt
  ]]></command>
  <inputs/>
  <outputs>
    <collection name="collection_numeric_name" type="list" label="num">
      <discover_datasets pattern="__name_and_ext__" sort_by="numeric_name"/>
    </collection>
    <collection name="collection_rev_numeric_name" type="list" label="num rev">
      <discover_datasets pattern="__name_and_ext__" sort_by="reverse_numeric_name"/>
    </collection>
    <collection name="collection_lexical_name" type="list" label="num">
      <discover_datasets pattern="__name_and_ext__" sort_by="lexical_name" />
    </collection>
    <data name="data_reverse_lexical_name">
      <discover_datasets pattern="__name_and_ext__" format="txt" assign_primary_output="true" sort_by="reverse_lexical_name" visible="true"/>
    </data>
  </outputs>
  <tests>
    <!-- note: this test is only checking for bugs in the sorting functions
         but not for the actual sorting, since the.
         even if the test lists the discovered datasets in the correct order
         the order is currently not tested
         - test is only if the elements listed in the test
           are in the list of generated elements
         - furthermore the order of the elements listed in the test
           is not preserved in the test functions -->
    <test expect_num_outputs="4">
      <param name="input1" value="tinywga.fam" />
      <output_collection name="collection_numeric_name" type="list" count="3">
        <element name="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="2">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
      </output_collection>
      <output_collection name="collection_rev_numeric_name" type="list" count="3">
        <element name="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="2">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
      </output_collection>
      <output_collection name="collection_lexical_name" type="list" count="3">
        <element name="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
        <element name="2">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </element>
      </output_collection>
      <output name="data_reverse_lexical_name">
        <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        <discovered_dataset designation="10">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </discovered_dataset>
        <discovered_dataset designation="1">
          <assert_contents><has_text_matching expression="^.*$"/></assert_contents>
        </discovered_dataset>
      </output>
    </test>
  </tests>
</tool>
