components:
  schemas:
    APIKeyResponse:
      properties:
        api_key:
          title: Api Key
          type: string
      required:
      - api_key
      title: APIKeyResponse
      type: object
    Body_repositories__create_revision:
      properties:
        commit_message:
          title: Commit Message
        files:
          anyOf:
          - items:
              format: binary
              type: string
            type: array
          - type: 'null'
          title: Files
      title: Body_repositories__create_revision
      type: object
    BuildSearchIndexResponse:
      properties:
        repositories_indexed:
          title: Repositories Indexed
          type: integer
        tools_indexed:
          title: Tools Indexed
          type: integer
      required:
      - repositories_indexed
      - tools_indexed
      title: BuildSearchIndexResponse
      type: object
    Category:
      properties:
        deleted:
          title: Deleted
          type: boolean
        description:
          title: Description
          type: string
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        repositories:
          title: Repositories
          type: integer
      required:
      - id
      - name
      - description
      - deleted
      - repositories
      title: Category
      type: object
    Checksum:
      properties:
        checksum:
          description: 'The hex-string encoded checksum for the data. '
          title: Checksum
          type: string
        type:
          description: 'The digest method used to create the checksum.

            The value (e.g. `sha-256`) SHOULD be listed as `Hash Name String` in the
            https://github.com/ga4gh-discovery/ga4gh-checksum/blob/master/hash-alg.csv[GA4GH
            Checksum Hash Algorithm Registry].

            Other values MAY be used, as long as implementers are aware of the issues
            discussed in https://tools.ietf.org/html/rfc6920#section-9.4[RFC6920].

            GA4GH may provide more explicit guidance for use of non-IANA-registered
            algorithms in the future.'
          title: Type
          type: string
      required:
      - checksum
      - type
      title: Checksum
      type: object
    CreateCategoryRequest:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        name:
          title: Name
          type: string
      required:
      - name
      title: CreateCategoryRequest
      type: object
    CreateRepositoryRequest:
      properties:
        category_ids[]:
          anyOf:
          - items:
              type: string
            type: array
          - type: string
          - type: 'null'
          title: Category IDs
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        homepage_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Homepage Url
        name:
          title: Name
          type: string
        remote_repository_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Remote Repository Url
        synopsis:
          title: Synopsis
          type: string
        type:
          default: unrestricted
          enum:
          - repository_suite_definition
          - tool_dependency_definition
          - unrestricted
          title: Type
          type: string
      required:
      - name
      - synopsis
      - category_ids[]
      title: CreateRepositoryRequest
      type: object
    CreateUserRequest:
      properties:
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
        username:
          title: Username
          type: string
      required:
      - username
      - email
      - password
      title: CreateUserRequest
      type: object
    DescriptorType:
      enum:
      - CWL
      - WDL
      - NFL
      - GALAXY
      - SMK
      title: DescriptorType
      type: string
    DescriptorTypeVersion:
      title: DescriptorTypeVersion
      type: string
    DetailedRepository:
      properties:
        create_time:
          title: Create Time
          type: string
        deleted:
          title: Deleted
          type: boolean
        deprecated:
          title: Deprecated
          type: boolean
        description:
          title: Description
          type: string
        homepage_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Homepage Url
        id:
          title: Id
          type: string
        long_description:
          anyOf:
          - type: string
          - type: 'null'
          title: Long Description
        name:
          title: Name
          type: string
        owner:
          title: Owner
          type: string
        private:
          title: Private
          type: boolean
        remote_repository_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Remote Repository Url
        times_downloaded:
          title: Times Downloaded
          type: integer
        type:
          title: Type
          type: string
        update_time:
          title: Update Time
          type: string
        user_id:
          title: User Id
          type: string
      required:
      - id
      - name
      - owner
      - type
      - description
      - user_id
      - private
      - deleted
      - times_downloaded
      - deprecated
      - create_time
      - update_time
      - long_description
      title: DetailedRepository
      type: object
    FailedRepositoryUpdateMessage:
      properties:
        err_msg:
          title: Err Msg
          type: string
      required:
      - err_msg
      title: FailedRepositoryUpdateMessage
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ImageData:
      properties:
        checksum:
          anyOf:
          - items:
              $ref: '#/components/schemas/Checksum'
            type: array
          - type: 'null'
          description: A production (immutable) tool version is required to have a
            hashcode. Not required otherwise, but might be useful to detect changes.  This
            exposes the hashcode for specific image versions to verify that the container
            version pulled is actually the version that was indexed by the registry.
          examples:
          - checksum: 77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182
            type: sha256
          title: Checksum
        image_name:
          anyOf:
          - type: string
          - type: 'null'
          description: Used in conjunction with a registry_url if provided to locate
            images.
          examples:
          - quay.io/seqware/seqware_full/1.1
          - ubuntu:latest
          title: Image Name
        image_type:
          anyOf:
          - $ref: '#/components/schemas/ImageType'
          - type: 'null'
        registry_host:
          anyOf:
          - type: string
          - type: 'null'
          description: A docker registry or a URL to a Singularity registry. Used
            along with image_name to locate a specific image.
          examples:
          - registry.hub.docker.com
          title: Registry Host
        size:
          anyOf:
          - type: integer
          - type: 'null'
          description: Size of the container in bytes.
          title: Size
        updated:
          anyOf:
          - type: string
          - type: 'null'
          description: Last time the container was updated.
          title: Updated
      title: ImageData
      type: object
    ImageType:
      enum:
      - Docker
      - Singularity
      - Conda
      title: ImageType
      type: string
    InstallInfo:
      properties:
        metadata_info:
          anyOf:
          - $ref: '#/components/schemas/RepositoryMetadataInstallInfo'
          - type: 'null'
        repo_info:
          anyOf:
          - $ref: '#/components/schemas/RepositoryExtraInstallInfo'
          - type: 'null'
      title: InstallInfo
      type: object
    Organization:
      properties:
        name:
          description: Name of the organization responsible for the service
          examples:
          - My organization
          title: Name
          type: string
        url:
          description: URL of the website of the organization (RFC 3986 format)
          examples:
          - https://example.com
          format: uri
          minLength: 1
          title: Url
          type: string
      required:
      - name
      - url
      title: Organization
      type: object
    RepositoriesByCategory:
      properties:
        description:
          title: Description
          type: string
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        repositories:
          items:
            $ref: '#/components/schemas/Repository'
          title: Repositories
          type: array
        repository_count:
          title: Repository Count
          type: integer
      required:
      - id
      - name
      - description
      - repository_count
      - repositories
      title: RepositoriesByCategory
      type: object
    Repository:
      properties:
        create_time:
          title: Create Time
          type: string
        deleted:
          title: Deleted
          type: boolean
        deprecated:
          title: Deprecated
          type: boolean
        description:
          title: Description
          type: string
        homepage_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Homepage Url
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        owner:
          title: Owner
          type: string
        private:
          title: Private
          type: boolean
        remote_repository_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Remote Repository Url
        times_downloaded:
          title: Times Downloaded
          type: integer
        type:
          title: Type
          type: string
        update_time:
          title: Update Time
          type: string
        user_id:
          title: User Id
          type: string
      required:
      - id
      - name
      - owner
      - type
      - description
      - user_id
      - private
      - deleted
      - times_downloaded
      - deprecated
      - create_time
      - update_time
      title: Repository
      type: object
    RepositoryDependency:
      properties:
        changeset_revision:
          title: Changeset Revision
          type: string
        downloadable:
          title: Downloadable
          type: boolean
        has_repository_dependencies:
          title: Has Repository Dependencies
          type: boolean
        id:
          title: Id
          type: string
        includes_datatypes:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Includes Datatypes
        includes_tool_dependencies:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Includes Tool Dependencies
        includes_tools:
          title: Includes Tools
          type: boolean
        includes_tools_for_display_in_tool_panel:
          title: Includes Tools For Display In Tool Panel
          type: boolean
        includes_workflows:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Includes Workflows
        invalid_tools:
          items:
            type: string
          title: Invalid Tools
          type: array
        malicious:
          title: Malicious
          type: boolean
        missing_test_components:
          title: Missing Test Components
          type: boolean
        numeric_revision:
          title: Numeric Revision
          type: integer
        repository:
          $ref: '#/components/schemas/Repository'
        repository_dependencies:
          items:
            $ref: '#/components/schemas/RepositoryDependency'
          title: Repository Dependencies
          type: array
        repository_id:
          title: Repository Id
          type: string
        tools:
          anyOf:
          - items:
              $ref: '#/components/schemas/RepositoryTool'
            type: array
          - type: 'null'
          title: Tools
      required:
      - id
      - repository
      - repository_dependencies
      - invalid_tools
      - repository_id
      - numeric_revision
      - changeset_revision
      - malicious
      - downloadable
      - missing_test_components
      - has_repository_dependencies
      - includes_tools
      - includes_tools_for_display_in_tool_panel
      title: RepositoryDependency
      type: object
    RepositoryExtraInstallInfo:
      properties:
        changeset_revision:
          title: Changeset Revision
          type: string
        ctx_rev:
          title: Ctx Rev
          type: string
        description:
          title: Description
          type: string
        name:
          title: Name
          type: string
        repository_clone_url:
          title: Repository Clone Url
          type: string
        repository_dependencies:
          anyOf:
          - type: object
          - type: 'null'
          title: Repository Dependencies
        repository_owner:
          title: Repository Owner
          type: string
      required:
      - name
      - description
      - repository_clone_url
      - changeset_revision
      - ctx_rev
      - repository_owner
      title: RepositoryExtraInstallInfo
      type: object
    RepositoryMetadata:
      additionalProperties:
        $ref: '#/components/schemas/RepositoryRevisionMetadata'
      title: RepositoryMetadata
      type: object
    RepositoryMetadataInstallInfo:
      properties:
        changeset_revision:
          title: Changeset Revision
          type: string
        downloadable:
          title: Downloadable
          type: boolean
        has_repository_dependencies:
          title: Has Repository Dependencies
          type: boolean
        id:
          title: Id
          type: string
        includes_tools:
          title: Includes Tools
          type: boolean
        includes_tools_for_display_in_tool_panel:
          title: Includes Tools For Display In Tool Panel
          type: boolean
        malicious:
          title: Malicious
          type: boolean
        repository_id:
          title: Repository Id
          type: string
        url:
          title: Url
          type: string
        valid_tools:
          items:
            $ref: '#/components/schemas/ValidTool'
          title: Valid Tools
          type: array
      required:
      - id
      - changeset_revision
      - downloadable
      - has_repository_dependencies
      - includes_tools
      - includes_tools_for_display_in_tool_panel
      - malicious
      - repository_id
      - url
      - valid_tools
      title: RepositoryMetadataInstallInfo
      type: object
    RepositoryPermissions:
      properties:
        allow_push:
          items:
            type: string
          title: Allow Push
          type: array
        can_manage:
          title: Can Manage
          type: boolean
        can_push:
          title: Can Push
          type: boolean
      required:
      - allow_push
      - can_manage
      - can_push
      title: RepositoryPermissions
      type: object
    RepositoryRevisionMetadata:
      properties:
        changeset_revision:
          title: Changeset Revision
          type: string
        downloadable:
          title: Downloadable
          type: boolean
        has_repository_dependencies:
          title: Has Repository Dependencies
          type: boolean
        id:
          title: Id
          type: string
        includes_datatypes:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Includes Datatypes
        includes_tool_dependencies:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Includes Tool Dependencies
        includes_tools:
          title: Includes Tools
          type: boolean
        includes_tools_for_display_in_tool_panel:
          title: Includes Tools For Display In Tool Panel
          type: boolean
        includes_workflows:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Includes Workflows
        invalid_tools:
          items:
            type: string
          title: Invalid Tools
          type: array
        malicious:
          title: Malicious
          type: boolean
        missing_test_components:
          title: Missing Test Components
          type: boolean
        numeric_revision:
          title: Numeric Revision
          type: integer
        repository:
          $ref: '#/components/schemas/Repository'
        repository_dependencies:
          items:
            $ref: '#/components/schemas/RepositoryDependency'
          title: Repository Dependencies
          type: array
        repository_id:
          title: Repository Id
          type: string
        tools:
          anyOf:
          - items:
              $ref: '#/components/schemas/RepositoryTool'
            type: array
          - type: 'null'
          title: Tools
      required:
      - id
      - repository
      - repository_dependencies
      - invalid_tools
      - repository_id
      - numeric_revision
      - changeset_revision
      - malicious
      - downloadable
      - missing_test_components
      - has_repository_dependencies
      - includes_tools
      - includes_tools_for_display_in_tool_panel
      title: RepositoryRevisionMetadata
      type: object
    RepositoryRevisionReadmes:
      additionalProperties:
        type: string
      title: RepositoryRevisionReadmes
      type: object
    RepositorySearchHit:
      properties:
        repository:
          $ref: '#/components/schemas/RepositorySearchResult'
        score:
          title: Score
          type: number
      required:
      - score
      - repository
      title: RepositorySearchHit
      type: object
    RepositorySearchResult:
      properties:
        approved:
          title: Approved
          type: boolean
        categories:
          title: Categories
          type: string
        description:
          title: Description
          type: string
        full_last_updated:
          title: Full Last Updated
          type: string
        homepage_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Homepage Url
        id:
          title: Id
          type: string
        last_update:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Update
        long_description:
          anyOf:
          - type: string
          - type: 'null'
          title: Long Description
        name:
          title: Name
          type: string
        remote_repository_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Remote Repository Url
        repo_lineage:
          title: Repo Lineage
          type: string
        repo_owner_username:
          title: Repo Owner Username
          type: string
        times_downloaded:
          title: Times Downloaded
          type: integer
      required:
      - id
      - name
      - repo_owner_username
      - description
      - full_last_updated
      - repo_lineage
      - approved
      - times_downloaded
      - categories
      title: RepositorySearchResult
      type: object
    RepositorySearchResults:
      properties:
        hits:
          items:
            $ref: '#/components/schemas/RepositorySearchHit'
          title: Hits
          type: array
        hostname:
          title: Hostname
          type: string
        page:
          title: Page
          type: string
        page_size:
          title: Page Size
          type: string
        total_results:
          title: Total Results
          type: string
      required:
      - total_results
      - page
      - page_size
      - hostname
      - hits
      title: RepositorySearchResults
      type: object
    RepositoryTool:
      properties:
        description:
          title: Description
          type: string
        guid:
          title: Guid
          type: string
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        requirements:
          items: {}
          title: Requirements
          type: array
        tool_config:
          title: Tool Config
          type: string
        tool_type:
          title: Tool Type
          type: string
        version:
          title: Version
          type: string
      required:
      - description
      - guid
      - id
      - name
      - requirements
      - tool_config
      - tool_type
      - version
      title: RepositoryTool
      type: object
    RepositoryUpdate:
      anyOf:
      - $ref: '#/components/schemas/ValidRepostiroyUpdateMessage'
      - $ref: '#/components/schemas/FailedRepositoryUpdateMessage'
      title: RepositoryUpdate
    ResetMetadataOnRepositoryResponse:
      properties:
        repository_status:
          items:
            type: string
          title: Repository Status
          type: array
        start_time:
          title: Start Time
          type: string
        status:
          title: Status
          type: string
        stop_time:
          title: Stop Time
          type: string
      required:
      - status
      - repository_status
      - start_time
      - stop_time
      title: ResetMetadataOnRepositoryResponse
      type: object
    Service:
      properties:
        contactUrl:
          anyOf:
          - format: uri
            minLength: 1
            type: string
          - type: 'null'
          description: URL of the contact for the provider of this service, e.g. a
            link to a contact form (RFC 3986 format), or an email (RFC 2368 format).
          examples:
          - mailto:support@example.com
          title: Contacturl
        createdAt:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Timestamp describing when the service was first deployed and
            available (RFC 3339 format)
          examples:
          - '2019-06-04T12:58:19Z'
          title: Createdat
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Description of the service. Should be human readable and provide
            information about the service.
          examples:
          - This service provides...
          title: Description
        documentationUrl:
          anyOf:
          - format: uri
            minLength: 1
            type: string
          - type: 'null'
          description: URL of the documentation of this service (RFC 3986 format).
            This should help someone learn how to use your service, including any
            specifics required to access data, e.g. authentication.
          examples:
          - https://docs.myservice.example.com
          title: Documentationurl
        environment:
          anyOf:
          - type: string
          - type: 'null'
          description: Environment the service is running in. Use this to distinguish
            between production, development and testing/staging deployments. Suggested
            values are prod, test, dev, staging. However this is advised and not enforced.
          examples:
          - test
          title: Environment
        id:
          description: Unique ID of this service. Reverse domain name notation is
            recommended, though not required. The identifier should attempt to be
            globally unique so it can be used in downstream aggregator services e.g.
            Service Registry.
          examples:
          - org.ga4gh.myservice
          title: Id
          type: string
        name:
          description: Name of this service. Should be human readable.
          examples:
          - My project
          title: Name
          type: string
        organization:
          allOf:
          - $ref: '#/components/schemas/Organization'
          description: Organization providing the service
        type:
          $ref: '#/components/schemas/ServiceType'
        updatedAt:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Timestamp describing when the service was last updated (RFC
            3339 format)
          examples:
          - '2019-06-04T12:58:19Z'
          title: Updatedat
        version:
          description: Version of the service being described. Semantic versioning
            is recommended, but other identifiers, such as dates or commit hashes,
            are also allowed. The version should be changed whenever the service is
            updated.
          examples:
          - 1.0.0
          title: Version
          type: string
      required:
      - id
      - name
      - type
      - organization
      - version
      title: Service
      type: object
    ServiceType:
      properties:
        artifact:
          description: Name of the API or GA4GH specification implemented. Official
            GA4GH types should be assigned as part of standards approval process.
            Custom artifacts are supported.
          examples:
          - beacon
          title: Artifact
          type: string
        group:
          description: Namespace in reverse domain name format. Use `org.ga4gh` for
            implementations compliant with official GA4GH specifications. For services
            with custom APIs not standardized by GA4GH, or implementations diverging
            from official GA4GH specifications, use a different namespace (e.g. your
            organization's reverse domain name).
          examples:
          - org.ga4gh
          title: Group
          type: string
        version:
          description: Version of the API or specification. GA4GH specifications use
            semantic versioning.
          examples:
          - 1.0.0
          title: Version
          type: string
      required:
      - group
      - artifact
      - version
      title: ServiceType
      type: object
    Tool:
      properties:
        aliases:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: "Support for this parameter is optional for tool registries\
            \ that support aliases.\nA list of strings that can be used to identify\
            \ this tool which could be  straight up URLs. \nThis can be used to expose\
            \ alternative ids (such as GUIDs) for a tool\nfor registries. Can be used\
            \ to match tools across registries."
          title: Aliases
        checker_url:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional url to the checker tool that will exit successfully
            if this tool produced the expected result given test data.
          title: Checker Url
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: The description of the tool.
          title: Description
        has_checker:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether this tool has a checker tool associated with it.
          title: Has Checker
        id:
          description: A unique identifier of the tool, scoped to this registry.
          examples:
          - 123456
          title: Id
          type: string
        meta_version:
          anyOf:
          - type: string
          - type: 'null'
          description: The version of this tool in the registry. Iterates when fields
            like the description, author, etc. are updated.
          title: Meta Version
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The name of the tool.
          title: Name
        organization:
          description: The organization that published the image.
          title: Organization
          type: string
        toolclass:
          $ref: '#/components/schemas/ToolClass'
        url:
          description: The URL for this tool in this registry.
          examples:
          - http://agora.broadinstitute.org/tools/123456
          title: Url
          type: string
        versions:
          description: A list of versions for this tool.
          items:
            $ref: '#/components/schemas/ToolVersion'
          title: Versions
          type: array
      required:
      - url
      - id
      - organization
      - toolclass
      - versions
      title: Tool
      type: object
    ToolClass:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: A longer explanation of what this class is and what it can
            accomplish.
          title: Description
        id:
          anyOf:
          - type: string
          - type: 'null'
          description: The unique identifier for the class.
          title: Id
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: A short friendly name for the class.
          title: Name
      title: ToolClass
      type: object
    ToolVersion:
      properties:
        author:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Contact information for the author of this version of the tool
            in the registry. (More complex authorship information is handled by the
            descriptor).
          title: Author
        containerfile:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Reports if this tool has a containerfile available. (For Docker-based
            tools, this would indicate the presence of a Dockerfile)
          title: Containerfile
        descriptor_type:
          anyOf:
          - items:
              $ref: '#/components/schemas/DescriptorType'
            type: array
          - type: 'null'
          description: The type (or types) of descriptors available.
          title: Descriptor Type
        descriptor_type_version:
          anyOf:
          - additionalProperties:
              items:
                $ref: '#/components/schemas/DescriptorTypeVersion'
              type: array
            type: object
          - type: 'null'
          description: A map providing information about the language versions used
            in this tool. The keys should be the same values used in the `descriptor_type`
            field, and the value should be an array of all the language versions used
            for the given `descriptor_type`. Depending on the `descriptor_type` (e.g.
            CWL) multiple version values may be used in a single tool.
          examples:
          - "{\n  \"WDL\": [\"1.0\", \"1.0\"],\n  \"CWL\": [\"v1.0.2\"],\n  \"NFL\"\
            : [\"DSL2\"]\n}\n"
          title: Descriptor Type Version
        id:
          description: An identifier of the version of this tool for this particular
            tool registry.
          examples:
          - v1
          title: Id
          type: string
        images:
          anyOf:
          - items:
              $ref: '#/components/schemas/ImageData'
            type: array
          - type: 'null'
          description: All known docker images (and versions/hashes) used by this
            tool. If the tool has to evaluate any of the docker images strings at
            runtime, those ones cannot be reported here.
          title: Images
        included_apps:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: An array of IDs for the applications that are stored inside
            this tool.
          examples:
          - https://bio.tools/tool/mytum.de/SNAP2/1
          - https://bio.tools/bioexcel_seqqc
          title: Included Apps
        is_production:
          anyOf:
          - type: boolean
          - type: 'null'
          description: This version of a tool is guaranteed to not change over time
            (for example, a  tool built from a tag in git as opposed to a branch).
            A production quality tool  is required to have a checksum
          title: Is Production
        meta_version:
          anyOf:
          - type: string
          - type: 'null'
          description: The version of this tool version in the registry. Iterates
            when fields like the description, author, etc. are updated.
          title: Meta Version
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The name of the version.
          title: Name
        signed:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Reports whether this version of the tool has been signed.
          title: Signed
        url:
          description: The URL for this tool version in this registry.
          examples:
          - http://agora.broadinstitute.org/tools/123456/versions/1
          title: Url
          type: string
        verified:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Reports whether this tool has been verified by a specific organization
            or individual.
          title: Verified
        verified_source:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Source of metadata that can support a verified tool, such as
            an email or URL.
          title: Verified Source
      required:
      - url
      - id
      title: ToolVersion
      type: object
    UiChangePasswordRequest:
      properties:
        current:
          title: Current
          type: string
        password:
          title: Password
          type: string
      required:
      - current
      - password
      title: UiChangePasswordRequest
      type: object
    UiLoginRequest:
      properties:
        login:
          title: Login
          type: string
        password:
          title: Password
          type: string
        session_csrf_token:
          title: Session Csrf Token
          type: string
      required:
      - session_csrf_token
      - login
      - password
      title: UiLoginRequest
      type: object
    UiLoginResponse:
      properties: {}
      title: UiLoginResponse
      type: object
    UiLogoutRequest:
      properties:
        logout_all:
          default: false
          title: Logout All
          type: boolean
        session_csrf_token:
          title: Session Csrf Token
          type: string
      required:
      - session_csrf_token
      title: UiLogoutRequest
      type: object
    UiLogoutResponse:
      properties: {}
      title: UiLogoutResponse
      type: object
    UiRegisterRequest:
      properties:
        bear_field:
          title: Bear Field
          type: string
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
        username:
          title: Username
          type: string
      required:
      - email
      - username
      - password
      - bear_field
      title: UiRegisterRequest
      type: object
    UiRegisterResponse:
      properties:
        activation_error:
          default: false
          title: Activation Error
          type: boolean
        activation_sent:
          default: false
          title: Activation Sent
          type: boolean
        contact_email:
          anyOf:
          - type: string
          - type: 'null'
          title: Contact Email
        email:
          title: Email
          type: string
      required:
      - email
      title: UiRegisterResponse
      type: object
    UserV2:
      properties:
        id:
          title: Id
          type: string
        is_admin:
          title: Is Admin
          type: boolean
        username:
          title: Username
          type: string
      required:
      - id
      - username
      - is_admin
      title: UserV2
      type: object
    ValidRepostiroyUpdateMessage:
      properties:
        message:
          title: Message
          type: string
      required:
      - message
      title: ValidRepostiroyUpdateMessage
      type: object
    ValidTool:
      properties:
        add_to_tool_panel:
          title: Add To Tool Panel
          type: boolean
        description:
          title: Description
          type: string
        guid:
          title: Guid
          type: string
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        requirements:
          items: {}
          title: Requirements
          type: array
        tests:
          items: {}
          title: Tests
          type: array
        tool_config:
          title: Tool Config
          type: string
        tool_type:
          title: Tool Type
          type: string
        version:
          title: Version
          type: string
        version_string_cmd:
          anyOf:
          - type: string
          - type: 'null'
          title: Version String Cmd
      required:
      - add_to_tool_panel
      - description
      - guid
      - id
      - name
      - requirements
      - tests
      - tool_config
      - tool_type
      - version
      title: ValidTool
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    Version:
      properties:
        api_version:
          default: v1
          title: Api Version
          type: string
        version:
          title: Version
          type: string
        version_major:
          title: Version Major
          type: string
      required:
      - version_major
      - version
      title: Version
      type: object
  securitySchemes:
    APIKeyCookie:
      in: cookie
      name: galaxycommunitysession
      type: apiKey
    APIKeyHeader:
      in: header
      name: x-api-key
      type: apiKey
    APIKeyQuery:
      in: query
      name: key
      type: apiKey
info:
  description: This API allows you to manage the Tool Shed repositories.
  license:
    name: MIT
    url: https://github.com/galaxyproject/galaxy/blob/dev/LICENSE.txt
  title: Galaxy Tool Shed API
  version: 0.1.0
openapi: 3.1.0
paths:
  /api/authenticate/baseauth:
    get:
      operationId: authenticate__baseauth
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: Successful Response
      summary: Returns returns an API key for authenticated user based on BaseAuth
        headers.
      tags:
      - authenticate
      - authenticate
  /api/categories:
    get:
      description: index category
      operationId: categories__index
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                title: Response Categories  Index
                type: array
          description: Successful Response
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Index
      tags:
      - categories
      - categories
    post:
      description: create a category
      operationId: categories__create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Create
      tags:
      - categories
      - categories
  /api/categories/{encoded_category_id}:
    get:
      description: show category
      operationId: categories__show
      parameters:
      - description: The encoded database identifier of the category.
        in: path
        name: encoded_category_id
        required: true
        schema:
          description: The encoded database identifier of the category.
          title: Category ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Show
      tags:
      - categories
      - categories
  /api/categories/{encoded_category_id}/repositories:
    get:
      description: display repositories by category
      operationId: categories__repositories
      parameters:
      - description: The encoded database identifier of the category.
        in: path
        name: encoded_category_id
        required: true
        schema:
          description: The encoded database identifier of the category.
          title: Category ID
          type: string
      - in: query
        name: installable
        required: false
        schema:
          default: false
          title: Installable?
          type: boolean
      - in: query
        name: sort_key
        required: false
        schema:
          default: name
          title: Sort Key
          type: string
      - in: query
        name: sort_order
        required: false
        schema:
          default: asc
          title: Sort Order
          type: string
      - in: query
        name: page
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Page
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoriesByCategory'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Repositories
      tags:
      - categories
      - categories
  /api/ga4gh/trs/v2/service-info:
    get:
      operationId: tools_trs_service_info
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successful Response
      summary: Service Info
      tags:
      - tools
      - tools
  /api/ga4gh/trs/v2/toolClasses:
    get:
      operationId: tools__trs_tool_classes
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolClass'
                title: Response Tools  Trs Tool Classes
                type: array
          description: Successful Response
      summary: Tool Classes
      tags:
      - tools
      - tools
  /api/ga4gh/trs/v2/tools:
    get:
      operationId: tools__trs_index
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Trs Index
      tags:
      - tools
      - tools
  /api/ga4gh/trs/v2/tools/{tool_id}:
    get:
      operationId: tools__trs_get
      parameters:
      - description: See also https://ga4gh.github.io/tool-registry-service-schemas/DataModel/#trs-tool-and-trs-tool-version-ids
        in: path
        name: tool_id
        required: true
        schema:
          description: See also https://ga4gh.github.io/tool-registry-service-schemas/DataModel/#trs-tool-and-trs-tool-version-ids
          title: GA4GH TRS Tool ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tool'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Trs Get
      tags:
      - tools
      - tools
  /api/ga4gh/trs/v2/tools/{tool_id}/versions:
    get:
      operationId: tools__trs_get_versions
      parameters:
      - description: See also https://ga4gh.github.io/tool-registry-service-schemas/DataModel/#trs-tool-and-trs-tool-version-ids
        in: path
        name: tool_id
        required: true
        schema:
          description: See also https://ga4gh.github.io/tool-registry-service-schemas/DataModel/#trs-tool-and-trs-tool-version-ids
          title: GA4GH TRS Tool ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolVersion'
                title: Response Tools  Trs Get Versions
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Trs Get Versions
      tags:
      - tools
      - tools
  /api/repositories:
    get:
      description: Get a list of repositories or perform a search.
      operationId: repositories__index
      parameters:
      - in: query
        name: q
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search Query
      - in: query
        name: page
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 1
          title: Page
      - in: query
        name: page_size
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          title: Page Size
      - in: query
        name: deleted
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          title: Deleted?
      - in: query
        name: owner
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Owner
      - in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/RepositorySearchResults'
                - items:
                    $ref: '#/components/schemas/Repository'
                  type: array
                title: Response Repositories  Index
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Index
      tags:
      - repositories
      - repositories
    post:
      description: create a new repository
      operationId: repositories__create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRepositoryRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Create
      tags:
      - repositories
      - repositories
  /api/repositories/get_ordered_installable_revisions:
    get:
      description: Get an ordered list of the repository changeset revisions that
        are installable
      operationId: repositories__get_ordered_installable_revisions
      parameters:
      - in: query
        name: owner
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Owner
      - in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      - in: query
        name: tsr_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: TSR ID
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Repositories  Get Ordered Installable Revisions
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Ordered Installable Revisions
      tags:
      - repositories
      - repositories
  /api/repositories/get_repository_revision_install_info:
    get:
      description: Get information used by the install client to install this repository.
      operationId: repositories__legacy_install_info
      parameters:
      - description: Name of the target repository.
        in: query
        name: name
        required: true
        schema:
          description: Name of the target repository.
          title: Name
          type: string
      - description: Owner of the target repository.
        in: query
        name: owner
        required: true
        schema:
          description: Owner of the target repository.
          title: owner
          type: string
      - description: Changeset of the target repository.
        in: query
        name: changeset_revision
        required: true
        schema:
          description: Changeset of the target repository.
          title: changeset
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items: {}
                title: Response Repositories  Legacy Install Info
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Legacy Install Info
      tags:
      - repositories
      - repositories
  /api/repositories/install_info:
    get:
      description: Get information used by the install client to install this repository.
      operationId: repositories__install_info
      parameters:
      - description: Name of the target repository.
        in: query
        name: name
        required: true
        schema:
          description: Name of the target repository.
          title: Name
          type: string
      - description: Owner of the target repository.
        in: query
        name: owner
        required: true
        schema:
          description: Owner of the target repository.
          title: owner
          type: string
      - description: Changeset of the target repository.
        in: query
        name: changeset_revision
        required: true
        schema:
          description: Changeset of the target repository.
          title: changeset
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallInfo'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Install Info
      tags:
      - repositories
      - repositories
  /api/repositories/reset_metadata_on_repository:
    post:
      description: reset metadata on a repository
      operationId: repositories__reset_legacy
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetMetadataOnRepositoryResponse'
          description: Successful Response
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Reset Metadata On Repository Legacy
      tags:
      - repositories
      - repositories
  /api/repositories/updates:
    get:
      operationId: repositories__update
      parameters:
      - in: query
        name: owner
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Owner
      - in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      - in: query
        name: changeset_revision
        required: true
        schema:
          title: Changeset Revision
          type: string
      - in: query
        name: hexlify
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          title: Hexlify response
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Updates
      tags:
      - repositories
      - repositories
  /api/repositories/{encoded_repository_id}:
    get:
      operationId: repositories__show
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedRepository'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Show
      tags:
      - repositories
      - repositories
  /api/repositories/{encoded_repository_id}/allow_push:
    get:
      operationId: repositories__show_allow_push
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Repositories  Show Allow Push
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Show Allow Push
      tags:
      - repositories
      - repositories
  /api/repositories/{encoded_repository_id}/allow_push/{username}:
    delete:
      operationId: repositories__remove_allow_push
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      - description: The target username.
        in: path
        name: username
        required: true
        schema:
          description: The target username.
          title: Username
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Repositories  Remove Allow Push
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Remove Allow Push
      tags:
      - repositories
      - repositories
    post:
      operationId: repositories__add_allow_push
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      - description: The target username.
        in: path
        name: username
        required: true
        schema:
          description: The target username.
          title: Username
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Repositories  Add Allow Push
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Add Allow Push
      tags:
      - repositories
      - repositories
  /api/repositories/{encoded_repository_id}/changeset_revision:
    post:
      description: upload new revision to the repository
      operationId: repositories__create_revision
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      - description: Set commit message as a query parameter.
        in: query
        name: commit_message
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Set commit message as a query parameter.
          title: Commit Message
      requestBody:
        content:
          multipart/form-data:
            schema:
              allOf:
              - $ref: '#/components/schemas/Body_repositories__create_revision'
              title: Body
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryUpdate'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Create Changeset Revision
      tags:
      - repositories
      - repositories
  /api/repositories/{encoded_repository_id}/deprecated:
    delete:
      operationId: repositories__unset_deprecated
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Unset Deprecated
      tags:
      - repositories
      - repositories
    put:
      operationId: repositories__set_deprecated
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Set Deprecated
      tags:
      - repositories
      - repositories
  /api/repositories/{encoded_repository_id}/metadata:
    get:
      description: Get information about repository metadata
      operationId: repositories__metadata
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      - description: Include only downloadable repositories.
        in: query
        name: downloadable_only
        required: false
        schema:
          default: true
          description: Include only downloadable repositories.
          title: downloadable_only
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Repositories  Metadata
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Metadata
      tags:
      - repositories
      - repositories
  /api/repositories/{encoded_repository_id}/permissions:
    get:
      operationId: repositories__permissions
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryPermissions'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Permissions
      tags:
      - repositories
      - repositories
  /api/repositories/{encoded_repository_id}/reset_metadata:
    post:
      description: reset metadata on a repository
      operationId: repositories__reset
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetMetadataOnRepositoryResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Reset Metadata On Repository
      tags:
      - repositories
      - repositories
  /api/repositories/{encoded_repository_id}/revisions/{changeset_revision}/malicious:
    delete:
      operationId: repositories__unset_malicious
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      - description: The changeset revision corresponding to the target revision of
          the target repository.
        in: path
        name: changeset_revision
        required: true
        schema:
          description: The changeset revision corresponding to the target revision
            of the target repository.
          title: Change Revision
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Unset Malicious
      tags:
      - repositories
      - repositories
    put:
      operationId: repositories__set_malicious
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      - description: The changeset revision corresponding to the target revision of
          the target repository.
        in: path
        name: changeset_revision
        required: true
        schema:
          description: The changeset revision corresponding to the target revision
            of the target repository.
          title: Change Revision
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Set Malicious
      tags:
      - repositories
      - repositories
  /api/repositories/{encoded_repository_id}/revisions/{changeset_revision}/readmes:
    get:
      description: fetch readmes for repository revision
      operationId: repositories__readmes
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      - description: The changeset revision corresponding to the target revision of
          the target repository.
        in: path
        name: changeset_revision
        required: true
        schema:
          description: The changeset revision corresponding to the target revision
            of the target repository.
          title: Change Revision
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryRevisionReadmes'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Readmes
      tags:
      - repositories
      - repositories
  /api/tools:
    get:
      operationId: tools__index
      parameters:
      - in: query
        name: q
        required: true
        schema:
          title: Search Query
          type: string
      - in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
      - in: query
        name: page_size
        required: false
        schema:
          default: 10
          title: Page Size
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Index
      tags:
      - tools
      - tools
  /api/tools/build_search_index:
    put:
      description: 'Not part of the stable API, just something to simplify

        bootstrapping tool sheds, scripting, testing, etc...'
      operationId: tools__build_search_index
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildSearchIndexResponse'
          description: Successful Response
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Build Search Index
      tags:
      - tools
      - tools
  /api/users:
    get:
      description: index users
      operationId: users__index
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserV2'
                title: Response Users  Index
                type: array
          description: Successful Response
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Index
      tags:
      - users
      - users
    post:
      description: create a user
      operationId: users__create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserV2'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Create
      tags:
      - users
      - users
  /api/users/current:
    get:
      description: show current user
      operationId: users__current
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserV2'
          description: Successful Response
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Current
      tags:
      - users
      - users
  /api/users/{encoded_user_id}:
    get:
      description: show a user
      operationId: users__show
      parameters:
      - description: The encoded database identifier of the user.
        in: path
        name: encoded_user_id
        required: true
        schema:
          description: The encoded database identifier of the user.
          title: User ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserV2'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Show
      tags:
      - users
      - users
  /api/users/{encoded_user_id}/api_key:
    delete:
      operationId: users__delete_api_key
      parameters:
      - description: The encoded database identifier of the user.
        in: path
        name: encoded_user_id
        required: true
        schema:
          description: The encoded database identifier of the user.
          title: User ID
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Delete the current API key of the user
      tags:
      - users
      - users
    get:
      operationId: users__get_or_create_api_key
      parameters:
      - description: The encoded database identifier of the user.
        in: path
        name: encoded_user_id
        required: true
        schema:
          description: The encoded database identifier of the user.
          title: User ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Users  Get Or Create Api Key
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Return the user's API key
      tags:
      - users
      - users
    post:
      operationId: users__create_api_key
      parameters:
      - description: The encoded database identifier of the user.
        in: path
        name: encoded_user_id
        required: true
        schema:
          description: The encoded database identifier of the user.
          title: User ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Users  Create Api Key
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Creates a new API key for the user
      tags:
      - users
      - users
  /api/version:
    get:
      operationId: configuration__version
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Successful Response
      summary: Version
      tags:
      - configuration
      - configuration
  /api_internal/change_password:
    put:
      description: reset a user
      operationId: users__internal_change_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UiChangePasswordRequest'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Change Password
      tags:
      - users
      - users
  /api_internal/login:
    put:
      description: login to web UI
      operationId: users__internal_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UiLoginRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiLoginResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Internal Login
      tags:
      - users
      - users
  /api_internal/logout:
    put:
      description: logout of web UI
      operationId: users__internal_logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UiLogoutRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiLogoutResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Internal Logout
      tags:
      - users
      - users
  /api_internal/register:
    post:
      description: register a user
      operationId: users__internal_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UiRegisterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiRegisterResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      summary: Register
      tags:
      - users
      - users
  /api_internal/repositories/{encoded_repository_id}/metadata:
    get:
      description: Get information about repository metadata
      operationId: repositories__internal_metadata
      parameters:
      - description: The encoded database identifier of the repository.
        in: path
        name: encoded_repository_id
        required: true
        schema:
          description: The encoded database identifier of the repository.
          title: Repository ID
          type: string
      - description: Include only downloadable repositories.
        in: query
        name: downloadable_only
        required: false
        schema:
          default: true
          description: Include only downloadable repositories.
          title: downloadable_only
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryMetadata'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Metadata Internal
      tags:
      - repositories
      - repositories
