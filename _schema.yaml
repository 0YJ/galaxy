components:
  schemas:
    APIKeyModel:
      properties:
        create_time:
          description: The time and date this API key was created.
          format: date-time
          title: Create Time
          type: string
        key:
          description: API key to interact with the Galaxy API
          title: Key
          type: string
      required:
      - key
      - create_time
      title: APIKeyModel
      type: object
    APIKeyResponse:
      properties:
        api_key:
          title: Api Key
          type: string
      required:
      - api_key
      title: APIKeyResponse
      type: object
    AccessMethod:
      properties:
        access_id:
          anyOf:
          - type: string
          - type: 'null'
          description: An arbitrary string to be passed to the `/access` method to
            get an `AccessURL`. This string must be unique within the scope of a single
            object. Note that at least one of `access_url` and `access_id` must be
            provided.
          title: Access Id
        access_url:
          anyOf:
          - $ref: '#/components/schemas/AccessURL'
          - type: 'null'
        authorizations:
          anyOf:
          - $ref: '#/components/schemas/Authorizations'
          - type: 'null'
        region:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the region in the cloud service provider that the object
            belongs to.
          examples:
          - us-east-1
          title: Region
        type:
          allOf:
          - $ref: '#/components/schemas/AccessMethodType'
          description: Type of the access method.
      required:
      - type
      title: AccessMethod
      type: object
    AccessMethodType:
      enum:
      - s3
      - gs
      - ftp
      - gsiftp
      - globus
      - htsget
      - https
      - file
      title: AccessMethodType
      type: string
    AccessURL:
      properties:
        headers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: An optional list of headers to include in the HTTP request
            to `url`. These headers can be used to provide auth tokens required to
            fetch the object bytes.
          examples:
          - 'Authorization: Basic Z2E0Z2g6ZHJz'
          title: Headers
        url:
          description: A fully resolvable URL that can be used to fetch the actual
            object bytes.
          title: Url
          type: string
      required:
      - url
      title: AccessURL
      type: object
    ActionLink:
      description: An action link to be displayed in the notification as a button.
      properties:
        action_name:
          description: The name of the action, will be the button title.
          title: Action name
          type: string
        link:
          description: The link to be opened when the button is clicked.
          title: Link
          type: string
      required:
      - action_name
      - link
      title: ActionLink
      type: object
    AnonUserModel:
      properties:
        nice_total_disk_usage:
          description: Size of all non-purged, unique datasets of the user in a nice
            format.
          title: Nice total disc usage
          type: string
        quota_percent:
          description: Percentage of the storage quota applicable to the user.
          title: Quota percent
        total_disk_usage:
          description: Size of all non-purged, unique datasets of the user in bytes.
          title: Total disk usage
          type: number
      required:
      - total_disk_usage
      - nice_total_disk_usage
      title: AnonUserModel
      type: object
    ArchiveHistoryRequestPayload:
      properties:
        archive_export_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the export record to associate with this
            history archival.This is used to be able to recover the history from the
            export record.
          title: Export Record ID
        purge_history:
          default: false
          description: Whether to purge the history after archiving it. It requires
            an `archive_export_id` to be set.
          title: Purge History
          type: boolean
      title: ArchiveHistoryRequestPayload
      type: object
    ArchivedHistoryDetailed:
      additionalProperties: true
      properties:
        annotation:
          anyOf:
          - type: string
          - type: 'null'
          description: An annotation to provide details or to help understand the
            purpose and usage of this item.
          title: Annotation
        archived:
          description: Whether this item has been archived and is no longer active.
          title: Archived
          type: boolean
        contents_url:
          description: The relative URL to access the contents of this History.
          title: Contents URL
          type: string
        count:
          description: The number of items in the history.
          title: Count
          type: integer
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        deleted:
          description: Whether this item is marked as deleted.
          title: Deleted
          type: boolean
        export_record_data:
          anyOf:
          - $ref: '#/components/schemas/ExportRecordData'
          - type: 'null'
          description: The export record data associated with this archived history.
            Used to recover the history.
          title: Export Record Data
        genome_build:
          anyOf:
          - type: string
          - type: 'null'
          default: '?'
          description: TODO
          title: Genome Build
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        importable:
          description: Whether this History can be imported by other users with a
            shared link.
          title: Importable
          type: boolean
        model_class:
          const: History
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the history.
          title: Name
          type: string
        preferred_object_store_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the object store that should be used to store new
            datasets in this history.
          title: Preferred Object Store ID
        published:
          description: Whether this resource is currently publicly available to all
            users.
          title: Published
          type: boolean
        purged:
          description: Whether this item has been permanently removed.
          title: Purged
          type: boolean
        size:
          description: The total size of the contents of this history in bytes.
          title: Size
          type: integer
        slug:
          anyOf:
          - type: string
          - type: 'null'
          description: Part of the URL to uniquely identify this History by link in
            a readable way.
          title: Slug
        state:
          allOf:
          - $ref: '#/components/schemas/DatasetState'
          description: The current state of the History based on the states of the
            datasets it contains.
          title: State
        state_details:
          additionalProperties:
            type: integer
          description: A dictionary keyed to possible dataset states and valued with
            the number of datasets in this history that have those states.
          title: State Counts
          type: object
        state_ids:
          additionalProperties:
            items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          description: A dictionary keyed to possible dataset states and valued with
            lists containing the ids of each HDA in that state.
          title: State IDs
          type: object
        tags:
          $ref: '#/components/schemas/TagCollection'
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
        user_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the user that owns this History.
          title: User ID
        username:
          anyOf:
          - type: string
          - type: 'null'
          description: Owner of the history
          title: Username
        username_and_slug:
          anyOf:
          - type: string
          - type: 'null'
          description: The relative URL in the form of /u/{username}/h/{slug}
          title: Username and slug
      required:
      - model_class
      - id
      - name
      - deleted
      - purged
      - archived
      - url
      - published
      - count
      - annotation
      - tags
      - update_time
      - contents_url
      - size
      - create_time
      - importable
      - state
      - state_ids
      - state_details
      title: ArchivedHistoryDetailed
      type: object
    ArchivedHistorySummary:
      additionalProperties: true
      properties:
        annotation:
          anyOf:
          - type: string
          - type: 'null'
          description: An annotation to provide details or to help understand the
            purpose and usage of this item.
          title: Annotation
        archived:
          description: Whether this item has been archived and is no longer active.
          title: Archived
          type: boolean
        count:
          description: The number of items in the history.
          title: Count
          type: integer
        deleted:
          description: Whether this item is marked as deleted.
          title: Deleted
          type: boolean
        export_record_data:
          anyOf:
          - $ref: '#/components/schemas/ExportRecordData'
          - type: 'null'
          description: The export record data associated with this archived history.
            Used to recover the history.
          title: Export Record Data
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        model_class:
          const: History
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the history.
          title: Name
          type: string
        preferred_object_store_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the object store that should be used to store new
            datasets in this history.
          title: Preferred Object Store ID
        published:
          description: Whether this resource is currently publicly available to all
            users.
          title: Published
          type: boolean
        purged:
          description: Whether this item has been permanently removed.
          title: Purged
          type: boolean
        tags:
          $ref: '#/components/schemas/TagCollection'
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
      required:
      - model_class
      - id
      - name
      - deleted
      - purged
      - archived
      - url
      - published
      - count
      - annotation
      - tags
      - update_time
      title: ArchivedHistorySummary
      type: object
    AsyncFile:
      properties:
        storage_request_id:
          format: uuid
          title: Storage Request Id
          type: string
        task:
          $ref: '#/components/schemas/AsyncTaskResultSummary'
      required:
      - storage_request_id
      - task
      title: AsyncFile
      type: object
    AsyncTaskResultSummary:
      properties:
        id:
          description: Celery AsyncResult ID for this task
          title: ID
          type: string
        ignored:
          description: Indicated whether the Celery AsyncResult will be available
            for retrieval
          title: Ignored
          type: boolean
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name of task being done derived from Celery AsyncResult
        queue:
          anyOf:
          - type: string
          - type: 'null'
          title: Queue of task being done derived from Celery AsyncResult
      required:
      - id
      - ignored
      title: AsyncTaskResultSummary
      type: object
    Authorizations:
      properties:
        bearer_auth_issuers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: If authorizations contain `BearerAuth` this is an optional
            list of issuers that may authorize access to this object. The caller must
            provide a token from one of these issuers. If this is empty or missing
            it assumed the caller knows which token to send via other means. It is
            strongly recommended that the caller validate that it is appropriate to
            send the requested token to the DRS server to mitigate attacks by malicious
            DRS servers requesting credentials they should not have.
          title: Bearer Auth Issuers
        passport_auth_issuers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: If authorizations contain `PassportAuth` this is a required
            list of visa issuers (as found in a visa's `iss` claim) that may authorize
            access to this object. The caller must only provide passports that contain
            visas from this list. It is strongly recommended that the caller validate
            that it is appropriate to send the requested passport/visa to the DRS
            server to mitigate attacks by malicious DRS servers requesting credentials
            they should not have.
          title: Passport Auth Issuers
        supported_types:
          anyOf:
          - items:
              $ref: '#/components/schemas/SupportedType'
            type: array
          - type: 'null'
          description: An Optional list of support authorization types. More than
            one can be supported and tried in sequence. Defaults to `None` if empty
            or missing.
          title: Supported Types
      title: Authorizations
      type: object
    BadgeDict:
      properties:
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        source:
          enum:
          - admin
          - galaxy
          title: Source
          type: string
        type:
          anyOf:
          - enum:
            - faster
            - slower
            - short_term
            - backed_up
            - not_backed_up
            - more_secure
            - less_secure
            - more_stable
            - less_stable
            type: string
          - enum:
            - cloud
            - quota
            - no_quota
            - restricted
            type: string
          title: Type
      required:
      - type
      - message
      - source
      title: BadgeDict
      type: object
    BasicRoleModel:
      properties:
        id:
          description: Encoded ID of the role
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        name:
          description: Name of the role
          title: Name
          type: string
        type:
          description: Type or category of the role
          title: Type
          type: string
      required:
      - id
      - name
      - type
      title: BasicRoleModel
      type: object
    Body_create_api_histories_post:
      properties:
        all_datasets:
          default: true
          title: All Datasets
        archive_file:
          title: Archive File
        archive_source:
          title: Archive Source
        archive_type:
          default: url
          title: Archive Type
        history_id:
          title: History Id
        name:
          title: Name
      title: Body_create_api_histories_post
      type: object
    Body_fetch_form_api_tools_fetch_post:
      properties:
        files:
          anyOf:
          - items:
              format: binary
              type: string
            type: array
          - type: 'null'
          title: Files
        history_id:
          title: History Id
        targets:
          title: Targets
      required:
      - history_id
      - targets
      title: Body_fetch_form_api_tools_fetch_post
      type: object
    BroadcastNotificationContent:
      properties:
        action_links:
          anyOf:
          - items:
              $ref: '#/components/schemas/ActionLink'
            type: array
          - type: 'null'
          description: The optional action links (buttons) to be displayed in the
            notification.
          title: Action links
        category:
          const: broadcast
          default: broadcast
          title: Category
        message:
          description: The message of the notification (supports Markdown).
          title: Message
          type: string
        subject:
          description: The subject of the notification.
          title: Subject
          type: string
      required:
      - subject
      - message
      title: BroadcastNotificationContent
      type: object
    BroadcastNotificationCreateRequest:
      description: A notification create request specific for broadcasting.
      properties:
        category:
          const: broadcast
          default: broadcast
          title: Category
        content:
          allOf:
          - $ref: '#/components/schemas/BroadcastNotificationContent'
          description: The content of the broadcast notification. Broadcast notifications
            are displayed prominently to all users and can contain action links to
            redirect the user to a specific page.
          title: Content
        expiration_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time when the notification should expire. By default it
            will expire after 6 months. Expired notifications will be permanently
            deleted.
          title: Expiration time
        publication_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time when the notification should be published. Notifications
            can be created and then scheduled to be published at a later time.
          title: Publication time
        source:
          description: The source of the notification. Represents the agent that created
            the notification. E.g. 'galaxy' or 'admin'.
          title: Source
          type: string
        variant:
          allOf:
          - $ref: '#/components/schemas/NotificationVariant'
          description: The variant of the notification. Represents the intent or relevance
            of the notification. E.g. 'info' or 'urgent'.
          title: Variant
      required:
      - source
      - variant
      - content
      title: BroadcastNotificationCreateRequest
      type: object
    BroadcastNotificationListResponse:
      description: A list of broadcast notifications.
      items:
        $ref: '#/components/schemas/BroadcastNotificationResponse'
      title: BroadcastNotificationListResponse
      type: array
    BroadcastNotificationResponse:
      description: A notification response specific for broadcasting.
      properties:
        category:
          const: broadcast
          default: broadcast
          title: Category
        content:
          $ref: '#/components/schemas/BroadcastNotificationContent'
        create_time:
          description: The time when the notification was created.
          format: date-time
          title: Create time
          type: string
        expiration_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time when the notification will expire. If not set, the
            notification will never expire. Expired notifications will be permanently
            deleted.
          title: Expiration time
        id:
          description: The encoded ID of the notification.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        publication_time:
          description: The time when the notification was published. Notifications
            can be created and then published at a later time.
          format: date-time
          title: Publication time
          type: string
        source:
          description: The source of the notification. Represents the agent that created
            the notification. E.g. 'galaxy' or 'admin'.
          title: Source
          type: string
        update_time:
          description: The time when the notification was last updated.
          format: date-time
          title: Update time
          type: string
        variant:
          allOf:
          - $ref: '#/components/schemas/NotificationVariant'
          description: The variant of the notification. Represents the intent or relevance
            of the notification. E.g. 'info' or 'urgent'.
          title: Variant
      required:
      - id
      - source
      - variant
      - create_time
      - update_time
      - publication_time
      - content
      title: BroadcastNotificationResponse
      type: object
    BrowsableFilesSourcePlugin:
      additionalProperties: true
      properties:
        browsable:
          const: true
          title: Browsable
        doc:
          description: Documentation or extended description for this plugin.
          examples:
          - Galaxy's library import directory
          title: Documentation
          type: string
        id:
          description: The `FilesSource` plugin identifier
          examples:
          - _import
          title: ID
          type: string
        label:
          description: The display label for this plugin.
          examples:
          - Library Import Directory
          title: Label
          type: string
        requires_groups:
          anyOf:
          - type: string
          - type: 'null'
          description: Only users belonging to the groups specified here can access
            this files source.
          title: Requires groups
        requires_roles:
          anyOf:
          - type: string
          - type: 'null'
          description: Only users with the roles specified here can access this files
            source.
          title: Requires roles
        type:
          description: The type of the plugin.
          examples:
          - gximport
          title: Type
          type: string
        uri_root:
          description: The URI root used by this type of plugin.
          examples:
          - gximport://
          title: URI root
          type: string
        writable:
          description: Whether this files source plugin allows write access.
          examples:
          - false
          title: Writeable
          type: boolean
      required:
      - id
      - type
      - label
      - doc
      - browsable
      - writable
      - uri_root
      title: BrowsableFilesSourcePlugin
      type: object
    BulkOperationItemError:
      properties:
        error:
          title: Error
          type: string
        item:
          $ref: '#/components/schemas/EncodedHistoryContentItem'
      required:
      - item
      - error
      title: BulkOperationItemError
      type: object
    ChangeDatatypeOperationParams:
      properties:
        datatype:
          title: Datatype
          type: string
        type:
          const: change_datatype
          title: Type
      required:
      - type
      - datatype
      title: ChangeDatatypeOperationParams
      type: object
    ChangeDbkeyOperationParams:
      properties:
        dbkey:
          title: Dbkey
          type: string
        type:
          const: change_dbkey
          title: Type
      required:
      - type
      - dbkey
      title: ChangeDbkeyOperationParams
      type: object
    CheckForUpdatesResponse:
      properties:
        message:
          description: Unstructured description of tool shed updates discovered or
            failure
          title: Message
          type: string
        status:
          description: '''ok'' or ''error'''
          enum:
          - ok
          - error
          title: Status
          type: string
      required:
      - status
      - message
      title: CheckForUpdatesResponse
      type: object
    Checksum:
      properties:
        checksum:
          description: The hex-string encoded checksum for the data
          title: Checksum
          type: string
        type:
          description: 'The digest method used to create the checksum.

            The value (e.g. `sha-256`) SHOULD be listed as `Hash Name String` in the
            https://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg[IANA
            Named Information Hash Algorithm Registry]. Other values MAY be used,
            as long as implementors are aware of the issues discussed in https://tools.ietf.org/html/rfc6920#section-9.4[RFC6920].

            GA4GH may provide more explicit guidance for use of non-IANA-registered
            algorithms in the future. Until then, if implementers do choose such an
            algorithm (e.g. because it''s implemented by their storage provider),
            they SHOULD use an existing standard `type` value such as `md5`, `etag`,
            `crc32c`, `trunc512`, or `sha1`.'
          examples:
          - sha-256
          title: Type
          type: string
      required:
      - checksum
      - type
      title: Checksum
      type: object
    CleanableItemsSummary:
      properties:
        total_items:
          description: The total number of items that could be purged.
          title: Total Items
          type: integer
        total_size:
          description: The total size in bytes that can be recovered by purging all
            the items.
          title: Total Size
          type: integer
      required:
      - total_size
      - total_items
      title: CleanableItemsSummary
      type: object
    CleanupStorageItemsRequest:
      properties:
        item_ids:
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: Item Ids
          type: array
      required:
      - item_ids
      title: CleanupStorageItemsRequest
      type: object
    CloudDatasets:
      properties:
        authz_id:
          description: The ID of CloudAuthz to be used for authorizing access to the
            resource provider. You may get a list of the defined authorizations via
            `/api/cloud/authz`. Also, you can use `/api/cloud/authz/create` to define
            a new authorization.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Authentication ID
          type: string
        bucket:
          description: The name of a bucket to which data should be sent (e.g., a
            bucket name on AWS S3).
          title: Bucket
          type: string
        dataset_ids:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - type: 'null'
          description: A list of dataset IDs belonging to the specified history that
            should be sent to the given bucket. If not provided, Galaxy sends all
            the datasets belonging the specified history.
          title: Objects
        history_id:
          description: The ID of history from which the object should be downloaded
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        overwrite_existing:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: A boolean value. If set to 'True', and an object with same
            name of the dataset to be sent already exist in the bucket, Galaxy replaces
            the existing object with the dataset to be sent. If set to 'False', Galaxy
            appends datetime to the dataset name to prevent overwriting an existing
            object.
          title: Spaces to tabs
      required:
      - history_id
      - bucket
      - authz_id
      title: CloudDatasets
      type: object
    CloudDatasetsResponse:
      properties:
        bucket_name:
          description: The name of bucket to which the listed datasets are queued
            to be sent
          title: Bucket
          type: string
        failed_dataset_labels:
          description: The datasets for which Galaxy failed to create (and queue)
            send job
          items:
            type: string
          title: Failed datasets
          type: array
        sent_dataset_labels:
          description: The datasets for which Galaxy succeeded to create (and queue)
            send job
          items:
            type: string
          title: Send datasets
          type: array
      required:
      - sent_dataset_labels
      - failed_dataset_labels
      - bucket_name
      title: CloudDatasetsResponse
      type: object
    CloudObjects:
      properties:
        authz_id:
          description: The ID of CloudAuthz to be used for authorizing access to the
            resource provider. You may get a list of the defined authorizations via
            `/api/cloud/authz`. Also, you can use `/api/cloud/authz/create` to define
            a new authorization.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Authentication ID
          type: string
        bucket:
          description: The name of a bucket from which data should be fetched from
            (e.g., a bucket name on AWS S3).
          title: Bucket
          type: string
        history_id:
          description: The ID of history to which the object should be received to.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        input_args:
          anyOf:
          - $ref: '#/components/schemas/InputArguments'
          - type: 'null'
          description: A summary of the input arguments, which is optional and will
            default to {}.
          title: Input arguments
        objects:
          description: A list of the names of objects to be fetched.
          items:
            type: string
          title: Objects
          type: array
      required:
      - history_id
      - bucket
      - objects
      - authz_id
      title: CloudObjects
      type: object
    CollectionElementIdentifier:
      properties:
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          description: The type of the collection, can be `list`, `paired`, or define
            subcollections using `:` as separator like `list:paired` or `list:list`.
          title: Collection Type
        element_identifiers:
          anyOf:
          - items:
              $ref: '#/components/schemas/CollectionElementIdentifier'
            type: array
          - type: 'null'
          description: List of elements that should be in the new sub-collection.
          title: Element Identifiers
        id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the element.
          title: ID
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The name of the element.
          title: Name
        src:
          allOf:
          - $ref: '#/components/schemas/ColletionSourceType'
          description: The source of the element.
          title: Source
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The list of tags associated with the element.
          title: Tags
      required:
      - src
      title: CollectionElementIdentifier
      type: object
    ColletionSourceType:
      enum:
      - hda
      - ldda
      - hdca
      - new_collection
      title: ColletionSourceType
      type: string
    CompositeDataElement:
      additionalProperties: false
      properties:
        MD5:
          anyOf:
          - type: string
          - type: 'null'
          title: Md5
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        composite:
          $ref: '#/components/schemas/CompositeItems'
        created_from_basename:
          anyOf:
          - type: string
          - type: 'null'
          title: Created From Basename
        dbkey:
          default: '?'
          title: Dbkey
          type: string
        deferred:
          default: false
          title: Deferred
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        elements_from:
          anyOf:
          - $ref: '#/components/schemas/ElementsFromType'
          - type: 'null'
        ext:
          default: auto
          title: Ext
          type: string
        extra_files:
          anyOf:
          - $ref: '#/components/schemas/ExtraFiles'
          - type: 'null'
        info:
          anyOf:
          - type: string
          - type: 'null'
          title: Info
        name:
          anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
          - type: 'null'
          title: Name
        space_to_tab:
          default: false
          title: Space To Tab
          type: boolean
        src:
          const: composite
          title: Src
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
        to_posix_lines:
          default: false
          title: To Posix Lines
          type: boolean
      required:
      - src
      - composite
      title: CompositeDataElement
      type: object
    CompositeFileInfo:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Summary description of the purpouse of this file
          title: Description
        is_binary:
          description: Whether this file is a binary file
          title: Is binary
          type: boolean
        mimetype:
          anyOf:
          - type: string
          - type: 'null'
          description: The MIME type of this file
          title: MIME type
        name:
          description: The name of this composite file
          title: Name
          type: string
        optional:
          description: ''
          title: Optional
          type: boolean
        space_to_tab:
          description: ''
          title: Spaces to tabulation
          type: boolean
        substitute_name_with_metadata:
          anyOf:
          - type: string
          - type: 'null'
          description: ''
          title: Substitute name with metadata
        to_posix_lines:
          description: ''
          title: To posix lines
          type: boolean
      required:
      - name
      - optional
      - mimetype
      - description
      - substitute_name_with_metadata
      - is_binary
      - to_posix_lines
      - space_to_tab
      title: CompositeFileInfo
      type: object
    CompositeItems:
      properties:
        elements:
          items:
            anyOf:
            - $ref: '#/components/schemas/FileDataElement'
            - $ref: '#/components/schemas/PastedDataElement'
            - $ref: '#/components/schemas/UrlDataElement'
            - $ref: '#/components/schemas/PathDataElement'
            - $ref: '#/components/schemas/ServerDirElement'
            - $ref: '#/components/schemas/FtpImportElement'
          title: Elements
          type: array
      required:
      - elements
      title: CompositeItems
      type: object
    ComputeDatasetHashPayload:
      properties:
        extra_files_path:
          anyOf:
          - type: string
          - type: 'null'
          description: If set, extra files path to compute a hash for.
          title: Extra Files Path
        hash_function:
          anyOf:
          - $ref: '#/components/schemas/HashFunctionNameEnum'
          - type: 'null'
          default: MD5
          description: Hash function name to use to compute dataset hashes.
      title: ComputeDatasetHashPayload
      type: object
    ConcreteObjectStoreModel:
      properties:
        badges:
          items:
            $ref: '#/components/schemas/BadgeDict'
          title: Badges
          type: array
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        device:
          anyOf:
          - type: string
          - type: 'null'
          title: Device
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        object_store_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Object Store Id
        private:
          title: Private
          type: boolean
        quota:
          $ref: '#/components/schemas/QuotaModel'
      required:
      - private
      - quota
      - badges
      title: ConcreteObjectStoreModel
      type: object
    ConcreteObjectStoreQuotaSourceDetails:
      properties:
        enabled:
          description: Whether the object store tracks quota on the data (independent
            of Galaxy's configuration)
          title: Enabled
          type: boolean
        source:
          anyOf:
          - type: string
          - type: 'null'
          description: The quota source label corresponding to the object store the
            dataset is stored in (or would be stored in)
          title: Source
      required:
      - source
      - enabled
      title: ConcreteObjectStoreQuotaSourceDetails
      type: object
    ContentsObject:
      properties:
        contents:
          anyOf:
          - items:
              $ref: '#/components/schemas/ContentsObject'
            type: array
          - type: 'null'
          description: If this ContentsObject describes a nested bundle and the caller
            specified "?expand=true" on the request, then this contents array must
            be present and describe the objects within the nested bundle.
          title: Contents
        drs_uri:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: A list of full DRS identifier URI paths that may be used to
            obtain the object. These URIs may be external to this DRS instance.
          examples:
          - drs://drs.example.org/314159
          title: Drs Uri
        id:
          anyOf:
          - type: string
          - type: 'null'
          description: A DRS identifier of a `DrsObject` (either a single blob or
            a nested bundle). If this ContentsObject is an object within a nested
            bundle, then the id is optional. Otherwise, the id is required.
          title: Id
        name:
          description: A name declared by the bundle author that must be used when
            materialising this object, overriding any name directly associated with
            the object itself. The name must be unique within the containing bundle.
            This string is made up of uppercase and lowercase letters, decimal digits,
            hyphen, period, and underscore [A-Za-z0-9.-_]. See http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_282[portable
            filenames].
          title: Name
          type: string
      required:
      - name
      title: ContentsObject
      type: object
    ConvertedDatasetsMap:
      additionalProperties:
        example: 0123456789ABCDEF
        minLength: 16
        pattern: '[0-9a-fA-F]+'
        type: string
      description: Map of `file extension` -> `converted dataset encoded id`
      example:
        csv: dataset_id
      title: ConvertedDatasetsMap
      type: object
    CreateEntryPayload:
      properties:
        name:
          description: The name of the entry to create.
          examples:
          - my_new_entry
          title: Name
          type: string
        target:
          description: The target file source to create the entry in.
          title: Target
          type: string
      required:
      - target
      - name
      title: CreateEntryPayload
      type: object
    CreateHistoryContentFromStore:
      properties:
        model_store_format:
          anyOf:
          - $ref: '#/components/schemas/ModelStoreFormat'
          - type: 'null'
        store_content_uri:
          anyOf:
          - type: string
          - type: 'null'
          title: Store Content Uri
        store_dict:
          anyOf:
          - type: object
          - type: 'null'
          title: Store Dict
      title: CreateHistoryContentFromStore
      type: object
    CreateHistoryContentPayload:
      additionalProperties: true
      properties:
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          description: The type of the collection, can be `list`, `paired`, or define
            subcollections using `:` as separator like `list:paired` or `list:list`.
          title: Collection Type
        content:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: 'Depending on the `source` it can be:

            - The encoded id from the library dataset

            - The encoded id from the library folder

            - The encoded id from the HDA

            - The encoded id from the HDCA

            '
          title: Content
        copy_elements:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: If the source is a collection, whether to copy child HDAs into
            the target history as well. Prior to the galaxy release 23.1 this defaulted
            to false.
          title: Copy Elements
        dbkey:
          anyOf:
          - type: string
          - type: 'null'
          description: TODO
          title: DBKey
        element_identifiers:
          anyOf:
          - items:
              $ref: '#/components/schemas/CollectionElementIdentifier'
            type: array
          - type: 'null'
          description: List of elements that should be in the new collection.
          title: Element Identifiers
        folder_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The ID of the library folder that will contain the collection.
            Required if `instance_type=library`.
          title: Folder Id
        hide_source_items:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to mark the original HDAs as hidden.
          title: Hide Source Items
        history_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The ID of the history that will contain the collection. Required
            if `instance_type=history`.
          title: History Id
        instance_type:
          anyOf:
          - enum:
            - history
            - library
            type: string
          - type: 'null'
          default: history
          description: The type of the instance, either `history` (default) or `library`.
          title: Instance Type
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The name of the new collection.
          title: Name
        source:
          anyOf:
          - $ref: '#/components/schemas/HistoryContentSource'
          - type: 'null'
          description: The source of the content. Can be other history element to
            be copied or library elements.
          title: Source
        type:
          anyOf:
          - $ref: '#/components/schemas/HistoryContentType'
          - type: 'null'
          default: dataset
          description: The type of content to be created in the history.
          title: Type
      title: CreateHistoryContentPayload
      type: object
    CreateHistoryFromStore:
      properties:
        model_store_format:
          anyOf:
          - $ref: '#/components/schemas/ModelStoreFormat'
          - type: 'null'
        store_content_uri:
          anyOf:
          - type: string
          - type: 'null'
          title: Store Content Uri
        store_dict:
          anyOf:
          - type: object
          - type: 'null'
          title: Store Dict
      title: CreateHistoryFromStore
      type: object
    CreateInvocationsFromStorePayload:
      properties:
        history_id:
          description: The ID of the history associated with the invocations.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        legacy_job_state:
          default: false
          deprecated: true
          description: "Populate the invocation step state with the job state instead\
            \ of the invocation step state.\n        This will also produce one step\
            \ per job in mapping jobs to mimic the older behavior with respect to\
            \ collections.\n        Partially scheduled steps may provide incomplete\
            \ information and the listed steps outputs\n        are not the mapped\
            \ over step outputs but the individual job outputs."
          title: Legacy Job State
          type: boolean
        model_store_format:
          anyOf:
          - $ref: '#/components/schemas/ModelStoreFormat'
          - type: 'null'
        step_details:
          default: false
          description: Include details for individual invocation steps and populate
            a steps attribute in the resulting dictionary
          title: Include step details
          type: boolean
        store_content_uri:
          anyOf:
          - type: string
          - type: 'null'
          title: Store Content Uri
        store_dict:
          anyOf:
          - type: object
          - type: 'null'
          title: Store Dict
        view:
          anyOf:
          - $ref: '#/components/schemas/InvocationSerializationView'
          - type: 'null'
          description: The name of the view used to serialize this item. This will
            return a predefined set of attributes of the item.
          examples:
          - element
          title: View
      required:
      - history_id
      title: CreateInvocationsFromStorePayload
      type: object
    CreateLibrariesFromStore:
      properties:
        model_store_format:
          anyOf:
          - $ref: '#/components/schemas/ModelStoreFormat'
          - type: 'null'
        store_content_uri:
          anyOf:
          - type: string
          - type: 'null'
          title: Store Content Uri
        store_dict:
          anyOf:
          - type: object
          - type: 'null'
          title: Store Dict
      title: CreateLibrariesFromStore
      type: object
    CreateLibraryFilePayload:
      properties:
        from_hda_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The ID of an accessible HDA to copy into the library.
          title: From HDA ID
        from_hdca_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The ID of an accessible HDCA to copy into the library. Nested
            collections are not allowed, you must flatten the collection first.
          title: From HDCA ID
        ldda_message:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: The new message attribute of the LDDA created.
          title: LDDA Message
      title: CreateLibraryFilePayload
      type: object
    CreateLibraryFolderPayload:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: A detailed description of the library folder.
          title: Description
        name:
          description: The name of the library folder.
          title: Name
          type: string
      required:
      - name
      title: CreateLibraryFolderPayload
      type: object
    CreateLibraryPayload:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: A detailed description of the Library.
          title: Description
        name:
          description: The name of the Library.
          title: Name
          type: string
        synopsis:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: A short text describing the contents of the Library.
          title: Synopsis
      required:
      - name
      title: CreateLibraryPayload
      type: object
    CreateMetricsPayload:
      properties:
        metrics:
          default: []
          examples:
          - args: '{"test":"value"}'
            level: 0
            namespace: test-source
            time: '2021-01-23T18:25:43.511Z'
          items:
            $ref: '#/components/schemas/Metric'
          title: List of metrics to be recorded.
          type: array
      title: CreateMetricsPayload
      type: object
    CreateNewCollectionPayload:
      properties:
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          description: The type of the collection, can be `list`, `paired`, or define
            subcollections using `:` as separator like `list:paired` or `list:list`.
          title: Collection Type
        copy_elements:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Whether to create a copy of the source HDAs for the new collection.
          title: Copy Elements
        element_identifiers:
          anyOf:
          - items:
              $ref: '#/components/schemas/CollectionElementIdentifier'
            type: array
          - type: 'null'
          description: List of elements that should be in the new collection.
          title: Element Identifiers
        folder_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The ID of the library folder that will contain the collection.
            Required if `instance_type=library`.
          title: Folder Id
        hide_source_items:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to mark the original HDAs as hidden.
          title: Hide Source Items
        history_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The ID of the history that will contain the collection. Required
            if `instance_type=history`.
          title: History Id
        instance_type:
          anyOf:
          - enum:
            - history
            - library
            type: string
          - type: 'null'
          default: history
          description: The type of the instance, either `history` (default) or `library`.
          title: Instance Type
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The name of the new collection.
          title: Name
      title: CreateNewCollectionPayload
      type: object
    CreatePagePayload:
      additionalProperties: true
      properties:
        annotation:
          anyOf:
          - type: string
          - type: 'null'
          description: Annotation that will be attached to the page.
          title: Annotation
        content:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: Raw text contents of the last page revision (type dependent
            on content_format).
          title: Content
        content_format:
          allOf:
          - $ref: '#/components/schemas/PageContentFormat'
          default: html
          description: Either `markdown` or `html`.
          title: Content format
        invocation_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: Encoded ID used by workflow generated reports.
          title: Workflow invocation ID
        slug:
          description: The title slug for the page URL, must be unique.
          pattern: ^[a-z0-9\-]+$
          title: Identifier
          type: string
        title:
          description: The name of the page.
          title: Title
          type: string
      required:
      - title
      - slug
      title: CreatePagePayload
      type: object
    CreateQuotaParams:
      properties:
        amount:
          description: Quota size (E.g. ``10000MB``, ``99 gb``, ``0.2T``, ``unlimited``)
          title: Amount
          type: string
        default:
          allOf:
          - $ref: '#/components/schemas/DefaultQuotaValues'
          default: 'no'
          description: Whether or not this is a default quota. Valid values are ``no``,
            ``unregistered``, ``registered``. None is equivalent to ``no``.
          title: Default
        description:
          description: Detailed text description for this Quota.
          title: Description
          type: string
        in_groups:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: []
          description: A list of group IDs or names to associate with this quota.
          title: Groups
        in_users:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: []
          description: A list of user IDs or user emails to associate with this quota.
          title: Users
        name:
          description: The name of the quota. This must be unique within a Galaxy
            instance.
          title: Name
          type: string
        operation:
          allOf:
          - $ref: '#/components/schemas/QuotaOperation'
          default: '='
          description: 'Quotas can have one of three `operations`:- `=` : The quota
            is exactly the amount specified- `+` : The amount specified will be added
            to the amounts of the user''s other associated quota definitions- `-`
            : The amount specified will be subtracted from the amounts of the user''s
            other associated quota definitions'
          title: Operation
        quota_source_label:
          anyOf:
          - type: string
          - type: 'null'
          description: If set, quota source label to apply this quota operation to.
            Otherwise, the default quota is used.
          title: Quota Source Label
      required:
      - name
      - description
      - amount
      title: CreateQuotaParams
      type: object
    CreateQuotaResult:
      properties:
        id:
          description: The `encoded identifier` of the quota.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        message:
          description: Text message describing the result of the operation.
          title: Message
          type: string
        model_class:
          const: Quota
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the quota. This must be unique within a Galaxy
            instance.
          title: Name
          type: string
        quota_source_label:
          anyOf:
          - type: string
          - type: 'null'
          description: Quota source label
          title: Quota Source Label
        url:
          deprecated: true
          description: The relative URL to get this particular Quota details from
            the rest API.
          title: URL
          type: string
      required:
      - model_class
      - id
      - name
      - url
      - message
      title: CreateQuotaResult
      type: object
    CreatedEntryResponse:
      properties:
        external_link:
          anyOf:
          - type: string
          - type: 'null'
          description: An optional external link to the created entry if available.
          title: External link
        name:
          description: The name of the created entry.
          examples:
          - my_new_entry
          title: Name
          type: string
        uri:
          description: The URI of the created entry.
          examples:
          - gxfiles://my_new_entry
          title: URI
          type: string
      required:
      - name
      - uri
      title: CreatedEntryResponse
      type: object
    CreatedUserModel:
      properties:
        active:
          description: User is active
          title: Active
          type: boolean
        deleted:
          description: ' User is deleted'
          title: Deleted
          type: boolean
        email:
          description: Email of the user
          title: Email
          type: string
        id:
          description: Encoded ID of the user
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        last_password_change:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: ''
          title: Last password change
        model_class:
          const: User
          description: The name of the database model class.
          title: Model class
          type: string
        nice_total_disk_usage:
          description: Size of all non-purged, unique datasets of the user in a nice
            format.
          title: Nice total disc usage
          type: string
        preferred_object_store_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the object store that should be used to store new
            datasets in this history.
          title: Preferred Object Store ID
        total_disk_usage:
          description: Size of all non-purged, unique datasets of the user in bytes.
          title: Total disk usage
          type: number
        username:
          description: The name of the user.
          title: user_name
          type: string
      required:
      - model_class
      - total_disk_usage
      - nice_total_disk_usage
      - id
      - username
      - email
      - deleted
      - active
      - last_password_change
      title: CreatedUserModel
      type: object
    CustomBuildCreationPayload:
      properties:
        len|type:
          allOf:
          - $ref: '#/components/schemas/CustomBuildLenType'
          description: The type of the len file.
          title: Length type
        len|value:
          description: The content of the length file.
          title: Length value
          type: string
        name:
          description: The name of the custom build.
          title: Name
          type: string
      required:
      - name
      - len|type
      - len|value
      title: CustomBuildCreationPayload
      type: object
    CustomBuildLenType:
      enum:
      - file
      - fasta
      - text
      title: CustomBuildLenType
      type: string
    CustomBuildModel:
      properties:
        count:
          anyOf:
          - type: string
          - type: 'null'
          description: The number of chromosomes/contigs.
          title: Count
        fasta:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The primary id of the fasta file from a history.
          title: Fasta
        id:
          description: The ID of the custom build.
          title: ID
          type: string
        len:
          description: The primary id of the len file.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Length
          type: string
        linecount:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The primary id of a linecount dataset.
          title: Line count
        name:
          description: The name of the custom build.
          title: Name
          type: string
      required:
      - name
      - len
      - id
      title: CustomBuildModel
      type: object
    CustomBuildsCollection:
      items:
        $ref: '#/components/schemas/CustomBuildModel'
      title: CustomBuildsCollection
      type: array
    CustomBuildsMetadataResponse:
      properties:
        fasta_hdas:
          description: "A list of label/value pairs with all the datasets of type\
            \ `FASTA` contained in the History.\n - `label` is item position followed\
            \ by the name of the dataset.\n - `value` is the encoded database ID of\
            \ the dataset.\n"
          items:
            $ref: '#/components/schemas/LabelValuePair'
          title: Fasta HDAs
          type: array
        installed_builds:
          description: TODO
          items:
            $ref: '#/components/schemas/LabelValuePair'
          title: Installed Builds
          type: array
      required:
      - installed_builds
      - fasta_hdas
      title: CustomBuildsMetadataResponse
      type: object
    CustomHistoryItem:
      additionalProperties: true
      description: 'Can contain any serializable property of the item.


        Allows arbitrary custom keys to be specified in the serialization

        parameters without a particular view (predefined set of keys).'
      properties: {}
      title: CustomHistoryItem
      type: object
    DCESummary:
      description: Dataset Collection Element summary information.
      properties:
        element_identifier:
          description: The actual name of this element.
          title: Element Identifier
          type: string
        element_index:
          description: The position index of this element inside the collection.
          title: Element Index
          type: integer
        element_type:
          allOf:
          - $ref: '#/components/schemas/DCEType'
          description: The type of the element. Used to interpret the `object` field.
          title: Element Type
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Dataset Collection Element ID
          type: string
        model_class:
          const: DatasetCollectionElement
          description: The name of the database model class.
          title: Model class
          type: string
        object:
          anyOf:
          - $ref: '#/components/schemas/HDAObject'
          - $ref: '#/components/schemas/HDADetailed'
          - $ref: '#/components/schemas/DCObject'
          description: The element's specific data depending on the value of `element_type`.
          title: Object
      required:
      - model_class
      - id
      - element_index
      - element_identifier
      - element_type
      - object
      title: DCESummary
      type: object
    DCEType:
      description: Available types of dataset collection elements.
      enum:
      - hda
      - dataset_collection
      title: DCEType
      type: string
    DCObject:
      description: Dataset Collection Object
      properties:
        collection_type:
          description: The type of the collection, can be `list`, `paired`, or define
            subcollections using `:` as separator like `list:paired` or `list:list`.
          title: Collection Type
          type: string
        contents_url:
          anyOf:
          - description: The relative URL to access the contents of this History.
            title: Contents URL
            type: string
          - type: 'null'
          title: Contents Url
        element_count:
          anyOf:
          - type: integer
          - type: 'null'
          description: The number of elements contained in the dataset collection.
            It may be None or undefined if the collection could not be populated.
          title: Element Count
        elements:
          default: []
          description: The summary information of each of the elements inside the
            dataset collection.
          items:
            $ref: '#/components/schemas/DCESummary'
          title: Elements
          type: array
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Dataset Collection ID
          type: string
        model_class:
          const: DatasetCollection
          description: The name of the database model class.
          title: Model class
          type: string
        populated:
          description: Whether the dataset collection elements (and any subcollections
            elements) were successfully populated.
          title: Populated
          type: boolean
      required:
      - model_class
      - id
      - collection_type
      title: DCObject
      type: object
    DataElementsFromTarget:
      properties:
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        destination:
          discriminator:
            mapping:
              hdas: '#/components/schemas/HdaDestination'
              library: '#/components/schemas/LibraryDestination'
              library_folder: '#/components/schemas/LibraryFolderDestination'
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/HdaDestination'
          - $ref: '#/components/schemas/LibraryFolderDestination'
          - $ref: '#/components/schemas/LibraryDestination'
          title: Destination
        elements_from:
          $ref: '#/components/schemas/ElementsFromType'
        ftp_path:
          anyOf:
          - type: string
          - type: 'null'
          title: Ftp Path
        path:
          anyOf:
          - type: string
          - type: 'null'
          title: Path
        server_dir:
          anyOf:
          - type: string
          - type: 'null'
          title: Server Dir
        src:
          $ref: '#/components/schemas/ItemsFromSrc'
        url:
          anyOf:
          - type: string
          - type: 'null'
          title: Url
      required:
      - src
      - destination
      - elements_from
      title: DataElementsFromTarget
      type: object
    DataElementsTarget:
      properties:
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        destination:
          discriminator:
            mapping:
              hdas: '#/components/schemas/HdaDestination'
              library: '#/components/schemas/LibraryDestination'
              library_folder: '#/components/schemas/LibraryFolderDestination'
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/HdaDestination'
          - $ref: '#/components/schemas/LibraryFolderDestination'
          - $ref: '#/components/schemas/LibraryDestination'
          title: Destination
        elements:
          items:
            anyOf:
            - discriminator:
                mapping:
                  composite: '#/components/schemas/CompositeDataElement'
                  files: '#/components/schemas/FileDataElement'
                  ftp_import: '#/components/schemas/FtpImportElement'
                  pasted: '#/components/schemas/PastedDataElement'
                  path: '#/components/schemas/PathDataElement'
                  server_dir: '#/components/schemas/ServerDirElement'
                  url: '#/components/schemas/UrlDataElement'
                propertyName: src
              oneOf:
              - $ref: '#/components/schemas/FileDataElement'
              - $ref: '#/components/schemas/PastedDataElement'
              - $ref: '#/components/schemas/UrlDataElement'
              - $ref: '#/components/schemas/PathDataElement'
              - $ref: '#/components/schemas/ServerDirElement'
              - $ref: '#/components/schemas/FtpImportElement'
              - $ref: '#/components/schemas/CompositeDataElement'
            - $ref: '#/components/schemas/NestedElement'
          title: Elements
          type: array
      required:
      - destination
      - elements
      title: DataElementsTarget
      type: object
    DataItemSourceType:
      enum:
      - hda
      - ldda
      - hdca
      - dce
      - dc
      title: DataItemSourceType
      type: string
    DatasetAssociationRoles:
      properties:
        access_dataset_roles:
          default: []
          description: A list of roles that can access the dataset. The user has to
            **have all these roles** in order to access this dataset. Users without
            access permission **cannot** have other permissions on this dataset. If
            there are no access roles set on the dataset it is considered **unrestricted**.
          items:
            items:
              type: string
            type: array
          title: Access Roles
          type: array
        manage_dataset_roles:
          default: []
          description: A list of roles that can manage permissions on the dataset.
            Users with **any** of these roles can manage permissions of this dataset.
            If you remove yourself you will lose the ability to manage this dataset
            unless you are an admin.
          items:
            items:
              type: string
            type: array
          title: Manage Roles
          type: array
        modify_item_roles:
          default: []
          description: A list of roles that can modify the library item. This is a
            library related permission. User with **any** of these roles can modify
            name, metadata, and other information about this library item.
          items:
            items:
              type: string
            type: array
          title: Modify Roles
          type: array
      title: DatasetAssociationRoles
      type: object
    DatasetCollectionAttributesResult:
      properties:
        dbkey:
          description: TODO
          title: Dbkey
          type: string
        dbkeys:
          anyOf:
          - items:
              type: string
            type: array
            uniqueItems: true
          - type: 'null'
          title: Dbkeys
        extension:
          description: The dataset file extension.
          examples:
          - txt
          title: Extension
          type: string
        extensions:
          anyOf:
          - items:
              type: string
            type: array
            uniqueItems: true
          - type: 'null'
          title: Extensions
        model_class:
          const: HistoryDatasetCollectionAssociation
          description: The name of the database model class.
          title: Model class
          type: string
        tags:
          $ref: '#/components/schemas/TagCollection'
      required:
      - dbkey
      - extension
      - model_class
      - dbkeys
      - extensions
      - tags
      title: DatasetCollectionAttributesResult
      type: object
    DatasetCollectionContentElements:
      description: Represents a collection of elements contained in the dataset collection.
      items:
        $ref: '#/components/schemas/DCESummary'
      title: DatasetCollectionContentElements
      type: array
    DatasetCollectionPopulatedState:
      enum:
      - new
      - ok
      - failed
      title: DatasetCollectionPopulatedState
      type: string
    DatasetContentType:
      description: For retrieving content from a structured dataset (e.g. HDF5)
      enum:
      - meta
      - attr
      - stats
      - data
      title: DatasetContentType
      type: string
    DatasetErrorMessage:
      properties:
        dataset:
          allOf:
          - $ref: '#/components/schemas/EncodedDatasetSourceId'
          description: The encoded ID of the dataset and its source.
        error_message:
          description: The error message returned while processing this dataset.
          title: Error Message
          type: string
      required:
      - dataset
      - error_message
      title: DatasetErrorMessage
      type: object
    DatasetExtraFiles:
      description: A list of extra files associated with a dataset.
      items:
        $ref: '#/components/schemas/ExtraFileEntry'
      title: DatasetExtraFiles
      type: array
    DatasetInheritanceChain:
      default: []
      items:
        $ref: '#/components/schemas/DatasetInheritanceChainEntry'
      title: DatasetInheritanceChain
      type: array
    DatasetInheritanceChainEntry:
      properties:
        dep:
          description: Name of the source of the referenced dataset at this point
            of the inheritance chain.
          title: Dep
          type: string
        name:
          description: Name of the referenced dataset
          title: Name
          type: string
      required:
      - name
      - dep
      title: DatasetInheritanceChainEntry
      type: object
    DatasetPermissions:
      description: Role-based permissions for accessing and managing a dataset.
      properties:
        access:
          default: []
          description: The set of roles (encoded IDs) that can access this dataset.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: Access
          type: array
        manage:
          default: []
          description: The set of roles (encoded IDs) that can manage this dataset.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: Management
          type: array
      title: DatasetPermissions
      type: object
    DatasetSourceId:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        src:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          description: The source of this dataset, either `hda` or `ldda` depending
            of its origin.
          title: Source
      required:
      - src
      - id
      title: DatasetSourceId
      type: object
    DatasetSourceType:
      enum:
      - hda
      - ldda
      title: DatasetSourceType
      type: string
    DatasetState:
      enum:
      - new
      - upload
      - queued
      - running
      - ok
      - empty
      - error
      - paused
      - setting_metadata
      - failed_metadata
      - deferred
      - discarded
      title: DatasetState
      type: string
    DatasetStorageDetails:
      properties:
        badges:
          description: A list of badges describing object store properties for concrete
            object store dataset is stored in.
          items:
            $ref: '#/components/schemas/BadgeDict'
          title: Badges
          type: array
        dataset_state:
          description: The model state of the supplied dataset instance.
          title: Dataset State
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: A description of how this dataset is stored.
          title: Description
        hashes:
          description: The file contents hashes associated with the supplied dataset
            instance.
          items:
            type: object
          title: Hashes
          type: array
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The display name of the destination ObjectStore for this dataset.
          title: Name
        object_store_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The identifier of the destination ObjectStore for this dataset.
          title: Object Store Id
        percent_used:
          anyOf:
          - type: number
          - type: 'null'
          description: The percentage indicating how full the store is.
          title: Percent Used
        quota:
          allOf:
          - $ref: '#/components/schemas/ConcreteObjectStoreQuotaSourceDetails'
          description: Information about quota sources around dataset storage.
        relocatable:
          description: Indicator of whether the objectstore for this dataset can be
            switched by this user.
          title: Relocatable
          type: boolean
        shareable:
          description: Is this dataset shareable.
          title: Shareable
          type: boolean
        sources:
          description: The file sources associated with the supplied dataset instance.
          items:
            type: object
          title: Sources
          type: array
      required:
      - object_store_id
      - name
      - description
      - percent_used
      - dataset_state
      - hashes
      - sources
      - shareable
      - quota
      - badges
      - relocatable
      title: DatasetStorageDetails
      type: object
    DatasetSummary:
      properties:
        create_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time and date this item was created.
          title: Create Time
        deleted:
          title: Deleted
          type: boolean
        file_size:
          title: File Size
          type: integer
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        purgable:
          title: Purgable
          type: boolean
        purged:
          title: Purged
          type: boolean
        state:
          allOf:
          - $ref: '#/components/schemas/DatasetState'
          description: The current state of this dataset.
          title: State
        total_size:
          title: Total Size
          type: integer
        update_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The last time and date this item was updated.
          title: Update Time
        uuid:
          description: Universal unique identifier for this dataset.
          format: uuid4
          title: UUID
          type: string
      required:
      - id
      - create_time
      - update_time
      - state
      - deleted
      - purged
      - purgable
      - file_size
      - total_size
      - uuid
      title: DatasetSummary
      type: object
    DatasetSummaryList:
      items:
        $ref: '#/components/schemas/DatasetSummary'
      title: DatasetSummaryList
      type: array
    DatasetTextContentDetails:
      properties:
        item_data:
          anyOf:
          - type: string
          - type: 'null'
          description: First chunk of text content (maximum 1MB) of the dataset.
          title: Item Data
        item_url:
          description: URL to access this dataset.
          title: Item Url
          type: string
        truncated:
          description: Whether the text in `item_data` has been truncated or contains
            the whole contents.
          title: Truncated
          type: boolean
      required:
      - item_data
      - truncated
      - item_url
      title: DatasetTextContentDetails
      type: object
    DatasetValidatedState:
      enum:
      - unknown
      - invalid
      - ok
      title: DatasetValidatedState
      type: string
    DatatypeConverter:
      properties:
        source:
          description: Source type for conversion
          examples:
          - bam
          title: Source
          type: string
        target:
          description: Target type for conversion
          examples:
          - bai
          title: Target
          type: string
        tool_id:
          description: The converter tool identifier
          examples:
          - CONVERTER_Bam_Bai_0
          title: Tool identifier
          type: string
      required:
      - source
      - target
      - tool_id
      title: DatatypeConverter
      type: object
    DatatypeConverterList:
      default: []
      items:
        $ref: '#/components/schemas/DatatypeConverter'
      title: DatatypeConverterList
      type: array
    DatatypeDetails:
      properties:
        composite_files:
          anyOf:
          - items:
              $ref: '#/components/schemas/CompositeFileInfo'
            type: array
          - type: 'null'
          description: A collection of files composing this data type
          title: Composite files
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: A summary description for this data type
          title: Description
        description_url:
          anyOf:
          - format: uri
            maxLength: 2083
            minLength: 1
            type: string
          - type: 'null'
          description: The URL to a detailed description for this datatype
          examples:
          - https://wiki.galaxyproject.org/Learn/Datatypes#Bed
          title: Description URL
        display_in_upload:
          default: false
          description: If True, the associated file extension will be displayed in
            the `File Format` select list in the `Upload File from your computer`
            tool in the `Get Data` tool section of the tool panel
          title: Display in upload
          type: boolean
        extension:
          description: "The data type\u2019s Dataset file extension"
          examples:
          - bed
          title: Extension
          type: string
        upload_warning:
          anyOf:
          - type: string
          - type: 'null'
          description: End-user information regarding potential pitfalls with this
            upload type.
          title: Upload warning
      required:
      - extension
      - description
      - description_url
      title: DatatypeDetails
      type: object
    DatatypeEDAMDetails:
      properties:
        definition:
          anyOf:
          - type: string
          - type: 'null'
          description: The EDAM definition
          examples:
          - Entry (gene) format of the NCBI database.
          title: Definition
        label:
          anyOf:
          - type: string
          - type: 'null'
          description: The EDAM label
          examples:
          - NCBI gene report format
          title: Label
        prefix_IRI:
          description: The EDAM prefixed Resource Identifier
          examples:
          - format_1782
          title: Prefix IRI
          type: string
      required:
      - prefix_IRI
      - label
      - definition
      title: DatatypeEDAMDetails
      type: object
    DatatypesCombinedMap:
      properties:
        datatypes:
          description: List of datatypes extensions
          items:
            type: string
          title: Datatypes
          type: array
        datatypes_mapping:
          allOf:
          - $ref: '#/components/schemas/DatatypesMap'
          description: Dictionaries for mapping datatype's extensions/classes with
            their implementation classes
          title: Datatypes Mapping
      required:
      - datatypes
      - datatypes_mapping
      title: DatatypesCombinedMap
      type: object
    DatatypesEDAMDetailsDict:
      additionalProperties:
        $ref: '#/components/schemas/DatatypeEDAMDetails'
      default: {}
      title: DatatypesEDAMDetailsDict
      type: object
    DatatypesMap:
      properties:
        class_to_classes:
          additionalProperties:
            additionalProperties:
              type: boolean
            type: object
          description: Dictionary mapping datatype's classes with their base classes
          title: Classes Map
          type: object
        ext_to_class_name:
          additionalProperties:
            type: string
          description: Dictionary mapping datatype's extensions with implementation
            classes
          title: Extension Map
          type: object
      required:
      - ext_to_class_name
      - class_to_classes
      title: DatatypesMap
      type: object
    DefaultQuota:
      properties:
        model_class:
          const: DefaultQuotaAssociation
          description: The name of the database model class.
          title: Model class
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/DefaultQuotaTypes'
          description: "The type of the default quota. Either one of:\n - `registered`:\
            \ the associated quota will affect registered users.\n - `unregistered`:\
            \ the associated quota will affect unregistered users.\n"
          title: Type
      required:
      - model_class
      - type
      title: DefaultQuota
      type: object
    DefaultQuotaTypes:
      enum:
      - unregistered
      - registered
      title: DefaultQuotaTypes
      type: string
    DefaultQuotaValues:
      enum:
      - unregistered
      - registered
      - 'no'
      title: DefaultQuotaValues
      type: string
    DeleteDatasetBatchPayload:
      properties:
        datasets:
          description: The list of datasets IDs with their sources to be deleted/purged.
          items:
            $ref: '#/components/schemas/DatasetSourceId'
          title: Datasets
          type: array
        purge:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: 'Whether to permanently delete from disk the specified datasets.
            *Warning*: this is a destructive operation.'
          title: Purge
      required:
      - datasets
      title: DeleteDatasetBatchPayload
      type: object
    DeleteDatasetBatchResult:
      properties:
        errors:
          anyOf:
          - items:
              $ref: '#/components/schemas/DatasetErrorMessage'
            type: array
          - type: 'null'
          description: A list of dataset IDs and the corresponding error message if
            something went wrong while processing the dataset.
          title: Errors
        success_count:
          description: The number of datasets successfully processed.
          title: Success Count
          type: integer
      required:
      - success_count
      title: DeleteDatasetBatchResult
      type: object
    DeleteHistoriesPayload:
      properties:
        ids:
          description: List of history IDs to be deleted.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: IDs
          type: array
        purge:
          default: false
          description: Whether to definitely remove this history from disk.
          title: Purge
          type: boolean
      required:
      - ids
      title: DeleteHistoriesPayload
      type: object
    DeleteHistoryContentPayload:
      properties:
        purge:
          default: false
          description: Whether to remove the dataset from storage. Datasets will only
            be removed from storage once all HDAs or LDDAs that refer to this datasets
            are deleted.
          title: Purge
          type: boolean
        recursive:
          default: false
          description: When deleting a dataset collection, whether to also delete
            containing datasets.
          title: Recursive
          type: boolean
        stop_job:
          default: false
          description: Whether to stop the creating job if all the job's outputs are
            deleted.
          title: Stop Job
          type: boolean
      title: DeleteHistoryContentPayload
      type: object
    DeleteHistoryContentResult:
      additionalProperties: true
      description: 'Contains minimum information about the deletion state of a history
        item.


        Can also contain any other properties of the item.'
      properties:
        deleted:
          description: True if the item was successfully deleted.
          title: Deleted
          type: boolean
        id:
          description: The encoded ID of the history item.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        purged:
          anyOf:
          - type: boolean
          - type: 'null'
          description: True if the item was successfully removed from disk.
          title: Purged
      required:
      - id
      - deleted
      title: DeleteHistoryContentResult
      type: object
    DeleteHistoryPayload:
      properties:
        purge:
          default: false
          description: Whether to definitely remove this history from disk.
          title: Purge
          type: boolean
      title: DeleteHistoryPayload
      type: object
    DeleteJobPayload:
      properties:
        message:
          anyOf:
          - type: string
          - type: 'null'
          description: Stop message
          title: Job message
      title: DeleteJobPayload
      type: object
    DeleteLibraryPayload:
      properties:
        undelete:
          description: Whether to restore this previously deleted library.
          title: Undelete
          type: boolean
      required:
      - undelete
      title: DeleteLibraryPayload
      type: object
    DeleteQuotaPayload:
      properties:
        purge:
          default: false
          description: Whether to also purge the Quota after deleting it.
          title: Purge
          type: boolean
      title: DeleteQuotaPayload
      type: object
    DeletedCustomBuild:
      properties:
        message:
          description: Confirmation of the custom build deletion.
          title: Deletion message
          type: string
      required:
      - message
      title: DeletedCustomBuild
      type: object
    DetailedUserModel:
      properties:
        deleted:
          description: ' User is deleted'
          title: Deleted
          type: boolean
        email:
          description: Email of the user
          title: Email
          type: string
        id:
          description: Encoded ID of the user
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        is_admin:
          description: User is admin
          title: Is admin
          type: boolean
        nice_total_disk_usage:
          description: Size of all non-purged, unique datasets of the user in a nice
            format.
          title: Nice total disc usage
          type: string
        preferences:
          description: Preferences of the user
          title: Preferences
          type: object
        preferred_object_store_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the object store that should be used to store new
            datasets in this history.
          title: Preferred Object Store ID
        purged:
          description: User is purged
          title: Purged
          type: boolean
        quota:
          description: Quota applicable to the user
          title: Quota
          type: string
        quota_bytes:
          description: Quota applicable to the user in bytes.
          title: Quota in bytes
        quota_percent:
          description: Percentage of the storage quota applicable to the user.
          title: Quota percent
        tags_used:
          description: Tags used by the user
          items:
            type: string
          title: Tags used
          type: array
        total_disk_usage:
          description: Size of all non-purged, unique datasets of the user in bytes.
          title: Total disk usage
          type: number
        username:
          description: The name of the user.
          title: user_name
          type: string
      required:
      - total_disk_usage
      - nice_total_disk_usage
      - id
      - username
      - email
      - deleted
      - is_admin
      - purged
      - preferences
      - quota
      - quota_bytes
      - tags_used
      title: DetailedUserModel
      type: object
    DisplayApp:
      description: Basic linked information about an application that can display
        certain datatypes.
      properties:
        label:
          description: The label or title of the Display Application.
          title: Label
          type: string
        links:
          description: The collection of link details for this Display Application.
          items:
            $ref: '#/components/schemas/Hyperlink'
          title: Links
          type: array
      required:
      - label
      - links
      title: DisplayApp
      type: object
    DisplayApplication:
      properties:
        filename_:
          title: 'Filename '
          type: string
        id:
          title: Id
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        name:
          title: Name
          type: string
        version:
          title: Version
          type: string
      required:
      - id
      - name
      - version
      - filename_
      - links
      title: DisplayApplication
      type: object
    DrsObject:
      properties:
        access_methods:
          anyOf:
          - items:
              $ref: '#/components/schemas/AccessMethod'
            minItems: 1
            type: array
          - type: 'null'
          description: 'The list of access methods that can be used to fetch the `DrsObject`.

            Required for single blobs; optional for bundles.'
          title: Access Methods
        aliases:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: A list of strings that can be used to find other metadata about
            this `DrsObject` from external metadata sources. These aliases can be
            used to represent secondary accession numbers or external GUIDs.
          title: Aliases
        checksums:
          description: 'The checksum of the `DrsObject`. At least one checksum must
            be provided.

            For blobs, the checksum is computed over the bytes in the blob.

            For bundles, the checksum is computed over a sorted concatenation of the
            checksums of its top-level contained objects (not recursive, names not
            included). The list of checksums is sorted alphabetically (hex-code) before
            concatenation and a further checksum is performed on the concatenated
            checksum value.

            For example, if a bundle contains blobs with the following checksums:

            md5(blob1) = 72794b6d

            md5(blob2) = 5e089d29

            Then the checksum of the bundle is:

            md5( concat( sort( md5(blob1), md5(blob2) ) ) )

            = md5( concat( sort( 72794b6d, 5e089d29 ) ) )

            = md5( concat( 5e089d29, 72794b6d ) )

            = md5( 5e089d2972794b6d )

            = f7a29a04'
          items:
            $ref: '#/components/schemas/Checksum'
          minItems: 1
          title: Checksums
          type: array
        contents:
          anyOf:
          - items:
              $ref: '#/components/schemas/ContentsObject'
            type: array
          - type: 'null'
          description: 'If not set, this `DrsObject` is a single blob.

            If set, this `DrsObject` is a bundle containing the listed `ContentsObject`
            s (some of which may be further nested).'
          title: Contents
        created_time:
          description: 'Timestamp of content creation in RFC3339.

            (This is the creation time of the underlying content, not of the JSON
            object.)'
          format: date-time
          title: Created Time
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: A human readable description of the `DrsObject`.
          title: Description
        id:
          description: An identifier unique to this `DrsObject`
          title: Id
          type: string
        mime_type:
          anyOf:
          - type: string
          - type: 'null'
          description: A string providing the mime-type of the `DrsObject`.
          examples:
          - application/json
          title: Mime Type
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: 'A string that can be used to name a `DrsObject`.

            This string is made up of uppercase and lowercase letters, decimal digits,
            hyphen, period, and underscore [A-Za-z0-9.-_]. See http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_282[portable
            filenames].'
          title: Name
        self_uri:
          description: 'A drs:// hostname-based URI, as defined in the DRS documentation,
            that tells clients how to access this object.

            The intent of this field is to make DRS objects self-contained, and therefore
            easier for clients to store and pass around.  For example, if you arrive
            at this DRS JSON by resolving a compact identifier-based DRS URI, the
            `self_uri` presents you with a hostname and properly encoded DRS ID for
            use in subsequent `access` endpoint calls.'
          examples:
          - drs://drs.example.org/314159
          title: Self Uri
          type: string
        size:
          description: 'For blobs, the blob size in bytes.

            For bundles, the cumulative size, in bytes, of items in the `contents`
            field.'
          title: Size
          type: integer
        updated_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Timestamp of content update in RFC3339, identical to `created_time`
            in systems that do not support updates. (This is the update time of the
            underlying content, not of the JSON object.)
          title: Updated Time
        version:
          anyOf:
          - type: string
          - type: 'null'
          description: 'A string representing a version.

            (Some systems may use checksum, a RFC3339 timestamp, or an incrementing
            version number.)'
          title: Version
      required:
      - id
      - self_uri
      - size
      - created_time
      - checksums
      title: DrsObject
      type: object
    ElementsFromType:
      enum:
      - archive
      - bagit
      - bagit_archive
      - directory
      title: ElementsFromType
      type: string
    EncodedDataItemSourceId:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        src:
          allOf:
          - $ref: '#/components/schemas/DataItemSourceType'
          description: The source of this dataset, either `hda`, `ldda`, `hdca`, `dce`
            or `dc` depending of its origin.
          title: Source
      required:
      - id
      - src
      title: EncodedDataItemSourceId
      type: object
    EncodedDatasetJobInfo:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        src:
          allOf:
          - $ref: '#/components/schemas/DataItemSourceType'
          description: The source of this dataset, either `hda`, `ldda`, `hdca`, `dce`
            or `dc` depending of its origin.
          title: Source
        uuid:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          deprecated: true
          description: Universal unique identifier for this dataset.
          title: UUID
      required:
      - id
      - src
      title: EncodedDatasetJobInfo
      type: object
    EncodedDatasetSourceId:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        src:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          description: The source of this dataset, either `hda` or `ldda` depending
            of its origin.
          title: Source
      required:
      - src
      - id
      title: EncodedDatasetSourceId
      type: object
    EncodedHdcaSourceId:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        src:
          const: hdca
          description: The source of this dataset, which in the case of the model
            can only be `hdca`.
          title: Source
      required:
      - src
      - id
      title: EncodedHdcaSourceId
      type: object
    EncodedHistoryContentItem:
      properties:
        history_content_type:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of this item.
          title: Content Type
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
      required:
      - history_content_type
      - id
      title: EncodedHistoryContentItem
      type: object
    EncodedJobDetails:
      properties:
        command_line:
          anyOf:
          - type: string
          - type: 'null'
          description: The command line produced by the job. Users can see this value
            if allowed in the configuration, administrator can always see this value.
          title: Command Line
        command_version:
          anyOf:
          - type: string
          - type: 'null'
          description: Tool version indicated during job execution.
          title: Command Version
        copied_from_job_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: Reference to cached job if job execution was cached.
          title: Copied from Job-ID
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        exit_code:
          anyOf:
          - type: integer
          - type: 'null'
          description: The exit code returned by the tool. Can be unset if the job
            is not completed yet.
          title: Exit Code
        external_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The job id used by the external job runner (Condor, Pulsar,
            etc.). Only administrator can see this value.
          title: External ID
        galaxy_version:
          anyOf:
          - type: string
          - type: 'null'
          description: The (major) version of Galaxy used to create this job.
          examples:
          - '21.05'
          title: Galaxy Version
        handler:
          anyOf:
          - type: string
          - type: 'null'
          description: The job handler process assigned to handle this job. Only administrator
            can see this value.
          title: Job Handler
        history_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the history associated with this item.
          title: History ID
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Job ID
          type: string
        inputs:
          additionalProperties:
            $ref: '#/components/schemas/EncodedDatasetJobInfo'
          default: {}
          description: Dictionary mapping all the tool inputs (by name) to the corresponding
            data references.
          title: Inputs
          type: object
        job_runner_name:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the job runner plugin that handles this job. Only administrator
            can see this value.
          title: Job Runner Name
        model_class:
          const: Job
          description: The name of the database model class.
          title: Model class
          type: string
        output_collections:
          additionalProperties:
            $ref: '#/components/schemas/EncodedHdcaSourceId'
          default: {}
          description: ''
          title: Output collections
          type: object
        outputs:
          additionalProperties:
            $ref: '#/components/schemas/EncodedDatasetJobInfo'
          default: {}
          description: Dictionary mapping all the tool outputs (by name) to the corresponding
            data references.
          title: Outputs
          type: object
        params:
          description: Object containing all the parameters of the tool associated
            with this job. The specific parameters depend on the tool itself.
          title: Parameters
        state:
          allOf:
          - $ref: '#/components/schemas/JobState'
          description: Current state of the job.
          title: State
        tool_id:
          description: Identifier of the tool that generated this job.
          title: Tool ID
          type: string
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        user_email:
          anyOf:
          - type: string
          - type: 'null'
          description: The email of the user that owns this job. Only the owner of
            the job and administrators can see this value.
          title: User Email
      required:
      - model_class
      - id
      - tool_id
      - state
      - create_time
      - update_time
      - params
      title: EncodedJobDetails
      type: object
    EncodedJobParameterHistoryItem:
      properties:
        hid:
          anyOf:
          - type: integer
          - type: 'null'
          title: Hid
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        name:
          title: Name
          type: string
        src:
          allOf:
          - $ref: '#/components/schemas/DataItemSourceType'
          description: The source of this dataset, either `hda`, `ldda`, `hdca`, `dce`
            or `dc` depending of its origin.
          title: Source
      required:
      - id
      - src
      - name
      title: EncodedJobParameterHistoryItem
      type: object
    ExportHistoryArchivePayload:
      properties:
        directory_uri:
          anyOf:
          - type: string
          - type: 'null'
          description: A writable directory destination where the history will be
            exported using the `galaxy.files` URI infrastructure.
          title: Directory URI
        file_name:
          anyOf:
          - type: string
          - type: 'null'
          description: The name of the file containing the exported history.
          title: File Name
        force:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to force a rebuild of the history archive.
          title: Force Rebuild
        gzip:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Whether to export as gzip archive.
          title: GZip
        include_deleted:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to include deleted datasets in the exported archive.
          title: Include Deleted
        include_hidden:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to include hidden datasets in the exported archive.
          title: Include Hidden
      title: ExportHistoryArchivePayload
      type: object
    ExportObjectMetadata:
      properties:
        request_data:
          $ref: '#/components/schemas/ExportObjectRequestMetadata'
        result_data:
          anyOf:
          - $ref: '#/components/schemas/ExportObjectResultMetadata'
          - type: 'null'
      required:
      - request_data
      title: ExportObjectMetadata
      type: object
    ExportObjectRequestMetadata:
      properties:
        object_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Object Id
          type: string
        object_type:
          $ref: '#/components/schemas/ExportObjectType'
        payload:
          anyOf:
          - $ref: '#/components/schemas/WriteStoreToPayload'
          - $ref: '#/components/schemas/ShortTermStoreExportPayload'
          title: Payload
        user_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          title: User Id
      required:
      - object_id
      - object_type
      - payload
      title: ExportObjectRequestMetadata
      type: object
    ExportObjectResultMetadata:
      properties:
        error:
          anyOf:
          - type: string
          - type: 'null'
          title: Error
        success:
          title: Success
          type: boolean
      required:
      - success
      title: ExportObjectResultMetadata
      type: object
    ExportObjectType:
      description: Types of objects that can be exported.
      enum:
      - history
      - invocation
      title: ExportObjectType
      type: string
    ExportRecordData:
      description: Data of an export record associated with a history that was archived.
      properties:
        include_deleted:
          default: false
          description: Include file contents for deleted datasets (if include_files
            is True).
          title: Include deleted
          type: boolean
        include_files:
          default: true
          description: include materialized files in export when available
          title: Include Files
          type: boolean
        include_hidden:
          default: false
          description: Include file contents for hidden datasets (if include_files
            is True).
          title: Include hidden
          type: boolean
        model_store_format:
          allOf:
          - $ref: '#/components/schemas/ModelStoreFormat'
          default: tar.gz
          description: format of model store to export
        target_uri:
          description: Galaxy Files URI to write mode store content to.
          title: Target URI
          type: string
      required:
      - target_uri
      title: ExportRecordData
      type: object
    ExportTaskListResponse:
      items:
        $ref: '#/components/schemas/ObjectExportTaskResponse'
      title: ExportTaskListResponse
      type: array
    ExtraFileEntry:
      properties:
        class:
          allOf:
          - $ref: '#/components/schemas/ExtraFilesEntryClass'
          description: The class of this entry, either File or Directory.
        path:
          description: Relative path to the file or directory.
          title: Path
          type: string
      required:
      - class
      - path
      title: ExtraFileEntry
      type: object
    ExtraFiles:
      properties:
        fuzzy_root:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Prevent Galaxy from checking for a single file in a directory
            and re-interpreting the archive
          title: Fuzzy Root
        items_from:
          anyOf:
          - type: string
          - type: 'null'
          title: Items From
        src:
          $ref: '#/components/schemas/Src'
      required:
      - src
      title: ExtraFiles
      type: object
    ExtraFilesEntryClass:
      enum:
      - Directory
      - File
      title: ExtraFilesEntryClass
      type: string
    FavoriteObject:
      properties:
        object_id:
          description: The id of an object the user wants to favorite.
          title: Object ID
          type: string
      required:
      - object_id
      title: FavoriteObject
      type: object
    FavoriteObjectType:
      const: tools
      title: FavoriteObjectType
      type: string
    FavoriteObjectsSummary:
      properties:
        tools:
          description: The name of the tools the user favored.
          items:
            type: string
          title: Favorite tools
          type: array
      required:
      - tools
      title: FavoriteObjectsSummary
      type: object
    FetchDataPayload:
      additionalProperties: true
      properties:
        history_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History Id
          type: string
        targets:
          items:
            anyOf:
            - $ref: '#/components/schemas/DataElementsTarget'
            - $ref: '#/components/schemas/HdcaDataItemsTarget'
            - $ref: '#/components/schemas/DataElementsFromTarget'
            - $ref: '#/components/schemas/HdcaDataItemsFromTarget'
            - $ref: '#/components/schemas/FtpImportTarget'
          title: Targets
          type: array
      required:
      - history_id
      - targets
      title: FetchDataPayload
      type: object
    FileDataElement:
      additionalProperties: false
      properties:
        MD5:
          anyOf:
          - type: string
          - type: 'null'
          title: Md5
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        created_from_basename:
          anyOf:
          - type: string
          - type: 'null'
          title: Created From Basename
        dbkey:
          default: '?'
          title: Dbkey
          type: string
        deferred:
          default: false
          title: Deferred
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        elements_from:
          anyOf:
          - $ref: '#/components/schemas/ElementsFromType'
          - type: 'null'
        ext:
          default: auto
          title: Ext
          type: string
        extra_files:
          anyOf:
          - $ref: '#/components/schemas/ExtraFiles'
          - type: 'null'
        info:
          anyOf:
          - type: string
          - type: 'null'
          title: Info
        name:
          anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
          - type: 'null'
          title: Name
        space_to_tab:
          default: false
          title: Space To Tab
          type: boolean
        src:
          const: files
          title: Src
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
        to_posix_lines:
          default: false
          title: To Posix Lines
          type: boolean
      required:
      - src
      title: FileDataElement
      type: object
    FileLibraryFolderItem:
      properties:
        can_manage:
          title: Can Manage
          type: boolean
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        date_uploaded:
          format: date-time
          title: Date Uploaded
          type: string
        deleted:
          title: Deleted
          type: boolean
        file_ext:
          title: File Ext
          type: string
        file_size:
          title: File Size
          type: string
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        is_private:
          title: Is Private
          type: boolean
        is_unrestricted:
          title: Is Unrestricted
          type: boolean
        ldda_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Ldda Id
          type: string
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        name:
          title: Name
          type: string
        raw_size:
          title: Raw Size
          type: integer
        state:
          allOf:
          - $ref: '#/components/schemas/DatasetState'
          description: The current state of this dataset.
          title: State
        tags:
          $ref: '#/components/schemas/TagCollection'
        type:
          const: file
          title: Type
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
      required:
      - name
      - type
      - create_time
      - update_time
      - can_manage
      - deleted
      - id
      - file_ext
      - date_uploaded
      - is_unrestricted
      - is_private
      - state
      - file_size
      - raw_size
      - ldda_id
      - tags
      title: FileLibraryFolderItem
      type: object
    FilesSourcePlugin:
      properties:
        browsable:
          description: Whether this file source plugin can list items.
          title: Browsable
          type: boolean
        doc:
          description: Documentation or extended description for this plugin.
          examples:
          - Galaxy's library import directory
          title: Documentation
          type: string
        id:
          description: The `FilesSource` plugin identifier
          examples:
          - _import
          title: ID
          type: string
        label:
          description: The display label for this plugin.
          examples:
          - Library Import Directory
          title: Label
          type: string
        requires_groups:
          anyOf:
          - type: string
          - type: 'null'
          description: Only users belonging to the groups specified here can access
            this files source.
          title: Requires groups
        requires_roles:
          anyOf:
          - type: string
          - type: 'null'
          description: Only users with the roles specified here can access this files
            source.
          title: Requires roles
        type:
          description: The type of the plugin.
          examples:
          - gximport
          title: Type
          type: string
        writable:
          description: Whether this files source plugin allows write access.
          examples:
          - false
          title: Writeable
          type: boolean
      required:
      - id
      - type
      - label
      - doc
      - browsable
      - writable
      title: FilesSourcePlugin
      type: object
    FilesSourcePluginList:
      default: []
      items:
        anyOf:
        - $ref: '#/components/schemas/BrowsableFilesSourcePlugin'
        - $ref: '#/components/schemas/FilesSourcePlugin'
      title: FilesSourcePluginList
      type: array
    FolderLibraryFolderItem:
      properties:
        can_manage:
          title: Can Manage
          type: boolean
        can_modify:
          title: Can Modify
          type: boolean
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        deleted:
          title: Deleted
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: A detailed description of the library folder.
          title: Description
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        name:
          title: Name
          type: string
        type:
          const: folder
          title: Type
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
      required:
      - name
      - type
      - create_time
      - update_time
      - can_manage
      - deleted
      - id
      - can_modify
      title: FolderLibraryFolderItem
      type: object
    FtpImportElement:
      additionalProperties: false
      properties:
        MD5:
          anyOf:
          - type: string
          - type: 'null'
          title: Md5
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        created_from_basename:
          anyOf:
          - type: string
          - type: 'null'
          title: Created From Basename
        dbkey:
          default: '?'
          title: Dbkey
          type: string
        deferred:
          default: false
          title: Deferred
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        elements_from:
          anyOf:
          - $ref: '#/components/schemas/ElementsFromType'
          - type: 'null'
        ext:
          default: auto
          title: Ext
          type: string
        extra_files:
          anyOf:
          - $ref: '#/components/schemas/ExtraFiles'
          - type: 'null'
        ftp_path:
          title: Ftp Path
          type: string
        info:
          anyOf:
          - type: string
          - type: 'null'
          title: Info
        name:
          anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
          - type: 'null'
          title: Name
        space_to_tab:
          default: false
          title: Space To Tab
          type: boolean
        src:
          const: ftp_import
          title: Src
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
        to_posix_lines:
          default: false
          title: To Posix Lines
          type: boolean
      required:
      - src
      - ftp_path
      title: FtpImportElement
      type: object
    FtpImportTarget:
      properties:
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        destination:
          $ref: '#/components/schemas/HdcaDestination'
        elements_from:
          anyOf:
          - $ref: '#/components/schemas/ElementsFromType'
          - type: 'null'
        ftp_path:
          title: Ftp Path
          type: string
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        src:
          const: ftp_import
          title: Src
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
      required:
      - destination
      - src
      - ftp_path
      title: FtpImportTarget
      type: object
    GroupCreatePayload:
      description: Payload schema for creating a group.
      properties:
        name:
          title: name of the group
          type: string
        role_ids:
          default: []
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: role IDs
          type: array
        user_ids:
          default: []
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: user IDs
          type: array
      required:
      - name
      title: GroupCreatePayload
      type: object
    GroupListResponse:
      description: Response schema for listing groups.
      items:
        $ref: '#/components/schemas/GroupResponse'
      title: GroupListResponse
      type: array
    GroupModel:
      description: User group model
      properties:
        id:
          description: Encoded group ID
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model_class:
          const: Group
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the group.
          title: Name
          type: string
      required:
      - model_class
      - id
      - name
      title: GroupModel
      type: object
    GroupQuota:
      properties:
        group:
          allOf:
          - $ref: '#/components/schemas/GroupModel'
          description: Information about a user group associated with a quota.
          title: Group
        model_class:
          const: GroupQuotaAssociation
          description: The name of the database model class.
          title: Model class
          type: string
      required:
      - model_class
      - group
      title: GroupQuota
      type: object
    GroupResponse:
      description: Response schema for a group.
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: group ID
          type: string
        model_class:
          const: Group
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          title: name of the group
          type: string
        roles_url:
          anyOf:
          - type: string
          - type: 'null'
          title: URL for the roles of the group
        url:
          title: URL for the group
          type: string
        users_url:
          anyOf:
          - type: string
          - type: 'null'
          title: URL for the users of the group
      required:
      - model_class
      - id
      - name
      - url
      title: GroupResponse
      type: object
    GroupRoleListResponse:
      items:
        $ref: '#/components/schemas/GroupRoleResponse'
      title: GroupRoleListResponse
      type: array
    GroupRoleResponse:
      properties:
        id:
          description: Encoded ID of the role
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        name:
          description: Name of the role
          title: Name
          type: string
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
      required:
      - id
      - name
      - url
      title: GroupRoleResponse
      type: object
    GroupUserListResponse:
      items:
        $ref: '#/components/schemas/GroupUserResponse'
      title: GroupUserListResponse
      type: array
    GroupUserResponse:
      properties:
        email:
          description: Email of the user
          title: Email
          type: string
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
      required:
      - id
      - email
      - url
      title: GroupUserResponse
      type: object
    HDABasicInfo:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        name:
          title: Name
          type: string
      required:
      - id
      - name
      title: HDABasicInfo
      type: object
    HDADetailed:
      additionalProperties: true
      description: History Dataset Association detailed information.
      properties:
        accessible:
          description: Whether this item is accessible to the current user due to
            permissions.
          title: Accessible
          type: boolean
        annotation:
          anyOf:
          - type: string
          - type: 'null'
          description: An annotation to provide details or to help understand the
            purpose and usage of this item.
          title: Annotation
        api_type:
          const: file
          default: file
          deprecated: true
          description: TODO
          title: API Type
        copied_from_ldda_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          title: Copied From Ldda Id
        create_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time and date this item was created.
          title: Create Time
        created_from_basename:
          anyOf:
          - type: string
          - type: 'null'
          description: The basename of the output that produced this dataset.
          title: Created from basename
        creating_job:
          description: The encoded ID of the job that created this dataset.
          title: Creating Job ID
          type: string
        data_type:
          description: The fully qualified name of the class implementing the data
            type of this dataset.
          examples:
          - galaxy.datatypes.data.Text
          title: Data Type
          type: string
        dataset_id:
          description: The encoded ID of the dataset associated with this item.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Dataset ID
          type: string
        deleted:
          description: Whether this item is marked as deleted.
          title: Deleted
          type: boolean
        display_apps:
          description: Contains new-style display app urls.
          items:
            $ref: '#/components/schemas/DisplayApp'
          title: Display Applications
          type: array
        display_types:
          description: Contains old-style display app urls.
          items:
            $ref: '#/components/schemas/DisplayApp'
          title: Legacy Display Applications
          type: array
        download_url:
          description: The URL to download this item from the server.
          title: Download URL
          type: string
        extension:
          anyOf:
          - type: string
          - type: 'null'
          description: The extension of the dataset.
          examples:
          - txt
          title: Extension
        file_ext:
          description: The extension of the file.
          title: File extension
          type: string
        file_name:
          anyOf:
          - type: string
          - type: 'null'
          description: The full path to the dataset file.
          title: File Name
        file_size:
          description: The file size in bytes.
          title: File Size
          type: integer
        genome_build:
          anyOf:
          - type: string
          - type: 'null'
          default: '?'
          description: TODO
          title: Genome Build
        hda_ldda:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          default: hda
          description: Whether this dataset belongs to a history (HDA) or a library
            (LDDA).
          title: HDA or LDDA
        hid:
          description: The index position of this item in the History.
          title: HID
          type: integer
        history_content_type:
          const: dataset
          description: This is always `dataset` for datasets.
          title: History Content Type
        history_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        meta_files:
          description: Collection of metadata files associated with this dataset.
          items:
            $ref: '#/components/schemas/MetadataFile'
          title: Metadata Files
          type: array
        metadata:
          anyOf:
          - {}
          - type: 'null'
          description: The metadata associated with this dataset.
          title: Metadata
        metadata_data_lines:
          default: 0
          description: TODO
          title: Metadata Data Lines
          type: integer
        metadata_dbkey:
          anyOf:
          - type: string
          - type: 'null'
          default: '?'
          description: TODO
          title: Metadata DBKey
        misc_blurb:
          anyOf:
          - type: string
          - type: 'null'
          description: TODO
          title: Miscellaneous Blurb
        misc_info:
          anyOf:
          - type: string
          - type: 'null'
          description: TODO
          title: Miscellaneous Information
        model_class:
          const: HistoryDatasetAssociation
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The name of the item.
          title: Name
        peek:
          anyOf:
          - type: string
          - type: 'null'
          description: A few lines of contents from the start of the file.
          title: Peek
        permissions:
          allOf:
          - $ref: '#/components/schemas/DatasetPermissions'
          description: Role-based access and manage control permissions for the dataset.
          title: Permissions
        purged:
          description: Whether this dataset has been removed from disk.
          title: Purged
          type: boolean
        rerunnable:
          description: Whether the job creating this dataset can be run again.
          title: Rerunnable
          type: boolean
        resubmitted:
          description: Whether the job creating this dataset has been resubmitted.
          title: Resubmitted
          type: boolean
        state:
          allOf:
          - $ref: '#/components/schemas/DatasetState'
          description: The current state of this dataset.
          title: State
        tags:
          $ref: '#/components/schemas/TagCollection'
        type:
          const: file
          default: file
          description: This is always `file` for datasets.
          title: Type
        type_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The type and the encoded ID of this item. Used for caching.
          examples:
          - dataset-616e371b2cc6c62e
          title: Type - ID
        update_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The last time and date this item was updated.
          title: Update Time
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
        uuid:
          description: Universal unique identifier for this dataset.
          format: uuid4
          title: UUID
          type: string
        validated_state:
          allOf:
          - $ref: '#/components/schemas/DatasetValidatedState'
          description: The state of the datatype validation for this dataset.
          title: Validated State
        validated_state_message:
          anyOf:
          - type: string
          - type: 'null'
          description: The message with details about the datatype validation result
            for this dataset.
          title: Validated State Message
        visible:
          description: Whether this item is visible or hidden to the user by default.
          title: Visible
          type: boolean
        visualizations:
          description: The collection of visualizations that can be applied to this
            dataset.
          items:
            $ref: '#/components/schemas/Visualization'
          title: Visualizations
          type: array
      required:
      - model_class
      - id
      - name
      - history_id
      - hid
      - deleted
      - visible
      - create_time
      - update_time
      - url
      - tags
      - history_content_type
      - dataset_id
      - state
      - extension
      - purged
      - accessible
      - file_ext
      - file_size
      - resubmitted
      - meta_files
      - data_type
      - creating_job
      - rerunnable
      - uuid
      - permissions
      - display_apps
      - display_types
      - visualizations
      - validated_state
      - annotation
      - download_url
      title: HDADetailed
      type: object
    HDAObject:
      additionalProperties: true
      description: History Dataset Association Object
      properties:
        copied_from_ldda_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          title: Copied From Ldda Id
        hda_ldda:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          default: hda
          description: Whether this dataset belongs to a history (HDA) or a library
            (LDDA).
          title: HDA or LDDA
        history_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History Dataset Association ID
          type: string
        model_class:
          const: HistoryDatasetAssociation
          description: The name of the database model class.
          title: Model class
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/DatasetState'
          description: The current state of this dataset.
          title: State
        tags:
          items:
            type: string
          title: Tags
          type: array
      required:
      - model_class
      - id
      - state
      - history_id
      - tags
      title: HDAObject
      type: object
    HDASummary:
      additionalProperties: true
      description: History Dataset Association summary information.
      properties:
        copied_from_ldda_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          title: Copied From Ldda Id
        create_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time and date this item was created.
          title: Create Time
        dataset_id:
          description: The encoded ID of the dataset associated with this item.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Dataset ID
          type: string
        deleted:
          description: Whether this item is marked as deleted.
          title: Deleted
          type: boolean
        extension:
          anyOf:
          - type: string
          - type: 'null'
          description: The extension of the dataset.
          examples:
          - txt
          title: Extension
        hid:
          description: The index position of this item in the History.
          title: HID
          type: integer
        history_content_type:
          const: dataset
          description: This is always `dataset` for datasets.
          title: History Content Type
        history_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The name of the item.
          title: Name
        purged:
          description: Whether this dataset has been removed from disk.
          title: Purged
          type: boolean
        state:
          allOf:
          - $ref: '#/components/schemas/DatasetState'
          description: The current state of this dataset.
          title: State
        tags:
          $ref: '#/components/schemas/TagCollection'
        type:
          description: The type of this item.
          title: Type
          type: string
        type_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The type and the encoded ID of this item. Used for caching.
          examples:
          - dataset-616e371b2cc6c62e
          title: Type - ID
        update_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The last time and date this item was updated.
          title: Update Time
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
        visible:
          description: Whether this item is visible or hidden to the user by default.
          title: Visible
          type: boolean
      required:
      - id
      - name
      - history_id
      - hid
      - deleted
      - visible
      - type
      - create_time
      - update_time
      - url
      - tags
      - history_content_type
      - dataset_id
      - state
      - extension
      - purged
      title: HDASummary
      type: object
    HDCADetailed:
      additionalProperties: true
      description: History Dataset Collection Association detailed information.
      properties:
        collection_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Dataset Collection ID
          type: string
        collection_type:
          description: The type of the collection, can be `list`, `paired`, or define
            subcollections using `:` as separator like `list:paired` or `list:list`.
          title: Collection Type
          type: string
        contents_url:
          description: The relative URL to access the contents of this History.
          title: Contents URL
          type: string
        create_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time and date this item was created.
          title: Create Time
        deleted:
          description: Whether this item is marked as deleted.
          title: Deleted
          type: boolean
        element_count:
          anyOf:
          - type: integer
          - type: 'null'
          description: The number of elements contained in the dataset collection.
            It may be None or undefined if the collection could not be populated.
          title: Element Count
        elements:
          default: []
          description: The summary information of each of the elements inside the
            dataset collection.
          items:
            $ref: '#/components/schemas/DCESummary'
          title: Elements
          type: array
        elements_datatypes:
          description: A set containing all the different element datatypes in the
            collection.
          items:
            type: string
          title: Elements Datatypes
          type: array
          uniqueItems: true
        hid:
          description: The index position of this item in the History.
          title: HID
          type: integer
        history_content_type:
          const: dataset_collection
          description: This is always `dataset_collection` for dataset collections.
          title: History Content Type
        history_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        implicit_collection_jobs_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: Encoded ID for the ICJ object describing the collection of
            jobs corresponding to this collection
          title: Implicit Collection Jobs Id
        job_source_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the Job that produced this dataset collection.
            Used to track the state of the job.
          title: Job Source ID
        job_source_type:
          anyOf:
          - $ref: '#/components/schemas/JobSourceType'
          - type: 'null'
          description: The type of job (model class) that produced this dataset collection.
            Used to track the state of the job.
          title: Job Source Type
        job_state_summary:
          anyOf:
          - $ref: '#/components/schemas/HDCJobStateSummary'
          - type: 'null'
          description: Overview of the job states working inside the dataset collection.
          title: Job State Summary
        model_class:
          const: HistoryDatasetCollectionAssociation
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The name of the item.
          title: Name
        populated:
          description: Whether the dataset collection elements (and any subcollections
            elements) were successfully populated.
          title: Populated
          type: boolean
        populated_state:
          allOf:
          - $ref: '#/components/schemas/DatasetCollectionPopulatedState'
          description: 'Indicates the general state of the elements in the dataset
            collection:- ''new'': new dataset collection, unpopulated elements.- ''ok'':
            collection elements populated (HDAs may or may not have errors).- ''failed'':
            some problem populating, won''t be populated.'
          title: Populated State
        populated_state_message:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional message with further information in case the population
            of the dataset collection failed.
          title: Populated State Message
        tags:
          $ref: '#/components/schemas/TagCollection'
        type:
          const: collection
          default: collection
          description: This is always `collection` for dataset collections.
          title: Type
        type_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The type and the encoded ID of this item. Used for caching.
          examples:
          - dataset-616e371b2cc6c62e
          title: Type - ID
        update_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The last time and date this item was updated.
          title: Update Time
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
        visible:
          description: Whether this item is visible or hidden to the user by default.
          title: Visible
          type: boolean
      required:
      - model_class
      - id
      - name
      - history_id
      - hid
      - deleted
      - visible
      - create_time
      - update_time
      - url
      - tags
      - history_content_type
      - collection_type
      - populated_state
      - contents_url
      - collection_id
      - elements_datatypes
      title: HDCADetailed
      type: object
    HDCASummary:
      additionalProperties: true
      description: History Dataset Collection Association summary information.
      properties:
        collection_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Dataset Collection ID
          type: string
        collection_type:
          description: The type of the collection, can be `list`, `paired`, or define
            subcollections using `:` as separator like `list:paired` or `list:list`.
          title: Collection Type
          type: string
        contents_url:
          description: The relative URL to access the contents of this History.
          title: Contents URL
          type: string
        create_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time and date this item was created.
          title: Create Time
        deleted:
          description: Whether this item is marked as deleted.
          title: Deleted
          type: boolean
        element_count:
          anyOf:
          - type: integer
          - type: 'null'
          description: The number of elements contained in the dataset collection.
            It may be None or undefined if the collection could not be populated.
          title: Element Count
        hid:
          description: The index position of this item in the History.
          title: HID
          type: integer
        history_content_type:
          const: dataset_collection
          description: This is always `dataset_collection` for dataset collections.
          title: History Content Type
        history_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        job_source_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the Job that produced this dataset collection.
            Used to track the state of the job.
          title: Job Source ID
        job_source_type:
          anyOf:
          - $ref: '#/components/schemas/JobSourceType'
          - type: 'null'
          description: The type of job (model class) that produced this dataset collection.
            Used to track the state of the job.
          title: Job Source Type
        job_state_summary:
          anyOf:
          - $ref: '#/components/schemas/HDCJobStateSummary'
          - type: 'null'
          description: Overview of the job states working inside the dataset collection.
          title: Job State Summary
        model_class:
          const: HistoryDatasetCollectionAssociation
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The name of the item.
          title: Name
        populated_state:
          allOf:
          - $ref: '#/components/schemas/DatasetCollectionPopulatedState'
          description: 'Indicates the general state of the elements in the dataset
            collection:- ''new'': new dataset collection, unpopulated elements.- ''ok'':
            collection elements populated (HDAs may or may not have errors).- ''failed'':
            some problem populating, won''t be populated.'
          title: Populated State
        populated_state_message:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional message with further information in case the population
            of the dataset collection failed.
          title: Populated State Message
        tags:
          $ref: '#/components/schemas/TagCollection'
        type:
          const: collection
          default: collection
          description: This is always `collection` for dataset collections.
          title: Type
        type_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The type and the encoded ID of this item. Used for caching.
          examples:
          - dataset-616e371b2cc6c62e
          title: Type - ID
        update_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The last time and date this item was updated.
          title: Update Time
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
        visible:
          description: Whether this item is visible or hidden to the user by default.
          title: Visible
          type: boolean
      required:
      - model_class
      - id
      - name
      - history_id
      - hid
      - deleted
      - visible
      - create_time
      - update_time
      - url
      - tags
      - history_content_type
      - collection_type
      - populated_state
      - contents_url
      - collection_id
      title: HDCASummary
      type: object
    HDCJobStateSummary:
      description: Overview of the job states working inside a dataset collection.
      properties:
        all_jobs:
          default: 0
          description: Total number of jobs associated with a dataset collection.
          title: All jobs
          type: integer
        deleted:
          default: 0
          description: Number of jobs in the `deleted` state.
          title: Deleted jobs
          type: integer
        deleted_new:
          default: 0
          description: Number of jobs in the `deleted_new` state.
          title: Deleted new jobs
          type: integer
        error:
          default: 0
          description: Number of jobs in the `error` state.
          title: Jobs with errors
          type: integer
        failed:
          default: 0
          description: Number of jobs in the `failed` state.
          title: Failed jobs
          type: integer
        new:
          default: 0
          description: Number of jobs in the `new` state.
          title: New jobs
          type: integer
        ok:
          default: 0
          description: Number of jobs in the `ok` state.
          title: OK jobs
          type: integer
        paused:
          default: 0
          description: Number of jobs in the `paused` state.
          title: Paused jobs
          type: integer
        queued:
          default: 0
          description: Number of jobs in the `queued` state.
          title: Queued jobs
          type: integer
        resubmitted:
          default: 0
          description: Number of jobs in the `resubmitted` state.
          title: Resubmitted jobs
          type: integer
        running:
          default: 0
          description: Number of jobs in the `running` state.
          title: Running jobs
          type: integer
        skipped:
          default: 0
          description: Number of jobs that were skipped due to conditional workflow
            step execution.
          title: Skipped jobs
          type: integer
        upload:
          default: 0
          description: Number of jobs in the `upload` state.
          title: Upload jobs
          type: integer
        waiting:
          default: 0
          description: Number of jobs in the `waiting` state.
          title: Waiting jobs
          type: integer
      title: HDCJobStateSummary
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HashFunctionNameEnum:
      description: Particular pieces of information that can be requested for a dataset.
      enum:
      - MD5
      - SHA-1
      - SHA-256
      - SHA-512
      title: HashFunctionNameEnum
      type: string
    HdaDestination:
      properties:
        type:
          const: hdas
          title: Type
      required:
      - type
      title: HdaDestination
      type: object
    HdcaDataItemsFromTarget:
      properties:
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        destination:
          $ref: '#/components/schemas/HdcaDestination'
        elements_from:
          $ref: '#/components/schemas/ElementsFromType'
        ftp_path:
          anyOf:
          - type: string
          - type: 'null'
          title: Ftp Path
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        path:
          anyOf:
          - type: string
          - type: 'null'
          title: Path
        server_dir:
          anyOf:
          - type: string
          - type: 'null'
          title: Server Dir
        src:
          $ref: '#/components/schemas/ItemsFromSrc'
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
        url:
          anyOf:
          - type: string
          - type: 'null'
          title: Url
      required:
      - src
      - destination
      - elements_from
      title: HdcaDataItemsFromTarget
      type: object
    HdcaDataItemsTarget:
      properties:
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        destination:
          $ref: '#/components/schemas/HdcaDestination'
        elements:
          items:
            anyOf:
            - discriminator:
                mapping:
                  composite: '#/components/schemas/CompositeDataElement'
                  files: '#/components/schemas/FileDataElement'
                  ftp_import: '#/components/schemas/FtpImportElement'
                  pasted: '#/components/schemas/PastedDataElement'
                  path: '#/components/schemas/PathDataElement'
                  server_dir: '#/components/schemas/ServerDirElement'
                  url: '#/components/schemas/UrlDataElement'
                propertyName: src
              oneOf:
              - $ref: '#/components/schemas/FileDataElement'
              - $ref: '#/components/schemas/PastedDataElement'
              - $ref: '#/components/schemas/UrlDataElement'
              - $ref: '#/components/schemas/PathDataElement'
              - $ref: '#/components/schemas/ServerDirElement'
              - $ref: '#/components/schemas/FtpImportElement'
              - $ref: '#/components/schemas/CompositeDataElement'
            - $ref: '#/components/schemas/NestedElement'
          title: Elements
          type: array
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
      required:
      - destination
      - elements
      title: HdcaDataItemsTarget
      type: object
    HdcaDestination:
      properties:
        type:
          const: hdca
          title: Type
      required:
      - type
      title: HdcaDestination
      type: object
    HelpForumCategory:
      additionalProperties: true
      description: Model for a category in the help forum.
      properties: {}
      title: HelpForumCategory
      type: object
    HelpForumGroup:
      additionalProperties: true
      description: Model for a group in the help forum.
      properties: {}
      title: HelpForumGroup
      type: object
    HelpForumGroupedSearchResult:
      additionalProperties: true
      description: Model for a grouped search result.
      properties: {}
      title: HelpForumGroupedSearchResult
      type: object
    HelpForumPost:
      additionalProperties: true
      description: Model for a post in the help forum.
      properties:
        avatar_template:
          description: The avatar template of the user.
          title: Avatar Template
          type: string
        blurb:
          description: The blurb of the post.
          title: Blurb
          type: string
        created_at:
          description: The creation date of the post.
          title: Created At
          type: string
        id:
          description: The ID of the post.
          title: Id
          type: integer
        like_count:
          description: The number of likes of the post.
          title: Like Count
          type: integer
        name:
          description: The name of the post.
          title: Name
          type: string
        post_number:
          description: The post number of the post.
          title: Post Number
          type: integer
        topic_id:
          description: The ID of the topic of the post.
          title: Topic Id
          type: integer
        username:
          description: The username of the post author.
          title: Username
          type: string
      required:
      - id
      - name
      - username
      - avatar_template
      - created_at
      - like_count
      - blurb
      - post_number
      - topic_id
      title: HelpForumPost
      type: object
    HelpForumSearchResponse:
      description: 'Response model for the help search API endpoint.


        This model is based on the Discourse API response for the search endpoint.'
      properties:
        categories:
          anyOf:
          - items:
              $ref: '#/components/schemas/HelpForumCategory'
            type: array
          - type: 'null'
          title: Categories
        grouped_search_result:
          anyOf:
          - $ref: '#/components/schemas/HelpForumGroupedSearchResult'
          - type: 'null'
        groups:
          anyOf:
          - items:
              $ref: '#/components/schemas/HelpForumGroup'
            type: array
          - type: 'null'
          title: Groups
        posts:
          anyOf:
          - items:
              $ref: '#/components/schemas/HelpForumPost'
            type: array
          - type: 'null'
          title: Posts
        tags:
          anyOf:
          - items:
              $ref: '#/components/schemas/HelpForumTag'
            type: array
          - type: 'null'
          title: Tags
        topics:
          anyOf:
          - items:
              $ref: '#/components/schemas/HelpForumTopic'
            type: array
          - type: 'null'
          title: Topics
        users:
          anyOf:
          - items:
              $ref: '#/components/schemas/HelpForumUser'
            type: array
          - type: 'null'
          title: Users
      required:
      - posts
      - topics
      - users
      - categories
      - tags
      - groups
      - grouped_search_result
      title: HelpForumSearchResponse
      type: object
    HelpForumTag:
      additionalProperties: true
      description: Model for a tag in the help forum.
      properties: {}
      title: HelpForumTag
      type: object
    HelpForumTopic:
      description: Model for a topic in the help forum compatible with Discourse API.
      properties:
        archetype:
          description: The archetype of the topic.
          title: Archetype
        archived:
          description: Whether the topic is archived.
          title: Archived
          type: boolean
        bookmarked:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the topic is bookmarked.
          title: Bookmarked
        bumped:
          description: Whether the topic was bumped.
          title: Bumped
          type: boolean
        bumped_at:
          description: The date of the last bump of the topic.
          title: Bumped At
          type: string
        category_id:
          description: The ID of the category of the topic.
          title: Category Id
          type: integer
        closed:
          description: Whether the topic is closed.
          title: Closed
          type: boolean
        created_at:
          description: The creation date of the topic.
          title: Created At
          type: string
        fancy_title:
          description: The fancy title of the topic.
          title: Fancy Title
          type: string
        has_accepted_answer:
          description: Whether the topic has an accepted answer.
          title: Has Accepted Answer
          type: boolean
        highest_post_number:
          description: The highest post number in the topic.
          title: Highest Post Number
          type: integer
        id:
          description: The ID of the topic.
          title: Id
          type: integer
        last_posted_at:
          description: The date of the last post in the topic.
          title: Last Posted At
          type: string
        liked:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the topic is liked.
          title: Liked
        pinned:
          description: Whether the topic is pinned.
          title: Pinned
          type: boolean
        posts_count:
          description: The number of posts in the topic.
          title: Posts Count
          type: integer
        reply_count:
          description: The number of replies in the topic.
          title: Reply Count
          type: integer
        slug:
          description: The slug of the topic.
          title: Slug
          type: string
        tags:
          description: The tags of the topic.
          items:
            type: string
          title: Tags
          type: array
        tags_descriptions:
          anyOf:
          - {}
          - type: 'null'
          description: The descriptions of the tags of the topic.
          title: Tags Descriptions
        title:
          description: The title of the topic.
          title: Title
          type: string
        unpinned:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the topic is unpinned.
          title: Unpinned
        unseen:
          description: Whether the topic is unseen.
          title: Unseen
          type: boolean
        visible:
          description: Whether the topic is visible.
          title: Visible
          type: boolean
      required:
      - id
      - title
      - fancy_title
      - slug
      - posts_count
      - reply_count
      - highest_post_number
      - created_at
      - last_posted_at
      - bumped
      - bumped_at
      - archetype
      - unseen
      - pinned
      - unpinned
      - visible
      - closed
      - archived
      - bookmarked
      - liked
      - tags
      - tags_descriptions
      - category_id
      - has_accepted_answer
      title: HelpForumTopic
      type: object
    HelpForumUser:
      additionalProperties: true
      description: Model for a user in the help forum.
      properties: {}
      title: HelpForumUser
      type: object
    HistoryContentBulkOperationPayload:
      properties:
        items:
          anyOf:
          - items:
              $ref: '#/components/schemas/HistoryContentItem'
            type: array
          - type: 'null'
          title: Items
        operation:
          $ref: '#/components/schemas/HistoryContentItemOperation'
        params:
          anyOf:
          - $ref: '#/components/schemas/ChangeDatatypeOperationParams'
          - $ref: '#/components/schemas/ChangeDbkeyOperationParams'
          - $ref: '#/components/schemas/TagOperationParams'
          - type: 'null'
          title: Params
      required:
      - operation
      title: HistoryContentBulkOperationPayload
      type: object
    HistoryContentBulkOperationResult:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/BulkOperationItemError'
          title: Errors
          type: array
        success_count:
          title: Success Count
          type: integer
      required:
      - success_count
      - errors
      title: HistoryContentBulkOperationResult
      type: object
    HistoryContentItem:
      properties:
        history_content_type:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of this item.
          title: Content Type
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
      required:
      - history_content_type
      - id
      title: HistoryContentItem
      type: object
    HistoryContentItemOperation:
      enum:
      - hide
      - unhide
      - delete
      - undelete
      - purge
      - change_datatype
      - change_dbkey
      - add_tags
      - remove_tags
      title: HistoryContentItemOperation
      type: string
    HistoryContentSource:
      enum:
      - hda
      - hdca
      - library
      - library_folder
      - new_collection
      title: HistoryContentSource
      type: string
    HistoryContentStats:
      properties:
        total_matches:
          description: The total number of items that match the search query without
            any pagination
          title: Total Matches
          type: integer
      required:
      - total_matches
      title: HistoryContentStats
      type: object
    HistoryContentType:
      description: Available types of History contents.
      enum:
      - dataset
      - dataset_collection
      title: HistoryContentType
      type: string
    HistoryContentsResult:
      description: 'List of history content items.

        Can contain different views and kinds of items.'
      items:
        anyOf:
        - $ref: '#/components/schemas/HDADetailed'
        - $ref: '#/components/schemas/HDASummary'
        - $ref: '#/components/schemas/HDCADetailed'
        - $ref: '#/components/schemas/HDCASummary'
        - $ref: '#/components/schemas/CustomHistoryItem'
      title: HistoryContentsResult
      type: array
    HistoryContentsWithStatsResult:
      description: Includes stats with items counting
      properties:
        contents:
          description: The items matching the search query. Only the items fitting
            in the current page limit will be returned.
          items:
            anyOf:
            - $ref: '#/components/schemas/HDADetailed'
            - $ref: '#/components/schemas/HDASummary'
            - $ref: '#/components/schemas/HDCADetailed'
            - $ref: '#/components/schemas/HDCASummary'
            - $ref: '#/components/schemas/CustomHistoryItem'
          title: Contents
          type: array
        stats:
          allOf:
          - $ref: '#/components/schemas/HistoryContentStats'
          description: Contains counting stats for the query.
          title: Stats
      required:
      - stats
      - contents
      title: HistoryContentsWithStatsResult
      type: object
    HistoryDetailed:
      additionalProperties: true
      description: History detailed information.
      properties:
        annotation:
          anyOf:
          - type: string
          - type: 'null'
          description: An annotation to provide details or to help understand the
            purpose and usage of this item.
          title: Annotation
        archived:
          description: Whether this item has been archived and is no longer active.
          title: Archived
          type: boolean
        contents_url:
          description: The relative URL to access the contents of this History.
          title: Contents URL
          type: string
        count:
          description: The number of items in the history.
          title: Count
          type: integer
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        deleted:
          description: Whether this item is marked as deleted.
          title: Deleted
          type: boolean
        genome_build:
          anyOf:
          - type: string
          - type: 'null'
          default: '?'
          description: TODO
          title: Genome Build
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        importable:
          description: Whether this History can be imported by other users with a
            shared link.
          title: Importable
          type: boolean
        model_class:
          const: History
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the history.
          title: Name
          type: string
        preferred_object_store_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the object store that should be used to store new
            datasets in this history.
          title: Preferred Object Store ID
        published:
          description: Whether this resource is currently publicly available to all
            users.
          title: Published
          type: boolean
        purged:
          description: Whether this item has been permanently removed.
          title: Purged
          type: boolean
        size:
          description: The total size of the contents of this history in bytes.
          title: Size
          type: integer
        slug:
          anyOf:
          - type: string
          - type: 'null'
          description: Part of the URL to uniquely identify this History by link in
            a readable way.
          title: Slug
        state:
          allOf:
          - $ref: '#/components/schemas/DatasetState'
          description: The current state of the History based on the states of the
            datasets it contains.
          title: State
        state_details:
          additionalProperties:
            type: integer
          description: A dictionary keyed to possible dataset states and valued with
            the number of datasets in this history that have those states.
          title: State Counts
          type: object
        state_ids:
          additionalProperties:
            items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          description: A dictionary keyed to possible dataset states and valued with
            lists containing the ids of each HDA in that state.
          title: State IDs
          type: object
        tags:
          $ref: '#/components/schemas/TagCollection'
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
        user_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the user that owns this History.
          title: User ID
        username:
          anyOf:
          - type: string
          - type: 'null'
          description: Owner of the history
          title: Username
        username_and_slug:
          anyOf:
          - type: string
          - type: 'null'
          description: The relative URL in the form of /u/{username}/h/{slug}
          title: Username and slug
      required:
      - model_class
      - id
      - name
      - deleted
      - purged
      - archived
      - url
      - published
      - count
      - annotation
      - tags
      - update_time
      - contents_url
      - size
      - create_time
      - importable
      - state
      - state_ids
      - state_details
      title: HistoryDetailed
      type: object
    HistoryMinimal:
      additionalProperties: true
      description: Minimal History Response with optional fields
      properties:
        id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          title: Id
        model_class:
          const: History
          description: The name of the database model class.
          title: Model class
          type: string
        user_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the user that owns this History.
          title: User ID
      required:
      - model_class
      title: HistoryMinimal
      type: object
    HistorySummary:
      additionalProperties: true
      description: History summary information.
      properties:
        annotation:
          anyOf:
          - type: string
          - type: 'null'
          description: An annotation to provide details or to help understand the
            purpose and usage of this item.
          title: Annotation
        archived:
          description: Whether this item has been archived and is no longer active.
          title: Archived
          type: boolean
        count:
          description: The number of items in the history.
          title: Count
          type: integer
        deleted:
          description: Whether this item is marked as deleted.
          title: Deleted
          type: boolean
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        model_class:
          const: History
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the history.
          title: Name
          type: string
        preferred_object_store_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the object store that should be used to store new
            datasets in this history.
          title: Preferred Object Store ID
        published:
          description: Whether this resource is currently publicly available to all
            users.
          title: Published
          type: boolean
        purged:
          description: Whether this item has been permanently removed.
          title: Purged
          type: boolean
        tags:
          $ref: '#/components/schemas/TagCollection'
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
      required:
      - model_class
      - id
      - name
      - deleted
      - purged
      - archived
      - url
      - published
      - count
      - annotation
      - tags
      - update_time
      title: HistorySummary
      type: object
    Hyperlink:
      description: Represents some text with an Hyperlink.
      properties:
        href:
          description: Specifies the linked document, resource, or location.
          format: uri
          minLength: 1
          title: HRef
          type: string
        target:
          description: Specifies where to open the linked document.
          examples:
          - _blank
          title: Target
          type: string
        text:
          description: The text placeholder for the link.
          title: Text
          type: string
      required:
      - target
      - href
      - text
      title: Hyperlink
      type: object
    ImplicitCollectionJobsStateSummary:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        model:
          const: ImplicitCollectionJobs
          description: The name of the database model class.
          title: Model class
          type: string
        populated_state:
          allOf:
          - $ref: '#/components/schemas/DatasetCollectionPopulatedState'
          description: 'Indicates the general state of the elements in the dataset
            collection:- ''new'': new dataset collection, unpopulated elements.- ''ok'':
            collection elements populated (HDAs may or may not have errors).- ''failed'':
            some problem populating, won''t be populated.'
          title: Populated State
        states:
          additionalProperties:
            type: integer
          default: {}
          description: A dictionary of job states and the number of jobs in that state.
          title: States
          type: object
      required:
      - id
      - populated_state
      - model
      title: ImplicitCollectionJobsStateSummary
      type: object
    ImportToolDataBundle:
      properties:
        source:
          discriminator:
            mapping:
              hda: '#/components/schemas/ImportToolDataBundleDatasetSource'
              ldda: '#/components/schemas/ImportToolDataBundleDatasetSource'
              uri: '#/components/schemas/ImportToolDataBundleUriSource'
            propertyName: src
          oneOf:
          - $ref: '#/components/schemas/ImportToolDataBundleDatasetSource'
          - $ref: '#/components/schemas/ImportToolDataBundleUriSource'
          title: Source
      required:
      - source
      title: ImportToolDataBundle
      type: object
    ImportToolDataBundleDatasetSource:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        src:
          description: Indicates that the tool data should be resolved from a dataset.
          enum:
          - hda
          - ldda
          title: src
          type: string
      required:
      - src
      - id
      title: ImportToolDataBundleDatasetSource
      type: object
    ImportToolDataBundleUriSource:
      properties:
        src:
          const: uri
          description: Indicates that the tool data should be resolved by a URI.
          title: src
        uri:
          description: URI to fetch tool data bundle from (file:// URIs are fine because
            this is an admin-only operation)
          title: uri
          type: string
      required:
      - src
      - uri
      title: ImportToolDataBundleUriSource
      type: object
    InputArguments:
      properties:
        dbkey:
          anyOf:
          - type: string
          - type: 'null'
          default: '?'
          description: Sets the database key of the objects being fetched to Galaxy.
          title: Database Key
        file_type:
          anyOf:
          - type: string
          - type: 'null'
          default: auto
          description: 'Sets the Galaxy datatype (e.g., `bam`) for the objects being
            fetched to Galaxy. See the following link for a complete list of Galaxy
            data types: https://galaxyproject.org/learn/datatypes/.'
          title: File Type
        space_to_tab:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: A boolean value ('true' or 'false') that sets if spaces should
            be converted to tab in the objects being fetched to Galaxy. Applicable
            only if `to_posix_lines` is True
          title: Spaces to tabs
        to_posix_lines:
          anyOf:
          - const: 'Yes'
          - type: boolean
          - type: 'null'
          default: 'Yes'
          description: A boolean value ('true' or 'false'); if 'Yes', converts universal
            line endings to POSIX line endings. Set to 'False' if you upload a gzip,
            bz2 or zip archive containing a binary file.
          title: POSIX line endings
      title: InputArguments
      type: object
    InstalledRepositoryToolShedStatus:
      properties:
        latest_installable_revision:
          anyOf:
          - type: string
          - type: 'null'
          description: Most recent version available on the tool shed
          title: Latest installed revision
        repository_deprecated:
          anyOf:
          - type: string
          - type: 'null'
          description: Repository has been depreciated on the tool shed
          title: Repository deprecated
        revision_update:
          title: Revision Update
          type: string
        revision_upgrade:
          anyOf:
          - type: string
          - type: 'null'
          title: Revision Upgrade
      required:
      - latest_installable_revision
      - revision_update
      - repository_deprecated
      title: InstalledRepositoryToolShedStatus
      type: object
    InstalledToolShedRepository:
      properties:
        changeset_revision:
          description: Changeset revision of the repository - a mercurial commit hash
          title: Changeset revision
          type: string
        ctx_rev:
          anyOf:
          - type: string
          - type: 'null'
          description: The linearized 0-based index of the changeset on the tool shed
            (0, 1, 2,...)
          title: Changeset revision number
        deleted:
          title: Deleted
          type: boolean
        dist_to_shed:
          title: Dist To Shed
          type: boolean
        error_message:
          default: Installation error message, the empty string means no error was
            recorded
          title: Error Message
          type: string
        id:
          description: Encoded ID of the install tool shed repository.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        installed_changeset_revision:
          description: Initially installed changeset revision. Used to construct path
            to repository within Galaxies filesystem. Does not change if a repository
            is updated.
          title: Installed changeset revision
          type: string
        model_class:
          const: ToolShedRepository
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: Name of repository
          title: Name
          type: string
        owner:
          description: Owner of repository
          title: Owner
          type: string
        status:
          title: Status
          type: string
        tool_shed:
          description: Hostname of the tool shed this was installed from
          title: Tool shed
          type: string
        tool_shed_status:
          anyOf:
          - $ref: '#/components/schemas/InstalledRepositoryToolShedStatus'
          - type: 'null'
          title: Latest updated status from the tool shed
        uninstalled:
          title: Uninstalled
          type: boolean
      required:
      - model_class
      - id
      - status
      - name
      - owner
      - deleted
      - ctx_rev
      - installed_changeset_revision
      - tool_shed
      - dist_to_shed
      - uninstalled
      - changeset_revision
      - tool_shed_status
      title: InstalledToolShedRepository
      type: object
    InvocationCancellationHistoryDeletedResponse:
      properties:
        history_id:
          description: History ID of history that was deleted.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        reason:
          const: history_deleted
          title: Reason
      required:
      - reason
      - history_id
      title: InvocationCancellationHistoryDeletedResponse
      type: object
    InvocationCancellationReviewFailedResponse:
      properties:
        reason:
          const: cancelled_on_review
          title: Reason
        workflow_step_id:
          description: Workflow step id of paused step that did not pass review.
          title: Workflow Step Id
          type: integer
      required:
      - reason
      - workflow_step_id
      title: InvocationCancellationReviewFailedResponse
      type: object
    InvocationCancellationUserRequestResponse:
      properties:
        reason:
          const: user_request
          title: Reason
      required:
      - reason
      title: InvocationCancellationUserRequestResponse
      type: object
    InvocationEvaluationWarningWorkflowOutputNotFoundResponse:
      properties:
        output_name:
          description: Output that was designated as workflow output but that has
            not been found
          title: Output Name
          type: string
        reason:
          const: workflow_output_not_found
          title: Reason
        workflow_step_id:
          title: Workflow step id of step that caused a warning.
          type: integer
      required:
      - reason
      - workflow_step_id
      - output_name
      title: InvocationEvaluationWarningWorkflowOutputNotFoundResponse
      type: object
    InvocationFailureCollectionFailedResponse:
      properties:
        dependent_workflow_step_id:
          description: Workflow step id of step that caused failure.
          title: Dependent Workflow Step Id
          type: integer
        hdca_id:
          description: HistoryDatasetCollectionAssociation ID that relates to failure.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: HistoryDatasetCollectionAssociation ID
          type: string
        reason:
          const: collection_failed
          title: Reason
        workflow_step_id:
          description: Workflow step id of step that failed.
          title: Workflow Step Id
          type: integer
      required:
      - reason
      - workflow_step_id
      - hdca_id
      - dependent_workflow_step_id
      title: InvocationFailureCollectionFailedResponse
      type: object
    InvocationFailureDatasetFailedResponse:
      properties:
        dependent_workflow_step_id:
          anyOf:
          - type: integer
          - type: 'null'
          description: Workflow step id of step that caused failure.
          title: Dependent Workflow Step Id
        hda_id:
          description: HistoryDatasetAssociation ID that relates to failure.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: HistoryDatasetAssociation ID
          type: string
        reason:
          const: dataset_failed
          title: Reason
        workflow_step_id:
          description: Workflow step id of step that failed.
          title: Workflow Step Id
          type: integer
      required:
      - reason
      - workflow_step_id
      - hda_id
      title: InvocationFailureDatasetFailedResponse
      type: object
    InvocationFailureExpressionEvaluationFailedResponse:
      properties:
        details:
          anyOf:
          - type: string
          - type: 'null'
          description: May contain details to help troubleshoot this problem.
          title: Details
        reason:
          const: expression_evaluation_failed
          title: Reason
        workflow_step_id:
          description: Workflow step id of step that failed.
          title: Workflow Step Id
          type: integer
      required:
      - reason
      - workflow_step_id
      title: InvocationFailureExpressionEvaluationFailedResponse
      type: object
    InvocationFailureJobFailedResponse:
      properties:
        dependent_workflow_step_id:
          description: Workflow step id of step that caused failure.
          title: Dependent Workflow Step Id
          type: integer
        job_id:
          description: Job ID that relates to failure.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Job ID
          type: string
        reason:
          const: job_failed
          title: Reason
        workflow_step_id:
          description: Workflow step id of step that failed.
          title: Workflow Step Id
          type: integer
      required:
      - reason
      - workflow_step_id
      - job_id
      - dependent_workflow_step_id
      title: InvocationFailureJobFailedResponse
      type: object
    InvocationFailureOutputNotFoundResponse:
      properties:
        dependent_workflow_step_id:
          description: Workflow step id of step that caused failure.
          title: Dependent Workflow Step Id
          type: integer
        output_name:
          title: Tool or module output name that was referenced but not produced
          type: string
        reason:
          const: output_not_found
          title: Reason
        workflow_step_id:
          description: Workflow step id of step that failed.
          title: Workflow Step Id
          type: integer
      required:
      - reason
      - workflow_step_id
      - output_name
      - dependent_workflow_step_id
      title: InvocationFailureOutputNotFoundResponse
      type: object
    InvocationFailureWhenNotBooleanResponse:
      properties:
        details:
          description: Contains details to help troubleshoot this problem.
          title: Details
          type: string
        reason:
          const: when_not_boolean
          title: Reason
        workflow_step_id:
          description: Workflow step id of step that failed.
          title: Workflow Step Id
          type: integer
      required:
      - reason
      - workflow_step_id
      - details
      title: InvocationFailureWhenNotBooleanResponse
      type: object
    InvocationInput:
      properties:
        id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the dataset/dataset collection.
          title: ID
        label:
          anyOf:
          - type: string
          - type: 'null'
          description: Label of the workflow step associated with the input dataset/dataset
            collection.
          title: Label
        src:
          anyOf:
          - const: hda
          - const: hdca
          description: Source type of the input dataset/dataset collection.
          title: Source
        workflow_step_id:
          description: The encoded ID of the workflow step associated with the dataset/dataset
            collection.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Workflow step ID
          type: string
      required:
      - workflow_step_id
      - src
      title: InvocationInput
      type: object
    InvocationInputParameter:
      properties:
        label:
          description: Label of the workflow step associated with the input parameter.
          title: Label
          type: string
        parameter_value:
          description: Value of the input parameter.
          title: Parameter value
        workflow_step_id:
          description: The encoded ID of the workflow step associated with the input
            parameter.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Workflow step ID
          type: string
      required:
      - parameter_value
      - label
      - workflow_step_id
      title: InvocationInputParameter
      type: object
    InvocationJobsResponse:
      properties:
        id:
          description: The encoded ID of the workflow invocation.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model:
          const: WorkflowInvocation
          title: Model
        populated_state:
          allOf:
          - $ref: '#/components/schemas/JobState'
          description: The absolute state of all the jobs related to the Invocation.
          title: Populated state
        states:
          additionalProperties:
            type: integer
          description: The states of all the jobs related to the Invocation.
          title: States
          type: object
      required:
      - id
      - states
      - populated_state
      - model
      title: InvocationJobsResponse
      type: object
    InvocationOutput:
      properties:
        id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the dataset/dataset collection.
          title: ID
        src:
          const: hda
          description: Source model of the output dataset.
          title: Source
        workflow_step_id:
          description: The encoded ID of the workflow step associated with the dataset/dataset
            collection.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Workflow step ID
          type: string
      required:
      - workflow_step_id
      - src
      title: InvocationOutput
      type: object
    InvocationOutputCollection:
      properties:
        id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the dataset/dataset collection.
          title: ID
        src:
          const: hdca
          description: Source model of the output dataset collection.
          title: Source
        workflow_step_id:
          description: The encoded ID of the workflow step associated with the dataset/dataset
            collection.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Workflow step ID
          type: string
      required:
      - workflow_step_id
      - src
      title: InvocationOutputCollection
      type: object
    InvocationReport:
      description: Report describing workflow invocation
      properties:
        errors:
          anyOf:
          - type: object
          - type: 'null'
          description: Errors associated with the invocation.
          title: Errors
        generate_time:
          anyOf:
          - type: string
          - type: 'null'
          description: The version of Galaxy this object was generated with.
          title: Galaxy Version
        generate_version:
          anyOf:
          - type: string
          - type: 'null'
          description: The version of Galaxy this object was generated with.
          title: Galaxy Version
        histories:
          anyOf:
          - type: object
          - type: 'null'
          description: Histories associated with the invocation.
          title: Histories
        history_dataset_collections:
          anyOf:
          - type: object
          - type: 'null'
          description: History dataset collections associated with the invocation.
          title: History dataset collections
        history_datasets:
          anyOf:
          - type: object
          - type: 'null'
          description: History datasets associated with the invocation.
          title: History datasets
        id:
          description: The workflow this invocation has been triggered for.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Workflow ID
          type: string
        invocation_markdown:
          anyOf:
          - type: string
          - type: 'null'
          description: Raw galaxy-flavored markdown contents of the report.
          title: Markdown
        invocations:
          anyOf:
          - type: object
          - type: 'null'
          description: Other invocations associated with the invocation.
          title: Invocations
        jobs:
          anyOf:
          - type: object
          - type: 'null'
          description: Jobs associated with the invocation.
          title: Jobs
        markdown:
          anyOf:
          - type: string
          - type: 'null'
          description: Raw galaxy-flavored markdown contents of the report.
          title: Markdown
        model_class:
          const: Report
          description: The name of the database model class.
          title: Model class
          type: string
        render_format:
          const: markdown
          default: markdown
          description: Format of the invocation report.
          title: Render format
        title:
          description: The name of the report.
          title: Title
          type: string
        username:
          description: The name of the user who owns this report.
          title: Username
          type: string
        workflows:
          anyOf:
          - type: object
          - type: 'null'
          description: Workflows associated with the invocation.
          title: Workflows
      required:
      - model_class
      - id
      - username
      - title
      title: InvocationReport
      type: object
    InvocationSerializationView:
      enum:
      - element
      - collection
      title: InvocationSerializationView
      type: string
    InvocationSortByEnum:
      enum:
      - create_time
      - update_time
      - None
      title: InvocationSortByEnum
      type: string
    InvocationState:
      enum:
      - new
      - ready
      - scheduled
      - cancelled
      - cancelling
      - failed
      title: InvocationState
      type: string
    InvocationStep:
      description: Information about workflow invocation step
      properties:
        action:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to take action on the invocation step.
          title: Action
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation Step ID
          type: string
        job_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          title: Job Id
        jobs:
          default: []
          description: Jobs associated with the workflow invocation step.
          items:
            $ref: '#/components/schemas/JobBaseModel'
          title: Jobs
          type: array
        model_class:
          const: WorkflowInvocationStep
          description: The name of the database model class.
          title: Model class
          type: string
        order_index:
          description: The index of the workflow step in the workflow.
          title: Order index
          type: integer
        output_collections:
          additionalProperties:
            $ref: '#/components/schemas/InvocationStepCollectionOutput'
          default: {}
          description: The dataset collection outputs of the workflow invocation step.
          title: Output collections
          type: object
        outputs:
          additionalProperties:
            $ref: '#/components/schemas/InvocationStepOutput'
          default: {}
          description: The outputs of the workflow invocation step.
          title: Outputs
          type: object
        state:
          anyOf:
          - $ref: '#/components/schemas/InvocationStepState'
          - $ref: '#/components/schemas/JobState'
          - type: 'null'
          description: Describes where in the scheduling process the workflow invocation
            step is.
          title: State of the invocation step
        subworkflow_invocation_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          title: Subworkflow Invocation Id
        update_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The last time and date this item was updated.
          title: Update Time
        workflow_step_id:
          description: The encoded ID of the workflow step associated with this workflow
            invocation step.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Workflow step ID
          type: string
        workflow_step_label:
          anyOf:
          - type: string
          - type: 'null'
          description: The label of the workflow step
          title: Step label
        workflow_step_uuid:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          description: Universal unique identifier of the workflow step.
          title: UUID
      required:
      - model_class
      - id
      - update_time
      - job_id
      - workflow_step_id
      - subworkflow_invocation_id
      - action
      - order_index
      title: InvocationStep
      type: object
    InvocationStepCollectionOutput:
      properties:
        id:
          description: Dataset Collection ID of the workflow step output.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Dataset Collection ID
          type: string
        src:
          const: hdca
          default: hdca
          description: The source model of the output.
          title: src
      required:
      - id
      title: InvocationStepCollectionOutput
      type: object
    InvocationStepJobsResponseCollectionJobsModel:
      properties:
        id:
          description: The encoded ID of the workflow invocation.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model:
          const: ImplicitCollectionJobs
          title: Model
        populated_state:
          allOf:
          - $ref: '#/components/schemas/JobState'
          description: The absolute state of all the jobs related to the Invocation.
          title: Populated state
        states:
          additionalProperties:
            type: integer
          description: The states of all the jobs related to the Invocation.
          title: States
          type: object
      required:
      - id
      - states
      - populated_state
      - model
      title: InvocationStepJobsResponseCollectionJobsModel
      type: object
    InvocationStepJobsResponseJobModel:
      properties:
        id:
          description: The encoded ID of the workflow invocation.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model:
          const: Job
          title: Model
        populated_state:
          allOf:
          - $ref: '#/components/schemas/JobState'
          description: The absolute state of all the jobs related to the Invocation.
          title: Populated state
        states:
          additionalProperties:
            type: integer
          description: The states of all the jobs related to the Invocation.
          title: States
          type: object
      required:
      - id
      - states
      - populated_state
      - model
      title: InvocationStepJobsResponseJobModel
      type: object
    InvocationStepJobsResponseStepModel:
      properties:
        id:
          description: The encoded ID of the workflow invocation.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model:
          const: WorkflowInvocationStep
          title: Model
        populated_state:
          allOf:
          - $ref: '#/components/schemas/JobState'
          description: The absolute state of all the jobs related to the Invocation.
          title: Populated state
        states:
          additionalProperties:
            type: integer
          description: The states of all the jobs related to the Invocation.
          title: States
          type: object
      required:
      - id
      - states
      - populated_state
      - model
      title: InvocationStepJobsResponseStepModel
      type: object
    InvocationStepOutput:
      properties:
        id:
          description: Dataset ID of the workflow step output.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Dataset ID
          type: string
        src:
          const: hda
          default: hda
          description: The source model of the output.
          title: src
        uuid:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          description: Universal unique identifier of the workflow step output dataset.
          title: UUID
      required:
      - id
      title: InvocationStepOutput
      type: object
    InvocationStepState:
      enum:
      - new
      - ready
      - scheduled
      title: InvocationStepState
      type: string
    InvocationUnexpectedFailureResponse:
      properties:
        details:
          anyOf:
          - type: string
          - type: 'null'
          description: May contains details to help troubleshoot this problem.
          title: Details
        reason:
          const: unexpected_failure
          title: Reason
        workflow_step_id:
          anyOf:
          - type: integer
          - type: 'null'
          description: Workflow step id of step that failed.
          title: Workflow Step Id
      required:
      - reason
      title: InvocationUnexpectedFailureResponse
      type: object
    InvocationUpdatePayload:
      properties:
        action:
          description: Whether to take action on the invocation step.
          title: Action
          type: boolean
      required:
      - action
      title: InvocationUpdatePayload
      type: object
    ItemTagsCreatePayload:
      description: Payload schema for creating an item tag.
      properties:
        value:
          anyOf:
          - type: string
          - type: 'null'
          title: value of the item tag
      title: ItemTagsCreatePayload
      type: object
    ItemTagsListResponse:
      description: Response schema for listing item tags.
      items:
        $ref: '#/components/schemas/ItemTagsResponse'
      title: ItemTagsListResponse
      type: array
    ItemTagsPayload:
      properties:
        item_class:
          allOf:
          - $ref: '#/components/schemas/TaggableItemClass'
          description: The name of the class of the item that will be tagged.
          title: Item class
        item_id:
          description: The `encoded identifier` of the item whose tags will be updated.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Item ID
          type: string
        item_tags:
          anyOf:
          - $ref: '#/components/schemas/TagCollection'
          - type: 'null'
          description: The list of tags that will replace the current tags associated
            with the item.
          title: Item tags
      required:
      - item_id
      - item_class
      title: ItemTagsPayload
      type: object
    ItemTagsResponse:
      description: Response schema for showing an item tag.
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: item tag ID
          type: string
        model_class:
          title: model class
          type: string
        user_tname:
          title: name of the item tag
          type: string
        user_value:
          anyOf:
          - type: string
          - type: 'null'
          title: value of the item tag
      required:
      - model_class
      - id
      - user_tname
      title: ItemTagsResponse
      type: object
    ItemsFromSrc:
      enum:
      - url
      - files
      - path
      - ftp_import
      - server_dir
      title: ItemsFromSrc
      type: string
    JobBaseModel:
      properties:
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        exit_code:
          anyOf:
          - type: integer
          - type: 'null'
          description: The exit code returned by the tool. Can be unset if the job
            is not completed yet.
          title: Exit Code
        galaxy_version:
          anyOf:
          - type: string
          - type: 'null'
          description: The (major) version of Galaxy used to create this job.
          examples:
          - '21.05'
          title: Galaxy Version
        history_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the history associated with this item.
          title: History ID
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Job ID
          type: string
        model_class:
          const: Job
          description: The name of the database model class.
          title: Model class
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/JobState'
          description: Current state of the job.
          title: State
        tool_id:
          description: Identifier of the tool that generated this job.
          title: Tool ID
          type: string
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
      required:
      - model_class
      - id
      - tool_id
      - state
      - create_time
      - update_time
      title: JobBaseModel
      type: object
    JobDestinationParams:
      additionalProperties: true
      properties:
        Handler:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the process that handled the job.
          title: Handler
        Runner:
          anyOf:
          - type: string
          - type: 'null'
          description: Job runner class
          title: Runner
        Runner Job ID:
          anyOf:
          - type: string
          - type: 'null'
          description: ID assigned to submitted job by external job running system
          title: Runner Job ID
      title: JobDestinationParams
      type: object
    JobDisplayParametersSummary:
      properties:
        has_parameter_errors:
          description: The job has parameter errors
          title: Has parameter errors
          type: boolean
        outputs:
          additionalProperties:
            items:
              $ref: '#/components/schemas/JobOutput'
            type: array
          description: Dictionary mapping all the tool outputs (by name) with the
            corresponding dataset information in a nested format.
          title: Outputs
          type: object
        parameters:
          description: The parameters of the job in a nested format.
          items:
            $ref: '#/components/schemas/JobParameter'
          title: Parameters
          type: array
      required:
      - parameters
      - has_parameter_errors
      - outputs
      title: JobDisplayParametersSummary
      type: object
    JobErrorSummary:
      properties:
        messages:
          description: The error messages for the specified job.
          items:
            items:
              type: string
            type: array
          title: Error messages
          type: array
      required:
      - messages
      title: JobErrorSummary
      type: object
    JobExportHistoryArchiveListResponse:
      items:
        $ref: '#/components/schemas/JobExportHistoryArchiveModel'
      title: JobExportHistoryArchiveListResponse
      type: array
    JobExportHistoryArchiveModel:
      properties:
        download_url:
          description: Relative API URL to download the exported history archive.
          title: Download URL
          type: string
        external_download_latest_url:
          description: Fully qualified URL to download the latests version of the
            exported history archive.
          format: uri
          minLength: 1
          title: External Download Latest URL
          type: string
        external_download_permanent_url:
          description: Fully qualified URL to download this particular version of
            the exported history archive.
          format: uri
          minLength: 1
          title: External Download Permanent URL
          type: string
        id:
          description: The encoded database ID of the export request.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        job_id:
          description: The encoded database ID of the job that generated this history
            export archive.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Job ID
          type: string
        preparing:
          description: Whether the archive is currently being built or in preparation.
          title: Preparing
          type: boolean
        ready:
          description: Whether the export has completed successfully and the archive
            is ready
          title: Ready
          type: boolean
        up_to_date:
          description: False, if a new export archive should be generated.
          title: Up to Date
          type: boolean
      required:
      - id
      - ready
      - preparing
      - up_to_date
      - job_id
      - download_url
      - external_download_latest_url
      - external_download_permanent_url
      title: JobExportHistoryArchiveModel
      type: object
    JobIdResponse:
      description: Contains the ID of the job associated with a particular request.
      properties:
        job_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Job ID
          type: string
      required:
      - job_id
      title: JobIdResponse
      type: object
    JobImportHistoryResponse:
      properties:
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        exit_code:
          anyOf:
          - type: integer
          - type: 'null'
          description: The exit code returned by the tool. Can be unset if the job
            is not completed yet.
          title: Exit Code
        galaxy_version:
          anyOf:
          - type: string
          - type: 'null'
          description: The (major) version of Galaxy used to create this job.
          examples:
          - '21.05'
          title: Galaxy Version
        history_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the history associated with this item.
          title: History ID
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Job ID
          type: string
        message:
          description: Text message containing information about the history import.
          title: Message
          type: string
        model_class:
          const: Job
          description: The name of the database model class.
          title: Model class
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/JobState'
          description: Current state of the job.
          title: State
        tool_id:
          description: Identifier of the tool that generated this job.
          title: Tool ID
          type: string
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
      required:
      - model_class
      - id
      - tool_id
      - state
      - create_time
      - update_time
      - message
      title: JobImportHistoryResponse
      type: object
    JobIndexSortByEnum:
      enum:
      - create_time
      - update_time
      title: JobIndexSortByEnum
      type: string
    JobIndexViewEnum:
      enum:
      - collection
      - admin_job_list
      title: JobIndexViewEnum
      type: string
    JobInputAssociation:
      properties:
        dataset:
          allOf:
          - $ref: '#/components/schemas/EncodedDataItemSourceId'
          description: Reference to the associated item.
          title: dataset
        name:
          description: Name of the job input parameter.
          title: name
          type: string
      required:
      - name
      - dataset
      title: JobInputAssociation
      type: object
    JobInputSummary:
      properties:
        has_duplicate_inputs:
          description: Job has duplicate inputs.
          title: Duplicate inputs
          type: boolean
        has_empty_inputs:
          description: Job has empty inputs.
          title: Empty inputs
          type: boolean
      required:
      - has_empty_inputs
      - has_duplicate_inputs
      title: JobInputSummary
      type: object
    JobLock:
      properties:
        active:
          description: If active, jobs will not dispatch
          title: Job lock status
          type: boolean
      required:
      - active
      title: JobLock
      type: object
    JobMetric:
      example:
        name: start_epoch
        plugin: core
        raw_value: '1614261340.0000000'
        title: Job Start Time
        value: '2021-02-25 14:55:40'
      properties:
        name:
          description: The name of the metric variable.
          title: Name
          type: string
        plugin:
          description: The instrumenter plugin that generated this metric.
          title: Plugin
          type: string
        raw_value:
          description: The raw value of the metric as a string.
          title: Raw Value
          type: string
        title:
          description: A descriptive title for this metric.
          title: Title
          type: string
        value:
          description: The textual representation of the metric value.
          title: Value
          type: string
      required:
      - title
      - value
      - plugin
      - name
      - raw_value
      title: JobMetric
      type: object
    JobMetricCollection:
      default: []
      description: Represents a collection of metrics associated with a Job.
      items:
        $ref: '#/components/schemas/JobMetric'
      title: JobMetricCollection
      type: array
    JobOutput:
      properties:
        label:
          description: The output label
          title: Output label
        value:
          allOf:
          - $ref: '#/components/schemas/EncodedDataItemSourceId'
          description: The associated dataset.
          title: Dataset
      required:
      - label
      - value
      title: JobOutput
      type: object
    JobOutputAssociation:
      properties:
        dataset:
          allOf:
          - $ref: '#/components/schemas/EncodedDataItemSourceId'
          description: Reference to the associated item.
          title: dataset
        name:
          description: Name of the job output parameter.
          title: name
          type: string
      required:
      - name
      - dataset
      title: JobOutputAssociation
      type: object
    JobParameter:
      properties:
        depth:
          description: The depth of the job parameter.
          title: Depth
          type: integer
        notes:
          anyOf:
          - type: string
          - type: 'null'
          description: Notes associated with the job parameter.
          title: Notes
        text:
          description: Text associated with the job parameter.
          title: Text
          type: string
        value:
          anyOf:
          - items:
              $ref: '#/components/schemas/EncodedJobParameterHistoryItem'
            type: array
          - type: number
          - type: integer
          - type: boolean
          - type: string
          - type: 'null'
          description: The values of the job parameter
          title: Value
      required:
      - text
      - depth
      title: JobParameter
      type: object
    JobSourceType:
      description: Available types of job sources (model classes) that produce dataset
        collections.
      enum:
      - Job
      - ImplicitCollectionJobs
      - WorkflowInvocation
      title: JobSourceType
      type: string
    JobState:
      enum:
      - new
      - resubmitted
      - upload
      - waiting
      - queued
      - running
      - ok
      - error
      - failed
      - paused
      - deleting
      - deleted
      - stop
      - stopped
      - skipped
      title: JobState
      type: string
    JobStateSummary:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        model:
          const: Job
          description: The name of the database model class.
          title: Model class
          type: string
        populated_state:
          allOf:
          - $ref: '#/components/schemas/DatasetCollectionPopulatedState'
          description: 'Indicates the general state of the elements in the dataset
            collection:- ''new'': new dataset collection, unpopulated elements.- ''ok'':
            collection elements populated (HDAs may or may not have errors).- ''failed'':
            some problem populating, won''t be populated.'
          title: Populated State
        states:
          additionalProperties:
            type: integer
          default: {}
          description: A dictionary of job states and the number of jobs in that state.
          title: States
          type: object
      required:
      - id
      - populated_state
      - model
      title: JobStateSummary
      type: object
    JobSummary:
      description: Basic information about a job.
      properties:
        command_line:
          anyOf:
          - type: string
          - type: 'null'
          description: The command line produced by the job. Users can see this value
            if allowed in the configuration, administrator can always see this value.
          title: Command Line
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        exit_code:
          anyOf:
          - type: integer
          - type: 'null'
          description: The exit code returned by the tool. Can be unset if the job
            is not completed yet.
          title: Exit Code
        external_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The job id used by the external job runner (Condor, Pulsar,
            etc.). Only administrator can see this value.
          title: External ID
        galaxy_version:
          anyOf:
          - type: string
          - type: 'null'
          description: The (major) version of Galaxy used to create this job.
          examples:
          - '21.05'
          title: Galaxy Version
        handler:
          anyOf:
          - type: string
          - type: 'null'
          description: The job handler process assigned to handle this job. Only administrator
            can see this value.
          title: Job Handler
        history_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the history associated with this item.
          title: History ID
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Job ID
          type: string
        job_runner_name:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the job runner plugin that handles this job. Only administrator
            can see this value.
          title: Job Runner Name
        model_class:
          const: Job
          description: The name of the database model class.
          title: Model class
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/JobState'
          description: Current state of the job.
          title: State
        tool_id:
          description: Identifier of the tool that generated this job.
          title: Tool ID
          type: string
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        user_email:
          anyOf:
          - type: string
          - type: 'null'
          description: The email of the user that owns this job. Only the owner of
            the job and administrators can see this value.
          title: User Email
      required:
      - model_class
      - id
      - tool_id
      - state
      - create_time
      - update_time
      title: JobSummary
      type: object
    LabelValuePair:
      description: Generic Label/Value pair model.
      properties:
        label:
          description: The label of the item.
          title: Label
          type: string
        value:
          description: The value of the item.
          title: Value
          type: string
      required:
      - label
      - value
      title: LabelValuePair
      type: object
    LegacyLibraryPermissionsPayload:
      properties:
        LIBRARY_ACCESS_in:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should have
            access permission on the library.
          title: Access IDs
        LIBRARY_ADD_in:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should have
            manage permission on the library.
          title: Manage IDs
        LIBRARY_MANAGE_in:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should have
            modify permission on the library.
          title: Modify IDs
        LIBRARY_MODIFY_in:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should be able
            to add items to the library.
          title: Add IDs
      title: LegacyLibraryPermissionsPayload
      type: object
    LibraryAvailablePermissions:
      properties:
        page:
          description: Current page.
          title: Page
          type: integer
        page_limit:
          description: Maximum number of items per page.
          title: Page Limit
          type: integer
        roles:
          description: A list available roles that can be assigned to a particular
            permission.
          items:
            $ref: '#/components/schemas/BasicRoleModel'
          title: Roles
          type: array
        total:
          description: Total number of items
          title: Total
          type: integer
      required:
      - roles
      - page
      - page_limit
      - total
      title: LibraryAvailablePermissions
      type: object
    LibraryCurrentPermissions:
      properties:
        access_library_role_list:
          description: A list containing pairs of role names and corresponding encoded
            IDs which have access to the Library.
          items:
            items:
              type: string
            type: array
          title: Access Role List
          type: array
        add_library_item_role_list:
          description: A list containing pairs of role names and corresponding encoded
            IDs which can add items to the Library.
          items:
            items:
              type: string
            type: array
          title: Add Role List
          type: array
        manage_library_role_list:
          description: A list containing pairs of role names and corresponding encoded
            IDs which can manage the Library.
          items:
            items:
              type: string
            type: array
          title: Manage Role List
          type: array
        modify_library_role_list:
          description: A list containing pairs of role names and corresponding encoded
            IDs which can modify the Library.
          items:
            items:
              type: string
            type: array
          title: Modify Role List
          type: array
      required:
      - access_library_role_list
      - modify_library_role_list
      - manage_library_role_list
      - add_library_item_role_list
      title: LibraryCurrentPermissions
      type: object
    LibraryDestination:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Description for library to create
          title: Description
        name:
          description: Must specify a library name
          title: Name
          type: string
        synopsis:
          anyOf:
          - type: string
          - type: 'null'
          description: Description for library to create
          title: Synopsis
        type:
          const: library
          title: Type
      required:
      - type
      - name
      title: LibraryDestination
      type: object
    LibraryFolderContentsIndexResult:
      properties:
        folder_contents:
          items:
            discriminator:
              mapping:
                file: '#/components/schemas/FileLibraryFolderItem'
                folder: '#/components/schemas/FolderLibraryFolderItem'
              propertyName: type
            oneOf:
            - $ref: '#/components/schemas/FileLibraryFolderItem'
            - $ref: '#/components/schemas/FolderLibraryFolderItem'
          title: Folder Contents
          type: array
        metadata:
          $ref: '#/components/schemas/LibraryFolderMetadata'
      required:
      - metadata
      - folder_contents
      title: LibraryFolderContentsIndexResult
      type: object
    LibraryFolderCurrentPermissions:
      properties:
        add_library_item_role_list:
          description: A list containing pairs of role names and corresponding encoded
            IDs which can add items to the Library folder.
          items:
            items:
              type: string
            type: array
          title: Add Role List
          type: array
        manage_folder_role_list:
          description: A list containing pairs of role names and corresponding encoded
            IDs which can manage the Library folder.
          items:
            items:
              type: string
            type: array
          title: Manage Role List
          type: array
        modify_folder_role_list:
          description: A list containing pairs of role names and corresponding encoded
            IDs which can modify the Library folder.
          items:
            items:
              type: string
            type: array
          title: Modify Role List
          type: array
      required:
      - modify_folder_role_list
      - manage_folder_role_list
      - add_library_item_role_list
      title: LibraryFolderCurrentPermissions
      type: object
    LibraryFolderDestination:
      properties:
        library_folder_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Library Folder Id
          type: string
        type:
          const: library_folder
          title: Type
      required:
      - type
      - library_folder_id
      title: LibraryFolderDestination
      type: object
    LibraryFolderDetails:
      properties:
        deleted:
          description: Whether this folder is marked as deleted.
          title: Deleted
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: A detailed description of the library folder.
          title: Description
        genome_build:
          anyOf:
          - type: string
          - type: 'null'
          default: '?'
          description: TODO
          title: Genome Build
        id:
          description: Encoded ID of the library folder.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        item_count:
          description: A detailed description of the library folder.
          title: Item Count
          type: integer
        library_path:
          default: []
          description: The list of folder names composing the path to this folder.
          items:
            type: string
          title: Path
          type: array
        model_class:
          const: LibraryFolder
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the library folder.
          title: Name
          type: string
        parent_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: Encoded ID of the parent folder. Empty if it's the root folder.
          title: Parent Folder ID
        parent_library_id:
          description: Encoded ID of the Library this folder belongs to.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Parent Library ID
          type: string
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
      required:
      - model_class
      - id
      - name
      - item_count
      - parent_library_id
      - update_time
      - deleted
      title: LibraryFolderDetails
      type: object
    LibraryFolderMetadata:
      properties:
        can_add_library_item:
          title: Can Add Library Item
          type: boolean
        can_modify_folder:
          title: Can Modify Folder
          type: boolean
        folder_description:
          title: Folder Description
          type: string
        folder_name:
          title: Folder Name
          type: string
        full_path:
          items:
            maxItems: 2
            minItems: 2
            prefixItems:
            - example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            - type: string
            type: array
          title: Full Path
          type: array
        parent_library_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Parent Library Id
          type: string
        total_rows:
          title: Total Rows
          type: integer
      required:
      - parent_library_id
      - folder_name
      - folder_description
      - total_rows
      - can_modify_folder
      - can_add_library_item
      - full_path
      title: LibraryFolderMetadata
      type: object
    LibraryFolderPermissionAction:
      const: set_permissions
      title: LibraryFolderPermissionAction
      type: string
    LibraryFolderPermissionsPayload:
      properties:
        action:
          anyOf:
          - $ref: '#/components/schemas/LibraryFolderPermissionAction'
          - type: 'null'
          description: Indicates what action should be performed on the library folder.
          title: Action
        add_ids[]:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should be able
            to add items to the library.
          title: Add IDs
        manage_ids[]:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should have
            manage permission on the library.
          title: Manage IDs
        modify_ids[]:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should have
            modify permission on the library.
          title: Modify IDs
      title: LibraryFolderPermissionsPayload
      type: object
    LibraryLegacySummary:
      properties:
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        deleted:
          description: Whether this Library has been deleted.
          title: Deleted
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: A detailed description of the Library.
          title: Description
        id:
          description: Encoded ID of the Library.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model_class:
          const: Library
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the Library.
          title: Name
          type: string
        root_folder_id:
          description: Encoded ID of the Library's base folder.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Root Folder ID
          type: string
        synopsis:
          anyOf:
          - type: string
          - type: 'null'
          description: A short text describing the contents of the Library.
          title: Description
      required:
      - model_class
      - id
      - name
      - root_folder_id
      - create_time
      - deleted
      title: LibraryLegacySummary
      type: object
    LibraryPermissionAction:
      enum:
      - set_permissions
      - remove_restrictions
      title: LibraryPermissionAction
      type: string
    LibraryPermissionScope:
      enum:
      - current
      - available
      title: LibraryPermissionScope
      type: string
    LibraryPermissionsPayload:
      properties:
        access_ids[]:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should have
            access permission on the library.
          title: Access IDs
        action:
          anyOf:
          - $ref: '#/components/schemas/LibraryPermissionAction'
          - type: 'null'
          description: Indicates what action should be performed on the Library.
          title: Action
        add_ids[]:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should be able
            to add items to the library.
          title: Add IDs
        manage_ids[]:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should have
            manage permission on the library.
          title: Manage IDs
        modify_ids[]:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          default: []
          description: A list of role encoded IDs defining roles that should have
            modify permission on the library.
          title: Modify IDs
      title: LibraryPermissionsPayload
      type: object
    LibrarySummary:
      properties:
        can_user_add:
          description: Whether the current user can add contents to this Library.
          title: Can User Add
          type: boolean
        can_user_manage:
          description: Whether the current user can manage the Library and its contents.
          title: Can User Manage
          type: boolean
        can_user_modify:
          description: Whether the current user can modify this Library.
          title: Can User Modify
          type: boolean
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        create_time_pretty:
          description: Nice time representation of the creation date.
          examples:
          - 2 months ago
          title: Create Time Pretty
          type: string
        deleted:
          description: Whether this Library has been deleted.
          title: Deleted
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: A detailed description of the Library.
          title: Description
        id:
          description: Encoded ID of the Library.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model_class:
          const: Library
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the Library.
          title: Name
          type: string
        public:
          description: Whether this Library has been deleted.
          title: Public
          type: boolean
        root_folder_id:
          description: Encoded ID of the Library's base folder.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Root Folder ID
          type: string
        synopsis:
          anyOf:
          - type: string
          - type: 'null'
          description: A short text describing the contents of the Library.
          title: Description
      required:
      - model_class
      - id
      - name
      - root_folder_id
      - create_time
      - deleted
      - create_time_pretty
      - public
      - can_user_add
      - can_user_modify
      - can_user_manage
      title: LibrarySummary
      type: object
    LibrarySummaryList:
      default: []
      items:
        $ref: '#/components/schemas/LibrarySummary'
      title: LibrarySummaryList
      type: array
    LicenseMetadataModel:
      properties:
        detailsUrl:
          description: URL to the SPDX json details for this license
          examples:
          - http://spdx.org/licenses/Apache-2.0.json
          format: uri
          maxLength: 2083
          minLength: 1
          title: Details URL
          type: string
        isDeprecatedLicenseId:
          description: True if the entire license is deprecated
          examples:
          - false
          title: Deprecated License
          type: boolean
        isOsiApproved:
          description: Indicates if the [OSI](https://opensource.org/) has approved
            the license
          examples:
          - true
          title: OSI approved
          type: boolean
        licenseId:
          description: SPDX Identifier
          examples:
          - Apache-2.0
          title: Identifier
          type: string
        name:
          description: Full name of the license
          examples:
          - Apache License 2.0
          title: Name
          type: string
        recommended:
          description: True if this license is recommended to be used
          title: Recommended
          type: boolean
        reference:
          description: Reference to the HTML format for the license file
          examples:
          - ./Apache-2.0.html
          title: Reference
          type: string
        referenceNumber:
          description: '*Deprecated* - this field is generated and is no longer in
            use'
          title: Reference number
          type: integer
        seeAlso:
          description: Cross reference URL pointing to additional copies of the license
          items:
            format: uri
            maxLength: 2083
            minLength: 1
            type: string
          title: Reference URLs
          type: array
        spdxUrl:
          examples:
          - https://spdx.org/licenses/Apache-2.0.html
          format: uri
          maxLength: 2083
          minLength: 1
          title: SPDX URL
          type: string
        url:
          description: License URL
          examples:
          - http://www.apache.org/licenses/LICENSE-2.0
          format: uri
          maxLength: 2083
          minLength: 1
          title: URL
          type: string
      required:
      - licenseId
      - name
      - reference
      - referenceNumber
      - isDeprecatedLicenseId
      - isOsiApproved
      - seeAlso
      - detailsUrl
      - recommended
      - url
      - spdxUrl
      title: LicenseMetadataModel
      type: object
    LimitedUserModel:
      description: This is used when config options (expose_user_name and expose_user_email)
        are in place.
      properties:
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        id:
          description: Encoded ID of the user
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        username:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
      required:
      - id
      title: LimitedUserModel
      type: object
    Link:
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: Link
      type: object
    ListJstreeResponse:
      default: []
      deprecated: true
      items: {}
      title: ListJstreeResponse
      type: array
    ListUriResponse:
      default: []
      items:
        discriminator:
          mapping:
            Directory: '#/components/schemas/RemoteDirectory'
            File: '#/components/schemas/RemoteFile'
          propertyName: class
        oneOf:
        - $ref: '#/components/schemas/RemoteFile'
        - $ref: '#/components/schemas/RemoteDirectory'
      title: ListUriResponse
      type: array
    MandatoryNotificationCategory:
      const: broadcast
      description: 'These notification categories cannot be opt-out by the user.


        The user will always receive notifications from these categories.'
      title: MandatoryNotificationCategory
      type: string
    MaterializeDatasetInstanceAPIRequest:
      properties:
        content:
          description: 'Depending on the `source` it can be:

            - The encoded id of the source library dataset

            - The encoded id of the HDA

            '
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Content
          type: string
        source:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          description: The source of the content. Can be other history element to
            be copied or library elements.
          title: Source
      required:
      - source
      - content
      title: MaterializeDatasetInstanceAPIRequest
      type: object
    MessageNotificationContent:
      properties:
        category:
          const: message
          default: message
          title: Category
        message:
          description: The message of the notification (supports Markdown).
          title: Message
          type: string
        subject:
          description: The subject of the notification.
          title: Subject
          type: string
      required:
      - subject
      - message
      title: MessageNotificationContent
      type: object
    MetadataFile:
      description: Metadata file associated with a dataset.
      properties:
        download_url:
          description: The URL to download this item from the server.
          title: Download URL
          type: string
        file_type:
          description: TODO
          title: File Type
          type: string
      required:
      - file_type
      - download_url
      title: MetadataFile
      type: object
    Metric:
      properties:
        args:
          description: A JSON string containing an array of extra data.
          title: Arguments
          type: string
        level:
          description: An integer representing the metric's log level.
          title: Level
          type: integer
        namespace:
          description: Label indicating the source of the metric.
          title: Namespace
          type: string
        time:
          description: The timestamp in ISO format.
          examples:
          - '2021-01-23T18:25:43.511Z'
          title: Timestamp
          type: string
      required:
      - namespace
      - time
      - level
      - args
      title: Metric
      type: object
    ModelStoreFormat:
      description: Available types of model stores for export.
      enum:
      - tgz
      - tar
      - tar.gz
      - bag.zip
      - bag.tar
      - bag.tgz
      - rocrate.zip
      - bco.json
      title: ModelStoreFormat
      type: string
    NestedElement:
      additionalProperties: false
      properties:
        MD5:
          anyOf:
          - type: string
          - type: 'null'
          title: Md5
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        created_from_basename:
          anyOf:
          - type: string
          - type: 'null'
          title: Created From Basename
        dbkey:
          default: '?'
          title: Dbkey
          type: string
        deferred:
          default: false
          title: Deferred
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        elements:
          items:
            anyOf:
            - discriminator:
                mapping:
                  composite: '#/components/schemas/CompositeDataElement'
                  files: '#/components/schemas/FileDataElement'
                  ftp_import: '#/components/schemas/FtpImportElement'
                  pasted: '#/components/schemas/PastedDataElement'
                  path: '#/components/schemas/PathDataElement'
                  server_dir: '#/components/schemas/ServerDirElement'
                  url: '#/components/schemas/UrlDataElement'
                propertyName: src
              oneOf:
              - $ref: '#/components/schemas/FileDataElement'
              - $ref: '#/components/schemas/PastedDataElement'
              - $ref: '#/components/schemas/UrlDataElement'
              - $ref: '#/components/schemas/PathDataElement'
              - $ref: '#/components/schemas/ServerDirElement'
              - $ref: '#/components/schemas/FtpImportElement'
              - $ref: '#/components/schemas/CompositeDataElement'
            - $ref: '#/components/schemas/NestedElement'
          title: Elements
          type: array
        elements_from:
          anyOf:
          - $ref: '#/components/schemas/ElementsFromType'
          - type: 'null'
        ext:
          default: auto
          title: Ext
          type: string
        extra_files:
          anyOf:
          - $ref: '#/components/schemas/ExtraFiles'
          - type: 'null'
        info:
          anyOf:
          - type: string
          - type: 'null'
          title: Info
        name:
          anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
          - type: 'null'
          title: Name
        space_to_tab:
          default: false
          title: Space To Tab
          type: boolean
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
        to_posix_lines:
          default: false
          title: To Posix Lines
          type: boolean
      required:
      - elements
      title: NestedElement
      type: object
    NewSharedItemNotificationContent:
      properties:
        category:
          const: new_shared_item
          default: new_shared_item
          title: Category
        item_name:
          description: The name of the shared item.
          title: Item name
          type: string
        item_type:
          description: The type of the shared item.
          enum:
          - history
          - workflow
          - visualization
          - page
          title: Item type
          type: string
        owner_name:
          description: The name of the owner of the shared item.
          title: Owner name
          type: string
        slug:
          description: The slug of the shared item. Used for the link to the item.
          title: Slug
          type: string
      required:
      - item_type
      - item_name
      - owner_name
      - slug
      title: NewSharedItemNotificationContent
      type: object
    NotificationBroadcastUpdateRequest:
      description: A notification update request specific for broadcasting.
      properties:
        content:
          anyOf:
          - $ref: '#/components/schemas/BroadcastNotificationContent'
          - type: 'null'
          description: The content of the broadcast notification. Broadcast notifications
            are displayed prominently to all users and can contain action links to
            redirect the user to a specific page.
          title: Content
        expiration_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time when the notification should expire. By default it
            will expire after 6 months. Expired notifications will be permanently
            deleted.
          title: Expiration time
        publication_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time when the notification should be published. Notifications
            can be created and then scheduled to be published at a later time.
          title: Publication time
        source:
          anyOf:
          - type: string
          - type: 'null'
          description: The source of the notification. Represents the agent that created
            the notification.
          title: Source
        variant:
          anyOf:
          - $ref: '#/components/schemas/NotificationVariant'
          - type: 'null'
          description: The variant of the notification. Used to express the importance
            of the notification.
          title: Variant
      title: NotificationBroadcastUpdateRequest
      type: object
    NotificationCategorySettings:
      description: The settings for a notification category.
      properties:
        channels:
          allOf:
          - $ref: '#/components/schemas/NotificationChannelSettings'
          default:
            push: true
          description: The channels that the user wants to receive notifications from
            for this category.
          title: Channels
        enabled:
          default: true
          description: Whether the user wants to receive notifications for this category.
          title: Enabled
          type: boolean
      title: NotificationCategorySettings
      type: object
    NotificationChannelSettings:
      description: The settings for each channel of a notification category.
      properties:
        push:
          default: true
          description: Whether the user wants to receive push notifications in the
            browser for this category.
          title: Push
          type: boolean
      title: NotificationChannelSettings
      type: object
    NotificationCreateData:
      description: Basic common fields for all notification create requests.
      properties:
        category:
          anyOf:
          - $ref: '#/components/schemas/MandatoryNotificationCategory'
          - $ref: '#/components/schemas/PersonalNotificationCategory'
          description: The category of the notification. Represents the type of the
            notification. E.g. 'message' or 'new_shared_item'.
          title: Category
        content:
          description: The content of the notification. The structure depends on the
            category.
          discriminator:
            mapping:
              broadcast: '#/components/schemas/BroadcastNotificationContent'
              message: '#/components/schemas/MessageNotificationContent'
              new_shared_item: '#/components/schemas/NewSharedItemNotificationContent'
            propertyName: category
          oneOf:
          - $ref: '#/components/schemas/MessageNotificationContent'
          - $ref: '#/components/schemas/NewSharedItemNotificationContent'
          - $ref: '#/components/schemas/BroadcastNotificationContent'
          title: Content
        expiration_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time when the notification should expire. By default it
            will expire after 6 months. Expired notifications will be permanently
            deleted.
          title: Expiration time
        publication_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time when the notification should be published. Notifications
            can be created and then scheduled to be published at a later time.
          title: Publication time
        source:
          description: The source of the notification. Represents the agent that created
            the notification. E.g. 'galaxy' or 'admin'.
          title: Source
          type: string
        variant:
          allOf:
          - $ref: '#/components/schemas/NotificationVariant'
          description: The variant of the notification. Represents the intent or relevance
            of the notification. E.g. 'info' or 'urgent'.
          title: Variant
      required:
      - source
      - category
      - variant
      - content
      title: NotificationCreateData
      type: object
    NotificationCreateRequest:
      description: Contains the recipients and the notification to create.
      properties:
        notification:
          allOf:
          - $ref: '#/components/schemas/NotificationCreateData'
          description: The notification to create. The structure depends on the category.
          title: Notification
        recipients:
          allOf:
          - $ref: '#/components/schemas/NotificationRecipients'
          description: The recipients of the notification. Can be a combination of
            users, groups and roles.
          title: Recipients
      required:
      - recipients
      - notification
      title: NotificationCreateRequest
      type: object
    NotificationCreatedResponse:
      properties:
        notification:
          allOf:
          - $ref: '#/components/schemas/NotificationResponse'
          description: The notification that was created. The structure depends on
            the category.
          title: Notification
        total_notifications_sent:
          description: The total number of notifications that were sent to the recipients.
          title: Total notifications sent
          type: integer
      required:
      - total_notifications_sent
      - notification
      title: NotificationCreatedResponse
      type: object
    NotificationRecipients:
      description: The recipients of a notification. Can be a combination of users,
        groups and roles.
      properties:
        group_ids:
          default: []
          description: The list of encoded group IDs of the groups that should receive
            the notification.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: Group IDs
          type: array
        role_ids:
          default: []
          description: The list of encoded role IDs of the roles that should receive
            the notification.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: Role IDs
          type: array
        user_ids:
          default: []
          description: The list of encoded user IDs of the users that should receive
            the notification.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: User IDs
          type: array
      title: NotificationRecipients
      type: object
    NotificationResponse:
      description: Basic common fields for all notification responses.
      properties:
        category:
          anyOf:
          - $ref: '#/components/schemas/MandatoryNotificationCategory'
          - $ref: '#/components/schemas/PersonalNotificationCategory'
          description: The category of the notification. Represents the type of the
            notification. E.g. 'message' or 'new_shared_item'.
          title: Category
        content:
          description: The content of the notification. The structure depends on the
            category.
          discriminator:
            mapping:
              broadcast: '#/components/schemas/BroadcastNotificationContent'
              message: '#/components/schemas/MessageNotificationContent'
              new_shared_item: '#/components/schemas/NewSharedItemNotificationContent'
            propertyName: category
          oneOf:
          - $ref: '#/components/schemas/MessageNotificationContent'
          - $ref: '#/components/schemas/NewSharedItemNotificationContent'
          - $ref: '#/components/schemas/BroadcastNotificationContent'
          title: Content
        create_time:
          description: The time when the notification was created.
          format: date-time
          title: Create time
          type: string
        expiration_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time when the notification will expire. If not set, the
            notification will never expire. Expired notifications will be permanently
            deleted.
          title: Expiration time
        id:
          description: The encoded ID of the notification.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        publication_time:
          description: The time when the notification was published. Notifications
            can be created and then published at a later time.
          format: date-time
          title: Publication time
          type: string
        source:
          description: The source of the notification. Represents the agent that created
            the notification. E.g. 'galaxy' or 'admin'.
          title: Source
          type: string
        update_time:
          description: The time when the notification was last updated.
          format: date-time
          title: Update time
          type: string
        variant:
          allOf:
          - $ref: '#/components/schemas/NotificationVariant'
          description: The variant of the notification. Represents the intent or relevance
            of the notification. E.g. 'info' or 'urgent'.
          title: Variant
      required:
      - id
      - source
      - category
      - variant
      - create_time
      - update_time
      - publication_time
      - content
      title: NotificationResponse
      type: object
    NotificationStatusSummary:
      description: A summary of the notification status for a user. Contains only
        updates since a particular timestamp.
      properties:
        broadcasts:
          description: The list of updated broadcasts.
          items:
            $ref: '#/components/schemas/BroadcastNotificationResponse'
          title: Broadcasts
          type: array
        notifications:
          description: The list of updated notifications for the user.
          items:
            $ref: '#/components/schemas/UserNotificationResponse'
          title: Notifications
          type: array
        total_unread_count:
          description: The total number of unread notifications for the user.
          title: Total unread count
          type: integer
      required:
      - total_unread_count
      - notifications
      - broadcasts
      title: NotificationStatusSummary
      type: object
    NotificationVariant:
      description: The notification variant communicates the intent or relevance of
        the notification.
      enum:
      - info
      - warning
      - urgent
      title: NotificationVariant
      type: string
    NotificationsBatchRequest:
      properties:
        notification_ids:
          description: The list of encoded notification IDs of the notifications that
            should be updated.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: Notification IDs
          type: array
      required:
      - notification_ids
      title: NotificationsBatchRequest
      type: object
    NotificationsBatchUpdateResponse:
      description: The response of a batch update request.
      properties:
        updated_count:
          description: The number of notifications that were updated.
          title: Updated count
          type: integer
      required:
      - updated_count
      title: NotificationsBatchUpdateResponse
      type: object
    ObjectExportTaskResponse:
      properties:
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        export_metadata:
          anyOf:
          - $ref: '#/components/schemas/ExportObjectMetadata'
          - type: 'null'
        id:
          description: The encoded database ID of the export request.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        preparing:
          description: Whether the archive is currently being built or in preparation.
          title: Preparing
          type: boolean
        ready:
          description: Whether the export has completed successfully and the archive
            is ready
          title: Ready
          type: boolean
        task_uuid:
          description: The identifier of the task processing the export.
          format: uuid4
          title: Task ID
          type: string
        up_to_date:
          description: False, if a new export archive should be generated.
          title: Up to Date
          type: boolean
      required:
      - id
      - ready
      - preparing
      - up_to_date
      - task_uuid
      - create_time
      title: ObjectExportTaskResponse
      type: object
    Organization:
      properties:
        name:
          description: Name of the organization responsible for the service
          examples:
          - My organization
          title: Name
          type: string
        url:
          description: URL of the website of the organization (RFC 3986 format)
          examples:
          - https://example.com
          format: uri
          minLength: 1
          title: Url
          type: string
      required:
      - name
      - url
      title: Organization
      type: object
    PageContentFormat:
      enum:
      - markdown
      - html
      title: PageContentFormat
      type: string
    PageDetails:
      additionalProperties: true
      properties:
        content:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: Raw text contents of the last page revision (type dependent
            on content_format).
          title: Content
        content_format:
          allOf:
          - $ref: '#/components/schemas/PageContentFormat'
          default: html
          description: Either `markdown` or `html`.
          title: Content format
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        deleted:
          description: Whether this Page has been deleted.
          title: Deleted
          type: boolean
        email_hash:
          description: The encoded email of the user.
          title: Encoded email
          type: string
        generate_time:
          anyOf:
          - type: string
          - type: 'null'
          description: The version of Galaxy this object was generated with.
          title: Galaxy Version
        generate_version:
          anyOf:
          - type: string
          - type: 'null'
          description: The version of Galaxy this object was generated with.
          title: Galaxy Version
        id:
          description: Encoded ID of the Page.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        importable:
          description: Whether this Page can be imported.
          title: Importable
          type: boolean
        latest_revision_id:
          description: The encoded ID of the last revision of this Page.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Latest revision ID
          type: string
        model_class:
          const: Page
          description: The name of the database model class.
          title: Model class
          type: string
        published:
          description: Whether this Page has been published.
          title: Published
          type: boolean
        revision_ids:
          description: The history with the encoded ID of each revision of the Page.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: List of revisions
          type: array
        slug:
          description: The title slug for the page URL, must be unique.
          pattern: ^[a-z0-9\-]+$
          title: Identifier
          type: string
        tags:
          $ref: '#/components/schemas/TagCollection'
        title:
          description: The name of the page.
          title: Title
          type: string
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        username:
          description: The name of the user owning this Page.
          title: Username
          type: string
      required:
      - model_class
      - title
      - slug
      - id
      - username
      - email_hash
      - published
      - importable
      - deleted
      - latest_revision_id
      - revision_ids
      - create_time
      - update_time
      - tags
      title: PageDetails
      type: object
    PageSummary:
      properties:
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        deleted:
          description: Whether this Page has been deleted.
          title: Deleted
          type: boolean
        email_hash:
          description: The encoded email of the user.
          title: Encoded email
          type: string
        id:
          description: Encoded ID of the Page.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        importable:
          description: Whether this Page can be imported.
          title: Importable
          type: boolean
        latest_revision_id:
          description: The encoded ID of the last revision of this Page.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Latest revision ID
          type: string
        model_class:
          const: Page
          description: The name of the database model class.
          title: Model class
          type: string
        published:
          description: Whether this Page has been published.
          title: Published
          type: boolean
        revision_ids:
          description: The history with the encoded ID of each revision of the Page.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: List of revisions
          type: array
        slug:
          description: The title slug for the page URL, must be unique.
          pattern: ^[a-z0-9\-]+$
          title: Identifier
          type: string
        tags:
          $ref: '#/components/schemas/TagCollection'
        title:
          description: The name of the page.
          title: Title
          type: string
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        username:
          description: The name of the user owning this Page.
          title: Username
          type: string
      required:
      - model_class
      - title
      - slug
      - id
      - username
      - email_hash
      - published
      - importable
      - deleted
      - latest_revision_id
      - revision_ids
      - create_time
      - update_time
      - tags
      title: PageSummary
      type: object
    PageSummaryList:
      default: []
      items:
        $ref: '#/components/schemas/PageSummary'
      title: PageSummaryList
      type: array
    PastedDataElement:
      additionalProperties: false
      properties:
        MD5:
          anyOf:
          - type: string
          - type: 'null'
          title: Md5
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        created_from_basename:
          anyOf:
          - type: string
          - type: 'null'
          title: Created From Basename
        dbkey:
          default: '?'
          title: Dbkey
          type: string
        deferred:
          default: false
          title: Deferred
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        elements_from:
          anyOf:
          - $ref: '#/components/schemas/ElementsFromType'
          - type: 'null'
        ext:
          default: auto
          title: Ext
          type: string
        extra_files:
          anyOf:
          - $ref: '#/components/schemas/ExtraFiles'
          - type: 'null'
        info:
          anyOf:
          - type: string
          - type: 'null'
          title: Info
        name:
          anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
          - type: 'null'
          title: Name
        paste_content:
          anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
          description: Content to upload
          title: Paste Content
        space_to_tab:
          default: false
          title: Space To Tab
          type: boolean
        src:
          const: pasted
          title: Src
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
        to_posix_lines:
          default: false
          title: To Posix Lines
          type: boolean
      required:
      - src
      - paste_content
      title: PastedDataElement
      type: object
    PathDataElement:
      additionalProperties: false
      properties:
        MD5:
          anyOf:
          - type: string
          - type: 'null'
          title: Md5
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        created_from_basename:
          anyOf:
          - type: string
          - type: 'null'
          title: Created From Basename
        dbkey:
          default: '?'
          title: Dbkey
          type: string
        deferred:
          default: false
          title: Deferred
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        elements_from:
          anyOf:
          - $ref: '#/components/schemas/ElementsFromType'
          - type: 'null'
        ext:
          default: auto
          title: Ext
          type: string
        extra_files:
          anyOf:
          - $ref: '#/components/schemas/ExtraFiles'
          - type: 'null'
        info:
          anyOf:
          - type: string
          - type: 'null'
          title: Info
        link_data_only:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Link Data Only
        name:
          anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
          - type: 'null'
          title: Name
        path:
          title: Path
          type: string
        space_to_tab:
          default: false
          title: Space To Tab
          type: boolean
        src:
          const: path
          title: Src
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
        to_posix_lines:
          default: false
          title: To Posix Lines
          type: boolean
      required:
      - src
      - path
      title: PathDataElement
      type: object
    PersonalNotificationCategory:
      description: 'These notification categories can be opt-out by the user and will
        be

        displayed in the notification preferences.'
      enum:
      - message
      - new_shared_item
      title: PersonalNotificationCategory
      type: string
    PluginKind:
      description: Enum to distinguish between different kinds or categories of plugins.
      enum:
      - rfs
      - drs
      - rdm
      - stock
      title: PluginKind
      type: string
    PrepareStoreDownloadPayload:
      properties:
        bco_merge_history_metadata:
          default: false
          description: When reading tags/annotations to generate BCO object include
            history metadata.
          title: Bco Merge History Metadata
          type: boolean
        bco_override_algorithmic_error:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          description: Override algorithmic error for 'error domain' when generating
            BioCompute object.
          title: Bco Override Algorithmic Error
        bco_override_empirical_error:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          description: Override empirical error for 'error domain' when generating
            BioCompute object.
          title: Bco Override Empirical Error
        bco_override_environment_variables:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          description: Override environment variables for 'execution_domain' when
            generating BioCompute object.
          title: Bco Override Environment Variables
        bco_override_xref:
          anyOf:
          - items:
              $ref: '#/components/schemas/XrefItem'
            type: array
          - type: 'null'
          description: Override xref for 'description domain' when generating BioCompute
            object.
          title: Bco Override Xref
        include_deleted:
          default: false
          description: Include file contents for deleted datasets (if include_files
            is True).
          title: Include deleted
          type: boolean
        include_files:
          default: true
          description: include materialized files in export when available
          title: Include Files
          type: boolean
        include_hidden:
          default: false
          description: Include file contents for hidden datasets (if include_files
            is True).
          title: Include hidden
          type: boolean
        model_store_format:
          allOf:
          - $ref: '#/components/schemas/ModelStoreFormat'
          default: tar.gz
          description: format of model store to export
      title: PrepareStoreDownloadPayload
      type: object
    QuotaDetails:
      properties:
        bytes:
          description: The amount, expressed in bytes, of this Quota.
          title: Bytes
          type: integer
        default:
          default: []
          description: A list indicating which types of default user quotas, if any,
            are associated with this quota.
          items:
            $ref: '#/components/schemas/DefaultQuota'
          title: Default
          type: array
        description:
          description: Detailed text description for this Quota.
          title: Description
          type: string
        display_amount:
          description: Human-readable representation of the `amount` field.
          title: Display Amount
          type: string
        groups:
          default: []
          description: A list of specific groups of users associated with this quota.
          items:
            $ref: '#/components/schemas/GroupQuota'
          title: Groups
          type: array
        id:
          description: The `encoded identifier` of the quota.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model_class:
          const: Quota
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the quota. This must be unique within a Galaxy
            instance.
          title: Name
          type: string
        operation:
          allOf:
          - $ref: '#/components/schemas/QuotaOperation'
          default: '='
          description: 'Quotas can have one of three `operations`:- `=` : The quota
            is exactly the amount specified- `+` : The amount specified will be added
            to the amounts of the user''s other associated quota definitions- `-`
            : The amount specified will be subtracted from the amounts of the user''s
            other associated quota definitions'
          title: Operation
        quota_source_label:
          anyOf:
          - type: string
          - type: 'null'
          description: Quota source label
          title: Quota Source Label
        users:
          default: []
          description: A list of specific users associated with this quota.
          items:
            $ref: '#/components/schemas/UserQuota'
          title: Users
          type: array
      required:
      - model_class
      - id
      - name
      - description
      - bytes
      - display_amount
      title: QuotaDetails
      type: object
    QuotaModel:
      properties:
        enabled:
          title: Enabled
          type: boolean
        source:
          anyOf:
          - type: string
          - type: 'null'
          title: Source
      required:
      - enabled
      title: QuotaModel
      type: object
    QuotaOperation:
      enum:
      - '='
      - +
      - '-'
      title: QuotaOperation
      type: string
    QuotaSummary:
      description: Contains basic information about a Quota
      properties:
        id:
          description: The `encoded identifier` of the quota.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model_class:
          const: Quota
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: The name of the quota. This must be unique within a Galaxy
            instance.
          title: Name
          type: string
        quota_source_label:
          anyOf:
          - type: string
          - type: 'null'
          description: Quota source label
          title: Quota Source Label
        url:
          deprecated: true
          description: The relative URL to get this particular Quota details from
            the rest API.
          title: URL
          type: string
      required:
      - model_class
      - id
      - name
      - url
      title: QuotaSummary
      type: object
    QuotaSummaryList:
      default: []
      items:
        $ref: '#/components/schemas/QuotaSummary'
      title: QuotaSummaryList
      type: array
    ReloadFeedback:
      properties:
        failed:
          items:
            anyOf:
            - type: string
            - type: 'null'
          title: Failed
          type: array
        message:
          title: Message
          type: string
        reloaded:
          items:
            anyOf:
            - type: string
            - type: 'null'
          title: Reloaded
          type: array
      required:
      - message
      - reloaded
      - failed
      title: ReloadFeedback
      type: object
    RemoteDirectory:
      properties:
        class:
          const: Directory
          title: Class
        name:
          description: The name of the entry.
          title: Name
          type: string
        path:
          description: The path of the entry.
          title: Path
          type: string
        uri:
          description: The URI of the entry.
          title: URI
          type: string
      required:
      - name
      - uri
      - path
      - class
      title: RemoteDirectory
      type: object
    RemoteFile:
      properties:
        class:
          const: File
          title: Class
        ctime:
          description: The creation time of the file.
          title: Creation time
          type: string
        name:
          description: The name of the entry.
          title: Name
          type: string
        path:
          description: The path of the entry.
          title: Path
          type: string
        size:
          description: The size of the file in bytes.
          title: Size
          type: integer
        uri:
          description: The URI of the entry.
          title: URI
          type: string
      required:
      - name
      - uri
      - path
      - class
      - size
      - ctime
      title: RemoteFile
      type: object
    RemoteFilesDisableMode:
      enum:
      - folders
      - files
      title: RemoteFilesDisableMode
      type: string
    RemoteFilesFormat:
      enum:
      - flat
      - jstree
      - uri
      title: RemoteFilesFormat
      type: string
    RemoteUserCreationPayload:
      properties:
        remote_user_email:
          description: Email of the user
          title: Email
          type: string
      required:
      - remote_user_email
      title: RemoteUserCreationPayload
      type: object
    ReportJobErrorPayload:
      properties:
        dataset_id:
          description: The History Dataset Association ID related to the error.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History Dataset Association ID
          type: string
        email:
          anyOf:
          - type: string
          - type: 'null'
          description: Email address for communication with the user. Only required
            for anonymous users.
          title: Email
        message:
          anyOf:
          - type: string
          - type: 'null'
          description: The optional message sent with the error report.
          title: Message
      required:
      - dataset_id
      title: ReportJobErrorPayload
      type: object
    RequestDataType:
      description: Particular pieces of information that can be requested for a dataset.
      enum:
      - state
      - converted_datasets_state
      - data
      - features
      - raw_data
      - track_config
      - genome_data
      - in_use_state
      title: RequestDataType
      type: string
    Requirement:
      description: Available types of job sources (model classes) that produce dataset
        collections.
      enum:
      - logged_in
      - new_history
      - admin
      title: Requirement
      type: string
    RoleDefinitionModel:
      properties:
        description:
          description: Description of the role
          title: Description
          type: string
        group_ids:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - type: 'null'
          default: []
          title: Group IDs
        name:
          description: Name of the role
          title: Name
          type: string
        user_ids:
          anyOf:
          - items:
              example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            type: array
          - type: 'null'
          default: []
          title: User IDs
      required:
      - name
      - description
      title: RoleDefinitionModel
      type: object
    RoleListResponse:
      items:
        $ref: '#/components/schemas/RoleModelResponse'
      title: RoleListResponse
      type: array
    RoleModelResponse:
      properties:
        description:
          anyOf:
          - description: Description of the role
            title: Description
            type: string
          - type: 'null'
          title: Description
        id:
          description: Encoded ID of the role
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model_class:
          const: Role
          description: The name of the database model class.
          title: Model class
          type: string
        name:
          description: Name of the role
          title: Name
          type: string
        type:
          description: Type or category of the role
          title: Type
          type: string
        url:
          deprecated: true
          description: The relative URL to access this item.
          title: URL
          type: string
      required:
      - model_class
      - id
      - name
      - type
      - description
      - url
      title: RoleModelResponse
      type: object
    RootModel_Dict_str__int__:
      additionalProperties:
        type: integer
      title: RootModel[Dict[str, int]]
      type: object
    SearchJobsPayload:
      additionalProperties: true
      properties:
        inputs:
          description: The inputs of the job.
          title: Inputs
          type: object
        state:
          anyOf:
          - $ref: '#/components/schemas/JobState'
          - type: 'null'
          description: Current state of the job.
          title: State
        tool_id:
          description: The tool ID related to the job.
          title: Tool ID
          type: string
      required:
      - tool_id
      - inputs
      title: SearchJobsPayload
      type: object
    ServerDirElement:
      additionalProperties: false
      properties:
        MD5:
          anyOf:
          - type: string
          - type: 'null'
          title: Md5
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        created_from_basename:
          anyOf:
          - type: string
          - type: 'null'
          title: Created From Basename
        dbkey:
          default: '?'
          title: Dbkey
          type: string
        deferred:
          default: false
          title: Deferred
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        elements_from:
          anyOf:
          - $ref: '#/components/schemas/ElementsFromType'
          - type: 'null'
        ext:
          default: auto
          title: Ext
          type: string
        extra_files:
          anyOf:
          - $ref: '#/components/schemas/ExtraFiles'
          - type: 'null'
        info:
          anyOf:
          - type: string
          - type: 'null'
          title: Info
        link_data_only:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Link Data Only
        name:
          anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
          - type: 'null'
          title: Name
        server_dir:
          title: Server Dir
          type: string
        space_to_tab:
          default: false
          title: Space To Tab
          type: boolean
        src:
          const: server_dir
          title: Src
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
        to_posix_lines:
          default: false
          title: To Posix Lines
          type: boolean
      required:
      - src
      - server_dir
      title: ServerDirElement
      type: object
    Service:
      properties:
        contactUrl:
          anyOf:
          - format: uri
            minLength: 1
            type: string
          - type: 'null'
          description: URL of the contact for the provider of this service, e.g. a
            link to a contact form (RFC 3986 format), or an email (RFC 2368 format).
          examples:
          - mailto:support@example.com
          title: Contacturl
        createdAt:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Timestamp describing when the service was first deployed and
            available (RFC 3339 format)
          examples:
          - '2019-06-04T12:58:19Z'
          title: Createdat
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Description of the service. Should be human readable and provide
            information about the service.
          examples:
          - This service provides...
          title: Description
        documentationUrl:
          anyOf:
          - format: uri
            minLength: 1
            type: string
          - type: 'null'
          description: URL of the documentation of this service (RFC 3986 format).
            This should help someone learn how to use your service, including any
            specifics required to access data, e.g. authentication.
          examples:
          - https://docs.myservice.example.com
          title: Documentationurl
        environment:
          anyOf:
          - type: string
          - type: 'null'
          description: Environment the service is running in. Use this to distinguish
            between production, development and testing/staging deployments. Suggested
            values are prod, test, dev, staging. However this is advised and not enforced.
          examples:
          - test
          title: Environment
        id:
          description: Unique ID of this service. Reverse domain name notation is
            recommended, though not required. The identifier should attempt to be
            globally unique so it can be used in downstream aggregator services e.g.
            Service Registry.
          examples:
          - org.ga4gh.myservice
          title: Id
          type: string
        name:
          description: Name of this service. Should be human readable.
          examples:
          - My project
          title: Name
          type: string
        organization:
          allOf:
          - $ref: '#/components/schemas/Organization'
          description: Organization providing the service
        type:
          $ref: '#/components/schemas/ServiceType'
        updatedAt:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Timestamp describing when the service was last updated (RFC
            3339 format)
          examples:
          - '2019-06-04T12:58:19Z'
          title: Updatedat
        version:
          description: Version of the service being described. Semantic versioning
            is recommended, but other identifiers, such as dates or commit hashes,
            are also allowed. The version should be changed whenever the service is
            updated.
          examples:
          - 1.0.0
          title: Version
          type: string
      required:
      - id
      - name
      - type
      - organization
      - version
      title: Service
      type: object
    ServiceType:
      properties:
        artifact:
          description: Name of the API or GA4GH specification implemented. Official
            GA4GH types should be assigned as part of standards approval process.
            Custom artifacts are supported.
          examples:
          - beacon
          title: Artifact
          type: string
        group:
          description: Namespace in reverse domain name format. Use `org.ga4gh` for
            implementations compliant with official GA4GH specifications. For services
            with custom APIs not standardized by GA4GH, or implementations diverging
            from official GA4GH specifications, use a different namespace (e.g. your
            organization's reverse domain name).
          examples:
          - org.ga4gh
          title: Group
          type: string
        version:
          description: Version of the API or specification. GA4GH specifications use
            semantic versioning.
          examples:
          - 1.0.0
          title: Version
          type: string
      required:
      - group
      - artifact
      - version
      title: ServiceType
      type: object
    SetSlugPayload:
      properties:
        new_slug:
          description: The slug that will be used to access this shared item.
          title: New Slug
          type: string
      required:
      - new_slug
      title: SetSlugPayload
      type: object
    ShareHistoryExtra:
      properties:
        accessible_count:
          default: 0
          description: The number of datasets in the history that are public or accessible
            by all the target users.
          title: Accessible Count
          type: integer
        can_change:
          default: []
          description: A collection of datasets that are not accessible by one or
            more of the target users and that can be made accessible for others by
            the user sharing the history.
          items:
            $ref: '#/components/schemas/HDABasicInfo'
          title: Can Change
          type: array
        can_share:
          default: false
          description: Indicates whether the resource can be directly shared or requires
            further actions.
          title: Can Share
          type: boolean
        cannot_change:
          default: []
          description: A collection of datasets that are not accessible by one or
            more of the target users and that cannot be made accessible for others
            by the user sharing the history.
          items:
            $ref: '#/components/schemas/HDABasicInfo'
          title: Cannot Change
          type: array
      title: ShareHistoryExtra
      type: object
    ShareHistoryWithStatus:
      properties:
        email_hash:
          anyOf:
          - type: string
          - type: 'null'
          description: Encoded owner email.
          title: Encoded Email
        errors:
          default: []
          description: Collection of messages indicating that the resource was not
            shared with some (or all users) due to an error.
          items:
            type: string
          title: Errors
          type: array
        extra:
          allOf:
          - $ref: '#/components/schemas/ShareHistoryExtra'
          description: Optional extra information about this shareable resource that
            may be of interest. The contents of this field depend on the particular
            resource.
          title: Extra
        id:
          description: The encoded ID of the resource to be shared.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        importable:
          description: Whether this resource can be published using a link.
          title: Importable
          type: boolean
        published:
          description: Whether this resource is currently published.
          title: Published
          type: boolean
        title:
          description: The title or name of the resource.
          title: Title
          type: string
        username:
          anyOf:
          - type: string
          - type: 'null'
          description: The owner's username.
          title: Username
        username_and_slug:
          anyOf:
          - type: string
          - type: 'null'
          description: The relative URL in the form of /u/{username}/{resource_single_char}/{slug}
          title: Username and slug
        users_shared_with:
          default: []
          description: The list of encoded ids for users the resource has been shared.
          items:
            $ref: '#/components/schemas/UserEmail'
          title: Users shared with
          type: array
      required:
      - id
      - title
      - importable
      - published
      - extra
      title: ShareHistoryWithStatus
      type: object
    ShareWithExtra:
      properties:
        can_share:
          default: false
          description: Indicates whether the resource can be directly shared or requires
            further actions.
          title: Can Share
          type: boolean
      title: ShareWithExtra
      type: object
    ShareWithPayload:
      properties:
        share_option:
          anyOf:
          - $ref: '#/components/schemas/SharingOptions'
          - type: 'null'
          description: "User choice for sharing resources which its contents may be\
            \ restricted:\n - None: The user did not choose anything yet or no option\
            \ is needed.\n - make_public: The contents of the resource will be made\
            \ publicly accessible.\n - make_accessible_to_shared: This will automatically\
            \ create a new `sharing role` allowing protected contents to be accessed\
            \ only by the desired users.\n - no_changes: This won't change the current\
            \ permissions for the contents. The user which this resource will be shared\
            \ may not be able to access all its contents.\n"
          title: Share Option
        user_ids:
          description: A collection of encoded IDs (or email addresses) of users that
            this resource will be shared with.
          items:
            anyOf:
            - example: 0123456789ABCDEF
              minLength: 16
              pattern: '[0-9a-fA-F]+'
              type: string
            - type: string
          title: User Identifiers
          type: array
      required:
      - user_ids
      title: ShareWithPayload
      type: object
    ShareWithStatus:
      properties:
        email_hash:
          anyOf:
          - type: string
          - type: 'null'
          description: Encoded owner email.
          title: Encoded Email
        errors:
          default: []
          description: Collection of messages indicating that the resource was not
            shared with some (or all users) due to an error.
          items:
            type: string
          title: Errors
          type: array
        extra:
          anyOf:
          - $ref: '#/components/schemas/ShareWithExtra'
          - type: 'null'
          description: Optional extra information about this shareable resource that
            may be of interest. The contents of this field depend on the particular
            resource.
          title: Extra
        id:
          description: The encoded ID of the resource to be shared.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        importable:
          description: Whether this resource can be published using a link.
          title: Importable
          type: boolean
        published:
          description: Whether this resource is currently published.
          title: Published
          type: boolean
        title:
          description: The title or name of the resource.
          title: Title
          type: string
        username:
          anyOf:
          - type: string
          - type: 'null'
          description: The owner's username.
          title: Username
        username_and_slug:
          anyOf:
          - type: string
          - type: 'null'
          description: The relative URL in the form of /u/{username}/{resource_single_char}/{slug}
          title: Username and slug
        users_shared_with:
          default: []
          description: The list of encoded ids for users the resource has been shared.
          items:
            $ref: '#/components/schemas/UserEmail'
          title: Users shared with
          type: array
      required:
      - id
      - title
      - importable
      - published
      title: ShareWithStatus
      type: object
    SharingOptions:
      description: Options for sharing resources that may have restricted access to
        all or part of their contents.
      enum:
      - make_public
      - make_accessible_to_shared
      - no_changes
      title: SharingOptions
      type: string
    SharingStatus:
      properties:
        email_hash:
          anyOf:
          - type: string
          - type: 'null'
          description: Encoded owner email.
          title: Encoded Email
        id:
          description: The encoded ID of the resource to be shared.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        importable:
          description: Whether this resource can be published using a link.
          title: Importable
          type: boolean
        published:
          description: Whether this resource is currently published.
          title: Published
          type: boolean
        title:
          description: The title or name of the resource.
          title: Title
          type: string
        username:
          anyOf:
          - type: string
          - type: 'null'
          description: The owner's username.
          title: Username
        username_and_slug:
          anyOf:
          - type: string
          - type: 'null'
          description: The relative URL in the form of /u/{username}/{resource_single_char}/{slug}
          title: Username and slug
        users_shared_with:
          default: []
          description: The list of encoded ids for users the resource has been shared.
          items:
            $ref: '#/components/schemas/UserEmail'
          title: Users shared with
          type: array
      required:
      - id
      - title
      - importable
      - published
      title: SharingStatus
      type: object
    ShortTermStoreExportPayload:
      properties:
        duration:
          anyOf:
          - type: integer
          - type: number
          - type: 'null'
          title: Duration
        include_deleted:
          default: false
          description: Include file contents for deleted datasets (if include_files
            is True).
          title: Include deleted
          type: boolean
        include_files:
          default: true
          description: include materialized files in export when available
          title: Include Files
          type: boolean
        include_hidden:
          default: false
          description: Include file contents for hidden datasets (if include_files
            is True).
          title: Include hidden
          type: boolean
        model_store_format:
          allOf:
          - $ref: '#/components/schemas/ModelStoreFormat'
          default: tar.gz
          description: format of model store to export
        short_term_storage_request_id:
          format: uuid
          title: Short Term Storage Request Id
          type: string
      required:
      - short_term_storage_request_id
      title: ShortTermStoreExportPayload
      type: object
    ShowFullJobResponse:
      properties:
        command_line:
          anyOf:
          - type: string
          - type: 'null'
          description: The command line produced by the job. Users can see this value
            if allowed in the configuration, administrator can always see this value.
          title: Command Line
        command_version:
          anyOf:
          - type: string
          - type: 'null'
          description: Tool version indicated during job execution.
          title: Command Version
        copied_from_job_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: Reference to cached job if job execution was cached.
          title: Copied from Job-ID
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        dependencies:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          description: The dependencies of the job.
          title: Job dependencies
        exit_code:
          anyOf:
          - type: integer
          - type: 'null'
          description: The exit code returned by the tool. Can be unset if the job
            is not completed yet.
          title: Exit Code
        external_id:
          anyOf:
          - type: string
          - type: 'null'
          description: The job id used by the external job runner (Condor, Pulsar,
            etc.). Only administrator can see this value.
          title: External ID
        galaxy_version:
          anyOf:
          - type: string
          - type: 'null'
          description: The (major) version of Galaxy used to create this job.
          examples:
          - '21.05'
          title: Galaxy Version
        handler:
          anyOf:
          - type: string
          - type: 'null'
          description: The job handler process assigned to handle this job. Only administrator
            can see this value.
          title: Job Handler
        history_id:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          - type: 'null'
          description: The encoded ID of the history associated with this item.
          title: History ID
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Job ID
          type: string
        inputs:
          additionalProperties:
            $ref: '#/components/schemas/EncodedDatasetJobInfo'
          default: {}
          description: Dictionary mapping all the tool inputs (by name) to the corresponding
            data references.
          title: Inputs
          type: object
        job_messages:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          description: List with additional information and possible reasons for a
            failed job.
          title: Job Messages
        job_metrics:
          anyOf:
          - $ref: '#/components/schemas/JobMetricCollection'
          - type: 'null'
          description: Collections of metrics provided by `JobInstrumenter` plugins
            on a particular job. Only administrators can see these metrics.
          title: Job Metrics
        job_runner_name:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the job runner plugin that handles this job. Only administrator
            can see this value.
          title: Job Runner Name
        job_stderr:
          anyOf:
          - type: string
          - type: 'null'
          description: The captured standard error of the job execution.
          title: Job Standard Error
        job_stdout:
          anyOf:
          - type: string
          - type: 'null'
          description: The captured standard output of the job execution.
          title: Job Standard Output
        model_class:
          const: Job
          description: The name of the database model class.
          title: Model class
          type: string
        output_collections:
          additionalProperties:
            $ref: '#/components/schemas/EncodedHdcaSourceId'
          default: {}
          description: ''
          title: Output collections
          type: object
        outputs:
          additionalProperties:
            $ref: '#/components/schemas/EncodedDatasetJobInfo'
          default: {}
          description: Dictionary mapping all the tool outputs (by name) to the corresponding
            data references.
          title: Outputs
          type: object
        params:
          description: Object containing all the parameters of the tool associated
            with this job. The specific parameters depend on the tool itself.
          title: Parameters
        state:
          allOf:
          - $ref: '#/components/schemas/JobState'
          description: Current state of the job.
          title: State
        stderr:
          anyOf:
          - type: string
          - type: 'null'
          description: Combined tool and job standard error streams.
          title: Standard Error
        stdout:
          anyOf:
          - type: string
          - type: 'null'
          description: Combined tool and job standard output streams.
          title: Standard Output
        tool_id:
          description: Identifier of the tool that generated this job.
          title: Tool ID
          type: string
        tool_stderr:
          anyOf:
          - type: string
          - type: 'null'
          description: The captured standard error of the tool executed by the job.
          title: Tool Standard Error
        tool_stdout:
          anyOf:
          - type: string
          - type: 'null'
          description: The captured standard output of the tool executed by the job.
          title: Tool Standard Output
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        user_email:
          anyOf:
          - type: string
          - type: 'null'
          description: The email of the user that owns this job. Only the owner of
            the job and administrators can see this value.
          title: User Email
      required:
      - model_class
      - id
      - tool_id
      - state
      - create_time
      - update_time
      - params
      title: ShowFullJobResponse
      type: object
    Src:
      enum:
      - url
      - pasted
      - files
      - path
      - composite
      - ftp_import
      - server_dir
      title: Src
      type: string
    StorageItemCleanupError:
      properties:
        error:
          title: Error
          type: string
        item_id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Item Id
          type: string
      required:
      - item_id
      - error
      title: StorageItemCleanupError
      type: object
    StorageItemsCleanupResult:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/StorageItemCleanupError'
          title: Errors
          type: array
        success_item_count:
          title: Success Item Count
          type: integer
        total_free_bytes:
          title: Total Free Bytes
          type: integer
        total_item_count:
          title: Total Item Count
          type: integer
      required:
      - total_item_count
      - success_item_count
      - total_free_bytes
      - errors
      title: StorageItemsCleanupResult
      type: object
    StoreExportPayload:
      properties:
        include_deleted:
          default: false
          description: Include file contents for deleted datasets (if include_files
            is True).
          title: Include deleted
          type: boolean
        include_files:
          default: true
          description: include materialized files in export when available
          title: Include Files
          type: boolean
        include_hidden:
          default: false
          description: Include file contents for hidden datasets (if include_files
            is True).
          title: Include hidden
          type: boolean
        model_store_format:
          allOf:
          - $ref: '#/components/schemas/ModelStoreFormat'
          default: tar.gz
          description: format of model store to export
      title: StoreExportPayload
      type: object
    StoredItem:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        name:
          title: Name
          type: string
        size:
          title: Size
          type: integer
        type:
          anyOf:
          - const: history
          - const: dataset
          title: Type
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
      required:
      - id
      - name
      - type
      - size
      - update_time
      title: StoredItem
      type: object
    StoredItemOrderBy:
      description: Available options for sorting Stored Items results.
      enum:
      - name-asc
      - name-dsc
      - size-asc
      - size-dsc
      - update_time-asc
      - update_time-dsc
      title: StoredItemOrderBy
      type: string
    SuitableConverter:
      properties:
        name:
          description: The name of the converter.
          title: Name
          type: string
        original_type:
          description: The type to convert from.
          title: Original Type
          type: string
        target_type:
          description: The type to convert to.
          title: Target Type
          type: string
        tool_id:
          description: The ID of the tool that can perform the type conversion.
          title: Tool Id
          type: string
      required:
      - tool_id
      - name
      - target_type
      - original_type
      title: SuitableConverter
      type: object
    SuitableConverters:
      description: Collection of converters that can be used on a particular dataset
        collection.
      items:
        $ref: '#/components/schemas/SuitableConverter'
      title: SuitableConverters
      type: array
    SupportedType:
      enum:
      - None
      - BasicAuth
      - BearerAuth
      - PassportAuth
      title: SupportedType
      type: string
    TagCollection:
      description: Represents the collection of tags associated with an item.
      items:
        pattern: ^([^\s.:])+(.[^\s.:]+)*(:[^\s.:]+)?$
        type: string
      title: TagCollection
      type: array
    TagOperationParams:
      properties:
        tags:
          items:
            type: string
          title: Tags
          type: array
        type:
          anyOf:
          - const: add_tags
          - const: remove_tags
          title: Type
      required:
      - type
      - tags
      title: TagOperationParams
      type: object
    TaggableItemClass:
      enum:
      - History
      - HistoryDatasetAssociation
      - HistoryDatasetCollectionAssociation
      - LibraryDatasetDatasetAssociation
      - Page
      - StoredWorkflow
      - Visualization
      title: TaggableItemClass
      type: string
    TaskState:
      description: Enum representing the possible states of a task.
      enum:
      - PENDING
      - STARTED
      - RETRY
      - FAILURE
      - SUCCESS
      title: TaskState
      type: string
    ToolDataDetails:
      properties:
        columns:
          description: A list of column names
          examples:
          - value
          - dbkey
          - name
          - path
          items:
            type: string
          title: Columns
          type: array
        fields:
          default: []
          description: ''
          items:
            items:
              type: string
            type: array
          title: Fields
          type: array
        model_class:
          description: The name of class modelling this tool data
          examples:
          - TabularToolDataTable
          title: Model class
          type: string
        name:
          description: The name of this tool data entry
          examples:
          - all_fasta
          title: Name
          type: string
      required:
      - name
      - model_class
      - columns
      title: ToolDataDetails
      type: object
    ToolDataEntry:
      properties:
        model_class:
          description: The name of class modelling this tool data
          examples:
          - TabularToolDataTable
          title: Model class
          type: string
        name:
          description: The name of this tool data entry
          examples:
          - all_fasta
          title: Name
          type: string
      required:
      - name
      - model_class
      title: ToolDataEntry
      type: object
    ToolDataEntryList:
      items:
        $ref: '#/components/schemas/ToolDataEntry'
      title: ToolDataEntryList
      type: array
    ToolDataField:
      properties:
        base_dir:
          description: A list of directories where the data files are stored
          items:
            type: string
          title: Base directories
          type: array
        fields:
          additionalProperties:
            type: string
          description: ''
          title: Fields
          type: object
        files:
          additionalProperties:
            type: integer
          description: A dictionary of file names and their size in bytes
          examples:
          - file.txt: 136
          title: Files
          type: object
        fingerprint:
          description: SHA1 Hash
          examples:
          - 22b45237a85c2b3f474bf66888c534387ffe0ced
          title: Fingerprint
          type: string
        model_class:
          description: The name of class modelling this tool data field
          examples:
          - TabularToolDataField
          title: Model class
          type: string
        name:
          description: The name of the field
          title: Name
          type: string
      required:
      - name
      - model_class
      - fields
      - base_dir
      - files
      - fingerprint
      title: ToolDataField
      type: object
    ToolDataItem:
      properties:
        values:
          description: A `\t` (TAB) separated list of column __contents__. You must
            specify a value for each of the columns of the data table.
          examples:
          - "value\tdbkey\tname\tpath"
          title: Values
          type: string
      required:
      - values
      title: ToolDataItem
      type: object
    Tour:
      properties:
        description:
          description: Tour description
          title: Description
          type: string
        id:
          description: Tour identifier
          title: Identifier
          type: string
        name:
          description: Name of tour
          title: Name
          type: string
        requirements:
          description: Requirements to run the tour.
          items:
            $ref: '#/components/schemas/Requirement'
          title: Requirements
          type: array
        tags:
          description: Topic topic tags
          items:
            type: string
          title: Tags
          type: array
      required:
      - name
      - description
      - tags
      - requirements
      - id
      title: Tour
      type: object
    TourDetails:
      properties:
        description:
          description: Tour description
          title: Description
          type: string
        name:
          description: Name of tour
          title: Name
          type: string
        requirements:
          description: Requirements to run the tour.
          items:
            $ref: '#/components/schemas/Requirement'
          title: Requirements
          type: array
        steps:
          description: Tour steps
          items:
            $ref: '#/components/schemas/TourStep'
          title: Steps
          type: array
        tags:
          description: Topic topic tags
          items:
            type: string
          title: Tags
          type: array
        title_default:
          anyOf:
          - type: string
          - type: 'null'
          description: Default title for each step
          title: Default title
      required:
      - name
      - description
      - tags
      - requirements
      - steps
      title: TourDetails
      type: object
    TourList:
      default: []
      items:
        $ref: '#/components/schemas/Tour'
      title: TourList
      type: array
    TourStep:
      properties:
        content:
          anyOf:
          - type: string
          - type: 'null'
          description: Text shown to the user
          title: Content
        element:
          anyOf:
          - type: string
          - type: 'null'
          description: CSS selector for the element to be described/clicked
          title: Element
        placement:
          anyOf:
          - type: string
          - type: 'null'
          description: Placement of the text box relative to the selected element
          title: Placement
        postclick:
          anyOf:
          - type: boolean
          - items:
              type: string
            type: array
          - type: 'null'
          description: Elements that receive a click() event after the step is shown
          title: Post-click
        preclick:
          anyOf:
          - type: boolean
          - items:
              type: string
            type: array
          - type: 'null'
          description: Elements that receive a click() event before the step is shown
          title: Pre-click
        textinsert:
          anyOf:
          - type: string
          - type: 'null'
          description: Text to insert if element is a text box (e.g. tool search or
            upload)
          title: Text-insert
        title:
          anyOf:
          - type: string
          - type: 'null'
          description: Title displayed in the header of the step container
          title: Title
      title: TourStep
      type: object
    UndeleteHistoriesPayload:
      properties:
        ids:
          description: List of history IDs to be undeleted.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: IDs
          type: array
      required:
      - ids
      title: UndeleteHistoriesPayload
      type: object
    UpdateCollectionAttributePayload:
      additionalProperties: false
      description: Contains attributes that can be updated for all elements in a dataset
        collection.
      properties:
        dbkey:
          description: TODO
          title: Dbkey
          type: string
      required:
      - dbkey
      title: UpdateCollectionAttributePayload
      type: object
    UpdateContentItem:
      additionalProperties: true
      description: Used for updating a particular history item. All fields are optional.
      properties:
        history_content_type:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of this item.
          title: Content Type
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
      required:
      - history_content_type
      - id
      title: UpdateContentItem
      type: object
    UpdateHistoryContentsBatchPayload:
      additionalProperties: true
      description: Contains property values that will be updated for all the history
        `items` provided.
      example:
        items:
        - history_content_type: dataset
          id: string
        visible: false
      properties:
        items:
          description: A list of content items to update with the changes.
          items:
            $ref: '#/components/schemas/UpdateContentItem'
          title: Items
          type: array
      required:
      - items
      title: UpdateHistoryContentsBatchPayload
      type: object
    UpdateHistoryContentsPayload:
      additionalProperties: true
      description: Can contain arbitrary/dynamic fields that will be updated for a
        particular history item.
      example:
        annotation: Test
        visible: false
      properties:
        annotation:
          anyOf:
          - type: string
          - type: 'null'
          description: A user-defined annotation for this item.
          title: Annotation
        deleted:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether this item is marked as deleted.
          title: Deleted
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The new name of the item.
          title: Name
        tags:
          anyOf:
          - $ref: '#/components/schemas/TagCollection'
          - type: 'null'
          description: A list of tags to add to this item.
          title: Tags
        visible:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether this item is visible in the history.
          title: Visible
      title: UpdateHistoryContentsPayload
      type: object
    UpdateLibraryFolderPayload:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: The new description of the library folder.
          title: Description
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The new name of the library folder.
          title: Name
      title: UpdateLibraryFolderPayload
      type: object
    UpdateLibraryPayload:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: A detailed description of the Library. Leave unset to keep
            the existing.
          title: Description
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The new name of the Library. Leave unset to keep the existing.
          title: Name
        synopsis:
          anyOf:
          - type: string
          - type: 'null'
          description: A short text describing the contents of the Library. Leave
            unset to keep the existing.
          title: Synopsis
      title: UpdateLibraryPayload
      type: object
    UpdateObjectStoreIdPayload:
      properties:
        object_store_id:
          description: Object store ID to update to, it must be an object store with
            the same device ID as the target dataset currently.
          title: Object Store Id
          type: string
      required:
      - object_store_id
      title: UpdateObjectStoreIdPayload
      type: object
    UpdateQuotaParams:
      properties:
        amount:
          anyOf:
          - type: string
          - type: 'null'
          description: Quota size (E.g. ``10000MB``, ``99 gb``, ``0.2T``, ``unlimited``)
          title: Amount
        default:
          anyOf:
          - $ref: '#/components/schemas/DefaultQuotaValues'
          - type: 'null'
          description: Whether or not this is a default quota. Valid values are ``no``,
            ``unregistered``, ``registered``. Calling this method with ``default="no"``
            on a non-default quota will throw an error. Not passing this parameter
            is equivalent to passing ``no``.
          title: Default
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Detailed text description for this Quota.
          title: Description
        in_groups:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: A list of group IDs or names to associate with this quota.
          title: Groups
        in_users:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: A list of user IDs or user emails to associate with this quota.
          title: Users
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: The new name of the quota. This must be unique within a Galaxy
            instance.
          title: Name
        operation:
          allOf:
          - $ref: '#/components/schemas/QuotaOperation'
          default: '='
          description: One of (``+``, ``-``, ``=``). If you wish to change this value,
            you must also provide the ``amount``, otherwise it will not take effect.
          title: Operation
      title: UpdateQuotaParams
      type: object
    UpdateUserNotificationPreferencesRequest:
      description: Contains the new notification preferences of a user.
      examples:
      - preferences:
          message:
            channels:
              push: true
            enabled: true
          new_shared_item:
            channels:
              push: true
            enabled: true
      properties:
        preferences:
          additionalProperties:
            $ref: '#/components/schemas/NotificationCategorySettings'
          description: The new notification preferences of the user.
          title: Preferences
          type: object
      required:
      - preferences
      title: UpdateUserNotificationPreferencesRequest
      type: object
    UrlDataElement:
      additionalProperties: false
      properties:
        MD5:
          anyOf:
          - type: string
          - type: 'null'
          title: Md5
        auto_decompress:
          default: false
          description: Decompress compressed data before sniffing?
          title: Auto Decompress
          type: boolean
        collection_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Collection Type
        created_from_basename:
          anyOf:
          - type: string
          - type: 'null'
          title: Created From Basename
        dbkey:
          default: '?'
          title: Dbkey
          type: string
        deferred:
          default: false
          title: Deferred
          type: boolean
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        elements_from:
          anyOf:
          - $ref: '#/components/schemas/ElementsFromType'
          - type: 'null'
        ext:
          default: auto
          title: Ext
          type: string
        extra_files:
          anyOf:
          - $ref: '#/components/schemas/ExtraFiles'
          - type: 'null'
        info:
          anyOf:
          - type: string
          - type: 'null'
          title: Info
        name:
          anyOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
          - type: 'null'
          title: Name
        space_to_tab:
          default: false
          title: Space To Tab
          type: boolean
        src:
          const: url
          title: Src
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
        to_posix_lines:
          default: false
          title: To Posix Lines
          type: boolean
        url:
          description: URL to upload
          title: Url
          type: string
      required:
      - src
      - url
      title: UrlDataElement
      type: object
    UserBeaconSetting:
      properties:
        enabled:
          description: True if beacon sharing is enabled
          title: Enabled
          type: boolean
      required:
      - enabled
      title: UserBeaconSetting
      type: object
    UserCreationPayload:
      properties:
        email:
          description: Email of the user
          title: Email
          type: string
        password:
          description: The password of the user.
          title: user_password
          type: string
        username:
          description: The name of the user.
          title: user_name
          type: string
      required:
      - password
      - email
      - username
      title: UserCreationPayload
      type: object
    UserDeletionPayload:
      properties:
        purge:
          description: Purge the user
          title: Purge user
          type: boolean
      required:
      - purge
      title: UserDeletionPayload
      type: object
    UserEmail:
      properties:
        email:
          description: The email of the user.
          title: Email
          type: string
        id:
          description: The encoded ID of the user.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: User ID
          type: string
      required:
      - id
      - email
      title: UserEmail
      type: object
    UserModel:
      description: User in a transaction context.
      properties:
        active:
          description: User is active
          title: Active
          type: boolean
        deleted:
          description: ' User is deleted'
          title: Deleted
          type: boolean
        email:
          description: Email of the user
          title: Email
          type: string
        id:
          description: Encoded ID of the user
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        last_password_change:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: ''
          title: Last password change
        model_class:
          const: User
          description: The name of the database model class.
          title: Model class
          type: string
        username:
          description: The name of the user.
          title: user_name
          type: string
      required:
      - model_class
      - id
      - username
      - email
      - deleted
      - active
      - last_password_change
      title: UserModel
      type: object
    UserNotificationListResponse:
      description: A list of user notifications.
      items:
        $ref: '#/components/schemas/UserNotificationResponse'
      title: UserNotificationListResponse
      type: array
    UserNotificationPreferences:
      description: Contains the full notification preferences of a user.
      examples:
      - preferences:
          message:
            channels:
              push: true
            enabled: true
          new_shared_item:
            channels:
              push: true
            enabled: true
      properties:
        preferences:
          additionalProperties:
            $ref: '#/components/schemas/NotificationCategorySettings'
          description: The notification preferences of the user.
          title: Preferences
          type: object
      required:
      - preferences
      title: UserNotificationPreferences
      type: object
    UserNotificationResponse:
      description: A notification response specific to the user.
      properties:
        category:
          allOf:
          - $ref: '#/components/schemas/PersonalNotificationCategory'
          description: The category of the notification. Represents the type of the
            notification. E.g. 'message' or 'new_shared_item'.
          title: Category
        content:
          description: The content of the notification. The structure depends on the
            category.
          discriminator:
            mapping:
              broadcast: '#/components/schemas/BroadcastNotificationContent'
              message: '#/components/schemas/MessageNotificationContent'
              new_shared_item: '#/components/schemas/NewSharedItemNotificationContent'
            propertyName: category
          oneOf:
          - $ref: '#/components/schemas/MessageNotificationContent'
          - $ref: '#/components/schemas/NewSharedItemNotificationContent'
          - $ref: '#/components/schemas/BroadcastNotificationContent'
          title: Content
        create_time:
          description: The time when the notification was created.
          format: date-time
          title: Create time
          type: string
        deleted:
          description: Whether the notification is marked as deleted by the user.
            Deleted notifications don't show up in the notification list.
          title: Deleted
          type: boolean
        expiration_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time when the notification will expire. If not set, the
            notification will never expire. Expired notifications will be permanently
            deleted.
          title: Expiration time
        id:
          description: The encoded ID of the notification.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        publication_time:
          description: The time when the notification was published. Notifications
            can be created and then published at a later time.
          format: date-time
          title: Publication time
          type: string
        seen_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time when the notification was seen by the user. If not
            set, the notification was not seen yet.
          title: Seen time
        source:
          description: The source of the notification. Represents the agent that created
            the notification. E.g. 'galaxy' or 'admin'.
          title: Source
          type: string
        update_time:
          description: The time when the notification was last updated.
          format: date-time
          title: Update time
          type: string
        variant:
          allOf:
          - $ref: '#/components/schemas/NotificationVariant'
          description: The variant of the notification. Represents the intent or relevance
            of the notification. E.g. 'info' or 'urgent'.
          title: Variant
      required:
      - id
      - source
      - category
      - variant
      - create_time
      - update_time
      - publication_time
      - content
      - deleted
      title: UserNotificationResponse
      type: object
    UserNotificationUpdateRequest:
      description: A notification update request specific to the user.
      properties:
        deleted:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the notification should be marked as deleted by the
            user. If not set, the notification will not be changed.
          title: Deleted
        seen:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the notification should be marked as seen by the user.
            If not set, the notification will not be changed.
          title: Seen
      title: UserNotificationUpdateRequest
      type: object
    UserNotificationsBatchUpdateRequest:
      description: A batch update request specific for user notifications.
      properties:
        changes:
          allOf:
          - $ref: '#/components/schemas/UserNotificationUpdateRequest'
          description: The changes that should be applied to the notifications. Only
            the fields that are set will be changed.
          title: Changes
        notification_ids:
          description: The list of encoded notification IDs of the notifications that
            should be updated.
          items:
            example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            type: string
          title: Notification IDs
          type: array
      required:
      - notification_ids
      - changes
      title: UserNotificationsBatchUpdateRequest
      type: object
    UserQuota:
      properties:
        model_class:
          const: UserQuotaAssociation
          description: The name of the database model class.
          title: Model class
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/UserModel'
          description: Information about a user associated with a quota.
          title: User
      required:
      - model_class
      - user
      title: UserQuota
      type: object
    UserQuotaUsage:
      properties:
        quota:
          anyOf:
          - type: string
          - type: 'null'
          title: Quota
        quota_bytes:
          anyOf:
          - type: integer
          - type: 'null'
          title: Quota Bytes
        quota_percent:
          anyOf:
          - type: number
          - type: 'null'
          title: Quota Percent
        quota_source_label:
          anyOf:
          - type: string
          - type: 'null'
          title: Quota Source Label
        total_disk_usage:
          title: Total Disk Usage
          type: number
      required:
      - total_disk_usage
      title: UserQuotaUsage
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    Visualization:
      properties: {}
      title: Visualization
      type: object
    VisualizationSummary:
      additionalProperties: true
      properties:
        annotation:
          anyOf:
          - type: string
          - type: 'null'
          description: The annotation of this Visualization.
          title: Annotation
        create_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The time and date this item was created.
          title: Create Time
        dbkey:
          anyOf:
          - type: string
          - type: 'null'
          description: The database key of the visualization.
          title: DbKey
        deleted:
          description: Whether this Visualization has been deleted.
          title: Deleted
          type: boolean
        id:
          description: Encoded ID of the Visualization.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        importable:
          description: Whether this Visualization can be imported.
          title: Importable
          type: boolean
        published:
          description: Whether this Visualization has been published.
          title: Published
          type: boolean
        tags:
          anyOf:
          - $ref: '#/components/schemas/TagCollection'
          - type: 'null'
          description: A list of tags to add to this item.
          title: Tags
        title:
          description: The name of the visualization.
          title: Title
          type: string
        type:
          description: The type of the visualization.
          title: Type
          type: string
        update_time:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The last time and date this item was updated.
          title: Update Time
        username:
          description: The name of the user owning this Visualization.
          title: Username
          type: string
      required:
      - id
      - deleted
      - importable
      - published
      - tags
      - title
      - type
      - username
      - create_time
      - update_time
      title: VisualizationSummary
      type: object
    VisualizationSummaryList:
      default: []
      items:
        $ref: '#/components/schemas/VisualizationSummary'
      title: VisualizationSummaryList
      type: array
    WorkflowInvocationCollectionView:
      properties:
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        history_id:
          description: The encoded ID of the history associated with the invocation.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        id:
          description: The encoded ID of the workflow invocation.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        model_class:
          const: WorkflowInvocation
          description: The name of the database model class.
          title: Model class
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/InvocationState'
          description: State of workflow invocation.
          title: Invocation state
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        uuid:
          anyOf:
          - format: uuid4
            type: string
          - format: uuid1
            type: string
          - type: 'null'
          description: Universal unique identifier of the workflow invocation.
          title: UUID
        workflow_id:
          description: The encoded Workflow ID associated with the invocation.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Workflow ID
          type: string
      required:
      - model_class
      - id
      - create_time
      - update_time
      - workflow_id
      - history_id
      - state
      title: WorkflowInvocationCollectionView
      type: object
    WorkflowInvocationElementView:
      properties:
        create_time:
          description: The time and date this item was created.
          format: date-time
          title: Create Time
          type: string
        history_id:
          description: The encoded ID of the history associated with the invocation.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: History ID
          type: string
        id:
          description: The encoded ID of the workflow invocation.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: ID
          type: string
        input_step_parameters:
          additionalProperties:
            $ref: '#/components/schemas/InvocationInputParameter'
          description: Input step parameters of the workflow invocation.
          title: Input step parameters
          type: object
        inputs:
          additionalProperties:
            $ref: '#/components/schemas/InvocationInput'
          description: Input datasets/dataset collections of the workflow invocation.
          title: Inputs
          type: object
        messages:
          description: A list of messages about why the invocation did not succeed.
          items:
            discriminator:
              mapping:
                cancelled_on_review: '#/components/schemas/InvocationCancellationReviewFailedResponse'
                collection_failed: '#/components/schemas/InvocationFailureCollectionFailedResponse'
                dataset_failed: '#/components/schemas/InvocationFailureDatasetFailedResponse'
                expression_evaluation_failed: '#/components/schemas/InvocationFailureExpressionEvaluationFailedResponse'
                history_deleted: '#/components/schemas/InvocationCancellationHistoryDeletedResponse'
                job_failed: '#/components/schemas/InvocationFailureJobFailedResponse'
                output_not_found: '#/components/schemas/InvocationFailureOutputNotFoundResponse'
                unexpected_failure: '#/components/schemas/InvocationUnexpectedFailureResponse'
                user_request: '#/components/schemas/InvocationCancellationUserRequestResponse'
                when_not_boolean: '#/components/schemas/InvocationFailureWhenNotBooleanResponse'
                workflow_output_not_found: '#/components/schemas/InvocationEvaluationWarningWorkflowOutputNotFoundResponse'
              propertyName: reason
            oneOf:
            - $ref: '#/components/schemas/InvocationCancellationReviewFailedResponse'
            - $ref: '#/components/schemas/InvocationCancellationHistoryDeletedResponse'
            - $ref: '#/components/schemas/InvocationCancellationUserRequestResponse'
            - $ref: '#/components/schemas/InvocationFailureDatasetFailedResponse'
            - $ref: '#/components/schemas/InvocationFailureCollectionFailedResponse'
            - $ref: '#/components/schemas/InvocationFailureJobFailedResponse'
            - $ref: '#/components/schemas/InvocationFailureOutputNotFoundResponse'
            - $ref: '#/components/schemas/InvocationFailureExpressionEvaluationFailedResponse'
            - $ref: '#/components/schemas/InvocationFailureWhenNotBooleanResponse'
            - $ref: '#/components/schemas/InvocationUnexpectedFailureResponse'
            - $ref: '#/components/schemas/InvocationEvaluationWarningWorkflowOutputNotFoundResponse'
          title: Messages
          type: array
        model_class:
          const: WorkflowInvocation
          description: The name of the database model class.
          title: Model class
          type: string
        output_collections:
          additionalProperties:
            $ref: '#/components/schemas/InvocationOutputCollection'
          description: Output dataset collections of the workflow invocation.
          title: Output collections
          type: object
        output_values:
          description: Output values of the workflow invocation.
          title: Output values
          type: object
        outputs:
          additionalProperties:
            $ref: '#/components/schemas/InvocationOutput'
          description: Output datasets of the workflow invocation.
          title: Outputs
          type: object
        state:
          allOf:
          - $ref: '#/components/schemas/InvocationState'
          description: State of workflow invocation.
          title: Invocation state
        steps:
          description: Steps of the workflow invocation.
          items:
            $ref: '#/components/schemas/InvocationStep'
          title: Steps
          type: array
        update_time:
          description: The last time and date this item was updated.
          format: date-time
          title: Update Time
          type: string
        uuid:
          anyOf:
          - format: uuid4
            type: string
          - format: uuid1
            type: string
          - type: 'null'
          description: Universal unique identifier of the workflow invocation.
          title: UUID
        workflow_id:
          description: The encoded Workflow ID associated with the invocation.
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Workflow ID
          type: string
      required:
      - model_class
      - id
      - create_time
      - update_time
      - workflow_id
      - history_id
      - state
      - steps
      - inputs
      - input_step_parameters
      - outputs
      - output_collections
      - output_values
      - messages
      title: WorkflowInvocationElementView
      type: object
    WorkflowInvocationResponse:
      anyOf:
      - $ref: '#/components/schemas/WorkflowInvocationElementView'
      - $ref: '#/components/schemas/WorkflowInvocationCollectionView'
      title: WorkflowInvocationResponse
    WorkflowInvocationStateSummary:
      properties:
        id:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Id
          type: string
        model:
          const: WorkflowInvocation
          description: The name of the database model class.
          title: Model class
          type: string
        populated_state:
          allOf:
          - $ref: '#/components/schemas/DatasetCollectionPopulatedState'
          description: 'Indicates the general state of the elements in the dataset
            collection:- ''new'': new dataset collection, unpopulated elements.- ''ok'':
            collection elements populated (HDAs may or may not have errors).- ''failed'':
            some problem populating, won''t be populated.'
          title: Populated State
        states:
          additionalProperties:
            type: integer
          default: {}
          description: A dictionary of job states and the number of jobs in that state.
          title: States
          type: object
      required:
      - id
      - populated_state
      - model
      title: WorkflowInvocationStateSummary
      type: object
    WriteInvocationStoreToPayload:
      properties:
        bco_merge_history_metadata:
          default: false
          description: When reading tags/annotations to generate BCO object include
            history metadata.
          title: Bco Merge History Metadata
          type: boolean
        bco_override_algorithmic_error:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          description: Override algorithmic error for 'error domain' when generating
            BioCompute object.
          title: Bco Override Algorithmic Error
        bco_override_empirical_error:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          description: Override empirical error for 'error domain' when generating
            BioCompute object.
          title: Bco Override Empirical Error
        bco_override_environment_variables:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          description: Override environment variables for 'execution_domain' when
            generating BioCompute object.
          title: Bco Override Environment Variables
        bco_override_xref:
          anyOf:
          - items:
              $ref: '#/components/schemas/XrefItem'
            type: array
          - type: 'null'
          description: Override xref for 'description domain' when generating BioCompute
            object.
          title: Bco Override Xref
        include_deleted:
          default: false
          description: Include file contents for deleted datasets (if include_files
            is True).
          title: Include deleted
          type: boolean
        include_files:
          default: true
          description: include materialized files in export when available
          title: Include Files
          type: boolean
        include_hidden:
          default: false
          description: Include file contents for hidden datasets (if include_files
            is True).
          title: Include hidden
          type: boolean
        model_store_format:
          allOf:
          - $ref: '#/components/schemas/ModelStoreFormat'
          default: tar.gz
          description: format of model store to export
        target_uri:
          description: Galaxy Files URI to write mode store content to.
          title: Target URI
          type: string
      required:
      - target_uri
      title: WriteInvocationStoreToPayload
      type: object
    WriteStoreToPayload:
      properties:
        include_deleted:
          default: false
          description: Include file contents for deleted datasets (if include_files
            is True).
          title: Include deleted
          type: boolean
        include_files:
          default: true
          description: include materialized files in export when available
          title: Include Files
          type: boolean
        include_hidden:
          default: false
          description: Include file contents for hidden datasets (if include_files
            is True).
          title: Include hidden
          type: boolean
        model_store_format:
          allOf:
          - $ref: '#/components/schemas/ModelStoreFormat'
          default: tar.gz
          description: format of model store to export
        target_uri:
          description: Galaxy Files URI to write mode store content to.
          title: Target URI
          type: string
      required:
      - target_uri
      title: WriteStoreToPayload
      type: object
    XrefItem:
      properties:
        access_time:
          description: Date and time the external reference was accessed
          format: date-time
          title: Access Time
          type: string
        ids:
          description: List of reference identifiers
          items:
            type: string
          title: Ids
          type: array
        name:
          description: Name of external reference
          examples:
          - PubChem-compound
          title: Name
          type: string
        namespace:
          description: External resource vendor prefix
          examples:
          - pubchem.compound
          title: Namespace
          type: string
      required:
      - namespace
      - name
      - ids
      - access_time
      title: XrefItem
      type: object
  securitySchemes:
    APIKeyCookie:
      in: cookie
      name: galaxysession
      type: apiKey
    APIKeyHeader:
      in: header
      name: x-api-key
      type: apiKey
    APIKeyQuery:
      in: query
      name: key
      type: apiKey
    HTTPBearer:
      scheme: bearer
      type: http
info:
  license:
    name: MIT
    url: https://github.com/galaxyproject/galaxy/blob/dev/LICENSE.txt
  title: Galaxy API
  version: 0.1.0
openapi: 3.1.0
paths:
  /api/authenticate/baseauth:
    get:
      operationId: get_api_key_api_authenticate_baseauth_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: Successful Response
      summary: Returns returns an API key for authenticated user based on BaseAuth
        headers.
      tags:
      - authenticate
      - authenticate
  /api/cloud/storage/get:
    post:
      deprecated: true
      operationId: get_api_cloud_storage_get_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudObjects'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSummaryList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Gets given objects from a given cloud-based bucket to a Galaxy history.
      tags:
      - cloud
      - cloud
  /api/cloud/storage/send:
    post:
      deprecated: true
      operationId: send_api_cloud_storage_send_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudDatasets'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudDatasetsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Sends given dataset(s) in a given history to a given cloud-based bucket.
      tags:
      - cloud
      - cloud
  /api/configuration:
    get:
      description: 'Return an object containing exposable configuration settings.


        A more complete list is returned if the user is an admin.

        Pass in `view` and a comma-seperated list of keys to control which

        configuration settings are returned.'
      operationId: index_api_configuration_get
      parameters:
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Index Api Configuration Get
                type: object
          description: Object containing exposable configuration settings
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return an object containing exposable configuration settings
      tags:
      - configuration
      - configuration
  /api/configuration/decode/{encoded_id}:
    get:
      description: Decode a given id.
      operationId: decode_id_api_configuration_decode__encoded_id__get
      parameters:
      - description: Encoded id to be decoded
        in: path
        name: encoded_id
        required: true
        schema:
          description: Encoded id to be decoded
          title: Encoded id
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: integer
                title: Response Decode Id Api Configuration Decode  Encoded Id  Get
                type: object
          description: Decoded id
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Decode a given id
      tags:
      - configuration
      - configuration
  /api/configuration/dynamic_tool_confs:
    get:
      description: Return dynamic tool configuration files.
      operationId: dynamic_tool_confs_api_configuration_dynamic_tool_confs_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: string
                  type: object
                title: Response Dynamic Tool Confs Api Configuration Dynamic Tool
                  Confs Get
                type: array
          description: Dynamic tool configuration files
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return dynamic tool configuration files
      tags:
      - configuration
      - configuration
  /api/configuration/encode/{decoded_id}:
    get:
      description: Decode a given id.
      operationId: encode_id_api_configuration_encode__decoded_id__get
      parameters:
      - description: Decoded id to be encoded
        in: path
        name: decoded_id
        required: true
        schema:
          description: Decoded id to be encoded
          title: Decoded id
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                title: Response Encode Id Api Configuration Encode  Decoded Id  Get
                type: object
          description: Encoded id
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Encode a given id
      tags:
      - configuration
      - configuration
  /api/configuration/tool_lineages:
    get:
      description: Return tool lineages for tools that have them.
      operationId: tool_lineages_api_configuration_tool_lineages_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                title: Response Tool Lineages Api Configuration Tool Lineages Get
                type: array
          description: Tool lineages for tools that have them
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return tool lineages for tools that have them
      tags:
      - configuration
      - configuration
  /api/configuration/toolbox:
    put:
      description: Reload the Galaxy toolbox (but not individual tools).
      operationId: reload_toolbox_api_configuration_toolbox_put
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Reload the Galaxy toolbox (but not individual tools)
      tags:
      - configuration
      - configuration
  /api/dataset_collection_element/{dce_id}:
    get:
      operationId: content_api_dataset_collection_element__dce_id__get
      parameters:
      - description: The encoded ID of the dataset collection element.
        in: path
        name: dce_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DCESummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Content
      tags:
      - dataset collections
      - dataset collections
  /api/dataset_collections:
    post:
      operationId: create_api_dataset_collections_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNewCollectionPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HDCADetailed'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create a new dataset collection instance.
      tags:
      - dataset collections
      - dataset collections
  /api/dataset_collections/{hdca_id}/contents/{parent_id}:
    get:
      operationId: contents_dataset_collection_api_dataset_collections__hdca_id__contents__parent_id__get
      parameters:
      - description: The ID of the `HDCA`.
        in: path
        name: hdca_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Parent collection ID describing what collection the contents
          belongs to.
        in: path
        name: parent_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of collection instance. Either `history` (default) or
          `library`.
        in: query
        name: instance_type
        required: false
        schema:
          default: history
          description: The type of collection instance. Either `history` (default)
            or `library`.
          enum:
          - history
          - library
          title: Instance Type
          type: string
      - description: The maximum number of content elements to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: The maximum number of content elements to return.
          title: Limit
      - description: The number of content elements that will be skipped before returning.
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: The number of content elements that will be skipped before
            returning.
          title: Offset
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetCollectionContentElements'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns direct child contents of indicated dataset collection parent
        ID.
      tags:
      - dataset collections
      - dataset collections
  /api/dataset_collections/{id}:
    get:
      operationId: show_api_dataset_collections__id__get
      parameters:
      - description: The ID of the `HDCA`.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of collection instance. Either `history` (default) or
          `library`.
        in: query
        name: instance_type
        required: false
        schema:
          default: history
          description: The type of collection instance. Either `history` (default)
            or `library`.
          enum:
          - history
          - library
          title: Instance Type
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HDCADetailed'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns detailed information about the given collection.
      tags:
      - dataset collections
      - dataset collections
  /api/dataset_collections/{id}/attributes:
    get:
      operationId: attributes_api_dataset_collections__id__attributes_get
      parameters:
      - description: The ID of the `HDCA`.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of collection instance. Either `history` (default) or
          `library`.
        in: query
        name: instance_type
        required: false
        schema:
          default: history
          description: The type of collection instance. Either `history` (default)
            or `library`.
          enum:
          - history
          - library
          title: Instance Type
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetCollectionAttributesResult'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns `dbkey`/`extension` attributes for all the collection elements.
      tags:
      - dataset collections
      - dataset collections
  /api/dataset_collections/{id}/copy:
    post:
      operationId: copy_api_dataset_collections__id__copy_post
      parameters:
      - description: The ID of the `HDCA`.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCollectionAttributePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Copy the given collection datasets to a new collection using a new
        `dbkey` attribute.
      tags:
      - dataset collections
      - dataset collections
  /api/dataset_collections/{id}/download:
    get:
      description: 'Download the content of a history dataset collection as a `zip`
        archive

        while maintaining approximate collection structure.'
      operationId: dataset_collections__download
      parameters:
      - description: The ID of the `HDCA`.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Download the content of a dataset collection as a `zip` archive.
      tags:
      - histories
      - histories
      - dataset collections
  /api/dataset_collections/{id}/prepare_download:
    post:
      description: 'The history dataset collection will be written as a `zip` archive
        to the

        returned short term storage object. Progress tracking this file''s creation

        can be tracked with the short_term_storage API.'
      operationId: prepare_collection_download_api_dataset_collections__id__prepare_download_post
      parameters:
      - description: The ID of the `HDCA`.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncFile'
          description: Short term storage reference for async monitoring of this download.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '501':
          description: Required asynchronous tasks required for this operation not
            available.
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Prepare an short term storage object that the collection will be downloaded
        to.
      tags:
      - histories
      - histories
      - dataset collections
  /api/dataset_collections/{id}/suitable_converters:
    get:
      operationId: suitable_converters_api_dataset_collections__id__suitable_converters_get
      parameters:
      - description: The ID of the `HDCA`.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of collection instance. Either `history` (default) or
          `library`.
        in: query
        name: instance_type
        required: false
        schema:
          default: history
          description: The type of collection instance. Either `history` (default)
            or `library`.
          enum:
          - history
          - library
          title: Instance Type
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuitableConverters'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns a list of applicable converters for all datatypes in the given
        collection.
      tags:
      - dataset collections
      - dataset collections
  /api/datasets:
    delete:
      description: 'Deletes or purges a batch of datasets.

        **Warning**: only the ownership of the datasets (and upload state for HDAs)
        is checked,

        no other checks or restrictions are made.'
      operationId: delete_batch_api_datasets_delete
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDatasetBatchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDatasetBatchResult'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Deletes or purges a batch of datasets.
      tags:
      - datasets
      - datasets
    get:
      operationId: index_api_datasets_get
      parameters:
      - description: Optional identifier of a History. Use it to restrict the search
          within a particular History.
        in: query
        name: history_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Optional identifier of a History. Use it to restrict the search
            within a particular History.
          title: History Id
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
          Orders can be stacked as a comma-separated list of values.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
            Orders can be stacked as a comma-separated list of values.
          title: Order
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/HDADetailed'
                  - $ref: '#/components/schemas/HDASummary'
                  - $ref: '#/components/schemas/HDCADetailed'
                  - $ref: '#/components/schemas/HDCASummary'
                  - $ref: '#/components/schemas/CustomHistoryItem'
                title: Response Index Api Datasets Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Search datasets or collections using a query system.
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}:
    get:
      description: '**Note**: Due to the multipurpose nature of this endpoint, which
        can receive a wild variety of parameters

        and return different kinds of responses, the documentation here will be limited.

        To get more information please check the source code.'
      operationId: show_api_datasets__dataset_id__get
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of information about the dataset to be requested.
        in: query
        name: hda_ldda
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          default: hda
          description: The type of information about the dataset to be requested.
          title: Hda Ldda
      - description: The type of information about the dataset to be requested. Each
          of these values may require additional parameters in the request and may
          return different responses.
        in: query
        name: data_type
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/RequestDataType'
          - type: 'null'
          description: The type of information about the dataset to be requested.
            Each of these values may require additional parameters in the request
            and may return different responses.
          title: Data Type
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays information about and/or content of a dataset.
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}/content/{content_type}:
    get:
      operationId: get_structured_content_api_datasets__dataset_id__content__content_type__get
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          $ref: '#/components/schemas/DatasetContentType'
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Retrieve information about the content of a dataset.
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}/converted:
    get:
      description: 'Return a map of `<converted extension> : <converted id>` containing
        all the *existing* converted datasets.'
      operationId: converted_api_datasets__dataset_id__converted_get
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertedDatasetsMap'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return a a map with all the existing converted datasets associated
        with this instance.
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}/converted/{ext}:
    get:
      description: 'Return information about datasets made by converting this dataset
        to a new format.


        If there is no existing converted dataset for the format in `ext`, one will
        be created.


        **Note**: `view` and `keys` are also available to control the serialization
        of the dataset.'
      operationId: converted_ext_api_datasets__dataset_id__converted__ext__get
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: File extension of the new format to convert this dataset to.
        in: path
        name: ext
        required: true
        schema:
          description: File extension of the new format to convert this dataset to.
          title: Ext
          type: string
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HDADetailed'
                - $ref: '#/components/schemas/HDASummary'
                title: Response Converted Ext Api Datasets  Dataset Id  Converted  Ext  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return information about datasets made by converting this dataset to
        a new format.
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}/extra_files:
    get:
      operationId: extra_files_api_datasets__dataset_id__extra_files_get
      parameters:
      - description: The encoded database identifier of the dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetExtraFiles'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get the list of extra files/directories associated with a dataset.
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}/get_content_as_text:
    get:
      operationId: get_content_as_text_api_datasets__dataset_id__get_content_as_text_get
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetTextContentDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns dataset content as Text.
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}/hash:
    put:
      operationId: compute_hash_api_datasets__dataset_id__hash_put
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Whether this dataset belongs to a history (HDA) or a library
          (LDDA).
        in: query
        name: hda_ldda
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          default: hda
          description: Whether this dataset belongs to a history (HDA) or a library
            (LDDA).
          title: Hda Ldda
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputeDatasetHashPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Compute dataset hash for dataset and update model
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}/inheritance_chain:
    get:
      operationId: show_inheritance_chain_api_datasets__dataset_id__inheritance_chain_get
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Whether this dataset belongs to a history (HDA) or a library
          (LDDA).
        in: query
        name: hda_ldda
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          default: hda
          description: Whether this dataset belongs to a history (HDA) or a library
            (LDDA).
          title: Hda Ldda
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetInheritanceChain'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: For internal use, this endpoint may change without warning.
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}/metrics:
    get:
      deprecated: true
      operationId: get_metrics_api_datasets__dataset_id__metrics_get
      parameters:
      - description: The ID of the dataset
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Whether this dataset belongs to a history (HDA) or a library
          (LDDA).
        in: query
        name: hda_ldda
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          default: hda
          description: Whether this dataset belongs to a history (HDA) or a library
            (LDDA).
          title: HDA or LDDA
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/JobMetric'
                  - type: 'null'
                title: Response Get Metrics Api Datasets  Dataset Id  Metrics Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return job metrics for specified job.
      tags:
      - jobs
      - jobs
  /api/datasets/{dataset_id}/object_store_id:
    put:
      operationId: datasets__update_object_store_id
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateObjectStoreIdPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update an object store ID for a dataset you own.
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}/parameters_display:
    get:
      deprecated: true
      description: 'Resolve parameters as a list for nested display.

        This API endpoint is unstable and tied heavily to Galaxy''s JS client code,

        this endpoint will change frequently.'
      operationId: resolve_parameters_display_api_datasets__dataset_id__parameters_display_get
      parameters:
      - description: The ID of the dataset
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Whether this dataset belongs to a history (HDA) or a library
          (LDDA).
        in: query
        name: hda_ldda
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          default: hda
          description: Whether this dataset belongs to a history (HDA) or a library
            (LDDA).
          title: HDA or LDDA
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDisplayParametersSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Resolve parameters as a list for nested display.
      tags:
      - jobs
      - jobs
  /api/datasets/{dataset_id}/permissions:
    put:
      description: Set permissions of the given history dataset to the given role
        ids.
      operationId: update_permissions_api_datasets__dataset_id__permissions_put
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              examples:
              - access_ids[]: []
                action: set_permissions
                manage_ids[]: []
                modify_ids[]: []
              title: Payload
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetAssociationRoles'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Set permissions of the given history dataset to the given role ids.
      tags:
      - datasets
      - datasets
  /api/datasets/{dataset_id}/storage:
    get:
      operationId: show_storage_api_datasets__dataset_id__storage_get
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Whether this dataset belongs to a history (HDA) or a library
          (LDDA).
        in: query
        name: hda_ldda
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          default: hda
          description: Whether this dataset belongs to a history (HDA) or a library
            (LDDA).
          title: Hda Ldda
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetStorageDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Display user-facing storage details related to the objectstore a dataset
        resides in.
      tags:
      - datasets
      - datasets
  /api/datasets/{history_content_id}/display:
    get:
      description: Streams the dataset for download or the contents preview to be
        displayed in a browser.
      operationId: display_api_datasets__history_content_id__display_get
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Whether to get preview contents to be directly displayed on the
          web. If preview is False (default) the contents will be downloaded instead.
        in: query
        name: preview
        required: false
        schema:
          default: false
          description: Whether to get preview contents to be directly displayed on
            the web. If preview is False (default) the contents will be downloaded
            instead.
          title: Preview
          type: boolean
      - description: If non-null, get the specified filename from the extra files
          for this dataset.
        in: query
        name: filename
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: If non-null, get the specified filename from the extra files
            for this dataset.
          title: Filename
      - description: The file extension when downloading the display data. Use the
          value `data` to let the server infer it from the data type.
        in: query
        name: to_ext
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: The file extension when downloading the display data. Use the
            value `data` to let the server infer it from the data type.
          title: To Ext
      - description: The query parameter 'raw' should be considered experimental and
          may be dropped at some point in the future without warning. Generally, data
          should be processed by its datatype prior to display.
        in: query
        name: raw
        required: false
        schema:
          default: false
          description: The query parameter 'raw' should be considered experimental
            and may be dropped at some point in the future without warning. Generally,
            data should be processed by its datatype prior to display.
          title: Raw
          type: boolean
      - description: Set this for datatypes that allow chunked display through the
          display_data method to enable chunking. This specifies a byte offset into
          the target dataset's display.
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Set this for datatypes that allow chunked display through the
            display_data method to enable chunking. This specifies a byte offset into
            the target dataset's display.
          title: Offset
      - description: 'If offset is set, this recommends ''how large'' the next chunk
          should be. This is not respected or interpreted uniformly and should be
          interpreted as a very loose recommendation. Different datatypes interpret
          ''largeness'' differently - for bam datasets this is a number of lines whereas
          for tabular datatypes this is interpreted as a number of bytes. '
        in: query
        name: ck_size
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: 'If offset is set, this recommends ''how large'' the next chunk
            should be. This is not respected or interpreted uniformly and should be
            interpreted as a very loose recommendation. Different datatypes interpret
            ''largeness'' differently - for bam datasets this is a number of lines
            whereas for tabular datatypes this is interpreted as a number of bytes. '
          title: Ck Size
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays (preview) or downloads dataset content.
      tags:
      - datasets
      - datasets
    head:
      description: Streams the dataset for download or the contents preview to be
        displayed in a browser.
      operationId: display_api_datasets__history_content_id__display_head
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Whether to get preview contents to be directly displayed on the
          web. If preview is False (default) the contents will be downloaded instead.
        in: query
        name: preview
        required: false
        schema:
          default: false
          description: Whether to get preview contents to be directly displayed on
            the web. If preview is False (default) the contents will be downloaded
            instead.
          title: Preview
          type: boolean
      - description: If non-null, get the specified filename from the extra files
          for this dataset.
        in: query
        name: filename
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: If non-null, get the specified filename from the extra files
            for this dataset.
          title: Filename
      - description: The file extension when downloading the display data. Use the
          value `data` to let the server infer it from the data type.
        in: query
        name: to_ext
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: The file extension when downloading the display data. Use the
            value `data` to let the server infer it from the data type.
          title: To Ext
      - description: The query parameter 'raw' should be considered experimental and
          may be dropped at some point in the future without warning. Generally, data
          should be processed by its datatype prior to display.
        in: query
        name: raw
        required: false
        schema:
          default: false
          description: The query parameter 'raw' should be considered experimental
            and may be dropped at some point in the future without warning. Generally,
            data should be processed by its datatype prior to display.
          title: Raw
          type: boolean
      - description: Set this for datatypes that allow chunked display through the
          display_data method to enable chunking. This specifies a byte offset into
          the target dataset's display.
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Set this for datatypes that allow chunked display through the
            display_data method to enable chunking. This specifies a byte offset into
            the target dataset's display.
          title: Offset
      - description: 'If offset is set, this recommends ''how large'' the next chunk
          should be. This is not respected or interpreted uniformly and should be
          interpreted as a very loose recommendation. Different datatypes interpret
          ''largeness'' differently - for bam datasets this is a number of lines whereas
          for tabular datatypes this is interpreted as a number of bytes. '
        in: query
        name: ck_size
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: 'If offset is set, this recommends ''how large'' the next chunk
            should be. This is not respected or interpreted uniformly and should be
            interpreted as a very loose recommendation. Different datatypes interpret
            ''largeness'' differently - for bam datasets this is a number of lines
            whereas for tabular datatypes this is interpreted as a number of bytes. '
          title: Ck Size
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Check if dataset content can be previewed or downloaded.
      tags:
      - datasets
      - datasets
  /api/datasets/{history_content_id}/metadata_file:
    get:
      operationId: datasets__get_metadata_file
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The name of the metadata file to retrieve.
        in: query
        name: metadata_file
        required: true
        schema:
          description: The name of the metadata file to retrieve.
          title: Metadata File
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns the metadata file associated with this history item.
      tags:
      - datasets
      - datasets
    head:
      operationId: get_metadata_file_datasets_api_datasets__history_content_id__metadata_file_head
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The name of the metadata file to retrieve.
        in: query
        name: metadata_file
        required: true
        schema:
          description: The name of the metadata file to retrieve.
          title: Metadata File
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Check if metadata file can be downloaded.
      tags:
      - datasets
      - datasets
  /api/datatypes:
    get:
      description: Gets the list of all available data types.
      operationId: index_api_datatypes_get
      parameters:
      - description: Whether to return only the datatype's extension rather than the
          datatype's details
        in: query
        name: extension_only
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Whether to return only the datatype's extension rather than
            the datatype's details
          title: Extension only
      - description: Whether to return only datatypes which can be uploaded
        in: query
        name: upload_only
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Whether to return only datatypes which can be uploaded
          title: Upload only
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - items:
                    $ref: '#/components/schemas/DatatypeDetails'
                  type: array
                - items:
                    type: string
                  type: array
                title: Response Index Api Datatypes Get
          description: List of data types
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security: []
      summary: Lists all available data types
      tags:
      - datatypes
      - datatypes
  /api/datatypes/converters:
    get:
      description: Gets the list of all installed converters.
      operationId: converters_api_datatypes_converters_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatatypeConverterList'
          description: List of all datatype converters
      security: []
      summary: Returns the list of all installed converters
      tags:
      - datatypes
      - datatypes
  /api/datatypes/edam_data:
    get:
      description: Gets a map of datatypes and their corresponding EDAM data.
      operationId: edam_data_api_datatypes_edam_data_get
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                title: Response Edam Data Api Datatypes Edam Data Get
                type: object
          description: Dictionary/map of datatypes and EDAM data
      security: []
      summary: Returns a dictionary/map of datatypes and EDAM data
      tags:
      - datatypes
      - datatypes
  /api/datatypes/edam_data/detailed:
    get:
      description: 'Gets a map of datatypes and their corresponding EDAM data.

        EDAM data contains the EDAM iri, label, and definition.'
      operationId: edam_data_detailed_api_datatypes_edam_data_detailed_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatatypesEDAMDetailsDict'
          description: Dictionary of EDAM data details containing the EDAM iri, label,
            and definition
      security: []
      summary: Returns a dictionary of datatypes and EDAM data details
      tags:
      - datatypes
      - datatypes
  /api/datatypes/edam_formats:
    get:
      description: Gets a map of datatypes and their corresponding EDAM formats.
      operationId: edam_formats_api_datatypes_edam_formats_get
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                title: Response Edam Formats Api Datatypes Edam Formats Get
                type: object
          description: Dictionary/map of datatypes and EDAM formats
      security: []
      summary: Returns a dictionary/map of datatypes and EDAM formats
      tags:
      - datatypes
      - datatypes
  /api/datatypes/edam_formats/detailed:
    get:
      description: 'Gets a map of datatypes and their corresponding EDAM formats.

        EDAM formats contain the EDAM iri, label, and definition.'
      operationId: edam_formats_detailed_api_datatypes_edam_formats_detailed_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatatypesEDAMDetailsDict'
          description: Dictionary of EDAM format details containing the EDAM iri,
            label, and definition
      security: []
      summary: Returns a dictionary of datatypes and EDAM format details
      tags:
      - datatypes
      - datatypes
  /api/datatypes/mapping:
    get:
      description: Gets mappings for data types.
      operationId: mapping_api_datatypes_mapping_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatatypesMap'
          description: Dictionary to map data types with their classes
      security: []
      summary: Returns mappings for data types and their implementing classes
      tags:
      - datatypes
      - datatypes
  /api/datatypes/sniffers:
    get:
      description: Gets the list of all installed data type sniffers.
      operationId: sniffers_api_datatypes_sniffers_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Sniffers Api Datatypes Sniffers Get
                type: array
          description: List of datatype sniffers
      security: []
      summary: Returns the list of all installed sniffers
      tags:
      - datatypes
      - datatypes
  /api/datatypes/types_and_mapping:
    get:
      description: 'Combines the datatype information from (/api/datatypes) and the

        mapping information from (/api/datatypes/mapping) into a single

        response.'
      operationId: types_and_mapping_api_datatypes_types_and_mapping_get
      parameters:
      - description: Whether to return only the datatype's extension rather than the
          datatype's details
        in: query
        name: extension_only
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Whether to return only the datatype's extension rather than
            the datatype's details
          title: Extension only
      - description: Whether to return only datatypes which can be uploaded
        in: query
        name: upload_only
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Whether to return only datatypes which can be uploaded
          title: Upload only
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatatypesCombinedMap'
          description: Dictionary to map data types with their classes
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security: []
      summary: Returns all the data types extensions and their mappings
      tags:
      - datatypes
      - datatypes
  /api/display_applications:
    get:
      description: Returns the list of display applications.
      operationId: display_applications_index_api_display_applications_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DisplayApplication'
                title: Response Display Applications Index Api Display Applications
                  Get
                type: array
          description: Successful Response
      security: []
      summary: Returns the list of display applications.
      tags:
      - display_applications
      - display_applications
  /api/display_applications/reload:
    post:
      description: Reloads the list of display applications.
      operationId: display_applications_reload_api_display_applications_reload_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
              - type: 'null'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReloadFeedback'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Reloads the list of display applications.
      tags:
      - display_applications
      - display_applications
  /api/drs_download/{object_id}:
    get:
      operationId: download_api_drs_download__object_id__get
      parameters:
      - description: The ID of the group
        in: path
        name: object_id
        required: true
        schema:
          description: The ID of the group
          title: Object ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Download
      tags:
      - drs
      - drs
  /api/folders/{folder_id}/contents:
    get:
      description: 'Returns a list of a folder''s contents (files and sub-folders).


        Additional metadata for the folder is provided in the response as a separate
        object containing data

        for breadcrumb path building, permissions and other folder''s details.


        *Note*: When sorting, folders always have priority (they show-up before any
        dataset regardless of the sorting).


        **Security note**:

        - Accessing a library folder or sub-folder requires only access to the parent
        library.

        - Deleted folders can only be accessed by admins or users with `MODIFY` permission.

        - Datasets may be public, private or restricted (to a group of users). Listing
        deleted datasets has the same requirements as folders.'
      operationId: index_api_folders__folder_id__contents_get
      parameters:
      - description: The encoded identifier of the library folder.
        in: path
        name: folder_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Folder ID
          type: string
      - description: Maximum number of contents to return.
        in: query
        name: limit
        required: false
        schema:
          default: 10
          description: Maximum number of contents to return.
          title: Limit
          type: integer
      - description: Return contents from this specified position. For example, if
          ``limit`` is set to 100 and ``offset`` to 200, contents between position
          200-299 will be returned.
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: Return contents from this specified position. For example,
            if ``limit`` is set to 100 and ``offset`` to 200, contents between position
            200-299 will be returned.
          title: Offset
          type: integer
      - description: Used to filter the contents. Only the folders and files which
          name contains this text will be returned.
        in: query
        name: search_text
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Used to filter the contents. Only the folders and files which
            name contains this text will be returned.
          title: Search Text
      - description: Returns also deleted contents. Deleted contents can only be retrieved
          by Administrators or users with
        in: query
        name: include_deleted
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Returns also deleted contents. Deleted contents can only be
            retrieved by Administrators or users with
          title: Include Deleted
      - description: Sort results by specified field.
        in: query
        name: order_by
        required: false
        schema:
          default: name
          description: Sort results by specified field.
          enum:
          - name
          - description
          - type
          - size
          - update_time
          title: Sort By
          type: string
      - description: Sort results in descending order.
        in: query
        name: sort_desc
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Sort results in descending order.
          title: Sort Descending
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryFolderContentsIndexResult'
          description: The contents of the folder that match the query parameters.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns a list of a folder's contents (files and sub-folders) with
        additional metadata about the folder.
      tags:
      - data libraries folders
      - data libraries folders
    post:
      operationId: add_history_datasets_to_library_api_folders__folder_id__contents_post
      parameters:
      - description: The encoded identifier of the library folder.
        in: path
        name: folder_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Folder ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLibraryFilePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Creates a new library file from an existing HDA/HDCA.
      tags:
      - data libraries folders
      - data libraries folders
  /api/folders/{id}:
    delete:
      description: Marks the specified library folder as deleted (or undeleted).
      operationId: delete_api_folders__id__delete
      parameters:
      - description: The encoded identifier of the library folder.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Folder ID
          type: string
      - description: Whether to restore a deleted library folder.
        in: query
        name: undelete
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to restore a deleted library folder.
          title: Undelete
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryFolderDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Marks the specified library folder as deleted (or undeleted).
      tags:
      - data libraries folders
      - data libraries folders
    get:
      description: Returns detailed information about the library folder with the
        given ID.
      operationId: show_api_folders__id__get
      parameters:
      - description: The encoded identifier of the library folder.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Folder ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryFolderDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays information about a particular library folder.
      tags:
      - data libraries folders
      - data libraries folders
    patch:
      description: Updates the information of an existing library folder.
      operationId: update_api_folders__id__patch
      parameters:
      - description: The encoded identifier of the library folder.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Folder ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLibraryFolderPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryFolderDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update
      tags:
      - data libraries folders
      - data libraries folders
    post:
      description: Returns detailed information about the newly created library folder.
      operationId: create_api_folders__id__post
      parameters:
      - description: The encoded identifier of the library folder.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Folder ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLibraryFolderPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryFolderDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create a new library folder underneath the one specified by the ID.
      tags:
      - data libraries folders
      - data libraries folders
    put:
      description: Updates the information of an existing library folder.
      operationId: update_api_folders__id__put
      parameters:
      - description: The encoded identifier of the library folder.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Folder ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLibraryFolderPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryFolderDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Updates the information of an existing library folder.
      tags:
      - data libraries folders
      - data libraries folders
  /api/folders/{id}/permissions:
    get:
      description: 'Gets the current or available permissions of a particular library.

        The results can be paginated and additionally filtered by a query.'
      operationId: get_permissions_api_folders__id__permissions_get
      parameters:
      - description: The encoded identifier of the library folder.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Folder ID
          type: string
      - description: The scope of the permissions to retrieve. Either the `current`
          permissions or the `available`.
        in: query
        name: scope
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/LibraryPermissionScope'
          - type: 'null'
          description: The scope of the permissions to retrieve. Either the `current`
            permissions or the `available`.
          title: Scope
      - description: The page number to retrieve when paginating the available roles.
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: The page number to retrieve when paginating the available roles.
          title: Page
          type: integer
      - description: The maximum number of permissions per page when paginating.
        in: query
        name: page_limit
        required: false
        schema:
          default: 10
          description: The maximum number of permissions per page when paginating.
          title: Page Limit
          type: integer
      - description: Optional search text to retrieve only the roles matching this
          query.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional search text to retrieve only the roles matching this
            query.
          title: Query
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/LibraryFolderCurrentPermissions'
                - $ref: '#/components/schemas/LibraryAvailablePermissions'
                title: Response Get Permissions Api Folders  Id  Permissions Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Gets the current or available permissions of a particular library folder.
      tags:
      - data libraries folders
      - data libraries folders
    post:
      description: Sets the permissions to manage a library folder.
      operationId: set_permissions_api_folders__id__permissions_post
      parameters:
      - description: The encoded identifier of the library folder.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Folder ID
          type: string
      - description: Indicates what action should be performed on the Library. Currently
          only `set_permissions` is supported.
        in: query
        name: action
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/LibraryFolderPermissionAction'
          - type: 'null'
          description: Indicates what action should be performed on the Library. Currently
            only `set_permissions` is supported.
          title: Action
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryFolderPermissionsPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryFolderCurrentPermissions'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Sets the permissions to manage a library folder.
      tags:
      - data libraries folders
      - data libraries folders
  /api/forms/{id}:
    delete:
      operationId: delete_api_forms__id__delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete
      tags:
      - forms
      - forms
  /api/forms/{id}/undelete:
    post:
      operationId: undelete_api_forms__id__undelete_post
      parameters:
      - in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Undelete
      tags:
      - forms
      - forms
  /api/ftp_files:
    get:
      deprecated: true
      description: Lists all remote files available to the user from different sources.
      operationId: index_api_ftp_files_get
      parameters:
      - description: 'The source to load datasets from. Possible values: ftpdir, userdir,
          importdir'
        in: query
        name: target
        required: false
        schema:
          default: ftpdir
          description: 'The source to load datasets from. Possible values: ftpdir,
            userdir, importdir'
          title: Target source
          type: string
      - description: The requested format of returned data. Either `flat` to simply
          list all the files, `jstree` to get a tree representation of the files,
          or the default `uri` to list files and directories by their URI.
        in: query
        name: format
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/RemoteFilesFormat'
          - type: 'null'
          default: uri
          description: The requested format of returned data. Either `flat` to simply
            list all the files, `jstree` to get a tree representation of the files,
            or the default `uri` to list files and directories by their URI.
          title: Response format
      - description: Whether to recursively lists all sub-directories. This will be
          `True` by default depending on the `target`.
        in: query
        name: recursive
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to recursively lists all sub-directories. This will
            be `True` by default depending on the `target`.
          title: Recursive
      - description: (This only applies when `format` is `jstree`) The value can be
          either `folders` or `files` and it will disable the corresponding nodes
          of the tree.
        in: query
        name: disable
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/RemoteFilesDisableMode'
          - type: 'null'
          description: (This only applies when `format` is `jstree`) The value can
            be either `folders` or `files` and it will disable the corresponding nodes
            of the tree.
          title: Disable mode
      - description: Whether the query is made with the intention of writing to the
          source. If set to True, only entries that can be written to will be returned.
        in: query
        name: writeable
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the query is made with the intention of writing to
            the source. If set to True, only entries that can be written to will be
            returned.
          title: Writeable
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ListUriResponse'
                - $ref: '#/components/schemas/ListJstreeResponse'
                title: Response Index Api Ftp Files Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays remote files available to the user. Please use /api/remote_files
        instead.
      tags:
      - remote files
      - remote files
  /api/genomes:
    get:
      operationId: index_api_genomes_get
      parameters:
      - description: If true, return genome keys with chromosome lengths
        in: query
        name: chrom_info
        required: false
        schema:
          description: If true, return genome keys with chromosome lengths
          title: ChromInfo
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  items:
                    type: string
                  type: array
                title: Response Index Api Genomes Get
                type: array
          description: Installed genomes
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return a list of installed genomes
      tags:
      - genomes
      - genomes
  /api/genomes/{id}:
    get:
      operationId: show_api_genomes__id__get
      parameters:
      - description: Genome ID
        in: path
        name: id
        required: true
        schema:
          description: Genome ID
          title: Genome ID
          type: string
      - description: If true, return reference data
        in: query
        name: reference
        required: false
        schema:
          description: If true, return reference data
          title: Reference
          type: boolean
      - description: Limits size of returned data
        in: query
        name: num
        required: false
        schema:
          description: Limits size of returned data
          title: Number
          type: integer
      - description: Limits size of returned data
        in: query
        name: chrom
        required: false
        schema:
          description: Limits size of returned data
          title: Chrom
          type: string
      - description: Limits size of returned data
        in: query
        name: low
        required: false
        schema:
          description: Limits size of returned data
          title: Low
          type: integer
      - description: Limits size of returned data
        in: query
        name: high
        required: false
        schema:
          description: Limits size of returned data
          title: High
          type: integer
      - description: Format
        in: query
        name: format
        required: false
        schema:
          description: Format
          title: Format
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Show Api Genomes  Id  Get
          description: Information about genome build <id>
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return information about build <id>
      tags:
      - genomes
      - genomes
  /api/genomes/{id}/indexes:
    get:
      operationId: indexes_api_genomes__id__indexes_get
      parameters:
      - description: Genome ID
        in: path
        name: id
        required: true
        schema:
          description: Genome ID
          title: Genome ID
          type: string
      - description: Index type
        in: query
        name: type
        required: false
        schema:
          default: fasta_indexes
          description: Index type
          title: Index type
          type: string
      - description: Format
        in: query
        name: format
        required: false
        schema:
          description: Format
          title: Format
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Indexes Api Genomes  Id  Indexes Get
          description: Indexes for a genome id for provided type
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return all available indexes for a genome id for provided type
      tags:
      - genomes
      - genomes
  /api/genomes/{id}/sequences:
    get:
      operationId: sequences_api_genomes__id__sequences_get
      parameters:
      - description: Genome ID
        in: path
        name: id
        required: true
        schema:
          description: Genome ID
          title: Genome ID
          type: string
      - description: If true, return reference data
        in: query
        name: reference
        required: false
        schema:
          description: If true, return reference data
          title: Reference
          type: boolean
      - description: Limits size of returned data
        in: query
        name: chrom
        required: false
        schema:
          description: Limits size of returned data
          title: Chrom
          type: string
      - description: Limits size of returned data
        in: query
        name: low
        required: false
        schema:
          description: Limits size of returned data
          title: Low
          type: integer
      - description: Limits size of returned data
        in: query
        name: high
        required: false
        schema:
          description: Limits size of returned data
          title: High
          type: integer
      - description: Format
        in: query
        name: format
        required: false
        schema:
          description: Format
          title: Format
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Sequences Api Genomes  Id  Sequences Get
          description: Raw sequence data
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return raw sequence data
      tags:
      - genomes
      - genomes
  /api/groups:
    get:
      operationId: index_api_groups_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays a collection (list) of groups.
      tags:
      - groups
      - groups
    post:
      operationId: create_api_groups_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Creates a new group.
      tags:
      - groups
      - groups
  /api/groups/{group_id}:
    delete:
      operationId: delete_api_groups__group_id__delete
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete
      tags:
      - groups
      - groups
    get:
      operationId: show_group_api_groups__group_id__get
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays information about a group.
      tags:
      - groups
      - groups
    put:
      operationId: update_api_groups__group_id__put
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Modifies a group.
      tags:
      - groups
      - groups
  /api/groups/{group_id}/purge:
    post:
      operationId: purge_api_groups__group_id__purge_post
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Purge
      tags:
      - groups
      - groups
  /api/groups/{group_id}/roles:
    get:
      operationId: group_roles_api_groups__group_id__roles_get
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRoleListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays a collection (list) of groups.
      tags:
      - group_roles
      - group_roles
  /api/groups/{group_id}/roles/{role_id}:
    delete:
      operationId: delete_api_groups__group_id__roles__role_id__delete
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the role.
        in: path
        name: role_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRoleResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Removes a role from a group
      tags:
      - group_roles
      - group_roles
    get:
      operationId: group_role_api_groups__group_id__roles__role_id__get
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the role.
        in: path
        name: role_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRoleResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays information about a group role.
      tags:
      - group_roles
      - group_roles
    put:
      operationId: update_api_groups__group_id__roles__role_id__put
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the role.
        in: path
        name: role_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRoleResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Adds a role to a group
      tags:
      - group_roles
      - group_roles
  /api/groups/{group_id}/undelete:
    post:
      operationId: undelete_api_groups__group_id__undelete_post
      parameters:
      - in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Undelete
      tags:
      - groups
      - groups
  /api/groups/{group_id}/user/{user_id}:
    delete:
      description: 'DELETE /api/groups/{encoded_group_id}/users/{encoded_user_id}

        Removes a user from a group'
      operationId: delete_api_groups__group_id__user__user_id__delete
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Removes a user from a group
      tags:
      - group_users
      - group_users
    get:
      description: Displays information about a group user.
      operationId: group_user_api_groups__group_id__user__user_id__get
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays information about a group user.
      tags:
      - group_users
      - group_users
    put:
      description: 'PUT /api/groups/{encoded_group_id}/users/{encoded_user_id}

        Adds a user to a group'
      operationId: update_api_groups__group_id__user__user_id__put
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Adds a user to a group
      tags:
      - group_users
      - group_users
  /api/groups/{group_id}/users:
    get:
      description: 'GET /api/groups/{encoded_group_id}/users

        Displays a collection (list) of groups.'
      operationId: group_users_api_groups__group_id__users_get
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays a collection (list) of groups.
      tags:
      - group_users
      - group_users
  /api/groups/{group_id}/users/{user_id}:
    delete:
      description: 'DELETE /api/groups/{encoded_group_id}/users/{encoded_user_id}

        Removes a user from a group'
      operationId: delete_api_groups__group_id__users__user_id__delete
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Removes a user from a group
      tags:
      - group_users
      - group_users
    get:
      description: Displays information about a group user.
      operationId: group_user_api_groups__group_id__users__user_id__get
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays information about a group user.
      tags:
      - group_users
      - group_users
    put:
      description: 'PUT /api/groups/{encoded_group_id}/users/{encoded_user_id}

        Adds a user to a group'
      operationId: update_api_groups__group_id__users__user_id__put
      parameters:
      - description: The ID of the group.
        in: path
        name: group_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Adds a user to a group
      tags:
      - group_users
      - group_users
  /api/help/forum/search:
    get:
      description: 'Search the Galaxy Help forum using the Discourse API.


        **Note**: This endpoint is for **INTERNAL USE ONLY** and is not part of the
        public Galaxy API.'
      operationId: search_forum_api_help_forum_search_get
      parameters:
      - description: Search query to use for searching the Galaxy Help forum.
        in: query
        name: query
        required: true
        schema:
          description: Search query to use for searching the Galaxy Help forum.
          title: Query
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpForumSearchResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Search the Galaxy Help forum.
      tags:
      - help
      - help
  /api/histories:
    get:
      operationId: index_api_histories_get
      parameters:
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - in: query
        name: show_own
        required: false
        schema:
          default: true
          title: Show histories owned by user.
          type: boolean
      - in: query
        name: show_published
        required: false
        schema:
          default: true
          title: Include published histories.
          type: boolean
      - in: query
        name: show_shared
        required: false
        schema:
          default: false
          title: Include histories shared with authenticated user.
          type: boolean
      - description: Sort index by this specified attribute
        in: query
        name: sort_by
        required: false
        schema:
          default: update_time
          description: Sort index by this specified attribute
          enum:
          - create_time
          - name
          - update_time
          - username
          title: Sort attribute
          type: string
      - description: Sort in descending order?
        in: query
        name: sort_desc
        required: false
        schema:
          default: true
          description: Sort in descending order?
          title: Sort Descending
          type: boolean
      - description: 'A mix of free text and GitHub-style tags used to filter the
          index operation.


          ## Query Structure


          GitHub-style filter tags (not be confused with Galaxy tags) are tags of
          the form

          `<tag_name>:<text_no_spaces>` or `<tag_name>:''<text with potential spaces>''`.
          The tag name

          *generally* (but not exclusively) corresponds to the name of an attribute
          on the model

          being indexed (i.e. a column in the database).


          If the tag is quoted, the attribute will be filtered exactly. If the tag
          is unquoted,

          generally a partial match will be used to filter the query (i.e. in terms
          of the implementation

          this means the database operation `ILIKE` will typically be used).


          Once the tagged filters are extracted from the search query, the remaining
          text is just

          used to search various documented attributes of the object.


          ## GitHub-style Tags Available


          `name`

          : The history''s name.


          `annotation`

          : The history''s annotation. (The tag `a` can be used a short hand alias
          for this tag to filter on this attribute.)


          `tag`

          : The history''s tags. (The tag `t` can be used a short hand alias for this
          tag to filter on this attribute.)


          ## Free Text


          Free text search terms will be searched against the following attributes
          of the

          Historys: `title`, `description`, `slug`, `tag`.


          '
        in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 'A mix of free text and GitHub-style tags used to filter the
            index operation.


            ## Query Structure


            GitHub-style filter tags (not be confused with Galaxy tags) are tags of
            the form

            `<tag_name>:<text_no_spaces>` or `<tag_name>:''<text with potential spaces>''`.
            The tag name

            *generally* (but not exclusively) corresponds to the name of an attribute
            on the model

            being indexed (i.e. a column in the database).


            If the tag is quoted, the attribute will be filtered exactly. If the tag
            is unquoted,

            generally a partial match will be used to filter the query (i.e. in terms
            of the implementation

            this means the database operation `ILIKE` will typically be used).


            Once the tagged filters are extracted from the search query, the remaining
            text is just

            used to search various documented attributes of the object.


            ## GitHub-style Tags Available


            `name`

            : The history''s name.


            `annotation`

            : The history''s annotation. (The tag `a` can be used a short hand alias
            for this tag to filter on this attribute.)


            `tag`

            : The history''s tags. (The tag `t` can be used a short hand alias for
            this tag to filter on this attribute.)


            ## Free Text


            Free text search terms will be searched against the following attributes
            of the

            Historys: `title`, `description`, `slug`, `tag`.


            '
          title: Search query.
      - description: Whether all histories from other users in this Galaxy should
          be included. Only admins are allowed to query all histories.
        in: query
        name: all
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether all histories from other users in this Galaxy should
            be included. Only admins are allowed to query all histories.
          title: All Histories
      - deprecated: true
        description: Whether to return only deleted items.
        in: query
        name: deleted
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to return only deleted items.
          title: Deleted Only
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: String containing one of the valid ordering attributes followed
          (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
          Orders can be stacked as a comma-separated list of values.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
            Orders can be stacked as a comma-separated list of values.
          title: Order
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/HistoryDetailed'
                  - $ref: '#/components/schemas/HistorySummary'
                  - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Index Api Histories Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns histories available to the current user.
      tags:
      - histories
      - histories
    post:
      description: The new history can also be copied form a existing history or imported
        from an archive or URL.
      operationId: create_api_histories_post
      parameters:
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
              - $ref: '#/components/schemas/Body_create_api_histories_post'
              title: Body
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/JobImportHistoryResponse'
                - $ref: '#/components/schemas/HistoryDetailed'
                - $ref: '#/components/schemas/HistorySummary'
                - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Create Api Histories Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Creates a new history.
      tags:
      - histories
      - histories
  /api/histories/archived:
    get:
      description: 'Get a list of all archived histories for the current user.


        Archived histories are histories are not part of the active histories of the
        user but they can be accessed using this endpoint.'
      operationId: get_archived_histories_api_histories_archived_get
      parameters:
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
          Orders can be stacked as a comma-separated list of values.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
            Orders can be stacked as a comma-separated list of values.
          title: Order
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/ArchivedHistorySummary'
                  - $ref: '#/components/schemas/ArchivedHistoryDetailed'
                  - {}
                title: Response Get Archived Histories Api Histories Archived Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get a list of all archived histories for the current user.
      tags:
      - histories
      - histories
  /api/histories/batch/delete:
    put:
      operationId: batch_delete_api_histories_batch_delete_put
      parameters:
      - in: query
        name: purge
        required: false
        schema:
          default: false
          title: Purge
          type: boolean
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHistoriesPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/HistoryDetailed'
                  - $ref: '#/components/schemas/HistorySummary'
                  - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Batch Delete Api Histories Batch Delete Put
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Marks several histories with the given IDs as deleted.
      tags:
      - histories
      - histories
  /api/histories/batch/undelete:
    put:
      operationId: batch_undelete_api_histories_batch_undelete_put
      parameters:
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteHistoriesPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/HistoryDetailed'
                  - $ref: '#/components/schemas/HistorySummary'
                  - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Batch Undelete Api Histories Batch Undelete Put
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Marks several histories with the given IDs as undeleted.
      tags:
      - histories
      - histories
  /api/histories/count:
    get:
      operationId: count_api_histories_count_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Count Api Histories Count Get
                type: integer
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns number of histories for the current user.
      tags:
      - histories
      - histories
  /api/histories/deleted:
    get:
      operationId: index_deleted_api_histories_deleted_get
      parameters:
      - description: Whether all histories from other users in this Galaxy should
          be included. Only admins are allowed to query all histories.
        in: query
        name: all
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether all histories from other users in this Galaxy should
            be included. Only admins are allowed to query all histories.
          title: All Histories
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
          Orders can be stacked as a comma-separated list of values.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
            Orders can be stacked as a comma-separated list of values.
          title: Order
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/HistoryDetailed'
                  - $ref: '#/components/schemas/HistorySummary'
                  - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Index Deleted Api Histories Deleted Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns deleted histories for the current user.
      tags:
      - histories
      - histories
  /api/histories/deleted/{history_id}/undelete:
    post:
      operationId: undelete_api_histories_deleted__history_id__undelete_post
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HistoryDetailed'
                - $ref: '#/components/schemas/HistorySummary'
                - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Undelete Api Histories Deleted  History Id  Undelete
                  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Restores a deleted history with the given ID (that hasn't been purged).
      tags:
      - histories
      - histories
  /api/histories/from_store:
    post:
      operationId: create_from_store_api_histories_from_store_post
      parameters:
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHistoryFromStore'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HistoryDetailed'
                - $ref: '#/components/schemas/HistorySummary'
                - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Create From Store Api Histories From Store Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create histories from a model store.
      tags:
      - histories
      - histories
  /api/histories/from_store_async:
    post:
      operationId: create_from_store_async_api_histories_from_store_async_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHistoryFromStore'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Launch a task to create histories from a model store.
      tags:
      - histories
      - histories
  /api/histories/most_recently_used:
    get:
      operationId: show_recent_api_histories_most_recently_used_get
      parameters:
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HistoryDetailed'
                - $ref: '#/components/schemas/HistorySummary'
                - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Show Recent Api Histories Most Recently Used Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns the most recently used history of the user.
      tags:
      - histories
      - histories
  /api/histories/published:
    get:
      operationId: published_api_histories_published_get
      parameters:
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
          Orders can be stacked as a comma-separated list of values.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
            Orders can be stacked as a comma-separated list of values.
          title: Order
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/HistoryDetailed'
                  - $ref: '#/components/schemas/HistorySummary'
                  - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Published Api Histories Published Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return all histories that are published.
      tags:
      - histories
      - histories
  /api/histories/shared_with_me:
    get:
      operationId: shared_with_me_api_histories_shared_with_me_get
      parameters:
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
          Orders can be stacked as a comma-separated list of values.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
            Orders can be stacked as a comma-separated list of values.
          title: Order
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/HistoryDetailed'
                  - $ref: '#/components/schemas/HistorySummary'
                  - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Shared With Me Api Histories Shared With Me Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return all histories that are shared with the current user.
      tags:
      - histories
      - histories
  /api/histories/{history_id}:
    delete:
      operationId: delete_api_histories__history_id__delete
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: query
        name: purge
        required: false
        schema:
          default: false
          title: Purge
          type: boolean
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/DeleteHistoryPayload'
              - type: 'null'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HistoryDetailed'
                - $ref: '#/components/schemas/HistorySummary'
                - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Delete Api Histories  History Id  Delete
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Marks the history with the given ID as deleted.
      tags:
      - histories
      - histories
    get:
      operationId: history_api_histories__history_id__get
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HistoryDetailed'
                - $ref: '#/components/schemas/HistorySummary'
                - $ref: '#/components/schemas/HistoryMinimal'
                title: Response History Api Histories  History Id  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns the history with the given ID.
      tags:
      - histories
      - histories
    put:
      operationId: update_api_histories__history_id__put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              description: Object containing any of the editable fields of the history.
              title: Payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HistoryDetailed'
                - $ref: '#/components/schemas/HistorySummary'
                - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Update Api Histories  History Id  Put
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Updates the values for the history with the given ID.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/archive:
    post:
      description: 'Marks the given history as ''archived'' and returns the history.


        Archiving a history will remove it from the list of active histories of the
        user but it will still be

        accessible via the `/api/histories/{id}` or the `/api/histories/archived`
        endpoints.


        Associating an export record:


        - Optionally, an export record (containing information about a recent snapshot
        of the history) can be associated with the

        archived history by providing an `archive_export_id` in the payload. The export
        record must belong to the history and

        must be in the ready state.

        - When associating an export record, the history can be purged after it has
        been archived using the `purge_history` flag.


        If the history is already archived, this endpoint will return a 409 Conflict
        error, indicating that the history is already archived.

        If the history was not purged after it was archived, you can restore it using
        the `/api/histories/{id}/archive/restore` endpoint.'
      operationId: archive_history_api_histories__history_id__archive_post
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/ArchiveHistoryRequestPayload'
              - type: 'null'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ArchivedHistorySummary'
                - $ref: '#/components/schemas/ArchivedHistoryDetailed'
                - {}
                title: Response Archive History Api Histories  History Id  Archive
                  Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Archive a history.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/archive/restore:
    put:
      description: 'Restores an archived history and returns it.


        Restoring an archived history will add it back to the list of active histories
        of the user (unless it was purged).


        **Warning**: Please note that histories that are associated with an archive
        export might be purged after export, so un-archiving them

        will not restore the datasets that were in the history before it was archived.
        You will need to import back the archive export

        record to restore the history and its datasets as a new copy. See `/api/histories/from_store_async`
        for more information.'
      operationId: restore_archived_history_api_histories__history_id__archive_restore_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: If true, the history will be un-archived even if it has an associated
          archive export record and was purged.
        in: query
        name: force
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: If true, the history will be un-archived even if it has an
            associated archive export record and was purged.
          title: Force
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HistoryDetailed'
                - $ref: '#/components/schemas/HistorySummary'
                - $ref: '#/components/schemas/HistoryMinimal'
                title: Response Restore Archived History Api Histories  History Id  Archive
                  Restore Put
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Restore an archived history.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/citations:
    get:
      operationId: citations_api_histories__history_id__citations_get
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items: {}
                title: Response Citations Api Histories  History Id  Citations Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return all the citations for the tools used to produce the datasets
        in the history.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents:
    get:
      description: 'Return a list of `HDA`/`HDCA` data for the history with the given
        ``ID``.


        - The contents can be filtered and queried using the appropriate parameters.

        - The amount of information returned for each item can be customized.


        **Note**: Anonymous users are allowed to get their current history contents.'
      operationId: history_contents__index
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Only `dev` value is allowed. Set it to use the latest version
          of this endpoint. **All parameters marked as `deprecated` will be ignored
          when this parameter is set.**
        in: query
        name: v
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Only `dev` value is allowed. Set it to use the latest version
            of this endpoint. **All parameters marked as `deprecated` will be ignored
            when this parameter is set.**
          examples:
          - dev
          title: Version
      - deprecated: true
        description: Legacy name for the `dataset_details` parameter.
        in: query
        name: details
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Legacy name for the `dataset_details` parameter.
          title: Details
      - deprecated: true
        description: A comma-separated list of encoded `HDA/HDCA` IDs. If this list
          is provided, only information about the specific datasets will be returned.
          Also, setting this value will return `all` details of the content item.
        in: query
        name: ids
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: A comma-separated list of encoded `HDA/HDCA` IDs. If this list
            is provided, only information about the specific datasets will be returned.
            Also, setting this value will return `all` details of the content item.
          title: IDs
      - deprecated: true
        description: A list or comma-separated list of kinds of contents to return
          (currently just `dataset` and `dataset_collection` are available). If unset,
          all types will be returned.
        in: query
        name: types
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: A list or comma-separated list of kinds of contents to return
            (currently just `dataset` and `dataset_collection` are available). If
            unset, all types will be returned.
          title: Types
      - deprecated: true
        description: Whether to return deleted or undeleted datasets only. Leave unset
          for both.
        in: query
        name: deleted
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to return deleted or undeleted datasets only. Leave
            unset for both.
          title: Deleted
      - deprecated: true
        description: Whether to return visible or hidden datasets only. Leave unset
          for both.
        in: query
        name: visible
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to return visible or hidden datasets only. Leave unset
            for both.
          title: Visible
      - description: Whether to return only shareable or not shareable datasets. Leave
          unset for both.
        in: query
        name: shareable
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to return only shareable or not shareable datasets.
            Leave unset for both.
          title: Shareable
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
          Orders can be stacked as a comma-separated list of values.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
            Orders can be stacked as a comma-separated list of values.
          title: Order
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryContentsResult'
                anyOf:
                - $ref: '#/components/schemas/HistoryContentsResult'
                - $ref: '#/components/schemas/HistoryContentsWithStatsResult'
                title: Response History Contents  Index
            application/vnd.galaxy.history.contents.stats+json:
              schema:
                $ref: '#/components/schemas/HistoryContentsWithStatsResult'
          description: The contents of the history that match the query.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns the contents of the given history.
      tags:
      - histories
      - histories
    post:
      deprecated: true
      description: Create a new `HDA` or `HDCA` in the given History.
      operationId: history_contents__create
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: query
        name: type
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/HistoryContentType'
          - type: 'null'
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHistoryContentPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HDADetailed'
                - $ref: '#/components/schemas/HDASummary'
                - $ref: '#/components/schemas/HDCADetailed'
                - $ref: '#/components/schemas/HDCASummary'
                - $ref: '#/components/schemas/CustomHistoryItem'
                - items:
                    anyOf:
                    - $ref: '#/components/schemas/HDADetailed'
                    - $ref: '#/components/schemas/HDASummary'
                    - $ref: '#/components/schemas/HDCADetailed'
                    - $ref: '#/components/schemas/HDCASummary'
                    - $ref: '#/components/schemas/CustomHistoryItem'
                  type: array
                title: Response History Contents  Create
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create a new `HDA` or `HDCA` in the given History.
      tags:
      - histories
      - histories
    put:
      description: 'Batch update specific properties of a set items contained in the
        given History.


        If you provide an invalid/unknown property key the request will not fail,
        but no changes

        will be made to the items.'
      operationId: update_batch_api_histories__history_id__contents_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHistoryContentsBatchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryContentsResult'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Batch update specific properties of a set items contained in the given
        History.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/archive:
    get:
      description: 'Build and return a compressed archive of the selected history
        contents.


        **Note**: this is a volatile endpoint and settings and behavior may change.'
      operationId: history_contents__archive
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The name that the Archive will have (defaults to history name).
        in: query
        name: filename
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: The name that the Archive will have (defaults to history name).
          title: Filename
      - description: Whether to return the archive and file paths only (as JSON) and
          not an actual archive file.
        in: query
        name: dry_run
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Whether to return the archive and file paths only (as JSON)
            and not an actual archive file.
          title: Dry Run
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
          Orders can be stacked as a comma-separated list of values.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
            Orders can be stacked as a comma-separated list of values.
          title: Order
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Build and return a compressed archive of the selected history contents.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/archive/{filename}.{format}:
    get:
      description: 'Build and return a compressed archive of the selected history
        contents.


        **Note**: this is a volatile endpoint and settings and behavior may change.'
      operationId: history_contents__archive_named
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The name that the Archive will have (defaults to history name).
        in: path
        name: filename
        required: true
        schema:
          description: The name that the Archive will have (defaults to history name).
          title: Filename
          type: string
      - deprecated: true
        description: Output format of the archive.
        in: path
        name: format
        required: true
        schema:
          description: Output format of the archive.
          title: Format
          type: string
      - description: Whether to return the archive and file paths only (as JSON) and
          not an actual archive file.
        in: query
        name: dry_run
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Whether to return the archive and file paths only (as JSON)
            and not an actual archive file.
          title: Dry Run
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
          Orders can be stacked as a comma-separated list of values.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
            Orders can be stacked as a comma-separated list of values.
          title: Order
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Build and return a compressed archive of the selected history contents.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/bulk:
    put:
      description: 'Executes an operation on a set of items contained in the given
        History.


        The items to be processed can be explicitly set or determined by a dynamic
        query.'
      operationId: bulk_operation_api_histories__history_id__contents_bulk_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoryContentBulkOperationPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryContentBulkOperationResult'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Executes an operation on a set of items contained in the given History.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/dataset_collections/{id}/download:
    get:
      description: 'Download the content of a history dataset collection as a `zip`
        archive

        while maintaining approximate collection structure.'
      operationId: history_contents__download_collection
      parameters:
      - description: The ID of the `HDCA`.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The encoded database identifier of the History.
          title: History Id
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Download the content of a dataset collection as a `zip` archive.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/datasets/{id}/materialize:
    post:
      operationId: materialize_dataset_api_histories__history_id__contents_datasets__id__materialize_post
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Materialize a deferred dataset into real, usable dataset.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/{dataset_id}/permissions:
    put:
      description: Set permissions of the given history dataset to the given role
        ids.
      operationId: update_permissions_api_histories__history_id__contents__dataset_id__permissions_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: dataset_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              examples:
              - access_ids: []
                action: set_permissions
                manage_ids: []
                modify_ids: []
              title: Payload
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetAssociationRoles'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Set permissions of the given history dataset to the given role ids.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/{history_content_id}/display:
    get:
      description: Streams the dataset for download or the contents preview to be
        displayed in a browser.
      operationId: history_contents_display_api_histories__history_id__contents__history_content_id__display_get
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: history_id
        required: true
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          title: History Id
      - description: Whether to get preview contents to be directly displayed on the
          web. If preview is False (default) the contents will be downloaded instead.
        in: query
        name: preview
        required: false
        schema:
          default: false
          description: Whether to get preview contents to be directly displayed on
            the web. If preview is False (default) the contents will be downloaded
            instead.
          title: Preview
          type: boolean
      - description: If non-null, get the specified filename from the extra files
          for this dataset.
        in: query
        name: filename
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: If non-null, get the specified filename from the extra files
            for this dataset.
          title: Filename
      - description: The file extension when downloading the display data. Use the
          value `data` to let the server infer it from the data type.
        in: query
        name: to_ext
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: The file extension when downloading the display data. Use the
            value `data` to let the server infer it from the data type.
          title: To Ext
      - description: The query parameter 'raw' should be considered experimental and
          may be dropped at some point in the future without warning. Generally, data
          should be processed by its datatype prior to display.
        in: query
        name: raw
        required: false
        schema:
          default: false
          description: The query parameter 'raw' should be considered experimental
            and may be dropped at some point in the future without warning. Generally,
            data should be processed by its datatype prior to display.
          title: Raw
          type: boolean
      - description: Set this for datatypes that allow chunked display through the
          display_data method to enable chunking. This specifies a byte offset into
          the target dataset's display.
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Set this for datatypes that allow chunked display through the
            display_data method to enable chunking. This specifies a byte offset into
            the target dataset's display.
          title: Offset
      - description: 'If offset is set, this recommends ''how large'' the next chunk
          should be. This is not respected or interpreted uniformly and should be
          interpreted as a very loose recommendation. Different datatypes interpret
          ''largeness'' differently - for bam datasets this is a number of lines whereas
          for tabular datatypes this is interpreted as a number of bytes. '
        in: query
        name: ck_size
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: 'If offset is set, this recommends ''how large'' the next chunk
            should be. This is not respected or interpreted uniformly and should be
            interpreted as a very loose recommendation. Different datatypes interpret
            ''largeness'' differently - for bam datasets this is a number of lines
            whereas for tabular datatypes this is interpreted as a number of bytes. '
          title: Ck Size
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays (preview) or downloads dataset content.
      tags:
      - datasets
      - datasets
      - histories
    head:
      description: Streams the dataset for download or the contents preview to be
        displayed in a browser.
      operationId: history_contents_display_api_histories__history_id__contents__history_content_id__display_head
      parameters:
      - description: The ID of the History Dataset.
        in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: history_id
        required: true
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          title: History Id
      - description: Whether to get preview contents to be directly displayed on the
          web. If preview is False (default) the contents will be downloaded instead.
        in: query
        name: preview
        required: false
        schema:
          default: false
          description: Whether to get preview contents to be directly displayed on
            the web. If preview is False (default) the contents will be downloaded
            instead.
          title: Preview
          type: boolean
      - description: If non-null, get the specified filename from the extra files
          for this dataset.
        in: query
        name: filename
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: If non-null, get the specified filename from the extra files
            for this dataset.
          title: Filename
      - description: The file extension when downloading the display data. Use the
          value `data` to let the server infer it from the data type.
        in: query
        name: to_ext
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: The file extension when downloading the display data. Use the
            value `data` to let the server infer it from the data type.
          title: To Ext
      - description: The query parameter 'raw' should be considered experimental and
          may be dropped at some point in the future without warning. Generally, data
          should be processed by its datatype prior to display.
        in: query
        name: raw
        required: false
        schema:
          default: false
          description: The query parameter 'raw' should be considered experimental
            and may be dropped at some point in the future without warning. Generally,
            data should be processed by its datatype prior to display.
          title: Raw
          type: boolean
      - description: Set this for datatypes that allow chunked display through the
          display_data method to enable chunking. This specifies a byte offset into
          the target dataset's display.
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Set this for datatypes that allow chunked display through the
            display_data method to enable chunking. This specifies a byte offset into
            the target dataset's display.
          title: Offset
      - description: 'If offset is set, this recommends ''how large'' the next chunk
          should be. This is not respected or interpreted uniformly and should be
          interpreted as a very loose recommendation. Different datatypes interpret
          ''largeness'' differently - for bam datasets this is a number of lines whereas
          for tabular datatypes this is interpreted as a number of bytes. '
        in: query
        name: ck_size
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: 'If offset is set, this recommends ''how large'' the next chunk
            should be. This is not respected or interpreted uniformly and should be
            interpreted as a very loose recommendation. Different datatypes interpret
            ''largeness'' differently - for bam datasets this is a number of lines
            whereas for tabular datatypes this is interpreted as a number of bytes. '
          title: Ck Size
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Check if dataset content can be previewed or downloaded.
      tags:
      - datasets
      - datasets
      - histories
  /api/histories/{history_id}/contents/{history_content_id}/extra_files:
    get:
      operationId: extra_files_history_api_histories__history_id__contents__history_content_id__extra_files_get
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the History Dataset.
        in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetExtraFiles'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get the list of extra files/directories associated with a dataset.
      tags:
      - datasets
      - datasets
      - histories
  /api/histories/{history_id}/contents/{history_content_id}/metadata_file:
    get:
      operationId: history_contents__get_metadata_file
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the History Dataset.
        in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The name of the metadata file to retrieve.
        in: query
        name: metadata_file
        required: true
        schema:
          description: The name of the metadata file to retrieve.
          title: Metadata File
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns the metadata file associated with this history item.
      tags:
      - datasets
      - datasets
      - histories
  /api/histories/{history_id}/contents/{history_content_id}/tags:
    get:
      operationId: index_api_histories__history_id__contents__history_content_id__tags_get
      parameters:
      - in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      - in: path
        name: history_id
        required: true
        schema:
          title: History ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show tags based on history_content_id
      tags:
      - histories
  /api/histories/{history_id}/contents/{history_content_id}/tags/{tag_name}:
    delete:
      operationId: delete_api_histories__history_id__contents__history_content_id__tags__tag_name__delete
      parameters:
      - in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      - in: path
        name: history_id
        required: true
        schema:
          title: History ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Delete Api Histories  History Id  Contents  History
                  Content Id  Tags  Tag Name  Delete
                type: boolean
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete tag based on history_content_id
      tags:
      - histories
    get:
      operationId: show_api_histories__history_id__contents__history_content_id__tags__tag_name__get
      parameters:
      - in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      - in: path
        name: history_id
        required: true
        schema:
          title: History ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show tag based on history_content_id
      tags:
      - histories
    post:
      operationId: create_api_histories__history_id__contents__history_content_id__tags__tag_name__post
      parameters:
      - in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      - in: path
        name: history_id
        required: true
        schema:
          title: History ID
          type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ItemTagsCreatePayload'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create tag based on history_content_id
      tags:
      - histories
    put:
      operationId: update_api_histories__history_id__contents__history_content_id__tags__tag_name__put
      parameters:
      - in: path
        name: history_content_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      - in: path
        name: history_id
        required: true
        schema:
          title: History ID
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemTagsCreatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update tag based on history_content_id
      tags:
      - histories
  /api/histories/{history_id}/contents/{id}:
    delete:
      description: 'Delete the history content with the given ``ID`` and query specified
        type (defaults to dataset).


        **Note**: Currently does not stop any active jobs for which this dataset is
        an output.'
      operationId: history_contents__delete_legacy
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          default: dataset
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - deprecated: true
        description: Whether to remove from disk the target HDA or child HDAs of the
          target HDCA.
        in: query
        name: purge
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to remove from disk the target HDA or child HDAs of
            the target HDCA.
          title: Purge
      - deprecated: true
        description: When deleting a dataset collection, whether to also delete containing
          datasets.
        in: query
        name: recursive
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: When deleting a dataset collection, whether to also delete
            containing datasets.
          title: Recursive
      - deprecated: true
        description: Whether to stop the creating job if all outputs of the job have
          been deleted.
        in: query
        name: stop_job
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to stop the creating job if all outputs of the job
            have been deleted.
          title: Stop Job
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeleteHistoryContentPayload'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHistoryContentResult'
          description: Request has been executed.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHistoryContentResult'
          description: Request accepted, processing will finish later.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete the history dataset with the given ``ID``.
      tags:
      - histories
      - histories
    get:
      deprecated: true
      description: 'Return detailed information about an `HDA` or `HDCA` within a
        history.


        **Note**: Anonymous users are allowed to get their current history contents.'
      operationId: history_contents__show_legacy
      parameters:
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          default: dataset
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - description: This value can be used to broadly restrict the magnitude of the
          number of elements returned via the API for large collections. The number
          of actual elements returned may be "a bit" more than this number or "a lot"
          less - varying on the depth of nesting, balance of nesting at each level,
          and size of target collection. The consumer of this API should not expect
          a stable number or pre-calculable number of elements to be produced given
          this parameter - the only promise is that this API will not respond with
          an order of magnitude more elements estimated with this value. The UI uses
          this parameter to fetch a "balanced" concept of the "start" of large collections
          at every depth of the collection.
        in: query
        name: fuzzy_count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: This value can be used to broadly restrict the magnitude of
            the number of elements returned via the API for large collections. The
            number of actual elements returned may be "a bit" more than this number
            or "a lot" less - varying on the depth of nesting, balance of nesting
            at each level, and size of target collection. The consumer of this API
            should not expect a stable number or pre-calculable number of elements
            to be produced given this parameter - the only promise is that this API
            will not respond with an order of magnitude more elements estimated with
            this value. The UI uses this parameter to fetch a "balanced" concept of
            the "start" of large collections at every depth of the collection.
          title: Fuzzy Count
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HDADetailed'
                - $ref: '#/components/schemas/HDASummary'
                - $ref: '#/components/schemas/HDCADetailed'
                - $ref: '#/components/schemas/HDCASummary'
                - $ref: '#/components/schemas/CustomHistoryItem'
                title: Response History Contents  Show Legacy
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return detailed information about an HDA within a history. ``/api/histories/{history_id}/contents/{type}s/{id}``
        should be used instead.
      tags:
      - histories
      - histories
    put:
      deprecated: true
      description: Updates the values for the history content item with the given
        ``ID``.
      operationId: history_contents__update_legacy
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: query
        name: type
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          default: dataset
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHistoryContentsPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HDADetailed'
                - $ref: '#/components/schemas/HDASummary'
                - $ref: '#/components/schemas/HDCADetailed'
                - $ref: '#/components/schemas/HDCASummary'
                - $ref: '#/components/schemas/CustomHistoryItem'
                title: Response History Contents  Update Legacy
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Updates the values for the history content item with the given ``ID``
        and query specified type. ``/api/histories/{history_id}/contents/{type}s/{id}``
        should be used instead.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/{id}/validate:
    put:
      description: Validates the metadata associated with a dataset within a History.
      operationId: validate_api_histories__history_id__contents__id__validate_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Validate Api Histories  History Id  Contents  Id  Validate
                  Put
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Validates the metadata associated with a dataset within a History.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/{type}s:
    get:
      description: 'Return a list of either `HDA`/`HDCA` data for the history with
        the given ``ID``.


        - The contents can be filtered and queried using the appropriate parameters.

        - The amount of information returned for each item can be customized.


        **Note**: Anonymous users are allowed to get their current history contents.'
      operationId: history_contents__index_typed
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - description: Only `dev` value is allowed. Set it to use the latest version
          of this endpoint. **All parameters marked as `deprecated` will be ignored
          when this parameter is set.**
        in: query
        name: v
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Only `dev` value is allowed. Set it to use the latest version
            of this endpoint. **All parameters marked as `deprecated` will be ignored
            when this parameter is set.**
          examples:
          - dev
          title: Version
      - deprecated: true
        description: Legacy name for the `dataset_details` parameter.
        in: query
        name: details
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Legacy name for the `dataset_details` parameter.
          title: Details
      - deprecated: true
        description: A comma-separated list of encoded `HDA/HDCA` IDs. If this list
          is provided, only information about the specific datasets will be returned.
          Also, setting this value will return `all` details of the content item.
        in: query
        name: ids
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: A comma-separated list of encoded `HDA/HDCA` IDs. If this list
            is provided, only information about the specific datasets will be returned.
            Also, setting this value will return `all` details of the content item.
          title: IDs
      - deprecated: true
        description: A list or comma-separated list of kinds of contents to return
          (currently just `dataset` and `dataset_collection` are available). If unset,
          all types will be returned.
        in: query
        name: types
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: A list or comma-separated list of kinds of contents to return
            (currently just `dataset` and `dataset_collection` are available). If
            unset, all types will be returned.
          title: Types
      - deprecated: true
        description: Whether to return deleted or undeleted datasets only. Leave unset
          for both.
        in: query
        name: deleted
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to return deleted or undeleted datasets only. Leave
            unset for both.
          title: Deleted
      - deprecated: true
        description: Whether to return visible or hidden datasets only. Leave unset
          for both.
        in: query
        name: visible
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to return visible or hidden datasets only. Leave unset
            for both.
          title: Visible
      - description: Whether to return only shareable or not shareable datasets. Leave
          unset for both.
        in: query
        name: shareable
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to return only shareable or not shareable datasets.
            Leave unset for both.
          title: Shareable
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: Generally a property name to filter by followed by an (often
          optional) hyphen and operator string.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Generally a property name to filter by followed by an (often
            optional) hyphen and operator string.
          examples:
          - create_time-gt
          title: Filter Query
      - description: The value to filter by.
        in: query
        name: qv
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: The value to filter by.
          examples:
          - '2015-01-29'
          title: Filter Value
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
          Orders can be stacked as a comma-separated list of values.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            (optionally) by '-asc' or '-dsc' for ascending and descending order respectively.
            Orders can be stacked as a comma-separated list of values.
          title: Order
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HistoryContentsResult'
                - $ref: '#/components/schemas/HistoryContentsWithStatsResult'
                title: Response History Contents  Index Typed
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns the contents of the given history filtered by type.
      tags:
      - histories
      - histories
    post:
      description: Create a new `HDA` or `HDCA` in the given History.
      operationId: history_contents__create_typed
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHistoryContentPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HDADetailed'
                - $ref: '#/components/schemas/HDASummary'
                - $ref: '#/components/schemas/HDCADetailed'
                - $ref: '#/components/schemas/HDCASummary'
                - $ref: '#/components/schemas/CustomHistoryItem'
                - items:
                    anyOf:
                    - $ref: '#/components/schemas/HDADetailed'
                    - $ref: '#/components/schemas/HDASummary'
                    - $ref: '#/components/schemas/HDCADetailed'
                    - $ref: '#/components/schemas/HDCASummary'
                    - $ref: '#/components/schemas/CustomHistoryItem'
                  type: array
                title: Response History Contents  Create Typed
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create a new `HDA` or `HDCA` in the given History.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/{type}s/{id}:
    delete:
      description: 'Delete the history content with the given ``ID`` and path specified
        type.


        **Note**: Currently does not stop any active jobs for which this dataset is
        an output.'
      operationId: history_contents__delete_typed
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - deprecated: true
        description: Whether to remove from disk the target HDA or child HDAs of the
          target HDCA.
        in: query
        name: purge
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to remove from disk the target HDA or child HDAs of
            the target HDCA.
          title: Purge
      - deprecated: true
        description: When deleting a dataset collection, whether to also delete containing
          datasets.
        in: query
        name: recursive
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: When deleting a dataset collection, whether to also delete
            containing datasets.
          title: Recursive
      - deprecated: true
        description: Whether to stop the creating job if all outputs of the job have
          been deleted.
        in: query
        name: stop_job
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to stop the creating job if all outputs of the job
            have been deleted.
          title: Stop Job
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeleteHistoryContentPayload'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHistoryContentResult'
          description: Request has been executed.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHistoryContentResult'
          description: Request accepted, processing will finish later.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete the history content with the given ``ID`` and path specified
        type.
      tags:
      - histories
      - histories
    get:
      description: 'Return detailed information about an `HDA` or `HDCA` within a
        history.


        **Note**: Anonymous users are allowed to get their current history contents.'
      operationId: history_contents__show
      parameters:
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - description: This value can be used to broadly restrict the magnitude of the
          number of elements returned via the API for large collections. The number
          of actual elements returned may be "a bit" more than this number or "a lot"
          less - varying on the depth of nesting, balance of nesting at each level,
          and size of target collection. The consumer of this API should not expect
          a stable number or pre-calculable number of elements to be produced given
          this parameter - the only promise is that this API will not respond with
          an order of magnitude more elements estimated with this value. The UI uses
          this parameter to fetch a "balanced" concept of the "start" of large collections
          at every depth of the collection.
        in: query
        name: fuzzy_count
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: This value can be used to broadly restrict the magnitude of
            the number of elements returned via the API for large collections. The
            number of actual elements returned may be "a bit" more than this number
            or "a lot" less - varying on the depth of nesting, balance of nesting
            at each level, and size of target collection. The consumer of this API
            should not expect a stable number or pre-calculable number of elements
            to be produced given this parameter - the only promise is that this API
            will not respond with an order of magnitude more elements estimated with
            this value. The UI uses this parameter to fetch a "balanced" concept of
            the "start" of large collections at every depth of the collection.
          title: Fuzzy Count
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HDADetailed'
                - $ref: '#/components/schemas/HDASummary'
                - $ref: '#/components/schemas/HDCADetailed'
                - $ref: '#/components/schemas/HDCASummary'
                - $ref: '#/components/schemas/CustomHistoryItem'
                title: Response History Contents  Show
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return detailed information about a specific HDA or HDCA with the given
        `ID` within a history.
      tags:
      - histories
      - histories
    put:
      description: Updates the values for the history content item with the given
        ``ID``.
      operationId: history_contents__update_typed
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHistoryContentsPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/HDADetailed'
                - $ref: '#/components/schemas/HDASummary'
                - $ref: '#/components/schemas/HDCADetailed'
                - $ref: '#/components/schemas/HDCASummary'
                - $ref: '#/components/schemas/CustomHistoryItem'
                title: Response History Contents  Update Typed
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Updates the values for the history content item with the given ``ID``
        and path specified type.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/{type}s/{id}/jobs_summary:
    get:
      description: 'Return detailed information about an `HDA` or `HDCAs` jobs.


        **Warning**: We allow anyone to fetch job state information about any object
        they

        can guess an encoded ID for - it isn''t considered protected data. This keeps

        polling IDs as part of state calculation for large histories and collections
        as

        efficient as possible.'
      operationId: show_jobs_summary_api_histories__history_id__contents__type_s__id__jobs_summary_get
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                discriminator:
                  mapping:
                    ImplicitCollectionJobs: '#/components/schemas/ImplicitCollectionJobsStateSummary'
                    Job: '#/components/schemas/JobStateSummary'
                    WorkflowInvocation: '#/components/schemas/WorkflowInvocationStateSummary'
                  propertyName: model
                oneOf:
                - $ref: '#/components/schemas/JobStateSummary'
                - $ref: '#/components/schemas/ImplicitCollectionJobsStateSummary'
                - $ref: '#/components/schemas/WorkflowInvocationStateSummary'
                title: Response Show Jobs Summary Api Histories  History Id  Contents  Type
                  S  Id  Jobs Summary Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return detailed information about an `HDA` or `HDCAs` jobs.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/{type}s/{id}/prepare_store_download:
    post:
      operationId: prepare_store_download_api_histories__history_id__contents__type_s__id__prepare_store_download_post
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreExportPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncFile'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Prepare a dataset or dataset collection for export-style download.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents/{type}s/{id}/write_store:
    post:
      operationId: write_store_api_histories__history_id__contents__type_s__id__write_store_post
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the item (`HDA`/`HDCA`)
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The type of the target history element.
        in: path
        name: type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/HistoryContentType'
          description: The type of the target history element.
          examples:
          - dataset
          title: Content Type
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteStoreToPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Prepare a dataset or dataset collection for export-style download and
        write to supplied URI.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/contents_from_store:
    post:
      description: 'Create history contents from model store.

        Input can be a tarfile created with build_objects script distributed

        with galaxy-data, from an exported history with files stripped out,

        or hand-crafted JSON dictionary.'
      operationId: create_from_store_api_histories__history_id__contents_from_store_post
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Comma-separated list of keys to be passed to the serializer
        in: query
        name: keys
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Comma-separated list of keys to be passed to the serializer
          title: Keys
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHistoryContentFromStore'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/HDADetailed'
                  - $ref: '#/components/schemas/HDASummary'
                  - $ref: '#/components/schemas/HDCADetailed'
                  - $ref: '#/components/schemas/HDCASummary'
                  - $ref: '#/components/schemas/CustomHistoryItem'
                title: Response Create From Store Api Histories  History Id  Contents
                  From Store Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create contents from store.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/custom_builds_metadata:
    get:
      operationId: get_custom_builds_metadata_api_histories__history_id__custom_builds_metadata_get
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomBuildsMetadataResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns meta data for custom builds.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/disable_link_access:
    put:
      description: Makes this item inaccessible by a URL link and return the current
        sharing status.
      operationId: disable_link_access_api_histories__history_id__disable_link_access_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item inaccessible by a URL link.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/enable_link_access:
    put:
      description: Makes this item accessible by a URL link and return the current
        sharing status.
      operationId: enable_link_access_api_histories__history_id__enable_link_access_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item accessible by a URL link.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/exports:
    get:
      description: 'By default the legacy job-based history exports (jeha) are returned.


        Change the `accept` content type header to return the new task-based history
        exports.'
      operationId: get_history_exports_api_histories__history_id__exports_get
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExportHistoryArchiveListResponse'
                anyOf:
                - $ref: '#/components/schemas/JobExportHistoryArchiveListResponse'
                - $ref: '#/components/schemas/ExportTaskListResponse'
                title: Response Get History Exports Api Histories  History Id  Exports
                  Get
            application/vnd.galaxy.task.export+json:
              schema:
                $ref: '#/components/schemas/ExportTaskListResponse'
          description: A list of history exports
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get previous history exports.
      tags:
      - histories
      - histories
    put:
      deprecated: true
      description: 'This will start a job to create a history export archive.


        Calling this endpoint multiple times will return the 202 status code until
        the archive

        has been completely generated and is ready to download. When ready, it will
        return

        the 200 status code along with the download link information.


        If the history will be exported to a `directory_uri`, instead of returning
        the download

        link information, the Job ID will be returned so it can be queried to determine
        when

        the file has been written.


        **Deprecation notice**: Please use `/api/histories/{id}/prepare_store_download`
        or

        `/api/histories/{id}/write_store` instead.'
      operationId: archive_export_api_histories__history_id__exports_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/ExportHistoryArchivePayload'
              - type: 'null'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/JobExportHistoryArchiveModel'
                - $ref: '#/components/schemas/JobIdResponse'
                title: Response Archive Export Api Histories  History Id  Exports
                  Put
          description: Object containing url to fetch export from.
        '202':
          description: The exported archive file is not ready yet.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Start job (if needed) to create history export for corresponding history.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/exports/{jeha_id}:
    get:
      deprecated: true
      description: 'See ``PUT /api/histories/{id}/exports`` to initiate the creation

        of the history export - when ready, that route will return 200 status

        code (instead of 202) and this route can be used to download the archive.


        **Deprecation notice**: Please use `/api/histories/{id}/prepare_store_download`
        or

        `/api/histories/{id}/write_store` instead.'
      operationId: history_archive_download_api_histories__history_id__exports__jeha_id__get
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The ID of the specific Job Export History Association or `latest`
          (default) to download the last generated archive.
        in: path
        name: jeha_id
        required: true
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - const: latest
          description: The ID of the specific Job Export History Association or `latest`
            (default) to download the last generated archive.
          examples:
          - latest
          title: Job Export History ID
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: The archive file containing the History.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: If ready and available, return raw contents of exported history as
        a downloadable archive.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/jobs_summary:
    get:
      description: 'Return job state summary info for jobs, implicit groups jobs for
        collections or workflow invocations.


        **Warning**: We allow anyone to fetch job state information about any object
        they

        can guess an encoded ID for - it isn''t considered protected data. This keeps

        polling IDs as part of state calculation for large histories and collections
        as

        efficient as possible.'
      operationId: index_jobs_summary_api_histories__history_id__jobs_summary_get
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: A comma-separated list of encoded ids of job summary objects
          to return - if `ids` is specified types must also be specified and have
          same length.
        in: query
        name: ids
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: A comma-separated list of encoded ids of job summary objects
            to return - if `ids` is specified types must also be specified and have
            same length.
          title: IDs
      - description: A comma-separated list of type of object represented by elements
          in the `ids` array - any of `Job`, `ImplicitCollectionJob`, or `WorkflowInvocation`.
        in: query
        name: types
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: A comma-separated list of type of object represented by elements
            in the `ids` array - any of `Job`, `ImplicitCollectionJob`, or `WorkflowInvocation`.
          title: Types
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  discriminator:
                    mapping:
                      ImplicitCollectionJobs: '#/components/schemas/ImplicitCollectionJobsStateSummary'
                      Job: '#/components/schemas/JobStateSummary'
                      WorkflowInvocation: '#/components/schemas/WorkflowInvocationStateSummary'
                    propertyName: model
                  oneOf:
                  - $ref: '#/components/schemas/JobStateSummary'
                  - $ref: '#/components/schemas/ImplicitCollectionJobsStateSummary'
                  - $ref: '#/components/schemas/WorkflowInvocationStateSummary'
                title: Response Index Jobs Summary Api Histories  History Id  Jobs
                  Summary Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return job state summary info for jobs, implicit groups jobs for collections
        or workflow invocations.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/materialize:
    post:
      operationId: materialize_to_history_api_histories__history_id__materialize_post
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterializeDatasetInstanceAPIRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Materialize a deferred library or HDA dataset into real, usable dataset
        in specified history.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/prepare_store_download:
    post:
      operationId: prepare_store_download_api_histories__history_id__prepare_store_download_post
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreExportPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncFile'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return a short term storage token to monitor download of the history.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/publish:
    put:
      description: Makes this item publicly available by a URL link and return the
        current sharing status.
      operationId: publish_api_histories__history_id__publish_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item public and accessible by a URL link.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/share_with_users:
    put:
      description: Shares this item with specific users and return the current sharing
        status.
      operationId: share_with_users_api_histories__history_id__share_with_users_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareWithPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareHistoryWithStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Share this item with specific users.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/sharing:
    get:
      description: Return the sharing status of the item.
      operationId: sharing_api_histories__history_id__sharing_get
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get the current sharing status of the given item.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/slug:
    put:
      description: Sets a new slug to access this item by URL. The new slug must be
        unique.
      operationId: set_slug_api_histories__history_id__slug_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSlugPayload'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Set a new slug for this shared item.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/tags:
    get:
      operationId: index_api_histories__history_id__tags_get
      parameters:
      - in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show tags based on history_id
      tags:
      - histories
  /api/histories/{history_id}/tags/{tag_name}:
    delete:
      operationId: delete_api_histories__history_id__tags__tag_name__delete
      parameters:
      - in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Delete Api Histories  History Id  Tags  Tag Name  Delete
                type: boolean
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete tag based on history_id
      tags:
      - histories
    get:
      operationId: show_api_histories__history_id__tags__tag_name__get
      parameters:
      - in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show tag based on history_id
      tags:
      - histories
    post:
      operationId: create_api_histories__history_id__tags__tag_name__post
      parameters:
      - in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ItemTagsCreatePayload'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create tag based on history_id
      tags:
      - histories
    put:
      operationId: update_api_histories__history_id__tags__tag_name__put
      parameters:
      - in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemTagsCreatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update tag based on history_id
      tags:
      - histories
  /api/histories/{history_id}/unpublish:
    put:
      description: Removes this item from the published list and return the current
        sharing status.
      operationId: unpublish_api_histories__history_id__unpublish_put
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Removes this item from the published list.
      tags:
      - histories
      - histories
  /api/histories/{history_id}/write_store:
    post:
      operationId: write_store_api_histories__history_id__write_store_post
      parameters:
      - description: The encoded database identifier of the History.
        in: path
        name: history_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteStoreToPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Prepare history for export-style download and write to supplied URI.
      tags:
      - histories
      - histories
  /api/invocations:
    get:
      operationId: index_invocations_api_invocations_get
      parameters:
      - description: Return only invocations for this Workflow ID
        in: query
        name: workflow_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Return only invocations for this Workflow ID
          title: Workflow ID
      - description: Return only invocations for this History ID
        in: query
        name: history_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Return only invocations for this History ID
          title: History ID
      - description: Return only invocations for this Job ID
        in: query
        name: job_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Return only invocations for this Job ID
          title: Job ID
      - description: Return invocations for this User ID.
        in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Return invocations for this User ID.
          title: User ID
      - description: Sort Workflow Invocations by this attribute
        in: query
        name: sort_by
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/InvocationSortByEnum'
          - type: 'null'
          description: Sort Workflow Invocations by this attribute
          title: Sort By
      - description: Sort in descending order?
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          description: Sort in descending order?
          title: Sort Descending
          type: boolean
      - description: Set to false to only include terminal Invocations.
        in: query
        name: include_terminal
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Set to false to only include terminal Invocations.
          title: Include Terminal
      - description: Limit the number of invocations to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Limit the number of invocations to return.
          title: Limit
      - description: Number of invocations to skip.
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Number of invocations to skip.
          title: Offset
      - description: Is provided workflow id for Workflow instead of StoredWorkflow?
        in: query
        name: instance
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Is provided workflow id for Workflow instead of StoredWorkflow?
          title: Instance
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Include details for individual invocation steps and populate
          a steps attribute in the resulting dictionary.
        in: query
        name: step_details
        required: false
        schema:
          default: false
          description: Include details for individual invocation steps and populate
            a steps attribute in the resulting dictionary.
          title: Include step details
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowInvocationResponse'
                title: Response Index Invocations Api Invocations Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get the list of a user's workflow invocations.
      tags:
      - workflows
      - workflows
  /api/invocations/from_store:
    post:
      description: Create invocation(s) from a supplied model store.
      operationId: create_invocations_from_store_api_invocations_from_store_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateInvocationsFromStorePayload'
              description: The values and serialization parameters for creating invocations
                from a supplied model store.
              title: Create invocations from store
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowInvocationResponse'
                title: Response Create Invocations From Store Api Invocations From
                  Store Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create Invocations From Store
      tags:
      - workflows
      - workflows
  /api/invocations/steps/{step_id}:
    get:
      operationId: step_api_invocations_steps__step_id__get
      parameters:
      - description: The encoded database identifier of the WorkflowInvocationStep.
        in: path
        name: step_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationStep'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show details of workflow invocation step.
      tags:
      - workflows
      - workflows
  /api/invocations/{invocation_id}:
    delete:
      operationId: cancel_invocation_api_invocations__invocation_id__delete
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Include details for individual invocation steps and populate
          a steps attribute in the resulting dictionary.
        in: query
        name: step_details
        required: false
        schema:
          default: false
          description: Include details for individual invocation steps and populate
            a steps attribute in the resulting dictionary.
          title: Include step details
          type: boolean
      - description: "Populate the invocation step state with the job state instead\
          \ of the invocation step state.\n        This will also produce one step\
          \ per job in mapping jobs to mimic the older behavior with respect to collections.\n\
          \        Partially scheduled steps may provide incomplete information and\
          \ the listed steps outputs\n        are not the mapped over step outputs\
          \ but the individual job outputs."
        in: query
        name: legacy_job_state
        required: false
        schema:
          default: false
          description: "Populate the invocation step state with the job state instead\
            \ of the invocation step state.\n        This will also produce one step\
            \ per job in mapping jobs to mimic the older behavior with respect to\
            \ collections.\n        Partially scheduled steps may provide incomplete\
            \ information and the listed steps outputs\n        are not the mapped\
            \ over step outputs but the individual job outputs."
          title: Replace with job state
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInvocationResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Cancel the specified workflow invocation.
      tags:
      - workflows
      - workflows
    get:
      operationId: show_invocation_api_invocations__invocation_id__get
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Include details for individual invocation steps and populate
          a steps attribute in the resulting dictionary.
        in: query
        name: step_details
        required: false
        schema:
          default: false
          description: Include details for individual invocation steps and populate
            a steps attribute in the resulting dictionary.
          title: Include step details
          type: boolean
      - description: "Populate the invocation step state with the job state instead\
          \ of the invocation step state.\n        This will also produce one step\
          \ per job in mapping jobs to mimic the older behavior with respect to collections.\n\
          \        Partially scheduled steps may provide incomplete information and\
          \ the listed steps outputs\n        are not the mapped over step outputs\
          \ but the individual job outputs."
        in: query
        name: legacy_job_state
        required: false
        schema:
          default: false
          description: "Populate the invocation step state with the job state instead\
            \ of the invocation step state.\n        This will also produce one step\
            \ per job in mapping jobs to mimic the older behavior with respect to\
            \ collections.\n        Partially scheduled steps may provide incomplete\
            \ information and the listed steps outputs\n        are not the mapped\
            \ over step outputs but the individual job outputs."
          title: Replace with job state
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInvocationResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get detailed description of a workflow invocation.
      tags:
      - workflows
      - workflows
  /api/invocations/{invocation_id}/biocompute:
    get:
      deprecated: true
      description: "The BioCompute Object endpoints are in beta - important details\
        \ such\nas how inputs and outputs are represented, how the workflow is encoded,\n\
        and how author and version information is encoded, and how URLs are\ngenerated\
        \ will very likely change in important ways over time.\n\n**Deprecation Notice**:\
        \ please use the asynchronous short_term_storage export system instead.\n\n\
        1. call POST `api/invocations/{id}/prepare_store_download` with payload:\n\
        \    ```\n    {\n        model_store_format: bco.json\n    }\n    ```\n2.\
        \ Get `storageRequestId` from response and poll GET `api/short_term_storage/${storageRequestId}/ready`\
        \ until `SUCCESS`\n\n3. Get the resulting file with `api/short_term_storage/${storageRequestId}`"
      operationId: export_invocation_bco_api_invocations__invocation_id__biocompute_get
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: query
        name: merge_history_metadata
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          title: Merge History Metadata
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return a BioCompute Object for the workflow invocation.
      tags:
      - workflows
      - workflows
  /api/invocations/{invocation_id}/biocompute/download:
    get:
      deprecated: true
      description: "The BioCompute Object endpoints are in beta - important details\
        \ such\nas how inputs and outputs are represented, how the workflow is encoded,\n\
        and how author and version information is encoded, and how URLs are\ngenerated\
        \ will very likely change in important ways over time.\n\n**Deprecation Notice**:\
        \ please use the asynchronous short_term_storage export system instead.\n\n\
        1. call POST `api/invocations/{id}/prepare_store_download` with payload:\n\
        \    ```\n    {\n        model_store_format: bco.json\n    }\n    ```\n2.\
        \ Get `storageRequestId` from response and poll GET `api/short_term_storage/${storageRequestId}/ready`\
        \ until `SUCCESS`\n\n3. Get the resulting file with `api/short_term_storage/${storageRequestId}`"
      operationId: download_invocation_bco_api_invocations__invocation_id__biocompute_download_get
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: query
        name: merge_history_metadata
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          title: Merge History Metadata
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return a BioCompute Object for the workflow invocation as a file for
        download.
      tags:
      - workflows
      - workflows
  /api/invocations/{invocation_id}/jobs_summary:
    get:
      description: 'Warning: We allow anyone to fetch job state information about
        any object they

        can guess an encoded ID for - it isn''t considered protected data. This keeps

        polling IDs as part of state calculation for large histories and collections
        as

        efficient as possible.'
      operationId: invocation_jobs_summary_api_invocations__invocation_id__jobs_summary_get
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationJobsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get job state summary info aggregated across all current jobs of the
        workflow invocation.
      tags:
      - workflows
      - workflows
  /api/invocations/{invocation_id}/prepare_store_download:
    post:
      operationId: prepare_store_download_api_invocations__invocation_id__prepare_store_download_post
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepareStoreDownloadPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncFile'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Prepare a workflow invocation export-style download.
      tags:
      - workflows
      - workflows
  /api/invocations/{invocation_id}/report:
    get:
      operationId: show_invocation_report_api_invocations__invocation_id__report_get
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationReport'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get JSON summarizing invocation for reporting.
      tags:
      - workflows
      - workflows
  /api/invocations/{invocation_id}/report.pdf:
    get:
      operationId: show_invocation_report_pdf_api_invocations__invocation_id__report_pdf_get
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get PDF summarizing invocation for reporting.
      tags:
      - workflows
      - workflows
  /api/invocations/{invocation_id}/step_jobs_summary:
    get:
      description: 'Warning: We allow anyone to fetch job state information about
        any object they

        can guess an encoded ID for - it isn''t considered protected data. This keeps

        polling IDs as part of state calculation for large histories and collections
        as

        efficient as possible.'
      operationId: invocation_step_jobs_summary_api_invocations__invocation_id__step_jobs_summary_get
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/InvocationStepJobsResponseStepModel'
                  - $ref: '#/components/schemas/InvocationStepJobsResponseJobModel'
                  - $ref: '#/components/schemas/InvocationStepJobsResponseCollectionJobsModel'
                title: Response Invocation Step Jobs Summary Api Invocations  Invocation
                  Id  Step Jobs Summary Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get job state summary info aggregated per step of the workflow invocation.
      tags:
      - workflows
      - workflows
  /api/invocations/{invocation_id}/steps/{step_id}:
    get:
      description: An alias for `GET /api/invocations/steps/{step_id}`. `invocation_id`
        is ignored.
      operationId: invocation_step_api_invocations__invocation_id__steps__step_id__get
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the WorkflowInvocationStep.
        in: path
        name: step_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationStep'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show details of workflow invocation step.
      tags:
      - workflows
      - workflows
    put:
      operationId: update_invocation_step_api_invocations__invocation_id__steps__step_id__put
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the WorkflowInvocationStep.
        in: path
        name: step_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvocationUpdatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationStep'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update state of running workflow step invocation - still very nebulous
        but this would be for stuff like confirming paused steps can proceed etc.
      tags:
      - workflows
      - workflows
  /api/invocations/{invocation_id}/write_store:
    post:
      operationId: write_store_api_invocations__invocation_id__write_store_post
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteInvocationStoreToPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Prepare a workflow invocation export-style download and write to supplied
        URI.
      tags:
      - workflows
      - workflows
  /api/job_lock:
    get:
      description: Get job lock status.
      operationId: job_lock_status_api_job_lock_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobLock'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Job Lock Status
      tags:
      - job_lock
    put:
      description: Set job lock status.
      operationId: update_job_lock_api_job_lock_put
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobLock'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobLock'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update Job Lock
      tags:
      - job_lock
  /api/jobs:
    get:
      operationId: index_api_jobs_get
      parameters:
      - description: If true, and requester is an admin, will return external job
          id and user email. This is only available to admins.
        in: query
        name: user_details
        required: false
        schema:
          default: false
          description: If true, and requester is an admin, will return external job
            id and user email. This is only available to admins.
          title: Include user details
          type: boolean
      - description: an encoded user id to restrict query to, must be own id if not
          admin user
        in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: an encoded user id to restrict query to, must be own id if
            not admin user
          title: User ID
      - description: Determines columns to return. Defaults to 'collection'.
        in: query
        name: view
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JobIndexViewEnum'
          default: collection
          description: Determines columns to return. Defaults to 'collection'.
          title: View
      - description: Limit listing of jobs to those that are updated after specified
          date (e.g. '2014-01-01')
        in: query
        name: date_range_min
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - format: date
            type: string
          - type: 'null'
          description: Limit listing of jobs to those that are updated after specified
            date (e.g. '2014-01-01')
          title: Date Range Minimum
      - description: Limit listing of jobs to those that are updated before specified
          date (e.g. '2014-01-01')
        in: query
        name: date_range_max
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - format: date
            type: string
          - type: 'null'
          description: Limit listing of jobs to those that are updated before specified
            date (e.g. '2014-01-01')
          title: Date Range Maximum
      - description: Limit listing of jobs to those that match the history_id. If
          none, jobs from any history may be returned.
        in: query
        name: history_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Limit listing of jobs to those that match the history_id. If
            none, jobs from any history may be returned.
          title: History ID
      - description: Limit listing of jobs to those that match the specified workflow
          ID. If none, jobs from any workflow (or from no workflows) may be returned.
        in: query
        name: workflow_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Limit listing of jobs to those that match the specified workflow
            ID. If none, jobs from any workflow (or from no workflows) may be returned.
          title: Workflow ID
      - description: Limit listing of jobs to those that match the specified workflow
          invocation ID. If none, jobs from any workflow invocation (or from no workflows)
          may be returned.
        in: query
        name: invocation_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Limit listing of jobs to those that match the specified workflow
            invocation ID. If none, jobs from any workflow invocation (or from no
            workflows) may be returned.
          title: Invocation ID
      - description: Limit listing of jobs to those that match the specified implicit
          collection job ID. If none, jobs from any implicit collection execution
          (or from no implicit collection execution) may be returned.
        in: query
        name: implicit_collection_jobs_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Limit listing of jobs to those that match the specified implicit
            collection job ID. If none, jobs from any implicit collection execution
            (or from no implicit collection execution) may be returned.
          title: Implicit Collection Jobs ID
      - description: Sort results by specified field.
        in: query
        name: order_by
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/JobIndexSortByEnum'
          default: update_time
          description: Sort results by specified field.
          title: Sort By
      - description: 'A mix of free text and GitHub-style tags used to filter the
          index operation.


          ## Query Structure


          GitHub-style filter tags (not be confused with Galaxy tags) are tags of
          the form

          `<tag_name>:<text_no_spaces>` or `<tag_name>:''<text with potential spaces>''`.
          The tag name

          *generally* (but not exclusively) corresponds to the name of an attribute
          on the model

          being indexed (i.e. a column in the database).


          If the tag is quoted, the attribute will be filtered exactly. If the tag
          is unquoted,

          generally a partial match will be used to filter the query (i.e. in terms
          of the implementation

          this means the database operation `ILIKE` will typically be used).


          Once the tagged filters are extracted from the search query, the remaining
          text is just

          used to search various documented attributes of the object.


          ## GitHub-style Tags Available


          `user`

          : The user email of the user that executed the Job. (The tag `u` can be
          used a short hand alias for this tag to filter on this attribute.)


          `tool_id`

          : The tool ID corresponding to the job. (The tag `t` can be used a short
          hand alias for this tag to filter on this attribute.)


          `runner`

          : The job runner name used to execute the job. (The tag `r` can be used
          a short hand alias for this tag to filter on this attribute.) This tag is
          only available for requests using admin keys and/or sessions.


          `handler`

          : The job handler name used to execute the job. (The tag `h` can be used
          a short hand alias for this tag to filter on this attribute.) This tag is
          only available for requests using admin keys and/or sessions.


          ## Free Text


          Free text search terms will be searched against the following attributes
          of the

          Jobs: `user`, `tool`, `handler`, `runner`.


          '
        in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 'A mix of free text and GitHub-style tags used to filter the
            index operation.


            ## Query Structure


            GitHub-style filter tags (not be confused with Galaxy tags) are tags of
            the form

            `<tag_name>:<text_no_spaces>` or `<tag_name>:''<text with potential spaces>''`.
            The tag name

            *generally* (but not exclusively) corresponds to the name of an attribute
            on the model

            being indexed (i.e. a column in the database).


            If the tag is quoted, the attribute will be filtered exactly. If the tag
            is unquoted,

            generally a partial match will be used to filter the query (i.e. in terms
            of the implementation

            this means the database operation `ILIKE` will typically be used).


            Once the tagged filters are extracted from the search query, the remaining
            text is just

            used to search various documented attributes of the object.


            ## GitHub-style Tags Available


            `user`

            : The user email of the user that executed the Job. (The tag `u` can be
            used a short hand alias for this tag to filter on this attribute.)


            `tool_id`

            : The tool ID corresponding to the job. (The tag `t` can be used a short
            hand alias for this tag to filter on this attribute.)


            `runner`

            : The job runner name used to execute the job. (The tag `r` can be used
            a short hand alias for this tag to filter on this attribute.) This tag
            is only available for requests using admin keys and/or sessions.


            `handler`

            : The job handler name used to execute the job. (The tag `h` can be used
            a short hand alias for this tag to filter on this attribute.) This tag
            is only available for requests using admin keys and/or sessions.


            ## Free Text


            Free text search terms will be searched against the following attributes
            of the

            Jobs: `user`, `tool`, `handler`, `runner`.


            '
          title: Search query.
      - description: Maximum number of jobs to return.
        in: query
        name: limit
        required: false
        schema:
          default: 500
          description: Maximum number of jobs to return.
          title: Limit
          type: integer
      - description: Return jobs starting from this specified position. For example,
          if ``limit`` is set to 100 and ``offset`` to 200, jobs 200-299 will be returned.
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: Return jobs starting from this specified position. For example,
            if ``limit`` is set to 100 and ``offset`` to 200, jobs 200-299 will be
            returned.
          title: Offset
          type: integer
      - description: A list or comma-separated list of states to filter job query
          on. If unspecified, jobs of any state may be returned.
        in: query
        name: state
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: A list or comma-separated list of states to filter job query
            on. If unspecified, jobs of any state may be returned.
          title: States
      - description: Limit listing of jobs to those that match one of the included
          tool_ids. If none, all are returned
        in: query
        name: tool_id
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Limit listing of jobs to those that match one of the included
            tool_ids. If none, all are returned
          title: Tool ID(s)
      - description: Limit listing of jobs to those that match one of the included
          tool ID sql-like patterns. If none, all are returned
        in: query
        name: tool_id_like
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: Limit listing of jobs to those that match one of the included
            tool ID sql-like patterns. If none, all are returned
          title: Tool ID Pattern(s)
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/ShowFullJobResponse'
                  - $ref: '#/components/schemas/EncodedJobDetails'
                  - $ref: '#/components/schemas/JobSummary'
                title: Response Index Api Jobs Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Index
      tags:
      - jobs
      - jobs
  /api/jobs/search:
    post:
      description: 'This method is designed to scan the list of previously run jobs
        and find records of jobs that had

        the exact some input parameters and datasets. This can be used to minimize
        the amount of repeated work, and simply

        recycle the old results.'
      operationId: search_jobs_api_jobs_search_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchJobsPayload'
              description: The values to search an Job
              title: Search job
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EncodedJobDetails'
                title: Response Search Jobs Api Jobs Search Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return jobs for current user
      tags:
      - jobs
      - jobs
  /api/jobs/{job_id}:
    delete:
      operationId: cancel_job_api_jobs__job_id__delete
      parameters:
      - description: The ID of the job
        in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/DeleteJobPayload'
              - type: 'null'
              description: The values to delete/cancel a job
              title: Delete/cancel job
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Cancel Job Api Jobs  Job Id  Delete
                type: boolean
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Cancels specified job
      tags:
      - jobs
      - jobs
    get:
      operationId: show_job_api_jobs__job_id__get
      parameters:
      - description: The ID of the job
        in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Show extra information.
        in: query
        name: full
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Show extra information.
          title: Full show
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ShowFullJobResponse'
                - $ref: '#/components/schemas/EncodedJobDetails'
                title: Response Show Job Api Jobs  Job Id  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return dictionary containing description of job data.
      tags:
      - jobs
      - jobs
  /api/jobs/{job_id}/common_problems:
    get:
      operationId: check_common_problems_api_jobs__job_id__common_problems_get
      parameters:
      - description: The ID of the job
        in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInputSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Check inputs and job for common potential problems to aid in error
        reporting
      tags:
      - jobs
      - jobs
  /api/jobs/{job_id}/destination_params:
    get:
      operationId: destination_params_job_api_jobs__job_id__destination_params_get
      parameters:
      - description: The ID of the job
        in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDestinationParams'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return destination parameters for specified job.
      tags:
      - jobs
      - jobs
  /api/jobs/{job_id}/error:
    post:
      operationId: report_error_api_jobs__job_id__error_post
      parameters:
      - description: The ID of the job
        in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ReportJobErrorPayload'
              description: The values to report an Error
              title: Report error
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobErrorSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Submits a bug report via the API.
      tags:
      - jobs
      - jobs
  /api/jobs/{job_id}/inputs:
    get:
      operationId: get_inputs_api_jobs__job_id__inputs_get
      parameters:
      - description: The ID of the job
        in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JobInputAssociation'
                title: Response Get Inputs Api Jobs  Job Id  Inputs Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns input datasets created by a job.
      tags:
      - jobs
      - jobs
  /api/jobs/{job_id}/metrics:
    get:
      operationId: get_metrics_api_jobs__job_id__metrics_get
      parameters:
      - description: The ID of the job
        in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - deprecated: true
        description: Whether this dataset belongs to a history (HDA) or a library
          (LDDA).
        in: query
        name: hda_ldda
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          - type: 'null'
          default: hda
          description: Whether this dataset belongs to a history (HDA) or a library
            (LDDA).
          title: HDA or LDDA
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/JobMetric'
                  - type: 'null'
                title: Response Get Metrics Api Jobs  Job Id  Metrics Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return job metrics for specified job.
      tags:
      - jobs
      - jobs
  /api/jobs/{job_id}/oidc-tokens:
    get:
      description: Allows remote job running mechanisms to get a fresh OIDC token
        that can be used on remote side to authorize user. It is not meant to represent
        part of Galaxy's stable, user facing API
      operationId: get_token_api_jobs__job_id__oidc_tokens_get
      parameters:
      - in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Job Id
          type: string
      - description: A key used to authenticate this request as acting onbehalf or
          a job runner for the specified job
        in: query
        name: job_key
        required: true
        schema:
          description: A key used to authenticate this request as acting onbehalf
            or a job runner for the specified job
          title: Job Key
          type: string
      - description: OIDC provider name
        in: query
        name: provider
        required: true
        schema:
          description: OIDC provider name
          title: Provider
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get a fresh OIDC token
      tags:
      - remote files
      - remote files
      - oidc_tokens
  /api/jobs/{job_id}/outputs:
    get:
      operationId: get_outputs_api_jobs__job_id__outputs_get
      parameters:
      - description: The ID of the job
        in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JobOutputAssociation'
                title: Response Get Outputs Api Jobs  Job Id  Outputs Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns output datasets created by a job.
      tags:
      - jobs
      - jobs
  /api/jobs/{job_id}/parameters_display:
    get:
      description: 'Resolve parameters as a list for nested display.

        This API endpoint is unstable and tied heavily to Galaxy''s JS client code,

        this endpoint will change frequently.'
      operationId: resolve_parameters_display_api_jobs__job_id__parameters_display_get
      parameters:
      - description: The ID of the job
        in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - deprecated: true
        description: Whether this dataset belongs to a history (HDA) or a library
          (LDDA).
        in: query
        name: hda_ldda
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          - type: 'null'
          default: hda
          description: Whether this dataset belongs to a history (HDA) or a library
            (LDDA).
          title: HDA or LDDA
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDisplayParametersSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Resolve parameters as a list for nested display.
      tags:
      - jobs
      - jobs
  /api/jobs/{job_id}/resume:
    put:
      operationId: resume_paused_job_api_jobs__job_id__resume_put
      parameters:
      - description: The ID of the job
        in: path
        name: job_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JobOutputAssociation'
                title: Response Resume Paused Job Api Jobs  Job Id  Resume Put
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Resumes a paused job.
      tags:
      - jobs
      - jobs
  /api/libraries:
    get:
      description: Returns a list of summary data for all libraries.
      operationId: index_api_libraries_get
      parameters:
      - description: Whether to include deleted libraries in the result.
        in: query
        name: deleted
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to include deleted libraries in the result.
          title: Display deleted
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibrarySummaryList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns a list of summary data for all libraries.
      tags:
      - libraries
      - libraries
    post:
      description: Creates a new library and returns its summary information. Currently,
        only admin users can create libraries.
      operationId: create_api_libraries_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLibraryPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibrarySummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Creates a new library and returns its summary information.
      tags:
      - libraries
      - libraries
  /api/libraries/deleted:
    get:
      description: Returns a list of summary data for all libraries marked as deleted.
      operationId: index_deleted_api_libraries_deleted_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibrarySummaryList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns a list of summary data for all libraries marked as deleted.
      tags:
      - libraries
      - libraries
  /api/libraries/from_store:
    post:
      operationId: create_from_store_api_libraries_from_store_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLibrariesFromStore'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LibrarySummary'
                title: Response Create From Store Api Libraries From Store Post
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create libraries from a model store.
      tags:
      - libraries
      - libraries
  /api/libraries/{id}:
    delete:
      description: 'Marks the specified library as deleted (or undeleted).

        Currently, only admin users can delete or restore libraries.'
      operationId: delete_api_libraries__id__delete
      parameters:
      - description: The ID of the Library.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Whether to restore a deleted library.
        in: query
        name: undelete
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to restore a deleted library.
          title: Undelete
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/DeleteLibraryPayload'
              - type: 'null'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibrarySummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Marks the specified library as deleted (or undeleted).
      tags:
      - libraries
      - libraries
    get:
      description: Returns summary information about a particular library.
      operationId: show_api_libraries__id__get
      parameters:
      - description: The ID of the Library.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibrarySummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns summary information about a particular library.
      tags:
      - libraries
      - libraries
    patch:
      description: Updates the information of an existing library.
      operationId: update_api_libraries__id__patch
      parameters:
      - description: The ID of the Library.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLibraryPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibrarySummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Updates the information of an existing library.
      tags:
      - libraries
      - libraries
  /api/libraries/{id}/permissions:
    get:
      description: 'Gets the current or available permissions of a particular library.

        The results can be paginated and additionally filtered by a query.'
      operationId: get_permissions_api_libraries__id__permissions_get
      parameters:
      - description: The ID of the Library.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The scope of the permissions to retrieve. Either the `current`
          permissions or the `available`.
        in: query
        name: scope
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/LibraryPermissionScope'
          - type: 'null'
          description: The scope of the permissions to retrieve. Either the `current`
            permissions or the `available`.
          title: Scope
      - description: Indicates whether the roles available for the library access
          are requested.
        in: query
        name: is_library_access
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Indicates whether the roles available for the library access
            are requested.
          title: Is Library Access
      - description: The page number to retrieve when paginating the available roles.
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: The page number to retrieve when paginating the available roles.
          title: Page
          type: integer
      - description: The maximum number of permissions per page when paginating.
        in: query
        name: page_limit
        required: false
        schema:
          default: 10
          description: The maximum number of permissions per page when paginating.
          title: Page Limit
          type: integer
      - description: Optional search text to retrieve only the roles matching this
          query.
        in: query
        name: q
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional search text to retrieve only the roles matching this
            query.
          title: Query
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/LibraryCurrentPermissions'
                - $ref: '#/components/schemas/LibraryAvailablePermissions'
                title: Response Get Permissions Api Libraries  Id  Permissions Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Gets the current or available permissions of a particular library.
      tags:
      - libraries
      - libraries
    post:
      description: Sets the permissions to access and manipulate a library.
      operationId: set_permissions_api_libraries__id__permissions_post
      parameters:
      - description: The ID of the Library.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Indicates what action should be performed on the Library.
        in: query
        name: action
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/LibraryPermissionAction'
          - type: 'null'
          description: Indicates what action should be performed on the Library.
          title: Action
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/LibraryPermissionsPayload'
              - $ref: '#/components/schemas/LegacyLibraryPermissionsPayload'
              title: Payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/LibraryLegacySummary'
                - $ref: '#/components/schemas/LibraryCurrentPermissions'
                title: Response Set Permissions Api Libraries  Id  Permissions Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Sets the permissions to access and manipulate a library.
      tags:
      - libraries
      - libraries
  /api/licenses:
    get:
      description: Returns an index with all the available [SPDX licenses](https://spdx.org/licenses/).
      operationId: index_api_licenses_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LicenseMetadataModel'
                title: Response Index Api Licenses Get
                type: array
          description: List of SPDX licenses
      security: []
      summary: Lists all available SPDX licenses
      tags:
      - licenses
      - licenses
  /api/licenses/{id}:
    get:
      description: 'Returns the license metadata associated with the given

        [SPDX license short ID](https://spdx.github.io/spdx-spec/appendix-I-SPDX-license-list/).'
      operationId: get_api_licenses__id__get
      parameters:
      - description: The [SPDX license short identifier](https://spdx.github.io/spdx-spec/appendix-I-SPDX-license-list/)
        in: path
        name: id
        required: true
        schema:
          description: The [SPDX license short identifier](https://spdx.github.io/spdx-spec/appendix-I-SPDX-license-list/)
          examples:
          - Apache-2.0
          title: SPDX license short ID
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseMetadataModel'
          description: SPDX license metadata
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security: []
      summary: Gets the SPDX license metadata associated with the short identifier
      tags:
      - licenses
      - licenses
  /api/metrics:
    post:
      description: Record any metrics sent and return some status object.
      operationId: create_api_metrics_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMetricsPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Create Api Metrics Post
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Records a collection of metrics.
      tags:
      - metrics
      - metrics
  /api/notifications:
    delete:
      operationId: delete_user_notifications_api_notifications_delete
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsBatchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsBatchUpdateResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Deletes a list of notifications received by the user in a single request.
      tags:
      - notifications
      - notifications
    get:
      description: 'Anonymous users cannot receive personal notifications, only broadcasted
        notifications.


        You can use the `limit` and `offset` parameters to paginate through the notifications.'
      operationId: get_user_notifications_api_notifications_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 20
          title: Limit
      - in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Offset
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns the list of notifications associated with the user.
      tags:
      - notifications
      - notifications
    post:
      description: Sends a notification to a list of recipients (users, groups or
        roles).
      operationId: send_notification_api_notifications_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCreatedResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Sends a notification to a list of recipients (users, groups or roles).
      tags:
      - notifications
      - notifications
    put:
      operationId: update_user_notifications_api_notifications_put
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationsBatchUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsBatchUpdateResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Updates a list of notifications with the requested values in a single
        request.
      tags:
      - notifications
      - notifications
  /api/notifications/broadcast:
    get:
      description: Only Admin users can access inactive notifications (scheduled or
        recently expired).
      operationId: get_all_broadcasted_api_notifications_broadcast_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastNotificationListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns all currently active broadcasted notifications.
      tags:
      - notifications
      - notifications
    post:
      description: 'Broadcasted notifications are a special kind of notification that
        are always accessible to all users, including anonymous users.

        They are typically used to display important information such as maintenance
        windows or new features.

        These notifications are displayed differently from regular notifications,
        usually in a banner at the top or bottom of the page.


        Broadcasted notifications can include action links that are displayed as buttons.

        This allows users to easily perform tasks such as filling out surveys, accepting
        legal agreements, or accessing new tutorials.


        Some key features of broadcasted notifications include:

        - They are not associated with a specific user, so they cannot be deleted
        or marked as read.

        - They can be scheduled to be displayed in the future or to expire after a
        certain time.

        - By default, broadcasted notifications are published immediately and expire
        six months after publication.

        - Only admins can create, edit, reschedule, or expire broadcasted notifications
        as needed.'
      operationId: broadcast_notification_api_notifications_broadcast_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastNotificationCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCreatedResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Broadcasts a notification to every user in the system.
      tags:
      - notifications
      - notifications
  /api/notifications/broadcast/{notification_id}:
    get:
      description: Only Admin users can access inactive notifications (scheduled or
        recently expired).
      operationId: get_broadcasted_api_notifications_broadcast__notification_id__get
      parameters:
      - description: The ID of the Notification.
        in: path
        name: notification_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastNotificationResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns the information of a specific broadcasted notification.
      tags:
      - notifications
      - notifications
    put:
      description: Only Admins can update broadcasted notifications. This is useful
        to reschedule, edit or expire broadcasted notifications.
      operationId: update_broadcasted_notification_api_notifications_broadcast__notification_id__put
      parameters:
      - description: The ID of the Notification.
        in: path
        name: notification_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationBroadcastUpdateRequest'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Updates the state of a broadcasted notification.
      tags:
      - notifications
      - notifications
  /api/notifications/preferences:
    get:
      description: Anonymous users cannot have notification preferences. They will
        receive only broadcasted notifications.
      operationId: get_notification_preferences_api_notifications_preferences_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationPreferences'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns the current user's preferences for notifications.
      tags:
      - notifications
      - notifications
    put:
      description: 'Anonymous users cannot have notification preferences. They will
        receive only broadcasted notifications.


        - Can be used to completely enable/disable notifications for a particular
        type (category)

        or to enable/disable a particular channel on each category.'
      operationId: update_notification_preferences_api_notifications_preferences_put
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserNotificationPreferencesRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationPreferences'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Updates the user's preferences for notifications.
      tags:
      - notifications
      - notifications
  /api/notifications/status:
    get:
      description: Anonymous users cannot receive personal notifications, only broadcasted
        notifications.
      operationId: get_notifications_status_api_notifications_status_get
      parameters:
      - in: query
        name: since
        required: true
        schema:
          format: date-time
          title: Since
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStatusSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns the current status summary of the user's notifications since
        a particular date.
      tags:
      - notifications
      - notifications
  /api/notifications/{notification_id}:
    delete:
      description: 'When a notification is deleted, it is not immediately removed
        from the database, but marked as deleted.


        - It will not be returned in the list of notifications, but admins can still
        access it as long as it is not expired.

        - It will be eventually removed from the database by a background task after
        the expiration time.

        - Deleted notifications will be permanently deleted when the expiration time
        is reached.'
      operationId: delete_user_notification_api_notifications__notification_id__delete
      parameters:
      - description: The ID of the Notification.
        in: path
        name: notification_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Deletes a notification received by the user.
      tags:
      - notifications
      - notifications
    get:
      operationId: show_notification_api_notifications__notification_id__get
      parameters:
      - description: The ID of the Notification.
        in: path
        name: notification_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays information about a notification received by the user.
      tags:
      - notifications
      - notifications
    put:
      operationId: update_user_notification_api_notifications__notification_id__put
      parameters:
      - description: The ID of the Notification.
        in: path
        name: notification_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationUpdateRequest'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Updates the state of a notification received by the user.
      tags:
      - notifications
      - notifications
  /api/object_stores:
    get:
      operationId: index_api_object_stores_get
      parameters:
      - description: Restrict index query to user selectable object stores, the current
          implementation requires this to be true.
        in: query
        name: selectable
        required: false
        schema:
          default: false
          description: Restrict index query to user selectable object stores, the
            current implementation requires this to be true.
          title: Selectable
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConcreteObjectStoreModel'
                title: Response Index Api Object Stores Get
                type: array
          description: A list of the configured object stores.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get a list of (currently only concrete) object stores configured with
        this Galaxy instance.
      tags:
      - object sstore
      - object sstore
  /api/object_stores/{object_store_id}:
    get:
      operationId: show_info_api_object_stores__object_store_id__get
      parameters:
      - description: The concrete object store ID.
        in: path
        name: object_store_id
        required: true
        schema:
          description: The concrete object store ID.
          title: Concrete Object Store ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteObjectStoreModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get information about a concrete object store configured with Galaxy.
      tags:
      - object sstore
      - object sstore
  /api/pages:
    get:
      description: Get a list with summary information of all Pages available to the
        user.
      operationId: index_api_pages_get
      parameters:
      - description: Whether to include deleted pages in the result.
        in: query
        name: deleted
        required: false
        schema:
          default: false
          description: Whether to include deleted pages in the result.
          title: Display deleted
          type: boolean
      - in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          title: Encoded user ID to restrict query to, must be own id if not an admin
            user
      - in: query
        name: show_published
        required: false
        schema:
          default: true
          title: Include published pages.
          type: boolean
      - in: query
        name: show_shared
        required: false
        schema:
          default: false
          title: Include pages shared with authenticated user.
          type: boolean
      - description: Sort page index by this specified attribute on the page model
        in: query
        name: sort_by
        required: false
        schema:
          default: update_time
          description: Sort page index by this specified attribute on the page model
          enum:
          - update_time
          - title
          - username
          title: Sort attribute
          type: string
      - description: Sort in descending order?
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          description: Sort in descending order?
          title: Sort Descending
          type: boolean
      - in: query
        name: limit
        required: false
        schema:
          default: 100
          exclusiveMaximum: 1000
          title: Limit number of queries.
          type: integer
      - in: query
        name: offset
        required: false
        schema:
          default: 0
          title: Number of pages to skip in sorted query (to enable pagination).
          type: integer
      - description: 'A mix of free text and GitHub-style tags used to filter the
          index operation.


          ## Query Structure


          GitHub-style filter tags (not be confused with Galaxy tags) are tags of
          the form

          `<tag_name>:<text_no_spaces>` or `<tag_name>:''<text with potential spaces>''`.
          The tag name

          *generally* (but not exclusively) corresponds to the name of an attribute
          on the model

          being indexed (i.e. a column in the database).


          If the tag is quoted, the attribute will be filtered exactly. If the tag
          is unquoted,

          generally a partial match will be used to filter the query (i.e. in terms
          of the implementation

          this means the database operation `ILIKE` will typically be used).


          Once the tagged filters are extracted from the search query, the remaining
          text is just

          used to search various documented attributes of the object.


          ## GitHub-style Tags Available


          `title`

          : The page''s title.


          `slug`

          : The page''s slug. (The tag `s` can be used a short hand alias for this
          tag to filter on this attribute.)


          `tag`

          : The page''s tags. (The tag `t` can be used a short hand alias for this
          tag to filter on this attribute.)


          `user`

          : The page''s owner''s username. (The tag `u` can be used a short hand alias
          for this tag to filter on this attribute.)


          ## Free Text


          Free text search terms will be searched against the following attributes
          of the

          Pages: `title`, `slug`, `tag`, `user`.


          '
        in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 'A mix of free text and GitHub-style tags used to filter the
            index operation.


            ## Query Structure


            GitHub-style filter tags (not be confused with Galaxy tags) are tags of
            the form

            `<tag_name>:<text_no_spaces>` or `<tag_name>:''<text with potential spaces>''`.
            The tag name

            *generally* (but not exclusively) corresponds to the name of an attribute
            on the model

            being indexed (i.e. a column in the database).


            If the tag is quoted, the attribute will be filtered exactly. If the tag
            is unquoted,

            generally a partial match will be used to filter the query (i.e. in terms
            of the implementation

            this means the database operation `ILIKE` will typically be used).


            Once the tagged filters are extracted from the search query, the remaining
            text is just

            used to search various documented attributes of the object.


            ## GitHub-style Tags Available


            `title`

            : The page''s title.


            `slug`

            : The page''s slug. (The tag `s` can be used a short hand alias for this
            tag to filter on this attribute.)


            `tag`

            : The page''s tags. (The tag `t` can be used a short hand alias for this
            tag to filter on this attribute.)


            `user`

            : The page''s owner''s username. (The tag `u` can be used a short hand
            alias for this tag to filter on this attribute.)


            ## Free Text


            Free text search terms will be searched against the following attributes
            of the

            Pages: `title`, `slug`, `tag`, `user`.


            '
          title: Search query.
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSummaryList'
          description: A list with summary page information.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Lists all Pages viewable by the user.
      tags:
      - pages
      - pages
    post:
      description: Get a list with details of all Pages available to the user.
      operationId: create_api_pages_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePagePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSummary'
          description: The page summary information.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create a page and return summary information.
      tags:
      - pages
      - pages
  /api/pages/{id}:
    delete:
      description: Marks the Page with the given ID as deleted.
      operationId: delete_api_pages__id__delete
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Marks the specific Page as deleted.
      tags:
      - pages
      - pages
    get:
      description: Return summary information about a specific Page and the content
        of the last revision.
      operationId: show_api_pages__id__get
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDetails'
          description: The page summary information.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return a page summary and the content of the last revision.
      tags:
      - pages
      - pages
  /api/pages/{id}.pdf:
    get:
      description: 'Return a PDF document of the last revision of the Page.


        This feature may not be available in this Galaxy.'
      operationId: show_pdf_api_pages__id__pdf_get
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/pdf: {}
          description: PDF document with the last revision of the page.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '501':
          description: PDF conversion service not available.
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return a PDF document of the last revision of the Page.
      tags:
      - pages
      - pages
  /api/pages/{id}/disable_link_access:
    put:
      description: Makes this item inaccessible by a URL link and return the current
        sharing status.
      operationId: disable_link_access_api_pages__id__disable_link_access_put
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item inaccessible by a URL link.
      tags:
      - pages
      - pages
  /api/pages/{id}/enable_link_access:
    put:
      description: Makes this item accessible by a URL link and return the current
        sharing status.
      operationId: enable_link_access_api_pages__id__enable_link_access_put
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item accessible by a URL link.
      tags:
      - pages
      - pages
  /api/pages/{id}/prepare_download:
    post:
      description: 'Return a STS download link for this page to be downloaded as a
        PDF.


        This feature may not be available in this Galaxy.'
      operationId: prepare_pdf_api_pages__id__prepare_download_post
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncFile'
          description: Short term storage reference for async monitoring of this download.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '501':
          description: PDF conversion service not available.
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return a PDF document of the last revision of the Page.
      tags:
      - pages
      - pages
  /api/pages/{id}/publish:
    put:
      description: Makes this item publicly available by a URL link and return the
        current sharing status.
      operationId: publish_api_pages__id__publish_put
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item public and accessible by a URL link.
      tags:
      - pages
      - pages
  /api/pages/{id}/share_with_users:
    put:
      description: Shares this item with specific users and return the current sharing
        status.
      operationId: share_with_users_api_pages__id__share_with_users_put
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareWithPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareWithStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Share this item with specific users.
      tags:
      - pages
      - pages
  /api/pages/{id}/sharing:
    get:
      description: Return the sharing status of the item.
      operationId: sharing_api_pages__id__sharing_get
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get the current sharing status of the given Page.
      tags:
      - pages
      - pages
  /api/pages/{id}/slug:
    put:
      description: Sets a new slug to access this item by URL. The new slug must be
        unique.
      operationId: set_slug_api_pages__id__slug_put
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSlugPayload'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Set a new slug for this shared item.
      tags:
      - pages
      - pages
  /api/pages/{id}/unpublish:
    put:
      description: Removes this item from the published list and return the current
        sharing status.
      operationId: unpublish_api_pages__id__unpublish_put
      parameters:
      - description: The ID of the Page.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Removes this item from the published list.
      tags:
      - pages
      - pages
  /api/quotas:
    get:
      description: Displays a list with information of quotas that are currently active.
      operationId: index_api_quotas_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaSummaryList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays a list with information of quotas that are currently active.
      tags:
      - quotas
      - quotas
    post:
      description: Creates a new quota.
      operationId: create_api_quotas_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuotaParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuotaResult'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Creates a new quota.
      tags:
      - quotas
      - quotas
  /api/quotas/deleted:
    get:
      description: Displays a list with information of quotas that have been deleted.
      operationId: index_deleted_api_quotas_deleted_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaSummaryList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays a list with information of quotas that have been deleted.
      tags:
      - quotas
      - quotas
  /api/quotas/deleted/{id}:
    get:
      description: Displays details on a particular quota that has been deleted.
      operationId: deleted_quota_api_quotas_deleted__id__get
      parameters:
      - description: The ID of the Quota.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays details on a particular quota that has been deleted.
      tags:
      - quotas
      - quotas
  /api/quotas/deleted/{id}/undelete:
    post:
      description: Restores a previously deleted quota.
      operationId: undelete_api_quotas_deleted__id__undelete_post
      parameters:
      - description: The ID of the Quota.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Undelete Api Quotas Deleted  Id  Undelete Post
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Restores a previously deleted quota.
      tags:
      - quotas
      - quotas
  /api/quotas/{id}:
    delete:
      description: Deletes an existing quota.
      operationId: delete_api_quotas__id__delete
      parameters:
      - description: The ID of the Quota.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeleteQuotaPayload'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Delete Api Quotas  Id  Delete
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Deletes an existing quota.
      tags:
      - quotas
      - quotas
    get:
      description: Displays details on a particular active quota.
      operationId: quota_api_quotas__id__get
      parameters:
      - description: The ID of the Quota.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays details on a particular active quota.
      tags:
      - quotas
      - quotas
    put:
      description: Updates an existing quota.
      operationId: update_api_quotas__id__put
      parameters:
      - description: The ID of the Quota.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQuotaParams'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Update Api Quotas  Id  Put
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Updates an existing quota.
      tags:
      - quotas
      - quotas
  /api/quotas/{id}/purge:
    post:
      operationId: purge_api_quotas__id__purge_post
      parameters:
      - description: The ID of the Quota.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Purge Api Quotas  Id  Purge Post
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Purges a previously deleted quota.
      tags:
      - quotas
      - quotas
  /api/remote_files:
    get:
      description: Lists all remote files available to the user from different sources.
      operationId: index_api_remote_files_get
      parameters:
      - description: 'The source to load datasets from. Possible values: ftpdir, userdir,
          importdir'
        in: query
        name: target
        required: false
        schema:
          default: ftpdir
          description: 'The source to load datasets from. Possible values: ftpdir,
            userdir, importdir'
          title: Target source
          type: string
      - description: The requested format of returned data. Either `flat` to simply
          list all the files, `jstree` to get a tree representation of the files,
          or the default `uri` to list files and directories by their URI.
        in: query
        name: format
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/RemoteFilesFormat'
          - type: 'null'
          default: uri
          description: The requested format of returned data. Either `flat` to simply
            list all the files, `jstree` to get a tree representation of the files,
            or the default `uri` to list files and directories by their URI.
          title: Response format
      - description: Whether to recursively lists all sub-directories. This will be
          `True` by default depending on the `target`.
        in: query
        name: recursive
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether to recursively lists all sub-directories. This will
            be `True` by default depending on the `target`.
          title: Recursive
      - description: (This only applies when `format` is `jstree`) The value can be
          either `folders` or `files` and it will disable the corresponding nodes
          of the tree.
        in: query
        name: disable
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/RemoteFilesDisableMode'
          - type: 'null'
          description: (This only applies when `format` is `jstree`) The value can
            be either `folders` or `files` and it will disable the corresponding nodes
            of the tree.
          title: Disable mode
      - description: Whether the query is made with the intention of writing to the
          source. If set to True, only entries that can be written to will be returned.
        in: query
        name: writeable
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the query is made with the intention of writing to
            the source. If set to True, only entries that can be written to will be
            returned.
          title: Writeable
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/ListUriResponse'
                - $ref: '#/components/schemas/ListJstreeResponse'
                title: Response Index Api Remote Files Get
          description: A list with details about the remote files available to the
            user.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Displays remote files available to the user.
      tags:
      - remote files
      - remote files
    post:
      description: Creates a new entry on the remote files source.
      operationId: create_entry_api_remote_files_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateEntryPayload'
              description: Information about the entry to create. Depends on the target
                file source.
              title: Entry Data
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedEntryResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Creates a new entry (directory/record) on the remote files source.
      tags:
      - remote files
      - remote files
  /api/remote_files/plugins:
    get:
      description: Display plugin information for each of the gxfiles:// URI targets
        available.
      operationId: plugins_api_remote_files_plugins_get
      parameters:
      - description: Whether to return browsable filesources only. The default is
          `True`, which will omit filesourceslike `http` and `base64` that do not
          implement a list method.
        in: query
        name: browsable_only
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Whether to return browsable filesources only. The default is
            `True`, which will omit filesourceslike `http` and `base64` that do not
            implement a list method.
          title: Browsable filesources only
      - description: Whether to return **only** filesources of the specified kind.
          The default is `None`, which will return all filesources. Multiple values
          can be specified by repeating the parameter.
        in: query
        name: include_kind
        required: false
        schema:
          anyOf:
          - items:
              $ref: '#/components/schemas/PluginKind'
            type: array
          - type: 'null'
          description: Whether to return **only** filesources of the specified kind.
            The default is `None`, which will return all filesources. Multiple values
            can be specified by repeating the parameter.
          title: Include kind
      - description: Whether to exclude filesources of the specified kind from the
          list. The default is `None`, which will return all filesources. Multiple
          values can be specified by repeating the parameter.
        in: query
        name: exclude_kind
        required: false
        schema:
          anyOf:
          - items:
              $ref: '#/components/schemas/PluginKind'
            type: array
          - type: 'null'
          description: Whether to exclude filesources of the specified kind from the
            list. The default is `None`, which will return all filesources. Multiple
            values can be specified by repeating the parameter.
          title: Exclude kind
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesSourcePluginList'
          description: A list with details about each plugin.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Display plugin information for each of the gxfiles:// URI targets available.
      tags:
      - remote files
      - remote files
  /api/roles:
    get:
      operationId: index_api_roles_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Index
      tags:
      - roles
      - roles
    post:
      operationId: create_api_roles_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDefinitionModel'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModelResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create
      tags:
      - roles
      - roles
  /api/roles/{id}:
    delete:
      operationId: delete_api_roles__id__delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModelResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete
      tags:
      - roles
      - roles
    get:
      operationId: show_api_roles__id__get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModelResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show
      tags:
      - roles
      - roles
  /api/roles/{id}/purge:
    post:
      operationId: purge_api_roles__id__purge_post
      parameters:
      - in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModelResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Purge
      tags:
      - roles
      - roles
  /api/roles/{id}/undelete:
    post:
      operationId: undelete_api_roles__id__undelete_post
      parameters:
      - in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModelResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Undelete
      tags:
      - roles
      - roles
  /api/short_term_storage/{storage_request_id}:
    get:
      operationId: serve_api_short_term_storage__storage_request_id__get
      parameters:
      - in: path
        name: storage_request_id
        required: true
        schema:
          format: uuid
          title: Storage Request Id
          type: string
      responses:
        '200':
          description: The archive file containing the History.
        '204':
          description: Request was cancelled without an exception condition recorded.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security: []
      summary: Serve the staged download specified by request ID.
      tags:
      - short_term_storage
      - short_term_storage
  /api/short_term_storage/{storage_request_id}/ready:
    get:
      operationId: is_ready_api_short_term_storage__storage_request_id__ready_get
      parameters:
      - in: path
        name: storage_request_id
        required: true
        schema:
          format: uuid
          title: Storage Request Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Is Ready Api Short Term Storage  Storage Request Id  Ready
                  Get
                type: boolean
          description: Boolean indicating if the storage is ready.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security: []
      summary: Determine if specified storage request ID is ready for download.
      tags:
      - short_term_storage
      - short_term_storage
  /api/storage/datasets:
    delete:
      description: '**Warning**: This operation cannot be undone. All objects will
        be deleted permanently from the disk.'
      operationId: cleanup_datasets_api_storage_datasets_delete
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CleanupStorageItemsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageItemsCleanupResult'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Purges a set of datasets by ID from disk. The datasets must be owned
        by the user.
      tags:
      - storage management
      - storage management
  /api/storage/datasets/discarded:
    get:
      operationId: discarded_datasets_api_storage_datasets_discarded_get
      parameters:
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          by '-asc' or '-dsc' for ascending and descending order respectively.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/StoredItemOrderBy'
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            by '-asc' or '-dsc' for ascending and descending order respectively.
          title: Order
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StoredItem'
                title: Response Discarded Datasets Api Storage Datasets Discarded
                  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns discarded datasets owned by the given user. The results can
        be paginated.
      tags:
      - storage management
      - storage management
  /api/storage/datasets/discarded/summary:
    get:
      operationId: discarded_datasets_summary_api_storage_datasets_discarded_summary_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CleanableItemsSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns information with the total storage space taken by discarded
        datasets owned by the given user.
      tags:
      - storage management
      - storage management
  /api/storage/histories:
    delete:
      description: '**Warning**: This operation cannot be undone. All objects will
        be deleted permanently from the disk.'
      operationId: cleanup_histories_api_storage_histories_delete
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CleanupStorageItemsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageItemsCleanupResult'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Purges a set of histories by ID. The histories must be owned by the
        user.
      tags:
      - storage management
      - storage management
  /api/storage/histories/archived:
    get:
      operationId: archived_histories_api_storage_histories_archived_get
      parameters:
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          by '-asc' or '-dsc' for ascending and descending order respectively.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/StoredItemOrderBy'
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            by '-asc' or '-dsc' for ascending and descending order respectively.
          title: Order
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StoredItem'
                title: Response Archived Histories Api Storage Histories Archived
                  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns archived histories owned by the given user that are not purged.
        The results can be paginated.
      tags:
      - storage management
      - storage management
  /api/storage/histories/archived/summary:
    get:
      operationId: archived_histories_summary_api_storage_histories_archived_summary_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CleanableItemsSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns information with the total storage space taken by non-purged
        archived histories associated with the given user.
      tags:
      - storage management
      - storage management
  /api/storage/histories/discarded:
    get:
      operationId: discarded_histories_api_storage_histories_discarded_get
      parameters:
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: String containing one of the valid ordering attributes followed
          by '-asc' or '-dsc' for ascending and descending order respectively.
        in: query
        name: order
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/StoredItemOrderBy'
          - type: 'null'
          description: String containing one of the valid ordering attributes followed
            by '-asc' or '-dsc' for ascending and descending order respectively.
          title: Order
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StoredItem'
                title: Response Discarded Histories Api Storage Histories Discarded
                  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns all discarded histories associated with the given user.
      tags:
      - storage management
      - storage management
  /api/storage/histories/discarded/summary:
    get:
      operationId: discarded_histories_summary_api_storage_histories_discarded_summary_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CleanableItemsSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns information with the total storage space taken by discarded
        histories associated with the given user.
      tags:
      - storage management
      - storage management
  /api/tags:
    put:
      description: 'Replaces the tags associated with an item with the new ones specified
        in the payload.


        - The previous tags will be __deleted__.

        - If no tags are provided in the request body, the currently associated tags
        will also be __deleted__.'
      operationId: update_api_tags_put
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ItemTagsPayload'
              description: Request body containing the item and the tags to be assigned.
              title: Payload
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Apply a new set of tags to an item.
      tags:
      - tags
      - tags
  /api/tasks/{task_id}/state:
    get:
      operationId: state_api_tasks__task_id__state_get
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          format: uuid
          title: Task Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskState'
          description: String indicating task state.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security: []
      summary: Determine state of task ID
      tags:
      - tasks
      - tasks
  /api/tool_data:
    get:
      description: Get the list of all available data tables.
      operationId: index_api_tool_data_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDataEntryList'
          description: A list with details on individual data tables.
      security: []
      summary: Lists all available data tables
      tags:
      - tool data tables
      - tool data tables
    post:
      operationId: create_api_tool_data_post
      parameters:
      - in: query
        name: tool_data_file_path
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Tool Data File Path
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportToolDataBundle'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Import a data manager bundle
      tags:
      - tool data tables
      - tool data tables
  /api/tool_data/{table_name}:
    delete:
      description: Removes an item from a data table and reloads it to return its
        updated details.
      operationId: delete_api_tool_data__table_name__delete
      parameters:
      - description: The name of the tool data table
        in: path
        name: table_name
        required: true
        schema:
          description: The name of the tool data table
          examples:
          - all_fasta
          title: Data table name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolDataItem'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDataDetails'
          description: A description of the affected data table and its content
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Removes an item from a data table
      tags:
      - tool data tables
      - tool data tables
    get:
      description: Get details of a given tool data table.
      operationId: show_api_tool_data__table_name__get
      parameters:
      - description: The name of the tool data table
        in: path
        name: table_name
        required: true
        schema:
          description: The name of the tool data table
          examples:
          - all_fasta
          title: Data table name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDataDetails'
          description: A description of the given data table and its content
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get details of a given data table
      tags:
      - tool data tables
      - tool data tables
  /api/tool_data/{table_name}/fields/{field_name}:
    get:
      description: Reloads a data table and return its details.
      operationId: show_field_api_tool_data__table_name__fields__field_name__get
      parameters:
      - description: The name of the tool data table
        in: path
        name: table_name
        required: true
        schema:
          description: The name of the tool data table
          examples:
          - all_fasta
          title: Data table name
          type: string
      - description: The name of the tool data table field
        in: path
        name: field_name
        required: true
        schema:
          description: The name of the tool data table field
          title: Field name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDataField'
          description: Information about a data table field
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get information about a particular field in a tool data table
      tags:
      - tool data tables
      - tool data tables
  /api/tool_data/{table_name}/fields/{field_name}/files/{file_name}:
    get:
      description: Download a file associated with the data table field.
      operationId: download_field_file_api_tool_data__table_name__fields__field_name__files__file_name__get
      parameters:
      - description: The name of the tool data table
        in: path
        name: table_name
        required: true
        schema:
          description: The name of the tool data table
          examples:
          - all_fasta
          title: Data table name
          type: string
      - description: The name of the tool data table field
        in: path
        name: field_name
        required: true
        schema:
          description: The name of the tool data table field
          title: Field name
          type: string
      - description: The name of a file associated with this data table field
        in: path
        name: file_name
        required: true
        schema:
          description: The name of a file associated with this data table field
          title: File name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Information about a data table field
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get information about a particular field in a tool data table
      tags:
      - tool data tables
      - tool data tables
  /api/tool_data/{table_name}/reload:
    get:
      description: Reloads a data table and return its details.
      operationId: reload_api_tool_data__table_name__reload_get
      parameters:
      - description: The name of the tool data table
        in: path
        name: table_name
        required: true
        schema:
          description: The name of the tool data table
          examples:
          - all_fasta
          title: Data table name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolDataDetails'
          description: A description of the reloaded data table and its content
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Reloads a tool data table
      tags:
      - tool data tables
      - tool data tables
  /api/tool_shed_repositories:
    get:
      operationId: index_api_tool_shed_repositories_get
      parameters:
      - description: Filter by repository name.
        in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by repository name.
          title: Name
      - description: Filter by repository owner.
        in: query
        name: owner
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by repository owner.
          title: Owner
      - description: Filter by changeset revision.
        in: query
        name: changeset
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by changeset revision.
          title: Changeset
      - description: Filter by whether the repository has been deleted.
        in: query
        name: deleted
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Filter by whether the repository has been deleted.
          title: Deleted?
      - description: Filter by whether the repository has been uninstalled.
        in: query
        name: uninstalled
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Filter by whether the repository has been uninstalled.
          title: Uninstalled?
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InstalledToolShedRepository'
                title: Response Index Api Tool Shed Repositories Get
                type: array
          description: A list of installed tool shed repository objects.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security: []
      summary: Lists installed tool shed repositories.
      tags:
      - tool_shed_repositories
      - tool_shed_repositories
  /api/tool_shed_repositories/check_for_updates:
    get:
      operationId: check_for_updates_api_tool_shed_repositories_check_for_updates_get
      parameters:
      - in: query
        name: id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          title: Id
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckForUpdatesResponse'
          description: A description of the state and updates message.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Check for updates to the specified repository, or all installed repositories.
      tags:
      - tool_shed_repositories
      - tool_shed_repositories
  /api/tool_shed_repositories/{id}:
    get:
      operationId: show_api_tool_shed_repositories__id__get
      parameters:
      - description: The encoded database identifier of the installed Tool Shed Repository.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstalledToolShedRepository'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security: []
      summary: Show installed tool shed repository.
      tags:
      - tool_shed_repositories
      - tool_shed_repositories
  /api/tools/fetch:
    post:
      operationId: fetch_form_api_tools_fetch_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_fetch_form_api_tools_fetch_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Upload files to Galaxy
      tags:
      - tools
      - tools
  /api/tours:
    get:
      description: Return list of available tours.
      operationId: index_api_tours_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TourList'
          description: Successful Response
      security: []
      summary: Index
      tags:
      - tours
      - tours
  /api/tours/{tour_id}:
    get:
      description: Return a tour definition.
      operationId: show_api_tours__tour_id__get
      parameters:
      - in: path
        name: tour_id
        required: true
        schema:
          title: Tour Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TourDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security: []
      summary: Show
      tags:
      - tours
      - tours
    post:
      description: Return a tour definition.
      operationId: update_tour_api_tours__tour_id__post
      parameters:
      - in: path
        name: tour_id
        required: true
        schema:
          title: Tour Id
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TourDetails'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update Tour
      tags:
      - tours
      - tours
  /api/users:
    get:
      description: Return a collection of users. Filters will only work if enabled
        in config or user is admin.
      operationId: get_users_api_users_get
      parameters:
      - description: Indicates if the collection will be about deleted users
        in: query
        name: deleted
        required: false
        schema:
          default: false
          description: Indicates if the collection will be about deleted users
          title: Deleted users
          type: boolean
      - description: An email address to filter on
        in: query
        name: f_email
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: An email address to filter on
          title: Email filter
      - description: An username address to filter on
        in: query
        name: f_name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: An username address to filter on
          title: Name filter
      - description: Filter on username OR email
        in: query
        name: f_any
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter on username OR email
          title: Any filter
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/UserModel'
                  - $ref: '#/components/schemas/LimitedUserModel'
                title: Response Get Users Api Users Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get Users
      tags:
      - users
      - users
    post:
      operationId: create_user_api_users_post
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/UserCreationPayload'
              - $ref: '#/components/schemas/RemoteUserCreationPayload'
              description: The values to add create a user.
              title: Create User
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedUserModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create a new Galaxy user. Only admins can create users for now.
      tags:
      - users
      - users
  /api/users/current/recalculate_disk_usage:
    put:
      description: 'This route will be removed in a future version.


        Please use `/api/users/current/recalculate_disk_usage` instead.'
      operationId: recalculate_disk_usage_api_users_current_recalculate_disk_usage_put
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: The asynchronous task summary to track the task state.
        '204':
          description: The background task was submitted but there is no status tracking
            ID available.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Triggers a recalculation of the current user disk usage.
      tags:
      - users
      - users
  /api/users/deleted:
    get:
      description: Return a collection of deleted users. Only admins can see deleted
        users.
      operationId: get_deleted_users_api_users_deleted_get
      parameters:
      - description: An email address to filter on
        in: query
        name: f_email
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: An email address to filter on
          title: Email filter
      - description: An username address to filter on
        in: query
        name: f_name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: An username address to filter on
          title: Name filter
      - description: Filter on username OR email
        in: query
        name: f_any
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter on username OR email
          title: Any filter
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/UserModel'
                  - $ref: '#/components/schemas/LimitedUserModel'
                title: Response Get Deleted Users Api Users Deleted Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get Deleted Users
      tags:
      - users
      - users
  /api/users/deleted/{user_id}:
    get:
      operationId: get_deleted_user_api_users_deleted__user_id__get
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/DetailedUserModel'
                - $ref: '#/components/schemas/AnonUserModel'
                title: Response Get Deleted User Api Users Deleted  User Id  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return information about a deleted user. Only admins can see deleted
        users.
      tags:
      - users
      - users
  /api/users/deleted/{user_id}/undelete:
    post:
      operationId: undelete_user_api_users_deleted__user_id__undelete_post
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedUserModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Restore a deleted user. Only admins can restore users.
      tags:
      - users
      - users
  /api/users/recalculate_disk_usage:
    put:
      deprecated: true
      description: 'This route will be removed in a future version.


        Please use `/api/users/current/recalculate_disk_usage` instead.'
      operationId: recalculate_disk_usage_api_users_recalculate_disk_usage_put
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: The asynchronous task summary to track the task state.
        '204':
          description: The background task was submitted but there is no status tracking
            ID available.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Triggers a recalculation of the current user disk usage.
      tags:
      - users
      - users
  /api/users/{user_id}:
    delete:
      operationId: delete_user_api_users__user_id__delete
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/UserDeletionPayload'
              - type: 'null'
              description: Purge the user.
              title: Purge user
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedUserModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete a user. Only admins can delete others or purge users.
      tags:
      - users
      - users
    get:
      operationId: get_user_api_users__user_id__get
      parameters:
      - description: The ID of the user to get or 'current'.
        in: path
        name: user_id
        required: true
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - const: current
          description: The ID of the user to get or 'current'.
          title: User ID
      - description: Indicates if the user is deleted
        in: query
        name: deleted
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Indicates if the user is deleted
          title: Deleted user
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/DetailedUserModel'
                - $ref: '#/components/schemas/AnonUserModel'
                title: Response Get User Api Users  User Id  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return information about a specified or the current user. Only admin
        can see deleted or other users
      tags:
      - users
      - users
    put:
      operationId: update_user_api_users__user_id__put
      parameters:
      - description: The ID of the user to get or 'current'.
        in: path
        name: user_id
        required: true
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - const: current
          description: The ID of the user to get or 'current'.
          title: User ID
      - description: Indicates if the user is deleted
        in: query
        name: deleted
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Indicates if the user is deleted
          title: Deleted user
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              description: The user values to update.
              title: Update user
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedUserModel'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update the values of a user. Only admin can update others.
      tags:
      - users
      - users
  /api/users/{user_id}/api_key:
    delete:
      operationId: delete_api_key_api_users__user_id__api_key_delete
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete the current API key of the user
      tags:
      - users
      - users
    get:
      operationId: get_or_create_api_key_api_users__user_id__api_key_get
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Or Create Api Key Api Users  User Id  Api Key
                  Get
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return the user's API key
      tags:
      - users
      - users
    post:
      operationId: create_api_key_api_users__user_id__api_key_post
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Create Api Key Api Users  User Id  Api Key Post
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create a new API key for the user
      tags:
      - users
      - users
  /api/users/{user_id}/api_key/detailed:
    get:
      operationId: get_api_key_detailed_api_users__user_id__api_key_detailed_get
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyModel'
          description: The API key of the user.
        '204':
          description: The user doesn't have an API key.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return the user's API key with extra information.
      tags:
      - users
      - users
  /api/users/{user_id}/beacon:
    get:
      description: '**Warning**: This endpoint is experimental and might change or
        disappear in future versions.'
      operationId: get_beacon_settings_api_users__user_id__beacon_get
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBeaconSetting'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return information about beacon share settings
      tags:
      - users
      - users
    post:
      description: '**Warning**: This endpoint is experimental and might change or
        disappear in future versions.'
      operationId: set_beacon_settings_api_users__user_id__beacon_post
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBeaconSetting'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBeaconSetting'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Change beacon setting
      tags:
      - users
      - users
  /api/users/{user_id}/custom_builds:
    get:
      operationId: get_custom_builds_api_users__user_id__custom_builds_get
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomBuildsCollection'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: ' Returns collection of custom builds.'
      tags:
      - users
      - users
  /api/users/{user_id}/custom_builds/{key}:
    delete:
      operationId: delete_custom_build_api_users__user_id__custom_builds__key__delete
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The key of the custom build to be deleted.
        in: path
        name: key
        required: true
        schema:
          description: The key of the custom build to be deleted.
          title: Custom build key
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedCustomBuild'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete a custom build
      tags:
      - users
      - users
    put:
      operationId: add_custom_builds_api_users__user_id__custom_builds__key__put
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The key of the custom build to be deleted.
        in: path
        name: key
        required: true
        schema:
          description: The key of the custom build to be deleted.
          title: Custom build key
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CustomBuildCreationPayload'
              description: The values to add a new custom build.
              title: Add custom build
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Add Custom Builds Api Users  User Id  Custom Builds  Key  Put
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Add new custom build.
      tags:
      - users
      - users
  /api/users/{user_id}/favorites/{object_type}:
    put:
      operationId: set_favorite_api_users__user_id__favorites__object_type__put
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The object type the user wants to favorite
        in: path
        name: object_type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/FavoriteObjectType'
          description: The object type the user wants to favorite
          title: Object type
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/FavoriteObject'
              description: The id of an object the user wants to favorite.
              title: Set favorite
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteObjectsSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Add the object to user's favorites
      tags:
      - users
      - users
  /api/users/{user_id}/favorites/{object_type}/{object_id}:
    delete:
      operationId: remove_favorite_api_users__user_id__favorites__object_type___object_id__delete
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The object type the user wants to favorite
        in: path
        name: object_type
        required: true
        schema:
          allOf:
          - $ref: '#/components/schemas/FavoriteObjectType'
          description: The object type the user wants to favorite
          title: Object type
      - description: The ID of an object the user wants to remove from favorites
        in: path
        name: object_id
        required: true
        schema:
          description: The ID of an object the user wants to remove from favorites
          title: Object ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteObjectsSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Remove the object from user's favorites
      tags:
      - users
      - users
  /api/users/{user_id}/recalculate_disk_usage:
    put:
      operationId: recalculate_disk_usage_by_user_id_api_users__user_id__recalculate_disk_usage_put
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncTaskResultSummary'
          description: The asynchronous task summary to track the task state.
        '204':
          description: The background task was submitted but there is no status tracking
            ID available.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Triggers a recalculation of the current user disk usage.
      tags:
      - users
      - users
  /api/users/{user_id}/send_activation_email:
    post:
      operationId: send_activation_email_api_users__user_id__send_activation_email_post
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Sends activation email to user.
      tags:
      - users
      - users
  /api/users/{user_id}/theme/{theme}:
    put:
      operationId: set_theme_api_users__user_id__theme__theme__put
      parameters:
      - description: The ID of the user.
        in: path
        name: user_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The theme of the GUI
        in: path
        name: theme
        required: true
        schema:
          description: The theme of the GUI
          title: Theme
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Set Theme Api Users  User Id  Theme  Theme  Put
                type: string
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Set the user's theme choice
      tags:
      - users
      - users
  /api/users/{user_id}/usage:
    get:
      operationId: get_user_usage_api_users__user_id__usage_get
      parameters:
      - description: The ID of the user to get or 'current'.
        in: path
        name: user_id
        required: true
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - const: current
          description: The ID of the user to get or 'current'.
          title: User ID
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserQuotaUsage'
                title: Response Get User Usage Api Users  User Id  Usage Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return the user's quota usage summary broken down by quota source
      tags:
      - users
      - users
  /api/users/{user_id}/usage/{label}:
    get:
      operationId: get_user_usage_for_label_api_users__user_id__usage__label__get
      parameters:
      - description: The ID of the user to get or 'current'.
        in: path
        name: user_id
        required: true
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - const: current
          description: The ID of the user to get or 'current'.
          title: User ID
      - description: The label corresponding to the quota source to fetch usage information
          about.
        in: path
        name: label
        required: true
        schema:
          description: The label corresponding to the quota source to fetch usage
            information about.
          title: Quota Source Label
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/UserQuotaUsage'
                - type: 'null'
                title: Response Get User Usage For Label Api Users  User Id  Usage  Label  Get
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return the user's quota usage summary for a given quota source label
      tags:
      - users
      - users
  /api/version:
    get:
      description: 'Return Galaxy version information: major/minor version, optional
        extra info.'
      operationId: version_api_version_get
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Version Api Version Get
                type: object
          description: 'Galaxy version information: major/minor version, optional
            extra info'
      security: []
      summary: 'Return Galaxy version information: major/minor version, optional extra
        info'
      tags:
      - configuration
      - configuration
  /api/visualizations:
    get:
      operationId: index_api_visualizations_get
      parameters:
      - description: Whether to include deleted visualizations in the result.
        in: query
        name: deleted
        required: false
        schema:
          default: false
          description: Whether to include deleted visualizations in the result.
          title: Display deleted
          type: boolean
      - description: The maximum number of items to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          description: The maximum number of items to return.
          title: Limit
      - description: Starts at the beginning skip the first ( offset - 1 ) items and
          begin returning at the Nth item
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - minimum: 0
            type: integer
          - type: 'null'
          default: 0
          description: Starts at the beginning skip the first ( offset - 1 ) items
            and begin returning at the Nth item
          title: Offset
      - in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          title: Encoded user ID to restrict query to, must be own id if not an admin
            user
      - in: query
        name: show_own
        required: false
        schema:
          default: true
          title: Show visualizations owned by user.
          type: boolean
      - in: query
        name: show_published
        required: false
        schema:
          default: true
          title: Include published visualizations.
          type: boolean
      - in: query
        name: show_shared
        required: false
        schema:
          default: false
          title: Include visualizations shared with authenticated user.
          type: boolean
      - description: Sort visualization index by this specified attribute on the visualization
          model
        in: query
        name: sort_by
        required: false
        schema:
          default: update_time
          description: Sort visualization index by this specified attribute on the
            visualization model
          enum:
          - create_time
          - title
          - update_time
          - username
          title: Sort attribute
          type: string
      - description: Sort in descending order?
        in: query
        name: sort_desc
        required: false
        schema:
          default: true
          description: Sort in descending order?
          title: Sort Descending
          type: boolean
      - description: 'A mix of free text and GitHub-style tags used to filter the
          index operation.


          ## Query Structure


          GitHub-style filter tags (not be confused with Galaxy tags) are tags of
          the form

          `<tag_name>:<text_no_spaces>` or `<tag_name>:''<text with potential spaces>''`.
          The tag name

          *generally* (but not exclusively) corresponds to the name of an attribute
          on the model

          being indexed (i.e. a column in the database).


          If the tag is quoted, the attribute will be filtered exactly. If the tag
          is unquoted,

          generally a partial match will be used to filter the query (i.e. in terms
          of the implementation

          this means the database operation `ILIKE` will typically be used).


          Once the tagged filters are extracted from the search query, the remaining
          text is just

          used to search various documented attributes of the object.


          ## GitHub-style Tags Available


          `title`

          : The visualization''s title.


          `slug`

          : The visualization''s slug. (The tag `s` can be used a short hand alias
          for this tag to filter on this attribute.)


          `tag`

          : The visualization''s tags. (The tag `t` can be used a short hand alias
          for this tag to filter on this attribute.)


          `user`

          : The visualization''s owner''s username. (The tag `u` can be used a short
          hand alias for this tag to filter on this attribute.)


          ## Free Text


          Free text search terms will be searched against the following attributes
          of the

          Visualizations: `title`, `slug`, `tag`, `type`.


          '
        in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 'A mix of free text and GitHub-style tags used to filter the
            index operation.


            ## Query Structure


            GitHub-style filter tags (not be confused with Galaxy tags) are tags of
            the form

            `<tag_name>:<text_no_spaces>` or `<tag_name>:''<text with potential spaces>''`.
            The tag name

            *generally* (but not exclusively) corresponds to the name of an attribute
            on the model

            being indexed (i.e. a column in the database).


            If the tag is quoted, the attribute will be filtered exactly. If the tag
            is unquoted,

            generally a partial match will be used to filter the query (i.e. in terms
            of the implementation

            this means the database operation `ILIKE` will typically be used).


            Once the tagged filters are extracted from the search query, the remaining
            text is just

            used to search various documented attributes of the object.


            ## GitHub-style Tags Available


            `title`

            : The visualization''s title.


            `slug`

            : The visualization''s slug. (The tag `s` can be used a short hand alias
            for this tag to filter on this attribute.)


            `tag`

            : The visualization''s tags. (The tag `t` can be used a short hand alias
            for this tag to filter on this attribute.)


            `user`

            : The visualization''s owner''s username. (The tag `u` can be used a short
            hand alias for this tag to filter on this attribute.)


            ## Free Text


            Free text search terms will be searched against the following attributes
            of the

            Visualizations: `title`, `slug`, `tag`, `type`.


            '
          title: Search query.
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisualizationSummaryList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Returns visualizations for the current user.
      tags:
      - visualizations
      - visualizations
  /api/visualizations/{id}/disable_link_access:
    put:
      description: Makes this item inaccessible by a URL link and return the current
        sharing status.
      operationId: disable_link_access_api_visualizations__id__disable_link_access_put
      parameters:
      - description: The encoded database identifier of the Visualization.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item inaccessible by a URL link.
      tags:
      - visualizations
      - visualizations
  /api/visualizations/{id}/enable_link_access:
    put:
      description: Makes this item accessible by a URL link and return the current
        sharing status.
      operationId: enable_link_access_api_visualizations__id__enable_link_access_put
      parameters:
      - description: The encoded database identifier of the Visualization.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item accessible by a URL link.
      tags:
      - visualizations
      - visualizations
  /api/visualizations/{id}/publish:
    put:
      description: Makes this item publicly available by a URL link and return the
        current sharing status.
      operationId: publish_api_visualizations__id__publish_put
      parameters:
      - description: The encoded database identifier of the Visualization.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item public and accessible by a URL link.
      tags:
      - visualizations
      - visualizations
  /api/visualizations/{id}/share_with_users:
    put:
      description: Shares this item with specific users and return the current sharing
        status.
      operationId: share_with_users_api_visualizations__id__share_with_users_put
      parameters:
      - description: The encoded database identifier of the Visualization.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareWithPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareWithStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Share this item with specific users.
      tags:
      - visualizations
      - visualizations
  /api/visualizations/{id}/sharing:
    get:
      description: Return the sharing status of the item.
      operationId: sharing_api_visualizations__id__sharing_get
      parameters:
      - description: The encoded database identifier of the Visualization.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get the current sharing status of the given Visualization.
      tags:
      - visualizations
      - visualizations
  /api/visualizations/{id}/slug:
    put:
      description: Sets a new slug to access this item by URL. The new slug must be
        unique.
      operationId: set_slug_api_visualizations__id__slug_put
      parameters:
      - description: The encoded database identifier of the Visualization.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSlugPayload'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Set a new slug for this shared item.
      tags:
      - visualizations
      - visualizations
  /api/visualizations/{id}/unpublish:
    put:
      description: Removes this item from the published list and return the current
        sharing status.
      operationId: unpublish_api_visualizations__id__unpublish_put
      parameters:
      - description: The encoded database identifier of the Visualization.
        in: path
        name: id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Removes this item from the published list.
      tags:
      - visualizations
      - visualizations
  /api/whoami:
    get:
      description: Return information about the current authenticated user.
      operationId: whoami_api_whoami_get
      parameters:
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/UserModel'
                - type: 'null'
                title: Response Whoami Api Whoami Get
          description: Information about the current authenticated user
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Return information about the current authenticated user
      tags:
      - configuration
      - configuration
  /api/workflows:
    get:
      description: Lists stored workflows viewable by the user.
      operationId: index_api_workflows_get
      parameters:
      - description: Whether to restrict result to deleted workflows.
        in: query
        name: show_deleted
        required: false
        schema:
          default: false
          description: Whether to restrict result to deleted workflows.
          title: Display deleted
          type: boolean
      - description: Whether to restrict result to hidden workflows.
        in: query
        name: show_hidden
        required: false
        schema:
          default: false
          description: Whether to restrict result to hidden workflows.
          title: Display hidden
          type: boolean
      - description: Whether to include a list of missing tools per workflow entry
        in: query
        name: missing_tools
        required: false
        schema:
          default: false
          description: Whether to include a list of missing tools per workflow entry
          title: Display missing tools
          type: boolean
      - in: query
        name: show_published
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Include published workflows.
      - in: query
        name: show_shared
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Include workflows shared with authenticated user.
      - description: In unspecified, default ordering depends on other parameters
          but generally the user's own workflows appear first based on update time
        in: query
        name: sort_by
        required: false
        schema:
          anyOf:
          - enum:
            - create_time
            - update_time
            - name
            type: string
          - type: 'null'
          description: In unspecified, default ordering depends on other parameters
            but generally the user's own workflows appear first based on update time
          title: Sort workflow index by this attribute
      - description: Sort in descending order?
        in: query
        name: sort_desc
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Sort in descending order?
          title: Sort Descending
      - in: query
        name: limit
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Limit number of queries.
      - in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Number of workflows to skip in sorted query (to enable pagination).
      - description: 'A mix of free text and GitHub-style tags used to filter the
          index operation.


          ## Query Structure


          GitHub-style filter tags (not be confused with Galaxy tags) are tags of
          the form

          `<tag_name>:<text_no_spaces>` or `<tag_name>:''<text with potential spaces>''`.
          The tag name

          *generally* (but not exclusively) corresponds to the name of an attribute
          on the model

          being indexed (i.e. a column in the database).


          If the tag is quoted, the attribute will be filtered exactly. If the tag
          is unquoted,

          generally a partial match will be used to filter the query (i.e. in terms
          of the implementation

          this means the database operation `ILIKE` will typically be used).


          Once the tagged filters are extracted from the search query, the remaining
          text is just

          used to search various documented attributes of the object.


          ## GitHub-style Tags Available


          `name`

          : The stored workflow''s name. (The tag `n` can be used a short hand alias
          for this tag to filter on this attribute.)


          `tag`

          : The workflow''s tag, if the tag contains a colon an approach will be made
          to match the key and value of the tag separately. (The tag `t` can be used
          a short hand alias for this tag to filter on this attribute.)


          `user`

          : The stored workflow''s owner''s username. (The tag `u` can be used a short
          hand alias for this tag to filter on this attribute.)


          `is:published`

          : Include only published workflows in the final result. Be sure the query
          parameter `show_published` is set to `true` if to include all published
          workflows and not just the requesting user''s.


          `is:share_with_me`

          : Include only workflows shared with the requesting user.  Be sure the query
          parameter `show_shared` is set to `true` if to include shared workflows.


          ## Free Text


          Free text search terms will be searched against the following attributes
          of the

          Stored Workflows: `name`, `tag`, `user`.


          '
        in: query
        name: search
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: 'A mix of free text and GitHub-style tags used to filter the
            index operation.


            ## Query Structure


            GitHub-style filter tags (not be confused with Galaxy tags) are tags of
            the form

            `<tag_name>:<text_no_spaces>` or `<tag_name>:''<text with potential spaces>''`.
            The tag name

            *generally* (but not exclusively) corresponds to the name of an attribute
            on the model

            being indexed (i.e. a column in the database).


            If the tag is quoted, the attribute will be filtered exactly. If the tag
            is unquoted,

            generally a partial match will be used to filter the query (i.e. in terms
            of the implementation

            this means the database operation `ILIKE` will typically be used).


            Once the tagged filters are extracted from the search query, the remaining
            text is just

            used to search various documented attributes of the object.


            ## GitHub-style Tags Available


            `name`

            : The stored workflow''s name. (The tag `n` can be used a short hand alias
            for this tag to filter on this attribute.)


            `tag`

            : The workflow''s tag, if the tag contains a colon an approach will be
            made to match the key and value of the tag separately. (The tag `t` can
            be used a short hand alias for this tag to filter on this attribute.)


            `user`

            : The stored workflow''s owner''s username. (The tag `u` can be used a
            short hand alias for this tag to filter on this attribute.)


            `is:published`

            : Include only published workflows in the final result. Be sure the query
            parameter `show_published` is set to `true` if to include all published
            workflows and not just the requesting user''s.


            `is:share_with_me`

            : Include only workflows shared with the requesting user.  Be sure the
            query parameter `show_shared` is set to `true` if to include shared workflows.


            ## Free Text


            Free text search terms will be searched against the following attributes
            of the

            Stored Workflows: `name`, `tag`, `user`.


            '
          title: Search query.
      - description: Set this to true to skip joining workflow step counts and optimize
          the resulting index query. Response objects will not contain step counts.
        in: query
        name: skip_step_counts
        required: false
        schema:
          default: false
          description: Set this to true to skip joining workflow step counts and optimize
            the resulting index query. Response objects will not contain step counts.
          title: Skip step counts.
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: object
                title: Response Index Api Workflows Get
                type: array
          description: A list with summary stored workflow information per viewable
            entry.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Lists stored workflows viewable by the user.
      tags:
      - workflows
      - workflows
  /api/workflows/menu:
    get:
      operationId: get_workflow_menu_api_workflows_menu_get
      parameters:
      - description: Whether to restrict result to deleted workflows.
        in: query
        name: show_deleted
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to restrict result to deleted workflows.
          title: Display deleted
      - description: Whether to restrict result to hidden workflows.
        in: query
        name: show_hidden
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to restrict result to hidden workflows.
          title: Display hidden
      - description: Whether to include a list of missing tools per workflow entry
        in: query
        name: missing_tools
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Whether to include a list of missing tools per workflow entry
          title: Display missing tools
      - in: query
        name: show_published
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Include published workflows.
      - in: query
        name: show_shared
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Include workflows shared with authenticated user.
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get workflows present in the tools panel.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}:
    delete:
      operationId: delete_workflow_api_workflows__workflow_id__delete
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Add the deleted flag to a workflow.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/counts:
    get:
      operationId: workflows__invocation_counts
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Is provided workflow id for Workflow instead of StoredWorkflow?
        in: query
        name: instance
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Is provided workflow id for Workflow instead of StoredWorkflow?
          title: Instance
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootModel_Dict_str__int__'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get state counts for accessible workflow.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/disable_link_access:
    put:
      description: Makes this item inaccessible by a URL link and return the current
        sharing status.
      operationId: disable_link_access_api_workflows__workflow_id__disable_link_access_put
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item inaccessible by a URL link.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/enable_link_access:
    put:
      description: Makes this item accessible by a URL link and return the current
        sharing status.
      operationId: enable_link_access_api_workflows__workflow_id__enable_link_access_put
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item accessible by a URL link.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/invocations:
    get:
      operationId: index_invocations_api_workflows__workflow_id__invocations_get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Return only invocations for this History ID
        in: query
        name: history_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Return only invocations for this History ID
          title: History ID
      - description: Return only invocations for this Job ID
        in: query
        name: job_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Return only invocations for this Job ID
          title: Job ID
      - description: Return invocations for this User ID.
        in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Return invocations for this User ID.
          title: User ID
      - description: Sort Workflow Invocations by this attribute
        in: query
        name: sort_by
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/InvocationSortByEnum'
          - type: 'null'
          description: Sort Workflow Invocations by this attribute
          title: Sort By
      - description: Sort in descending order?
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          description: Sort in descending order?
          title: Sort Descending
          type: boolean
      - description: Set to false to only include terminal Invocations.
        in: query
        name: include_terminal
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Set to false to only include terminal Invocations.
          title: Include Terminal
      - description: Limit the number of invocations to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Limit the number of invocations to return.
          title: Limit
      - description: Number of invocations to skip.
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Number of invocations to skip.
          title: Offset
      - description: Is provided workflow id for Workflow instead of StoredWorkflow?
        in: query
        name: instance
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Is provided workflow id for Workflow instead of StoredWorkflow?
          title: Instance
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Include details for individual invocation steps and populate
          a steps attribute in the resulting dictionary.
        in: query
        name: step_details
        required: false
        schema:
          default: false
          description: Include details for individual invocation steps and populate
            a steps attribute in the resulting dictionary.
          title: Include step details
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowInvocationResponse'
                title: Response Index Invocations Api Workflows  Workflow Id  Invocations
                  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get the list of a user's workflow invocations.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/invocations/{invocation_id}:
    delete:
      description: An alias for `DELETE /api/invocations/{invocation_id}`. `workflow_id`
        is ignored.
      operationId: cancel_workflow_invocation_api_workflows__workflow_id__invocations__invocation_id__delete
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Include details for individual invocation steps and populate
          a steps attribute in the resulting dictionary.
        in: query
        name: step_details
        required: false
        schema:
          default: false
          description: Include details for individual invocation steps and populate
            a steps attribute in the resulting dictionary.
          title: Include step details
          type: boolean
      - description: "Populate the invocation step state with the job state instead\
          \ of the invocation step state.\n        This will also produce one step\
          \ per job in mapping jobs to mimic the older behavior with respect to collections.\n\
          \        Partially scheduled steps may provide incomplete information and\
          \ the listed steps outputs\n        are not the mapped over step outputs\
          \ but the individual job outputs."
        in: query
        name: legacy_job_state
        required: false
        schema:
          default: false
          description: "Populate the invocation step state with the job state instead\
            \ of the invocation step state.\n        This will also produce one step\
            \ per job in mapping jobs to mimic the older behavior with respect to\
            \ collections.\n        Partially scheduled steps may provide incomplete\
            \ information and the listed steps outputs\n        are not the mapped\
            \ over step outputs but the individual job outputs."
          title: Replace with job state
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInvocationResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Cancel the specified workflow invocation.
      tags:
      - workflows
      - workflows
    get:
      description: An alias for `GET /api/invocations/{invocation_id}`. `workflow_id`
        is ignored.
      operationId: show_workflow_invocation_api_workflows__workflow_id__invocations__invocation_id__get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Include details for individual invocation steps and populate
          a steps attribute in the resulting dictionary.
        in: query
        name: step_details
        required: false
        schema:
          default: false
          description: Include details for individual invocation steps and populate
            a steps attribute in the resulting dictionary.
          title: Include step details
          type: boolean
      - description: "Populate the invocation step state with the job state instead\
          \ of the invocation step state.\n        This will also produce one step\
          \ per job in mapping jobs to mimic the older behavior with respect to collections.\n\
          \        Partially scheduled steps may provide incomplete information and\
          \ the listed steps outputs\n        are not the mapped over step outputs\
          \ but the individual job outputs."
        in: query
        name: legacy_job_state
        required: false
        schema:
          default: false
          description: "Populate the invocation step state with the job state instead\
            \ of the invocation step state.\n        This will also produce one step\
            \ per job in mapping jobs to mimic the older behavior with respect to\
            \ collections.\n        Partially scheduled steps may provide incomplete\
            \ information and the listed steps outputs\n        are not the mapped\
            \ over step outputs but the individual job outputs."
          title: Replace with job state
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInvocationResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get detailed description of a workflow invocation.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/invocations/{invocation_id}/jobs_summary:
    get:
      description: An alias for `GET /api/invocations/{invocation_id}/jobs_summary`.
        `workflow_id` is ignored.
      operationId: workflow_invocation_jobs_summary_api_workflows__workflow_id__invocations__invocation_id__jobs_summary_get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationJobsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get job state summary info aggregated across all current jobs of the
        workflow invocation.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/invocations/{invocation_id}/report:
    get:
      description: An alias for `GET /api/invocations/{invocation_id}/report`. `workflow_id`
        is ignored.
      operationId: show_workflow_invocation_report_api_workflows__workflow_id__invocations__invocation_id__report_get
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationReport'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get JSON summarizing invocation for reporting.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/invocations/{invocation_id}/report.pdf:
    get:
      description: An alias for `GET /api/invocations/{invocation_id}/report.pdf`.
        `workflow_id` is ignored.
      operationId: show_workflow_invocation_report_pdf_api_workflows__workflow_id__invocations__invocation_id__report_pdf_get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get PDF summarizing invocation for reporting.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/invocations/{invocation_id}/step_jobs_summary:
    get:
      description: An alias for `GET /api/invocations/{invocation_id}/step_jobs_summary`.
        `workflow_id` is ignored.
      operationId: workflow_invocation_step_jobs_summary_api_workflows__workflow_id__invocations__invocation_id__step_jobs_summary_get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/InvocationStepJobsResponseStepModel'
                  - $ref: '#/components/schemas/InvocationStepJobsResponseJobModel'
                  - $ref: '#/components/schemas/InvocationStepJobsResponseCollectionJobsModel'
                title: Response Workflow Invocation Step Jobs Summary Api Workflows  Workflow
                  Id  Invocations  Invocation Id  Step Jobs Summary Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get job state summary info aggregated per step of the workflow invocation.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/invocations/{invocation_id}/steps/{step_id}:
    get:
      description: An alias for `GET /api/invocations/{invocation_id}/steps/{step_id}`.
        `workflow_id` and `invocation_id` are ignored.
      operationId: workflow_invocation_step_api_workflows__workflow_id__invocations__invocation_id__steps__step_id__get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the WorkflowInvocationStep.
        in: path
        name: step_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationStep'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show details of workflow invocation step.
      tags:
      - workflows
      - workflows
    put:
      description: An alias for `PUT /api/invocations/{invocation_id}/steps/{step_id}`.
        `workflow_id` is ignored.
      operationId: update_workflow_invocation_step_api_workflows__workflow_id__invocations__invocation_id__steps__step_id__put
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the WorkflowInvocationStep.
        in: path
        name: step_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvocationUpdatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationStep'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update state of running workflow step invocation.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/publish:
    put:
      description: Makes this item publicly available by a URL link and return the
        current sharing status.
      operationId: publish_api_workflows__workflow_id__publish_put
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Makes this item public and accessible by a URL link.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/share_with_users:
    put:
      description: Shares this item with specific users and return the current sharing
        status.
      operationId: share_with_users_api_workflows__workflow_id__share_with_users_put
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareWithPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareWithStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Share this item with specific users.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/sharing:
    get:
      description: Return the sharing status of the item.
      operationId: sharing_api_workflows__workflow_id__sharing_get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get the current sharing status of the given item.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/slug:
    put:
      description: Sets a new slug to access this item by URL. The new slug must be
        unique.
      operationId: set_slug_api_workflows__workflow_id__slug_put
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSlugPayload'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Set a new slug for this shared item.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/tags:
    get:
      operationId: index_api_workflows__workflow_id__tags_get
      parameters:
      - in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show tags based on workflow_id
      tags:
      - workflows
  /api/workflows/{workflow_id}/tags/{tag_name}:
    delete:
      operationId: delete_api_workflows__workflow_id__tags__tag_name__delete
      parameters:
      - in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Delete Api Workflows  Workflow Id  Tags  Tag Name  Delete
                type: boolean
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Delete tag based on workflow_id
      tags:
      - workflows
    get:
      operationId: show_api_workflows__workflow_id__tags__tag_name__get
      parameters:
      - in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show tag based on workflow_id
      tags:
      - workflows
    post:
      operationId: create_api_workflows__workflow_id__tags__tag_name__post
      parameters:
      - in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ItemTagsCreatePayload'
              title: Payload
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Create tag based on workflow_id
      tags:
      - workflows
    put:
      operationId: update_api_workflows__workflow_id__tags__tag_name__put
      parameters:
      - in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: path
        name: tag_name
        required: true
        schema:
          title: Tag Name
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemTagsCreatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTagsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update tag based on workflow_id
      tags:
      - workflows
  /api/workflows/{workflow_id}/undelete:
    post:
      operationId: undelete_workflow_api_workflows__workflow_id__undelete_post
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Remove the deleted flag from a workflow.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/unpublish:
    put:
      description: Removes this item from the published list and return the current
        sharing status.
      operationId: unpublish_api_workflows__workflow_id__unpublish_put
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingStatus'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Removes this item from the published list.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/usage:
    get:
      deprecated: true
      operationId: index_invocations_api_workflows__workflow_id__usage_get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Return only invocations for this History ID
        in: query
        name: history_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Return only invocations for this History ID
          title: History ID
      - description: Return only invocations for this Job ID
        in: query
        name: job_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Return only invocations for this Job ID
          title: Job ID
      - description: Return invocations for this User ID.
        in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: Return invocations for this User ID.
          title: User ID
      - description: Sort Workflow Invocations by this attribute
        in: query
        name: sort_by
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/InvocationSortByEnum'
          - type: 'null'
          description: Sort Workflow Invocations by this attribute
          title: Sort By
      - description: Sort in descending order?
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          description: Sort in descending order?
          title: Sort Descending
          type: boolean
      - description: Set to false to only include terminal Invocations.
        in: query
        name: include_terminal
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Set to false to only include terminal Invocations.
          title: Include Terminal
      - description: Limit the number of invocations to return.
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Limit the number of invocations to return.
          title: Limit
      - description: Number of invocations to skip.
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Number of invocations to skip.
          title: Offset
      - description: Is provided workflow id for Workflow instead of StoredWorkflow?
        in: query
        name: instance
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Is provided workflow id for Workflow instead of StoredWorkflow?
          title: Instance
      - description: View to be passed to the serializer
        in: query
        name: view
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: View to be passed to the serializer
          title: View
      - description: Include details for individual invocation steps and populate
          a steps attribute in the resulting dictionary.
        in: query
        name: step_details
        required: false
        schema:
          default: false
          description: Include details for individual invocation steps and populate
            a steps attribute in the resulting dictionary.
          title: Include step details
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowInvocationResponse'
                title: Response Index Invocations Api Workflows  Workflow Id  Usage
                  Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get the list of a user's workflow invocations.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/usage/{invocation_id}:
    delete:
      deprecated: true
      description: An alias for `DELETE /api/invocations/{invocation_id}`. `workflow_id`
        is ignored.
      operationId: cancel_workflow_invocation_api_workflows__workflow_id__usage__invocation_id__delete
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Include details for individual invocation steps and populate
          a steps attribute in the resulting dictionary.
        in: query
        name: step_details
        required: false
        schema:
          default: false
          description: Include details for individual invocation steps and populate
            a steps attribute in the resulting dictionary.
          title: Include step details
          type: boolean
      - description: "Populate the invocation step state with the job state instead\
          \ of the invocation step state.\n        This will also produce one step\
          \ per job in mapping jobs to mimic the older behavior with respect to collections.\n\
          \        Partially scheduled steps may provide incomplete information and\
          \ the listed steps outputs\n        are not the mapped over step outputs\
          \ but the individual job outputs."
        in: query
        name: legacy_job_state
        required: false
        schema:
          default: false
          description: "Populate the invocation step state with the job state instead\
            \ of the invocation step state.\n        This will also produce one step\
            \ per job in mapping jobs to mimic the older behavior with respect to\
            \ collections.\n        Partially scheduled steps may provide incomplete\
            \ information and the listed steps outputs\n        are not the mapped\
            \ over step outputs but the individual job outputs."
          title: Replace with job state
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInvocationResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Cancel the specified workflow invocation.
      tags:
      - workflows
      - workflows
    get:
      deprecated: true
      description: An alias for `GET /api/invocations/{invocation_id}`. `workflow_id`
        is ignored.
      operationId: show_workflow_invocation_api_workflows__workflow_id__usage__invocation_id__get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: Include details for individual invocation steps and populate
          a steps attribute in the resulting dictionary.
        in: query
        name: step_details
        required: false
        schema:
          default: false
          description: Include details for individual invocation steps and populate
            a steps attribute in the resulting dictionary.
          title: Include step details
          type: boolean
      - description: "Populate the invocation step state with the job state instead\
          \ of the invocation step state.\n        This will also produce one step\
          \ per job in mapping jobs to mimic the older behavior with respect to collections.\n\
          \        Partially scheduled steps may provide incomplete information and\
          \ the listed steps outputs\n        are not the mapped over step outputs\
          \ but the individual job outputs."
        in: query
        name: legacy_job_state
        required: false
        schema:
          default: false
          description: "Populate the invocation step state with the job state instead\
            \ of the invocation step state.\n        This will also produce one step\
            \ per job in mapping jobs to mimic the older behavior with respect to\
            \ collections.\n        Partially scheduled steps may provide incomplete\
            \ information and the listed steps outputs\n        are not the mapped\
            \ over step outputs but the individual job outputs."
          title: Replace with job state
          type: boolean
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInvocationResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get detailed description of a workflow invocation.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/usage/{invocation_id}/jobs_summary:
    get:
      deprecated: true
      description: An alias for `GET /api/invocations/{invocation_id}/jobs_summary`.
        `workflow_id` is ignored.
      operationId: workflow_invocation_jobs_summary_api_workflows__workflow_id__usage__invocation_id__jobs_summary_get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationJobsResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get job state summary info aggregated across all current jobs of the
        workflow invocation.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/usage/{invocation_id}/report:
    get:
      deprecated: true
      description: An alias for `GET /api/invocations/{invocation_id}/report`. `workflow_id`
        is ignored.
      operationId: show_workflow_invocation_report_api_workflows__workflow_id__usage__invocation_id__report_get
      parameters:
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationReport'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get JSON summarizing invocation for reporting.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/usage/{invocation_id}/report.pdf:
    get:
      deprecated: true
      description: An alias for `GET /api/invocations/{invocation_id}/report.pdf`.
        `workflow_id` is ignored.
      operationId: show_workflow_invocation_report_pdf_api_workflows__workflow_id__usage__invocation_id__report_pdf_get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get PDF summarizing invocation for reporting.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/usage/{invocation_id}/step_jobs_summary:
    get:
      deprecated: true
      description: An alias for `GET /api/invocations/{invocation_id}/step_jobs_summary`.
        `workflow_id` is ignored.
      operationId: workflow_invocation_step_jobs_summary_api_workflows__workflow_id__usage__invocation_id__step_jobs_summary_get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  anyOf:
                  - $ref: '#/components/schemas/InvocationStepJobsResponseStepModel'
                  - $ref: '#/components/schemas/InvocationStepJobsResponseJobModel'
                  - $ref: '#/components/schemas/InvocationStepJobsResponseCollectionJobsModel'
                title: Response Workflow Invocation Step Jobs Summary Api Workflows  Workflow
                  Id  Usage  Invocation Id  Step Jobs Summary Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get job state summary info aggregated per step of the workflow invocation.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/usage/{invocation_id}/steps/{step_id}:
    get:
      deprecated: true
      description: An alias for `GET /api/invocations/{invocation_id}/steps/{step_id}`.
        `workflow_id` and `invocation_id` are ignored.
      operationId: workflow_invocation_step_api_workflows__workflow_id__usage__invocation_id__steps__step_id__get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the WorkflowInvocationStep.
        in: path
        name: step_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationStep'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Show details of workflow invocation step.
      tags:
      - workflows
      - workflows
    put:
      deprecated: true
      description: An alias for `PUT /api/invocations/{invocation_id}/steps/{step_id}`.
        `workflow_id` is ignored.
      operationId: update_workflow_invocation_step_api_workflows__workflow_id__usage__invocation_id__steps__step_id__put
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the Invocation.
        in: path
        name: invocation_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The encoded database identifier of the WorkflowInvocationStep.
        in: path
        name: step_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvocationUpdatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationStep'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Update state of running workflow step invocation.
      tags:
      - workflows
      - workflows
  /api/workflows/{workflow_id}/versions:
    get:
      operationId: show_versions_api_workflows__workflow_id__versions_get
      parameters:
      - description: The encoded database identifier of the Stored Workflow.
        in: path
        name: workflow_id
        required: true
        schema:
          example: 0123456789ABCDEF
          minLength: 16
          pattern: '[0-9a-fA-F]+'
          title: Invocation ID
          type: string
      - in: query
        name: instance
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          title: True when fetching by Workflow ID, False when fetching by StoredWorkflow
            ID.
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: List all versions of a workflow.
      tags:
      - workflows
      - workflows
  /ga4gh/drs/v1/objects/{object_id}:
    get:
      operationId: get_object_ga4gh_drs_v1_objects__object_id__get
      parameters:
      - description: The ID of the group
        in: path
        name: object_id
        required: true
        schema:
          description: The ID of the group
          title: Object ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrsObject'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get Object
      tags:
      - drs
      - drs
    post:
      operationId: get_object_ga4gh_drs_v1_objects__object_id__post
      parameters:
      - description: The ID of the group
        in: path
        name: object_id
        required: true
        schema:
          description: The ID of the group
          title: Object ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrsObject'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get Object
      tags:
      - drs
      - drs
  /ga4gh/drs/v1/objects/{object_id}/access/{access_id}:
    get:
      operationId: get_access_url_ga4gh_drs_v1_objects__object_id__access__access_id__get
      parameters:
      - description: The ID of the group
        in: path
        name: object_id
        required: true
        schema:
          description: The ID of the group
          title: Object ID
          type: string
      - description: The access ID of the access method for objects, unused in Galaxy.
        in: path
        name: access_id
        required: true
        schema:
          description: The access ID of the access method for objects, unused in Galaxy.
          title: Access ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get Access Url
      tags:
      - drs
      - drs
    post:
      operationId: get_access_url_ga4gh_drs_v1_objects__object_id__access__access_id__post
      parameters:
      - description: The ID of the group
        in: path
        name: object_id
        required: true
        schema:
          description: The ID of the group
          title: Object ID
          type: string
      - description: The access ID of the access method for objects, unused in Galaxy.
        in: path
        name: access_id
        required: true
        schema:
          description: The access ID of the access method for objects, unused in Galaxy.
          title: Access ID
          type: string
      - description: The user ID that will be used to effectively make this API call.
          Only admins and designated users can make API calls on behalf of other users.
        in: header
        name: run-as
        required: false
        schema:
          anyOf:
          - example: 0123456789ABCDEF
            minLength: 16
            pattern: '[0-9a-fA-F]+'
            title: Invocation ID
            type: string
          - type: 'null'
          description: The user ID that will be used to effectively make this API
            call. Only admins and designated users can make API calls on behalf of
            other users.
          title: Run as User
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyCookie: []
      - APIKeyQuery: []
      - APIKeyHeader: []
      - HTTPBearer: []
      summary: Get Access Url
      tags:
      - drs
      - drs
  /ga4gh/drs/v1/service-info:
    get:
      operationId: service_info_ga4gh_drs_v1_service_info_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Successful Response
      security: []
      summary: Service Info
      tags:
      - drs
      - drs
