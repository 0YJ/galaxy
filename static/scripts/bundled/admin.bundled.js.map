{"version":3,"sources":["webpack:///admin.bundled.js","webpack:///./galaxy/scripts/apps/admin.js","webpack:///./galaxy/scripts/mvc/ui/ui-misc.js?fd98*","webpack:///./galaxy/scripts/mvc/ui/ui-buttons.js?4ced*","webpack:///./galaxy/scripts/mvc/ui/ui-options.js?405a*","webpack:///./galaxy/scripts/mvc/ui/ui-select-default.js?402d*","webpack:///./galaxy/scripts/mvc/ui/ui-drilldown.js?de06*","webpack:///./galaxy/scripts/mvc/ui/ui-slider.js?93a7*","webpack:///./galaxy/scripts/apps/panels/admin-panel.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","Backbone","_","jQuery","$","GalaxyApp","QUERY_STRING","AdminPanel","Ui","Page","window","app","options","bootstrapped","Galaxy","debug","params","config","Router","extend","initialize","page","this","push","url","data","__identifer","Math","random","toString","substr","isEmptyObject","indexOf","param","navigate","trigger","execute","callback","args","name","queryObj","parse","pop","authenticate","apply","display","Message","status","message","persistent","routes","(/)admin(/)user","user","id","get","show_user","active_view","View","Left","history","start","root","pushState","call","7","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Utils","Select","Slider","Options","Drilldown","Buttons","Modal","Label","tagName","model","Model","setElement","listenTo","render","title","new_title","set","value","$el","removeClass","addClass","html","cls","fade","update","messageForDisplay","timeout","clearTimeout","self","setTimeout","fadeOut","escape","UnescapedMessage","Input","type","placeholder","disabled","readonly","visible","area","color","style","events","input","new_val","undefined","attr","css","datalist","isArray","length","autocomplete","source","request","response","change","_onchange","val","each","attr_name","removeAttr","Hidden","append","$info","$hidden","show","text","hide","Upload","$file","$text","$wait","on","e","_readFile","file","target","files","reader","FileReader","onload","wait","result","readAsText","Button","ButtonDefault","ButtonIcon","ButtonCheck","ButtonMenu","ButtonLink","RadioButton","Checkbox","Radio","9","uid","floating","icon","wait_text","wait_cls","percentage","$icon","$title","$progress","$progress_bar","attributes","off","onclick","tooltip","placement","width","prop","disable","enable","unwait","setIcon","href","icons","onchange","total","$button","$menu","pull","onunload","tag","collection","Collection","$root","float","where","preventDefault","remove","submodel","suboptions","$link","divider","addMenu","add","merge","11","Base","error_text","multiple","optional","_changeValue","_changeWait","_changeData","_changeVisible","empty","$message","$options","_template","all_button","_getValue","_templateOptions","option","_templateOption","_messageShow","_setValue","first","new_value","values","v","selected","isEmpty","BaseIcons","pair","label","prototype","closest","14","data2","empty_text","searchable","selectall","pagesize","_changeDisabled","_renderSearchable","_renderClassic","$select","$dropdown","$resize","$resize_icon","event","currentY","pageY","currentHeight","height","minHeight","max","select2","prepend","_match","term","String","toUpperCase","index","order","tags","matched_tags","closeOnSelect","query","q","results","filter","found","slice","more","formatResult","reduce","memo","find","exists","findWhere","d","sorter","keep","sort","setOnChange","a","b","25","header_index","list","element","_setState","header_id","is_expanded","$subgroup","attach","iterate","$tmpl","header","i","level","has_options","new_header","$group","27","min","step","precise","split","$slider","pressed","which","_isParameter","opts","has_slider","slider","ui","isNaN","round","substring","98","_l","settings","categories","items","enabled","is_tool_shed_installed","enable_beta_ts_api_install","installing_repository_ids","is_repo_installed","allow_user_impersonation","enable_quotas","category","$section","_templateSection","$entries","item","join"],"mappings":"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","file":"admin.bundled.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Backbone, _) {var jQuery = __webpack_require__(1),\n\t    $ = jQuery,\n\t    GalaxyApp = __webpack_require__(38).GalaxyApp,\n\t    QUERY_STRING = __webpack_require__(36),\n\t    AdminPanel = __webpack_require__(98),\n\t    Ui = __webpack_require__(7),\n\t    Page = __webpack_require__(39);\n\t\n\twindow.app = function app(options, bootstrapped) {\n\t    window.Galaxy = new GalaxyApp(options, bootstrapped);\n\t    Galaxy.debug('admin app');\n\t    Galaxy.params = Galaxy.config.params;\n\t\n\t    /** Routes */\n\t    var Router = Backbone.Router.extend({\n\t        // TODO: not many client routes at this point - fill and remove from server.\n\t        // since we're at root here, this may be the last to be routed entirely on the client.\n\t        initialize: function (page, options) {\n\t            this.page = page;\n\t            this.options = options;\n\t        },\n\t\n\t        /** helper to push a new navigation state */\n\t        push: function (url, data) {\n\t            data = data || {};\n\t            data.__identifer = Math.random().toString(36).substr(2);\n\t            if (!$.isEmptyObject(data)) {\n\t                url += url.indexOf('?') == -1 ? '?' : '&';\n\t                url += $.param(data, true);\n\t            }\n\t            this.navigate(url, { 'trigger': true });\n\t        },\n\t\n\t        /** override to parse query string into obj and send to each route */\n\t        execute: function (callback, args, name) {\n\t            Galaxy.debug('router execute:', callback, args, name);\n\t            var queryObj = QUERY_STRING.parse(args.pop());\n\t            args.push(queryObj);\n\t            if (callback) {\n\t                if (this.authenticate(args, name)) {\n\t                    callback.apply(this, args);\n\t                } else {\n\t                    this.page.display(new Ui.Message({ status: 'danger', message: 'You must be logged in as admin user to make this request.', persistent: true }));\n\t                }\n\t            }\n\t        },\n\t\n\t        routes: {\n\t            '(/)admin(/)user': 'show_user'\n\t        },\n\t\n\t        authenticate: function (args, name) {\n\t            return Galaxy.user && Galaxy.user.id && Galaxy.user.get('is_admin');\n\t        },\n\t\n\t        show_user: function () {}\n\t    });\n\t\n\t    $(function () {\n\t        _.extend(options.config, { active_view: 'admin' });\n\t        Galaxy.page = new Page.View(_.extend(options, {\n\t            Left: AdminPanel,\n\t            Router: Router\n\t        }));\n\t\n\t        // start the router - which will call any of the routes above\n\t        Backbone.history.start({\n\t            root: Galaxy.root,\n\t            pushState: true\n\t        });\n\t    });\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 7:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {/**\n\t *  This class contains backbone wrappers for basic ui elements such as Images, Labels, Buttons, Input fields etc.\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(14), __webpack_require__(27), __webpack_require__(11), __webpack_require__(25), __webpack_require__(9), __webpack_require__(8)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Select, Slider, Options, Drilldown, Buttons, Modal) {\n\t\n\t    /** Label wrapper */\n\t    var Label = Backbone.View.extend({\n\t        tagName: 'label',\n\t        initialize: function (options) {\n\t            this.model = options && options.model || new Backbone.Model(options);\n\t            this.tagName = options.tagName || this.tagName;\n\t            this.setElement($('<' + this.tagName + '/>'));\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.render();\n\t        },\n\t        title: function (new_title) {\n\t            this.model.set('title', new_title);\n\t        },\n\t        value: function () {\n\t            return this.model.get('title');\n\t        },\n\t        render: function () {\n\t            this.$el.removeClass().addClass('ui-label').addClass(this.model.get('cls')).html(this.model.get('title'));\n\t            return this;\n\t        }\n\t    });\n\t\n\t    /** Displays messages used e.g. in the tool form */\n\t    var Message = Backbone.View.extend({\n\t        initialize: function (options) {\n\t            this.model = options && options.model || new Backbone.Model({\n\t                message: null,\n\t                status: 'info',\n\t                cls: '',\n\t                persistent: false,\n\t                fade: true\n\t            }).set(options);\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.render();\n\t        },\n\t        update: function (options) {\n\t            this.model.set(options);\n\t        },\n\t        render: function () {\n\t            this.$el.removeClass().addClass('ui-message').addClass(this.model.get('cls'));\n\t            var status = this.model.get('status');\n\t            if (this.model.get('large')) {\n\t                this.$el.addClass((status == 'success' && 'done' || status == 'danger' && 'error' || status) + 'messagelarge');\n\t            } else {\n\t                this.$el.addClass('alert').addClass('alert-' + status);\n\t            }\n\t            if (this.model.get('message')) {\n\t                this.$el.html(this.messageForDisplay());\n\t                this.$el[this.model.get('fade') ? 'fadeIn' : 'show']();\n\t                this.timeout && window.clearTimeout(this.timeout);\n\t                if (!this.model.get('persistent')) {\n\t                    var self = this;\n\t                    this.timeout = window.setTimeout(function () {\n\t                        self.model.set('message', '');\n\t                    }, 3000);\n\t                }\n\t            } else {\n\t                this.$el.fadeOut();\n\t            }\n\t            return this;\n\t        },\n\t        messageForDisplay: function () {\n\t            return _.escape(this.model.get('message'));\n\t        }\n\t    });\n\t\n\t    var UnescapedMessage = Message.extend({\n\t        messageForDisplay: function () {\n\t            return this.model.get('message');\n\t        }\n\t    });\n\t\n\t    /** Renders an input element used e.g. in the tool form */\n\t    var Input = Backbone.View.extend({\n\t        initialize: function (options) {\n\t            this.model = options && options.model || new Backbone.Model({\n\t                type: 'text',\n\t                placeholder: '',\n\t                disabled: false,\n\t                readonly: false,\n\t                visible: true,\n\t                cls: '',\n\t                area: false,\n\t                color: null,\n\t                style: null\n\t            }).set(options);\n\t            this.tagName = this.model.get('area') ? 'textarea' : 'input';\n\t            this.setElement($('<' + this.tagName + '/>'));\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.render();\n\t        },\n\t        events: {\n\t            'input': '_onchange'\n\t        },\n\t        value: function (new_val) {\n\t            new_val !== undefined && this.model.set('value', typeof new_val === 'string' ? new_val : '');\n\t            return this.model.get('value');\n\t        },\n\t        render: function () {\n\t            var self = this;\n\t            this.$el.removeClass().addClass('ui-' + this.tagName).addClass(this.model.get('cls')).addClass(this.model.get('style')).attr('id', this.model.id).attr('type', this.model.get('type')).attr('placeholder', this.model.get('placeholder')).css('color', this.model.get('color') || '').css('border-color', this.model.get('color') || '');\n\t            var datalist = this.model.get('datalist');\n\t            if ($.isArray(datalist) && datalist.length > 0) {\n\t                this.$el.autocomplete({ source: function (request, response) {\n\t                        response(self.model.get('datalist'));\n\t                    },\n\t                    change: function () {\n\t                        self._onchange();\n\t                    } });\n\t            }\n\t            if (this.model.get('value') !== this.$el.val()) {\n\t                this.$el.val(this.model.get('value'));\n\t            }\n\t            _.each(['readonly', 'disabled'], function (attr_name) {\n\t                self.model.get(attr_name) ? self.$el.attr(attr_name, true) : self.$el.removeAttr(attr_name);\n\t            });\n\t            this.$el[this.model.get('visible') ? 'show' : 'hide']();\n\t            return this;\n\t        },\n\t        _onchange: function () {\n\t            this.value(this.$el.val());\n\t            this.model.get('onchange') && this.model.get('onchange')(this.model.get('value'));\n\t        }\n\t    });\n\t\n\t    /** Creates a hidden element input field used e.g. in the tool form */\n\t    var Hidden = Backbone.View.extend({\n\t        initialize: function (options) {\n\t            this.model = options && options.model || new Backbone.Model(options);\n\t            this.setElement($('<div/>').append(this.$info = $('<div/>')).append(this.$hidden = $('<div/>')));\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.render();\n\t        },\n\t        value: function (new_val) {\n\t            new_val !== undefined && this.model.set('value', new_val);\n\t            return this.model.get('value');\n\t        },\n\t        render: function () {\n\t            this.$el.attr('id', this.model.id);\n\t            this.$hidden.val(this.model.get('value'));\n\t            this.model.get('info') ? this.$info.show().text(this.model.get('info')) : this.$info.hide();\n\t            return this;\n\t        }\n\t    });\n\t\n\t    /** Creates a upload element input field */\n\t    var Upload = Backbone.View.extend({\n\t        initialize: function (options) {\n\t            var self = this;\n\t            this.model = options && options.model || new Backbone.Model(options);\n\t            this.setElement($('<div/>').append(this.$info = $('<div/>')).append(this.$file = $('<input/>').attr('type', 'file').addClass('ui-margin-bottom')).append(this.$text = $('<textarea/>').addClass('ui-textarea').attr('disabled', true)).append(this.$wait = $('<i/>').addClass('fa fa-spinner fa-spin')));\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.$file.on('change', function (e) {\n\t                self._readFile(e);\n\t            });\n\t            this.render();\n\t        },\n\t        value: function (new_val) {\n\t            new_val !== undefined && this.model.set('value', new_val);\n\t            return this.model.get('value');\n\t        },\n\t        render: function () {\n\t            this.$el.attr('id', this.model.id);\n\t            this.model.get('info') ? this.$info.show().text(this.model.get('info')) : this.$info.hide();\n\t            this.model.get('value') ? this.$text.text(this.model.get('value')).show() : this.$text.hide();\n\t            this.model.get('wait') ? this.$wait.show() : this.$wait.hide();\n\t            return this;\n\t        },\n\t        _readFile: function (e) {\n\t            var self = this;\n\t            var file = e.target.files && e.target.files[0];\n\t            if (file) {\n\t                var reader = new FileReader();\n\t                reader.onload = function () {\n\t                    self.model.set({ wait: false, value: this.result });\n\t                };\n\t                this.model.set({ wait: true, value: null });\n\t                reader.readAsText(file);\n\t            }\n\t        }\n\t    });\n\t\n\t    return {\n\t        Button: Buttons.ButtonDefault,\n\t        ButtonIcon: Buttons.ButtonIcon,\n\t        ButtonCheck: Buttons.ButtonCheck,\n\t        ButtonMenu: Buttons.ButtonMenu,\n\t        ButtonLink: Buttons.ButtonLink,\n\t        Input: Input,\n\t        Label: Label,\n\t        Message: Message,\n\t        UnescapedMessage: UnescapedMessage,\n\t        Upload: Upload,\n\t        Modal: Modal,\n\t        RadioButton: Options.RadioButton,\n\t        Checkbox: Options.Checkbox,\n\t        Radio: Options.Radio,\n\t        Select: Select,\n\t        Hidden: Hidden,\n\t        Slider: Slider,\n\t        Drilldown: Drilldown\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 9:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/** This module contains all button views. */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils) {\n\t    /** This renders the default button which is used e.g. at the bottom of the upload modal. */\n\t    var ButtonDefault = Backbone.View.extend({\n\t        initialize: function (options) {\n\t            this.model = options && options.model || new Backbone.Model({\n\t                id: Utils.uid(),\n\t                title: '',\n\t                floating: 'right',\n\t                icon: '',\n\t                cls: 'btn btn-default',\n\t                wait: false,\n\t                wait_text: 'Sending...',\n\t                wait_cls: 'btn btn-info',\n\t                disabled: false,\n\t                percentage: -1\n\t            }).set(options);\n\t            this.setElement($('<button/>').attr('type', 'button').append(this.$icon = $('<i/>')).append(this.$title = $('<span/>')).append(this.$progress = $('<div/>').append(this.$progress_bar = $('<div/>'))));\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.render();\n\t        },\n\t\n\t        render: function () {\n\t            var self = this;\n\t            var options = this.model.attributes;\n\t            this.$el.removeClass().addClass('ui-button-default').addClass(options.disabled && 'disabled').attr('id', options.id).attr('disabled', options.disabled).css('float', options.floating).off('click').on('click', function () {\n\t                $('.tooltip').hide();\n\t                options.onclick && !self.disabled && options.onclick();\n\t            }).tooltip({ title: options.tooltip, placement: 'bottom' });\n\t            this.$progress.addClass('progress').css('display', options.percentage !== -1 ? 'block' : 'none');\n\t            this.$progress_bar.addClass('progress-bar').css({ width: options.percentage + '%' });\n\t            this.$icon.removeClass().addClass('icon fa');\n\t            this.$title.removeClass().addClass('title');\n\t            if (options.wait) {\n\t                this.$el.addClass(options.wait_cls).prop('disabled', true);\n\t                this.$icon.addClass('fa-spinner fa-spin ui-margin-right');\n\t                this.$title.html(options.wait_text);\n\t            } else {\n\t                this.$el.addClass(options.cls);\n\t                this.$icon.addClass(options.icon);\n\t                this.$title.html(options.title);\n\t                options.icon && options.title && this.$icon.addClass('ui-margin-right');\n\t            }\n\t        },\n\t\n\t        /** Show button */\n\t        show: function () {\n\t            this.$el.show();\n\t        },\n\t\n\t        /** Hide button */\n\t        hide: function () {\n\t            this.$el.hide();\n\t        },\n\t\n\t        /** Disable button */\n\t        disable: function () {\n\t            this.model.set('disabled', true);\n\t        },\n\t\n\t        /** Enable button */\n\t        enable: function () {\n\t            this.model.set('disabled', false);\n\t        },\n\t\n\t        /** Show spinner to indicate that the button is not ready to be clicked */\n\t        wait: function () {\n\t            this.model.set('wait', true);\n\t        },\n\t\n\t        /** Hide spinner to indicate that the button is ready to be clicked */\n\t        unwait: function () {\n\t            this.model.set('wait', false);\n\t        },\n\t\n\t        /** Change icon */\n\t        setIcon: function (icon) {\n\t            this.model.set('icon', icon);\n\t        }\n\t    });\n\t\n\t    /** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons. */\n\t    var ButtonLink = ButtonDefault.extend({\n\t        initialize: function (options) {\n\t            this.model = options && options.model || new Backbone.Model({\n\t                id: Utils.uid(),\n\t                title: '',\n\t                icon: '',\n\t                cls: ''\n\t            }).set(options);\n\t            this.setElement($('<a/>').append(this.$icon = $('<span/>')));\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.render();\n\t        },\n\t\n\t        render: function () {\n\t            var options = this.model.attributes;\n\t            this.$el.removeClass().addClass(options.cls).attr({ id: options.id,\n\t                href: options.href || 'javascript:void(0)',\n\t                title: options.title,\n\t                target: options.target || '_top',\n\t                disabled: options.disabled }).tooltip({ placement: 'bottom' }).off('click').on('click', function () {\n\t                options.onclick && !options.disabled && options.onclick();\n\t            });\n\t            this.$icon.removeClass().addClass(options.icon);\n\t        }\n\t    });\n\t\n\t    /** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected. */\n\t    var ButtonCheck = Backbone.View.extend({\n\t        initialize: function (options) {\n\t            this.model = options && options.model || new Backbone.Model({\n\t                id: Utils.uid(),\n\t                title: 'Select/Unselect all',\n\t                icons: ['fa-square-o', 'fa-minus-square-o', 'fa-check-square-o'],\n\t                value: 0,\n\t                onchange: function () {}\n\t            }).set(options);\n\t            this.setElement($('<div/>').append(this.$icon = $('<span/>')).append(this.$title = $('<span/>')));\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.render();\n\t        },\n\t\n\t        render: function (options) {\n\t            var self = this;\n\t            var options = this.model.attributes;\n\t            this.$el.addClass('ui-button-check').off('click').on('click', function () {\n\t                self.model.set('value', self.model.get('value') === 0 && 2 || 0);\n\t                options.onclick && options.onclick();\n\t            });\n\t            this.$title.html(options.title);\n\t            this.$icon.removeClass().addClass('icon fa ui-margin-right').addClass(options.icons[options.value]);\n\t        },\n\t\n\t        /* Sets a new value and/or returns the value.\n\t        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n\t        * OR:\n\t        * @param{Integer}   new_val - Number of selected options.\n\t        * @param{Integer}   total   - Total number of available options.\n\t        */\n\t        value: function (new_val, total) {\n\t            if (new_val !== undefined) {\n\t                if (total && new_val !== 0) {\n\t                    new_val = new_val !== total && 1 || 2;\n\t                }\n\t                this.model.set('value', new_val);\n\t                this.model.get('onchange')(this.model.get('value'));\n\t            }\n\t            return this.model.get('value');\n\t        }\n\t    });\n\t\n\t    /** This renders a differently styled, more compact button version. */\n\t    var ButtonIcon = ButtonDefault.extend({\n\t        initialize: function (options) {\n\t            this.model = options && options.model || new Backbone.Model({\n\t                id: Utils.uid(),\n\t                title: '',\n\t                floating: 'right',\n\t                icon: '',\n\t                cls: 'ui-button-icon',\n\t                disabled: false\n\t            }).set(options);\n\t            this.setElement($('<div/>').append(this.$button = $('<div/>').append(this.$icon = $('<i/>')).append(this.$title = $('<span/>'))));\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.render();\n\t        },\n\t\n\t        render: function (options) {\n\t            var self = this;\n\t            var options = this.model.attributes;\n\t            this.$el.removeClass().addClass(options.cls).addClass(options.disabled && 'disabled').attr('disabled', options.disabled).attr('id', options.id).css('float', options.floating).off('click').on('click', function () {\n\t                $('.tooltip').hide();\n\t                !options.disabled && options.onclick && options.onclick();\n\t            });\n\t            this.$button.addClass('button').tooltip({ title: options.tooltip, placement: 'bottom' });\n\t            this.$icon.removeClass().addClass('icon fa').addClass(options.icon);\n\t            this.$title.addClass('title').html(options.title);\n\t            options.icon && options.title && this.$icon.addClass('ui-margin-right');\n\t        }\n\t    });\n\t\n\t    /** This class creates a button with dropdown menu. */\n\t    var ButtonMenu = ButtonDefault.extend({\n\t        $menu: null,\n\t        initialize: function (options) {\n\t            this.model = options && options.model || new Backbone.Model({\n\t                id: '',\n\t                title: '',\n\t                floating: 'right',\n\t                pull: 'right',\n\t                icon: null,\n\t                onclick: null,\n\t                cls: 'ui-button-icon ui-button-menu',\n\t                tooltip: '',\n\t                target: '',\n\t                href: '',\n\t                onunload: null,\n\t                visible: true,\n\t                tag: ''\n\t            }).set(options);\n\t            this.collection = new Backbone.Collection();\n\t            this.setElement($('<div/>').append(this.$root = $('<div/>').append(this.$icon = $('<i/>')).append(this.$title = $('<span/>'))));\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.listenTo(this.collection, 'change add remove reset', this.render, this);\n\t            this.render();\n\t        },\n\t\n\t        render: function () {\n\t            var self = this;\n\t            var options = this.model.attributes;\n\t            this.$el.removeClass().addClass('dropdown').addClass(options.cls).attr('id', options.id).css({ float: options.floating,\n\t                display: options.visible && this.collection.where({ visible: true }).length > 0 ? 'block' : 'none' });\n\t            this.$root.addClass('root button dropdown-toggle').attr('data-toggle', 'dropdown').tooltip({ title: options.tooltip, placement: 'bottom' }).off('click').on('click', function (e) {\n\t                $('.tooltip').hide();\n\t                e.preventDefault();\n\t                options.onclick && options.onclick();\n\t            });\n\t            this.$icon.removeClass().addClass('icon fa').addClass(options.icon);\n\t            this.$title.removeClass().addClass('title').html(options.title);\n\t            options.icon && options.title && this.$icon.addClass('ui-margin-right');\n\t            this.$menu && this.$menu.remove();\n\t            if (this.collection.length > 0) {\n\t                this.$menu = $('<ul/>').addClass('menu dropdown-menu').addClass('pull-' + self.model.get('pull')).attr('role', 'menu');\n\t                this.$el.append(this.$menu);\n\t            }\n\t            this.collection.each(function (submodel) {\n\t                var suboptions = submodel.attributes;\n\t                if (suboptions.visible) {\n\t                    var $link = $('<a/>').addClass('dropdown-item').attr({ href: suboptions.href, target: suboptions.target }).append($('<i/>').addClass('fa').addClass(suboptions.icon).css('display', suboptions.icon ? 'inline-block' : 'none')).append(suboptions.title).on('click', function (e) {\n\t                        if (suboptions.onclick) {\n\t                            e.preventDefault();\n\t                            suboptions.onclick();\n\t                        }\n\t                    });\n\t                    self.$menu.append($('<li/>').append($link));\n\t                    suboptions.divider && self.$menu.append($('<li/>').addClass('divider'));\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Add a new menu item */\n\t        addMenu: function (options) {\n\t            this.collection.add(Utils.merge(options, {\n\t                title: '',\n\t                target: '',\n\t                href: '',\n\t                onclick: null,\n\t                divider: false,\n\t                visible: true,\n\t                icon: null,\n\t                cls: 'button-menu btn-group'\n\t            }));\n\t        }\n\t    });\n\t\n\t    return {\n\t        ButtonDefault: ButtonDefault,\n\t        ButtonLink: ButtonLink,\n\t        ButtonIcon: ButtonIcon,\n\t        ButtonCheck: ButtonCheck,\n\t        ButtonMenu: ButtonMenu\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 11:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {/** Base class for options based ui elements **/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(9)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Buttons) {\n\t    var Base = Backbone.View.extend({\n\t        initialize: function (options) {\n\t            var self = this;\n\t            this.model = options && options.model || new Backbone.Model({\n\t                visible: true,\n\t                data: [],\n\t                id: Utils.uid(),\n\t                error_text: 'No options available.',\n\t                wait_text: 'Please wait...',\n\t                multiple: false,\n\t                optional: false,\n\t                onchange: function () {}\n\t            }).set(options);\n\t            this.listenTo(this.model, 'change:value', this._changeValue, this);\n\t            this.listenTo(this.model, 'change:wait', this._changeWait, this);\n\t            this.listenTo(this.model, 'change:data', this._changeData, this);\n\t            this.listenTo(this.model, 'change:visible', this._changeVisible, this);\n\t            this.on('change', function () {\n\t                self.model.get('onchange')(self.value());\n\t            });\n\t            this.render();\n\t        },\n\t\n\t        render: function () {\n\t            var self = this;\n\t            this.$el.empty().removeClass().addClass('ui-options').append(this.$message = $('<div/>')).append(this.$menu = $('<div/>').addClass('ui-options-menu')).append(this.$options = $(this._template()));\n\t\n\t            // add select/unselect all button\n\t            this.all_button = null;\n\t            if (this.model.get('multiple')) {\n\t                this.all_button = new Buttons.ButtonCheck({\n\t                    onclick: function () {\n\t                        self.$('input').prop('checked', self.all_button.value() !== 0);\n\t                        self.value(self._getValue());\n\t                        self.trigger('change');\n\t                    }\n\t                });\n\t                this.$menu.append(this.all_button.$el);\n\t            }\n\t\n\t            // finalize dom\n\t            this._changeData();\n\t            this._changeWait();\n\t            this._changeVisible();\n\t        },\n\t\n\t        /** Update available options */\n\t        update: function (options) {\n\t            this.model.set('data', options);\n\t        },\n\t\n\t        _changeData: function () {\n\t            var self = this;\n\t            this.$options.empty();\n\t            if (this._templateOptions) {\n\t                this.$options.append(this._templateOptions(this.model.get('data')));\n\t            } else {\n\t                _.each(this.model.get('data'), function (option) {\n\t                    self.$options.append($(self._templateOption(option)).addClass('ui-option').tooltip({ title: option.tooltip, placement: 'bottom' }));\n\t                });\n\t            }\n\t            var self = this;\n\t            this.$('input').on('change', function () {\n\t                self.value(self._getValue());\n\t                self.trigger('change');\n\t            });\n\t            this._changeValue();\n\t            this._changeWait();\n\t        },\n\t\n\t        _changeVisible: function () {\n\t            this.$el[this.model.get('visible') ? 'show' : 'hide']();\n\t        },\n\t\n\t        _changeWait: function () {\n\t            if (this.model.get('wait')) {\n\t                if (this.length() === 0) {\n\t                    this._messageShow(this.model.get('wait_text'), 'info');\n\t                    this.$options.hide();\n\t                    this.$menu.hide();\n\t                }\n\t            } else {\n\t                if (this.length() === 0) {\n\t                    this._messageShow(this.model.get('error_text'), 'danger');\n\t                    this.$options.hide();\n\t                    this.$menu.hide();\n\t                } else {\n\t                    this.$message.hide();\n\t                    this.$options.css('display', 'inline-block');\n\t                    this.$menu.show();\n\t                }\n\t            }\n\t        },\n\t\n\t        _changeValue: function () {\n\t            this._setValue(this.model.get('value'));\n\t            if (this._getValue() === null && !this.model.get('multiple') && !this.model.get('optional')) {\n\t                this._setValue(this.first());\n\t            }\n\t            this.all_button && this.all_button.value($.isArray(this._getValue()) ? this._getValue().length : 0, this.length());\n\t        },\n\t\n\t        /** Return/Set current selection */\n\t        value: function (new_value) {\n\t            new_value !== undefined && this.model.set('value', new_value);\n\t            return this._getValue();\n\t        },\n\t\n\t        /** Return first available option */\n\t        first: function () {\n\t            var options = this.$('input').first();\n\t            return options.length > 0 ? options.val() : null;\n\t        },\n\t\n\t        /** Show a spinner indicating that the select options are currently loaded */\n\t        wait: function () {\n\t            this.model.set('wait', true);\n\t        },\n\t\n\t        /** Hide spinner indicating that the request has been completed */\n\t        unwait: function () {\n\t            this.model.set('wait', false);\n\t        },\n\t\n\t        /** Returns the number of options */\n\t        length: function () {\n\t            return this.$('.ui-option').length;\n\t        },\n\t\n\t        /** Set value to dom */\n\t        _setValue: function (new_value) {\n\t            var self = this;\n\t            if (new_value !== undefined) {\n\t                this.$('input').prop('checked', false);\n\t                if (new_value !== null) {\n\t                    var values = $.isArray(new_value) ? new_value : [new_value];\n\t                    _.each(values, function (v) {\n\t                        self.$('input[value=\"' + v + '\"]').first().prop('checked', true);\n\t                    });\n\t                }\n\t            }\n\t        },\n\t\n\t        /** Return current selection */\n\t        _getValue: function () {\n\t            var selected = [];\n\t            this.$(':checked').each(function () {\n\t                selected.push($(this).val());\n\t            });\n\t            if (Utils.isEmpty(selected)) {\n\t                return null;\n\t            }\n\t            return this.model.get('multiple') ? selected : selected[0];\n\t        },\n\t\n\t        /** Show message instead if options */\n\t        _messageShow: function (text, status) {\n\t            this.$message.show().removeClass().addClass('ui-message alert alert-' + status).html(text);\n\t        },\n\t\n\t        /** Main template function */\n\t        _template: function () {\n\t            return $('<div/>').addClass('ui-options-list');\n\t        }\n\t    });\n\t\n\t    /** Iconized **/\n\t    var BaseIcons = Base.extend({\n\t        _templateOption: function (pair) {\n\t            var id = Utils.uid();\n\t            return $('<div/>').addClass('ui-option').append($('<input/>').attr({\n\t                id: id,\n\t                type: this.model.get('type'),\n\t                name: this.model.id,\n\t                value: pair.value })).append($('<label/>').addClass('ui-options-label').attr('for', id).html(pair.label));\n\t        }\n\t    });\n\t\n\t    /** Radio button field **/\n\t    var Radio = {};\n\t    Radio.View = BaseIcons.extend({\n\t        initialize: function (options) {\n\t            options.type = 'radio';\n\t            BaseIcons.prototype.initialize.call(this, options);\n\t        }\n\t    });\n\t\n\t    /** Checkbox options field **/\n\t    var Checkbox = {};\n\t    Checkbox.View = BaseIcons.extend({\n\t        initialize: function (options) {\n\t            options.type = 'checkbox';\n\t            options.multiple = true;\n\t            BaseIcons.prototype.initialize.call(this, options);\n\t        }\n\t    });\n\t\n\t    /** Radio button options field styled as classic buttons **/\n\t    var RadioButton = {};\n\t    RadioButton.View = Base.extend({\n\t        initialize: function (options) {\n\t            Base.prototype.initialize.call(this, options);\n\t        },\n\t\n\t        /** Set current value */\n\t        _setValue: function (new_value) {\n\t            if (new_value !== undefined) {\n\t                this.$('input').prop('checked', false);\n\t                this.$('label').removeClass('active');\n\t                this.$('[value=\"' + new_value + '\"]').prop('checked', true).closest('label').addClass('active');\n\t            }\n\t        },\n\t\n\t        /** Template for a single option */\n\t        _templateOption: function (pair) {\n\t            var $el = $('<label/>').addClass('btn btn-default');\n\t            pair.icon && $el.append($('<i/>').addClass('fa').addClass(pair.icon).addClass(!pair.label && 'no-padding'));\n\t            $el.append($('<input/>').attr({ type: 'radio', name: this.model.id, value: pair.value }));\n\t            pair.label && $el.append(pair.label);\n\t            return $el;\n\t        },\n\t\n\t        /** Main template function */\n\t        _template: function () {\n\t            return $('<div/>').addClass('btn-group ui-radiobutton').attr('data-toggle', 'buttons');\n\t        }\n\t    });\n\t\n\t    return {\n\t        Base: Base,\n\t        BaseIcons: BaseIcons,\n\t        Radio: Radio,\n\t        RadioButton: RadioButton,\n\t        Checkbox: Checkbox\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 14:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {/**\n\t *  This class creates/wraps a default html select field as backbone class.\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(9)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Buttons) {\n\t    var View = Backbone.View.extend({\n\t        initialize: function (options) {\n\t            var self = this;\n\t            this.data = [];\n\t            this.data2 = [];\n\t            this.model = options && options.model || new Backbone.Model({\n\t                id: Utils.uid(),\n\t                cls: 'ui-select',\n\t                error_text: 'No options available',\n\t                empty_text: 'Nothing selected',\n\t                visible: true,\n\t                wait: false,\n\t                multiple: false,\n\t                searchable: true,\n\t                optional: false,\n\t                disabled: false,\n\t                onchange: function () {},\n\t                value: null,\n\t                selectall: true,\n\t                pagesize: 20\n\t            }).set(options);\n\t            this.on('change', function () {\n\t                self.model.get('onchange') && self.model.get('onchange')(self.value());\n\t            });\n\t            this.listenTo(this.model, 'change:data', this._changeData, this);\n\t            this.listenTo(this.model, 'change:disabled', this._changeDisabled, this);\n\t            this.listenTo(this.model, 'change:wait', this._changeWait, this);\n\t            this.listenTo(this.model, 'change:visible', this._changeVisible, this);\n\t            this.listenTo(this.model, 'change:value', this._changeValue, this);\n\t            this.listenTo(this.model, 'change:multiple change:searchable change:cls change:id', this.render, this);\n\t            this.render();\n\t        },\n\t\n\t        render: function () {\n\t            var self = this;\n\t            this.model.get('searchable') ? this._renderSearchable() : this._renderClassic();\n\t            this.$el.addClass(this.model.get('cls')).attr('id', this.model.get('id'));\n\t            this.$select.empty().addClass('select').attr('id', this.model.get('id') + '_select').prop('multiple', this.model.get('multiple')).on('change', function () {\n\t                self.value(self._getValue());\n\t                self.trigger('change');\n\t            });\n\t            this._changeData();\n\t            this._changeWait();\n\t            this._changeVisible();\n\t            this._changeDisabled();\n\t        },\n\t\n\t        /** Renders the classic selection field */\n\t        _renderClassic: function () {\n\t            var self = this;\n\t            this.$el.addClass(this.model.get('multiple') ? 'ui-select-multiple' : 'ui-select').append(this.$select = $('<select/>')).append(this.$dropdown = $('<div/>')).append(this.$resize = $('<div/>').append(this.$resize_icon = $('<i/>')));\n\t            if (this.model.get('multiple')) {\n\t                this.$dropdown.hide();\n\t                this.$resize_icon.addClass('fa fa-angle-double-right fa-rotate-45').show();\n\t                this.$resize.removeClass().addClass('icon-resize').show().off('mousedown').on('mousedown', function (event) {\n\t                    var currentY = event.pageY;\n\t                    var currentHeight = self.$select.height();\n\t                    self.minHeight = self.minHeight || currentHeight;\n\t                    $('#dd-helper').show().on('mousemove', function (event) {\n\t                        self.$select.height(Math.max(currentHeight + (event.pageY - currentY), self.minHeight));\n\t                    }).on('mouseup mouseleave', function () {\n\t                        $('#dd-helper').hide().off();\n\t                    });\n\t                });\n\t            } else {\n\t                this.$dropdown.show();\n\t                this.$resize.hide();\n\t                this.$resize_icon.hide();\n\t            }\n\t        },\n\t\n\t        /** Renders the default select2 field */\n\t        _renderSearchable: function () {\n\t            var self = this;\n\t            this.$el.append(this.$select = $('<div/>')).append(this.$dropdown = $('<div/>'));\n\t            this.$dropdown.hide();\n\t            if (!this.model.get('multiple')) {\n\t                this.$dropdown.show().on('click', function () {\n\t                    self.$select.select2 && self.$select.select2('open');\n\t                });\n\t            }\n\t            this.all_button = null;\n\t            if (this.model.get('multiple') && this.model.get('selectall')) {\n\t                this.all_button = new Buttons.ButtonCheck({\n\t                    onclick: function () {\n\t                        var new_value = [];\n\t                        self.all_button.value() !== 0 && _.each(self.model.get('data'), function (option) {\n\t                            new_value.push(option.value);\n\t                        });\n\t                        self.value(new_value);\n\t                        self.trigger('change');\n\t                    }\n\t                });\n\t                this.$el.prepend(this.all_button.$el);\n\t            }\n\t        },\n\t\n\t        /** Matches a search term with a given text */\n\t        _match: function (term, text) {\n\t            return !term || term == '' || String(text).toUpperCase().indexOf(term.toUpperCase()) >= 0;\n\t        },\n\t\n\t        /** Updates the selection options */\n\t        _changeData: function () {\n\t            var self = this;\n\t            this.data = [];\n\t            if (!this.model.get('multiple') && this.model.get('optional')) {\n\t                this.data.push({ value: '__null__', label: self.model.get('empty_text') });\n\t            }\n\t            _.each(this.model.get('data'), function (option) {\n\t                self.data.push(option);\n\t            });\n\t            if (this.length() == 0) {\n\t                this.data.push({ value: '__null__', label: this.model.get('error_text') });\n\t            }\n\t            if (this.model.get('searchable')) {\n\t                this.data2 = [];\n\t                _.each(this.data, function (option, index) {\n\t                    self.data2.push({ order: index, id: option.value, text: option.label, tags: option.tags });\n\t                });\n\t                this.$select.data('select2') && this.$select.select2('destroy');\n\t                this.matched_tags = {};\n\t                this.$select.select2({\n\t                    data: self.data2,\n\t                    closeOnSelect: !this.model.get('multiple'),\n\t                    multiple: this.model.get('multiple'),\n\t                    query: function (q) {\n\t                        self.matched_tags = {};\n\t                        var pagesize = self.model.get('pagesize');\n\t                        var results = _.filter(self.data2, function (e) {\n\t                            var found = false;\n\t                            _.each(e.tags, function (tag) {\n\t                                if (self._match(q.term, tag)) {\n\t                                    found = self.matched_tags[tag] = true;\n\t                                }\n\t                            });\n\t                            return found || self._match(q.term, e.text);\n\t                        });\n\t                        q.callback({\n\t                            results: results.slice((q.page - 1) * pagesize, q.page * pagesize),\n\t                            more: results.length >= q.page * pagesize\n\t                        });\n\t                    },\n\t                    formatResult: function (result) {\n\t                        return _.escape(result.text) + '<div class=\"ui-tags\">' + _.reduce(result.tags, function (memo, tag) {\n\t                            if (self.matched_tags[tag]) {\n\t                                return memo + '&nbsp;' + '<div class=\"label label-info\">' + _.escape(tag) + '</div>';\n\t                            }\n\t                            return memo;\n\t                        }, '') + '</div>';\n\t                    }\n\t                });\n\t                this.$('.select2-container .select2-search input').off('blur');\n\t            } else {\n\t                this.$select.find('option').remove();\n\t                _.each(this.data, function (option) {\n\t                    self.$select.append($('<option/>').attr('value', option.value).html(_.escape(option.label)));\n\t                });\n\t            }\n\t            this.model.set('disabled', this.length() == 0);\n\t            this._changeValue();\n\t        },\n\t\n\t        /** Handles field enabling/disabling, usually used when no options are available */\n\t        _changeDisabled: function () {\n\t            if (this.model.get('searchable')) {\n\t                this.$select.select2(this.model.get('disabled') ? 'disable' : 'enable');\n\t            } else {\n\t                this.$select.prop('disabled', this.model.get('disabled'));\n\t            }\n\t        },\n\t\n\t        /** Searchable fields may display a spinner e.g. while waiting for a server response */\n\t        _changeWait: function () {\n\t            this.$dropdown.removeClass().addClass('icon-dropdown fa').addClass(this.model.get('wait') ? 'fa-spinner fa-spin' : 'fa-caret-down');\n\t        },\n\t\n\t        /** Handles field visibility */\n\t        _changeVisible: function () {\n\t            this.$el[this.model.get('visible') ? 'show' : 'hide']();\n\t            this.$select[this.model.get('visible') ? 'show' : 'hide']();\n\t        },\n\t\n\t        /** Synchronizes the model value with the actually selected field value */\n\t        _changeValue: function () {\n\t            this._setValue(this.model.get('value'));\n\t            if (this.model.get('multiple')) {\n\t                if (this.all_button) {\n\t                    var value = this._getValue();\n\t                    this.all_button.value($.isArray(value) ? value.length : 0, this.length());\n\t                }\n\t            } else if (this._getValue() === null && !this.model.get('optional')) {\n\t                this._setValue(this.first());\n\t            }\n\t        },\n\t\n\t        /** Return/Set current selection */\n\t        value: function (new_value) {\n\t            new_value !== undefined && this.model.set('value', new_value);\n\t            return this._getValue();\n\t        },\n\t\n\t        /** Return the first select option */\n\t        first: function () {\n\t            return this.data.length > 0 ? this.data[0].value : null;\n\t        },\n\t\n\t        /** Check if a value is an existing option */\n\t        exists: function (value) {\n\t            return _.findWhere(this.data, { value: value });\n\t        },\n\t\n\t        /** Return the label/text of the current selection */\n\t        text: function () {\n\t            var v = this._getValue();\n\t            var d = this.exists($.isArray(v) ? v[0] : v);\n\t            return d ? d.label : '';\n\t        },\n\t\n\t        /** Show the select field */\n\t        show: function () {\n\t            this.model.set('visible', true);\n\t        },\n\t\n\t        /** Hide the select field */\n\t        hide: function () {\n\t            this.model.set('visible', false);\n\t        },\n\t\n\t        /** Show a spinner indicating that the select options are currently loaded */\n\t        wait: function () {\n\t            this.model.set('wait', true);\n\t        },\n\t\n\t        /** Hide spinner indicating that the request has been completed */\n\t        unwait: function () {\n\t            this.model.set('wait', false);\n\t        },\n\t\n\t        /** Returns true if the field is disabled */\n\t        disabled: function () {\n\t            return this.model.get('disabled');\n\t        },\n\t\n\t        /** Enable the select field */\n\t        enable: function () {\n\t            this.model.set('disabled', false);\n\t        },\n\t\n\t        /** Disable the select field */\n\t        disable: function () {\n\t            this.model.set('disabled', true);\n\t        },\n\t\n\t        /** Update all available options at once */\n\t        add: function (options, sorter) {\n\t            _.each(this.model.get('data'), function (v) {\n\t                v.keep && !_.findWhere(options, { value: v.value }) && options.push(v);\n\t            });\n\t            sorter && options && options.sort(sorter);\n\t            this.model.set('data', options);\n\t        },\n\t\n\t        /** Update available options */\n\t        update: function (options) {\n\t            this.model.set('data', options);\n\t        },\n\t\n\t        /** Set the custom onchange callback function */\n\t        setOnChange: function (callback) {\n\t            this.model.set('onchange', callback);\n\t        },\n\t\n\t        /** Number of available options */\n\t        length: function () {\n\t            return $.isArray(this.model.get('data')) ? this.model.get('data').length : 0;\n\t        },\n\t\n\t        /** Set value to dom */\n\t        _setValue: function (new_value) {\n\t            var self = this;\n\t            if (new_value === null || new_value === undefined) {\n\t                new_value = '__null__';\n\t            }\n\t            if (this.model.get('multiple')) {\n\t                new_value = $.isArray(new_value) ? new_value : [new_value];\n\t            } else if ($.isArray(new_value)) {\n\t                if (new_value.length > 0) {\n\t                    new_value = new_value[0];\n\t                } else {\n\t                    new_value = '__null__';\n\t                }\n\t            }\n\t            if (this.model.get('searchable')) {\n\t                if ($.isArray(new_value)) {\n\t                    val = [];\n\t                    _.each(new_value, function (v) {\n\t                        var d = _.findWhere(self.data2, { id: v });\n\t                        d && val.push(d);\n\t                    });\n\t                    new_value = val;\n\t                } else {\n\t                    var d = _.findWhere(this.data2, { id: new_value });\n\t                    new_value = d;\n\t                }\n\t                this.$select.select2('data', new_value);\n\t            } else {\n\t                this.$select.val(new_value);\n\t            }\n\t        },\n\t\n\t        /** Get value from dom */\n\t        _getValue: function () {\n\t            var val = null;\n\t            if (this.model.get('searchable')) {\n\t                var selected = this.$select.select2('data');\n\t                if (selected) {\n\t                    if ($.isArray(selected)) {\n\t                        val = [];\n\t                        selected.sort(function (a, b) {\n\t                            return a.order - b.order;\n\t                        });\n\t                        _.each(selected, function (v) {\n\t                            val.push(v.id);\n\t                        });\n\t                    } else {\n\t                        val = selected.id;\n\t                    }\n\t                }\n\t            } else {\n\t                val = this.$select.val();\n\t            }\n\t            return Utils.isEmpty(val) ? null : val;\n\t        }\n\t    });\n\t\n\t    return {\n\t        View: View\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($, _) {/** This class creates/wraps a drill down element. */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(11)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Options) {\n\t\n\t    var View = Options.BaseIcons.extend({\n\t        initialize: function (options) {\n\t            options.type = options.display || 'checkbox';\n\t            options.multiple = options.type == 'checkbox';\n\t            Options.BaseIcons.prototype.initialize.call(this, options);\n\t        },\n\t\n\t        /** Set states for selected values */\n\t        _setValue: function (new_value) {\n\t            Options.BaseIcons.prototype._setValue.call(this, new_value);\n\t            if (new_value !== undefined && new_value !== null && this.header_index) {\n\t                var self = this;\n\t                var values = $.isArray(new_value) ? new_value : [new_value];\n\t                _.each(values, function (v) {\n\t                    var list = self.header_index[v];\n\t                    _.each(list, function (element) {\n\t                        self._setState(element, true);\n\t                    });\n\t                });\n\t            }\n\t        },\n\t\n\t        /** Expand/collapse a sub group */\n\t        _setState: function (header_id, is_expanded) {\n\t            var $button = this.$('.button-' + header_id);\n\t            var $subgroup = this.$('.subgroup-' + header_id);\n\t            $button.data('is_expanded', is_expanded);\n\t            if (is_expanded) {\n\t                $subgroup.show();\n\t                $button.removeClass('fa-plus-square').addClass('fa-minus-square');\n\t            } else {\n\t                $subgroup.hide();\n\t                $button.removeClass('fa-minus-square').addClass('fa-plus-square');\n\t            }\n\t        },\n\t\n\t        /** Template to create options tree */\n\t        _templateOptions: function () {\n\t            var self = this;\n\t            this.header_index = {};\n\t\n\t            // attach event handler\n\t            function attach($el, header_id) {\n\t                var $button = $el.find('.button-' + header_id);\n\t                $button.on('click', function () {\n\t                    self._setState(header_id, !$button.data('is_expanded'));\n\t                });\n\t            }\n\t\n\t            // recursive function which iterates through options\n\t            function iterate($tmpl, options, header) {\n\t                header = header || [];\n\t                for (i in options) {\n\t                    var level = options[i];\n\t                    var has_options = level.options && level.options.length > 0;\n\t                    var new_header = header.slice(0);\n\t                    self.header_index[level.value] = new_header.slice(0);\n\t                    var $group = $('<div/>');\n\t                    if (has_options) {\n\t                        var header_id = Utils.uid();\n\t                        var $button = $('<span/>').addClass('button-' + header_id).addClass('ui-drilldown-button fa fa-plus-square');\n\t                        var $subgroup = $('<div/>').addClass('subgroup-' + header_id).addClass('ui-drilldown-subgroup');\n\t                        $group.append($('<div/>').append($button).append(self._templateOption({ label: level.name, value: level.value })));\n\t                        new_header.push(header_id);\n\t                        iterate($subgroup, level.options, new_header);\n\t                        $group.append($subgroup);\n\t                        attach($group, header_id);\n\t                    } else {\n\t                        $group.append(self._templateOption({ label: level.name, value: level.value }));\n\t                    }\n\t                    $tmpl.append($group);\n\t                }\n\t            }\n\t\n\t            // iterate through options and create dom\n\t            var $tmpl = $('<div/>');\n\t            iterate($tmpl, this.model.get('data'));\n\t            return $tmpl;\n\t        },\n\t\n\t        /** Template for drill down view */\n\t        _template: function () {\n\t            return $('<div/>').addClass('ui-options-list drilldown-container').attr('id', this.model.id);\n\t        }\n\t    });\n\t\n\t    return {\n\t        View: View\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2)))\n\n/***/ },\n\n/***/ 27:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils) {\n\t    var View = Backbone.View.extend({\n\t        initialize: function (options) {\n\t            var self = this;\n\t            this.model = options && options.model || new Backbone.Model({\n\t                id: Utils.uid(),\n\t                min: null,\n\t                max: null,\n\t                step: null,\n\t                precise: false,\n\t                split: 10000,\n\t                value: null,\n\t                onchange: function () {}\n\t            }).set(options);\n\t\n\t            // create new element\n\t            this.setElement(this._template());\n\t            this.$el.attr('id', this.model.id);\n\t            this.$text = this.$('.ui-form-slider-text');\n\t            this.$slider = this.$('.ui-form-slider-element');\n\t\n\t            // add text field event\n\t            var pressed = [];\n\t            this.$text.on('change', function () {\n\t                self.value($(this).val());\n\t            }).on('keyup', function (e) {\n\t                pressed[e.which] = false;\n\t            }).on('keydown', function (e) {\n\t                var v = e.which;\n\t                pressed[v] = true;\n\t                if (self.model.get('is_workflow') && pressed[16] && v == 52) {\n\t                    self.value('$');\n\t                    event.preventDefault();\n\t                } else if (!(v == 8 || v == 9 || v == 13 || v == 37 || v == 39 || v >= 48 && v <= 57 && !pressed[16] || v >= 96 && v <= 105 || (v == 190 || v == 110) && $(this).val().indexOf('.') == -1 && self.model.get('precise') || (v == 189 || v == 109) && $(this).val().indexOf('-') == -1 || self._isParameter($(this).val()) || pressed[91] || pressed[17])) {\n\t                    event.preventDefault();\n\t                }\n\t            });\n\t\n\t            // build slider, cannot be rebuild in render\n\t            var opts = this.model.attributes;\n\t            this.has_slider = opts.max !== null && opts.min !== null && opts.max > opts.min;\n\t            var step = opts.step;\n\t            if (!step) {\n\t                if (opts.precise && this.has_slider) {\n\t                    step = (opts.max - opts.min) / opts.split;\n\t                } else {\n\t                    step = 1.0;\n\t                }\n\t            }\n\t            if (this.has_slider) {\n\t                this.$text.addClass('ui-form-slider-left');\n\t                this.$slider.slider({ min: opts.min, max: opts.max, step: step }).on('slide', function (event, ui) {\n\t                    self.value(ui.value);\n\t                });\n\t            } else {\n\t                this.$slider.hide();\n\t            }\n\t\n\t            // add listeners\n\t            this.listenTo(this.model, 'change', this.render, this);\n\t            this.render();\n\t        },\n\t\n\t        render: function () {\n\t            var value = this.model.get('value');\n\t            this.has_slider && this.$slider.slider('value', value);\n\t            value !== this.$text.val() && this.$text.val(value);\n\t        },\n\t\n\t        /** Set and return the current value */\n\t        value: function (new_val) {\n\t            var options = this.model.attributes;\n\t            if (new_val !== undefined) {\n\t                if (new_val !== null && new_val !== '' && !this._isParameter(new_val)) {\n\t                    isNaN(new_val) && (new_val = 0);\n\t                    !options.precise && (new_val = Math.round(new_val));\n\t                    options.max !== null && (new_val = Math.min(new_val, options.max));\n\t                    options.min !== null && (new_val = Math.max(new_val, options.min));\n\t                }\n\t                this.model.set('value', new_val);\n\t                this.model.trigger('change');\n\t                options.onchange(new_val);\n\t            }\n\t            return this.model.get('value');\n\t        },\n\t\n\t        /** Return true if the field contains a workflow parameter i.e. $('name') */\n\t        _isParameter: function (value) {\n\t            return this.model.get('is_workflow') && String(value).substring(0, 1) === '$';\n\t        },\n\t\n\t        /** Slider template */\n\t        _template: function () {\n\t            return '<div class=\"ui-form-slider\">' + '<input class=\"ui-form-slider-text\" type=\"text\"/>' + '<div class=\"ui-form-slider-element\"/>' + '</div>';\n\t        }\n\t    });\n\t\n\t    return {\n\t        View: View\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 98:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {var _l = __webpack_require__(5);\n\t\n\tvar AdminPanel = Backbone.View.extend({\n\t    initialize: function (page, options) {\n\t        var self = this;\n\t        this.page = page;\n\t        this.root = options.root;\n\t        this.config = options.config;\n\t        this.settings = options.settings;\n\t        this.message = options.message;\n\t        this.status = options.status;\n\t        this.model = new Backbone.Model({\n\t            title: _l('Administration')\n\t        });\n\t        this.categories = new Backbone.Collection([{\n\t            title: 'Server',\n\t            items: [{\n\t                title: 'Data types registry',\n\t                url: 'admin/view_datatypes_registry'\n\t            }, {\n\t                title: 'Data tables registry',\n\t                url: 'admin/view_tool_data_tables'\n\t            }, {\n\t                title: 'Display applications',\n\t                url: 'admin/display_applications'\n\t            }, {\n\t                title: 'Manage jobs',\n\t                url: 'admin/jobs'\n\t            }]\n\t        }, {\n\t            title: 'Tools and Tool Shed',\n\t            items: [{\n\t                title: 'Search Tool Shed',\n\t                url: 'admin_toolshed/browse_tool_sheds',\n\t                enabled: self.settings.is_tool_shed_installed\n\t            }, {\n\t                title: 'Search Tool Shed (Beta)',\n\t                url: 'admin_toolshed/browse_toolsheds',\n\t                enabled: self.settings.is_tool_shed_installed && self.config.enable_beta_ts_api_install\n\t            }, {\n\t                title: 'Monitor installing repositories',\n\t                url: 'admin_toolshed/monitor_repository_installation?installing_repository_ids=' + self.settings.installing_repository_ids,\n\t                enabled: self.settings.installing_repository_ids\n\t            }, {\n\t                title: 'Manage installed tools',\n\t                url: 'admin_toolshed/browse_repositories',\n\t                enabled: self.settings.is_repo_installed\n\t            }, {\n\t                title: 'Reset metadata',\n\t                url: 'admin_toolshed/reset_metadata_on_selected_installed_repositories',\n\t                enabled: self.settings.is_repo_installed\n\t            }, {\n\t                title: 'Download local tool',\n\t                url: 'admin/package_tool'\n\t            }, {\n\t                title: 'Tool lineage',\n\t                url: 'admin/tool_versions'\n\t            }, {\n\t                title: 'Reload a tool\\'s configuration',\n\t                url: 'admin/reload_tool'\n\t            }, {\n\t                title: 'Review tool migration stages',\n\t                url: 'admin/review_tool_migration_stages'\n\t            }, {\n\t                title: 'View Tool Error Logs',\n\t                url: 'admin/tool_errors'\n\t            }, {\n\t                title: 'Manage Display Whitelist',\n\t                url: 'admin/sanitize_whitelist'\n\t            }, {\n\t                title: 'Manage Tool Dependencies',\n\t                url: 'admin/manage_tool_dependencies'\n\t            }]\n\t        }, {\n\t            title: 'User Management',\n\t            items: [{\n\t                title: 'Users',\n\t                url: 'admin/users'\n\t            }, {\n\t                title: 'Groups',\n\t                url: 'admin/groups'\n\t            }, {\n\t                title: 'Roles',\n\t                url: 'admin/roles'\n\t            }, {\n\t                title: 'API keys',\n\t                url: 'userskeys/all_users'\n\t            }, {\n\t                title: 'Impersonate a user',\n\t                url: 'admin/impersonate',\n\t                enabled: self.config.allow_user_impersonation\n\t            }]\n\t        }, {\n\t            title: 'Data',\n\t            items: [{\n\t                title: 'Quotas',\n\t                url: 'admin/quotas',\n\t                enabled: self.config.enable_quotas\n\t            }, {\n\t                title: 'Data libraries',\n\t                url: 'library_admin/browse_libraries'\n\t            }, {\n\t                title: 'Roles',\n\t                url: 'admin/roles'\n\t            }, {\n\t                title: 'Local data',\n\t                url: 'data_manager'\n\t            }]\n\t        }, {\n\t            title: 'Form Definitions',\n\t            items: [{\n\t                title: 'Form definitions',\n\t                url: 'forms/browse_form_definitions'\n\t            }]\n\t        }, {\n\t            title: 'Sample Tracking',\n\t            items: [{\n\t                title: 'Sequencers and external services',\n\t                url: 'external_service/browse_external_services'\n\t            }, {\n\t                title: 'Request types',\n\t                url: 'request_type/browse_request_types'\n\t            }, {\n\t                title: 'Sequencing requests',\n\t                url: 'requests_admin/browse_requests'\n\t            }, {\n\t                title: 'Find samples',\n\t                url: 'requests_common/find_samples?cntrller=requests_admin'\n\t            }]\n\t        }]);\n\t        this.setElement(this._template());\n\t    },\n\t\n\t    render: function () {\n\t        var self = this;\n\t        this.$el.empty();\n\t        this.categories.each(function (category) {\n\t            var $section = $(self._templateSection(category.attributes));\n\t            var $entries = $section.find('.ui-side-section-body');\n\t            _.each(category.get('items'), function (item) {\n\t                if (item.enabled === undefined || item.enabled) {\n\t                    $entries.append($('<div/>').addClass('ui-side-section-body-title').append($('<a/>').attr({\n\t                        href: self.root + item.url,\n\t                        target: 'galaxy_main' }).text(_l(item.title))));\n\t                }\n\t            });\n\t            self.$el.append($section);\n\t        });\n\t        this.page.$('#galaxy_main').prop('src', this.root + 'admin/center?message=' + this.message + '&status=' + this.status);\n\t    },\n\t\n\t    _templateSection: function (options) {\n\t        return ['<div>', '<div class=\"ui-side-section-title\">' + _l(options.title) + '</div>', '<div class=\"ui-side-section-body\"/>', '</div>'].join('');\n\t    },\n\t\n\t    _template: function () {\n\t        return '<div class=\"ui-side-panel\"/>';\n\t    },\n\t\n\t    toString: function () {\n\t        return 'adminPanel';\n\t    }\n\t});\n\t\n\tmodule.exports = AdminPanel;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1), __webpack_require__(2)))\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// admin.bundled.js","var jQuery = require( 'jquery' ),\n    $ = jQuery,\n    GalaxyApp = require( 'galaxy' ).GalaxyApp,\n    QUERY_STRING = require( 'utils/query-string-parsing' ),\n    AdminPanel = require( './panels/admin-panel' ),\n    Ui = require( 'mvc/ui/ui-misc' ),\n    Page = require( 'layout/page' );\n\nwindow.app = function app( options, bootstrapped ){\n    window.Galaxy = new GalaxyApp( options, bootstrapped );\n    Galaxy.debug( 'admin app' );\n    Galaxy.params = Galaxy.config.params;\n\n    /** Routes */\n    var Router = Backbone.Router.extend({\n        // TODO: not many client routes at this point - fill and remove from server.\n        // since we're at root here, this may be the last to be routed entirely on the client.\n        initialize : function( page, options ){\n            this.page = page;\n            this.options = options;\n        },\n\n        /** helper to push a new navigation state */\n        push: function( url, data ) {\n            data = data || {};\n            data.__identifer = Math.random().toString( 36 ).substr( 2 );\n            if ( !$.isEmptyObject( data ) ) {\n                url += url.indexOf( '?' ) == -1 ? '?' : '&';\n                url += $.param( data , true );\n            }\n            this.navigate( url, { 'trigger': true } );\n        },\n\n        /** override to parse query string into obj and send to each route */\n        execute: function( callback, args, name ){\n            Galaxy.debug( 'router execute:', callback, args, name );\n            var queryObj = QUERY_STRING.parse( args.pop() );\n            args.push( queryObj );\n            if( callback ){\n                if ( this.authenticate( args, name ) ) {\n                    callback.apply( this, args );\n                } else {\n                    this.page.display( new Ui.Message( { status: 'danger', message: 'You must be logged in as admin user to make this request.', persistent: true } ) );\n                }\n            }\n        },\n\n        routes: {\n            '(/)admin(/)user' : 'show_user'\n        },\n\n        authenticate: function( args, name ) {\n            return Galaxy.user && Galaxy.user.id && Galaxy.user.get( 'is_admin' );\n        },\n\n        show_user: function() {\n        }\n    });\n\n    $(function(){\n        _.extend( options.config, { active_view : 'admin' } );\n        Galaxy.page = new Page.View( _.extend( options, {\n            Left    : AdminPanel,\n            Router  : Router\n        } ) );\n\n        // start the router - which will call any of the routes above\n        Backbone.history.start({\n            root        : Galaxy.root,\n            pushState   : true,\n        });\n    });\n};\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/admin.js","/**\n *  This class contains backbone wrappers for basic ui elements such as Images, Labels, Buttons, Input fields etc.\n */\ndefine(['utils/utils',\n    'mvc/ui/ui-select-default',\n    'mvc/ui/ui-slider',\n    'mvc/ui/ui-options',\n    'mvc/ui/ui-drilldown',\n    'mvc/ui/ui-buttons',\n    'mvc/ui/ui-modal'],\n    function( Utils, Select, Slider, Options, Drilldown, Buttons, Modal ) {\n\n    /** Label wrapper */\n    var Label = Backbone.View.extend({\n        tagName: 'label',\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model( options );\n            this.tagName = options.tagName || this.tagName;\n            this.setElement( $( '<' + this.tagName + '/>' ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n        title: function( new_title ) {\n            this.model.set( 'title', new_title );\n        },\n        value: function() {\n            return this.model.get( 'title' );\n        },\n        render: function() {\n            this.$el.removeClass()\n                    .addClass( 'ui-label' )\n                    .addClass( this.model.get( 'cls' ) )\n                    .html( this.model.get( 'title' ) );\n            return this;\n        }\n    });\n\n    /** Displays messages used e.g. in the tool form */\n    var Message = Backbone.View.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                message     : null,\n                status      : 'info',\n                cls         : '',\n                persistent  : false,\n                fade        : true\n            }).set( options );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n        update: function( options ) {\n            this.model.set( options );\n        },\n        render: function() {\n            this.$el.removeClass().addClass( 'ui-message' ).addClass( this.model.get( 'cls' ) );\n            var status = this.model.get( 'status' );\n            if ( this.model.get( 'large' ) ) {\n                this.$el.addClass((( status == 'success' && 'done' ) ||\n                                   ( status == 'danger' && 'error' ) ||\n                                     status ) + 'messagelarge' );\n            } else {\n                this.$el.addClass( 'alert' ).addClass( 'alert-' + status );\n            }\n            if ( this.model.get( 'message' ) ) {\n                this.$el.html( this.messageForDisplay() );\n                this.$el[ this.model.get( 'fade' ) ? 'fadeIn' : 'show' ]();\n                this.timeout && window.clearTimeout( this.timeout );\n                if ( !this.model.get( 'persistent' ) ) {\n                    var self = this;\n                    this.timeout = window.setTimeout( function() {\n                        self.model.set( 'message', '' );\n                    }, 3000 );\n                }\n            } else {\n                this.$el.fadeOut();\n            }\n            return this;\n        },\n        messageForDisplay: function() {\n            return _.escape( this.model.get( 'message' ) );\n        }\n    });\n\n    var UnescapedMessage = Message.extend({\n        messageForDisplay: function() {\n            return this.model.get( 'message' );\n        }\n    });\n\n    /** Renders an input element used e.g. in the tool form */\n    var Input = Backbone.View.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                type            : 'text',\n                placeholder     : '',\n                disabled        : false,\n                readonly        : false,\n                visible         : true,\n                cls             : '',\n                area            : false,\n                color           : null,\n                style           : null\n            }).set( options );\n            this.tagName = this.model.get( 'area' ) ? 'textarea' : 'input';\n            this.setElement( $( '<' + this.tagName + '/>' ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n        events: {\n            'input': '_onchange'\n        },\n        value: function( new_val ) {\n            new_val !== undefined && this.model.set( 'value', typeof new_val === 'string' ? new_val : '' );\n            return this.model.get( 'value' );\n        },\n        render: function() {\n            var self = this;\n            this.$el.removeClass()\n                    .addClass( 'ui-' + this.tagName )\n                    .addClass( this.model.get( 'cls' ) )\n                    .addClass( this.model.get( 'style' ) )\n                    .attr( 'id', this.model.id )\n                    .attr( 'type', this.model.get( 'type' ) )\n                    .attr( 'placeholder', this.model.get( 'placeholder' ) )\n                    .css( 'color', this.model.get( 'color' ) || '' )\n                    .css( 'border-color', this.model.get( 'color' ) || '' );\n            var datalist = this.model.get( 'datalist' );\n            if ( $.isArray( datalist ) && datalist.length > 0 ) {\n                this.$el.autocomplete( { source : function( request, response ) { response( self.model.get( 'datalist' ) ) },\n                                         change : function() { self._onchange() } } );\n            }\n            if ( this.model.get( 'value' ) !== this.$el.val() ) {\n                this.$el.val( this.model.get( 'value' ) );\n            }\n            _.each( [ 'readonly', 'disabled' ], function( attr_name ) {\n                self.model.get( attr_name ) ? self.$el.attr( attr_name, true ) : self.$el.removeAttr( attr_name );\n            });\n            this.$el[ this.model.get( 'visible' ) ? 'show' : 'hide' ]();\n            return this;\n        },\n        _onchange: function() {\n            this.value( this.$el.val() );\n            this.model.get( 'onchange' ) && this.model.get( 'onchange' )( this.model.get( 'value' ) );\n        }\n    });\n\n    /** Creates a hidden element input field used e.g. in the tool form */\n    var Hidden = Backbone.View.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model( options );\n            this.setElement( $ ( '<div/>' ).append( this.$info = $( '<div/>' ) )\n                                           .append( this.$hidden = $( '<div/>' ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n        value: function( new_val ) {\n            new_val !== undefined && this.model.set( 'value', new_val );\n            return this.model.get( 'value' );\n        },\n        render: function() {\n            this.$el.attr( 'id', this.model.id );\n            this.$hidden.val( this.model.get( 'value' ) );\n            this.model.get( 'info' ) ? this.$info.show().text( this.model.get( 'info' ) ) : this.$info.hide();\n            return this;\n        }\n    });\n\n    /** Creates a upload element input field */\n    var Upload = Backbone.View.extend({\n        initialize: function( options ) {\n            var self = this;\n            this.model = options && options.model || new Backbone.Model( options );\n            this.setElement( $ ( '<div/>' ).append( this.$info = $( '<div/>' ) )\n                                           .append( this.$file = $( '<input/>' ).attr( 'type', 'file' ).addClass( 'ui-margin-bottom' ) )\n                                           .append( this.$text = $( '<textarea/>' ).addClass( 'ui-textarea' ).attr( 'disabled', true ) )\n                                           .append( this.$wait = $( '<i/>' ).addClass( 'fa fa-spinner fa-spin' ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.$file.on( 'change', function( e ) { self._readFile( e ) } );\n            this.render();\n        },\n        value: function( new_val ) {\n            new_val !== undefined && this.model.set( 'value', new_val );\n            return this.model.get( 'value' );\n        },\n        render: function() {\n            this.$el.attr( 'id', this.model.id );\n            this.model.get( 'info' ) ? this.$info.show().text( this.model.get( 'info' ) ) : this.$info.hide();\n            this.model.get( 'value' ) ? this.$text.text( this.model.get( 'value' ) ).show() : this.$text.hide();\n            this.model.get( 'wait' ) ? this.$wait.show() : this.$wait.hide();\n            return this;\n        },\n        _readFile: function( e ) {\n            var self = this;\n            var file = e.target.files && e.target.files[ 0 ];\n            if ( file ) {\n                var reader = new FileReader();\n                reader.onload = function() {\n                    self.model.set( { wait: false, value: this.result } );\n                }\n                this.model.set( { wait: true, value: null } );\n                reader.readAsText( file );\n            }\n        }\n    });\n\n    return {\n        Button           : Buttons.ButtonDefault,\n        ButtonIcon       : Buttons.ButtonIcon,\n        ButtonCheck      : Buttons.ButtonCheck,\n        ButtonMenu       : Buttons.ButtonMenu,\n        ButtonLink       : Buttons.ButtonLink,\n        Input            : Input,\n        Label            : Label,\n        Message          : Message,\n        UnescapedMessage : UnescapedMessage,\n        Upload           : Upload,\n        Modal            : Modal,\n        RadioButton      : Options.RadioButton,\n        Checkbox         : Options.Checkbox,\n        Radio            : Options.Radio,\n        Select           : Select,\n        Hidden           : Hidden,\n        Slider           : Slider,\n        Drilldown        : Drilldown\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-misc.js","/** This module contains all button views. */\ndefine( [ 'utils/utils' ], function( Utils ) {\n    /** This renders the default button which is used e.g. at the bottom of the upload modal. */\n    var ButtonDefault = Backbone.View.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : '',\n                floating    : 'right',\n                icon        : '',\n                cls         : 'btn btn-default',\n                wait        : false,\n                wait_text   : 'Sending...',\n                wait_cls    : 'btn btn-info',\n                disabled    : false,\n                percentage  : -1\n            }).set( options );\n            this.setElement( $( '<button/>' ).attr( 'type', 'button' )\n                                             .append( this.$icon        = $( '<i/>' ) )\n                                             .append( this.$title       = $( '<span/>' ) )\n                                             .append( this.$progress    = $( '<div/>' ).append( this.$progress_bar = $( '<div/>' ) ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( 'ui-button-default' )\n                    .addClass( options.disabled && 'disabled' )\n                    .attr( 'id', options.id )\n                    .attr( 'disabled', options.disabled )\n                    .css( 'float', options.floating )\n                    .off( 'click' ).on( 'click' , function() {\n                        $( '.tooltip' ).hide();\n                        options.onclick && !self.disabled && options.onclick();\n                    })\n                    .tooltip( { title: options.tooltip, placement: 'bottom' } );\n            this.$progress.addClass( 'progress' ).css( 'display', options.percentage !== -1 ? 'block' : 'none' );\n            this.$progress_bar.addClass( 'progress-bar' ).css( { width : options.percentage + '%' } );\n            this.$icon.removeClass().addClass( 'icon fa' );\n            this.$title.removeClass().addClass( 'title' );\n            if ( options.wait ) {\n                this.$el.addClass( options.wait_cls ).prop( 'disabled', true );\n                this.$icon.addClass( 'fa-spinner fa-spin ui-margin-right' );\n                this.$title.html( options.wait_text );\n            } else {\n                this.$el.addClass( options.cls );\n                this.$icon.addClass( options.icon );\n                this.$title.html( options.title );\n                options.icon && options.title && this.$icon.addClass( 'ui-margin-right' );\n            }\n        },\n\n        /** Show button */\n        show: function() {\n            this.$el.show();\n        },\n\n        /** Hide button */\n        hide: function() {\n            this.$el.hide();\n        },\n\n        /** Disable button */\n        disable: function() {\n            this.model.set( 'disabled', true );\n        },\n\n        /** Enable button */\n        enable: function() {\n            this.model.set( 'disabled', false );\n        },\n\n        /** Show spinner to indicate that the button is not ready to be clicked */\n        wait: function() {\n            this.model.set( 'wait', true );\n        },\n\n        /** Hide spinner to indicate that the button is ready to be clicked */\n        unwait: function() {\n            this.model.set( 'wait', false );\n        },\n\n        /** Change icon */\n        setIcon: function( icon ) {\n            this.model.set( 'icon', icon );\n        }\n    });\n\n    /** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons. */\n    var ButtonLink = ButtonDefault.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : '',\n                icon        : '',\n                cls         : ''\n            }).set( options );\n            this.setElement( $( '<a/>' ).append( this.$icon  = $( '<span/>' ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( options.cls )\n                    .attr( { id         : options.id,\n                             href       : options.href || 'javascript:void(0)',\n                             title      : options.title,\n                             target     : options.target || '_top',\n                             disabled   : options.disabled } )\n                    .tooltip( { placement: 'bottom' } )\n                    .off( 'click' ).on( 'click' , function() {\n                        options.onclick && !options.disabled && options.onclick();\n                    });\n            this.$icon.removeClass().addClass( options.icon );\n        }\n    });\n\n    /** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected. */\n    var ButtonCheck = Backbone.View.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : 'Select/Unselect all',\n                icons       : [ 'fa-square-o', 'fa-minus-square-o', 'fa-check-square-o' ],\n                value       : 0,\n                onchange    : function(){}\n            }).set( options );\n            this.setElement( $( '<div/>' ).append( this.$icon   = $( '<span/>' ) )\n                                          .append( this.$title  = $( '<span/>' ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function( options ) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.addClass( 'ui-button-check' )\n                    .off( 'click' ).on('click', function() {\n                        self.model.set( 'value', ( self.model.get( 'value' ) === 0 && 2 ) || 0 );\n                        options.onclick && options.onclick();\n                    });\n            this.$title.html( options.title );\n            this.$icon.removeClass()\n                      .addClass( 'icon fa ui-margin-right' )\n                      .addClass( options.icons[ options.value ] );\n        },\n\n        /* Sets a new value and/or returns the value.\n        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n        * OR:\n        * @param{Integer}   new_val - Number of selected options.\n        * @param{Integer}   total   - Total number of available options.\n        */\n        value: function ( new_val, total ) {\n            if ( new_val !== undefined ) {\n                if ( total && new_val !== 0 ) {\n                    new_val = ( new_val !== total ) && 1 || 2;\n                }\n                this.model.set( 'value', new_val );\n                this.model.get( 'onchange' )( this.model.get( 'value' ) );\n            }\n            return this.model.get( 'value' );\n        }\n    });\n\n    /** This renders a differently styled, more compact button version. */\n    var ButtonIcon = ButtonDefault.extend({\n        initialize: function( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id          : Utils.uid(),\n                title       : '',\n                floating    : 'right',\n                icon        : '',\n                cls         : 'ui-button-icon',\n                disabled    : false\n            }).set( options );\n            this.setElement( $( '<div/>' ).append( this.$button = $( '<div/>' ).append( this.$icon  = $( '<i/>' ) )\n                                                                               .append( this.$title = $( '<span/>' ) ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render : function( options ) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( options.cls )\n                    .addClass( options.disabled && 'disabled' )\n                    .attr( 'disabled', options.disabled )\n                    .attr( 'id', options.id )\n                    .css( 'float', options.floating )\n                    .off( 'click' ).on( 'click', function() {\n                        $( '.tooltip' ).hide();\n                        !options.disabled && options.onclick && options.onclick();\n                    });\n            this.$button.addClass( 'button' ).tooltip( { title: options.tooltip, placement: 'bottom' } );\n            this.$icon.removeClass().addClass( 'icon fa' ).addClass( options.icon );\n            this.$title.addClass( 'title' ).html( options.title );\n            options.icon && options.title && this.$icon.addClass( 'ui-margin-right' );\n        }\n    });\n\n    /** This class creates a button with dropdown menu. */\n    var ButtonMenu = ButtonDefault.extend({\n        $menu: null,\n        initialize: function ( options ) {\n            this.model = options && options.model || new Backbone.Model({\n                id              : '',\n                title           : '',\n                floating        : 'right',\n                pull            : 'right',\n                icon            : null,\n                onclick         : null,\n                cls             : 'ui-button-icon ui-button-menu',\n                tooltip         : '',\n                target          : '',\n                href            : '',\n                onunload        : null,\n                visible         : true,\n                tag             : ''\n            }).set( options );\n            this.collection = new Backbone.Collection();\n            this.setElement( $( '<div/>' ).append( this.$root = $( '<div/>' ).append( this.$icon  = $( '<i/>' ) )\n                                                                             .append( this.$title = $( '<span/>' ) ) ) );\n            this.listenTo( this.model, 'change', this.render, this );\n            this.listenTo( this.collection, 'change add remove reset', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass()\n                    .addClass( 'dropdown' )\n                    .addClass( options.cls )\n                    .attr( 'id', options.id )\n                    .css( { float   : options.floating,\n                            display : options.visible && this.collection.where( { visible: true } ).length > 0 ? 'block' : 'none' } );\n            this.$root.addClass( 'root button dropdown-toggle' )\n                      .attr( 'data-toggle', 'dropdown' )\n                      .tooltip( { title: options.tooltip, placement: 'bottom' } )\n                      .off( 'click' ).on( 'click', function( e ) {\n                            $( '.tooltip' ).hide();\n                            e.preventDefault();\n                            options.onclick && options.onclick();\n                      } );\n            this.$icon.removeClass().addClass( 'icon fa' ).addClass( options.icon );\n            this.$title.removeClass().addClass( 'title' ).html( options.title );\n            options.icon && options.title && this.$icon.addClass( 'ui-margin-right' );\n            this.$menu && this.$menu.remove();\n            if ( this.collection.length > 0 ) {\n                this.$menu = $( '<ul/>' ).addClass( 'menu dropdown-menu' )\n                                         .addClass( 'pull-' + self.model.get( 'pull' ) )\n                                         .attr( 'role', 'menu' );\n                this.$el.append( this.$menu );\n            }\n            this.collection.each( function( submodel ) {\n                var suboptions = submodel.attributes;\n                if ( suboptions.visible ) {\n                    var $link = $( '<a/>' ).addClass( 'dropdown-item' )\n                                           .attr( { href : suboptions.href, target : suboptions.target } )\n                                           .append( $( '<i/>' ).addClass( 'fa' )\n                                                               .addClass( suboptions.icon )\n                                                               .css( 'display', suboptions.icon ? 'inline-block' : 'none' ) )\n                                           .append( suboptions.title )\n                                           .on( 'click', function( e ) {\n                                                if ( suboptions.onclick ) {\n                                                    e.preventDefault();\n                                                    suboptions.onclick();\n                                                }\n                                           } );\n                    self.$menu.append( $( '<li/>' ).append( $link ) );\n                    suboptions.divider && self.$menu.append( $( '<li/>' ).addClass( 'divider' ) );\n                }\n            });\n        },\n\n        /** Add a new menu item */\n        addMenu: function ( options ) {\n            this.collection.add( Utils.merge( options, {\n                title       : '',\n                target      : '',\n                href        : '',\n                onclick     : null,\n                divider     : false,\n                visible     : true,\n                icon        : null,\n                cls         : 'button-menu btn-group'\n            }));\n        }\n    });\n\n    return {\n        ButtonDefault   : ButtonDefault,\n        ButtonLink      : ButtonLink,\n        ButtonIcon      : ButtonIcon,\n        ButtonCheck     : ButtonCheck,\n        ButtonMenu      : ButtonMenu\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-buttons.js","/** Base class for options based ui elements **/\ndefine([ 'utils/utils', 'mvc/ui/ui-buttons' ], function( Utils, Buttons ) {\nvar Base = Backbone.View.extend({\n    initialize: function( options ) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model({\n            visible     : true,\n            data        : [],\n            id          : Utils.uid(),\n            error_text  : 'No options available.',\n            wait_text   : 'Please wait...',\n            multiple    : false,\n            optional    : false,\n            onchange    : function(){}\n        }).set( options );\n        this.listenTo( this.model, 'change:value', this._changeValue, this );\n        this.listenTo( this.model, 'change:wait', this._changeWait, this );\n        this.listenTo( this.model, 'change:data', this._changeData, this );\n        this.listenTo( this.model, 'change:visible', this._changeVisible, this );\n        this.on( 'change', function() { self.model.get( 'onchange' )( self.value() ) } );\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.$el.empty()\n                .removeClass()\n                .addClass( 'ui-options' )\n                .append( this.$message   = $( '<div/>' ) )\n                .append( this.$menu      = $( '<div/>' ).addClass( 'ui-options-menu' ) )\n                .append( this.$options   = $( this._template() ) );\n\n        // add select/unselect all button\n        this.all_button = null;\n        if ( this.model.get( 'multiple' ) ) {\n            this.all_button = new Buttons.ButtonCheck({\n                onclick: function() {\n                    self.$( 'input' ).prop( 'checked', self.all_button.value() !== 0 );\n                    self.value( self._getValue() );\n                    self.trigger( 'change' );\n                }\n            });\n            this.$menu.append( this.all_button.$el );\n        }\n\n        // finalize dom\n        this._changeData();\n        this._changeWait();\n        this._changeVisible();\n    },\n\n    /** Update available options */\n    update: function( options ) {\n        this.model.set( 'data', options );\n    },\n\n    _changeData: function() {\n        var self = this;\n        this.$options.empty();\n        if ( this._templateOptions ) {\n            this.$options.append( this._templateOptions( this.model.get( 'data' ) ) );\n        } else {\n            _.each( this.model.get( 'data' ), function( option ) {\n                self.$options.append( $( self._templateOption( option ) )\n                                        .addClass( 'ui-option' )\n                                        .tooltip( { title: option.tooltip, placement: 'bottom' } ) );\n            });\n        }\n        var self = this;\n        this.$( 'input' ).on( 'change', function() {\n            self.value( self._getValue() );\n            self.trigger( 'change' );\n        });\n        this._changeValue();\n        this._changeWait();\n    },\n\n    _changeVisible: function() {\n        this.$el[ this.model.get( 'visible' ) ? 'show' : 'hide' ]();\n    },\n\n    _changeWait: function() {\n        if ( this.model.get( 'wait' ) ) {\n            if ( this.length() === 0 ) {\n                this._messageShow( this.model.get( 'wait_text' ), 'info' );\n                this.$options.hide();\n                this.$menu.hide();\n            }\n        } else {\n            if ( this.length() === 0 ) {\n                this._messageShow( this.model.get( 'error_text' ), 'danger' );\n                this.$options.hide();\n                this.$menu.hide();\n            } else {\n                this.$message.hide();\n                this.$options.css( 'display', 'inline-block' );\n                this.$menu.show();\n            }\n        }\n    },\n\n    _changeValue: function() {\n        this._setValue( this.model.get( 'value' ) );\n        if ( this._getValue() === null && !this.model.get( 'multiple' ) && !this.model.get( 'optional' ) ) {\n            this._setValue( this.first() );\n        }\n        this.all_button && this.all_button.value( $.isArray( this._getValue() ) ? this._getValue().length : 0, this.length() );\n    },\n\n    /** Return/Set current selection */\n    value: function ( new_value ) {\n        new_value !== undefined && this.model.set( 'value', new_value );\n        return this._getValue();\n    },\n\n    /** Return first available option */\n    first: function() {\n        var options = this.$( 'input' ).first();\n        return options.length > 0 ? options.val() : null;\n    },\n\n    /** Show a spinner indicating that the select options are currently loaded */\n    wait: function() {\n        this.model.set( 'wait', true );\n    },\n\n    /** Hide spinner indicating that the request has been completed */\n    unwait: function() {\n        this.model.set( 'wait', false );\n    },\n\n    /** Returns the number of options */\n    length: function() {\n        return this.$( '.ui-option' ).length;\n    },\n\n    /** Set value to dom */\n    _setValue: function( new_value ) {\n        var self = this;\n        if ( new_value !== undefined ) {\n            this.$( 'input' ).prop( 'checked', false );\n            if ( new_value !== null ) {\n                var values = $.isArray( new_value ) ? new_value : [ new_value ];\n                _.each( values, function( v ) {\n                    self.$( 'input[value=\"' + v + '\"]' ).first().prop( 'checked', true );\n                });\n            }\n        }\n    },\n\n    /** Return current selection */\n    _getValue: function() {\n        var selected = [];\n        this.$( ':checked' ).each( function() {\n            selected.push( $( this ).val() );\n        });\n        if ( Utils.isEmpty( selected ) ) {\n            return null;\n        }\n        return this.model.get( 'multiple' ) ? selected : selected[ 0 ];\n    },\n\n    /** Show message instead if options */\n    _messageShow: function( text, status ) {\n        this.$message.show()\n                     .removeClass()\n                     .addClass( 'ui-message alert alert-' + status )\n                     .html( text );\n    },\n\n    /** Main template function */\n    _template: function() {\n        return $( '<div/>' ).addClass( 'ui-options-list' );\n    }\n});\n\n/** Iconized **/\nvar BaseIcons = Base.extend({\n    _templateOption: function( pair ) {\n        var id = Utils.uid();\n        return  $( '<div/>' ).addClass( 'ui-option' )\n                    .append( $( '<input/>' ).attr( {\n                        id      : id,\n                        type    : this.model.get( 'type' ),\n                        name    : this.model.id,\n                        value   : pair.value } ) )\n                    .append( $( '<label/>' ).addClass( 'ui-options-label' )\n                                            .attr( 'for', id )\n                                            .html( pair.label ) );\n    }\n});\n\n/** Radio button field **/\nvar Radio = {};\nRadio.View = BaseIcons.extend({\n    initialize: function( options ) {\n        options.type = 'radio';\n        BaseIcons.prototype.initialize.call( this, options );\n    }\n});\n\n/** Checkbox options field **/\nvar Checkbox = {};\nCheckbox.View = BaseIcons.extend({\n    initialize: function( options ) {\n        options.type = 'checkbox';\n        options.multiple = true;\n        BaseIcons.prototype.initialize.call( this, options );\n    }\n});\n\n/** Radio button options field styled as classic buttons **/\nvar RadioButton = {};\nRadioButton.View = Base.extend({\n    initialize: function( options ) {\n        Base.prototype.initialize.call( this, options );\n    },\n\n    /** Set current value */\n    _setValue: function ( new_value ) {\n        if ( new_value !== undefined ) {\n            this.$( 'input' ).prop( 'checked', false );\n            this.$( 'label' ).removeClass( 'active' );\n            this.$( '[value=\"' + new_value + '\"]' ).prop( 'checked', true ).closest( 'label' ).addClass( 'active' );\n        }\n    },\n\n    /** Template for a single option */\n    _templateOption: function( pair ) {\n        var $el =  $( '<label/>' ).addClass( 'btn btn-default' );\n        pair.icon && $el.append( $( '<i/>' ).addClass( 'fa' ).addClass( pair.icon ).addClass( !pair.label && 'no-padding' ) );\n        $el.append( $( '<input/>' ).attr( { type: 'radio', name: this.model.id, value: pair.value } ) );\n        pair.label && $el.append( pair.label );\n        return $el;\n    },\n\n    /** Main template function */\n    _template: function() {\n        return $( '<div/>' ).addClass( 'btn-group ui-radiobutton' ).attr( 'data-toggle', 'buttons' );\n    }\n});\n\nreturn {\n    Base        : Base,\n    BaseIcons   : BaseIcons,\n    Radio       : Radio,\n    RadioButton : RadioButton,\n    Checkbox    : Checkbox\n};\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-options.js","/**\n *  This class creates/wraps a default html select field as backbone class.\n */\ndefine([ 'utils/utils', 'mvc/ui/ui-buttons' ], function( Utils, Buttons ) {\nvar View = Backbone.View.extend({\n    initialize: function( options ) {\n        var self = this;\n        this.data  = [];\n        this.data2 = [];\n        this.model = options && options.model || new Backbone.Model({\n            id          : Utils.uid(),\n            cls         : 'ui-select',\n            error_text  : 'No options available',\n            empty_text  : 'Nothing selected',\n            visible     : true,\n            wait        : false,\n            multiple    : false,\n            searchable  : true,\n            optional    : false,\n            disabled    : false,\n            onchange    : function(){},\n            value       : null,\n            selectall   : true,\n            pagesize    : 20\n        }).set( options );\n        this.on( 'change', function() { self.model.get( 'onchange' ) && self.model.get( 'onchange' )( self.value() ) } );\n        this.listenTo( this.model, 'change:data', this._changeData, this );\n        this.listenTo( this.model, 'change:disabled', this._changeDisabled, this );\n        this.listenTo( this.model, 'change:wait', this._changeWait, this );\n        this.listenTo( this.model, 'change:visible', this._changeVisible, this );\n        this.listenTo( this.model, 'change:value', this._changeValue, this );\n        this.listenTo( this.model, 'change:multiple change:searchable change:cls change:id', this.render, this );\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.model.get( 'searchable' ) ? this._renderSearchable() : this._renderClassic();\n        this.$el.addClass( this.model.get( 'cls' ) )\n                .attr( 'id', this.model.get( 'id' ) );\n        this.$select.empty().addClass( 'select' )\n                    .attr( 'id', this.model.get( 'id' ) + '_select' )\n                    .prop( 'multiple', this.model.get( 'multiple' ) )\n                    .on( 'change', function() {\n                        self.value( self._getValue() );\n                        self.trigger( 'change' );\n                    });\n        this._changeData();\n        this._changeWait();\n        this._changeVisible();\n        this._changeDisabled();\n    },\n\n    /** Renders the classic selection field */\n    _renderClassic: function() {\n        var self = this;\n        this.$el.addClass( this.model.get( 'multiple' ) ? 'ui-select-multiple' : 'ui-select' )\n                .append( this.$select      = $( '<select/>' ) )\n                .append( this.$dropdown    = $( '<div/>' ) )\n                .append( this.$resize      = $( '<div/>' )\n                .append( this.$resize_icon = $( '<i/>' ) ) );\n        if ( this.model.get( 'multiple' ) ) {\n            this.$dropdown.hide();\n            this.$resize_icon.addClass( 'fa fa-angle-double-right fa-rotate-45' ).show();\n            this.$resize.removeClass()\n                        .addClass( 'icon-resize' )\n                        .show()\n                        .off( 'mousedown' ).on( 'mousedown', function( event ) {\n                            var currentY = event.pageY;\n                            var currentHeight = self.$select.height();\n                            self.minHeight = self.minHeight || currentHeight;\n                            $( '#dd-helper' ).show().on( 'mousemove', function( event ) {\n                                self.$select.height( Math.max( currentHeight + ( event.pageY - currentY ), self.minHeight ) );\n                            }).on( 'mouseup mouseleave', function() {\n                                $( '#dd-helper' ).hide().off();\n                            });\n                        });\n        } else {\n            this.$dropdown.show();\n            this.$resize.hide();\n            this.$resize_icon.hide();\n        }\n    },\n\n    /** Renders the default select2 field */\n    _renderSearchable: function() {\n        var self = this;\n        this.$el.append( this.$select   = $( '<div/>' ) )\n                .append( this.$dropdown = $( '<div/>' ) );\n        this.$dropdown.hide();\n        if ( !this.model.get( 'multiple' ) ) {\n            this.$dropdown.show().on( 'click', function() {\n                self.$select.select2 && self.$select.select2( 'open' );\n            });\n        }\n        this.all_button = null;\n        if ( this.model.get( 'multiple' ) && this.model.get( 'selectall' ) ) {\n            this.all_button = new Buttons.ButtonCheck({\n                onclick: function() {\n                    var new_value = [];\n                    self.all_button.value() !== 0 && _.each( self.model.get( 'data' ), function( option ) {\n                        new_value.push( option.value );\n                    });\n                    self.value( new_value );\n                    self.trigger( 'change' );\n                }\n            });\n            this.$el.prepend( this.all_button.$el );\n        }\n    },\n\n    /** Matches a search term with a given text */\n    _match: function( term, text ) {\n        return !term || term == '' || String( text ).toUpperCase().indexOf( term.toUpperCase() ) >= 0\n    },\n\n    /** Updates the selection options */\n    _changeData: function() {\n        var self = this;\n        this.data = [];\n        if ( !this.model.get( 'multiple' ) && this.model.get( 'optional' ) ) {\n            this.data.push( { value: '__null__', label: self.model.get( 'empty_text' ) } );\n        }\n        _.each( this.model.get( 'data' ), function( option ) {\n            self.data.push( option );\n        });\n        if ( this.length() == 0 ) {\n            this.data.push( { value: '__null__', label: this.model.get( 'error_text' ) } );\n        }\n        if ( this.model.get( 'searchable' ) ) {\n            this.data2 = [];\n            _.each( this.data, function( option, index ) {\n                self.data2.push( { order: index, id: option.value, text: option.label, tags: option.tags } );\n            });\n            this.$select.data( 'select2' ) && this.$select.select2( 'destroy' );\n            this.matched_tags = {};\n            this.$select.select2({\n                data            : self.data2,\n                closeOnSelect   : !this.model.get( 'multiple' ),\n                multiple        : this.model.get( 'multiple' ),\n                query           : function( q ) {\n                    self.matched_tags = {};\n                    var pagesize = self.model.get( 'pagesize' );\n                    var results = _.filter( self.data2, function ( e ) {\n                        var found = false;\n                        _.each( e.tags, function( tag ) {\n                            if ( self._match( q.term, tag ) ) {\n                                found = self.matched_tags[ tag ] = true;\n                            }\n                        });\n                        return found || self._match( q.term, e.text );\n                    });\n                    q.callback({\n                        results: results.slice( ( q.page - 1 ) * pagesize, q.page * pagesize ),\n                        more   : results.length >= q.page * pagesize\n                    });\n                },\n                formatResult    : function( result ) {\n                    return _.escape( result.text ) +\n                        '<div class=\"ui-tags\">' +\n                            _.reduce( result.tags, function( memo, tag ) {\n                                if ( self.matched_tags[ tag ] ) {\n                                    return memo + '&nbsp;' +\n                                        '<div class=\"label label-info\">' +\n                                            _.escape( tag ) +\n                                        '</div>'\n                                }\n                                return memo;\n                            }, '' ) +\n                        '</div>';\n                }\n            });\n            this.$( '.select2-container .select2-search input' ).off( 'blur' );\n        } else {\n            this.$select.find( 'option' ).remove();\n            _.each( this.data, function( option ) {\n                self.$select.append( $( '<option/>' ).attr( 'value', option.value ).html( _.escape( option.label ) ) );\n            });\n        }\n        this.model.set( 'disabled', this.length() == 0 );\n        this._changeValue();\n    },\n\n    /** Handles field enabling/disabling, usually used when no options are available */\n    _changeDisabled: function() {\n        if ( this.model.get( 'searchable' ) ) {\n            this.$select.select2( this.model.get( 'disabled' ) ? 'disable' : 'enable' );\n        } else {\n            this.$select.prop( 'disabled', this.model.get( 'disabled' ) );\n        }\n    },\n\n    /** Searchable fields may display a spinner e.g. while waiting for a server response */\n    _changeWait: function() {\n        this.$dropdown.removeClass()\n                      .addClass( 'icon-dropdown fa' )\n                      .addClass( this.model.get( 'wait' ) ? 'fa-spinner fa-spin' : 'fa-caret-down' );\n    },\n\n    /** Handles field visibility */\n    _changeVisible: function() {\n        this.$el[ this.model.get( 'visible' ) ? 'show' : 'hide' ]();\n        this.$select[ this.model.get( 'visible' ) ? 'show' : 'hide' ]();\n    },\n\n    /** Synchronizes the model value with the actually selected field value */\n    _changeValue: function() {\n        this._setValue( this.model.get( 'value' ) );\n        if ( this.model.get( 'multiple' ) ) {\n            if ( this.all_button ) {\n                var value = this._getValue();\n                this.all_button.value( $.isArray( value ) ? value.length : 0, this.length() );\n            }\n        } else if ( this._getValue() === null && !this.model.get( 'optional' ) ) {\n            this._setValue( this.first() );\n        }\n    },\n\n    /** Return/Set current selection */\n    value: function ( new_value ) {\n        new_value !== undefined && this.model.set( 'value', new_value );\n        return this._getValue();\n    },\n\n    /** Return the first select option */\n    first: function() {\n        return this.data.length > 0 ? this.data[ 0 ].value : null;\n    },\n\n    /** Check if a value is an existing option */\n    exists: function( value ) {\n        return _.findWhere( this.data, { value: value } );\n    },\n\n    /** Return the label/text of the current selection */\n    text: function () {\n        var v = this._getValue();\n        var d = this.exists( $.isArray( v ) ? v[ 0 ] : v );\n        return d ? d.label : '';\n    },\n\n    /** Show the select field */\n    show: function() {\n        this.model.set( 'visible', true );\n    },\n\n    /** Hide the select field */\n    hide: function() {\n        this.model.set( 'visible', false );\n    },\n\n    /** Show a spinner indicating that the select options are currently loaded */\n    wait: function() {\n        this.model.set( 'wait', true );\n    },\n\n    /** Hide spinner indicating that the request has been completed */\n    unwait: function() {\n        this.model.set( 'wait', false );\n    },\n\n    /** Returns true if the field is disabled */\n    disabled: function() {\n        return this.model.get( 'disabled' );\n    },\n\n    /** Enable the select field */\n    enable: function() {\n        this.model.set( 'disabled', false );\n    },\n\n    /** Disable the select field */\n    disable: function() {\n        this.model.set( 'disabled', true );\n    },\n\n    /** Update all available options at once */\n    add: function( options, sorter ) {\n        _.each( this.model.get( 'data' ), function( v ) {\n            v.keep && !_.findWhere( options, { value: v.value } ) && options.push( v );\n        });\n        sorter && options && options.sort( sorter );\n        this.model.set( 'data', options );\n    },\n\n    /** Update available options */\n    update: function( options ) {\n        this.model.set( 'data', options );\n    },\n\n    /** Set the custom onchange callback function */\n    setOnChange: function( callback ) {\n        this.model.set( 'onchange', callback );\n    },\n\n    /** Number of available options */\n    length: function() {\n        return $.isArray( this.model.get( 'data' ) ) ? this.model.get( 'data' ).length : 0;\n    },\n\n    /** Set value to dom */\n    _setValue: function( new_value ) {\n        var self = this;\n        if( new_value === null || new_value === undefined ) {\n            new_value = '__null__';\n        }\n        if ( this.model.get( 'multiple' ) ) {\n            new_value = $.isArray( new_value ) ? new_value : [ new_value ];\n        } else if ( $.isArray( new_value ) ) {\n            if ( new_value.length > 0 ) {\n                new_value = new_value[ 0 ];\n            } else {\n                new_value = '__null__';\n            }\n        }\n        if ( this.model.get( 'searchable' ) ) {\n            if ( $.isArray( new_value ) ) {\n                val = [];\n                _.each( new_value, function( v ) {\n                    var d = _.findWhere( self.data2, { id: v } );\n                    d && val.push( d );\n                });\n                new_value = val;\n            } else {\n                var d = _.findWhere( this.data2, { id: new_value } );\n                new_value = d;\n            }\n            this.$select.select2( 'data', new_value );\n        } else {\n            this.$select.val( new_value );\n        }\n    },\n\n    /** Get value from dom */\n    _getValue: function() {\n        var val = null;\n        if ( this.model.get( 'searchable' ) ) {\n            var selected = this.$select.select2( 'data' );\n            if ( selected ) {\n                if ( $.isArray( selected ) ) {\n                    val = [];\n                    selected.sort( function( a, b ) { return a.order - b.order } );\n                    _.each( selected, function( v ) { val.push( v.id ) } );\n                } else {\n                    val = selected.id;\n                }\n            }\n        } else {\n            val = this.$select.val();\n        }\n        return Utils.isEmpty( val ) ? null : val;\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-default.js","/** This class creates/wraps a drill down element. */\ndefine([ 'utils/utils', 'mvc/ui/ui-options' ], function( Utils, Options ) {\n\nvar View = Options.BaseIcons.extend({\n    initialize: function( options ) {\n        options.type     = options.display || 'checkbox';\n        options.multiple = ( options.type == 'checkbox' );\n        Options.BaseIcons.prototype.initialize.call( this, options );\n    },\n\n    /** Set states for selected values */\n    _setValue: function ( new_value ) {\n        Options.BaseIcons.prototype._setValue.call( this, new_value );\n        if ( new_value !== undefined && new_value !== null && this.header_index ) {\n            var self = this;\n            var values = $.isArray( new_value ) ? new_value : [ new_value ];\n            _.each( values, function( v ) {\n                var list = self.header_index[ v ];\n                _.each( list, function( element ) {\n                    self._setState( element, true );\n                });\n            });\n        }\n    },\n\n    /** Expand/collapse a sub group */\n    _setState: function ( header_id, is_expanded ) {\n        var $button = this.$( '.button-' + header_id );\n        var $subgroup = this.$( '.subgroup-' + header_id );\n        $button.data( 'is_expanded', is_expanded );\n        if ( is_expanded ) {\n            $subgroup.show();\n            $button.removeClass( 'fa-plus-square' ).addClass( 'fa-minus-square' );\n        } else {\n            $subgroup.hide();\n            $button.removeClass( 'fa-minus-square' ).addClass( 'fa-plus-square' );\n        }\n    },\n\n    /** Template to create options tree */\n    _templateOptions: function() {\n        var self = this;\n        this.header_index = {};\n\n        // attach event handler\n        function attach( $el, header_id ) {\n            var $button = $el.find( '.button-' + header_id );\n            $button.on( 'click', function() {\n                self._setState( header_id, !$button.data( 'is_expanded' ) );\n            });\n        }\n\n        // recursive function which iterates through options\n        function iterate ( $tmpl, options, header ) {\n            header = header || [];\n            for ( i in options ) {\n                var level = options[ i ];\n                var has_options = level.options && level.options.length > 0;\n                var new_header = header.slice( 0 );\n                self.header_index[ level.value ] = new_header.slice( 0 );\n                var $group = $( '<div/>' );\n                if ( has_options ) {\n                    var header_id = Utils.uid();\n                    var $button = $( '<span/>' ).addClass( 'button-' + header_id ).addClass( 'ui-drilldown-button fa fa-plus-square' );\n                    var $subgroup = $( '<div/>' ).addClass( 'subgroup-' + header_id ).addClass( 'ui-drilldown-subgroup' );\n                    $group.append( $( '<div/>' )\n                                        .append( $button )\n                                        .append( self._templateOption( { label: level.name, value: level.value } ) ) );\n                    new_header.push( header_id );\n                    iterate ( $subgroup, level.options, new_header );\n                    $group.append( $subgroup );\n                    attach( $group, header_id );\n                } else {\n                    $group.append( self._templateOption( { label: level.name, value: level.value } ) );\n                }\n                $tmpl.append( $group );\n            }\n        }\n\n        // iterate through options and create dom\n        var $tmpl = $( '<div/>' );\n        iterate( $tmpl, this.model.get( 'data' ) );\n        return $tmpl;\n    },\n\n    /** Template for drill down view */\n    _template: function() {\n        return $( '<div/>' ).addClass( 'ui-options-list drilldown-container' ).attr( 'id', this.model.id );\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-drilldown.js","define([ 'utils/utils' ], function( Utils ) {\n    var View = Backbone.View.extend({\n        initialize : function( options ) {\n            var self = this;\n            this.model = options && options.model || new Backbone.Model({\n                id       : Utils.uid(),\n                min      : null,\n                max      : null,\n                step     : null,\n                precise  : false,\n                split    : 10000,\n                value    : null,\n                onchange : function(){}\n            }).set( options );\n\n            // create new element\n            this.setElement( this._template() );\n            this.$el.attr( 'id', this.model.id );\n            this.$text   = this.$( '.ui-form-slider-text' );\n            this.$slider = this.$( '.ui-form-slider-element' );\n\n            // add text field event\n            var pressed = [];\n            this.$text.on( 'change', function () {\n                self.value( $( this ).val() );\n            }).on( 'keyup', function( e ) {\n                pressed[e.which] = false;\n            }).on( 'keydown', function ( e ) {\n                var v = e.which;\n                pressed[ v ] = true;\n                if ( self.model.get( 'is_workflow' ) && pressed[ 16 ] && v == 52 ) {\n                    self.value( '$' );\n                    event.preventDefault();\n                } else if (!( v == 8 || v == 9 || v == 13 || v == 37 || v == 39 || ( v >= 48 && v <= 57 && !pressed[ 16 ] ) || ( v >= 96 && v <= 105 )\n                    || ( ( v == 190 || v == 110 ) && $( this ).val().indexOf( '.' ) == -1 && self.model.get( 'precise' ) )\n                    || ( ( v == 189 || v == 109 ) && $( this ).val().indexOf( '-' ) == -1 )\n                    || self._isParameter( $( this ).val() )\n                    || pressed[ 91 ] || pressed[ 17 ] ) ) {\n                    event.preventDefault();\n                }\n            });\n\n            // build slider, cannot be rebuild in render\n            var opts = this.model.attributes;\n            this.has_slider = opts.max !== null && opts.min !== null && opts.max > opts.min;\n            var step = opts.step;\n            if ( !step ) {\n                if ( opts.precise && this.has_slider ) {\n                    step = ( opts.max - opts.min ) / opts.split;\n                } else {\n                    step = 1.0;\n                }\n            }\n            if ( this.has_slider ) {\n                this.$text.addClass( 'ui-form-slider-left' );\n                this.$slider.slider( { min: opts.min, max: opts.max, step: step } )\n                            .on( 'slide', function ( event, ui ) { self.value( ui.value ) } );\n            } else {\n                this.$slider.hide();\n            }\n\n            // add listeners\n            this.listenTo( this.model, 'change', this.render, this );\n            this.render();\n        },\n\n        render: function() {\n            var value = this.model.get( 'value' );\n            this.has_slider && this.$slider.slider( 'value', value );\n            value !== this.$text.val() && this.$text.val( value );\n        },\n\n        /** Set and return the current value */\n        value : function ( new_val ) {\n            var options = this.model.attributes;\n            if ( new_val !== undefined ) {\n                if ( new_val !== null && new_val !== '' && !this._isParameter( new_val ) ) {\n                    isNaN( new_val ) && ( new_val = 0 );\n                    !options.precise && ( new_val = Math.round( new_val ) );\n                    options.max !== null && ( new_val = Math.min( new_val, options.max ) );\n                    options.min !== null && ( new_val = Math.max( new_val, options.min ) );\n                }\n                this.model.set( 'value', new_val );\n                this.model.trigger( 'change' );\n                options.onchange( new_val );\n            }\n            return this.model.get( 'value' );\n        },\n\n        /** Return true if the field contains a workflow parameter i.e. $('name') */\n        _isParameter: function( value ) {\n            return this.model.get( 'is_workflow' ) && String( value ).substring( 0, 1 ) === '$';\n        },\n\n        /** Slider template */\n        _template: function() {\n            return  '<div class=\"ui-form-slider\">' +\n                        '<input class=\"ui-form-slider-text\" type=\"text\"/>' +\n                        '<div class=\"ui-form-slider-element\"/>' +\n                    '</div>';\n        }\n    });\n\n    return {\n        View : View\n    };\n});\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-slider.js","var _l = require( 'utils/localization' );\n\nvar AdminPanel = Backbone.View.extend({\n    initialize: function( page, options ) {\n        var self = this;\n        this.page       = page;\n        this.root       = options.root;\n        this.config     = options.config;\n        this.settings   = options.settings;\n        this.message    = options.message;\n        this.status     = options.status;\n        this.model = new Backbone.Model({\n            title   : _l( 'Administration' )\n        });\n        this.categories = new Backbone.Collection([{\n            title : 'Server',\n            items : [ {\n                title   : 'Data types registry',\n                url     : 'admin/view_datatypes_registry'\n            },{\n                title   : 'Data tables registry',\n                url     : 'admin/view_tool_data_tables'\n            },{\n                title   : 'Display applications',\n                url     : 'admin/display_applications'\n            },{\n                title   : 'Manage jobs',\n                url     : 'admin/jobs'\n            } ]\n        },{\n            title : 'Tools and Tool Shed',\n            items : [ {\n                title   : 'Search Tool Shed',\n                url     : 'admin_toolshed/browse_tool_sheds',\n                enabled : self.settings.is_tool_shed_installed\n            },{\n                title   : 'Search Tool Shed (Beta)',\n                url     : 'admin_toolshed/browse_toolsheds',\n                enabled : self.settings.is_tool_shed_installed && self.config.enable_beta_ts_api_install\n            },{\n                title   : 'Monitor installing repositories',\n                url     : 'admin_toolshed/monitor_repository_installation?installing_repository_ids=' + self.settings.installing_repository_ids,\n                enabled : self.settings.installing_repository_ids\n            },{\n                title   : 'Manage installed tools',\n                url     : 'admin_toolshed/browse_repositories',\n                enabled : self.settings.is_repo_installed\n            },{\n                title   : 'Reset metadata',\n                url     : 'admin_toolshed/reset_metadata_on_selected_installed_repositories',\n                enabled : self.settings.is_repo_installed\n            },{\n                title   : 'Download local tool',\n                url     : 'admin/package_tool'\n            },{\n                title   : 'Tool lineage',\n                url     : 'admin/tool_versions'\n            },{\n                title   : 'Reload a tool\\'s configuration',\n                url     : 'admin/reload_tool'\n            },{\n                title   : 'Review tool migration stages',\n                url     : 'admin/review_tool_migration_stages'\n            },{\n                title   : 'View Tool Error Logs',\n                url     : 'admin/tool_errors'\n            },{\n                title   : 'Manage Display Whitelist',\n                url     : 'admin/sanitize_whitelist'\n            },{\n                title   : 'Manage Tool Dependencies',\n                url     : 'admin/manage_tool_dependencies'\n            } ]\n        },{\n            title : 'User Management',\n            items : [ {\n                title   : 'Users',\n                url     : 'admin/users'\n            },{\n                title   : 'Groups',\n                url     : 'admin/groups'\n            },{\n                title   : 'Roles',\n                url     : 'admin/roles'\n            },{\n                title   : 'API keys',\n                url     : 'userskeys/all_users'\n            },{\n                title   : 'Impersonate a user',\n                url     : 'admin/impersonate',\n                enabled : self.config.allow_user_impersonation\n            } ]\n        },{\n            title : 'Data',\n            items : [ {\n                title   : 'Quotas',\n                url     : 'admin/quotas',\n                enabled : self.config.enable_quotas\n            },{\n                title   : 'Data libraries',\n                url     : 'library_admin/browse_libraries'\n            },{\n                title   : 'Roles',\n                url     : 'admin/roles'\n            },{\n                title   : 'Local data',\n                url     : 'data_manager'\n            } ]\n        },{\n            title : 'Form Definitions',\n            items : [ {\n                title   : 'Form definitions',\n                url     : 'forms/browse_form_definitions'\n            } ]\n        },{\n            title : 'Sample Tracking',\n            items : [ {\n                title   : 'Sequencers and external services',\n                url     : 'external_service/browse_external_services'\n            },{\n                title   : 'Request types',\n                url     : 'request_type/browse_request_types'\n            },{\n                title   : 'Sequencing requests',\n                url     : 'requests_admin/browse_requests'\n            },{\n                title   : 'Find samples',\n                url     : 'requests_common/find_samples?cntrller=requests_admin'\n            } ]\n        }]);\n        this.setElement( this._template() );\n    },\n\n    render : function() {\n        var self = this;\n        this.$el.empty();\n        this.categories.each( function( category ) {\n            var $section = $( self._templateSection( category.attributes ) );\n            var $entries = $section.find( '.ui-side-section-body' );\n            _.each( category.get( 'items' ), function( item ) {\n                if ( item.enabled === undefined || item.enabled ) {\n                    $entries.append( $( '<div/>' ).addClass( 'ui-side-section-body-title' )\n                                                  .append( $( '<a/>' ).attr({\n                                                                href    : self.root + item.url,\n                                                                target  : 'galaxy_main' }).text( _l( item.title ) ) ) );\n                }\n            });\n            self.$el.append( $section );\n        });\n        this.page.$( '#galaxy_main' ).prop( 'src', this.root + 'admin/center?message=' + this.message + '&status=' + this.status );\n    },\n\n    _templateSection : function( options ) {\n        return [\n            '<div>',\n                '<div class=\"ui-side-section-title\">' + _l( options.title ) + '</div>',\n                '<div class=\"ui-side-section-body\"/>',\n            '</div>'\n        ].join('');\n    },\n\n    _template : function() {\n        return '<div class=\"ui-side-panel\"/>';\n    },\n\n    toString : function() { return 'adminPanel' }\n});\n\nmodule.exports = AdminPanel;\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/panels/admin-panel.js"],"sourceRoot":""}