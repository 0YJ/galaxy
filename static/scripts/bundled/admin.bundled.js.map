{"version":3,"sources":["webpack:///admin.bundled.js","webpack:///./galaxy/scripts/apps/admin.js","webpack:///./galaxy/scripts/apps/panels/admin-panel.js"],"names":["webpackJsonp","111","module","exports","__webpack_require__","_","jQuery","$","GalaxyApp","AdminPanel","Page","window","app","options","bootstrapped","Galaxy","debug","params","config","extend","active_view","page","View","Left","call","81","Backbone","_l","initialize","self","this","root","settings","message","status","model","Model","title","categories","Collection","items","url","enabled","is_tool_shed_installed","enable_beta_ts_api_install","installing_repository_ids","is_repo_installed","allow_user_impersonation","enable_quotas","setElement","_template","render","$el","empty","each","category","$section","_templateSection","attributes","$entries","find","get","item","undefined","append","addClass","attr","href","target","text","prop","join","toString"],"mappings":"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","file":"admin.bundled.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 111:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nvar jQuery = __webpack_require__(0),\n    $ = jQuery,\n    GalaxyApp = __webpack_require__(12).GalaxyApp,\n    AdminPanel = __webpack_require__(81),\n    Page = __webpack_require__(13);\n\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new GalaxyApp(options, bootstrapped);\n    Galaxy.debug('admin app');\n    Galaxy.params = Galaxy.config.params;\n    $(function () {\n        _.extend(options.config, { active_view: 'admin' });\n        Galaxy.page = new Page.View(_.extend(options, {\n            Left: AdminPanel\n        }));\n    });\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 81:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nvar _l = __webpack_require__(4);\n\nvar AdminPanel = Backbone.View.extend({\n    initialize: function initialize(page, options) {\n        var self = this;\n        this.page = page;\n        this.root = options.root;\n        this.config = options.config;\n        this.settings = options.settings;\n        this.message = options.message;\n        this.status = options.status;\n        this.model = new Backbone.Model({\n            title: _l('Administration')\n        });\n        this.categories = new Backbone.Collection([{\n            title: 'Server',\n            items: [{\n                title: 'Data types registry',\n                url: 'admin/view_datatypes_registry'\n            }, {\n                title: 'Data tables registry',\n                url: 'admin/view_tool_data_tables'\n            }, {\n                title: 'Display applications',\n                url: 'admin/display_applications'\n            }, {\n                title: 'Manage jobs',\n                url: 'admin/jobs'\n            }]\n        }, {\n            title: 'Tools and Tool Shed',\n            items: [{\n                title: 'Search Tool Shed',\n                url: 'admin_toolshed/browse_tool_sheds',\n                enabled: self.settings.is_tool_shed_installed\n            }, {\n                title: 'Search Tool Shed (Beta)',\n                url: 'admin_toolshed/browse_toolsheds',\n                enabled: self.settings.is_tool_shed_installed && self.config.enable_beta_ts_api_install\n            }, {\n                title: 'Monitor installing repositories',\n                url: 'admin_toolshed/monitor_repository_installation?installing_repository_ids=' + self.settings.installing_repository_ids,\n                enabled: self.settings.installing_repository_ids\n            }, {\n                title: 'Manage installed tools',\n                url: 'admin_toolshed/browse_repositories',\n                enabled: self.settings.is_repo_installed\n            }, {\n                title: 'Reset metadata',\n                url: 'admin_toolshed/reset_metadata_on_selected_installed_repositories',\n                enabled: self.settings.is_repo_installed\n            }, {\n                title: 'Download local tool',\n                url: 'admin/package_tool'\n            }, {\n                title: 'Tool lineage',\n                url: 'admin/tool_versions'\n            }, {\n                title: 'Reload a tool\\'s configuration',\n                url: 'admin/reload_tool'\n            }, {\n                title: 'Review tool migration stages',\n                url: 'admin/review_tool_migration_stages'\n            }, {\n                title: 'View Tool Error Logs',\n                url: 'admin/tool_errors'\n            }, {\n                title: 'Manage Display Whitelist',\n                url: 'admin/sanitize_whitelist'\n            }, {\n                title: 'Manage Tool Dependencies',\n                url: 'admin/manage_tool_dependencies'\n            }]\n        }, {\n            title: 'User Management',\n            items: [{\n                title: 'Users',\n                url: 'admin/users'\n            }, {\n                title: 'Groups',\n                url: 'admin/groups'\n            }, {\n                title: 'Roles',\n                url: 'admin/roles'\n            }, {\n                title: 'API keys',\n                url: 'userskeys/all_users'\n            }, {\n                title: 'Impersonate a user',\n                url: 'admin/impersonate',\n                enabled: self.config.allow_user_impersonation\n            }]\n        }, {\n            title: 'Data',\n            items: [{\n                title: 'Quotas',\n                url: 'admin/quotas',\n                enabled: self.config.enable_quotas\n            }, {\n                title: 'Data libraries',\n                url: 'library_admin/browse_libraries'\n            }, {\n                title: 'Roles',\n                url: 'admin/roles'\n            }, {\n                title: 'Local data',\n                url: 'data_manager'\n            }]\n        }, {\n            title: 'Form Definitions',\n            items: [{\n                title: 'Form definitions',\n                url: 'forms/browse_form_definitions'\n            }]\n        }, {\n            title: 'Sample Tracking',\n            items: [{\n                title: 'Sequencers and external services',\n                url: 'external_service/browse_external_services'\n            }, {\n                title: 'Request types',\n                url: 'request_type/browse_request_types'\n            }, {\n                title: 'Sequencing requests',\n                url: 'requests_admin/browse_requests'\n            }, {\n                title: 'Find samples',\n                url: 'requests_common/find_samples?cntrller=requests_admin'\n            }]\n        }]);\n        this.setElement(this._template());\n    },\n\n    render: function render() {\n        var self = this;\n        this.$el.empty();\n        this.categories.each(function (category) {\n            var $section = $(self._templateSection(category.attributes));\n            var $entries = $section.find('.ui-side-section-body');\n            _.each(category.get('items'), function (item) {\n                if (item.enabled === undefined || item.enabled) {\n                    $entries.append($('<div/>').addClass('ui-side-section-body-title').append($('<a/>').attr({\n                        href: self.root + item.url,\n                        target: 'galaxy_main' }).text(_l(item.title))));\n                }\n            });\n            self.$el.append($section);\n        });\n        this.page.$('#galaxy_main').prop('src', this.root + 'admin/center?message=' + this.message + '&status=' + this.status);\n    },\n\n    _templateSection: function _templateSection(options) {\n        return ['<div>', '<div class=\"ui-side-section-title\">' + _l(options.title) + '</div>', '<div class=\"ui-side-section-body\"/>', '</div>'].join('');\n    },\n\n    _template: function _template() {\n        return '<div class=\"ui-side-panel\"/>';\n    },\n\n    toString: function toString() {\n        return 'adminPanel';\n    }\n});\n\nmodule.exports = AdminPanel;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ })\n\n},[111]);\n\n\n// WEBPACK FOOTER //\n// admin.bundled.js","var jQuery = require( 'jquery' ),\n    $ = jQuery,\n    GalaxyApp = require( 'galaxy' ).GalaxyApp,\n    AdminPanel = require( './panels/admin-panel' ),\n    Page = require( 'layout/page' );\n\nwindow.app = function app( options, bootstrapped ){\n    window.Galaxy = new GalaxyApp( options, bootstrapped );\n    Galaxy.debug( 'admin app' );\n    Galaxy.params = Galaxy.config.params;\n    $(function(){\n        _.extend( options.config, { active_view : 'admin' } );\n        Galaxy.page = new Page.View( _.extend( options, {\n            Left : AdminPanel\n        } ) );\n    });\n};\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/admin.js","var _l = require( 'utils/localization' );\n\nvar AdminPanel = Backbone.View.extend({\n    initialize: function( page, options ) {\n        var self = this;\n        this.page       = page;\n        this.root       = options.root;\n        this.config     = options.config;\n        this.settings   = options.settings;\n        this.message    = options.message;\n        this.status     = options.status;\n        this.model = new Backbone.Model({\n            title   : _l( 'Administration' )\n        });\n        this.categories = new Backbone.Collection([{\n            title : 'Server',\n            items : [ {\n                title   : 'Data types registry',\n                url     : 'admin/view_datatypes_registry'\n            },{\n                title   : 'Data tables registry',\n                url     : 'admin/view_tool_data_tables'\n            },{\n                title   : 'Display applications',\n                url     : 'admin/display_applications'\n            },{\n                title   : 'Manage jobs',\n                url     : 'admin/jobs'\n            } ]\n        },{\n            title : 'Tools and Tool Shed',\n            items : [ {\n                title   : 'Search Tool Shed',\n                url     : 'admin_toolshed/browse_tool_sheds',\n                enabled : self.settings.is_tool_shed_installed\n            },{\n                title   : 'Search Tool Shed (Beta)',\n                url     : 'admin_toolshed/browse_toolsheds',\n                enabled : self.settings.is_tool_shed_installed && self.config.enable_beta_ts_api_install\n            },{\n                title   : 'Monitor installing repositories',\n                url     : 'admin_toolshed/monitor_repository_installation?installing_repository_ids=' + self.settings.installing_repository_ids,\n                enabled : self.settings.installing_repository_ids\n            },{\n                title   : 'Manage installed tools',\n                url     : 'admin_toolshed/browse_repositories',\n                enabled : self.settings.is_repo_installed\n            },{\n                title   : 'Reset metadata',\n                url     : 'admin_toolshed/reset_metadata_on_selected_installed_repositories',\n                enabled : self.settings.is_repo_installed\n            },{\n                title   : 'Download local tool',\n                url     : 'admin/package_tool'\n            },{\n                title   : 'Tool lineage',\n                url     : 'admin/tool_versions'\n            },{\n                title   : 'Reload a tool\\'s configuration',\n                url     : 'admin/reload_tool'\n            },{\n                title   : 'Review tool migration stages',\n                url     : 'admin/review_tool_migration_stages'\n            },{\n                title   : 'View Tool Error Logs',\n                url     : 'admin/tool_errors'\n            },{\n                title   : 'Manage Display Whitelist',\n                url     : 'admin/sanitize_whitelist'\n            },{\n                title   : 'Manage Tool Dependencies',\n                url     : 'admin/manage_tool_dependencies'\n            } ]\n        },{\n            title : 'User Management',\n            items : [ {\n                title   : 'Users',\n                url     : 'admin/users'\n            },{\n                title   : 'Groups',\n                url     : 'admin/groups'\n            },{\n                title   : 'Roles',\n                url     : 'admin/roles'\n            },{\n                title   : 'API keys',\n                url     : 'userskeys/all_users'\n            },{\n                title   : 'Impersonate a user',\n                url     : 'admin/impersonate',\n                enabled : self.config.allow_user_impersonation\n            } ]\n        },{\n            title : 'Data',\n            items : [ {\n                title   : 'Quotas',\n                url     : 'admin/quotas',\n                enabled : self.config.enable_quotas\n            },{\n                title   : 'Data libraries',\n                url     : 'library_admin/browse_libraries'\n            },{\n                title   : 'Roles',\n                url     : 'admin/roles'\n            },{\n                title   : 'Local data',\n                url     : 'data_manager'\n            } ]\n        },{\n            title : 'Form Definitions',\n            items : [ {\n                title   : 'Form definitions',\n                url     : 'forms/browse_form_definitions'\n            } ]\n        },{\n            title : 'Sample Tracking',\n            items : [ {\n                title   : 'Sequencers and external services',\n                url     : 'external_service/browse_external_services'\n            },{\n                title   : 'Request types',\n                url     : 'request_type/browse_request_types'\n            },{\n                title   : 'Sequencing requests',\n                url     : 'requests_admin/browse_requests'\n            },{\n                title   : 'Find samples',\n                url     : 'requests_common/find_samples?cntrller=requests_admin'\n            } ]\n        }]);\n        this.setElement( this._template() );\n    },\n\n    render : function() {\n        var self = this;\n        this.$el.empty();\n        this.categories.each( function( category ) {\n            var $section = $( self._templateSection( category.attributes ) );\n            var $entries = $section.find( '.ui-side-section-body' );\n            _.each( category.get( 'items' ), function( item ) {\n                if ( item.enabled === undefined || item.enabled ) {\n                    $entries.append( $( '<div/>' ).addClass( 'ui-side-section-body-title' )\n                                                  .append( $( '<a/>' ).attr({\n                                                                href    : self.root + item.url,\n                                                                target  : 'galaxy_main' }).text( _l( item.title ) ) ) );\n                }\n            });\n            self.$el.append( $section );\n        });\n        this.page.$( '#galaxy_main' ).prop( 'src', this.root + 'admin/center?message=' + this.message + '&status=' + this.status );\n    },\n\n    _templateSection : function( options ) {\n        return [\n            '<div>',\n                '<div class=\"ui-side-section-title\">' + _l( options.title ) + '</div>',\n                '<div class=\"ui-side-section-body\"/>',\n            '</div>'\n        ].join('');\n    },\n\n    _template : function() {\n        return '<div class=\"ui-side-panel\"/>';\n    },\n\n    toString : function() { return 'adminPanel' }\n});\n\nmodule.exports = AdminPanel;\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/panels/admin-panel.js"],"sourceRoot":""}