{"version":3,"sources":["webpack:///admin.bundled.js","webpack:///./galaxy/scripts/apps/admin.js","webpack:///./galaxy/scripts/apps/panels/admin-panel.js","webpack:///./galaxy/scripts/layout/router.js","webpack:///./galaxy/scripts/mvc/form/form-wrapper.js"],"names":["webpackJsonp","171","module","exports","__webpack_require__","_","_interopRequireDefault","obj","__esModule","default","_jquery","_jquery2","_galaxy","_galaxy2","_adminPanel","_adminPanel2","_formWrapper","_formWrapper2","_gridView","_gridView2","_uiMisc","_queryStringParsing","_queryStringParsing2","_router","_router2","_utils","_utils2","_page","_page2","$","window","app","options","bootstrapped","Galaxy","GalaxyApp","debug","AdminRouter","extend","routes","(/)admin(/)users","(/)admin(/)roles","(/)admin(/)groups","(/)admin(/)tool_versions","(/)admin(/)quotas","(/)admin(/)forms","(/)admin(/)form(/)(:form_id)","authenticate","args","name","user","id","get","show_users","this","page","display","url_base","root","url_data","params","dict_format","show_roles","show_groups","show_tool_versions","show_quotas","show_forms","show_form","form_id","form_defs","reset_user_password","title","url","icon","submit_title","redirect","manage_roles_and_groups_for_user","manage_users_and_groups_for_role","manage_users_and_roles_for_group","manage_users_and_groups_for_quota","create_role","create_group","create_quota","rename_role","rename_group","rename_quota","edit_quota","set_quota_default","create_form","edit_form","View","config","active_view","setWindowTitle","Left","Router","call","172","Backbone","Object","defineProperty","value","_localization","_localization2","AdminPanel","initialize","self","settings","message","status","model","Model","categories","Collection","items","enabled","is_tool_shed_installed","enable_beta_ts_api_install","installing_repository_ids","is_repo_installed","target","allow_user_impersonation","enable_quotas","setElement","_template","render","$el","empty","each","category","$section","_templateSection","attributes","$entries","find","item","undefined","$link","attr","href","text","on","e","preventDefault","router","push","append","addClass","prop","join","toString","30","_uiMisc2","data","__identifer","Math","random","substr","isEmptyObject","indexOf","param","navigate","trigger","execute","callback","queryObj","parse","pop","apply","access_denied","Message","persistent","44","_formView","_formView2","ajax","type","done","response","form","inputs","buttons","submit","Button","tooltip","submit_tooltip","submit_icon","cls","onclick","_submit","fail","JSON","stringify","create","contentType","success_message","location","matchModel","input","input_id","field_list","_showMessage","responseJSON","err_msg","parents","filter","css","first","animate","scrollTop","update"],"mappings":"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","file":"admin.bundled.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 171:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _galaxy = __webpack_require__(24);\n\nvar _galaxy2 = _interopRequireDefault(_galaxy);\n\nvar _adminPanel = __webpack_require__(172);\n\nvar _adminPanel2 = _interopRequireDefault(_adminPanel);\n\nvar _formWrapper = __webpack_require__(44);\n\nvar _formWrapper2 = _interopRequireDefault(_formWrapper);\n\nvar _gridView = __webpack_require__(12);\n\nvar _gridView2 = _interopRequireDefault(_gridView);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _queryStringParsing = __webpack_require__(8);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nvar _router = __webpack_require__(30);\n\nvar _router2 = _interopRequireDefault(_router);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _page = __webpack_require__(25);\n\nvar _page2 = _interopRequireDefault(_page);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ = _jquery2.default;\n\n\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new _galaxy2.default.GalaxyApp(options, bootstrapped);\n    Galaxy.debug(\"admin app\");\n\n    /** Routes */\n    var AdminRouter = _router2.default.extend({\n        routes: {\n            \"(/)admin(/)users\": \"show_users\",\n            \"(/)admin(/)roles\": \"show_roles\",\n            \"(/)admin(/)groups\": \"show_groups\",\n            \"(/)admin(/)tool_versions\": \"show_tool_versions\",\n            \"(/)admin(/)quotas\": \"show_quotas\",\n            \"(/)admin(/)forms\": \"show_forms\",\n            \"(/)admin(/)form(/)(:form_id)\": \"show_form\"\n        },\n\n        authenticate: function authenticate(args, name) {\n            return Galaxy.user && Galaxy.user.id && Galaxy.user.get(\"is_admin\");\n        },\n\n        show_users: function show_users() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"admin/users_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_roles: function show_roles() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"admin/roles_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_groups: function show_groups() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"admin/groups_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_tool_versions: function show_tool_versions() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"admin/tool_versions_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_quotas: function show_quotas() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"admin/quotas_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_forms: function show_forms() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"forms/forms_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_form: function show_form(form_id) {\n            var id = \"?id=\" + _queryStringParsing2.default.get(\"id\");\n            var form_defs = {\n                reset_user_password: {\n                    title: \"Reset passwords\",\n                    url: \"admin/reset_user_password\" + id,\n                    icon: \"fa-user\",\n                    submit_title: \"Save new password\",\n                    redirect: \"admin/users\"\n                },\n                manage_roles_and_groups_for_user: {\n                    url: \"admin/manage_roles_and_groups_for_user\" + id,\n                    icon: \"fa-users\",\n                    redirect: \"admin/users\"\n                },\n                manage_users_and_groups_for_role: {\n                    url: \"admin/manage_users_and_groups_for_role\" + id,\n                    redirect: \"admin/roles\"\n                },\n                manage_users_and_roles_for_group: {\n                    url: \"admin/manage_users_and_roles_for_group\" + id,\n                    redirect: \"admin/groups\"\n                },\n                manage_users_and_groups_for_quota: {\n                    url: \"admin/manage_users_and_groups_for_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                create_role: {\n                    url: \"admin/create_role\",\n                    redirect: \"admin/roles\"\n                },\n                create_group: {\n                    url: \"admin/create_group\",\n                    redirect: \"admin/groups\"\n                },\n                create_quota: {\n                    url: \"admin/create_quota\",\n                    redirect: \"admin/quotas\"\n                },\n                rename_role: {\n                    url: \"admin/rename_role\" + id,\n                    redirect: \"admin/roles\"\n                },\n                rename_group: {\n                    url: \"admin/rename_group\" + id,\n                    redirect: \"admin/groups\"\n                },\n                rename_quota: {\n                    url: \"admin/rename_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                edit_quota: {\n                    url: \"admin/edit_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                set_quota_default: {\n                    url: \"admin/set_quota_default\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                create_form: {\n                    url: \"forms/create_form\",\n                    redirect: \"admin/forms\"\n                },\n                edit_form: {\n                    url: \"forms/edit_form\" + id,\n                    redirect: \"admin/forms\"\n                }\n            };\n            this.page.display(new _formWrapper2.default.View(form_defs[form_id]));\n        }\n    });\n\n    $(function () {\n        _.extend(options.config, { active_view: \"admin\" });\n        _utils2.default.setWindowTitle(\"Administration\");\n        Galaxy.page = new _page2.default.View(_.extend(options, {\n            Left: _adminPanel2.default,\n            Router: AdminRouter\n        }));\n    });\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 172:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AdminPanel = Backbone.View.extend({\n    initialize: function initialize(page, options) {\n        var self = this;\n        this.page = page;\n        this.root = options.root;\n        this.config = options.config;\n        this.settings = options.settings;\n        this.message = options.message;\n        this.status = options.status;\n        this.model = new Backbone.Model({\n            title: (0, _localization2.default)(\"Administration\")\n        });\n        this.categories = new Backbone.Collection([{\n            title: \"Server\",\n            items: [{\n                title: \"Data types registry\",\n                url: \"admin/view_datatypes_registry\"\n            }, {\n                title: \"Data tables registry\",\n                url: \"admin/view_tool_data_tables\"\n            }, {\n                title: \"Display applications\",\n                url: \"admin/display_applications\"\n            }, {\n                title: \"Manage jobs\",\n                url: \"admin/jobs\"\n            }]\n        }, {\n            title: \"Tools and Tool Shed\",\n            items: [{\n                title: \"Search Tool Shed\",\n                url: \"admin_toolshed/browse_tool_sheds\",\n                enabled: self.settings.is_tool_shed_installed\n            }, {\n                title: \"Search Tool Shed (Beta)\",\n                url: \"admin_toolshed/browse_toolsheds\",\n                enabled: self.settings.is_tool_shed_installed && self.config.enable_beta_ts_api_install\n            }, {\n                title: \"Monitor installing repositories\",\n                url: \"admin_toolshed/monitor_repository_installation?installing_repository_ids=\" + self.settings.installing_repository_ids,\n                enabled: self.settings.installing_repository_ids\n            }, {\n                title: \"Manage installed tools\",\n                url: \"admin_toolshed/browse_repositories\",\n                enabled: self.settings.is_repo_installed\n            }, {\n                title: \"Reset metadata\",\n                url: \"admin_toolshed/reset_metadata_on_selected_installed_repositories\",\n                enabled: self.settings.is_repo_installed\n            }, {\n                title: \"Download local tool\",\n                url: \"admin/package_tool\"\n            }, {\n                title: \"Tool lineage\",\n                url: \"admin/tool_versions\",\n                target: \"__use_router__\"\n            }, {\n                title: \"Reload a tool's configuration\",\n                url: \"admin/reload_tool\"\n            }, {\n                title: \"Review tool migration stages\",\n                url: \"admin/review_tool_migration_stages\"\n            }, {\n                title: \"View Tool Error Logs\",\n                url: \"admin/tool_errors\"\n            }, {\n                title: \"Manage Display Whitelist\",\n                url: \"admin/sanitize_whitelist\"\n            }, {\n                title: \"Manage Tool Dependencies\",\n                url: \"admin/manage_tool_dependencies\"\n            }]\n        }, {\n            title: \"User Management\",\n            items: [{\n                title: \"Users\",\n                url: \"admin/users\",\n                target: \"__use_router__\"\n            }, {\n                title: \"Groups\",\n                url: \"admin/groups\",\n                target: \"__use_router__\"\n            }, {\n                title: \"Roles\",\n                url: \"admin/roles\",\n                target: \"__use_router__\"\n            }, {\n                title: \"API keys\",\n                url: \"userskeys/all_users\"\n            }, {\n                title: \"Impersonate a user\",\n                url: \"admin/impersonate\",\n                enabled: self.config.allow_user_impersonation\n            }]\n        }, {\n            title: \"Data\",\n            items: [{\n                title: \"Quotas\",\n                url: \"admin/quotas\",\n                target: \"__use_router__\",\n                enabled: self.config.enable_quotas\n            }, {\n                title: \"Data libraries\",\n                url: \"library_admin/browse_libraries\"\n            }, {\n                title: \"Roles\",\n                url: \"admin/roles\",\n                target: \"__use_router__\"\n            }, {\n                title: \"Local data\",\n                url: \"data_manager\"\n            }]\n        }, {\n            title: \"Form Definitions\",\n            items: [{\n                title: \"Form definitions\",\n                url: \"admin/forms\",\n                target: \"__use_router__\"\n            }]\n        }, {\n            title: \"Sample Tracking\",\n            items: [{\n                title: \"Sequencers and external services\",\n                url: \"external_service/browse_external_services\"\n            }, {\n                title: \"Request types\",\n                url: \"request_type/browse_request_types\"\n            }, {\n                title: \"Sequencing requests\",\n                url: \"requests_admin/browse_requests\"\n            }, {\n                title: \"Find samples\",\n                url: \"requests_common/find_samples?cntrller=requests_admin\"\n            }]\n        }]);\n        this.setElement(this._template());\n    },\n\n    render: function render() {\n        var self = this;\n        this.$el.empty();\n        this.categories.each(function (category) {\n            var $section = $(self._templateSection(category.attributes));\n            var $entries = $section.find(\".ui-side-section-body\");\n            _.each(category.get(\"items\"), function (item) {\n                if (item.enabled === undefined || item.enabled) {\n                    var $link = $(\"<a/>\").attr({ href: self.root + item.url }).text((0, _localization2.default)(item.title));\n                    if (item.target == \"__use_router__\") {\n                        $link.on(\"click\", function (e) {\n                            e.preventDefault();\n                            self.page.router.push(item.url);\n                        });\n                    } else {\n                        $link.attr(\"target\", \"galaxy_main\");\n                    }\n                    $entries.append($(\"<div/>\").addClass(\"ui-side-section-body-title\").append($link));\n                }\n            });\n            self.$el.append($section);\n        });\n        this.page.$(\"#galaxy_main\").prop(\"src\", this.root + \"admin/center?message=\" + this.message + \"&status=\" + this.status);\n    },\n\n    _templateSection: function _templateSection(options) {\n        return [\"<div>\", '<div class=\"ui-side-section-title\">' + (0, _localization2.default)(options.title) + \"</div>\", '<div class=\"ui-side-section-body\"/>', \"</div>\"].join(\"\");\n    },\n\n    _template: function _template() {\n        return '<div class=\"ui-side-panel\"/>';\n    },\n\n    toString: function toString() {\n        return \"adminPanel\";\n    }\n});\n\nexports.default = AdminPanel;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 30:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _queryStringParsing = __webpack_require__(8);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ = _jquery2.default;\n\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function initialize(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function push(url, data) {\n        data = data || {};\n        data.__identifer = Math.random().toString(36).substr(2);\n        if (!$.isEmptyObject(data)) {\n            url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            url += $.param(data, true);\n        }\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function execute(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = _queryStringParsing2.default.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function authenticate(args, name) {\n        return true;\n    },\n\n    access_denied: function access_denied() {\n        this.page.display(new _uiMisc2.default.Message({\n            status: \"danger\",\n            message: \"You must be logged in with proper credentials to make this request.\",\n            persistent: true\n        }));\n    }\n});\n\nexports.default = Router;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 44:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _formView = __webpack_require__(9);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Generic form view */\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = new Backbone.Model(options);\n        this.url = this.model.get(\"url\");\n        this.redirect = this.model.get(\"redirect\");\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + this.url,\n            type: \"GET\"\n        }).done(function (response) {\n            var options = $.extend({}, self.model.attributes, response);\n            var form = new _formView2.default({\n                title: options.title,\n                message: options.message,\n                status: options.status || \"warning\",\n                icon: options.icon,\n                inputs: options.inputs,\n                buttons: {\n                    submit: new _uiMisc2.default.Button({\n                        tooltip: options.submit_tooltip,\n                        title: options.submit_title || \"Save\",\n                        icon: options.submit_icon || \"fa-save\",\n                        cls: \"btn btn-primary ui-clear-float\",\n                        onclick: function onclick() {\n                            self._submit(form);\n                        }\n                    })\n                }\n            });\n            self.$el.empty().append(form.$el);\n        }).fail(function (response) {\n            self.$el.empty().append(new _uiMisc2.default.Message({\n                message: \"Failed to load resource \" + self.url + \".\",\n                status: \"danger\",\n                persistent: true\n            }).$el);\n        });\n    },\n\n    _submit: function _submit(form) {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + self.url,\n            data: JSON.stringify(form.data.create()),\n            type: \"PUT\",\n            contentType: \"application/json\"\n        }).done(function (response) {\n            var success_message = {\n                message: response.message,\n                status: \"success\",\n                persistent: false\n            };\n            if (self.redirect) {\n                window.location = Galaxy.root + self.redirect + \"?\" + $.param(success_message);\n            } else {\n                form.data.matchModel(response, function (input, input_id) {\n                    form.field_list[input_id].value(input.value);\n                });\n                self._showMessage(form, success_message);\n            }\n        }).fail(function (response) {\n            self._showMessage(form, {\n                message: response.responseJSON.err_msg,\n                status: \"danger\",\n                persistent: false\n            });\n        });\n    },\n\n    _showMessage: function _showMessage(form, options) {\n        var $panel = form.$el.parents().filter(function () {\n            return [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1;\n        }).first();\n        $panel.animate({ scrollTop: 0 }, 500);\n        form.message.update(options);\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ })\n\n},[171]);\n\n\n// WEBPACK FOOTER //\n// admin.bundled.js","import jQuery from \"jquery\";\nvar $ = jQuery;\nimport GalaxyApp from \"galaxy\";\nimport AdminPanel from \"./panels/admin-panel\";\nimport FormWrapper from \"mvc/form/form-wrapper\";\nimport GridView from \"mvc/grid/grid-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\nimport Router from \"layout/router\";\nimport Utils from \"utils/utils\";\nimport Page from \"layout/page\";\n\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new GalaxyApp.GalaxyApp(options, bootstrapped);\n    Galaxy.debug(\"admin app\");\n\n    /** Routes */\n    var AdminRouter = Router.extend({\n        routes: {\n            \"(/)admin(/)users\": \"show_users\",\n            \"(/)admin(/)roles\": \"show_roles\",\n            \"(/)admin(/)groups\": \"show_groups\",\n            \"(/)admin(/)tool_versions\": \"show_tool_versions\",\n            \"(/)admin(/)quotas\": \"show_quotas\",\n            \"(/)admin(/)forms\": \"show_forms\",\n            \"(/)admin(/)form(/)(:form_id)\": \"show_form\"\n        },\n\n        authenticate: function(args, name) {\n            return Galaxy.user && Galaxy.user.id && Galaxy.user.get(\"is_admin\");\n        },\n\n        show_users: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"admin/users_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_roles: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"admin/roles_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_groups: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"admin/groups_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_tool_versions: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"admin/tool_versions_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_quotas: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"admin/quotas_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_forms: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"forms/forms_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_form: function(form_id) {\n            var id = \"?id=\" + QueryStringParsing.get(\"id\");\n            var form_defs = {\n                reset_user_password: {\n                    title: \"Reset passwords\",\n                    url: \"admin/reset_user_password\" + id,\n                    icon: \"fa-user\",\n                    submit_title: \"Save new password\",\n                    redirect: \"admin/users\"\n                },\n                manage_roles_and_groups_for_user: {\n                    url: \"admin/manage_roles_and_groups_for_user\" + id,\n                    icon: \"fa-users\",\n                    redirect: \"admin/users\"\n                },\n                manage_users_and_groups_for_role: {\n                    url: \"admin/manage_users_and_groups_for_role\" + id,\n                    redirect: \"admin/roles\"\n                },\n                manage_users_and_roles_for_group: {\n                    url: \"admin/manage_users_and_roles_for_group\" + id,\n                    redirect: \"admin/groups\"\n                },\n                manage_users_and_groups_for_quota: {\n                    url: \"admin/manage_users_and_groups_for_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                create_role: {\n                    url: \"admin/create_role\",\n                    redirect: \"admin/roles\"\n                },\n                create_group: {\n                    url: \"admin/create_group\",\n                    redirect: \"admin/groups\"\n                },\n                create_quota: {\n                    url: \"admin/create_quota\",\n                    redirect: \"admin/quotas\"\n                },\n                rename_role: {\n                    url: \"admin/rename_role\" + id,\n                    redirect: \"admin/roles\"\n                },\n                rename_group: {\n                    url: \"admin/rename_group\" + id,\n                    redirect: \"admin/groups\"\n                },\n                rename_quota: {\n                    url: \"admin/rename_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                edit_quota: {\n                    url: \"admin/edit_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                set_quota_default: {\n                    url: \"admin/set_quota_default\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                create_form: {\n                    url: \"forms/create_form\",\n                    redirect: \"admin/forms\"\n                },\n                edit_form: {\n                    url: \"forms/edit_form\" + id,\n                    redirect: \"admin/forms\"\n                }\n            };\n            this.page.display(new FormWrapper.View(form_defs[form_id]));\n        }\n    });\n\n    $(function() {\n        _.extend(options.config, { active_view: \"admin\" });\n        Utils.setWindowTitle(\"Administration\");\n        Galaxy.page = new Page.View(\n            _.extend(options, {\n                Left: AdminPanel,\n                Router: AdminRouter\n            })\n        );\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/admin.js","import _l from \"utils/localization\";\n\nvar AdminPanel = Backbone.View.extend({\n    initialize: function(page, options) {\n        var self = this;\n        this.page = page;\n        this.root = options.root;\n        this.config = options.config;\n        this.settings = options.settings;\n        this.message = options.message;\n        this.status = options.status;\n        this.model = new Backbone.Model({\n            title: _l(\"Administration\")\n        });\n        this.categories = new Backbone.Collection([\n            {\n                title: \"Server\",\n                items: [\n                    {\n                        title: \"Data types registry\",\n                        url: \"admin/view_datatypes_registry\"\n                    },\n                    {\n                        title: \"Data tables registry\",\n                        url: \"admin/view_tool_data_tables\"\n                    },\n                    {\n                        title: \"Display applications\",\n                        url: \"admin/display_applications\"\n                    },\n                    {\n                        title: \"Manage jobs\",\n                        url: \"admin/jobs\"\n                    }\n                ]\n            },\n            {\n                title: \"Tools and Tool Shed\",\n                items: [\n                    {\n                        title: \"Search Tool Shed\",\n                        url: \"admin_toolshed/browse_tool_sheds\",\n                        enabled: self.settings.is_tool_shed_installed\n                    },\n                    {\n                        title: \"Search Tool Shed (Beta)\",\n                        url: \"admin_toolshed/browse_toolsheds\",\n                        enabled:\n                            self.settings.is_tool_shed_installed &&\n                            self.config.enable_beta_ts_api_install\n                    },\n                    {\n                        title: \"Monitor installing repositories\",\n                        url:\n                            \"admin_toolshed/monitor_repository_installation?installing_repository_ids=\" +\n                            self.settings.installing_repository_ids,\n                        enabled: self.settings.installing_repository_ids\n                    },\n                    {\n                        title: \"Manage installed tools\",\n                        url: \"admin_toolshed/browse_repositories\",\n                        enabled: self.settings.is_repo_installed\n                    },\n                    {\n                        title: \"Reset metadata\",\n                        url:\n                            \"admin_toolshed/reset_metadata_on_selected_installed_repositories\",\n                        enabled: self.settings.is_repo_installed\n                    },\n                    {\n                        title: \"Download local tool\",\n                        url: \"admin/package_tool\"\n                    },\n                    {\n                        title: \"Tool lineage\",\n                        url: \"admin/tool_versions\",\n                        target: \"__use_router__\"\n                    },\n                    {\n                        title: \"Reload a tool's configuration\",\n                        url: \"admin/reload_tool\"\n                    },\n                    {\n                        title: \"Review tool migration stages\",\n                        url: \"admin/review_tool_migration_stages\"\n                    },\n                    {\n                        title: \"View Tool Error Logs\",\n                        url: \"admin/tool_errors\"\n                    },\n                    {\n                        title: \"Manage Display Whitelist\",\n                        url: \"admin/sanitize_whitelist\"\n                    },\n                    {\n                        title: \"Manage Tool Dependencies\",\n                        url: \"admin/manage_tool_dependencies\"\n                    }\n                ]\n            },\n            {\n                title: \"User Management\",\n                items: [\n                    {\n                        title: \"Users\",\n                        url: \"admin/users\",\n                        target: \"__use_router__\"\n                    },\n                    {\n                        title: \"Groups\",\n                        url: \"admin/groups\",\n                        target: \"__use_router__\"\n                    },\n                    {\n                        title: \"Roles\",\n                        url: \"admin/roles\",\n                        target: \"__use_router__\"\n                    },\n                    {\n                        title: \"API keys\",\n                        url: \"userskeys/all_users\"\n                    },\n                    {\n                        title: \"Impersonate a user\",\n                        url: \"admin/impersonate\",\n                        enabled: self.config.allow_user_impersonation\n                    }\n                ]\n            },\n            {\n                title: \"Data\",\n                items: [\n                    {\n                        title: \"Quotas\",\n                        url: \"admin/quotas\",\n                        target: \"__use_router__\",\n                        enabled: self.config.enable_quotas\n                    },\n                    {\n                        title: \"Data libraries\",\n                        url: \"library_admin/browse_libraries\"\n                    },\n                    {\n                        title: \"Roles\",\n                        url: \"admin/roles\",\n                        target: \"__use_router__\"\n                    },\n                    {\n                        title: \"Local data\",\n                        url: \"data_manager\"\n                    }\n                ]\n            },\n            {\n                title: \"Form Definitions\",\n                items: [\n                    {\n                        title: \"Form definitions\",\n                        url: \"admin/forms\",\n                        target: \"__use_router__\"\n                    }\n                ]\n            },\n            {\n                title: \"Sample Tracking\",\n                items: [\n                    {\n                        title: \"Sequencers and external services\",\n                        url: \"external_service/browse_external_services\"\n                    },\n                    {\n                        title: \"Request types\",\n                        url: \"request_type/browse_request_types\"\n                    },\n                    {\n                        title: \"Sequencing requests\",\n                        url: \"requests_admin/browse_requests\"\n                    },\n                    {\n                        title: \"Find samples\",\n                        url:\n                            \"requests_common/find_samples?cntrller=requests_admin\"\n                    }\n                ]\n            }\n        ]);\n        this.setElement(this._template());\n    },\n\n    render: function() {\n        var self = this;\n        this.$el.empty();\n        this.categories.each(function(category) {\n            var $section = $(self._templateSection(category.attributes));\n            var $entries = $section.find(\".ui-side-section-body\");\n            _.each(category.get(\"items\"), function(item) {\n                if (item.enabled === undefined || item.enabled) {\n                    var $link = $(\"<a/>\")\n                        .attr({ href: self.root + item.url })\n                        .text(_l(item.title));\n                    if (item.target == \"__use_router__\") {\n                        $link.on(\"click\", function(e) {\n                            e.preventDefault();\n                            self.page.router.push(item.url);\n                        });\n                    } else {\n                        $link.attr(\"target\", \"galaxy_main\");\n                    }\n                    $entries.append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-side-section-body-title\")\n                            .append($link)\n                    );\n                }\n            });\n            self.$el.append($section);\n        });\n        this.page\n            .$(\"#galaxy_main\")\n            .prop(\n                \"src\",\n                this.root +\n                    \"admin/center?message=\" +\n                    this.message +\n                    \"&status=\" +\n                    this.status\n            );\n    },\n\n    _templateSection: function(options) {\n        return [\n            \"<div>\",\n            '<div class=\"ui-side-section-title\">' +\n                _l(options.title) +\n                \"</div>\",\n            '<div class=\"ui-side-section-body\"/>',\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    _template: function() {\n        return '<div class=\"ui-side-panel\"/>';\n    },\n\n    toString: function() {\n        return \"adminPanel\";\n    }\n});\n\nexport default AdminPanel;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/panels/admin-panel.js","import jQuery from \"jquery\";\nvar $ = jQuery;\nimport QUERY_STRING from \"utils/query-string-parsing\";\nimport Ui from \"mvc/ui/ui-misc\";\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function(url, data) {\n        data = data || {};\n        data.__identifer = Math.random()\n            .toString(36)\n            .substr(2);\n        if (!$.isEmptyObject(data)) {\n            url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            url += $.param(data, true);\n        }\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = QUERY_STRING.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function(args, name) {\n        return true;\n    },\n\n    access_denied: function() {\n        this.page.display(\n            new Ui.Message({\n                status: \"danger\",\n                message:\n                    \"You must be logged in with proper credentials to make this request.\",\n                persistent: true\n            })\n        );\n    }\n});\n\nexport default Router;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/layout/router.js","/** Generic form view */\nimport Form from \"mvc/form/form-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        this.model = new Backbone.Model(options);\n        this.url = this.model.get(\"url\");\n        this.redirect = this.model.get(\"redirect\");\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + this.url,\n            type: \"GET\"\n        })\n            .done(function(response) {\n                var options = $.extend({}, self.model.attributes, response);\n                var form = new Form({\n                    title: options.title,\n                    message: options.message,\n                    status: options.status || \"warning\",\n                    icon: options.icon,\n                    inputs: options.inputs,\n                    buttons: {\n                        submit: new Ui.Button({\n                            tooltip: options.submit_tooltip,\n                            title: options.submit_title || \"Save\",\n                            icon: options.submit_icon || \"fa-save\",\n                            cls: \"btn btn-primary ui-clear-float\",\n                            onclick: function() {\n                                self._submit(form);\n                            }\n                        })\n                    }\n                });\n                self.$el.empty().append(form.$el);\n            })\n            .fail(function(response) {\n                self.$el.empty().append(\n                    new Ui.Message({\n                        message: \"Failed to load resource \" + self.url + \".\",\n                        status: \"danger\",\n                        persistent: true\n                    }).$el\n                );\n            });\n    },\n\n    _submit: function(form) {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + self.url,\n            data: JSON.stringify(form.data.create()),\n            type: \"PUT\",\n            contentType: \"application/json\"\n        })\n            .done(function(response) {\n                var success_message = {\n                    message: response.message,\n                    status: \"success\",\n                    persistent: false\n                };\n                if (self.redirect) {\n                    window.location =\n                        Galaxy.root +\n                        self.redirect +\n                        \"?\" +\n                        $.param(success_message);\n                } else {\n                    form.data.matchModel(response, function(input, input_id) {\n                        form.field_list[input_id].value(input.value);\n                    });\n                    self._showMessage(form, success_message);\n                }\n            })\n            .fail(function(response) {\n                self._showMessage(form, {\n                    message: response.responseJSON.err_msg,\n                    status: \"danger\",\n                    persistent: false\n                });\n            });\n    },\n\n    _showMessage: function(form, options) {\n        var $panel = form.$el\n            .parents()\n            .filter(function() {\n                return (\n                    [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1\n                );\n            })\n            .first();\n        $panel.animate({ scrollTop: 0 }, 500);\n        form.message.update(options);\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-wrapper.js"],"sourceRoot":""}