{"version":3,"sources":["webpack:///admin.bundled.js","webpack:///./galaxy/scripts/mvc/ui/ui-buttons.js","webpack:///./galaxy/scripts/apps/admin.js","webpack:///./galaxy/scripts/apps/panels/admin-panel.js","webpack:///./galaxy/scripts/mvc/grid/grid-view.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-default.js","webpack:///./galaxy/scripts/mvc/ui/ui-options.js","webpack:///./galaxy/scripts/mvc/ui/ui-list.js","webpack:///./galaxy/scripts/mvc/ui/popup-menu.js","webpack:///./galaxy/scripts/mvc/ui/ui-table.js","webpack:///./galaxy/scripts/mvc/form/form-data.js","webpack:///./galaxy/scripts/mvc/grid/grid-model.js","webpack:///./galaxy/scripts/mvc/grid/grid-template.js","webpack:///./galaxy/scripts/mvc/ui/ui-slider.js","webpack:///./galaxy/scripts/mvc/ui/ui-drilldown.js","webpack:///./galaxy/scripts/mvc/form/form-section.js","webpack:///./galaxy/scripts/mvc/form/form-repeat.js","webpack:///./galaxy/scripts/mvc/form/form-input.js","webpack:///./galaxy/scripts/mvc/form/form-parameters.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-content.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-library.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-ftp.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-genomespace.js","webpack:///./galaxy/scripts/mvc/tool/tool-genomespace.js","webpack:///./galaxy/scripts/mvc/ui/ui-color-picker.js","webpack:///./galaxy/scripts/layout/router.js","webpack:///./galaxy/scripts/mvc/ui/ui-misc.js","webpack:///./galaxy/scripts/mvc/form/form-wrapper.js","webpack:///./galaxy/scripts/mvc/ui/ui-portlet.js","webpack:///./galaxy/scripts/mvc/form/form-view.js"],"names":["webpackJsonp","10","module","exports","__webpack_require__","Backbone","$","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","Utils","ButtonDefault","View","extend","initialize","options","this","model","Model","id","uid","title","icon","cls","wait","wait_text","wait_cls","disabled","percentage","set","setElement","attr","append","$icon","$title","$progress","$progress_bar","listenTo","render","self","attributes","$el","removeClass","addClass","off","on","hide","onclick","tooltip","placement","css","width","prop","html","show","disable","enable","unwait","setIcon","ButtonLink","href","target","ButtonCheck","icons","value","onchange","get","new_val","total","ButtonIcon","$button","ButtonMenu","$menu","pull","onunload","visible","tag","collection","Collection","$root","display","where","length","e","preventDefault","remove","each","submodel","suboptions","$link","divider","addMenu","add","merge","apply","call","158","_","_interopRequireDefault","obj","__esModule","default","_jquery","_jquery2","_galaxy","_adminPanel","_adminPanel2","_formWrapper","_formWrapper2","_gridView","_gridView2","_uiMisc","_queryStringParsing","_queryStringParsing2","_router","_router2","_utils","_utils2","_page","_page2","window","app","bootstrapped","Galaxy","GalaxyApp","debug","AdminRouter","routes","(/)admin(/)users","(/)admin(/)roles","(/)admin(/)groups","(/)admin(/)tool_versions","(/)admin(/)quotas","(/)admin(/)forms","(/)admin(/)form(/)(:form_id)","authenticate","args","name","user","show_users","page","url_base","root","url_data","params","dict_format","show_roles","show_groups","show_tool_versions","show_quotas","show_forms","show_form","form_id","form_defs","reset_user_password","url","submit_title","redirect","manage_roles_and_groups_for_user","manage_users_and_groups_for_role","manage_users_and_roles_for_group","manage_users_and_groups_for_quota","create_role","create_group","create_quota","rename_role","rename_group","rename_quota","edit_quota","set_quota_default","create_form","edit_form","config","active_view","setWindowTitle","Left","Router","159","Object","defineProperty","_localization","_localization2","AdminPanel","settings","message","status","categories","items","enabled","is_tool_shed_installed","enable_beta_ts_api_install","installing_repository_ids","is_repo_installed","allow_user_impersonation","enable_quotas","_template","empty","category","$section","_templateSection","$entries","find","item","text","router","push","join","toString","16","jQuery","_gridModel","_gridModel2","_gridTemplate","_gridTemplate2","_popupMenu","_popupMenu2","ajaxSettings","traditional","grid","grid_config","add_tag_to_grid_filter","tag_name","tag_value","is","slideToggle","add_filter_condition","filters","v","k","ajax","param","success","response","embedded","init_grid","use_panels","padding","overflow","handle_refresh","refresh_frames","inArray","top","currHistoryPanel","loadCurrentHistory","allow_title_display","replace","header","body","footer","use_hide_message","setTimeout","init_grid_elements","init_grid_controls","init_refresh_on_change","click","submit_operation","select","keyup","set_sort_condition","submit","column_key","text_input_obj","text_input","val","parent","remove_filter_condition","set_categorical_filter","check_all_items","checkboxes","check_count","update_checked","filter","change","rating","set_page","execute","index","button","popup","operation","_add_operation","operation_config","label","allowed","allow_popup","addItem","url_args","confirmation_text","confirm","func","encode_id","findItemByHtml","add_filter","t","filter_element","go_page_one","remove_filter","col_key","cur_sort","new_sort","indexOf","substring","sort_arrow","new_value","category_filter","cur_value","trim","filter_value","new_page","page_num","parseInt","split","cur_page","children","operation_button","operation_name","findWhere","operations","item_ids","check","state","c","href_parts","href_parms_str","href_parms","toLowerCase","location","get_url_data","can_async_op","update_grid","go_to","async","advanced_search","$div","closest","load","method","type","data","error","alert","response_text","insert","json","parseJSON","complete","17","Buttons","data2","error_text","empty_text","multiple","searchable","optional","readonly","individual","pagesize","_changeData","_changeDisabled","_changeWait","_changeVisible","_changeValue","_renderSearchable","_renderClassic","$select","_getValue","trigger","$dropdown","$resize","$resize_icon","event","currentY","pageY","currentHeight","height","minHeight","Math","max","select2","all_button","option","prepend","_match","term","String","toUpperCase","order","tags","matched_tags","closeOnSelect","query","q","results","found","callback","slice","more","formatResult","result","escape","reduce","memo","_setValue","isArray","first","exists","d","sorter","keep","sort","update","setOnChange","selected","a","b","isEmpty","18","Base","$message","$options","_templateOptions","_templateOption","_messageShow","values","BaseIcons","pair","Radio","prototype","Checkbox","RadioButton","19","Portlet","Ui","Message","portlet","Select","i","v_id","v_name","_refresh","lst","_templateRow","20","PopupMenu","menu","_renderAndShow","clickEvent","appendTo","_getShownPosition","_setUpCloseBehavior","position","template","li","map","checked","menuWidth","x","pageX","min","document","scrollLeft","left","closePopup","err","contents","one","splice","removeItem","findIndexByHtml","has","create","make_popupmenu","button_element","initial_options","convertedOptions","optionVal","optionKey","newOption","convertLinksToOptions","$parent","selector","elem","linkHref","linkTarget","confirmText","fromExistingDom","$buttonElement","$menuElement","menuElementLinkSelector","make_popup_menus","menuSelector","buttonSelectorBuildFn","popupMenusCreated","fromDom","22","content","ondblclick","onconfirm","selectable","cls_tr","$thead","$tbody","$tmessage","row","_row","row_count","events","dblclick","addHeader","appendHeader","align","wrapper","fade","_commit","del","delAll","before","after","size","fadeIn","_onclick","old_value","_ondblclick","23","Manager","checksum","sum","section","field","field_list","JSON","stringify","collapsed","flat_id","input_id","input_value","flat_dict","result_dict","element_list","convert","identifier","head","node","input","block_indices","block_prefix","block_label","pos","substr","test_param","selectedCase","matchCase","flat","ignore","collapsible_value","payload","p_id","dict","_iterate","match","matchModel","visitInputs","inputs","matchResponse","search","new_id","separator","Array","child","hasClass","input_list","truevalue","falsevalue","cases","prefix","context","key","cache","j","emit","27","defaults","async_ops","categorical_filters","sort_key","show_item_checkboxes","num_pages","op","cur_val","condition","condition_index","pairs","get_url","28","tmpl","grid_header","grid_table","info_text","global_actions","show_popup","action","grid_filters","columns","column","extra","num_rows_rendered","encoded_id","current_item_id","nowrap","column_settings","column_config","link","attach_popup","label_id_prefix","use_paging","num_page_links","cur_page_num","page_link_range","min_page","min_offset","max_offset","max_range","max_page","page_index","allow_multiple","found_global","global_operation","legend","default_filter_dict","advanced_search_display","show_advanced_search_link","filterable","f_key","d_key","standard_search_display","grid_column_filter","column_label","is_text","temp_column","column_filter","seperator","cf_label","cf","cf_key","cf_arg","filter_key","sanitize","29","step","precise","$text","$slider","pressed","which","_isParameter","opts","has_slider","slider","ui","isNaN","round","30","Options","header_index","list","element","_setState","header_id","is_expanded","$subgroup","attach","iterate","$tmpl","level","has_options","new_header","$group","31","_uiPortlet","_uiPortlet2","_formRepeat","_formRepeat2","_formInput","_formInput2","_formParameters","_formParameters2","parameters","input_def","_addConditional","_addRepeat","_addSection","_addRow","case_def","section_row","nonhidden","hidden","sub_section","_append","sub_section_id","block_index","repeat","ondel","onnew","n_cache","hideOptions","input_element","help","collapsible","collapsible_button","expanded","expand","hide_label","text_value","collapsible_preview","argument","color","style","backdrop","fixed","32","_uiMisc2","button_new","$list","button_delete","hideOperation","33","app_options","text_enable","text_disable","cls_enable","cls_disable","always_refresh","$field","$info","$preview","$collapsible","$collapsible_text","$collapsible_icon","$title_text","$error_text","$error","$backdrop","reset","help_text","help_argument","collapsible_state","34","_uiSelectContent","_uiSelectContent2","_uiSelectLibrary","_uiSelectLibrary2","_uiSelectFtp","_uiSelectFtp2","_uiSelectGenomespace","_uiSelectGenomespace2","_uiColorPicker","_uiColorPicker2","types","password","data_column","genomebuild","data_collection","integer","float","boolean","drill_down","hidden_data","baseurl","library_data","ftpfile","upload","genomespacefile","fieldClass","_fieldSelect","_fieldText","_fieldData","extensions","flavor","is_workflow","SelectClass","_fieldDrilldown","Drilldown","area","str_value","Input","placeholder","datalist","_fieldSlider","Slider","_fieldHidden","Hidden","info","_fieldBoolean","_fieldColor","_fieldLibrary","_fieldFtp","_fieldGenomeSpace","_fieldUpload","Upload","35","Batch","DISABLED","ENABLED","LINKED","Configurations","src","batch","data_multiple","workflow_data","workflow_data_multiple","workflow_data_collection","module_data","module_data_collection","src_labels","hda","hdca","pagelimit","statustimer","button_product","$batch_div","$batch","linked","clone","lastenter","_handleDrop","history","_changeCurrent","_changeType","current","id_list","fields","_batch","details","hid","$batchfield","batchmode","button_type","config_id","textify","button_data","button_width","margin-left","select_options","ev","drop_data","parse","originalEvent","dataTransfer","getData","new_src","history_content_type","current_value","_handleDropStatus","map_over_type","36","Table","List","Libraries","LibraryDatasets","library_id","fetch","libraries","datasets","library_select","dataset_list","37","ftpfile_list","38","GenomespaceBrowser","browse_button","browseGenomeSpace","filename_textbox","token_textbox","openFileBrowser","successCallback","destination","token","39","GS_UI_URL","genomespace_ui_url","GS_UPLOAD_URL","newWin","open","successCalBack","addEventListener","focus","setCallbackOnGSUploadError","40","colors","standard","base","theme","$panel","$view","$value","$header","_build","$boxes","fadeOut","_templateCheck","rgb","hex","_content","line_def","$content","_templateContent","$line","$box","_templateBox","bottom","44","__identifer","random","isEmptyObject","navigate","queryObj","pop","access_denied","persistent","5","Modal","Label","tagName","new_title","messageForDisplay","timeout","clearTimeout","UnescapedMessage","autocomplete","source","request","_onchange","attr_name","removeAttr","$hidden","$file","$wait","_readFile","file","files","reader","FileReader","onload","readAsText","Button","58","_formView","_formView2","done","form","buttons","submit_tooltip","submit_icon","_submit","fail","contentType","success_message","_showMessage","responseJSON","err_msg","parents","animate","scrollTop","8","scrollable","nopadding","onchange_title","$body","$title_icon","$buttons","$operations","collapse","make_text_editable","on_finish","enableButton","disableButton","showOperation","setOperation","9","_formSection","_formSection2","_formData","_formData2","initial_errors","hide_operations","new_model","isEqual","new_options","opt","active","is_dynamic","highlight","silent","offset","errors","error_messages","_renderForm","current_check","refresh_on_change","new_check"],"mappings":"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","file":"admin.bundled.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 10:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/** This module contains all button views. */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils) {\n    /** This renders the default button which is used e.g. at the bottom of the upload modal. */\n    var ButtonDefault = Backbone.View.extend({\n        initialize: function initialize(options) {\n            this.model = options && options.model || new Backbone.Model({\n                id: Utils.uid(),\n                title: \"\",\n                icon: \"\",\n                cls: \"btn btn-default\",\n                wait: false,\n                wait_text: \"Sending...\",\n                wait_cls: \"btn btn-info\",\n                disabled: false,\n                percentage: -1\n            }).set(options);\n            this.setElement($(\"<button/>\").attr(\"type\", \"button\").append(this.$icon = $(\"<i/>\")).append(this.$title = $(\"<span/>\")).append(this.$progress = $(\"<div/>\").append(this.$progress_bar = $(\"<div/>\"))));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function render() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass().addClass(\"ui-button-default\").addClass(options.disabled && \"disabled\").attr(\"id\", options.id).attr(\"disabled\", options.disabled).off(\"click\").on(\"click\", function () {\n                $(\".tooltip\").hide();\n                options.onclick && !self.disabled && options.onclick();\n            }).tooltip({ title: options.tooltip, placement: \"bottom\" });\n            this.$progress.addClass(\"progress\").css(\"display\", options.percentage !== -1 ? \"block\" : \"none\");\n            this.$progress_bar.addClass(\"progress-bar\").css({ width: options.percentage + \"%\" });\n            this.$icon.removeClass().addClass(\"icon fa\");\n            this.$title.removeClass().addClass(\"title\");\n            if (options.wait) {\n                this.$el.addClass(options.wait_cls).prop(\"disabled\", true);\n                this.$icon.addClass(\"fa-spinner fa-spin ui-margin-right\");\n                this.$title.html(options.wait_text);\n            } else {\n                this.$el.addClass(options.cls);\n                this.$icon.addClass(options.icon);\n                this.$title.html(options.title);\n                options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n            }\n        },\n\n        /** Show button */\n        show: function show() {\n            this.$el.show();\n        },\n\n        /** Hide button */\n        hide: function hide() {\n            this.$el.hide();\n        },\n\n        /** Disable button */\n        disable: function disable() {\n            this.model.set(\"disabled\", true);\n        },\n\n        /** Enable button */\n        enable: function enable() {\n            this.model.set(\"disabled\", false);\n        },\n\n        /** Show spinner to indicate that the button is not ready to be clicked */\n        wait: function wait() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Hide spinner to indicate that the button is ready to be clicked */\n        unwait: function unwait() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Change icon */\n        setIcon: function setIcon(icon) {\n            this.model.set(\"icon\", icon);\n        }\n    });\n\n    /** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons. */\n    var ButtonLink = ButtonDefault.extend({\n        initialize: function initialize(options) {\n            this.model = options && options.model || new Backbone.Model({\n                id: Utils.uid(),\n                title: \"\",\n                icon: \"\",\n                cls: \"\"\n            }).set(options);\n            this.setElement($(\"<a/>\").append(this.$icon = $(\"<span/>\")));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function render() {\n            var options = this.model.attributes;\n            this.$el.removeClass().addClass(options.cls).attr({\n                id: options.id,\n                href: options.href || \"javascript:void(0)\",\n                title: options.title,\n                target: options.target || \"_top\",\n                disabled: options.disabled\n            }).tooltip({ placement: \"bottom\" }).off(\"click\").on(\"click\", function () {\n                options.onclick && !options.disabled && options.onclick();\n            });\n            this.$icon.removeClass().addClass(options.icon);\n        }\n    });\n\n    /** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected. */\n    var ButtonCheck = Backbone.View.extend({\n        initialize: function initialize(options) {\n            this.model = options && options.model || new Backbone.Model({\n                id: Utils.uid(),\n                title: \"Select/Unselect all\",\n                icons: [\"fa-square-o\", \"fa-minus-square-o\", \"fa-check-square-o\"],\n                value: 0,\n                onchange: function onchange() {}\n            }).set(options);\n            this.setElement($(\"<div/>\").append(this.$icon = $(\"<span/>\")).append(this.$title = $(\"<span/>\")));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function render(options) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.addClass(\"ui-button-check\").off(\"click\").on(\"click\", function () {\n                self.model.set(\"value\", self.model.get(\"value\") === 0 && 2 || 0);\n                options.onclick && options.onclick();\n            });\n            this.$title.html(options.title);\n            this.$icon.removeClass().addClass(\"icon fa ui-margin-right\").addClass(options.icons[options.value]);\n        },\n\n        /* Sets a new value and/or returns the value.\n        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n        * OR:\n        * @param{Integer}   new_val - Number of selected options.\n        * @param{Integer}   total   - Total number of available options.\n        */\n        value: function value(new_val, total) {\n            if (new_val !== undefined) {\n                if (total && new_val !== 0) {\n                    new_val = new_val !== total && 1 || 2;\n                }\n                this.model.set(\"value\", new_val);\n                this.model.get(\"onchange\")(this.model.get(\"value\"));\n            }\n            return this.model.get(\"value\");\n        }\n    });\n\n    /** This renders a differently styled, more compact button version. */\n    var ButtonIcon = ButtonDefault.extend({\n        initialize: function initialize(options) {\n            this.model = options && options.model || new Backbone.Model({\n                id: Utils.uid(),\n                title: \"\",\n                icon: \"\",\n                cls: \"ui-button-icon\",\n                disabled: false\n            }).set(options);\n            this.setElement($(\"<div/>\").append(this.$button = $(\"<div/>\").append(this.$icon = $(\"<i/>\")).append(this.$title = $(\"<span/>\"))));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function render(options) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass().addClass(options.cls).addClass(options.disabled && \"disabled\").attr(\"disabled\", options.disabled).attr(\"id\", options.id).off(\"click\").on(\"click\", function () {\n                $(\".tooltip\").hide();\n                !options.disabled && options.onclick && options.onclick();\n            });\n            this.$button.addClass(\"button\").tooltip({ title: options.tooltip, placement: \"bottom\" });\n            this.$icon.removeClass().addClass(\"icon fa\").addClass(options.icon);\n            this.$title.addClass(\"title\").html(options.title);\n            options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n        }\n    });\n\n    /** This class creates a button with dropdown menu. */\n    var ButtonMenu = ButtonDefault.extend({\n        $menu: null,\n        initialize: function initialize(options) {\n            this.model = options && options.model || new Backbone.Model({\n                id: \"\",\n                title: \"\",\n                pull: \"right\",\n                icon: null,\n                onclick: null,\n                cls: \"ui-button-icon ui-button-menu\",\n                tooltip: \"\",\n                target: \"\",\n                href: \"\",\n                onunload: null,\n                visible: true,\n                tag: \"\"\n            }).set(options);\n            this.collection = new Backbone.Collection();\n            this.setElement($(\"<div/>\").append(this.$root = $(\"<div/>\").append(this.$icon = $(\"<i/>\")).append(this.$title = $(\"<span/>\"))));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.listenTo(this.collection, \"change add remove reset\", this.render, this);\n            this.render();\n        },\n\n        render: function render() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass().addClass(\"dropdown\").addClass(options.cls).attr(\"id\", options.id).css({\n                display: options.visible && this.collection.where({ visible: true }).length > 0 ? \"block\" : \"none\"\n            });\n            this.$root.addClass(\"root button dropdown-toggle\").attr(\"data-toggle\", \"dropdown\").tooltip({ title: options.tooltip, placement: \"bottom\" }).off(\"click\").on(\"click\", function (e) {\n                $(\".tooltip\").hide();\n                e.preventDefault();\n                options.onclick && options.onclick();\n            });\n            this.$icon.removeClass().addClass(\"icon fa\").addClass(options.icon);\n            this.$title.removeClass().addClass(\"title\").html(options.title);\n            options.icon && options.title && this.$icon.addClass(\"ui-margin-right\");\n            this.$menu && this.$menu.remove();\n            if (this.collection.length > 0) {\n                this.$menu = $(\"<ul/>\").addClass(\"menu dropdown-menu\").addClass(\"pull-\" + self.model.get(\"pull\")).attr(\"role\", \"menu\");\n                this.$el.append(this.$menu);\n            }\n            this.collection.each(function (submodel) {\n                var suboptions = submodel.attributes;\n                if (suboptions.visible) {\n                    var $link = $(\"<a/>\").addClass(\"dropdown-item\").attr({\n                        href: suboptions.href,\n                        target: suboptions.target\n                    }).append($(\"<i/>\").addClass(\"fa\").addClass(suboptions.icon).css(\"display\", suboptions.icon ? \"inline-block\" : \"none\")).append(suboptions.title).on(\"click\", function (e) {\n                        if (suboptions.onclick) {\n                            e.preventDefault();\n                            suboptions.onclick();\n                        }\n                    });\n                    self.$menu.append($(\"<li/>\").append($link));\n                    suboptions.divider && self.$menu.append($(\"<li/>\").addClass(\"divider\"));\n                }\n            });\n        },\n\n        /** Add a new menu item */\n        addMenu: function addMenu(options) {\n            this.collection.add(Utils.merge(options, {\n                title: \"\",\n                target: \"\",\n                href: \"\",\n                onclick: null,\n                divider: false,\n                visible: true,\n                icon: null,\n                cls: \"button-menu btn-group\"\n            }));\n        }\n    });\n\n    return {\n        ButtonDefault: ButtonDefault,\n        ButtonLink: ButtonLink,\n        ButtonIcon: ButtonIcon,\n        ButtonCheck: ButtonCheck,\n        ButtonMenu: ButtonMenu\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 158:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _galaxy = __webpack_require__(42);\n\nvar _adminPanel = __webpack_require__(159);\n\nvar _adminPanel2 = _interopRequireDefault(_adminPanel);\n\nvar _formWrapper = __webpack_require__(58);\n\nvar _formWrapper2 = _interopRequireDefault(_formWrapper);\n\nvar _gridView = __webpack_require__(16);\n\nvar _gridView2 = _interopRequireDefault(_gridView);\n\nvar _uiMisc = __webpack_require__(5);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _queryStringParsing = __webpack_require__(11);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nvar _router = __webpack_require__(44);\n\nvar _router2 = _interopRequireDefault(_router);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _page = __webpack_require__(43);\n\nvar _page2 = _interopRequireDefault(_page);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ = _jquery2.default;\n\n\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new _galaxy.GalaxyApp(options, bootstrapped);\n    Galaxy.debug(\"admin app\");\n\n    /** Routes */\n    var AdminRouter = _router2.default.extend({\n        routes: {\n            \"(/)admin(/)users\": \"show_users\",\n            \"(/)admin(/)roles\": \"show_roles\",\n            \"(/)admin(/)groups\": \"show_groups\",\n            \"(/)admin(/)tool_versions\": \"show_tool_versions\",\n            \"(/)admin(/)quotas\": \"show_quotas\",\n            \"(/)admin(/)forms\": \"show_forms\",\n            \"(/)admin(/)form(/)(:form_id)\": \"show_form\"\n        },\n\n        authenticate: function authenticate(args, name) {\n            return Galaxy.user && Galaxy.user.id && Galaxy.user.get(\"is_admin\");\n        },\n\n        show_users: function show_users() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"admin/users_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_roles: function show_roles() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"admin/roles_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_groups: function show_groups() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"admin/groups_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_tool_versions: function show_tool_versions() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"admin/tool_versions_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_quotas: function show_quotas() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"admin/quotas_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_forms: function show_forms() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"forms/forms_list\",\n                url_data: Galaxy.params,\n                dict_format: true\n            }));\n        },\n\n        show_form: function show_form(form_id) {\n            var id = \"?id=\" + _queryStringParsing2.default.get(\"id\");\n            var form_defs = {\n                reset_user_password: {\n                    title: \"Reset passwords\",\n                    url: \"admin/reset_user_password\" + id,\n                    icon: \"fa-user\",\n                    submit_title: \"Save new password\",\n                    redirect: \"admin/users\"\n                },\n                manage_roles_and_groups_for_user: {\n                    url: \"admin/manage_roles_and_groups_for_user\" + id,\n                    icon: \"fa-users\",\n                    redirect: \"admin/users\"\n                },\n                manage_users_and_groups_for_role: {\n                    url: \"admin/manage_users_and_groups_for_role\" + id,\n                    redirect: \"admin/roles\"\n                },\n                manage_users_and_roles_for_group: {\n                    url: \"admin/manage_users_and_roles_for_group\" + id,\n                    redirect: \"admin/groups\"\n                },\n                manage_users_and_groups_for_quota: {\n                    url: \"admin/manage_users_and_groups_for_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                create_role: {\n                    url: \"admin/create_role\",\n                    redirect: \"admin/roles\"\n                },\n                create_group: {\n                    url: \"admin/create_group\",\n                    redirect: \"admin/groups\"\n                },\n                create_quota: {\n                    url: \"admin/create_quota\",\n                    redirect: \"admin/quotas\"\n                },\n                rename_role: {\n                    url: \"admin/rename_role\" + id,\n                    redirect: \"admin/roles\"\n                },\n                rename_group: {\n                    url: \"admin/rename_group\" + id,\n                    redirect: \"admin/groups\"\n                },\n                rename_quota: {\n                    url: \"admin/rename_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                edit_quota: {\n                    url: \"admin/edit_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                set_quota_default: {\n                    url: \"admin/set_quota_default\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                create_form: {\n                    url: \"forms/create_form\",\n                    redirect: \"admin/forms\"\n                },\n                edit_form: {\n                    url: \"forms/edit_form\" + id,\n                    redirect: \"admin/forms\"\n                }\n            };\n            this.page.display(new _formWrapper2.default.View(form_defs[form_id]));\n        }\n    });\n\n    $(function () {\n        _.extend(options.config, { active_view: \"admin\" });\n        _utils2.default.setWindowTitle(\"Administration\");\n        Galaxy.page = new _page2.default.View(_.extend(options, {\n            Left: _adminPanel2.default,\n            Router: AdminRouter\n        }));\n    });\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 159:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AdminPanel = Backbone.View.extend({\n    initialize: function initialize(page, options) {\n        var self = this;\n        this.page = page;\n        this.root = options.root;\n        this.config = options.config;\n        this.settings = options.settings;\n        this.message = options.message;\n        this.status = options.status;\n        this.model = new Backbone.Model({\n            title: (0, _localization2.default)(\"Administration\")\n        });\n        this.categories = new Backbone.Collection([{\n            title: \"Server\",\n            items: [{\n                title: \"Data types registry\",\n                url: \"admin/view_datatypes_registry\"\n            }, {\n                title: \"Data tables registry\",\n                url: \"admin/view_tool_data_tables\"\n            }, {\n                title: \"Display applications\",\n                url: \"admin/display_applications\"\n            }, {\n                title: \"Manage jobs\",\n                url: \"admin/jobs\"\n            }]\n        }, {\n            title: \"Tools and Tool Shed\",\n            items: [{\n                title: \"Search Tool Shed\",\n                url: \"admin_toolshed/browse_tool_sheds\",\n                enabled: self.settings.is_tool_shed_installed\n            }, {\n                title: \"Search Tool Shed (Beta)\",\n                url: \"admin_toolshed/browse_toolsheds\",\n                enabled: self.settings.is_tool_shed_installed && self.config.enable_beta_ts_api_install\n            }, {\n                title: \"Monitor installing repositories\",\n                url: \"admin_toolshed/monitor_repository_installation?installing_repository_ids=\" + self.settings.installing_repository_ids,\n                enabled: self.settings.installing_repository_ids\n            }, {\n                title: \"Manage installed tools\",\n                url: \"admin_toolshed/browse_repositories\",\n                enabled: self.settings.is_repo_installed\n            }, {\n                title: \"Reset metadata\",\n                url: \"admin_toolshed/reset_metadata_on_selected_installed_repositories\",\n                enabled: self.settings.is_repo_installed\n            }, {\n                title: \"Download local tool\",\n                url: \"admin/package_tool\"\n            }, {\n                title: \"Tool lineage\",\n                url: \"admin/tool_versions\",\n                target: \"__use_router__\"\n            }, {\n                title: \"Reload a tool's configuration\",\n                url: \"admin/reload_tool\"\n            }, {\n                title: \"Review tool migration stages\",\n                url: \"admin/review_tool_migration_stages\"\n            }, {\n                title: \"View Tool Error Logs\",\n                url: \"admin/tool_errors\"\n            }, {\n                title: \"Manage Display Whitelist\",\n                url: \"admin/sanitize_whitelist\"\n            }, {\n                title: \"Manage Tool Dependencies\",\n                url: \"admin/manage_tool_dependencies\"\n            }]\n        }, {\n            title: \"User Management\",\n            items: [{\n                title: \"Users\",\n                url: \"admin/users\",\n                target: \"__use_router__\"\n            }, {\n                title: \"Groups\",\n                url: \"admin/groups\",\n                target: \"__use_router__\"\n            }, {\n                title: \"Roles\",\n                url: \"admin/roles\",\n                target: \"__use_router__\"\n            }, {\n                title: \"API keys\",\n                url: \"userskeys/all_users\"\n            }, {\n                title: \"Impersonate a user\",\n                url: \"admin/impersonate\",\n                enabled: self.config.allow_user_impersonation\n            }]\n        }, {\n            title: \"Data\",\n            items: [{\n                title: \"Quotas\",\n                url: \"admin/quotas\",\n                target: \"__use_router__\",\n                enabled: self.config.enable_quotas\n            }, {\n                title: \"Data libraries\",\n                url: \"library_admin/browse_libraries\"\n            }, {\n                title: \"Roles\",\n                url: \"admin/roles\",\n                target: \"__use_router__\"\n            }, {\n                title: \"Local data\",\n                url: \"data_manager\"\n            }]\n        }, {\n            title: \"Form Definitions\",\n            items: [{\n                title: \"Form definitions\",\n                url: \"admin/forms\",\n                target: \"__use_router__\"\n            }]\n        }, {\n            title: \"Sample Tracking\",\n            items: [{\n                title: \"Sequencers and external services\",\n                url: \"external_service/browse_external_services\"\n            }, {\n                title: \"Request types\",\n                url: \"request_type/browse_request_types\"\n            }, {\n                title: \"Sequencing requests\",\n                url: \"requests_admin/browse_requests\"\n            }, {\n                title: \"Find samples\",\n                url: \"requests_common/find_samples?cntrller=requests_admin\"\n            }]\n        }]);\n        this.setElement(this._template());\n    },\n\n    render: function render() {\n        var self = this;\n        this.$el.empty();\n        this.categories.each(function (category) {\n            var $section = $(self._templateSection(category.attributes));\n            var $entries = $section.find(\".ui-side-section-body\");\n            _.each(category.get(\"items\"), function (item) {\n                if (item.enabled === undefined || item.enabled) {\n                    var $link = $(\"<a/>\").attr({ href: self.root + item.url }).text((0, _localization2.default)(item.title));\n                    if (item.target == \"__use_router__\") {\n                        $link.on(\"click\", function (e) {\n                            e.preventDefault();\n                            self.page.router.push(item.url);\n                        });\n                    } else {\n                        $link.attr(\"target\", \"galaxy_main\");\n                    }\n                    $entries.append($(\"<div/>\").addClass(\"ui-side-section-body-title\").append($link));\n                }\n            });\n            self.$el.append($section);\n        });\n        this.page.$(\"#galaxy_main\").prop(\"src\", this.root + \"admin/center?message=\" + this.message + \"&status=\" + this.status);\n    },\n\n    _templateSection: function _templateSection(options) {\n        return [\"<div>\", '<div class=\"ui-side-section-title\">' + (0, _localization2.default)(options.title) + \"</div>\", '<div class=\"ui-side-section-body\"/>', \"</div>\"].join(\"\");\n    },\n\n    _template: function _template() {\n        return '<div class=\"ui-side-panel\"/>';\n    },\n\n    toString: function toString() {\n        return \"adminPanel\";\n    }\n});\n\nexports.default = AdminPanel;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 16:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _gridModel = __webpack_require__(27);\n\nvar _gridModel2 = _interopRequireDefault(_gridModel);\n\nvar _gridTemplate = __webpack_require__(28);\n\nvar _gridTemplate2 = _interopRequireDefault(_gridTemplate);\n\nvar _popupMenu = __webpack_require__(20);\n\nvar _popupMenu2 = _interopRequireDefault(_popupMenu);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// This is necessary so that, when nested arrays are used in ajax/post/get methods, square brackets ('[]') are\n// not appended to the identifier of a nested array.\njQuery.ajaxSettings.traditional = true;\n\n// dependencies\n\n// grid view\nexports.default = Backbone.View.extend({\n    // model\n    grid: null,\n\n    // Initialize\n    initialize: function initialize(grid_config) {\n        this.grid = new _gridModel2.default();\n        this.dict_format = grid_config.dict_format;\n        this.title = grid_config.title;\n        var self = this;\n        window.add_tag_to_grid_filter = function (tag_name, tag_value) {\n            // Put tag name and value together.\n            var tag = tag_name + (tag_value !== undefined && tag_value !== \"\" ? \":\" + tag_value : \"\");\n            var advanced_search = $(\"#advanced-search\").is(\":visible\");\n            if (!advanced_search) {\n                $(\"#standard-search\").slideToggle(\"fast\");\n                $(\"#advanced-search\").slideToggle(\"fast\");\n            }\n            self.add_filter_condition(\"tags\", tag);\n        };\n\n        // set element\n        if (this.dict_format) {\n            this.setElement(\"<div/>\");\n            if (grid_config.url_base && !grid_config.items) {\n                var url_data = grid_config.url_data || {};\n                _.each(grid_config.filters, function (v, k) {\n                    url_data[\"f-\" + k] = v;\n                });\n                $.ajax({\n                    url: grid_config.url_base + \"?\" + $.param(url_data),\n                    success: function success(response) {\n                        response.embedded = grid_config.embedded;\n                        response.filters = grid_config.filters || {};\n                        self.init_grid(response);\n                    }\n                });\n            } else {\n                this.init_grid(grid_config);\n            }\n        } else {\n            this.setElement(\"#grid-container\");\n            this.init_grid(grid_config);\n        }\n\n        // fix padding\n        if (grid_config.use_panels) {\n            $(\"#center\").css({\n                padding: \"10px\",\n                overflow: \"auto\"\n            });\n        }\n    },\n\n    // refresh frames\n    handle_refresh: function handle_refresh(refresh_frames) {\n        if (refresh_frames) {\n            if ($.inArray(\"history\", refresh_frames) > -1) {\n                if (top.Galaxy && top.Galaxy.currHistoryPanel) {\n                    top.Galaxy.currHistoryPanel.loadCurrentHistory();\n                }\n            }\n        }\n    },\n\n    // Initialize\n    init_grid: function init_grid(grid_config) {\n        this.grid.set(grid_config);\n\n        // get options\n        var options = this.grid.attributes;\n\n        if (this.allow_title_display && options.title) {\n            _utils2.default.setWindowTitle(options.title);\n        }\n        // handle refresh requests\n        this.handle_refresh(options.refresh_frames);\n\n        // strip protocol and domain\n        var url = this.grid.get(\"url_base\");\n        url = url.replace(/^.*\\/\\/[^\\/]+/, \"\");\n        this.grid.set(\"url_base\", url);\n\n        // append main template\n        this.$el.html(_gridTemplate2.default.grid(options));\n\n        // update div contents\n        this.$el.find(\"#grid-table-header\").html(_gridTemplate2.default.header(options));\n        this.$el.find(\"#grid-table-body\").html(_gridTemplate2.default.body(options));\n        this.$el.find(\"#grid-table-footer\").html(_gridTemplate2.default.footer(options));\n\n        // update message\n        if (options.message) {\n            this.$el.find(\"#grid-message\").html(_gridTemplate2.default.message(options));\n            var self = this;\n            if (options.use_hide_message) {\n                setTimeout(function () {\n                    self.$el.find(\"#grid-message\").html(\"\");\n                }, 5000);\n            }\n        }\n\n        // configure elements\n        this.init_grid_elements();\n        this.init_grid_controls();\n\n        // attach global event handler\n        // TODO: redundant (the onload/standard page handlers do this) - but needed because these are constructed after page ready\n        init_refresh_on_change();\n    },\n\n    // Initialize grid controls\n    init_grid_controls: function init_grid_controls() {\n        // link\n        var self = this;\n\n        // Initialize grid operation button.\n        this.$el.find(\".operation-button\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                self.submit_operation(this);\n                return false;\n            });\n        });\n\n        // Initialize text filters to select text on click and use normal font when user is typing.\n        this.$el.find(\"input[type=text]\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                $(this).select();\n            }).keyup(function () {\n                $(this).css(\"font-style\", \"normal\");\n            });\n        });\n\n        // Initialize sort links.\n        this.$el.find(\".sort-link\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                self.set_sort_condition($(this).attr(\"sort_key\"));\n                return false;\n            });\n        });\n\n        // Initialize text filters.\n        this.$el.find(\".text-filter-form\").each(function () {\n            $(this).off();\n            $(this).submit(function () {\n                var column_key = $(this).attr(\"column_key\");\n                var text_input_obj = $(\"#input-\" + column_key + \"-filter\");\n                var text_input = text_input_obj.val();\n                text_input_obj.val(\"\");\n                self.add_filter_condition(column_key, text_input);\n                return false;\n            });\n        });\n\n        // Initialize categorical filters.\n        this.$el.find(\".text-filter-val > a\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                // Remove visible element.\n                $(this).parent().remove();\n\n                // Remove filter condition.\n                self.remove_filter_condition($(this).attr(\"filter_key\"), $(this).attr(\"filter_val\"));\n\n                // Return\n                return false;\n            });\n        });\n\n        // Initialize categorical filters.\n        this.$el.find(\".categorical-filter > a\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                self.set_categorical_filter($(this).attr(\"filter_key\"), $(this).attr(\"filter_val\"));\n                return false;\n            });\n        });\n\n        // Initialize standard, advanced search toggles.\n        this.$el.find(\".advanced-search-toggle\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                self.$el.find(\"#standard-search\").slideToggle(\"fast\");\n                self.$el.find(\"#advanced-search\").slideToggle(\"fast\");\n                return false;\n            });\n        });\n\n        // Add event to check all box\n        this.$el.find(\"#check_all\").off();\n        this.$el.find(\"#check_all\").on(\"click\", function () {\n            self.check_all_items();\n        });\n    },\n\n    // Initialize grid elements.\n    init_grid_elements: function init_grid_elements() {\n        // Initialize grid selection checkboxes.\n        this.$el.find(\".grid\").each(function () {\n            var checkboxes = $(this).find(\"input.grid-row-select-checkbox\");\n            var check_count = $(this).find(\"span.grid-selected-count\");\n            var update_checked = function update_checked() {\n                check_count.text($(checkboxes).filter(\":checked\").length);\n            };\n\n            $(checkboxes).each(function () {\n                $(this).change(update_checked);\n            });\n            update_checked();\n        });\n\n        // Initialize ratings.\n        if (this.$el.find(\".community_rating_star\").length !== 0) this.$el.find(\".community_rating_star\").rating({});\n\n        // get options\n        var options = this.grid.attributes;\n        var self = this;\n\n        //\n        // add page click events\n        //\n        this.$el.find(\".page-link > a\").each(function () {\n            $(this).click(function () {\n                self.set_page($(this).attr(\"page_num\"));\n                return false;\n            });\n        });\n\n        //\n        // add inbound/outbound events\n        //\n        this.$el.find(\".use-target\").each(function () {\n            $(this).click(function (e) {\n                self.execute({\n                    href: $(this).attr(\"href\"),\n                    target: $(this).attr(\"target\")\n                });\n                return false;\n            });\n        });\n\n        // empty grid?\n        var items_length = options.items.length;\n        if (items_length == 0) {\n            return;\n        }\n\n        // add operation popup menus\n        _.each(options.items, function (item, index) {\n            var button = self.$(\"#grid-\" + index + \"-popup\").off();\n            var popup = new _popupMenu2.default(button);\n            _.each(options[\"operations\"], function (operation) {\n                self._add_operation(popup, operation, item);\n            });\n        });\n    },\n\n    /** Add an operation to the items menu */\n    _add_operation: function _add_operation(popup, operation, item) {\n        var self = this;\n        var settings = item.operation_config[operation.label];\n        if (settings.allowed && operation.allow_popup) {\n            popup.addItem({\n                html: operation.label,\n                href: settings.url_args,\n                target: settings.target,\n                confirmation_text: operation.confirm,\n                func: function func(e) {\n                    e.preventDefault();\n                    var label = $(e.target).html();\n                    if (operation.onclick) {\n                        operation.onclick(item.encode_id);\n                    } else {\n                        self.execute(this.findItemByHtml(label));\n                    }\n                }\n            });\n        }\n    },\n\n    // Add a condition to the grid filter; this adds the condition and refreshes the grid.\n    add_filter_condition: function add_filter_condition(name, value) {\n        // Do nothing is value is empty.\n        if (value === \"\") {\n            return false;\n        }\n\n        // Add condition to grid.\n        this.grid.add_filter(name, value, true);\n\n        // Add button that displays filter and provides a button to delete it.\n        var t = $(_gridTemplate2.default.filter_element(name, value));\n        var self = this;\n        t.click(function () {\n            // Remove visible element.\n            $(this).remove();\n\n            // Remove filter condition.\n            self.remove_filter_condition(name, value);\n        });\n\n        // append to container\n        var container = this.$el.find(\"#\" + name + \"-filtering-criteria\");\n        container.append(t);\n\n        // execute\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Remove a condition to the grid filter; this adds the condition and refreshes the grid.\n    remove_filter_condition: function remove_filter_condition(name, value) {\n        // Remove filter condition.\n        this.grid.remove_filter(name, value);\n\n        // Execute\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set sort condition for grid.\n    set_sort_condition: function set_sort_condition(col_key) {\n        // Set new sort condition. New sort is col_key if sorting new column; if reversing sort on\n        // currently sorted column, sort is reversed.\n        var cur_sort = this.grid.get(\"sort_key\");\n        var new_sort = col_key;\n        if (cur_sort.indexOf(col_key) !== -1) {\n            // Reverse sort.\n            if (cur_sort.substring(0, 1) !== \"-\") {\n                new_sort = \"-\" + col_key;\n            }\n        }\n\n        // Remove sort arrows elements.\n        this.$el.find(\".sort-arrow\").remove();\n\n        // Add sort arrow element to new sort column.\n        var sort_arrow = new_sort.substring(0, 1) == \"-\" ? \"&uarr;\" : \"&darr;\";\n        var t = $(\"<span>\" + sort_arrow + \"</span>\").addClass(\"sort-arrow\");\n\n        // Add to header\n        this.$el.find(\"#\" + col_key + \"-header\").append(t);\n\n        // Update grid.\n        this.grid.set(\"sort_key\", new_sort);\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set new value for categorical filter.\n    set_categorical_filter: function set_categorical_filter(name, new_value) {\n        // Update filter hyperlinks to reflect new filter value.\n        var category_filter = this.grid.get(\"categorical_filters\")[name],\n            cur_value = this.grid.get(\"filters\")[name];\n        var self = this;\n        this.$el.find(\".\" + name + \"-filter\").each(function () {\n            var text = $.trim($(this).text());\n            var filter = category_filter[text];\n            var filter_value = filter[name];\n            if (filter_value == new_value) {\n                // Remove filter link since grid will be using this filter. It is assumed that\n                // this element has a single child, a hyperlink/anchor with text.\n                $(this).empty();\n                $(this).addClass(\"current-filter\");\n                $(this).append(text);\n            } else if (filter_value == cur_value) {\n                // Add hyperlink for this filter since grid will no longer be using this filter. It is assumed that\n                // this element has a single child, a hyperlink/anchor.\n                $(this).empty();\n                var t = $('<a href=\"#\">' + text + \"</a>\");\n                t.click(function () {\n                    self.set_categorical_filter(name, filter_value);\n                });\n                $(this).removeClass(\"current-filter\");\n                $(this).append(t);\n            }\n        });\n\n        // Update grid.\n        this.grid.add_filter(name, new_value);\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set page to view.\n    set_page: function set_page(new_page) {\n        // Update page hyperlink to reflect new page.\n        var self = this;\n        this.$el.find(\".page-link\").each(function () {\n            var id = $(this).attr(\"id\"),\n                page_num = parseInt(id.split(\"-\")[2], 10),\n                // Id has form 'page-link-<page_num>\n            cur_page = self.grid.get(\"cur_page\"),\n                text;\n            if (page_num === new_page) {\n                // Remove link to page since grid will be on this page. It is assumed that\n                // this element has a single child, a hyperlink/anchor with text.\n                text = $(this).children().text();\n                $(this).empty();\n                $(this).addClass(\"inactive-link\");\n                $(this).text(text);\n            } else if (page_num === cur_page) {\n                // Add hyperlink to this page since grid will no longer be on this page. It is assumed that\n                // this element has a single child, a hyperlink/anchor.\n                text = $(this).text();\n                $(this).empty();\n                $(this).removeClass(\"inactive-link\");\n                var t = $('<a href=\"#\">' + text + \"</a>\");\n                t.click(function () {\n                    self.set_page(page_num);\n                });\n                $(this).append(t);\n            }\n        });\n\n        if (new_page === \"all\") {\n            this.grid.set(\"cur_page\", new_page);\n        } else {\n            this.grid.set(\"cur_page\", parseInt(new_page, 10));\n        }\n        this.execute();\n    },\n\n    // confirmation/submission of operation request\n    submit_operation: function submit_operation(operation_button, confirmation_text) {\n        // identify operation\n        var operation_name = $(operation_button).val();\n\n        // verify in any item is selected\n        var number_of_checked_ids = this.$el.find('input[name=\"id\"]:checked').length;\n        if (!number_of_checked_ids > 0) {\n            return false;\n        }\n\n        // Check to see if there's grid confirmation text for this operation\n        var operation = _.findWhere(this.grid.attributes.operations, {\n            label: operation_name\n        });\n        if (operation && !confirmation_text) {\n            confirmation_text = operation.confirm || \"\";\n        }\n\n        // collect ids\n        var item_ids = [];\n        this.$el.find(\"input[name=id]:checked\").each(function () {\n            item_ids.push($(this).val());\n        });\n\n        // execute operation\n        var options = {\n            operation: operation_name,\n            id: item_ids,\n            confirmation_text: confirmation_text\n        };\n        if (operation.target == \"top\") {\n            options = _.extend(options, {\n                href: operation.href,\n                target: operation.target\n            });\n        }\n        this.execute(options);\n        return true;\n    },\n\n    check_all_items: function check_all_items() {\n        var check = this.$(\".grid-row-select-checkbox\");\n        var state = this.$(\"#check_all\").prop(\"checked\");\n        _.each(check, function (c) {\n            $(c).prop(\"checked\", state);\n        });\n        this.init_grid_elements();\n    },\n\n    // Go back to page one; this is useful when a filter is applied.\n    go_page_one: function go_page_one() {\n        // Need to go back to page 1 if not showing all.\n        var cur_page = this.grid.get(\"cur_page\");\n        if (cur_page !== null && cur_page !== undefined && cur_page !== \"all\") {\n            this.grid.set(\"cur_page\", 1);\n        }\n    },\n\n    //\n    // execute operations and hyperlink requests\n    //\n    execute: function execute(options) {\n        // get url\n        var id = null;\n        var href = null;\n        var operation = null;\n        var confirmation_text = null;\n        var target = null;\n\n        // check for options\n        if (options) {\n            // get options\n            href = options.href;\n            operation = options.operation;\n            id = options.id;\n            confirmation_text = options.confirmation_text;\n            target = options.target;\n\n            // check if input contains the operation tag\n            if (href !== undefined && href.indexOf(\"operation=\") != -1) {\n                // Get operation, id in hyperlink's href.\n                var href_parts = href.split(\"?\");\n                if (href_parts.length > 1) {\n                    var href_parms_str = href_parts[1];\n                    var href_parms = href_parms_str.split(\"&\");\n                    for (var index = 0; index < href_parms.length; index++) {\n                        if (href_parms[index].indexOf(\"operation\") != -1) {\n                            // Found operation parm; get operation value.\n                            operation = href_parms[index].split(\"=\")[1];\n                            operation = operation.replace(/\\+/g, \" \");\n                        } else if (href_parms[index].indexOf(\"id\") != -1) {\n                            // Found id parm; get id value.\n                            id = href_parms[index].split(\"=\")[1];\n                        }\n                    }\n                }\n            }\n        }\n\n        // check for operation details\n        if (operation && id) {\n            // show confirmation box\n            if (confirmation_text && confirmation_text != \"\" && confirmation_text != \"None\" && confirmation_text != \"null\") if (!confirm(confirmation_text)) return false;\n\n            // use small characters for operation?!\n            operation = operation.toLowerCase();\n\n            // Update grid.\n            this.grid.set({\n                operation: operation,\n                item_ids: id\n            });\n\n            // Do operation. If operation cannot be performed asynchronously, redirect to location.\n            if (target == \"top\") {\n                window.top.location = href + \"?\" + $.param(this.grid.get_url_data());\n            } else if (this.grid.can_async_op(operation) || this.dict_format) {\n                this.update_grid();\n            } else {\n                this.go_to(target, href);\n            }\n\n            // done\n            return false;\n        }\n\n        // refresh grid\n        if (href) {\n            this.go_to(target, href);\n            return false;\n        }\n\n        // refresh grid\n        if (this.grid.get(\"async\") || this.dict_format) {\n            this.update_grid();\n        } else {\n            this.go_to(target, href);\n        }\n\n        // done\n        return false;\n    },\n\n    // go to url\n    go_to: function go_to(target, href) {\n        // get aysnc status\n        var async = this.grid.get(\"async\");\n        this.grid.set(\"async\", false);\n\n        // get slide status\n        var advanced_search = this.$el.find(\"#advanced-search\").is(\":visible\");\n        this.grid.set(\"advanced_search\", advanced_search);\n\n        // get default url\n        if (!href) {\n            href = this.grid.get(\"url_base\") + \"?\" + $.param(this.grid.get_url_data());\n        }\n\n        // clear grid of transient request attributes.\n        this.grid.set({\n            operation: undefined,\n            item_ids: undefined,\n            async: async\n        });\n        switch (target) {\n            case \"inbound\":\n                // this currently assumes that there is only a single grid shown at a time\n                var $div = $(\".grid-header\").closest(\".inbound\");\n                if ($div.length !== 0) {\n                    $div.load(href);\n                    return;\n                }\n                break;\n            case \"top\":\n                window.top.location = href;\n                break;\n            default:\n                window.location = href;\n        }\n    },\n\n    // Update grid.\n    update_grid: function update_grid() {\n        // If there's an operation, do POST; otherwise, do GET.\n        var method = this.grid.get(\"operation\") ? \"POST\" : \"GET\";\n\n        // Show overlay to indicate loading and prevent user actions.\n        this.$el.find(\".loading-elt-overlay\").show();\n        var self = this;\n        $.ajax({\n            type: method,\n            url: self.grid.get(\"url_base\"),\n            data: self.grid.get_url_data(),\n            error: function error(response) {\n                alert(\"Grid refresh failed\");\n            },\n            success: function success(response_text) {\n                // backup\n                var embedded = self.grid.get(\"embedded\");\n                var insert = self.grid.get(\"insert\");\n                var advanced_search = self.$el.find(\"#advanced-search\").is(\":visible\");\n\n                // request new configuration\n                var json = self.dict_format ? response_text : $.parseJSON(response_text);\n\n                // update\n                json.embedded = embedded;\n                json.insert = insert;\n                json.advanced_search = advanced_search;\n\n                // Initialize new grid config\n                self.init_grid(json);\n\n                // Hide loading overlay.\n                self.$el.find(\".loading-elt-overlay\").hide();\n            },\n            complete: function complete() {\n                // Clear grid of transient request attributes.\n                self.grid.set({\n                    operation: undefined,\n                    item_ids: undefined\n                });\n            }\n        });\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 17:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/**\n *  This class creates/wraps a default html select field as backbone class.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(10)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Buttons) {\n    var View = Backbone.View.extend({\n        initialize: function initialize(options) {\n            var self = this;\n            this.data = [];\n            this.data2 = [];\n            this.model = options && options.model || new Backbone.Model({\n                id: Utils.uid(),\n                cls: \"ui-select\",\n                error_text: \"No options available\",\n                empty_text: \"Nothing selected\",\n                visible: true,\n                wait: false,\n                multiple: false,\n                searchable: true,\n                optional: false,\n                disabled: false,\n                readonly: false,\n                onchange: function onchange() {},\n                value: null,\n                individual: false,\n                pagesize: 20\n            }).set(options);\n            this.on(\"change\", function () {\n                self.model.get(\"onchange\") && self.model.get(\"onchange\")(self.value());\n            });\n            this.listenTo(this.model, \"change:data\", this._changeData, this);\n            this.listenTo(this.model, \"change:disabled\", this._changeDisabled, this);\n            this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n            this.listenTo(this.model, \"change:visible\", this._changeVisible, this);\n            this.listenTo(this.model, \"change:value\", this._changeValue, this);\n            this.listenTo(this.model, \"change:multiple change:searchable change:cls change:id\", this.render, this);\n            this.render();\n        },\n\n        render: function render() {\n            var self = this;\n            this.model.get(\"searchable\") ? this._renderSearchable() : this._renderClassic();\n            this.$el.addClass(this.model.get(\"cls\")).attr(\"id\", this.model.get(\"id\"));\n            this.$select.empty().addClass(\"select\").attr(\"id\", this.model.get(\"id\") + \"_select\").prop(\"multiple\", this.model.get(\"multiple\")).on(\"change\", function () {\n                self.value(self._getValue());\n                self.trigger(\"change\");\n            });\n            this._changeData();\n            this._changeWait();\n            this._changeVisible();\n            this._changeDisabled();\n        },\n\n        /** Renders the classic selection field */\n        _renderClassic: function _renderClassic() {\n            var self = this;\n            this.$el.addClass(this.model.get(\"multiple\") ? \"ui-select-multiple\" : \"ui-select\").append(this.$select = $(\"<select/>\")).append(this.$dropdown = $(\"<div/>\")).append(this.$resize = $(\"<div/>\").append(this.$resize_icon = $(\"<i/>\")));\n            if (this.model.get(\"multiple\")) {\n                this.$dropdown.hide();\n                this.$resize_icon.addClass(\"fa fa-angle-double-right fa-rotate-45\").show();\n                this.$resize.removeClass().addClass(\"icon-resize\").show().off(\"mousedown\").on(\"mousedown\", function (event) {\n                    var currentY = event.pageY;\n                    var currentHeight = self.$select.height();\n                    self.minHeight = self.minHeight || currentHeight;\n                    $(\"#dd-helper\").show().on(\"mousemove\", function (event) {\n                        self.$select.height(Math.max(currentHeight + (event.pageY - currentY), self.minHeight));\n                    }).on(\"mouseup mouseleave\", function () {\n                        $(\"#dd-helper\").hide().off();\n                    });\n                });\n            } else {\n                this.$dropdown.show();\n                this.$resize.hide();\n                this.$resize_icon.hide();\n            }\n        },\n\n        /** Renders the default select2 field */\n        _renderSearchable: function _renderSearchable() {\n            var self = this;\n            this.$el.append(this.$select = $(\"<div/>\")).append(this.$dropdown = $(\"<div/>\"));\n            this.$dropdown.hide();\n            if (!this.model.get(\"multiple\")) {\n                this.$dropdown.show().on(\"click\", function () {\n                    self.$select.select2 && self.$select.select2(\"open\");\n                });\n            }\n            this.all_button = null;\n            if (this.model.get(\"multiple\") && !this.model.get(\"individual\") && !this.model.get(\"readonly\")) {\n                this.all_button = new Buttons.ButtonCheck({\n                    onclick: function onclick() {\n                        var new_value = [];\n                        self.all_button.value() !== 0 && _.each(self.model.get(\"data\"), function (option) {\n                            new_value.push(option.value);\n                        });\n                        self.value(new_value);\n                        self.trigger(\"change\");\n                    }\n                });\n                this.$el.prepend(this.all_button.$el);\n            }\n        },\n\n        /** Matches a search term with a given text */\n        _match: function _match(term, text) {\n            return !term || term == \"\" || String(text).toUpperCase().indexOf(term.toUpperCase()) >= 0;\n        },\n\n        /** Updates the selection options */\n        _changeData: function _changeData() {\n            var self = this;\n            this.data = [];\n            if (!this.model.get(\"multiple\") && this.model.get(\"optional\")) {\n                this.data.push({\n                    value: \"__null__\",\n                    label: self.model.get(\"empty_text\")\n                });\n            }\n            _.each(this.model.get(\"data\"), function (option) {\n                self.data.push(option);\n            });\n            if (this.length() == 0) {\n                this.data.push({\n                    value: \"__null__\",\n                    label: this.model.get(\"error_text\")\n                });\n            }\n            if (this.model.get(\"searchable\")) {\n                this.data2 = [];\n                _.each(this.data, function (option, index) {\n                    self.data2.push({\n                        order: index,\n                        id: option.value,\n                        text: option.label,\n                        tags: option.tags\n                    });\n                });\n                this.$select.data(\"select2\") && this.$select.select2(\"destroy\");\n                this.matched_tags = {};\n                this.$select.select2({\n                    data: self.data2,\n                    closeOnSelect: !this.model.get(\"multiple\"),\n                    multiple: this.model.get(\"multiple\"),\n                    query: function query(q) {\n                        self.matched_tags = {};\n                        var pagesize = self.model.get(\"pagesize\");\n                        var results = _.filter(self.data2, function (e) {\n                            var found = false;\n                            _.each(e.tags, function (tag) {\n                                if (self._match(q.term, tag)) {\n                                    found = self.matched_tags[tag] = true;\n                                }\n                            });\n                            return found || self._match(q.term, e.text);\n                        });\n                        q.callback({\n                            results: results.slice((q.page - 1) * pagesize, q.page * pagesize),\n                            more: results.length >= q.page * pagesize\n                        });\n                    },\n                    formatResult: function formatResult(result) {\n                        return _.escape(result.text) + '<div class=\"ui-tags\">' + _.reduce(result.tags, function (memo, tag) {\n                            if (self.matched_tags[tag]) {\n                                return memo + \"&nbsp;\" + '<div class=\"label label-info\">' + _.escape(tag) + \"</div>\";\n                            }\n                            return memo;\n                        }, \"\") + \"</div>\";\n                    }\n                });\n                this.$(\".select2-container .select2-search input\").off(\"blur\");\n            } else {\n                this.$select.find(\"option\").remove();\n                _.each(this.data, function (option) {\n                    self.$select.append($(\"<option/>\").attr(\"value\", option.value).html(_.escape(option.label)));\n                });\n            }\n            this.model.set(\"disabled\", this.model.get(\"readonly\") || this.length() == 0);\n            this._changeValue();\n        },\n\n        /** Handles field enabling/disabling, usually used when no options are available */\n        _changeDisabled: function _changeDisabled() {\n            if (this.model.get(\"searchable\")) {\n                this.$select.select2(this.model.get(\"disabled\") ? \"disable\" : \"enable\");\n            } else {\n                this.$select.prop(\"disabled\", this.model.get(\"disabled\"));\n            }\n        },\n\n        /** Searchable fields may display a spinner e.g. while waiting for a server response */\n        _changeWait: function _changeWait() {\n            this.$dropdown.removeClass().addClass(\"icon-dropdown fa\").addClass(this.model.get(\"wait\") ? \"fa-spinner fa-spin\" : \"fa-caret-down\");\n        },\n\n        /** Handles field visibility */\n        _changeVisible: function _changeVisible() {\n            this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n            this.$select[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        },\n\n        /** Synchronizes the model value with the actually selected field value */\n        _changeValue: function _changeValue() {\n            this._setValue(this.model.get(\"value\"));\n            if (this.model.get(\"multiple\")) {\n                if (this.all_button) {\n                    var value = this._getValue();\n                    this.all_button.value($.isArray(value) ? value.length : 0, this.length());\n                }\n            } else if (this._getValue() === null && !this.model.get(\"optional\")) {\n                this._setValue(this.first());\n            }\n        },\n\n        /** Return/Set current selection */\n        value: function value(new_value) {\n            new_value !== undefined && this.model.set(\"value\", new_value);\n            return this._getValue();\n        },\n\n        /** Return the first select option */\n        first: function first() {\n            return this.data.length > 0 ? this.data[0].value : null;\n        },\n\n        /** Check if a value is an existing option */\n        exists: function exists(value) {\n            return _.findWhere(this.data, { value: value });\n        },\n\n        /** Return the label/text of the current selection */\n        text: function text() {\n            var v = this._getValue();\n            var d = this.exists($.isArray(v) ? v[0] : v);\n            return d ? d.label : \"\";\n        },\n\n        /** Show the select field */\n        show: function show() {\n            this.model.set(\"visible\", true);\n        },\n\n        /** Hide the select field */\n        hide: function hide() {\n            this.model.set(\"visible\", false);\n        },\n\n        /** Show a spinner indicating that the select options are currently loaded */\n        wait: function wait() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Hide spinner indicating that the request has been completed */\n        unwait: function unwait() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Returns true if the field is disabled */\n        disabled: function disabled() {\n            return this.model.get(\"disabled\");\n        },\n\n        /** Enable the select field */\n        enable: function enable() {\n            this.model.set(\"disabled\", false);\n        },\n\n        /** Disable the select field */\n        disable: function disable() {\n            this.model.set(\"disabled\", true);\n        },\n\n        /** Update all available options at once */\n        add: function add(options, sorter) {\n            _.each(this.model.get(\"data\"), function (v) {\n                v.keep && !_.findWhere(options, { value: v.value }) && options.push(v);\n            });\n            sorter && options && options.sort(sorter);\n            this.model.set(\"data\", options);\n        },\n\n        /** Update available options */\n        update: function update(options) {\n            this.model.set(\"data\", options);\n        },\n\n        /** Set the custom onchange callback function */\n        setOnChange: function setOnChange(callback) {\n            this.model.set(\"onchange\", callback);\n        },\n\n        /** Number of available options */\n        length: function length() {\n            return $.isArray(this.model.get(\"data\")) ? this.model.get(\"data\").length : 0;\n        },\n\n        /** Set value to dom */\n        _setValue: function _setValue(new_value) {\n            var self = this;\n            if (new_value === null || new_value === undefined) {\n                new_value = \"__null__\";\n            }\n            if (this.model.get(\"multiple\")) {\n                new_value = $.isArray(new_value) ? new_value : [new_value];\n            } else if ($.isArray(new_value)) {\n                if (new_value.length > 0) {\n                    new_value = new_value[0];\n                } else {\n                    new_value = \"__null__\";\n                }\n            }\n            if (this.model.get(\"searchable\")) {\n                if ($.isArray(new_value)) {\n                    var val = [];\n                    _.each(new_value, function (v) {\n                        var d = _.findWhere(self.data2, { id: v });\n                        d && val.push(d);\n                    });\n                    new_value = val;\n                } else {\n                    var d = _.findWhere(this.data2, { id: new_value });\n                    new_value = d;\n                }\n                this.$select.select2(\"data\", new_value);\n            } else {\n                this.$select.val(new_value);\n            }\n        },\n\n        /** Get value from dom */\n        _getValue: function _getValue() {\n            var val = null;\n            if (this.model.get(\"searchable\")) {\n                var selected = this.$select.select2(\"data\");\n                if (selected) {\n                    if ($.isArray(selected)) {\n                        val = [];\n                        selected.sort(function (a, b) {\n                            return a.order - b.order;\n                        });\n                        _.each(selected, function (v) {\n                            val.push(v.id);\n                        });\n                    } else {\n                        val = selected.id;\n                    }\n                }\n            } else {\n                val = this.$select.val();\n            }\n            return Utils.isEmpty(val) ? null : val;\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 18:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/** Base class for options based ui elements **/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(10)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Buttons) {\n    var Base = Backbone.View.extend({\n        initialize: function initialize(options) {\n            var self = this;\n            this.model = options && options.model || new Backbone.Model({\n                visible: true,\n                data: [],\n                id: Utils.uid(),\n                error_text: \"No options available.\",\n                wait_text: \"Please wait...\",\n                multiple: false,\n                optional: false,\n                onchange: function onchange() {}\n            }).set(options);\n            this.listenTo(this.model, \"change:value\", this._changeValue, this);\n            this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n            this.listenTo(this.model, \"change:data\", this._changeData, this);\n            this.listenTo(this.model, \"change:visible\", this._changeVisible, this);\n            this.on(\"change\", function () {\n                self.model.get(\"onchange\")(self.value());\n            });\n            this.render();\n        },\n\n        render: function render() {\n            var self = this;\n            this.$el.empty().removeClass().addClass(\"ui-options\").append(this.$message = $(\"<div/>\")).append(this.$menu = $(\"<div/>\").addClass(\"ui-options-menu\")).append(this.$options = $(this._template()));\n\n            // add select/unselect all button\n            this.all_button = null;\n            if (this.model.get(\"multiple\")) {\n                this.all_button = new Buttons.ButtonCheck({\n                    onclick: function onclick() {\n                        self.$(\"input\").prop(\"checked\", self.all_button.value() !== 0);\n                        self.value(self._getValue());\n                        self.trigger(\"change\");\n                    }\n                });\n                this.$menu.append(this.all_button.$el);\n            }\n\n            // finalize dom\n            this._changeData();\n            this._changeWait();\n            this._changeVisible();\n        },\n\n        /** Update available options */\n        update: function update(options) {\n            this.model.set(\"data\", options);\n        },\n\n        _changeData: function _changeData() {\n            var self = this;\n            this.$options.empty();\n            if (this._templateOptions) {\n                this.$options.append(this._templateOptions(this.model.get(\"data\")));\n            } else {\n                _.each(this.model.get(\"data\"), function (option) {\n                    self.$options.append($(self._templateOption(option)).addClass(\"ui-option\").tooltip({\n                        title: option.tooltip,\n                        placement: \"bottom\"\n                    }));\n                });\n            }\n            var self = this;\n            this.$(\"input\").on(\"change\", function () {\n                self.value(self._getValue());\n                self.trigger(\"change\");\n            });\n            this._changeValue();\n            this._changeWait();\n        },\n\n        _changeVisible: function _changeVisible() {\n            this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        },\n\n        _changeWait: function _changeWait() {\n            if (this.model.get(\"wait\")) {\n                if (this.length() === 0) {\n                    this._messageShow(this.model.get(\"wait_text\"), \"info\");\n                    this.$options.hide();\n                    this.$menu.hide();\n                }\n            } else {\n                if (this.length() === 0) {\n                    this._messageShow(this.model.get(\"error_text\"), \"danger\");\n                    this.$options.hide();\n                    this.$menu.hide();\n                } else {\n                    this.$message.hide();\n                    this.$options.css(\"display\", \"inline-block\");\n                    this.$menu.show();\n                }\n            }\n        },\n\n        _changeValue: function _changeValue() {\n            this._setValue(this.model.get(\"value\"));\n            if (this._getValue() === null && !this.model.get(\"multiple\") && !this.model.get(\"optional\")) {\n                this._setValue(this.first());\n            }\n            this.all_button && this.all_button.value($.isArray(this._getValue()) ? this._getValue().length : 0, this.length());\n        },\n\n        /** Return/Set current selection */\n        value: function value(new_value) {\n            new_value !== undefined && this.model.set(\"value\", new_value);\n            return this._getValue();\n        },\n\n        /** Return first available option */\n        first: function first() {\n            var options = this.$(\"input\").first();\n            return options.length > 0 ? options.val() : null;\n        },\n\n        /** Show a spinner indicating that the select options are currently loaded */\n        wait: function wait() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Hide spinner indicating that the request has been completed */\n        unwait: function unwait() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Returns the number of options */\n        length: function length() {\n            return this.$(\".ui-option\").length;\n        },\n\n        /** Set value to dom */\n        _setValue: function _setValue(new_value) {\n            var self = this;\n            if (new_value !== undefined) {\n                this.$(\"input\").prop(\"checked\", false);\n                if (new_value !== null) {\n                    var values = $.isArray(new_value) ? new_value : [new_value];\n                    _.each(values, function (v) {\n                        self.$('input[value=\"' + v + '\"]').first().prop(\"checked\", true);\n                    });\n                }\n            }\n        },\n\n        /** Return current selection */\n        _getValue: function _getValue() {\n            var selected = [];\n            this.$(\":checked\").each(function () {\n                selected.push($(this).val());\n            });\n            if (Utils.isEmpty(selected)) {\n                return null;\n            }\n            return this.model.get(\"multiple\") ? selected : selected[0];\n        },\n\n        /** Show message instead if options */\n        _messageShow: function _messageShow(text, status) {\n            this.$message.show().removeClass().addClass(\"ui-message alert alert-\" + status).html(text);\n        },\n\n        /** Main template function */\n        _template: function _template() {\n            return $(\"<div/>\").addClass(\"ui-options-list\");\n        }\n    });\n\n    /** Iconized **/\n    var BaseIcons = Base.extend({\n        _templateOption: function _templateOption(pair) {\n            var id = Utils.uid();\n            return $(\"<div/>\").addClass(\"ui-option\").append($(\"<input/>\").attr({\n                id: id,\n                type: this.model.get(\"type\"),\n                name: this.model.id,\n                value: pair.value\n            })).append($(\"<label/>\").addClass(\"ui-options-label\").attr(\"for\", id).html(pair.label));\n        }\n    });\n\n    /** Radio button field **/\n    var Radio = {};\n    Radio.View = BaseIcons.extend({\n        initialize: function initialize(options) {\n            options.type = \"radio\";\n            BaseIcons.prototype.initialize.call(this, options);\n        }\n    });\n\n    /** Checkbox options field **/\n    var Checkbox = {};\n    Checkbox.View = BaseIcons.extend({\n        initialize: function initialize(options) {\n            options.type = \"checkbox\";\n            options.multiple = true;\n            BaseIcons.prototype.initialize.call(this, options);\n        }\n    });\n\n    /** Radio button options field styled as classic buttons **/\n    var RadioButton = {};\n    RadioButton.View = Base.extend({\n        initialize: function initialize(options) {\n            Base.prototype.initialize.call(this, options);\n        },\n\n        /** Set current value */\n        _setValue: function _setValue(new_value) {\n            if (new_value !== undefined) {\n                this.$(\"input\").prop(\"checked\", false);\n                this.$(\"label\").removeClass(\"active\");\n                this.$('[value=\"' + new_value + '\"]').prop(\"checked\", true).closest(\"label\").addClass(\"active\");\n            }\n        },\n\n        /** Template for a single option */\n        _templateOption: function _templateOption(pair) {\n            var $el = $(\"<label/>\").addClass(\"btn btn-default\");\n            pair.icon && $el.append($(\"<i/>\").addClass(\"fa\").addClass(pair.icon).addClass(!pair.label && \"no-padding\"));\n            $el.append($(\"<input/>\").attr({\n                type: \"radio\",\n                name: this.model.id,\n                value: pair.value\n            }));\n            pair.label && $el.append(pair.label);\n            return $el;\n        },\n\n        /** Main template function */\n        _template: function _template() {\n            return $(\"<div/>\").addClass(\"btn-group ui-radiobutton\").attr(\"data-toggle\", \"buttons\");\n        }\n    });\n\n    return {\n        Base: Base,\n        BaseIcons: BaseIcons,\n        Radio: Radio,\n        RadioButton: RadioButton,\n        Checkbox: Checkbox\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 19:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n// dependencies\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(8), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Portlet, Ui) {\n    // ui list element\n    var View = Backbone.View.extend({\n        // create portlet to keep track of selected list elements\n        initialize: function initialize(options) {\n            // link this\n            var self = this;\n\n            // initialize options\n            this.options = options;\n            this.name = options.name || \"element\";\n            this.multiple = options.multiple || false;\n\n            // create message handler\n            this.message = new Ui.Message();\n\n            // create portlet\n            this.portlet = new Portlet.View({ cls: \"ui-portlet-section\" });\n\n            // create select field containing the options which can be inserted into the list\n            this.select = new Ui.Select.View({ optional: options.optional });\n\n            // create insert new list element button\n            this.button = new Ui.ButtonIcon({\n                icon: \"fa fa-sign-in\",\n                tooltip: \"Insert new \" + this.name,\n                onclick: function onclick() {\n                    self.add({\n                        id: self.select.value(),\n                        name: self.select.text()\n                    });\n                }\n            });\n\n            // build main element\n            this.setElement(this._template(options));\n            this.$(\".ui-list-message\").append(this.message.$el);\n            this.$(\".ui-list-portlet\").append(this.portlet.$el);\n            this.$(\".ui-list-button\").append(this.button.$el);\n            this.$(\".ui-list-select\").append(this.select.$el);\n        },\n\n        /** Return/Set currently selected list elements */\n        value: function value(val) {\n            // set new value\n            if (val !== undefined) {\n                this.portlet.empty();\n                if ($.isArray(val)) {\n                    for (var i in val) {\n                        var v = val[i];\n                        var v_id = null;\n                        var v_name = null;\n                        if ($.type(v) != \"string\") {\n                            v_id = v.id;\n                            v_name = v.name;\n                        } else {\n                            v_id = v_name = v;\n                        }\n                        if (v_id != null) {\n                            this.add({\n                                id: v_id,\n                                name: v_name\n                            });\n                        }\n                    }\n                }\n                this._refresh();\n            }\n            // get current value\n            var lst = [];\n            this.$(\".ui-list-id\").each(function () {\n                lst.push({\n                    id: $(this).prop(\"id\"),\n                    name: $(this).find(\".ui-list-name\").html()\n                });\n            });\n            if (lst.length == 0) {\n                return null;\n            }\n            return lst;\n        },\n\n        /** Add row */\n        add: function add(options) {\n            var self = this;\n            if (this.$('[id=\"' + options.id + '\"]').length === 0) {\n                if (!Utils.isEmpty(options.id)) {\n                    var $el = $(this._templateRow({\n                        id: options.id,\n                        name: options.name\n                    }));\n                    $el.on(\"click\", function () {\n                        $el.remove();\n                        self._refresh();\n                    });\n                    $el.on(\"mouseover\", function () {\n                        $el.addClass(\"portlet-highlight\");\n                    });\n                    $el.on(\"mouseout\", function () {\n                        $el.removeClass(\"portlet-highlight\");\n                    });\n                    this.portlet.append($el);\n                    this._refresh();\n                } else {\n                    this.message.update({\n                        message: \"Please select a valid \" + this.name + \".\",\n                        status: \"danger\"\n                    });\n                }\n            } else {\n                this.message.update({\n                    message: \"This \" + this.name + \" is already in the list.\"\n                });\n            }\n        },\n\n        /** Update available options */\n        update: function update(options) {\n            this.select.update(options);\n        },\n\n        /** Refresh view */\n        _refresh: function _refresh() {\n            if (this.$(\".ui-list-id\").length > 0) {\n                !this.multiple && this.button.disable();\n                this.$(\".ui-list-portlet\").show();\n            } else {\n                this.button.enable();\n                this.$(\".ui-list-portlet\").hide();\n            }\n            this.options.onchange && this.options.onchange();\n        },\n\n        /** Main Template */\n        _template: function _template(options) {\n            return '<div class=\"ui-list\">' + '<div class=\"ui-margin-top\">' + '<span class=\"ui-list-button\"/>' + '<span class=\"ui-list-select\"/>' + \"</div>\" + '<div class=\"ui-list-message\"/>' + '<div class=\"ui-list-portlet\"/>' + \"</div>\";\n        },\n\n        /** Row Template */\n        _templateRow: function _templateRow(options) {\n            return '<div id=\"' + options.id + '\" class=\"ui-list-id\">' + '<span class=\"ui-list-delete fa fa-trash\"/>' + '<span class=\"ui-list-name\">' + options.name + \"</span>\" + \"</div>\";\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _, jQuery) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    //jquery\n    //backbone\n], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n    // =============================================================================\n    /**\n    * view for a popup menu\n    */\n    var PopupMenu = Backbone.View.extend({\n        //TODO: maybe better as singleton off the Galaxy obj\n        /** Cache the desired button element and options, set up the button click handler\n        *  NOTE: attaches this view as HTML/jQ data on the button for later use.\n        */\n        initialize: function initialize($button, options) {\n            // default settings\n            this.$button = $button;\n            if (!this.$button.length) {\n                this.$button = $(\"<div/>\");\n            }\n            this.options = options || [];\n            this.$button.data(\"popupmenu\", this);\n\n            // set up button click -> open menu behavior\n            var menu = this;\n            this.$button.click(function (event) {\n                // if there's already a menu open, remove it\n                $(\".popmenu-wrapper\").remove();\n                menu._renderAndShow(event);\n                return false;\n            });\n        },\n\n        // render the menu, append to the page body at the click position, and set up the 'click-away' handlers, show\n        _renderAndShow: function _renderAndShow(clickEvent) {\n            this.render();\n            this.$el.appendTo(\"body\").css(this._getShownPosition(clickEvent)).show();\n            this._setUpCloseBehavior();\n        },\n\n        // render the menu\n        // this menu doesn't attach itself to the DOM ( see _renderAndShow )\n        render: function render() {\n            // render the menu body absolute and hidden, fill with template\n            this.$el.addClass(\"popmenu-wrapper\").hide().css({ position: \"absolute\" }).html(this.template(this.$button.attr(\"id\"), this.options));\n\n            // set up behavior on each link/anchor elem\n            if (this.options.length) {\n                var menu = this;\n                //precondition: there should be one option per li\n                this.$el.find(\"li\").each(function (i, li) {\n                    var option = menu.options[i];\n\n                    // if the option has 'func', call that function when the anchor is clicked\n                    if (option.func) {\n                        $(this).children(\"a.popupmenu-option\").click(function (event) {\n                            option.func.call(menu, event, option);\n                            // We must preventDefault otherwise clicking \"cancel\"\n                            // on a purge or something still navigates and causes\n                            // the action.\n                            event.preventDefault();\n                            // bubble up so that an option click will call the close behavior\n                        });\n                    }\n                });\n            }\n            return this;\n        },\n\n        template: function template(id, options) {\n            return ['<ul id=\"', id, '-menu\" class=\"dropdown-menu\">', this._templateOptions(options), \"</ul>\"].join(\"\");\n        },\n\n        _templateOptions: function _templateOptions(options) {\n            if (!options.length) {\n                return \"<li>(no options)</li>\";\n            }\n            return _.map(options, function (option) {\n                if (option.divider) {\n                    return '<li class=\"divider\"></li>';\n                } else if (option.header) {\n                    return ['<li class=\"head\"><a href=\"javascript:void(0);\">', option.html, \"</a></li>\"].join(\"\");\n                }\n                var href = option.href || \"javascript:void(0);\",\n                    target = option.target ? ' target=\"' + option.target + '\"' : \"\",\n                    check = option.checked ? '<span class=\"fa fa-check\"></span>' : \"\";\n                return ['<li><a class=\"popupmenu-option\" href=\"', href, '\"', target, \">\", check, option.html, \"</a></li>\"].join(\"\");\n            }).join(\"\");\n        },\n\n        // get the absolute position/offset for the menu\n        _getShownPosition: function _getShownPosition(clickEvent) {\n            // display menu horiz. centered on click...\n            var menuWidth = this.$el.width();\n            var x = clickEvent.pageX - menuWidth / 2;\n\n            // adjust to handle horiz. scroll and window dimensions ( draw entirely on visible screen area )\n            x = Math.min(x, $(document).scrollLeft() + $(window).width() - menuWidth - 5);\n            x = Math.max(x, $(document).scrollLeft() + 5);\n            return {\n                top: clickEvent.pageY,\n                left: x\n            };\n        },\n\n        // bind an event handler to all available frames so that when anything is clicked\n        // the menu is removed from the DOM and the event handler unbinds itself\n        _setUpCloseBehavior: function _setUpCloseBehavior() {\n            var menu = this;\n            //TODO: alternately: focus hack, blocking overlay, jquery.blockui\n\n            // function to close popup and unbind itself\n            function closePopup(event) {\n                $(document).off(\"click.close_popup\");\n                if (window && window.parent !== window) {\n                    try {\n                        $(window.parent.document).off(\"click.close_popup\");\n                    } catch (err) {}\n                } else {\n                    try {\n                        $(\"iframe#galaxy_main\").contents().off(\"click.close_popup\");\n                    } catch (err) {}\n                }\n                menu.remove();\n            }\n\n            $(\"html\").one(\"click.close_popup\", closePopup);\n            if (window && window.parent !== window) {\n                try {\n                    $(window.parent.document).find(\"html\").one(\"click.close_popup\", closePopup);\n                } catch (err) {}\n            } else {\n                try {\n                    $(\"iframe#galaxy_main\").contents().one(\"click.close_popup\", closePopup);\n                } catch (err) {}\n            }\n        },\n\n        // add a menu option/item at the given index\n        addItem: function addItem(item, index) {\n            // append to end if no index\n            index = index >= 0 ? index : this.options.length;\n            this.options.splice(index, 0, item);\n            return this;\n        },\n\n        // remove a menu option/item at the given index\n        removeItem: function removeItem(index) {\n            if (index >= 0) {\n                this.options.splice(index, 1);\n            }\n            return this;\n        },\n\n        // search for a menu option by its html\n        findIndexByHtml: function findIndexByHtml(html) {\n            for (var i = 0; i < this.options.length; i++) {\n                if (_.has(this.options[i], \"html\") && this.options[i].html === html) {\n                    return i;\n                }\n            }\n            return null;\n        },\n\n        // search for a menu option by its html\n        findItemByHtml: function findItemByHtml(html) {\n            return this.options[this.findIndexByHtml(html)];\n        },\n\n        // string representation\n        toString: function toString() {\n            return \"PopupMenu\";\n        }\n    });\n    /** shortcut to new for when you don't need to preserve the ref */\n    PopupMenu.create = function _create($button, options) {\n        return new PopupMenu($button, options);\n    };\n\n    // -----------------------------------------------------------------------------\n    // the following class functions are bridges from the original make_popupmenu and make_popup_menus\n    // to the newer backbone.js PopupMenu\n\n    /** Create a PopupMenu from simple map initial_options activated by clicking button_element.\n    *      Converts initial_options to object array used by PopupMenu.\n    *  @param {jQuery|DOMElement} button_element element which, when clicked, activates menu\n    *  @param {Object} initial_options map of key -> values, where\n    *      key is option text, value is fn to call when option is clicked\n    *  @returns {PopupMenu} the PopupMenu created\n    */\n    PopupMenu.make_popupmenu = function (button_element, initial_options) {\n        var convertedOptions = [];\n        _.each(initial_options, function (optionVal, optionKey) {\n            var newOption = { html: optionKey };\n\n            // keys with null values indicate: header\n            if (optionVal === null) {\n                // !optionVal? (null only?)\n                newOption.header = true;\n\n                // keys with function values indicate: a menu option\n            } else if (jQuery.type(optionVal) === \"function\") {\n                newOption.func = optionVal;\n            }\n            //TODO:?? any other special optionVals?\n            // there was no divider option originally\n            convertedOptions.push(newOption);\n        });\n        return new PopupMenu($(button_element), convertedOptions);\n    };\n\n    /** Find all anchors in $parent (using selector) and covert anchors into a PopupMenu options map.\n    *  @param {jQuery} $parent the element that contains the links to convert to options\n    *  @param {String} selector jq selector string to find links\n    *  @returns {Object[]} the options array to initialize a PopupMenu\n    */\n    //TODO: lose parent and selector, pass in array of links, use map to return options\n    PopupMenu.convertLinksToOptions = function ($parent, selector) {\n        $parent = $($parent);\n        selector = selector || \"a\";\n        var options = [];\n        $parent.find(selector).each(function (elem, i) {\n            var option = {},\n                $link = $(elem);\n\n            // convert link text to the option text (html) and the href into the option func\n            option.html = $link.text();\n            if ($link.attr(\"href\")) {\n                var linkHref = $link.attr(\"href\"),\n                    linkTarget = $link.attr(\"target\"),\n                    confirmText = $link.attr(\"confirm\");\n\n                option.func = function () {\n                    // if there's a \"confirm\" attribute, throw up a confirmation dialog, and\n                    //  if the user cancels - do nothing\n                    if (confirmText && !confirm(confirmText)) {\n                        return;\n                    }\n\n                    // if there's no confirm attribute, or the user accepted the confirm dialog:\n                    switch (linkTarget) {\n                        // relocate the center panel\n                        case \"_parent\":\n                            window.parent.location = linkHref;\n                            break;\n\n                        // relocate the entire window\n                        case \"_top\":\n                            window.top.location = linkHref;\n                            break;\n\n                        // relocate this panel\n                        default:\n                            window.location = linkHref;\n                    }\n                };\n            }\n            options.push(option);\n        });\n        return options;\n    };\n\n    /** Create a single popupmenu from existing DOM button and anchor elements\n    *  @param {jQuery} $buttonElement the element that when clicked will open the menu\n    *  @param {jQuery} $menuElement the element that contains the anchors to convert into a menu\n    *  @param {String} menuElementLinkSelector jq selector string used to find anchors to be made into menu options\n    *  @returns {PopupMenu} the PopupMenu (Backbone View) that can render, control the menu\n    */\n    PopupMenu.fromExistingDom = function ($buttonElement, $menuElement, menuElementLinkSelector) {\n        $buttonElement = $($buttonElement);\n        $menuElement = $($menuElement);\n        var options = PopupMenu.convertLinksToOptions($menuElement, menuElementLinkSelector);\n        // we're done with the menu (having converted it to an options map)\n        $menuElement.remove();\n        return new PopupMenu($buttonElement, options);\n    };\n\n    /** Create all popupmenus within a document or a more specific element\n    *  @param {DOMElement} parent the DOM element in which to search for popupmenus to build (defaults to document)\n    *  @param {String} menuSelector jq selector string to find popupmenu menu elements (defaults to \"div[popupmenu]\")\n    *  @param {Function} buttonSelectorBuildFn the function to build the jq button selector.\n    *      Will be passed $menuElement, parent.\n    *      (Defaults to return '#' + $menuElement.attr( 'popupmenu' ); )\n    *  @returns {PopupMenu[]} array of popupmenus created\n    */\n    PopupMenu.make_popup_menus = function (parent, menuSelector, buttonSelectorBuildFn) {\n        parent = parent || document;\n        // orig. Glx popupmenu menus have a (non-std) attribute 'popupmenu'\n        //  which contains the id of the button that activates the menu\n        menuSelector = menuSelector || \"div[popupmenu]\";\n        // default to (orig. Glx) matching button to menu by using the popupmenu attr of the menu as the id of the button\n        buttonSelectorBuildFn = buttonSelectorBuildFn || function ($menuElement, parent) {\n            return \"#\" + $menuElement.attr(\"popupmenu\");\n        };\n\n        // aggregate and return all PopupMenus\n        var popupMenusCreated = [];\n        $(parent).find(menuSelector).each(function () {\n            var $menuElement = $(this),\n                $buttonElement = $(parent).find(buttonSelectorBuildFn($menuElement, parent));\n            popupMenusCreated.push(PopupMenu.fromDom($buttonElement, $menuElement));\n            $buttonElement.addClass(\"popup\");\n        });\n        return popupMenusCreated;\n    };\n\n    // =============================================================================\n    return PopupMenu;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 22:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/** This class creates a ui table element. */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils) {\n    var View = Backbone.View.extend({\n        initialize: function initialize(options) {\n            this.options = Utils.merge(options, {\n                content: \"No content available.\",\n                onchange: null,\n                ondblclick: null,\n                onconfirm: null,\n                cls: \"ui-table\",\n                selectable: true,\n                cls_tr: \"\"\n            });\n            this.setElement(this._template());\n            this.$thead = this.$(\"thead\");\n            this.$tbody = this.$(\"tbody\");\n            this.$tmessage = this.$(\"tmessage\");\n            this.row = this._row();\n            this.row_count = 0;\n        },\n\n        events: {\n            click: \"_onclick\",\n            dblclick: \"_ondblclick\"\n        },\n\n        /** Add cell to header row */\n        addHeader: function addHeader($el) {\n            this.row.append($(\"<th/>\").append($el));\n        },\n\n        /** Append header row to table */\n        appendHeader: function appendHeader() {\n            this.$thead.append(this.row);\n            this.row = $(\"<tr/>\");\n        },\n\n        /** Add cell to row */\n        add: function add($el, width, align) {\n            var wrapper = $(\"<td/>\");\n            if (width) {\n                wrapper.css(\"width\", width);\n            }\n            if (align) {\n                wrapper.css(\"text-align\", align);\n            }\n            this.row.append(wrapper.append($el));\n        },\n\n        /** Append row to table */\n        append: function append(id, fade) {\n            this._commit(id, fade, false);\n        },\n\n        /** Prepend row to table */\n        prepend: function prepend(id, fade) {\n            this._commit(id, fade, true);\n        },\n\n        /** Helper to get row element */\n        get: function get(id) {\n            return this.$(\"#\" + id);\n        },\n\n        /** Delete row by id */\n        del: function del(id) {\n            var item = this.$tbody.find(\"#\" + id);\n            if (item.length > 0) {\n                item.remove();\n                this.row_count--;\n                this._refresh();\n            }\n        },\n\n        /** Delete all rows */\n        delAll: function delAll() {\n            this.$tbody.empty();\n            this.row_count = 0;\n            this._refresh();\n        },\n\n        /** Set a value i.e. selects/highlights a particular row by id */\n        value: function value(new_value) {\n            if (this.options.selectable) {\n                this.before = this.$tbody.find(\".current\").attr(\"id\");\n                if (new_value !== undefined) {\n                    this.$tbody.find(\"tr\").removeClass(\"current\");\n                    if (new_value) {\n                        this.$tbody.find(\"#\" + new_value).addClass(\"current\");\n                    }\n                }\n                var after = this.$tbody.find(\".current\").attr(\"id\");\n                if (after === undefined) {\n                    return null;\n                } else {\n                    if (after != this.before && this.options.onchange) {\n                        this.options.onchange(new_value);\n                    }\n                    return after;\n                }\n            }\n        },\n\n        /** Return the number of rows */\n        size: function size() {\n            return this.$tbody.find(\"tr\").length;\n        },\n\n        /** Helper to append rows */\n        _commit: function _commit(id, fade, prepend) {\n            this.del(id);\n            this.row.attr(\"id\", id);\n            if (prepend) {\n                this.$tbody.prepend(this.row);\n            } else {\n                this.$tbody.append(this.row);\n            }\n            if (fade) {\n                this.row.hide();\n                this.row.fadeIn();\n            }\n            this.row = this._row();\n            this.row_count++;\n            this._refresh();\n        },\n\n        /** Helper to create new row */\n        _row: function _row() {\n            return $('<tr class=\"' + this.options.cls_tr + '\"></tr>');\n        },\n\n        /** Handles onclick events */\n        _onclick: function _onclick(e) {\n            var old_value = this.value();\n            var new_value = $(e.target).closest(\"tr\").attr(\"id\");\n            if (new_value != \"\") {\n                if (new_value && old_value != new_value) {\n                    if (this.options.onconfirm) {\n                        this.options.onconfirm(new_value);\n                    } else {\n                        this.value(new_value);\n                    }\n                }\n            }\n        },\n\n        /** Handles ondblclick events */\n        _ondblclick: function _ondblclick(e) {\n            var value = this.value();\n            if (value && this.options.ondblclick) {\n                this.options.ondblclick(value);\n            }\n        },\n\n        /** Refresh helper */\n        _refresh: function _refresh() {\n            if (this.row_count == 0) {\n                this.$tmessage.show();\n            } else {\n                this.$tmessage.hide();\n            }\n        },\n\n        /** Template */\n        _template: function _template() {\n            return \"<div>\" + '<table class=\"' + this.options.cls + '\">' + \"<thead/>\" + \"<tbody/>\" + \"</table>\" + \"<tmessage>\" + this.options.content + \"</tmessage>\" + \"<div>\";\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 23:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Manager = Backbone.Model.extend({\n    initialize: function initialize(app) {\n        this.app = app;\n    },\n\n    /** Creates a checksum. */\n    checksum: function checksum() {\n        var sum = \"\";\n        var self = this;\n        this.app.section.$el.find(\".section-row\").each(function () {\n            var id = $(this).attr(\"id\");\n            var field = self.app.field_list[id];\n            if (field) {\n                sum += id + \":\" + JSON.stringify(field.value && field.value()) + \":\" + field.collapsed + \";\";\n            }\n        });\n        return sum;\n    },\n\n    /** Convert dom into a dictionary of flat id/value pairs used e.g. on job submission. */\n    create: function create() {\n        var self = this;\n\n        // get raw dictionary from dom\n        var dict = {};\n        this._iterate(this.app.section.$el, dict);\n\n        // add to result dictionary, label elements\n        var result_dict = {};\n        this.flat_dict = {};\n        function add(flat_id, input_id, input_value) {\n            self.flat_dict[flat_id] = input_id;\n            result_dict[flat_id] = input_value;\n            self.app.element_list[input_id] && self.app.element_list[input_id].$el.attr(\"tour_id\", flat_id);\n        }\n        // converter between raw dictionary and job dictionary\n        function convert(identifier, head) {\n            for (var index in head) {\n                var node = head[index];\n                if (node.input) {\n                    var input = node.input;\n                    var flat_id = identifier;\n                    if (identifier != \"\") {\n                        flat_id += \"|\";\n                    }\n                    flat_id += input.name;\n                    switch (input.type) {\n                        case \"repeat\":\n                            var section_label = \"section-\";\n                            var block_indices = [];\n                            var block_prefix = null;\n                            for (var block_label in node) {\n                                var pos = block_label.indexOf(section_label);\n                                if (pos != -1) {\n                                    pos += section_label.length;\n                                    block_indices.push(parseInt(block_label.substr(pos)));\n                                    if (!block_prefix) {\n                                        block_prefix = block_label.substr(0, pos);\n                                    }\n                                }\n                            }\n                            block_indices.sort(function (a, b) {\n                                return a - b;\n                            });\n                            var index = 0;\n                            for (var i in block_indices) {\n                                convert(flat_id + \"_\" + index++, node[block_prefix + block_indices[i]]);\n                            }\n                            break;\n                        case \"conditional\":\n                            var value = self.app.field_list[input.id].value();\n                            add(flat_id + \"|\" + input.test_param.name, input.id, value);\n                            var selectedCase = _matchCase(input, value);\n                            if (selectedCase != -1) {\n                                convert(flat_id, head[input.id + \"-section-\" + selectedCase]);\n                            }\n                            break;\n                        case \"section\":\n                            convert(!input.flat && flat_id || \"\", node);\n                            break;\n                        default:\n                            var field = self.app.field_list[input.id];\n                            if (field && field.value) {\n                                var value = field.value();\n                                if (input.ignore === undefined || input.ignore != value) {\n                                    if (field.collapsed && input.collapsible_value) {\n                                        value = input.collapsible_value;\n                                    }\n                                    add(flat_id, input.id, value);\n                                    if (input.payload) {\n                                        for (var p_id in input.payload) {\n                                            add(p_id, input.id, input.payload[p_id]);\n                                        }\n                                    }\n                                }\n                            }\n                    }\n                }\n            }\n        }\n        convert(\"\", dict);\n        return result_dict;\n    },\n\n    /** Matches flat ids to corresponding input element\n         * @param{string} flat_id - Flat input id to be looked up.\n         */\n    match: function match(flat_id) {\n        return this.flat_dict && this.flat_dict[flat_id];\n    },\n\n    /** Match conditional values to selected cases\n        */\n    matchCase: function matchCase(input, value) {\n        return _matchCase(input, value);\n    },\n\n    /** Matches a new tool model to the current input elements e.g. used to update dynamic options\n        */\n    matchModel: function matchModel(model, callback) {\n        var self = this;\n        visitInputs(model.inputs, function (input, name) {\n            self.flat_dict[name] && callback(input, self.flat_dict[name]);\n        });\n    },\n\n    /** Matches identifier from api response to input elements e.g. used to display validation errors\n        */\n    matchResponse: function matchResponse(response) {\n        var result = {};\n        var self = this;\n        function search(id, head) {\n            if (typeof head === \"string\") {\n                var input_id = self.flat_dict[id];\n                input_id && (result[input_id] = head);\n            } else {\n                for (var i in head) {\n                    var new_id = i;\n                    if (id !== \"\") {\n                        var separator = \"|\";\n                        if (head instanceof Array) {\n                            separator = \"_\";\n                        }\n                        new_id = id + separator + new_id;\n                    }\n                    search(new_id, head[i]);\n                }\n            }\n        }\n        search(\"\", response);\n        return result;\n    },\n\n    /** Map dom tree to dictionary tree with input elements.\n        */\n    _iterate: function _iterate(parent, dict) {\n        var self = this;\n        var children = $(parent).children();\n        children.each(function () {\n            var child = this;\n            var id = $(child).attr(\"id\");\n            if ($(child).hasClass(\"section-row\")) {\n                var input = self.app.input_list[id];\n                dict[id] = input && { input: input } || {};\n                self._iterate(child, dict[id]);\n            } else {\n                self._iterate(child, dict);\n            }\n        });\n    }\n});\n\n/** Match conditional values to selected cases\n     * @param{dict}   input     - Definition of conditional input parameter\n     * @param{dict}   value     - Current value\n     */\n/* This class maps the form dom to an api compatible javascript dictionary. */\nvar _matchCase = function _matchCase(input, value) {\n    if (input.test_param.type == \"boolean\") {\n        if (value == \"true\") {\n            value = input.test_param.truevalue || \"true\";\n        } else {\n            value = input.test_param.falsevalue || \"false\";\n        }\n    }\n    for (var i in input.cases) {\n        if (input.cases[i].value == value) {\n            return i;\n        }\n    }\n    return -1;\n};\n\n/** Visits tool inputs\n     * @param{dict}   inputs    - Nested dictionary of input elements\n     * @param{dict}   callback  - Called with the mapped dictionary object and corresponding model node\n     */\nvar visitInputs = function visitInputs(inputs, callback, prefix, context) {\n    context = $.extend(true, {}, context);\n    _.each(inputs, function (input) {\n        if (input && input.type && input.name) {\n            context[input.name] = input;\n        }\n    });\n    for (var key in inputs) {\n        var node = inputs[key];\n        node.name = node.name || key;\n        var name = prefix ? prefix + \"|\" + node.name : node.name;\n        switch (node.type) {\n            case \"repeat\":\n                _.each(node.cache, function (cache, j) {\n                    visitInputs(cache, callback, name + \"_\" + j, context);\n                });\n                break;\n            case \"conditional\":\n                if (node.test_param) {\n                    callback(node.test_param, name + \"|\" + node.test_param.name, context);\n                    var selectedCase = _matchCase(node, node.test_param.value);\n                    if (selectedCase != -1) {\n                        visitInputs(node.cases[selectedCase].inputs, callback, name, context);\n                    } else {\n                        Galaxy.emit.debug(\"form-data::visitInputs() - Invalid case for \" + name + \".\");\n                    }\n                } else {\n                    Galaxy.emit.debug(\"form-data::visitInputs() - Conditional test parameter missing for \" + name + \".\");\n                }\n                break;\n            case \"section\":\n                visitInputs(node.inputs, callback, name, context);\n                break;\n            default:\n                callback(node, name, context);\n        }\n    }\n};\n\nexports.default = {\n    Manager: Manager,\n    visitInputs: visitInputs\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 27:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// dependencies\n\n// grid model\nexports.default = Backbone.Model.extend({\n    defaults: {\n        url_base: \"\",\n        async: false,\n        async_ops: [],\n        categorical_filters: [],\n        filters: {},\n        sort_key: null,\n        show_item_checkboxes: false,\n        advanced_search: false,\n        cur_page: 1,\n        num_pages: 1,\n        operation: undefined,\n        item_ids: undefined\n    },\n\n    /**\n     * Return true if operation can be done asynchronously.\n     */\n    can_async_op: function can_async_op(op) {\n        return _.indexOf(this.attributes.async_ops, op) !== -1;\n    },\n\n    /**\n     * Add filtering criterion.\n     */\n    add_filter: function add_filter(key, value, append) {\n        // Update URL arg with new condition.\n        if (append) {\n            // Update or append value.\n            var cur_val = this.attributes.filters[key],\n                new_val;\n            if (cur_val === null || cur_val === undefined) {\n                new_val = value;\n            } else if (typeof cur_val == \"string\") {\n                if (cur_val == \"All\" || cur_val == value) {\n                    new_val = value;\n                } else {\n                    // Replace string with array.\n                    var values = [];\n                    values[0] = cur_val;\n                    values[1] = value;\n                    new_val = values;\n                }\n            } else {\n                // Current value is an array.\n                new_val = cur_val;\n                if (new_val.indexOf(value) === -1) {\n                    new_val.push(value);\n                }\n            }\n            this.attributes.filters[key] = new_val;\n        } else {\n            // Replace value.\n            this.attributes.filters[key] = value;\n        }\n    },\n\n    /**\n     * Remove filtering criterion.\n     */\n    remove_filter: function remove_filter(key, condition) {\n        var cur_val = this.attributes.filters[key];\n        if (cur_val === null || cur_val === undefined) {\n            return false;\n        }\n\n        if (typeof cur_val === \"string\") {\n            // overwrite/remove condition.\n            this.attributes.filters[key] = \"\";\n        } else {\n            // filter contains an array of conditions.\n            var condition_index = _.indexOf(cur_val, condition);\n            if (condition_index !== -1) {\n                cur_val[condition_index] = \"\";\n            }\n        }\n    },\n\n    /**\n     * Returns URL data for obtaining a new grid.\n     */\n    get_url_data: function get_url_data() {\n        var url_data = {\n            async: this.attributes.async,\n            sort: this.attributes.sort_key,\n            page: this.attributes.cur_page,\n            show_item_checkboxes: this.attributes.show_item_checkboxes,\n            advanced_search: this.attributes.advanced_search\n        };\n\n        // Add operation, item_ids only if they have values.\n        if (this.attributes.operation) {\n            url_data.operation = this.attributes.operation;\n        }\n        if (this.attributes.item_ids) {\n            url_data.id = this.attributes.item_ids;\n        }\n\n        // Add filter arguments to data, placing \"f-\" in front of all arguments.\n        var self = this;\n        _.each(_.pairs(self.attributes.filters), function (k) {\n            url_data[\"f-\" + k[0]] = k[1];\n        });\n        return url_data;\n    },\n\n    // Return URL for obtaining a new grid\n    get_url: function get_url(args) {\n        return this.get(\"url_base\") + \"?\" + $.param(this.get_url_data()) + \"&\" + $.param(args);\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 28:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// grid view templates\nexports.default = {\n    // template\n    grid: function grid(options) {\n        var tmpl = \"\";\n        if (options.embedded) {\n            tmpl = this.grid_header(options) + this.grid_table(options);\n        } else {\n            tmpl = '<div class=\"loading-elt-overlay\"></div>' + \"<table>\" + \"<tr>\" + '<td width=\"75%\">' + this.grid_header(options) + \"</td>\" + \"<td></td>\" + \"<td></td>\" + \"</tr>\" + \"<tr>\" + '<td width=\"100%\" id=\"grid-message\" valign=\"top\"></td>' + \"<td></td>\" + \"<td></td>\" + \"</tr>\" + \"</table>\" + this.grid_table(options);\n        }\n\n        // add info text\n        if (options.info_text) {\n            tmpl += '<br><div class=\"toolParamHelp\" style=\"clear: both;\">' + options.info_text + \"</div>\";\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    grid_table: function grid_table(options) {\n        return '<form method=\"post\" onsubmit=\"return false;\">' + '<table id=\"grid-table\" class=\"grid\">' + '<thead id=\"grid-table-header\"></thead>' + '<tbody id=\"grid-table-body\"></tbody>' + '<tfoot id=\"grid-table-footer\"></tfoot>' + \"</table>\" + \"</form>\";\n    },\n\n    // template\n    grid_header: function grid_header(options) {\n        var tmpl = '<div class=\"grid-header\">';\n        if (!options.embedded) {\n            tmpl += \"<h2>\" + options.title + \"</h2>\";\n        }\n        if (options.global_actions) {\n            tmpl += '<ul class=\"manage-table-actions\">';\n            var show_popup = options.global_actions.length >= 3;\n            if (show_popup) {\n                tmpl += '<li><a class=\"action-button\" id=\"popup-global-actions\" class=\"menubutton\">Actions</a></li>' + '<div popupmenu=\"popup-global-actions\">';\n            }\n            for (var i in options.global_actions) {\n                var action = options.global_actions[i];\n                tmpl += \"<li>\" + '<a class=\"action-button use-target\" target=\"' + action.target + '\" href=\"' + action.url_args + '\" onclick=\"return false;\" >' + action.label + \"</a>\" + \"</li>\";\n            }\n            if (show_popup) {\n                tmpl += \"</div>\";\n            }\n            tmpl += \"</ul>\";\n        }\n        if (options.insert) {\n            tmpl += options.insert;\n        }\n\n        // add grid filters\n        tmpl += this.grid_filters(options);\n        tmpl += \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    header: function header(options) {\n        // start\n        var tmpl = \"<tr>\";\n\n        // add checkbox\n        if (options.show_item_checkboxes) {\n            tmpl += \"<th>\";\n            if (options.items.length > 0) {\n                tmpl += '<input type=\"checkbox\" id=\"check_all\" name=select_all_checkbox value=\"true\">' + '<input type=\"hidden\" name=select_all_checkbox value=\"true\">';\n            }\n            tmpl += \"</th>\";\n        }\n\n        // create header elements\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.visible) {\n                tmpl += '<th id=\"' + column.key + '-header\">';\n                if (column.href) {\n                    tmpl += '<a href=\"' + column.href + '\" class=\"sort-link\" sort_key=\"' + column.key + '\">' + column.label + \"</a>\";\n                } else {\n                    tmpl += column.label;\n                }\n                tmpl += '<span class=\"sort-arrow\">' + column.extra + \"</span>\" + \"</th>\";\n            }\n        }\n\n        // finalize\n        tmpl += \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    body: function body(options) {\n        // initialize\n        var tmpl = \"\";\n        var num_rows_rendered = 0;\n        var items_length = options.items.length;\n\n        // empty grid?\n        if (items_length == 0) {\n            // No results.\n            tmpl += '<tr><td colspan=\"100\"><em>No Items</em></td></tr>';\n            num_rows_rendered = 1;\n        }\n\n        // create rows\n        for (var i in options.items) {\n            // encode ids\n            var item = options.items[i];\n            var encoded_id = item.encode_id;\n            var popupmenu_id = \"grid-\" + i + \"-popup\";\n\n            // Tag current\n            tmpl += \"<tr \";\n            if (options.current_item_id == item.id) {\n                tmpl += 'class=\"current\"';\n            }\n            tmpl += \">\";\n\n            // Item selection column\n            if (options.show_item_checkboxes) {\n                tmpl += '<td style=\"width: 1.5em;\">' + '<input type=\"checkbox\" name=\"id\" value=\"' + encoded_id + '\" id=\"' + encoded_id + '\" class=\"grid-row-select-checkbox\" />' + \"</td>\";\n            }\n\n            // Data columns\n            for (var j in options.columns) {\n                var column = options.columns[j];\n                if (column.visible) {\n                    // Nowrap\n                    var nowrap = \"\";\n                    if (column.nowrap) {\n                        nowrap = 'style=\"white-space:nowrap;\"';\n                    }\n\n                    // get column settings\n                    var column_settings = item.column_config[column.label];\n\n                    // load attributes\n                    var link = column_settings.link;\n                    var value = column_settings.value;\n                    var target = column_settings.target;\n\n                    // unescape value\n                    if (jQuery.type(value) === \"string\") {\n                        value = value.replace(/\\/\\//g, \"/\");\n                    }\n\n                    // Attach popup menu?\n                    var id = \"\";\n                    var cls = \"\";\n                    if (column.attach_popup) {\n                        id = \"grid-\" + i + \"-popup\";\n                        cls = \"menubutton\";\n                        if (link != \"\") {\n                            cls += \" split\";\n                        }\n                        cls += \" popup\";\n                    }\n\n                    // Check for row wrapping\n                    tmpl += \"<td \" + nowrap + \">\";\n\n                    // Link\n                    if (link) {\n                        if (options.operations.length != 0) {\n                            tmpl += '<div id=\"' + id + '\" class=\"' + cls + '\" style=\"float: left;\">';\n                        }\n                        tmpl += '<a class=\"menubutton-label use-target\" target=\"' + target + '\" href=\"' + link + '\" onclick=\"return false;\">' + value + \"</a>\";\n                        if (options.operations.length != 0) {\n                            tmpl += \"</div>\";\n                        }\n                    } else {\n                        tmpl += '<div id=\"' + id + '\" class=\"' + cls + '\"><label id=\"' + column.label_id_prefix + encoded_id + '\" for=\"' + encoded_id + '\">' + (value || \"\") + \"</label></div>\";\n                    }\n                    tmpl += \"</td>\";\n                }\n            }\n            tmpl += \"</tr>\";\n            num_rows_rendered++;\n        }\n        return tmpl;\n    },\n\n    // template\n    footer: function footer(options) {\n        // create template string\n        var tmpl = \"\";\n\n        // paging\n        if (options.use_paging && options.num_pages > 1) {\n            // get configuration\n            var num_page_links = options.num_page_links;\n            var cur_page_num = options.cur_page_num;\n            var num_pages = options.num_pages;\n\n            // First pass on min page.\n            var page_link_range = num_page_links / 2;\n            var min_page = cur_page_num - page_link_range;\n            var min_offset = 0;\n            if (min_page <= 0) {\n                // Min page is too low.\n                min_page = 1;\n                min_offset = page_link_range - (cur_page_num - min_page);\n            }\n\n            // Set max page.\n            var max_range = page_link_range + min_offset;\n            var max_page = cur_page_num + max_range;\n            var max_offset;\n            if (max_page <= num_pages) {\n                // Max page is fine.\n                max_offset = 0;\n            } else {\n                // Max page is too high.\n                max_page = num_pages;\n                // +1 to account for the +1 in the loop below.\n                max_offset = max_range - (max_page + 1 - cur_page_num);\n            }\n\n            // Second and final pass on min page to add any unused\n            // offset from max to min.\n            if (max_offset != 0) {\n                min_page -= max_offset;\n                if (min_page < 1) {\n                    min_page = 1;\n                }\n            }\n\n            // template header\n            tmpl += '<tr id=\"page-links-row\">';\n            if (options.show_item_checkboxes) {\n                tmpl += \"<td></td>\";\n            }\n            tmpl += '<td colspan=\"100\">' + '<span id=\"page-link-container\">' + \"Page:\";\n\n            if (min_page > 1) {\n                tmpl += '<span class=\"page-link\" id=\"page-link-1\"><a href=\"javascript:void(0);\" page_num=\"1\" onclick=\"return false;\">1</a></span> ...';\n            }\n\n            // create page urls\n            for (var page_index = min_page; page_index < max_page + 1; page_index++) {\n                if (page_index == options.cur_page_num) {\n                    tmpl += '<span class=\"page-link inactive-link\" id=\"page-link-' + page_index + '\">' + page_index + \"</span>\";\n                } else {\n                    tmpl += '<span class=\"page-link\" id=\"page-link-' + page_index + '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' + page_index + '\">' + page_index + \"</a></span>\";\n                }\n            }\n\n            // show last page\n            if (max_page < num_pages) {\n                tmpl += \"...\" + '<span class=\"page-link\" id=\"page-link-' + num_pages + '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' + num_pages + '\">' + num_pages + \"</a></span>\";\n            }\n            tmpl += \"</span>\";\n\n            // Show all link\n            tmpl += '<span class=\"page-link\" id=\"show-all-link-span\"> | <a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"all\">Show All</a></span>' + \"</td>\" + \"</tr>\";\n        }\n\n        // Grid operations for multiple items.\n        if (options.show_item_checkboxes) {\n            // start template\n            tmpl += \"<tr>\" + '<input type=\"hidden\" id=\"operation\" name=\"operation\" value=\"\">' + \"<td></td>\" + '<td colspan=\"100\">' + 'For <span class=\"grid-selected-count\"></span> selected items: ';\n\n            // configure buttons for operations\n            for (var i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.allow_multiple) {\n                    tmpl += '<input type=\"button\" value=\"' + operation.label + '\" class=\"operation-button action-button\">&nbsp;';\n                }\n            }\n\n            // finalize template\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // count global operations\n        var found_global = false;\n        for (i in options.operations) {\n            if (options.operations[i].global_operation) {\n                found_global = true;\n                break;\n            }\n        }\n\n        // add global operations\n        if (found_global) {\n            tmpl += \"<tr>\" + '<td colspan=\"100\">';\n            for (i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.global_operation) {\n                    tmpl += '<a class=\"action-button\" href=\"' + operation.global_operation + '\">' + operation.label + \"</a>\";\n                }\n            }\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // add legend\n        if (options.legend) {\n            tmpl += \"<tr>\" + '<td colspan=\"100\">' + options.legend + \"</td>\" + \"</tr>\";\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    message: function message(options) {\n        var status = options.status == \"success\" ? \"done\" : options.status;\n        return \"<p>\" + '<div class=\"' + status + 'message transient-message\">' + _.escape(options.message) + \"</div>\" + '<div style=\"clear: both\"></div>' + \"</p>\";\n    },\n\n    // template\n    grid_filters: function grid_filters(options) {\n        // get filters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n\n        // show advanced search if flag set or if there are filters for advanced search fields\n        var advanced_search_display = \"none\";\n        if (options.advanced_search) {\n            advanced_search_display = \"block\";\n        }\n\n        // identify columns with advanced filtering\n        var show_advanced_search_link = false;\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                var column_key = column.key;\n                var f_key = filters[column_key];\n                var d_key = default_filter_dict[column_key];\n                if (f_key && d_key && f_key != d_key) {\n                    advanced_search_display = \"block\";\n                }\n                show_advanced_search_link = true;\n            }\n        }\n\n        // hide standard search if advanced is shown\n        var standard_search_display = \"block\";\n        if (advanced_search_display == \"block\") {\n            standard_search_display = \"none\";\n        }\n\n        //\n        // standard search\n        //\n        var tmpl = '<div id=\"standard-search\" style=\"display: ' + standard_search_display + ';\">' + \"<table>\" + \"<tr>\" + '<td style=\"padding: 0;\">' + \"<table>\";\n\n        // add standard filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"standard\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize standard search\n        tmpl += \"</table>\" + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\";\n\n        // show advanced search link in standard display\n        if (show_advanced_search_link) {\n            tmpl += '<a href=\"\" class=\"advanced-search-toggle\">Advanced Search</a>';\n        }\n\n        // finalize standard search display\n        tmpl += \"</td>\" + \"</tr>\" + \"</table>\" + \"</div>\";\n\n        //\n        // advanced search\n        //\n        tmpl += '<div id=\"advanced-search\" style=\"display: ' + advanced_search_display + '; margin-top: 5px; border: 1px solid #ccc;\">' + \"<table>\" + \"<tr>\" + '<td style=\"text-align: left\" colspan=\"100\">' + '<a href=\"\" class=\"advanced-search-toggle\">Close Advanced Search</a>' + \"</td>\" + \"</tr>\";\n\n        // add advanced filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize advanced search template\n        tmpl += \"</table>\" + \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    grid_column_filter: function grid_column_filter(options, column) {\n        // collect parameters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n        var column_label = column.label;\n        var column_key = column.key;\n        if (column.filterable == \"advanced\") {\n            column_label = column_label.toLowerCase();\n        }\n\n        // start\n        var tmpl = \"<tr>\";\n\n        if (column.filterable == \"advanced\") {\n            tmpl += '<td align=\"left\" style=\"padding-left: 10px\">' + column_label + \":</td>\";\n        }\n        tmpl += '<td style=\"padding-bottom: 1px;\">';\n        if (column.is_text) {\n            tmpl += '<form class=\"text-filter-form\" column_key=\"' + column_key + '\" action=\"' + options.url + '\" method=\"get\" >';\n            // Carry forward filtering criteria with hidden inputs.\n            for (i in options.columns) {\n                var temp_column = options.columns[i];\n                var filter_value = filters[temp_column.key];\n                if (filter_value) {\n                    if (filter_value != \"All\") {\n                        if (temp_column.is_text) {\n                            filter_value = JSON.stringify(filter_value);\n                        }\n                        tmpl += '<input type=\"hidden\" id=\"' + temp_column.key + '\" name=\"f-' + temp_column.key + '\" value=\"' + filter_value + '\"/>';\n                    }\n                }\n            }\n            // Print current filtering criteria and links to delete.\n            tmpl += '<span id=\"' + column_key + '-filtering-criteria\">';\n\n            // add filters\n            var column_filter = filters[column_key];\n            if (column_filter) {\n                // identify type\n                var type = jQuery.type(column_filter);\n\n                // single filter value\n                if (type == \"string\") {\n                    if (column_filter != \"All\") {\n                        // append template\n                        tmpl += this.filter_element(column_key, column_filter);\n                    }\n                }\n\n                // multiple filter values\n                if (type == \"array\") {\n                    for (var i in column_filter) {\n                        // get filter\n                        var filter = column_filter[i];\n\n                        // copy filters and remove entry\n                        var params = column_filter;\n                        params = params.slice(i);\n\n                        // append template\n                        tmpl += this.filter_element(column_key, filter);\n                    }\n                }\n            }\n\n            // close span\n            tmpl += \"</span>\";\n\n            // Set value, size of search input field. Minimum size is 20 characters.\n            var value = \"\";\n            if (column.filterable == \"standard\") {\n                value = column.label.toLowerCase();\n                var size = value.length;\n                if (size < 20) {\n                    size = 20;\n                }\n                // +4 to account for space after placeholder\n                size = size + 4;\n            }\n\n            // print input field for column\n            tmpl += '<span class=\"search-box\">' + '<input class=\"search-box-input\" id=\"input-' + column_key + '-filter\" name=\"f-' + column_key + '\" type=\"text\" placeholder=\"' + value + '\" size=\"' + size + '\"/>' + '<button type=\"submit\" style=\"background: transparent; border: none; padding: 4px; margin: 0px;\">' + '<i class=\"fa fa-search\"></i>' + \"</button>\" + \"</span>\" + \"</form>\";\n        } else {\n            // filter criteria\n            tmpl += '<span id=\"' + column_key + '-filtering-criteria\">';\n\n            // add category filters\n            var seperator = false;\n            for (var cf_label in options.categorical_filters[column_key]) {\n                // get category filter\n                var cf = options.categorical_filters[column_key][cf_label];\n\n                // each filter will have only a single argument, so get that single argument\n                var cf_key = \"\";\n                var cf_arg = \"\";\n                for (var key in cf) {\n                    cf_key = key;\n                    cf_arg = cf[key];\n                }\n\n                // add seperator\n                if (seperator) {\n                    tmpl += \" | \";\n                }\n                seperator = true;\n\n                // add category\n                var filter = filters[column_key];\n                if (filter && cf[column_key] && filter == cf_arg) {\n                    tmpl += '<span class=\"categorical-filter ' + column_key + '-filter current-filter\">' + cf_label + \"</span>\";\n                } else {\n                    tmpl += '<span class=\"categorical-filter ' + column_key + '-filter\">' + '<a href=\"javascript:void(0);\" filter_key=\"' + cf_key + '\" filter_val=\"' + cf_arg + '\">' + cf_label + \"</a>\" + \"</span>\";\n                }\n            }\n            tmpl += \"</span>\";\n        }\n        tmpl += \"</td>\" + \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template for filter items\n    filter_element: function filter_element(filter_key, filter_value) {\n        filter_value = _utils2.default.sanitize(filter_value);\n        return '<span class=\"text-filter-val\">' + filter_value + '<a href=\"javascript:void(0);\" filter_key=\"' + filter_key + '\" filter_val=\"' + filter_value + '\">' + '<i class=\"fa fa-times\" style=\"padding-left: 5px; padding-bottom: 6px;\"/>' + \"</a>\" + \"</span>\";\n    }\n}; // dependencies\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 29:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils) {\n    var View = Backbone.View.extend({\n        initialize: function initialize(options) {\n            var self = this;\n            this.model = options && options.model || new Backbone.Model({\n                id: Utils.uid(),\n                min: null,\n                max: null,\n                step: null,\n                precise: false,\n                split: 10000,\n                value: null,\n                onchange: function onchange() {}\n            }).set(options);\n\n            // create new element\n            this.setElement(this._template());\n            this.$el.attr(\"id\", this.model.id);\n            this.$text = this.$(\".ui-form-slider-text\");\n            this.$slider = this.$(\".ui-form-slider-element\");\n\n            // add text field event\n            var pressed = [];\n            this.$text.on(\"change\", function () {\n                self.value($(this).val());\n            }).on(\"keyup\", function (e) {\n                pressed[e.which] = false;\n            }).on(\"keydown\", function (e) {\n                var v = e.which;\n                pressed[v] = true;\n                if (self.model.get(\"is_workflow\") && pressed[16] && v == 52) {\n                    self.value(\"$\");\n                    event.preventDefault();\n                } else if (!(v == 8 || v == 9 || v == 13 || v == 37 || v == 39 || v >= 48 && v <= 57 && !pressed[16] || v >= 96 && v <= 105 || (v == 190 || v == 110) && $(this).val().indexOf(\".\") == -1 && self.model.get(\"precise\") || (v == 189 || v == 109) && $(this).val().indexOf(\"-\") == -1 || self._isParameter($(this).val()) || pressed[91] || pressed[17])) {\n                    event.preventDefault();\n                }\n            });\n\n            // build slider, cannot be rebuild in render\n            var opts = this.model.attributes;\n            this.has_slider = opts.max !== null && opts.min !== null && opts.max > opts.min;\n            var step = opts.step;\n            if (!step) {\n                if (opts.precise && this.has_slider) {\n                    step = (opts.max - opts.min) / opts.split;\n                } else {\n                    step = 1.0;\n                }\n            }\n            if (this.has_slider) {\n                this.$text.addClass(\"ui-form-slider-left\");\n                this.$slider.slider({ min: opts.min, max: opts.max, step: step }).on(\"slide\", function (event, ui) {\n                    self.value(ui.value);\n                });\n            } else {\n                this.$slider.hide();\n            }\n\n            // add listeners\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function render() {\n            var value = this.model.get(\"value\");\n            this.has_slider && this.$slider.slider(\"value\", value);\n            value !== this.$text.val() && this.$text.val(value);\n        },\n\n        /** Set and return the current value */\n        value: function value(new_val) {\n            var options = this.model.attributes;\n            if (new_val !== undefined) {\n                if (new_val !== null && new_val !== \"\" && !this._isParameter(new_val)) {\n                    isNaN(new_val) && (new_val = 0);\n                    !options.precise && (new_val = Math.round(new_val));\n                    options.max !== null && (new_val = Math.min(new_val, options.max));\n                    options.min !== null && (new_val = Math.max(new_val, options.min));\n                }\n                this.model.set(\"value\", new_val);\n                this.model.trigger(\"change\");\n                options.onchange(new_val);\n            }\n            return this.model.get(\"value\");\n        },\n\n        /** Return true if the field contains a workflow parameter i.e. $('name') */\n        _isParameter: function _isParameter(value) {\n            return this.model.get(\"is_workflow\") && String(value).substring(0, 1) === \"$\";\n        },\n\n        /** Slider template */\n        _template: function _template() {\n            return '<div class=\"ui-form-slider\">' + '<input class=\"ui-form-slider-text\" type=\"text\"/>' + '<div class=\"ui-form-slider-element\"/>' + \"</div>\";\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 30:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, _) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/** This class creates/wraps a drill down element. */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(18)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Options) {\n    var View = Options.BaseIcons.extend({\n        initialize: function initialize(options) {\n            options.type = options.display || \"checkbox\";\n            options.multiple = options.type == \"checkbox\";\n            Options.BaseIcons.prototype.initialize.call(this, options);\n        },\n\n        /** Set states for selected values */\n        _setValue: function _setValue(new_value) {\n            Options.BaseIcons.prototype._setValue.call(this, new_value);\n            if (new_value !== undefined && new_value !== null && this.header_index) {\n                var self = this;\n                var values = $.isArray(new_value) ? new_value : [new_value];\n                _.each(values, function (v) {\n                    var list = self.header_index[v];\n                    _.each(list, function (element) {\n                        self._setState(element, true);\n                    });\n                });\n            }\n        },\n\n        /** Expand/collapse a sub group */\n        _setState: function _setState(header_id, is_expanded) {\n            var $button = this.$(\".button-\" + header_id);\n            var $subgroup = this.$(\".subgroup-\" + header_id);\n            $button.data(\"is_expanded\", is_expanded);\n            if (is_expanded) {\n                $subgroup.show();\n                $button.removeClass(\"fa-plus-square\").addClass(\"fa-minus-square\");\n            } else {\n                $subgroup.hide();\n                $button.removeClass(\"fa-minus-square\").addClass(\"fa-plus-square\");\n            }\n        },\n\n        /** Template to create options tree */\n        _templateOptions: function _templateOptions() {\n            var self = this;\n            this.header_index = {};\n\n            // attach event handler\n            function attach($el, header_id) {\n                var $button = $el.find(\".button-\" + header_id);\n                $button.on(\"click\", function () {\n                    self._setState(header_id, !$button.data(\"is_expanded\"));\n                });\n            }\n\n            // recursive function which iterates through options\n            function iterate($tmpl, options, header) {\n                header = header || [];\n                for (var i in options) {\n                    var level = options[i];\n                    var has_options = level.options && level.options.length > 0;\n                    var new_header = header.slice(0);\n                    self.header_index[level.value] = new_header.slice(0);\n                    var $group = $(\"<div/>\");\n                    if (has_options) {\n                        var header_id = Utils.uid();\n                        var $button = $(\"<span/>\").addClass(\"button-\" + header_id).addClass(\"ui-drilldown-button fa fa-plus-square\");\n                        var $subgroup = $(\"<div/>\").addClass(\"subgroup-\" + header_id).addClass(\"ui-drilldown-subgroup\");\n                        $group.append($(\"<div/>\").append($button).append(self._templateOption({\n                            label: level.name,\n                            value: level.value\n                        })));\n                        new_header.push(header_id);\n                        iterate($subgroup, level.options, new_header);\n                        $group.append($subgroup);\n                        attach($group, header_id);\n                    } else {\n                        $group.append(self._templateOption({\n                            label: level.name,\n                            value: level.value\n                        }));\n                    }\n                    $tmpl.append($group);\n                }\n            }\n\n            // iterate through options and create dom\n            var $tmpl = $(\"<div/>\");\n            iterate($tmpl, this.model.get(\"data\"));\n            return $tmpl;\n        },\n\n        /** Template for drill down view */\n        _template: function _template() {\n            return $(\"<div/>\").addClass(\"ui-options-list drilldown-container\").attr(\"id\", this.model.id);\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 31:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(5);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _uiPortlet = __webpack_require__(8);\n\nvar _uiPortlet2 = _interopRequireDefault(_uiPortlet);\n\nvar _formRepeat = __webpack_require__(32);\n\nvar _formRepeat2 = _interopRequireDefault(_formRepeat);\n\nvar _formInput = __webpack_require__(33);\n\nvar _formInput2 = _interopRequireDefault(_formInput);\n\nvar _formParameters = __webpack_require__(34);\n\nvar _formParameters2 = _interopRequireDefault(_formParameters);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n    This class creates a form section and populates it with input elements. It also handles repeat blocks and conditionals by recursively creating new sub sections.\n*/\nvar View = Backbone.View.extend({\n    initialize: function initialize(app, options) {\n        this.app = app;\n        this.inputs = options.inputs;\n        this.parameters = new _formParameters2.default();\n        this.setElement($(\"<div/>\"));\n        this.render();\n    },\n\n    /** Render section view */\n    render: function render() {\n        var self = this;\n        this.$el.empty();\n        _.each(this.inputs, function (input) {\n            self.add(input);\n        });\n    },\n\n    /** Add a new input element */\n    add: function add(input) {\n        var input_def = jQuery.extend(true, {}, input);\n        input_def.id = input.id = _utils2.default.uid();\n        this.app.input_list[input_def.id] = input_def;\n        switch (input_def.type) {\n            case \"conditional\":\n                this._addConditional(input_def);\n                break;\n            case \"repeat\":\n                this._addRepeat(input_def);\n                break;\n            case \"section\":\n                this._addSection(input_def);\n                break;\n            default:\n                this._addRow(input_def);\n        }\n    },\n\n    /** Add a conditional block */\n    _addConditional: function _addConditional(input_def) {\n        var self = this;\n        input_def.test_param.id = input_def.id;\n        this.app.model.get(\"sustain_conditionals\") && (input_def.test_param.disabled = true);\n        var field = this._addRow(input_def.test_param);\n\n        // set onchange event for test parameter\n        field.model && field.model.set(\"onchange\", function (value) {\n            var selectedCase = self.app.data.matchCase(input_def, value);\n            for (var i in input_def.cases) {\n                var case_def = input_def.cases[i];\n                var section_row = self.$(\"#\" + input_def.id + \"-section-\" + i);\n                var nonhidden = false;\n                for (var j in case_def.inputs) {\n                    if (!case_def.inputs[j].hidden) {\n                        nonhidden = true;\n                        break;\n                    }\n                }\n                if (i == selectedCase && nonhidden) {\n                    section_row.fadeIn(\"fast\");\n                } else {\n                    section_row.hide();\n                }\n            }\n            self.app.trigger(\"change\");\n        });\n\n        // add conditional sub sections\n        for (var i in input_def.cases) {\n            var sub_section = new View(this.app, {\n                inputs: input_def.cases[i].inputs\n            });\n            this._append(sub_section.$el.addClass(\"ui-form-section\"), input_def.id + \"-section-\" + i);\n        }\n\n        // trigger refresh on conditional input field after all input elements have been created\n        field.trigger(\"change\");\n    },\n\n    /** Add a repeat block */\n    _addRepeat: function _addRepeat(input_def) {\n        var self = this;\n        var block_index = 0;\n\n        // create repeat block element\n        var repeat = new _formRepeat2.default.View({\n            title: input_def.title || \"Repeat\",\n            min: input_def.min,\n            max: input_def.max,\n            onnew: function onnew() {\n                create(input_def.inputs);\n                self.app.trigger(\"change\");\n            }\n        });\n\n        // helper function to create new repeat blocks\n        function create(inputs) {\n            var sub_section_id = input_def.id + \"-section-\" + block_index++;\n            var sub_section = new View(self.app, { inputs: inputs });\n            repeat.add({\n                id: sub_section_id,\n                $el: sub_section.$el,\n                ondel: function ondel() {\n                    repeat.del(sub_section_id);\n                    self.app.trigger(\"change\");\n                }\n            });\n        }\n\n        //\n        // add parsed/minimum number of repeat blocks\n        //\n        var n_cache = _.size(input_def.cache);\n        for (var i = 0; i < Math.max(Math.max(n_cache, input_def.min || 0), input_def.default || 0); i++) {\n            create(i < n_cache ? input_def.cache[i] : input_def.inputs);\n        }\n\n        // hide options\n        this.app.model.get(\"sustain_repeats\") && repeat.hideOptions();\n\n        // create input field wrapper\n        var input_element = new _formInput2.default(this.app, {\n            label: input_def.title || input_def.name,\n            help: input_def.help,\n            field: repeat\n        });\n        this._append(input_element.$el, input_def.id);\n    },\n\n    /** Add a customized section */\n    _addSection: function _addSection(input_def) {\n        var portlet = new _uiPortlet2.default.View({\n            title: input_def.title || input_def.name,\n            cls: \"ui-portlet-section\",\n            collapsible: true,\n            collapsible_button: true,\n            collapsed: !input_def.expanded\n        });\n        portlet.append(new View(this.app, { inputs: input_def.inputs }).$el);\n        portlet.append($(\"<div/>\").addClass(\"ui-form-info\").html(input_def.help));\n        this.app.on(\"expand\", function (input_id) {\n            portlet.$(\"#\" + input_id).length > 0 && portlet.expand();\n        });\n        this._append(portlet.$el, input_def.id);\n    },\n\n    /** Add a single input field element */\n    _addRow: function _addRow(input_def) {\n        var self = this;\n        var id = input_def.id;\n        input_def.onchange = input_def.onchange || function () {\n            self.app.trigger(\"change\", id);\n        };\n        var field = this.parameters.create(input_def);\n        this.app.field_list[id] = field;\n        var input_element = new _formInput2.default(this.app, {\n            name: input_def.name,\n            label: input_def.hide_label ? \"\" : input_def.label || input_def.name,\n            value: input_def.value,\n            text_value: input_def.text_value,\n            collapsible_value: input_def.collapsible_value,\n            collapsible_preview: input_def.collapsible_preview,\n            help: input_def.help,\n            argument: input_def.argument,\n            disabled: input_def.disabled,\n            color: input_def.color,\n            style: input_def.style,\n            backdrop: input_def.backdrop,\n            hidden: input_def.hidden,\n            fixed: input_def.fixed,\n            field: field\n        });\n        this.app.element_list[id] = input_element;\n        this._append(input_element.$el, input_def.id);\n        return field;\n    },\n\n    /** Append a new element to the form i.e. input element, repeat block, conditionals etc. */\n    _append: function _append($el, id) {\n        this.$el.append($el.addClass(\"section-row\").attr(\"id\", id));\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 32:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiPortlet = __webpack_require__(8);\n\nvar _uiPortlet2 = _interopRequireDefault(_uiPortlet);\n\nvar _uiMisc = __webpack_require__(5);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.list = {};\n        this.options = _utils2.default.merge(options, {\n            title: \"Repeat\",\n            empty_text: \"Not available.\",\n            max: null,\n            min: null\n        });\n        this.button_new = new _uiMisc2.default.ButtonIcon({\n            icon: \"fa-plus\",\n            title: \"Insert \" + this.options.title,\n            tooltip: \"Add new \" + this.options.title + \" block\",\n            cls: \"ui-button-icon ui-clear-float form-repeat-add\",\n            onclick: function onclick() {\n                options.onnew && options.onnew();\n            }\n        });\n        this.setElement($(\"<div/>\").append(this.$list = $(\"<div/>\")).append($(\"<div/>\").append(this.button_new.$el)));\n    },\n\n    /** Number of repeat blocks */\n    size: function size() {\n        return _.size(this.list);\n    },\n\n    /** Add new repeat block */\n    add: function add(options) {\n        if (!options.id || this.list[options.id]) {\n            Galaxy.emit.debug(\"form-repeat::add()\", \"Duplicate or invalid repeat block id.\");\n            return;\n        }\n        var button_delete = new _uiMisc2.default.ButtonIcon({\n            icon: \"fa-trash-o\",\n            tooltip: \"Delete this repeat block\",\n            cls: \"ui-button-icon-plain form-repeat-delete\",\n            onclick: function onclick() {\n                options.ondel && options.ondel();\n            }\n        });\n        var portlet = new _uiPortlet2.default.View({\n            id: options.id,\n            title: \"placeholder\",\n            cls: options.cls || \"ui-portlet-repeat\",\n            operations: { button_delete: button_delete }\n        });\n        portlet.append(options.$el);\n        portlet.$el.addClass(\"section-row\").hide();\n        this.list[options.id] = portlet;\n        this.$list.append(portlet.$el.fadeIn(\"fast\"));\n        this.options.max > 0 && this.size() >= this.options.max && this.button_new.disable();\n        this._refresh();\n    },\n\n    /** Delete repeat block */\n    del: function del(id) {\n        if (!this.list[id]) {\n            Galaxy.emit.debug(\"form-repeat::del()\", \"Invalid repeat block id.\");\n            return;\n        }\n        this.$list.find(\"#\" + id).remove();\n        delete this.list[id];\n        this.button_new.enable();\n        this._refresh();\n    },\n\n    /** Remove all */\n    delAll: function delAll() {\n        for (var id in this.list) {\n            this.del(id);\n        }\n    },\n\n    /** Hides add/del options */\n    hideOptions: function hideOptions() {\n        this.button_new.$el.hide();\n        _.each(this.list, function (portlet) {\n            portlet.hideOperation(\"button_delete\");\n        });\n        _.isEmpty(this.list) && this.$el.append($(\"<div/>\").addClass(\"ui-form-info\").html(this.options.empty_text));\n    },\n\n    /** Refresh view */\n    _refresh: function _refresh() {\n        var index = 0;\n        for (var id in this.list) {\n            var portlet = this.list[id];\n            portlet.title(++index + \": \" + this.options.title);\n            portlet[this.size() > this.options.min ? \"showOperation\" : \"hideOperation\"](\"button_delete\");\n        }\n    }\n}); /** This class creates a ui component which enables the dynamic creation of portlets */\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 33:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n    This class creates a form input element wrapper\n*/\n\nexports.default = Backbone.View.extend({\n    initialize: function initialize(app, options) {\n        this.app = app;\n        this.app_options = app.model ? app.model.attributes : {};\n        this.field = options && options.field || new Backbone.View();\n        this.model = options && options.model || new Backbone.Model({\n            text_enable: this.app_options.text_enable || \"Enable\",\n            text_disable: this.app_options.text_disable || \"Disable\",\n            cls_enable: this.app_options.cls_enable || \"fa fa-caret-square-o-down\",\n            cls_disable: this.app_options.cls_disable || \"fa fa-caret-square-o-up\",\n            always_refresh: this.app_options.always_refresh\n        }).set(options);\n\n        // set element and link components\n        this.setElement(this._template());\n        this.$field = this.$(\".ui-form-field\");\n        this.$info = this.$(\".ui-form-info\");\n        this.$preview = this.$(\".ui-form-preview\");\n        this.$collapsible = this.$(\".ui-form-collapsible\");\n        this.$collapsible_text = this.$(\".ui-form-collapsible-text\");\n        this.$collapsible_icon = this.$(\".ui-form-collapsible-icon\");\n        this.$title = this.$(\".ui-form-title\");\n        this.$title_text = this.$(\".ui-form-title-text\");\n        this.$error_text = this.$(\".ui-form-error-text\");\n        this.$error = this.$(\".ui-form-error\");\n        this.$backdrop = this.$(\".ui-form-backdrop\");\n\n        // add field element\n        this.$field.prepend(this.field.$el);\n\n        // decide wether to expand or collapse fields\n        var collapsible_value = this.model.get(\"collapsible_value\");\n        this.field.collapsed = collapsible_value !== undefined && JSON.stringify(this.model.get(\"value\")) == JSON.stringify(collapsible_value);\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n\n        // add click handler\n        var self = this;\n        this.$collapsible.on(\"click\", function () {\n            self.field.collapsed = !self.field.collapsed;\n            app.trigger && app.trigger(\"change\");\n            self.render();\n        });\n\n        // hide error on value change\n        if (this.field.model && !this.model.get(\"always_refresh\")) {\n            this.listenTo(this.field.model, \"change:value\", function () {\n                self.reset();\n            });\n        }\n    },\n\n    /** Set backdrop for input element */\n    backdrop: function backdrop() {\n        this.model.set(\"backdrop\", true);\n    },\n\n    /** Set error text */\n    error: function error(text) {\n        this.model.set(\"error_text\", text);\n    },\n\n    /** Reset this view */\n    reset: function reset() {\n        !this.model.get(\"fixed\") && this.model.set(\"error_text\", null);\n    },\n\n    render: function render() {\n        // render help\n        $(\".tooltip\").hide();\n        var help_text = this.model.get(\"help\", \"\");\n        var help_argument = this.model.get(\"argument\");\n        if (help_argument && help_text.indexOf(\"(\" + help_argument + \")\") == -1) {\n            help_text += \" (\" + help_argument + \")\";\n        }\n        this.$info.html(help_text);\n        // render visibility\n        this.$el[this.model.get(\"hidden\") ? \"hide\" : \"show\"]();\n        // render preview view for collapsed fields\n        this.$preview[this.field.collapsed && this.model.get(\"collapsible_preview\") || this.model.get(\"disabled\") ? \"show\" : \"hide\"]().html(_.escape(this.model.get(\"text_value\")));\n        // render error messages\n        var error_text = this.model.get(\"error_text\");\n        this.$error[error_text ? \"show\" : \"hide\"]();\n        this.$el[error_text ? \"addClass\" : \"removeClass\"](\"ui-error\");\n        this.$error_text.html(error_text);\n        // render backdrop\n        this.$backdrop[this.model.get(\"backdrop\") ? \"show\" : \"hide\"]();\n        // render input field\n        this.field.collapsed || this.model.get(\"disabled\") ? this.$field.hide() : this.$field.show();\n        // render input field color and style\n        this.field.model && this.field.model.set({\n            color: this.model.get(\"color\"),\n            style: this.model.get(\"style\")\n        });\n        // render collapsible options\n        if (!this.model.get(\"disabled\") && this.model.get(\"collapsible_value\") !== undefined) {\n            var collapsible_state = this.field.collapsed ? \"enable\" : \"disable\";\n            this.$title_text.hide();\n            this.$collapsible.show();\n            this.$collapsible_text.text(this.model.get(\"label\"));\n            this.$collapsible_icon.removeClass().addClass(\"icon\").addClass(this.model.get(\"cls_\" + collapsible_state)).attr(\"data-original-title\", this.model.get(\"text_\" + collapsible_state)).tooltip({ placement: \"bottom\" });\n        } else {\n            this.$title_text.show().text(this.model.get(\"label\"));\n            this.$collapsible.hide();\n        }\n    },\n\n    _template: function _template() {\n        return $(\"<div/>\").addClass(\"ui-form-element\").append($(\"<div/>\").addClass(\"ui-form-error ui-error\").append($(\"<span/>\").addClass(\"fa fa-arrow-down\")).append($(\"<span/>\").addClass(\"ui-form-error-text\"))).append($(\"<div/>\").addClass(\"ui-form-title\").append($(\"<div/>\").addClass(\"ui-form-collapsible\").append($(\"<i/>\").addClass(\"ui-form-collapsible-icon\")).append($(\"<span/>\").addClass(\"ui-form-collapsible-text\"))).append($(\"<span/>\").addClass(\"ui-form-title-text\"))).append($(\"<div/>\").addClass(\"ui-form-field\").append($(\"<span/>\").addClass(\"ui-form-info\")).append($(\"<div/>\").addClass(\"ui-form-backdrop\"))).append($(\"<div/>\").addClass(\"ui-form-preview\"));\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 34:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(5);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _uiSelectContent = __webpack_require__(35);\n\nvar _uiSelectContent2 = _interopRequireDefault(_uiSelectContent);\n\nvar _uiSelectLibrary = __webpack_require__(36);\n\nvar _uiSelectLibrary2 = _interopRequireDefault(_uiSelectLibrary);\n\nvar _uiSelectFtp = __webpack_require__(37);\n\nvar _uiSelectFtp2 = _interopRequireDefault(_uiSelectFtp);\n\nvar _uiSelectGenomespace = __webpack_require__(38);\n\nvar _uiSelectGenomespace2 = _interopRequireDefault(_uiSelectGenomespace);\n\nvar _uiColorPicker = __webpack_require__(40);\n\nvar _uiColorPicker2 = _interopRequireDefault(_uiColorPicker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// create form view\nexports.default = Backbone.Model.extend({\n    /** Available parameter types */\n    types: {\n        text: \"_fieldText\",\n        password: \"_fieldText\",\n        select: \"_fieldSelect\",\n        data_column: \"_fieldSelect\",\n        genomebuild: \"_fieldSelect\",\n        data: \"_fieldData\",\n        data_collection: \"_fieldData\",\n        integer: \"_fieldSlider\",\n        float: \"_fieldSlider\",\n        boolean: \"_fieldBoolean\",\n        drill_down: \"_fieldDrilldown\",\n        color: \"_fieldColor\",\n        hidden: \"_fieldHidden\",\n        hidden_data: \"_fieldHidden\",\n        baseurl: \"_fieldHidden\",\n        library_data: \"_fieldLibrary\",\n        ftpfile: \"_fieldFtp\",\n        upload: \"_fieldUpload\",\n        genomespacefile: \"_fieldGenomeSpace\"\n    },\n\n    /** Returns an input field for a given field type */\n    create: function create(input_def) {\n        var fieldClass = this.types[input_def.type];\n        var field = typeof this[fieldClass] === \"function\" ? this[fieldClass].call(this, input_def) : null;\n        if (!field) {\n            field = input_def.options ? this._fieldSelect(input_def) : this._fieldText(input_def);\n            Galaxy.emit.debug(\"form-parameters::_addRow()\", \"Auto matched field type (\" + input_def.type + \").\");\n        }\n        input_def.value === undefined && (input_def.value = null);\n        field.value(input_def.value);\n        return field;\n    },\n\n    /** Data input field */\n    _fieldData: function _fieldData(input_def) {\n        return new _uiSelectContent2.default.View({\n            id: \"field-\" + input_def.id,\n            extensions: input_def.extensions,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            type: input_def.type,\n            flavor: input_def.flavor,\n            data: input_def.options,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Select/Checkbox/Radio options field */\n    _fieldSelect: function _fieldSelect(input_def) {\n        // show text field e.g. in workflow editor\n        if (input_def.is_workflow) {\n            return this._fieldText(input_def);\n        }\n\n        // customize properties\n        if (input_def.type == \"data_column\") {\n            input_def.error_text = \"Missing columns in referenced dataset.\";\n        }\n\n        // identify available options\n        var data = input_def.data;\n        if (!data) {\n            data = [];\n            _.each(input_def.options, function (option) {\n                data.push({ label: option[0], value: option[1] });\n            });\n        }\n\n        // identify display type\n        var SelectClass = _uiMisc2.default.Select;\n        switch (input_def.display) {\n            case \"checkboxes\":\n                SelectClass = _uiMisc2.default.Checkbox;\n                break;\n            case \"radio\":\n                SelectClass = _uiMisc2.default.Radio;\n                break;\n            case \"radiobutton\":\n                SelectClass = _uiMisc2.default.RadioButton;\n                break;\n        }\n\n        // create select field\n        return new SelectClass.View({\n            id: \"field-\" + input_def.id,\n            data: data,\n            error_text: input_def.error_text || \"No options available\",\n            readonly: input_def.readonly,\n            multiple: input_def.multiple,\n            optional: input_def.optional,\n            onchange: input_def.onchange,\n            individual: input_def.individual,\n            searchable: input_def.flavor !== \"workflow\"\n        });\n    },\n\n    /** Drill down options field */\n    _fieldDrilldown: function _fieldDrilldown(input_def) {\n        // show text field e.g. in workflow editor\n        if (input_def.is_workflow) {\n            return this._fieldText(input_def);\n        }\n\n        // create drill down field\n        return new _uiMisc2.default.Drilldown.View({\n            id: \"field-\" + input_def.id,\n            data: input_def.options,\n            display: input_def.display,\n            optional: input_def.optional,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Text input field */\n    _fieldText: function _fieldText(input_def) {\n        // field replaces e.g. a select field\n        if (input_def.options && input_def.data) {\n            input_def.area = input_def.multiple;\n            if (_utils2.default.isEmpty(input_def.value)) {\n                input_def.value = null;\n            } else {\n                if ($.isArray(input_def.value)) {\n                    var str_value = \"\";\n                    for (var i in input_def.value) {\n                        str_value += String(input_def.value[i]);\n                        if (!input_def.multiple) {\n                            break;\n                        }\n                        str_value += \"\\n\";\n                    }\n                    input_def.value = str_value;\n                }\n            }\n        }\n        // create input element\n        return new _uiMisc2.default.Input({\n            id: \"field-\" + input_def.id,\n            type: input_def.type,\n            area: input_def.area,\n            readonly: input_def.readonly,\n            placeholder: input_def.placeholder,\n            datalist: input_def.datalist,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Slider field */\n    _fieldSlider: function _fieldSlider(input_def) {\n        return new _uiMisc2.default.Slider.View({\n            id: \"field-\" + input_def.id,\n            precise: input_def.type == \"float\",\n            is_workflow: input_def.is_workflow,\n            min: input_def.min,\n            max: input_def.max,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Hidden field */\n    _fieldHidden: function _fieldHidden(input_def) {\n        return new _uiMisc2.default.Hidden({\n            id: \"field-\" + input_def.id,\n            info: input_def.info\n        });\n    },\n\n    /** Boolean field */\n    _fieldBoolean: function _fieldBoolean(input_def) {\n        return new _uiMisc2.default.RadioButton.View({\n            id: \"field-\" + input_def.id,\n            data: [{ label: \"Yes\", value: \"true\" }, { label: \"No\", value: \"false\" }],\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Color picker field */\n    _fieldColor: function _fieldColor(input_def) {\n        return new _uiColorPicker2.default({\n            id: \"field-\" + input_def.id,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Library dataset field */\n    _fieldLibrary: function _fieldLibrary(input_def) {\n        return new _uiSelectLibrary2.default.View({\n            id: \"field-\" + input_def.id,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** FTP file field */\n    _fieldFtp: function _fieldFtp(input_def) {\n        return new _uiSelectFtp2.default.View({\n            id: \"field-\" + input_def.id,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** GenomeSpace file select field\n         */\n    _fieldGenomeSpace: function _fieldGenomeSpace(input_def) {\n        var self = this;\n        return new _uiSelectGenomespace2.default.View({\n            id: \"field-\" + input_def.id,\n            onchange: function onchange() {\n                self.app.trigger(\"change\");\n            }\n        });\n    },\n\n    /** Upload file field */\n    _fieldUpload: function _fieldUpload(input_def) {\n        return new _uiMisc2.default.Upload({\n            id: \"field-\" + input_def.id,\n            onchange: input_def.onchange\n        });\n    }\n}); /**\n        This class creates input elements. New input parameter types should be added to the types dictionary.\n    */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(5), __webpack_require__(17)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Ui, Select) {\n    /** Batch mode variations */\n    var Batch = { DISABLED: \"disabled\", ENABLED: \"enabled\", LINKED: \"linked\" };\n\n    /** List of available content selectors options */\n    var Configurations = {\n        data: [{\n            src: \"hda\",\n            icon: \"fa-file-o\",\n            tooltip: \"Single dataset\",\n            multiple: false,\n            batch: Batch.DISABLED\n        }, {\n            src: \"hda\",\n            icon: \"fa-files-o\",\n            tooltip: \"Multiple datasets\",\n            multiple: true,\n            batch: Batch.LINKED\n        }, {\n            src: \"hdca\",\n            icon: \"fa-folder-o\",\n            tooltip: \"Dataset collection\",\n            multiple: false,\n            batch: Batch.LINKED\n        }],\n        data_multiple: [{\n            src: \"hda\",\n            icon: \"fa-files-o\",\n            tooltip: \"Multiple datasets\",\n            multiple: true,\n            batch: Batch.DISABLED\n        }, {\n            src: \"hdca\",\n            icon: \"fa-folder-o\",\n            tooltip: \"Dataset collections\",\n            multiple: true,\n            batch: Batch.DISABLED\n        }],\n        data_collection: [{\n            src: \"hdca\",\n            icon: \"fa-folder-o\",\n            tooltip: \"Dataset collection\",\n            multiple: false,\n            batch: Batch.DISABLED\n        }],\n        workflow_data: [{\n            src: \"hda\",\n            icon: \"fa-file-o\",\n            tooltip: \"Single dataset\",\n            multiple: false,\n            batch: Batch.DISABLED\n        }],\n        workflow_data_multiple: [{\n            src: \"hda\",\n            icon: \"fa-files-o\",\n            tooltip: \"Multiple datasets\",\n            multiple: true,\n            batch: Batch.DISABLED\n        }],\n        workflow_data_collection: [{\n            src: \"hdca\",\n            icon: \"fa-folder-o\",\n            tooltip: \"Dataset collection\",\n            multiple: false,\n            batch: Batch.DISABLED\n        }],\n        module_data: [{\n            src: \"hda\",\n            icon: \"fa-file-o\",\n            tooltip: \"Single dataset\",\n            multiple: false,\n            batch: Batch.DISABLED\n        }, {\n            src: \"hda\",\n            icon: \"fa-files-o\",\n            tooltip: \"Multiple datasets\",\n            multiple: true,\n            batch: Batch.ENABLED\n        }],\n        module_data_collection: [{\n            src: \"hdca\",\n            icon: \"fa-folder-o\",\n            tooltip: \"Dataset collection\",\n            multiple: false,\n            batch: Batch.DISABLED\n        }, {\n            src: \"hdca\",\n            icon: \"fa-folder\",\n            tooltip: \"Multiple collections\",\n            multiple: true,\n            batch: Batch.ENABLED\n        }]\n    };\n\n    /** View for hda and hdca content selector ui elements */\n    var View = Backbone.View.extend({\n        initialize: function initialize(options) {\n            var self = this;\n            this.model = options && options.model || new Backbone.Model({\n                src_labels: { hda: \"dataset\", hdca: \"dataset collection\" },\n                pagelimit: 100,\n                statustimer: 1000\n            }).set(options);\n            this.setElement($(\"<div/>\").addClass(\"ui-select-content\"));\n            this.button_product = new Ui.RadioButton.View({\n                value: \"false\",\n                data: [{\n                    icon: \"fa fa-chain\",\n                    value: \"false\",\n                    tooltip: \"Linked inputs will be run in matched order with other datasets e.g. use this for matching forward and reverse reads.\"\n                }, {\n                    icon: \"fa fa-chain-broken\",\n                    value: \"true\",\n                    tooltip: \"Unlinked dataset inputs will be run against *all* other inputs.\"\n                }]\n            });\n            var $batch_div = $(\"<div/>\").addClass(\"ui-form-info\").append($(\"<i/>\").addClass(\"fa fa-sitemap\")).append($(\"<span/>\").html(\"This is a batch mode input field. Separate jobs will be triggered for each dataset selection.\"));\n            this.$batch = {\n                linked: $batch_div.clone(),\n                enabled: $batch_div.clone().append($(\"<div/>\").append($(\"<div/>\").addClass(\"ui-form-title\").html(\"Batch options:\")).append(this.button_product.$el)).append($(\"<div/>\").css(\"clear\", \"both\"))\n            };\n\n            // add drag-drop event handlers\n            this.$el.on(\"dragenter\", function (e) {\n                this.lastenter = e.target;\n                self.$el.addClass(\"ui-dragover\");\n            }).on(\"dragover\", function (e) {\n                e.preventDefault();\n            }).on(\"dragleave\", function (e) {\n                this.lastenter === e.target && self.$el.removeClass(\"ui-dragover\");\n            }).on(\"drop\", function (e) {\n                self._handleDrop(e);\n            });\n\n            // track current history elements\n            this.history = {};\n\n            // add listeners\n            this.listenTo(this.model, \"change:data\", this._changeData, this);\n            this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n            this.listenTo(this.model, \"change:current\", this._changeCurrent, this);\n            this.listenTo(this.model, \"change:value\", this._changeValue, this);\n            this.listenTo(this.model, \"change:type change:optional change:multiple change:extensions\", this._changeType, this);\n            this.render();\n\n            // add change event\n            this.on(\"change\", function () {\n                options.onchange && options.onchange(self.value());\n            });\n        },\n\n        render: function render() {\n            this._changeType();\n            this._changeValue();\n            this._changeWait();\n        },\n\n        /** Indicate that select fields are being updated */\n        wait: function wait() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Indicate that the options update has been completed */\n        unwait: function unwait() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Update data representing selectable options */\n        update: function update(options) {\n            this.model.set(\"data\", options);\n        },\n\n        /** Return the currently selected dataset values */\n        value: function value(new_value) {\n            new_value !== undefined && this.model.set(\"value\", new_value);\n            var current = this.model.get(\"current\");\n            if (this.config[current]) {\n                var id_list = this.fields[current].value();\n                if (id_list !== null) {\n                    id_list = $.isArray(id_list) ? id_list : [id_list];\n                    if (id_list.length > 0) {\n                        var result = this._batch({ values: [] });\n                        for (var i in id_list) {\n                            var details = this.history[id_list[i] + \"_\" + this.config[current].src];\n                            if (details) {\n                                result.values.push(details);\n                            } else {\n                                Galaxy.emit.debug(\"ui-select-content::value()\", \"Requested details not found for '\" + id_list[i] + \"'.\");\n                                return null;\n                            }\n                        }\n                        result.values.sort(function (a, b) {\n                            return a.hid - b.hid;\n                        });\n                        return result;\n                    }\n                }\n            } else {\n                Galaxy.emit.debug(\"ui-select-content::value()\", \"Invalid value/source '\" + new_value + \"'.\");\n            }\n            return null;\n        },\n\n        /** Change of current select field */\n        _changeCurrent: function _changeCurrent() {\n            var self = this;\n            _.each(this.fields, function (field, i) {\n                if (self.model.get(\"current\") == i) {\n                    field.$el.show();\n                    _.each(self.$batch, function ($batchfield, batchmode) {\n                        $batchfield[self.config[i].batch == batchmode ? \"show\" : \"hide\"]();\n                    });\n                    self.button_type.value(i);\n                } else {\n                    field.$el.hide();\n                }\n            });\n        },\n\n        /** Change of type */\n        _changeType: function _changeType() {\n            var self = this;\n\n            // identify selector type identifier i.e. [ flavor ]_[ type ]_[ multiple ]\n            var config_id = (this.model.get(\"flavor\") ? this.model.get(\"flavor\") + \"_\" : \"\") + String(this.model.get(\"type\")) + (this.model.get(\"multiple\") ? \"_multiple\" : \"\");\n            if (Configurations[config_id]) {\n                this.config = Configurations[config_id];\n            } else {\n                this.config = Configurations[\"data\"];\n                Galaxy.emit.debug(\"ui-select-content::_changeType()\", \"Invalid configuration/type id '\" + config_id + \"'.\");\n            }\n\n            // prepare extension component of error message\n            var data = self.model.get(\"data\");\n            var extensions = Utils.textify(this.model.get(\"extensions\"));\n            var src_labels = this.model.get(\"src_labels\");\n\n            // build views\n            this.fields = [];\n            this.button_data = [];\n            _.each(this.config, function (c, i) {\n                self.button_data.push({\n                    value: i,\n                    icon: c.icon,\n                    tooltip: c.tooltip\n                });\n                self.fields.push(new Select.View({\n                    optional: self.model.get(\"optional\"),\n                    multiple: c.multiple,\n                    searchable: !c.multiple || data && data[c.src] && data[c.src].length > self.model.get(\"pagelimit\"),\n                    individual: true,\n                    error_text: \"No \" + (extensions ? extensions + \" \" : \"\") + (src_labels[c.src] || \"content\") + \" available.\",\n                    onchange: function onchange() {\n                        self.trigger(\"change\");\n                    }\n                }));\n            });\n            this.button_type = new Ui.RadioButton.View({\n                value: this.model.get(\"current\"),\n                data: this.button_data,\n                onchange: function onchange(value) {\n                    self.model.set(\"current\", value);\n                    self.trigger(\"change\");\n                }\n            });\n\n            // append views\n            this.$el.empty();\n            var button_width = 0;\n            if (this.fields.length > 1) {\n                this.$el.append(this.button_type.$el);\n                button_width = Math.max(0, this.fields.length * 36) + \"px\";\n            }\n            _.each(this.fields, function (field) {\n                self.$el.append(field.$el.css({ \"margin-left\": button_width }));\n            });\n            _.each(this.$batch, function ($batchfield, batchmode) {\n                self.$el.append($batchfield.css({ \"margin-left\": button_width }));\n            });\n            this.model.set(\"current\", 0);\n            this._changeCurrent();\n            this._changeData();\n        },\n\n        /** Change of wait flag */\n        _changeWait: function _changeWait() {\n            var self = this;\n            _.each(this.fields, function (field) {\n                field[self.model.get(\"wait\") ? \"wait\" : \"unwait\"]();\n            });\n        },\n\n        /** Change of available options */\n        _changeData: function _changeData() {\n            var options = this.model.get(\"data\");\n            var self = this;\n            var select_options = {};\n            _.each(options, function (items, src) {\n                select_options[src] = [];\n                _.each(items, function (item) {\n                    select_options[src].push({\n                        hid: item.hid,\n                        keep: item.keep,\n                        label: item.hid + \": \" + item.name,\n                        value: item.id,\n                        tags: item.tags\n                    });\n                    self.history[item.id + \"_\" + src] = item;\n                });\n            });\n            _.each(this.config, function (c, i) {\n                select_options[c.src] && self.fields[i].add(select_options[c.src], function (a, b) {\n                    return b.hid - a.hid;\n                });\n            });\n        },\n\n        /** Change of incoming value */\n        _changeValue: function _changeValue() {\n            var new_value = this.model.get(\"value\");\n            if (new_value && new_value.values && new_value.values.length > 0) {\n                // create list with content ids\n                var list = [];\n                _.each(new_value.values, function (value) {\n                    list.push(value.id);\n                });\n                // sniff first suitable field type from config list\n                var src = new_value.values[0].src;\n                var multiple = new_value.values.length > 1;\n                for (var i = 0; i < this.config.length; i++) {\n                    var field = this.fields[i];\n                    var c = this.config[i];\n                    if (c.src == src && [multiple, true].indexOf(c.multiple) !== -1) {\n                        this.model.set(\"current\", i);\n                        field.value(list);\n                        break;\n                    }\n                }\n            } else {\n                _.each(this.fields, function (field) {\n                    field.value(null);\n                });\n            }\n        },\n\n        /** Handles drop events e.g. from history panel */\n        _handleDrop: function _handleDrop(ev) {\n            try {\n                var data = this.model.get(\"data\");\n                var current = this.model.get(\"current\");\n                var config = this.config[current];\n                var field = this.fields[current];\n                var drop_data = JSON.parse(ev.originalEvent.dataTransfer.getData(\"text\"))[0];\n                var new_id = drop_data.id;\n                var new_src = drop_data.history_content_type == \"dataset\" ? \"hda\" : \"hdca\";\n                var new_value = { id: new_id, src: new_src };\n                if (data && _.findWhere(data[new_src], new_value)) {\n                    if (config.src == new_src) {\n                        var current_value = field.value();\n                        if (current_value && config.multiple) {\n                            if (current_value.indexOf(new_id) == -1) {\n                                current_value.push(new_id);\n                            }\n                        } else {\n                            current_value = new_id;\n                        }\n                        field.value(current_value);\n                    } else {\n                        this.model.set(\"value\", { values: [new_value] });\n                        this.model.trigger(\"change:value\");\n                    }\n                    this.trigger(\"change\");\n                    this._handleDropStatus(\"success\");\n                } else {\n                    this._handleDropStatus(\"danger\");\n                }\n            } catch (e) {\n                this._handleDropStatus(\"danger\");\n            }\n            ev.preventDefault();\n        },\n\n        /** Highlight drag result */\n        _handleDropStatus: function _handleDropStatus(status) {\n            var self = this;\n            this.$el.removeClass(\"ui-dragover\").addClass(\"ui-dragover-\" + status);\n            setTimeout(function () {\n                self.$el.removeClass(\"ui-dragover-\" + status);\n            }, this.model.get(\"statustimer\"));\n        },\n\n        /** Assists in identifying the batch mode */\n        _batch: function _batch(result) {\n            result[\"batch\"] = false;\n            var current = this.model.get(\"current\");\n            var config = this.config[current];\n            if (config.src == \"hdca\" && !config.multiple) {\n                var hdca = this.history[this.fields[current].value() + \"_hdca\"];\n                if (hdca && hdca.map_over_type) {\n                    result[\"batch\"] = true;\n                }\n            }\n            if (config.batch == Batch.LINKED || config.batch == Batch.ENABLED) {\n                result[\"batch\"] = true;\n                if (config.batch == Batch.ENABLED && this.button_product.value() === \"true\") {\n                    result[\"product\"] = true;\n                }\n            }\n            return result;\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 36:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n// dependencies\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(5), __webpack_require__(22), __webpack_require__(19)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Ui, Table, List) {\n    // collection of libraries\n    var Libraries = Backbone.Collection.extend({\n        url: Galaxy.root + \"api/libraries?deleted=false\"\n    });\n\n    // collection of dataset\n    var LibraryDatasets = Backbone.Collection.extend({\n        initialize: function initialize() {\n            var self = this;\n            this.config = new Backbone.Model({ library_id: null });\n            this.config.on(\"change\", function () {\n                self.fetch({ reset: true });\n            });\n        },\n        url: function url() {\n            return Galaxy.root + \"api/libraries/\" + this.config.get(\"library_id\") + \"/contents\";\n        }\n    });\n\n    // hda/hdca content selector ui element\n    var View = Backbone.View.extend({\n        // initialize\n        initialize: function initialize(options) {\n            // link this\n            var self = this;\n\n            // collections\n            this.libraries = new Libraries();\n            this.datasets = new LibraryDatasets();\n\n            // link app and options\n            this.options = options;\n\n            // select field for the library\n            // TODO: Remove this once the library API supports searching for library datasets\n            this.library_select = new Ui.Select.View({\n                onchange: function onchange(value) {\n                    self.datasets.config.set(\"library_id\", value);\n                }\n            });\n\n            // create ui-list view to keep track of selected data libraries\n            this.dataset_list = new List.View({\n                name: \"dataset\",\n                optional: options.optional,\n                multiple: options.multiple,\n                onchange: function onchange() {\n                    self.trigger(\"change\");\n                }\n            });\n\n            // add reset handler for fetched libraries\n            this.libraries.on(\"reset\", function () {\n                var data = [];\n                self.libraries.each(function (model) {\n                    data.push({\n                        value: model.id,\n                        label: model.get(\"name\")\n                    });\n                });\n                self.library_select.update(data);\n            });\n\n            // add reset handler for fetched library datasets\n            this.datasets.on(\"reset\", function () {\n                var data = [];\n                var library_current = self.library_select.text();\n                if (library_current !== null) {\n                    self.datasets.each(function (model) {\n                        if (model.get(\"type\") === \"file\") {\n                            data.push({\n                                value: model.id,\n                                label: model.get(\"name\")\n                            });\n                        }\n                    });\n                }\n                self.dataset_list.update(data);\n            });\n\n            // add change event. fires on trigger\n            this.on(\"change\", function () {\n                options.onchange && options.onchange(self.value());\n            });\n\n            // create elements\n            this.setElement(this._template());\n            this.$(\".library-select\").append(this.library_select.$el);\n            this.$el.append(this.dataset_list.$el);\n\n            // initial fetch of libraries\n            this.libraries.fetch({\n                reset: true,\n                success: function success() {\n                    self.library_select.trigger(\"change\");\n                    if (self.options.value !== undefined) {\n                        self.value(self.options.value);\n                    }\n                }\n            });\n        },\n\n        /** Return/Set currently selected library datasets */\n        value: function value(val) {\n            return this.dataset_list.value(val);\n        },\n\n        /** Template */\n        _template: function _template() {\n            return '<div class=\"ui-select-library\">' + '<div class=\"library ui-margin-bottom\">' + '<span class=\"library-title\">Select Library</span>' + '<span class=\"library-select\"/>' + \"</div>\" + \"</div>\";\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 37:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n// dependencies\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(19)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, List) {\n    /**\n    * FTP file selector\n    */\n    var View = Backbone.View.extend({\n        // initialize\n        initialize: function initialize(options) {\n            // link this\n            var self = this;\n\n            // create ui-list view to keep track of selected ftp files\n            this.ftpfile_list = new List.View({\n                name: \"file\",\n                optional: options.optional,\n                multiple: options.multiple,\n                onchange: function onchange() {\n                    options.onchange && options.onchange(self.value());\n                }\n            });\n\n            // create elements\n            this.setElement(this.ftpfile_list.$el);\n\n            // initial fetch of ftps\n            Utils.get({\n                url: Galaxy.root + \"api/remote_files\",\n                success: function success(response) {\n                    var data = [];\n                    for (var i in response) {\n                        data.push({\n                            value: response[i][\"path\"],\n                            label: response[i][\"path\"]\n                        });\n                    }\n                    self.ftpfile_list.update(data);\n                }\n            });\n        },\n\n        /** Return/Set currently selected ftp datasets */\n        value: function value(val) {\n            return this.ftpfile_list.value(val);\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 38:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n// dependencies\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(5), __webpack_require__(39)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Ui, GenomespaceBrowser) {\n    /**\n    * GenomeSpace file selector\n    */\n    var View = Backbone.View.extend({\n        // initialize\n        initialize: function initialize(options) {\n            // link this\n            var self = this;\n\n            // create insert new list element button\n            this.browse_button = new Ui.ButtonIcon({\n                title: \"Browse\",\n                icon: \"fa fa-sign-in\",\n                tooltip: \"Browse GenomeSpace\",\n                onclick: function onclick() {\n                    self.browseGenomeSpace();\n                }\n            });\n\n            // create genomespace filepath textbox\n            this.filename_textbox = new Ui.Input();\n\n            // create genomespace token textbox\n            this.token_textbox = new Ui.Input({\n                type: \"password\"\n            });\n\n            // create elements\n            this.setElement(this._template(options));\n            this.$(\".ui-gs-browse-button\").append(this.browse_button.$el);\n            this.$(\".ui-gs-filename-textbox\").append(this.filename_textbox.$el);\n            this.$(\".ui-gs-token-textbox\").append(this.token_textbox.$el);\n        },\n\n        /** Browse GenomeSpace */\n        browseGenomeSpace: function browseGenomeSpace(options) {\n            var self = this;\n            GenomespaceBrowser.openFileBrowser({\n                successCallback: function successCallback(data) {\n                    self.value(data.destination + \"^\" + data.token);\n                }\n            });\n        },\n\n        /** Main Template */\n        _template: function _template(options) {\n            return '<div class=\"ui-gs-select-file\">' + '<div class=\"ui-gs-browse-field\">' + '<span class=\"ui-gs-browse-button\" />' + '<span class=\"ui-gs-filename-textbox\" />' + \"</div>\" + '<div class=\"ui-gs-token-field\">' + '<span class=ui-gs-label\"><div class=\"ui-gs-token-label\">Token</div></span>' + '<span class=\"ui-gs-token-textbox\" />' + \"</div>\" + \"</div>\";\n        },\n\n        /** Return/Set currently selected genomespace filename/token */\n        value: function value(new_value) {\n            // check if new_value is defined\n            if (new_value !== undefined) {\n                this._setValue(new_value);\n            } else {\n                return this._getValue();\n            }\n        },\n\n        // get value\n        _getValue: function _getValue() {\n            return this.filename_textbox.value() + \"^\" + this.token_textbox.value();\n        },\n\n        // set value\n        _setValue: function _setValue(new_value) {\n            if (new_value) {\n                values = new_value.split(\"^\");\n                this.filename_textbox.value(values[0]);\n                this.token_textbox.value(values[1]);\n            }\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Provides support for interacting with the GenomeSpace File Browser popup dialogue\n\n// tool form templates\nexports.default = {\n    openFileBrowser: function openFileBrowser(options) {\n        var GS_UI_URL = window.Galaxy.config.genomespace_ui_url;\n        var GS_UPLOAD_URL = GS_UI_URL + \"upload/loadUrlToGenomespace.html?getLocation=true\";\n\n        var newWin = window.open(GS_UPLOAD_URL, \"GenomeSpace File Browser\", \"height=360px,width=600px\");\n\n        successCalBack = options[\"successCallback\"];\n        window.addEventListener(\"message\", function (e) {\n            successCalBack(e.data);\n        }, false);\n\n        newWin.focus();\n\n        if (options[\"errorCallback\"] != null) newWin.setCallbackOnGSUploadError = config[\"errorCallback\"];\n    }\n};\n\n/***/ }),\n\n/***/ 40:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/** Renders the color picker used e.g. in the tool form **/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils) {\n    return Backbone.View.extend({\n        colors: {\n            standard: [\"c00000\", \"ff0000\", \"ffc000\", \"ffff00\", \"92d050\", \"00b050\", \"00b0f0\", \"0070c0\", \"002060\", \"7030a0\"],\n            base: [\"ffffff\", \"000000\", \"eeece1\", \"1f497d\", \"4f81bd\", \"c0504d\", \"9bbb59\", \"8064a2\", \"4bacc6\", \"f79646\"],\n            theme: [[\"f2f2f2\", \"7f7f7f\", \"ddd9c3\", \"c6d9f0\", \"dbe5f1\", \"f2dcdb\", \"ebf1dd\", \"e5e0ec\", \"dbeef3\", \"fdeada\"], [\"d8d8d8\", \"595959\", \"c4bd97\", \"8db3e2\", \"b8cce4\", \"e5b9b7\", \"d7e3bc\", \"ccc1d9\", \"b7dde8\", \"fbd5b5\"], [\"bfbfbf\", \"3f3f3f\", \"938953\", \"548dd4\", \"95b3d7\", \"d99694\", \"c3d69b\", \"b2a2c7\", \"92cddc\", \"fac08f\"], [\"a5a5a5\", \"262626\", \"494429\", \"17365d\", \"366092\", \"953734\", \"76923c\", \"5f497a\", \"31859b\", \"e36c09\"], [\"7f7f7e\", \"0c0c0c\", \"1d1b10\", \"0f243e\", \"244061\", \"632423\", \"4f6128\", \"3f3151\", \"205867\", \"974806\"]]\n        },\n\n        initialize: function initialize(options) {\n            this.options = Utils.merge(options, {});\n            this.setElement(this._template());\n            this.$panel = this.$(\".ui-color-picker-panel\");\n            this.$view = this.$(\".ui-color-picker-view\");\n            this.$value = this.$(\".ui-color-picker-value\");\n            this.$header = this.$(\".ui-color-picker-header\");\n            this._build();\n            this.visible = false;\n            this.value(this.options.value);\n            this.$boxes = this.$(\".ui-color-picker-box\");\n            var self = this;\n            this.$boxes.on(\"click\", function () {\n                self.value($(this).css(\"background-color\"));\n                self.$header.trigger(\"click\");\n            });\n            this.$header.on(\"click\", function () {\n                self.visible = !self.visible;\n                if (self.visible) {\n                    self.$view.fadeIn(\"fast\");\n                } else {\n                    self.$view.fadeOut(\"fast\");\n                }\n            });\n        },\n\n        /** Get/set value */\n        value: function value(new_val) {\n            if (new_val !== undefined && new_val !== null) {\n                this.$value.css(\"background-color\", new_val);\n                this.$(\".ui-color-picker-box\").empty();\n                this.$(this._getValue()).html(this._templateCheck());\n                this.options.onchange && this.options.onchange(new_val);\n            }\n            return this._getValue();\n        },\n\n        /** Get value from dom */\n        _getValue: function _getValue() {\n            var rgb = this.$value.css(\"background-color\");\n            rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n            if (rgb) {\n                var hex = function hex(x) {\n                    return (\"0\" + parseInt(x).toString(16)).slice(-2);\n                };\n\n                return \"#\" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);\n            } else {\n                return null;\n            }\n        },\n\n        /** Build color panel */\n        _build: function _build() {\n            this._content({ colors: this.colors.base });\n            for (var i in this.colors.theme) {\n                var line_def = {};\n                if (i == 0) {\n                    line_def[\"bottom\"] = true;\n                } else if (i != this.colors.theme.length - 1) {\n                    line_def[\"top\"] = true;\n                    line_def[\"bottom\"] = true;\n                } else {\n                    line_def[\"top\"] = true;\n                }\n                line_def[\"colors\"] = this.colors.theme[i];\n                this._content(line_def);\n            }\n            this._content({ colors: this.colors.standard });\n        },\n\n        /** Create content */\n        _content: function _content(options) {\n            var colors = options.colors;\n            var $content = $(this._templateContent());\n            var $line = $content.find(\".line\");\n            this.$panel.append($content);\n            for (var i in colors) {\n                var $box = $(this._templateBox(colors[i]));\n                if (options.top) {\n                    $box.css(\"border-top\", \"none\");\n                    $box.css(\"border-top-left-radius\", \"0px\");\n                    $box.css(\"border-top-right-radius\", \"0px\");\n                }\n                if (options.bottom) {\n                    $box.css(\"border-bottom\", \"none\");\n                    $box.css(\"border-bottom-left-radius\", \"0px\");\n                    $box.css(\"border-bottom-right-radius\", \"0px\");\n                }\n                $line.append($box);\n            }\n            return $content;\n        },\n\n        /** Check icon */\n        _templateCheck: function _templateCheck() {\n            return '<div class=\"ui-color-picker-check fa fa-check\"/>';\n        },\n\n        /** Content template */\n        _templateContent: function _templateContent() {\n            return '<div class=\"ui-color-picker-content\">' + '<div class=\"line\"/>' + \"</div>\";\n        },\n\n        /** Box template */\n        _templateBox: function _templateBox(color) {\n            return '<div id=\"' + color + '\" class=\"ui-color-picker-box\" style=\"background-color: #' + color + ';\"/>';\n        },\n\n        /** Main template */\n        _template: function _template() {\n            return '<div class=\"ui-color-picker\">' + '<div class=\"ui-color-picker-header\">' + '<div class=\"ui-color-picker-value\"/>' + '<div class=\"ui-color-picker-label\">Select a color</div>' + \"</div>\" + '<div class=\"ui-color-picker-view ui-input\">' + '<div class=\"ui-color-picker-panel\"/>' + \"</div>\";\n            \"</div>\";\n        }\n    });\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 44:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _queryStringParsing = __webpack_require__(11);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nvar _uiMisc = __webpack_require__(5);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ = _jquery2.default;\n\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function initialize(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function push(url, data) {\n        data = data || {};\n        data.__identifer = Math.random().toString(36).substr(2);\n        if (!$.isEmptyObject(data)) {\n            url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            url += $.param(data, true);\n        }\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function execute(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = _queryStringParsing2.default.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function authenticate(args, name) {\n        return true;\n    },\n\n    access_denied: function access_denied() {\n        this.page.display(new _uiMisc2.default.Message({\n            status: \"danger\",\n            message: \"You must be logged in with proper credentials to make this request.\",\n            persistent: true\n        }));\n    }\n});\n\nexports.default = Router;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/**\n *  This class contains backbone wrappers for basic ui elements such as Images, Labels, Buttons, Input fields etc.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(17), __webpack_require__(29), __webpack_require__(18), __webpack_require__(30), __webpack_require__(10), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Select, Slider, Options, Drilldown, Buttons, Modal) {\n    /** Label wrapper */\n    var Label = Backbone.View.extend({\n        tagName: \"label\",\n        initialize: function initialize(options) {\n            this.model = options && options.model || new Backbone.Model(options);\n            this.tagName = options.tagName || this.tagName;\n            this.setElement($(\"<\" + this.tagName + \"/>\"));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n        title: function title(new_title) {\n            this.model.set(\"title\", new_title);\n        },\n        value: function value() {\n            return this.model.get(\"title\");\n        },\n        render: function render() {\n            this.$el.removeClass().addClass(\"ui-label\").addClass(this.model.get(\"cls\")).html(this.model.get(\"title\"));\n            return this;\n        }\n    });\n\n    /** Displays messages used e.g. in the tool form */\n    var Message = Backbone.View.extend({\n        initialize: function initialize(options) {\n            this.model = options && options.model || new Backbone.Model({\n                message: null,\n                status: \"info\",\n                cls: \"\",\n                persistent: false,\n                fade: true\n            }).set(options);\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n        update: function update(options) {\n            this.model.set(options);\n        },\n        render: function render() {\n            this.$el.removeClass().addClass(\"ui-message\").addClass(this.model.get(\"cls\"));\n            var status = this.model.get(\"status\");\n            if (this.model.get(\"large\")) {\n                this.$el.addClass((status == \"success\" && \"done\" || status == \"danger\" && \"error\" || status) + \"messagelarge\");\n            } else {\n                this.$el.addClass(\"alert\").addClass(\"alert-\" + status);\n            }\n            if (this.model.get(\"message\")) {\n                this.$el.html(this.messageForDisplay());\n                this.$el[this.model.get(\"fade\") ? \"fadeIn\" : \"show\"]();\n                this.timeout && window.clearTimeout(this.timeout);\n                if (!this.model.get(\"persistent\")) {\n                    var self = this;\n                    this.timeout = window.setTimeout(function () {\n                        self.model.set(\"message\", \"\");\n                    }, 3000);\n                }\n            } else {\n                this.$el.fadeOut();\n            }\n            return this;\n        },\n        messageForDisplay: function messageForDisplay() {\n            return _.escape(this.model.get(\"message\"));\n        }\n    });\n\n    var UnescapedMessage = Message.extend({\n        messageForDisplay: function messageForDisplay() {\n            return this.model.get(\"message\");\n        }\n    });\n\n    /** Renders an input element used e.g. in the tool form */\n    var Input = Backbone.View.extend({\n        initialize: function initialize(options) {\n            this.model = options && options.model || new Backbone.Model({\n                type: \"text\",\n                placeholder: \"\",\n                disabled: false,\n                readonly: false,\n                visible: true,\n                cls: \"\",\n                area: false,\n                color: null,\n                style: null\n            }).set(options);\n            this.tagName = this.model.get(\"area\") ? \"textarea\" : \"input\";\n            this.setElement($(\"<\" + this.tagName + \"/>\"));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n        events: {\n            input: \"_onchange\"\n        },\n        value: function value(new_val) {\n            new_val !== undefined && this.model.set(\"value\", typeof new_val === \"string\" ? new_val : \"\");\n            return this.model.get(\"value\");\n        },\n        render: function render() {\n            var self = this;\n            this.$el.removeClass().addClass(\"ui-\" + this.tagName).addClass(this.model.get(\"cls\")).addClass(this.model.get(\"style\")).attr(\"id\", this.model.id).attr(\"type\", this.model.get(\"type\")).attr(\"placeholder\", this.model.get(\"placeholder\")).css(\"color\", this.model.get(\"color\") || \"\").css(\"border-color\", this.model.get(\"color\") || \"\");\n            var datalist = this.model.get(\"datalist\");\n            if ($.isArray(datalist) && datalist.length > 0) {\n                this.$el.autocomplete({\n                    source: function source(request, response) {\n                        response(self.model.get(\"datalist\"));\n                    },\n                    change: function change() {\n                        self._onchange();\n                    }\n                });\n            }\n            if (this.model.get(\"value\") !== this.$el.val()) {\n                this.$el.val(this.model.get(\"value\"));\n            }\n            _.each([\"readonly\", \"disabled\"], function (attr_name) {\n                self.model.get(attr_name) ? self.$el.attr(attr_name, true) : self.$el.removeAttr(attr_name);\n            });\n            this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n            return this;\n        },\n        _onchange: function _onchange() {\n            this.value(this.$el.val());\n            this.model.get(\"onchange\") && this.model.get(\"onchange\")(this.model.get(\"value\"));\n        }\n    });\n\n    /** Creates a hidden element input field used e.g. in the tool form */\n    var Hidden = Backbone.View.extend({\n        initialize: function initialize(options) {\n            this.model = options && options.model || new Backbone.Model(options);\n            this.setElement($(\"<div/>\").append(this.$info = $(\"<div/>\")).append(this.$hidden = $(\"<div/>\")));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n        value: function value(new_val) {\n            new_val !== undefined && this.model.set(\"value\", new_val);\n            return this.model.get(\"value\");\n        },\n        render: function render() {\n            this.$el.attr(\"id\", this.model.id);\n            this.$hidden.val(this.model.get(\"value\"));\n            this.model.get(\"info\") ? this.$info.show().text(this.model.get(\"info\")) : this.$info.hide();\n            return this;\n        }\n    });\n\n    /** Creates a upload element input field */\n    var Upload = Backbone.View.extend({\n        initialize: function initialize(options) {\n            var self = this;\n            this.model = options && options.model || new Backbone.Model(options);\n            this.setElement($(\"<div/>\").append(this.$info = $(\"<div/>\")).append(this.$file = $(\"<input/>\").attr(\"type\", \"file\").addClass(\"ui-margin-bottom\")).append(this.$text = $(\"<textarea/>\").addClass(\"ui-textarea\").attr(\"disabled\", true)).append(this.$wait = $(\"<i/>\").addClass(\"fa fa-spinner fa-spin\")));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.$file.on(\"change\", function (e) {\n                self._readFile(e);\n            });\n            this.render();\n        },\n        value: function value(new_val) {\n            new_val !== undefined && this.model.set(\"value\", new_val);\n            return this.model.get(\"value\");\n        },\n        render: function render() {\n            this.$el.attr(\"id\", this.model.id);\n            this.model.get(\"info\") ? this.$info.show().text(this.model.get(\"info\")) : this.$info.hide();\n            this.model.get(\"value\") ? this.$text.text(this.model.get(\"value\")).show() : this.$text.hide();\n            this.model.get(\"wait\") ? this.$wait.show() : this.$wait.hide();\n            return this;\n        },\n        _readFile: function _readFile(e) {\n            var self = this;\n            var file = e.target.files && e.target.files[0];\n            if (file) {\n                var reader = new FileReader();\n                reader.onload = function () {\n                    self.model.set({ wait: false, value: this.result });\n                };\n                this.model.set({ wait: true, value: null });\n                reader.readAsText(file);\n            }\n        }\n    });\n\n    return {\n        Button: Buttons.ButtonDefault,\n        ButtonIcon: Buttons.ButtonIcon,\n        ButtonCheck: Buttons.ButtonCheck,\n        ButtonMenu: Buttons.ButtonMenu,\n        ButtonLink: Buttons.ButtonLink,\n        Input: Input,\n        Label: Label,\n        Message: Message,\n        UnescapedMessage: UnescapedMessage,\n        Upload: Upload,\n        Modal: Modal,\n        RadioButton: Options.RadioButton,\n        Checkbox: Options.Checkbox,\n        Radio: Options.Radio,\n        Select: Select,\n        Hidden: Hidden,\n        Slider: Slider,\n        Drilldown: Drilldown\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 58:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _formView = __webpack_require__(9);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _uiMisc = __webpack_require__(5);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Generic form view */\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = new Backbone.Model(options);\n        this.url = this.model.get(\"url\");\n        this.redirect = this.model.get(\"redirect\");\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + this.url,\n            type: \"GET\"\n        }).done(function (response) {\n            var options = $.extend({}, self.model.attributes, response);\n            var form = new _formView2.default({\n                title: options.title,\n                message: options.message,\n                status: options.status || \"warning\",\n                icon: options.icon,\n                inputs: options.inputs,\n                buttons: {\n                    submit: new _uiMisc2.default.Button({\n                        tooltip: options.submit_tooltip,\n                        title: options.submit_title || \"Save\",\n                        icon: options.submit_icon || \"fa-save\",\n                        cls: \"btn btn-primary ui-clear-float\",\n                        onclick: function onclick() {\n                            self._submit(form);\n                        }\n                    })\n                }\n            });\n            self.$el.empty().append(form.$el);\n        }).fail(function (response) {\n            self.$el.empty().append(new _uiMisc2.default.Message({\n                message: \"Failed to load resource \" + self.url + \".\",\n                status: \"danger\",\n                persistent: true\n            }).$el);\n        });\n    },\n\n    _submit: function _submit(form) {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + self.url,\n            data: JSON.stringify(form.data.create()),\n            type: \"PUT\",\n            contentType: \"application/json\"\n        }).done(function (response) {\n            var success_message = {\n                message: response.message,\n                status: \"success\",\n                persistent: false\n            };\n            if (self.redirect) {\n                window.location = Galaxy.root + self.redirect + \"?\" + $.param(success_message);\n            } else {\n                form.data.matchModel(response, function (input, input_id) {\n                    form.field_list[input_id].value(input.value);\n                });\n                self._showMessage(form, success_message);\n            }\n        }).fail(function (response) {\n            self._showMessage(form, {\n                message: response.responseJSON.err_msg,\n                status: \"danger\",\n                persistent: false\n            });\n        });\n    },\n\n    _showMessage: function _showMessage(form, options) {\n        var $panel = form.$el.parents().filter(function () {\n            return [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1;\n        }).first();\n        $panel.animate({ scrollTop: 0 }, 500);\n        form.message.update(options);\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 8:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils, Ui) {\n    var View = Backbone.View.extend({\n        visible: false,\n        initialize: function initialize(options) {\n            var self = this;\n            this.model = options && options.model || new Backbone.Model({\n                id: Utils.uid(),\n                cls: \"ui-portlet\",\n                title: \"\",\n                icon: \"\",\n                buttons: null,\n                body: null,\n                scrollable: true,\n                nopadding: false,\n                operations: null,\n                collapsible: false,\n                collapsible_button: false,\n                collapsed: false,\n                onchange_title: null\n            }).set(options);\n            this.setElement(this._template());\n\n            // link all dom elements\n            this.$body = this.$(\".portlet-body\");\n            this.$title_text = this.$(\".portlet-title-text\");\n            this.$title_icon = this.$(\".portlet-title-icon\");\n            this.$header = this.$(\".portlet-header\");\n            this.$content = this.$(\".portlet-content\");\n            this.$backdrop = this.$(\".portlet-backdrop\");\n            this.$buttons = this.$(\".portlet-buttons\");\n            this.$operations = this.$(\".portlet-operations\");\n\n            // add body to component list\n            this.model.get(\"body\") && this.append(this.model.get(\"body\"));\n\n            // add icon for collapsible option\n            this.collapsible_button = new Ui.ButtonIcon({\n                icon: \"fa-eye\",\n                tooltip: \"Collapse/Expand\",\n                cls: \"ui-button-icon-plain\",\n                onclick: function onclick() {\n                    self[self.collapsed ? \"expand\" : \"collapse\"]();\n                }\n            });\n            this.render();\n        },\n\n        render: function render() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el.removeClass().addClass(options.cls).attr(\"id\", options.id);\n            this.$header[options.title ? \"show\" : \"hide\"]();\n            this.$title_text.html(options.title);\n            _.each([this.$content, this.$body], function ($el) {\n                $el[options.nopadding ? \"addClass\" : \"removeClass\"](\"no-padding\");\n            });\n\n            // render title icon\n            if (options.icon) {\n                this.$title_icon.removeClass().addClass(\"portlet-title-icon fa\").addClass(options.icon).show();\n            } else {\n                this.$title_icon.hide();\n            }\n\n            // make portlet collapsible\n            this.$title_text[options.collapsible ? \"addClass\" : \"removeClass\"](\"no-highlight collapsible\").off();\n            if (options.collapsible) {\n                this.$title_text.on(\"click\", function () {\n                    self[self.collapsed ? \"expand\" : \"collapse\"]();\n                });\n                options.collapsed ? this.collapse() : this.expand();\n            }\n\n            // allow title editing\n            this.$title_text.prop(\"disabled\", !options.onchange_title);\n            options.onchange_title && this.$title_text.make_text_editable({\n                on_finish: function on_finish(new_title) {\n                    options.onchange_title(new_title);\n                }\n            });\n\n            // render buttons\n            if (options.buttons) {\n                this.$buttons.empty().show();\n                $.each(this.model.get(\"buttons\"), function (name, item) {\n                    item.$el.prop(\"id\", name);\n                    self.$buttons.append(item.$el);\n                });\n            } else {\n                this.$buttons.hide();\n            }\n\n            // render operations\n            this.$operations.empty;\n            if (options.collapsible_button) {\n                this.$operations.append(this.collapsible_button.$el);\n            }\n            if (options.operations) {\n                $.each(options.operations, function (name, item) {\n                    item.$el.prop(\"id\", name);\n                    self.$operations.append(item.$el);\n                });\n            }\n            return this;\n        },\n\n        /** Append new doms to body */\n        append: function append($el) {\n            this.$body.append($el);\n        },\n\n        /** Remove all content */\n        empty: function empty() {\n            this.$body.empty();\n        },\n\n        /** Return header element */\n        header: function header() {\n            return this.$header;\n        },\n\n        /** Return body element */\n        body: function body() {\n            return this.$body;\n        },\n\n        /** Show portlet */\n        show: function show() {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n        },\n\n        /** Hide portlet */\n        hide: function hide() {\n            this.visible = false;\n            this.$el.hide();\n        },\n\n        /** Enable a particular button */\n        enableButton: function enableButton(id) {\n            this.$buttons.find(\"#\" + id).prop(\"disabled\", false);\n        },\n\n        /** Disable a particular button */\n        disableButton: function disableButton(id) {\n            this.$buttons.find(\"#\" + id).prop(\"disabled\", true);\n        },\n\n        /** Hide a particular operation */\n        hideOperation: function hideOperation(id) {\n            this.$operations.find(\"#\" + id).hide();\n        },\n\n        /** Show a particular operation */\n        showOperation: function showOperation(id) {\n            this.$operations.find(\"#\" + id).show();\n        },\n\n        /** Replaces the event callback of an existing operation */\n        setOperation: function setOperation(id, callback) {\n            this.$operations.find(\"#\" + id).off(\"click\").on(\"click\", callback);\n        },\n\n        /** Change title */\n        title: function title(new_title) {\n            new_title && this.$title_text.html(new_title);\n            return this.$title_text.html();\n        },\n\n        /** Collapse portlet */\n        collapse: function collapse() {\n            this.collapsed = true;\n            this.$content.height(\"0%\");\n            this.$body.hide();\n            this.collapsible_button.setIcon(\"fa-eye-slash\");\n        },\n\n        /** Expand portlet */\n        expand: function expand() {\n            this.collapsed = false;\n            this.$content.height(\"100%\");\n            this.$body.fadeIn(\"fast\");\n            this.collapsible_button.setIcon(\"fa-eye\");\n        },\n\n        /** Disable content access */\n        disable: function disable() {\n            this.$backdrop.show();\n        },\n\n        /** Enable content access */\n        enable: function enable() {\n            this.$backdrop.hide();\n        },\n\n        _template: function _template() {\n            return $(\"<div/>\").append($(\"<div/>\").addClass(\"portlet-header\").append($(\"<div/>\").addClass(\"portlet-operations\")).append($(\"<div/>\").addClass(\"portlet-title\").append($(\"<i/>\").addClass(\"portlet-title-icon\")).append($(\"<span/>\").addClass(\"portlet-title-text\")))).append($(\"<div/>\").addClass(\"portlet-content\").append($(\"<div/>\").addClass(\"portlet-body\")).append($(\"<div/>\").addClass(\"portlet-buttons\"))).append($(\"<div/>\").addClass(\"portlet-backdrop\"));\n        }\n    });\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n\n/***/ 9:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiPortlet = __webpack_require__(8);\n\nvar _uiPortlet2 = _interopRequireDefault(_uiPortlet);\n\nvar _uiMisc = __webpack_require__(5);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _formSection = __webpack_require__(31);\n\nvar _formSection2 = _interopRequireDefault(_formSection);\n\nvar _formData = __webpack_require__(23);\n\nvar _formData2 = _interopRequireDefault(_formData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = new Backbone.Model({\n            initial_errors: false,\n            cls: \"ui-portlet-limited\",\n            icon: null,\n            always_refresh: true,\n            status: \"warning\",\n            hide_operations: false,\n            onchange: function onchange() {}\n        }).set(options);\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    /** Update available options */\n    update: function update(new_model) {\n        var self = this;\n        this.data.matchModel(new_model, function (node, input_id) {\n            var input = self.input_list[input_id];\n            if (input && input.options) {\n                if (!_.isEqual(input.options, node.options)) {\n                    input.options = node.options;\n                    var field = self.field_list[input_id];\n                    if (field.update) {\n                        var new_options = [];\n                        if ([\"data\", \"data_collection\", \"drill_down\"].indexOf(input.type) != -1) {\n                            new_options = input.options;\n                        } else {\n                            for (var i in node.options) {\n                                var opt = node.options[i];\n                                if (opt.length > 2) {\n                                    new_options.push({\n                                        label: opt[0],\n                                        value: opt[1]\n                                    });\n                                }\n                            }\n                        }\n                        field.update(new_options);\n                        field.trigger(\"change\");\n                        Galaxy.emit.debug(\"form-view::update()\", \"Updating options for \" + input_id);\n                    }\n                }\n            }\n        });\n    },\n\n    /** Set form into wait mode */\n    wait: function wait(active) {\n        for (var i in this.input_list) {\n            var field = this.field_list[i];\n            var input = this.input_list[i];\n            if (input.is_dynamic && field.wait && field.unwait) {\n                field[active ? \"wait\" : \"unwait\"]();\n            }\n        }\n    },\n\n    /** Highlight and scroll to input element (currently only used for error notifications) */\n    highlight: function highlight(input_id, message, silent) {\n        var input_element = this.element_list[input_id];\n        if (input_element) {\n            input_element.error(message || \"Please verify this parameter.\");\n            this.portlet.expand();\n            this.trigger(\"expand\", input_id);\n            if (!silent) {\n                var $panel = this.$el.parents().filter(function () {\n                    return [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1;\n                }).first();\n                $panel.animate({\n                    scrollTop: $panel.scrollTop() + input_element.$el.offset().top - 120\n                }, 500);\n            }\n        }\n    },\n\n    /** Highlights errors */\n    errors: function errors(options) {\n        this.trigger(\"reset\");\n        if (options && options.errors) {\n            var error_messages = this.data.matchResponse(options.errors);\n            for (var input_id in this.element_list) {\n                var input = this.element_list[input_id];\n                if (error_messages[input_id]) {\n                    this.highlight(input_id, error_messages[input_id], true);\n                }\n            }\n        }\n    },\n\n    /** Render tool form */\n    render: function render() {\n        var self = this;\n        this.off(\"change\");\n        this.off(\"reset\");\n        // contains the dom field elements as created by the parameter factory i.e. form-parameters\n        this.field_list = {};\n        // contains input definitions/dictionaries as provided by the parameters to_dict() function through the api\n        this.input_list = {};\n        // contains the dom elements of each input element i.e. form-input which wraps the actual input field\n        this.element_list = {};\n        // converts the form into a json data structure\n        this.data = new _formData2.default.Manager(this);\n        this._renderForm();\n        this.data.create();\n        this.model.get(\"initial_errors\") && this.errors(this.model.attributes);\n        // add listener which triggers on checksum change, and reset the form input wrappers\n        var current_check = this.data.checksum();\n        this.on(\"change\", function (input_id) {\n            var input = self.input_list[input_id];\n            if (!input || input.refresh_on_change || self.model.get(\"always_refresh\")) {\n                var new_check = self.data.checksum();\n                if (new_check != current_check) {\n                    current_check = new_check;\n                    self.model.get(\"onchange\")();\n                }\n            }\n        });\n        this.on(\"reset\", function () {\n            _.each(self.element_list, function (input_element) {\n                input_element.reset();\n            });\n        });\n        return this;\n    },\n\n    /** Renders/appends dom elements of the form */\n    _renderForm: function _renderForm() {\n        $(\".tooltip\").remove();\n        var options = this.model.attributes;\n        this.message = new _uiMisc2.default.UnescapedMessage();\n        this.section = new _formSection2.default.View(this, {\n            inputs: options.inputs\n        });\n        this.portlet = new _uiPortlet2.default.View({\n            icon: options.icon,\n            title: options.title,\n            cls: options.cls,\n            operations: !options.hide_operations && options.operations,\n            buttons: options.buttons,\n            collapsible: options.collapsible,\n            collapsed: options.collapsed,\n            onchange_title: options.onchange_title\n        });\n        this.portlet.append(this.message.$el);\n        this.portlet.append(this.section.$el);\n        this.$el.empty();\n        options.inputs && this.$el.append(this.portlet.$el);\n        options.message && this.message.update({\n            persistent: true,\n            status: options.status,\n            message: options.message\n        });\n        Galaxy.emit.debug(\"form-view::initialize()\", \"Completed\");\n    }\n}); /**\n        This is the main class of the form plugin. It is referenced as 'app' in lower level modules.\n    */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ })\n\n},[158]);\n\n\n// WEBPACK FOOTER //\n// admin.bundled.js","/** This module contains all button views. */\ndefine([\"utils/utils\"], function(Utils) {\n    /** This renders the default button which is used e.g. at the bottom of the upload modal. */\n    var ButtonDefault = Backbone.View.extend({\n        initialize: function(options) {\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    title: \"\",\n                    icon: \"\",\n                    cls: \"btn btn-default\",\n                    wait: false,\n                    wait_text: \"Sending...\",\n                    wait_cls: \"btn btn-info\",\n                    disabled: false,\n                    percentage: -1\n                }).set(options);\n            this.setElement(\n                $(\"<button/>\")\n                    .attr(\"type\", \"button\")\n                    .append((this.$icon = $(\"<i/>\")))\n                    .append((this.$title = $(\"<span/>\")))\n                    .append(\n                        (this.$progress = $(\"<div/>\").append(\n                            (this.$progress_bar = $(\"<div/>\"))\n                        ))\n                    )\n            );\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(\"ui-button-default\")\n                .addClass(options.disabled && \"disabled\")\n                .attr(\"id\", options.id)\n                .attr(\"disabled\", options.disabled)\n                .off(\"click\")\n                .on(\"click\", function() {\n                    $(\".tooltip\").hide();\n                    options.onclick && !self.disabled && options.onclick();\n                })\n                .tooltip({ title: options.tooltip, placement: \"bottom\" });\n            this.$progress\n                .addClass(\"progress\")\n                .css(\"display\", options.percentage !== -1 ? \"block\" : \"none\");\n            this.$progress_bar\n                .addClass(\"progress-bar\")\n                .css({ width: options.percentage + \"%\" });\n            this.$icon.removeClass().addClass(\"icon fa\");\n            this.$title.removeClass().addClass(\"title\");\n            if (options.wait) {\n                this.$el.addClass(options.wait_cls).prop(\"disabled\", true);\n                this.$icon.addClass(\"fa-spinner fa-spin ui-margin-right\");\n                this.$title.html(options.wait_text);\n            } else {\n                this.$el.addClass(options.cls);\n                this.$icon.addClass(options.icon);\n                this.$title.html(options.title);\n                options.icon &&\n                    options.title &&\n                    this.$icon.addClass(\"ui-margin-right\");\n            }\n        },\n\n        /** Show button */\n        show: function() {\n            this.$el.show();\n        },\n\n        /** Hide button */\n        hide: function() {\n            this.$el.hide();\n        },\n\n        /** Disable button */\n        disable: function() {\n            this.model.set(\"disabled\", true);\n        },\n\n        /** Enable button */\n        enable: function() {\n            this.model.set(\"disabled\", false);\n        },\n\n        /** Show spinner to indicate that the button is not ready to be clicked */\n        wait: function() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Hide spinner to indicate that the button is ready to be clicked */\n        unwait: function() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Change icon */\n        setIcon: function(icon) {\n            this.model.set(\"icon\", icon);\n        }\n    });\n\n    /** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons. */\n    var ButtonLink = ButtonDefault.extend({\n        initialize: function(options) {\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    title: \"\",\n                    icon: \"\",\n                    cls: \"\"\n                }).set(options);\n            this.setElement($(\"<a/>\").append((this.$icon = $(\"<span/>\"))));\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function() {\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(options.cls)\n                .attr({\n                    id: options.id,\n                    href: options.href || \"javascript:void(0)\",\n                    title: options.title,\n                    target: options.target || \"_top\",\n                    disabled: options.disabled\n                })\n                .tooltip({ placement: \"bottom\" })\n                .off(\"click\")\n                .on(\"click\", function() {\n                    options.onclick && !options.disabled && options.onclick();\n                });\n            this.$icon.removeClass().addClass(options.icon);\n        }\n    });\n\n    /** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected. */\n    var ButtonCheck = Backbone.View.extend({\n        initialize: function(options) {\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    title: \"Select/Unselect all\",\n                    icons: [\n                        \"fa-square-o\",\n                        \"fa-minus-square-o\",\n                        \"fa-check-square-o\"\n                    ],\n                    value: 0,\n                    onchange: function() {}\n                }).set(options);\n            this.setElement(\n                $(\"<div/>\")\n                    .append((this.$icon = $(\"<span/>\")))\n                    .append((this.$title = $(\"<span/>\")))\n            );\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function(options) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .addClass(\"ui-button-check\")\n                .off(\"click\")\n                .on(\"click\", function() {\n                    self.model.set(\n                        \"value\",\n                        (self.model.get(\"value\") === 0 && 2) || 0\n                    );\n                    options.onclick && options.onclick();\n                });\n            this.$title.html(options.title);\n            this.$icon\n                .removeClass()\n                .addClass(\"icon fa ui-margin-right\")\n                .addClass(options.icons[options.value]);\n        },\n\n        /* Sets a new value and/or returns the value.\n        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n        * OR:\n        * @param{Integer}   new_val - Number of selected options.\n        * @param{Integer}   total   - Total number of available options.\n        */\n        value: function(new_val, total) {\n            if (new_val !== undefined) {\n                if (total && new_val !== 0) {\n                    new_val = (new_val !== total && 1) || 2;\n                }\n                this.model.set(\"value\", new_val);\n                this.model.get(\"onchange\")(this.model.get(\"value\"));\n            }\n            return this.model.get(\"value\");\n        }\n    });\n\n    /** This renders a differently styled, more compact button version. */\n    var ButtonIcon = ButtonDefault.extend({\n        initialize: function(options) {\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    title: \"\",\n                    icon: \"\",\n                    cls: \"ui-button-icon\",\n                    disabled: false\n                }).set(options);\n            this.setElement(\n                $(\"<div/>\").append(\n                    (this.$button = $(\"<div/>\")\n                        .append((this.$icon = $(\"<i/>\")))\n                        .append((this.$title = $(\"<span/>\"))))\n                )\n            );\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function(options) {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(options.cls)\n                .addClass(options.disabled && \"disabled\")\n                .attr(\"disabled\", options.disabled)\n                .attr(\"id\", options.id)\n                .off(\"click\")\n                .on(\"click\", function() {\n                    $(\".tooltip\").hide();\n                    !options.disabled && options.onclick && options.onclick();\n                });\n            this.$button\n                .addClass(\"button\")\n                .tooltip({ title: options.tooltip, placement: \"bottom\" });\n            this.$icon\n                .removeClass()\n                .addClass(\"icon fa\")\n                .addClass(options.icon);\n            this.$title.addClass(\"title\").html(options.title);\n            options.icon &&\n                options.title &&\n                this.$icon.addClass(\"ui-margin-right\");\n        }\n    });\n\n    /** This class creates a button with dropdown menu. */\n    var ButtonMenu = ButtonDefault.extend({\n        $menu: null,\n        initialize: function(options) {\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: \"\",\n                    title: \"\",\n                    pull: \"right\",\n                    icon: null,\n                    onclick: null,\n                    cls: \"ui-button-icon ui-button-menu\",\n                    tooltip: \"\",\n                    target: \"\",\n                    href: \"\",\n                    onunload: null,\n                    visible: true,\n                    tag: \"\"\n                }).set(options);\n            this.collection = new Backbone.Collection();\n            this.setElement(\n                $(\"<div/>\").append(\n                    (this.$root = $(\"<div/>\")\n                        .append((this.$icon = $(\"<i/>\")))\n                        .append((this.$title = $(\"<span/>\"))))\n                )\n            );\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.listenTo(\n                this.collection,\n                \"change add remove reset\",\n                this.render,\n                this\n            );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(\"dropdown\")\n                .addClass(options.cls)\n                .attr(\"id\", options.id)\n                .css({\n                    display:\n                        options.visible &&\n                        this.collection.where({ visible: true }).length > 0\n                            ? \"block\"\n                            : \"none\"\n                });\n            this.$root\n                .addClass(\"root button dropdown-toggle\")\n                .attr(\"data-toggle\", \"dropdown\")\n                .tooltip({ title: options.tooltip, placement: \"bottom\" })\n                .off(\"click\")\n                .on(\"click\", function(e) {\n                    $(\".tooltip\").hide();\n                    e.preventDefault();\n                    options.onclick && options.onclick();\n                });\n            this.$icon\n                .removeClass()\n                .addClass(\"icon fa\")\n                .addClass(options.icon);\n            this.$title\n                .removeClass()\n                .addClass(\"title\")\n                .html(options.title);\n            options.icon &&\n                options.title &&\n                this.$icon.addClass(\"ui-margin-right\");\n            this.$menu && this.$menu.remove();\n            if (this.collection.length > 0) {\n                this.$menu = $(\"<ul/>\")\n                    .addClass(\"menu dropdown-menu\")\n                    .addClass(\"pull-\" + self.model.get(\"pull\"))\n                    .attr(\"role\", \"menu\");\n                this.$el.append(this.$menu);\n            }\n            this.collection.each(function(submodel) {\n                var suboptions = submodel.attributes;\n                if (suboptions.visible) {\n                    var $link = $(\"<a/>\")\n                        .addClass(\"dropdown-item\")\n                        .attr({\n                            href: suboptions.href,\n                            target: suboptions.target\n                        })\n                        .append(\n                            $(\"<i/>\")\n                                .addClass(\"fa\")\n                                .addClass(suboptions.icon)\n                                .css(\n                                    \"display\",\n                                    suboptions.icon ? \"inline-block\" : \"none\"\n                                )\n                        )\n                        .append(suboptions.title)\n                        .on(\"click\", function(e) {\n                            if (suboptions.onclick) {\n                                e.preventDefault();\n                                suboptions.onclick();\n                            }\n                        });\n                    self.$menu.append($(\"<li/>\").append($link));\n                    suboptions.divider &&\n                        self.$menu.append($(\"<li/>\").addClass(\"divider\"));\n                }\n            });\n        },\n\n        /** Add a new menu item */\n        addMenu: function(options) {\n            this.collection.add(\n                Utils.merge(options, {\n                    title: \"\",\n                    target: \"\",\n                    href: \"\",\n                    onclick: null,\n                    divider: false,\n                    visible: true,\n                    icon: null,\n                    cls: \"button-menu btn-group\"\n                })\n            );\n        }\n    });\n\n    return {\n        ButtonDefault: ButtonDefault,\n        ButtonLink: ButtonLink,\n        ButtonIcon: ButtonIcon,\n        ButtonCheck: ButtonCheck,\n        ButtonMenu: ButtonMenu\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-buttons.js","import jQuery from \"jquery\";\nvar $ = jQuery;\nimport { GalaxyApp } from \"galaxy\";\nimport AdminPanel from \"./panels/admin-panel\";\nimport FormWrapper from \"mvc/form/form-wrapper\";\nimport GridView from \"mvc/grid/grid-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\nimport Router from \"layout/router\";\nimport Utils from \"utils/utils\";\nimport Page from \"layout/page\";\n\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new GalaxyApp(options, bootstrapped);\n    Galaxy.debug(\"admin app\");\n\n    /** Routes */\n    var AdminRouter = Router.extend({\n        routes: {\n            \"(/)admin(/)users\": \"show_users\",\n            \"(/)admin(/)roles\": \"show_roles\",\n            \"(/)admin(/)groups\": \"show_groups\",\n            \"(/)admin(/)tool_versions\": \"show_tool_versions\",\n            \"(/)admin(/)quotas\": \"show_quotas\",\n            \"(/)admin(/)forms\": \"show_forms\",\n            \"(/)admin(/)form(/)(:form_id)\": \"show_form\"\n        },\n\n        authenticate: function(args, name) {\n            return Galaxy.user && Galaxy.user.id && Galaxy.user.get(\"is_admin\");\n        },\n\n        show_users: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"admin/users_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_roles: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"admin/roles_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_groups: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"admin/groups_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_tool_versions: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"admin/tool_versions_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_quotas: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"admin/quotas_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_forms: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"forms/forms_list\",\n                    url_data: Galaxy.params,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_form: function(form_id) {\n            var id = \"?id=\" + QueryStringParsing.get(\"id\");\n            var form_defs = {\n                reset_user_password: {\n                    title: \"Reset passwords\",\n                    url: \"admin/reset_user_password\" + id,\n                    icon: \"fa-user\",\n                    submit_title: \"Save new password\",\n                    redirect: \"admin/users\"\n                },\n                manage_roles_and_groups_for_user: {\n                    url: \"admin/manage_roles_and_groups_for_user\" + id,\n                    icon: \"fa-users\",\n                    redirect: \"admin/users\"\n                },\n                manage_users_and_groups_for_role: {\n                    url: \"admin/manage_users_and_groups_for_role\" + id,\n                    redirect: \"admin/roles\"\n                },\n                manage_users_and_roles_for_group: {\n                    url: \"admin/manage_users_and_roles_for_group\" + id,\n                    redirect: \"admin/groups\"\n                },\n                manage_users_and_groups_for_quota: {\n                    url: \"admin/manage_users_and_groups_for_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                create_role: {\n                    url: \"admin/create_role\",\n                    redirect: \"admin/roles\"\n                },\n                create_group: {\n                    url: \"admin/create_group\",\n                    redirect: \"admin/groups\"\n                },\n                create_quota: {\n                    url: \"admin/create_quota\",\n                    redirect: \"admin/quotas\"\n                },\n                rename_role: {\n                    url: \"admin/rename_role\" + id,\n                    redirect: \"admin/roles\"\n                },\n                rename_group: {\n                    url: \"admin/rename_group\" + id,\n                    redirect: \"admin/groups\"\n                },\n                rename_quota: {\n                    url: \"admin/rename_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                edit_quota: {\n                    url: \"admin/edit_quota\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                set_quota_default: {\n                    url: \"admin/set_quota_default\" + id,\n                    redirect: \"admin/quotas\"\n                },\n                create_form: {\n                    url: \"forms/create_form\",\n                    redirect: \"admin/forms\"\n                },\n                edit_form: {\n                    url: \"forms/edit_form\" + id,\n                    redirect: \"admin/forms\"\n                }\n            };\n            this.page.display(new FormWrapper.View(form_defs[form_id]));\n        }\n    });\n\n    $(function() {\n        _.extend(options.config, { active_view: \"admin\" });\n        Utils.setWindowTitle(\"Administration\");\n        Galaxy.page = new Page.View(\n            _.extend(options, {\n                Left: AdminPanel,\n                Router: AdminRouter\n            })\n        );\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/admin.js","import _l from \"utils/localization\";\n\nvar AdminPanel = Backbone.View.extend({\n    initialize: function(page, options) {\n        var self = this;\n        this.page = page;\n        this.root = options.root;\n        this.config = options.config;\n        this.settings = options.settings;\n        this.message = options.message;\n        this.status = options.status;\n        this.model = new Backbone.Model({\n            title: _l(\"Administration\")\n        });\n        this.categories = new Backbone.Collection([\n            {\n                title: \"Server\",\n                items: [\n                    {\n                        title: \"Data types registry\",\n                        url: \"admin/view_datatypes_registry\"\n                    },\n                    {\n                        title: \"Data tables registry\",\n                        url: \"admin/view_tool_data_tables\"\n                    },\n                    {\n                        title: \"Display applications\",\n                        url: \"admin/display_applications\"\n                    },\n                    {\n                        title: \"Manage jobs\",\n                        url: \"admin/jobs\"\n                    }\n                ]\n            },\n            {\n                title: \"Tools and Tool Shed\",\n                items: [\n                    {\n                        title: \"Search Tool Shed\",\n                        url: \"admin_toolshed/browse_tool_sheds\",\n                        enabled: self.settings.is_tool_shed_installed\n                    },\n                    {\n                        title: \"Search Tool Shed (Beta)\",\n                        url: \"admin_toolshed/browse_toolsheds\",\n                        enabled:\n                            self.settings.is_tool_shed_installed &&\n                            self.config.enable_beta_ts_api_install\n                    },\n                    {\n                        title: \"Monitor installing repositories\",\n                        url:\n                            \"admin_toolshed/monitor_repository_installation?installing_repository_ids=\" +\n                            self.settings.installing_repository_ids,\n                        enabled: self.settings.installing_repository_ids\n                    },\n                    {\n                        title: \"Manage installed tools\",\n                        url: \"admin_toolshed/browse_repositories\",\n                        enabled: self.settings.is_repo_installed\n                    },\n                    {\n                        title: \"Reset metadata\",\n                        url:\n                            \"admin_toolshed/reset_metadata_on_selected_installed_repositories\",\n                        enabled: self.settings.is_repo_installed\n                    },\n                    {\n                        title: \"Download local tool\",\n                        url: \"admin/package_tool\"\n                    },\n                    {\n                        title: \"Tool lineage\",\n                        url: \"admin/tool_versions\",\n                        target: \"__use_router__\"\n                    },\n                    {\n                        title: \"Reload a tool's configuration\",\n                        url: \"admin/reload_tool\"\n                    },\n                    {\n                        title: \"Review tool migration stages\",\n                        url: \"admin/review_tool_migration_stages\"\n                    },\n                    {\n                        title: \"View Tool Error Logs\",\n                        url: \"admin/tool_errors\"\n                    },\n                    {\n                        title: \"Manage Display Whitelist\",\n                        url: \"admin/sanitize_whitelist\"\n                    },\n                    {\n                        title: \"Manage Tool Dependencies\",\n                        url: \"admin/manage_tool_dependencies\"\n                    }\n                ]\n            },\n            {\n                title: \"User Management\",\n                items: [\n                    {\n                        title: \"Users\",\n                        url: \"admin/users\",\n                        target: \"__use_router__\"\n                    },\n                    {\n                        title: \"Groups\",\n                        url: \"admin/groups\",\n                        target: \"__use_router__\"\n                    },\n                    {\n                        title: \"Roles\",\n                        url: \"admin/roles\",\n                        target: \"__use_router__\"\n                    },\n                    {\n                        title: \"API keys\",\n                        url: \"userskeys/all_users\"\n                    },\n                    {\n                        title: \"Impersonate a user\",\n                        url: \"admin/impersonate\",\n                        enabled: self.config.allow_user_impersonation\n                    }\n                ]\n            },\n            {\n                title: \"Data\",\n                items: [\n                    {\n                        title: \"Quotas\",\n                        url: \"admin/quotas\",\n                        target: \"__use_router__\",\n                        enabled: self.config.enable_quotas\n                    },\n                    {\n                        title: \"Data libraries\",\n                        url: \"library_admin/browse_libraries\"\n                    },\n                    {\n                        title: \"Roles\",\n                        url: \"admin/roles\",\n                        target: \"__use_router__\"\n                    },\n                    {\n                        title: \"Local data\",\n                        url: \"data_manager\"\n                    }\n                ]\n            },\n            {\n                title: \"Form Definitions\",\n                items: [\n                    {\n                        title: \"Form definitions\",\n                        url: \"admin/forms\",\n                        target: \"__use_router__\"\n                    }\n                ]\n            },\n            {\n                title: \"Sample Tracking\",\n                items: [\n                    {\n                        title: \"Sequencers and external services\",\n                        url: \"external_service/browse_external_services\"\n                    },\n                    {\n                        title: \"Request types\",\n                        url: \"request_type/browse_request_types\"\n                    },\n                    {\n                        title: \"Sequencing requests\",\n                        url: \"requests_admin/browse_requests\"\n                    },\n                    {\n                        title: \"Find samples\",\n                        url:\n                            \"requests_common/find_samples?cntrller=requests_admin\"\n                    }\n                ]\n            }\n        ]);\n        this.setElement(this._template());\n    },\n\n    render: function() {\n        var self = this;\n        this.$el.empty();\n        this.categories.each(function(category) {\n            var $section = $(self._templateSection(category.attributes));\n            var $entries = $section.find(\".ui-side-section-body\");\n            _.each(category.get(\"items\"), function(item) {\n                if (item.enabled === undefined || item.enabled) {\n                    var $link = $(\"<a/>\")\n                        .attr({ href: self.root + item.url })\n                        .text(_l(item.title));\n                    if (item.target == \"__use_router__\") {\n                        $link.on(\"click\", function(e) {\n                            e.preventDefault();\n                            self.page.router.push(item.url);\n                        });\n                    } else {\n                        $link.attr(\"target\", \"galaxy_main\");\n                    }\n                    $entries.append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-side-section-body-title\")\n                            .append($link)\n                    );\n                }\n            });\n            self.$el.append($section);\n        });\n        this.page\n            .$(\"#galaxy_main\")\n            .prop(\n                \"src\",\n                this.root +\n                    \"admin/center?message=\" +\n                    this.message +\n                    \"&status=\" +\n                    this.status\n            );\n    },\n\n    _templateSection: function(options) {\n        return [\n            \"<div>\",\n            '<div class=\"ui-side-section-title\">' +\n                _l(options.title) +\n                \"</div>\",\n            '<div class=\"ui-side-section-body\"/>',\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    _template: function() {\n        return '<div class=\"ui-side-panel\"/>';\n    },\n\n    toString: function() {\n        return \"adminPanel\";\n    }\n});\n\nexport default AdminPanel;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/panels/admin-panel.js","// This is necessary so that, when nested arrays are used in ajax/post/get methods, square brackets ('[]') are\n// not appended to the identifier of a nested array.\njQuery.ajaxSettings.traditional = true;\n\n// dependencies\nimport Utils from \"utils/utils\";\nimport GridModel from \"mvc/grid/grid-model\";\nimport Templates from \"mvc/grid/grid-template\";\nimport PopupMenu from \"mvc/ui/popup-menu\";\n// grid view\nexport default Backbone.View.extend({\n    // model\n    grid: null,\n\n    // Initialize\n    initialize: function(grid_config) {\n        this.grid = new GridModel();\n        this.dict_format = grid_config.dict_format;\n        this.title = grid_config.title;\n        var self = this;\n        window.add_tag_to_grid_filter = function(tag_name, tag_value) {\n            // Put tag name and value together.\n            var tag =\n                tag_name +\n                (tag_value !== undefined && tag_value !== \"\"\n                    ? \":\" + tag_value\n                    : \"\");\n            var advanced_search = $(\"#advanced-search\").is(\":visible\");\n            if (!advanced_search) {\n                $(\"#standard-search\").slideToggle(\"fast\");\n                $(\"#advanced-search\").slideToggle(\"fast\");\n            }\n            self.add_filter_condition(\"tags\", tag);\n        };\n\n        // set element\n        if (this.dict_format) {\n            this.setElement(\"<div/>\");\n            if (grid_config.url_base && !grid_config.items) {\n                var url_data = grid_config.url_data || {};\n                _.each(grid_config.filters, function(v, k) {\n                    url_data[\"f-\" + k] = v;\n                });\n                $.ajax({\n                    url: grid_config.url_base + \"?\" + $.param(url_data),\n                    success: function(response) {\n                        response.embedded = grid_config.embedded;\n                        response.filters = grid_config.filters || {};\n                        self.init_grid(response);\n                    }\n                });\n            } else {\n                this.init_grid(grid_config);\n            }\n        } else {\n            this.setElement(\"#grid-container\");\n            this.init_grid(grid_config);\n        }\n\n        // fix padding\n        if (grid_config.use_panels) {\n            $(\"#center\").css({\n                padding: \"10px\",\n                overflow: \"auto\"\n            });\n        }\n    },\n\n    // refresh frames\n    handle_refresh: function(refresh_frames) {\n        if (refresh_frames) {\n            if ($.inArray(\"history\", refresh_frames) > -1) {\n                if (top.Galaxy && top.Galaxy.currHistoryPanel) {\n                    top.Galaxy.currHistoryPanel.loadCurrentHistory();\n                }\n            }\n        }\n    },\n\n    // Initialize\n    init_grid: function(grid_config) {\n        this.grid.set(grid_config);\n\n        // get options\n        var options = this.grid.attributes;\n\n        if (this.allow_title_display && options.title) {\n            Utils.setWindowTitle(options.title);\n        }\n        // handle refresh requests\n        this.handle_refresh(options.refresh_frames);\n\n        // strip protocol and domain\n        var url = this.grid.get(\"url_base\");\n        url = url.replace(/^.*\\/\\/[^\\/]+/, \"\");\n        this.grid.set(\"url_base\", url);\n\n        // append main template\n        this.$el.html(Templates.grid(options));\n\n        // update div contents\n        this.$el.find(\"#grid-table-header\").html(Templates.header(options));\n        this.$el.find(\"#grid-table-body\").html(Templates.body(options));\n        this.$el.find(\"#grid-table-footer\").html(Templates.footer(options));\n\n        // update message\n        if (options.message) {\n            this.$el.find(\"#grid-message\").html(Templates.message(options));\n            var self = this;\n            if (options.use_hide_message) {\n                setTimeout(function() {\n                    self.$el.find(\"#grid-message\").html(\"\");\n                }, 5000);\n            }\n        }\n\n        // configure elements\n        this.init_grid_elements();\n        this.init_grid_controls();\n\n        // attach global event handler\n        // TODO: redundant (the onload/standard page handlers do this) - but needed because these are constructed after page ready\n        init_refresh_on_change();\n    },\n\n    // Initialize grid controls\n    init_grid_controls: function() {\n        // link\n        var self = this;\n\n        // Initialize grid operation button.\n        this.$el.find(\".operation-button\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                self.submit_operation(this);\n                return false;\n            });\n        });\n\n        // Initialize text filters to select text on click and use normal font when user is typing.\n        this.$el.find(\"input[type=text]\").each(function() {\n            $(this).off();\n            $(this)\n                .click(function() {\n                    $(this).select();\n                })\n                .keyup(function() {\n                    $(this).css(\"font-style\", \"normal\");\n                });\n        });\n\n        // Initialize sort links.\n        this.$el.find(\".sort-link\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                self.set_sort_condition($(this).attr(\"sort_key\"));\n                return false;\n            });\n        });\n\n        // Initialize text filters.\n        this.$el.find(\".text-filter-form\").each(function() {\n            $(this).off();\n            $(this).submit(function() {\n                var column_key = $(this).attr(\"column_key\");\n                var text_input_obj = $(\"#input-\" + column_key + \"-filter\");\n                var text_input = text_input_obj.val();\n                text_input_obj.val(\"\");\n                self.add_filter_condition(column_key, text_input);\n                return false;\n            });\n        });\n\n        // Initialize categorical filters.\n        this.$el.find(\".text-filter-val > a\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                // Remove visible element.\n                $(this)\n                    .parent()\n                    .remove();\n\n                // Remove filter condition.\n                self.remove_filter_condition(\n                    $(this).attr(\"filter_key\"),\n                    $(this).attr(\"filter_val\")\n                );\n\n                // Return\n                return false;\n            });\n        });\n\n        // Initialize categorical filters.\n        this.$el.find(\".categorical-filter > a\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                self.set_categorical_filter(\n                    $(this).attr(\"filter_key\"),\n                    $(this).attr(\"filter_val\")\n                );\n                return false;\n            });\n        });\n\n        // Initialize standard, advanced search toggles.\n        this.$el.find(\".advanced-search-toggle\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                self.$el.find(\"#standard-search\").slideToggle(\"fast\");\n                self.$el.find(\"#advanced-search\").slideToggle(\"fast\");\n                return false;\n            });\n        });\n\n        // Add event to check all box\n        this.$el.find(\"#check_all\").off();\n        this.$el.find(\"#check_all\").on(\"click\", function() {\n            self.check_all_items();\n        });\n    },\n\n    // Initialize grid elements.\n    init_grid_elements: function() {\n        // Initialize grid selection checkboxes.\n        this.$el.find(\".grid\").each(function() {\n            var checkboxes = $(this).find(\"input.grid-row-select-checkbox\");\n            var check_count = $(this).find(\"span.grid-selected-count\");\n            var update_checked = function() {\n                check_count.text($(checkboxes).filter(\":checked\").length);\n            };\n\n            $(checkboxes).each(function() {\n                $(this).change(update_checked);\n            });\n            update_checked();\n        });\n\n        // Initialize ratings.\n        if (this.$el.find(\".community_rating_star\").length !== 0)\n            this.$el.find(\".community_rating_star\").rating({});\n\n        // get options\n        var options = this.grid.attributes;\n        var self = this;\n\n        //\n        // add page click events\n        //\n        this.$el.find(\".page-link > a\").each(function() {\n            $(this).click(function() {\n                self.set_page($(this).attr(\"page_num\"));\n                return false;\n            });\n        });\n\n        //\n        // add inbound/outbound events\n        //\n        this.$el.find(\".use-target\").each(function() {\n            $(this).click(function(e) {\n                self.execute({\n                    href: $(this).attr(\"href\"),\n                    target: $(this).attr(\"target\")\n                });\n                return false;\n            });\n        });\n\n        // empty grid?\n        var items_length = options.items.length;\n        if (items_length == 0) {\n            return;\n        }\n\n        // add operation popup menus\n        _.each(options.items, function(item, index) {\n            var button = self.$(\"#grid-\" + index + \"-popup\").off();\n            var popup = new PopupMenu(button);\n            _.each(options[\"operations\"], function(operation) {\n                self._add_operation(popup, operation, item);\n            });\n        });\n    },\n\n    /** Add an operation to the items menu */\n    _add_operation: function(popup, operation, item) {\n        var self = this;\n        var settings = item.operation_config[operation.label];\n        if (settings.allowed && operation.allow_popup) {\n            popup.addItem({\n                html: operation.label,\n                href: settings.url_args,\n                target: settings.target,\n                confirmation_text: operation.confirm,\n                func: function(e) {\n                    e.preventDefault();\n                    var label = $(e.target).html();\n                    if (operation.onclick) {\n                        operation.onclick(item.encode_id);\n                    } else {\n                        self.execute(this.findItemByHtml(label));\n                    }\n                }\n            });\n        }\n    },\n\n    // Add a condition to the grid filter; this adds the condition and refreshes the grid.\n    add_filter_condition: function(name, value) {\n        // Do nothing is value is empty.\n        if (value === \"\") {\n            return false;\n        }\n\n        // Add condition to grid.\n        this.grid.add_filter(name, value, true);\n\n        // Add button that displays filter and provides a button to delete it.\n        var t = $(Templates.filter_element(name, value));\n        var self = this;\n        t.click(function() {\n            // Remove visible element.\n            $(this).remove();\n\n            // Remove filter condition.\n            self.remove_filter_condition(name, value);\n        });\n\n        // append to container\n        var container = this.$el.find(\"#\" + name + \"-filtering-criteria\");\n        container.append(t);\n\n        // execute\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Remove a condition to the grid filter; this adds the condition and refreshes the grid.\n    remove_filter_condition: function(name, value) {\n        // Remove filter condition.\n        this.grid.remove_filter(name, value);\n\n        // Execute\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set sort condition for grid.\n    set_sort_condition: function(col_key) {\n        // Set new sort condition. New sort is col_key if sorting new column; if reversing sort on\n        // currently sorted column, sort is reversed.\n        var cur_sort = this.grid.get(\"sort_key\");\n        var new_sort = col_key;\n        if (cur_sort.indexOf(col_key) !== -1) {\n            // Reverse sort.\n            if (cur_sort.substring(0, 1) !== \"-\") {\n                new_sort = \"-\" + col_key;\n            }\n        }\n\n        // Remove sort arrows elements.\n        this.$el.find(\".sort-arrow\").remove();\n\n        // Add sort arrow element to new sort column.\n        var sort_arrow = new_sort.substring(0, 1) == \"-\" ? \"&uarr;\" : \"&darr;\";\n        var t = $(\"<span>\" + sort_arrow + \"</span>\").addClass(\"sort-arrow\");\n\n        // Add to header\n        this.$el.find(\"#\" + col_key + \"-header\").append(t);\n\n        // Update grid.\n        this.grid.set(\"sort_key\", new_sort);\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set new value for categorical filter.\n    set_categorical_filter: function(name, new_value) {\n        // Update filter hyperlinks to reflect new filter value.\n        var category_filter = this.grid.get(\"categorical_filters\")[name],\n            cur_value = this.grid.get(\"filters\")[name];\n        var self = this;\n        this.$el.find(\".\" + name + \"-filter\").each(function() {\n            var text = $.trim($(this).text());\n            var filter = category_filter[text];\n            var filter_value = filter[name];\n            if (filter_value == new_value) {\n                // Remove filter link since grid will be using this filter. It is assumed that\n                // this element has a single child, a hyperlink/anchor with text.\n                $(this).empty();\n                $(this).addClass(\"current-filter\");\n                $(this).append(text);\n            } else if (filter_value == cur_value) {\n                // Add hyperlink for this filter since grid will no longer be using this filter. It is assumed that\n                // this element has a single child, a hyperlink/anchor.\n                $(this).empty();\n                var t = $('<a href=\"#\">' + text + \"</a>\");\n                t.click(function() {\n                    self.set_categorical_filter(name, filter_value);\n                });\n                $(this).removeClass(\"current-filter\");\n                $(this).append(t);\n            }\n        });\n\n        // Update grid.\n        this.grid.add_filter(name, new_value);\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set page to view.\n    set_page: function(new_page) {\n        // Update page hyperlink to reflect new page.\n        var self = this;\n        this.$el.find(\".page-link\").each(function() {\n            var id = $(this).attr(\"id\"),\n                page_num = parseInt(id.split(\"-\")[2], 10), // Id has form 'page-link-<page_num>\n                cur_page = self.grid.get(\"cur_page\"),\n                text;\n            if (page_num === new_page) {\n                // Remove link to page since grid will be on this page. It is assumed that\n                // this element has a single child, a hyperlink/anchor with text.\n                text = $(this)\n                    .children()\n                    .text();\n                $(this).empty();\n                $(this).addClass(\"inactive-link\");\n                $(this).text(text);\n            } else if (page_num === cur_page) {\n                // Add hyperlink to this page since grid will no longer be on this page. It is assumed that\n                // this element has a single child, a hyperlink/anchor.\n                text = $(this).text();\n                $(this).empty();\n                $(this).removeClass(\"inactive-link\");\n                var t = $('<a href=\"#\">' + text + \"</a>\");\n                t.click(function() {\n                    self.set_page(page_num);\n                });\n                $(this).append(t);\n            }\n        });\n\n        if (new_page === \"all\") {\n            this.grid.set(\"cur_page\", new_page);\n        } else {\n            this.grid.set(\"cur_page\", parseInt(new_page, 10));\n        }\n        this.execute();\n    },\n\n    // confirmation/submission of operation request\n    submit_operation: function(operation_button, confirmation_text) {\n        // identify operation\n        var operation_name = $(operation_button).val();\n\n        // verify in any item is selected\n        var number_of_checked_ids = this.$el.find('input[name=\"id\"]:checked')\n            .length;\n        if (!number_of_checked_ids > 0) {\n            return false;\n        }\n\n        // Check to see if there's grid confirmation text for this operation\n        var operation = _.findWhere(this.grid.attributes.operations, {\n            label: operation_name\n        });\n        if (operation && !confirmation_text) {\n            confirmation_text = operation.confirm || \"\";\n        }\n\n        // collect ids\n        var item_ids = [];\n        this.$el.find(\"input[name=id]:checked\").each(function() {\n            item_ids.push($(this).val());\n        });\n\n        // execute operation\n        var options = {\n            operation: operation_name,\n            id: item_ids,\n            confirmation_text: confirmation_text\n        };\n        if (operation.target == \"top\") {\n            options = _.extend(options, {\n                href: operation.href,\n                target: operation.target\n            });\n        }\n        this.execute(options);\n        return true;\n    },\n\n    check_all_items: function() {\n        var check = this.$(\".grid-row-select-checkbox\");\n        var state = this.$(\"#check_all\").prop(\"checked\");\n        _.each(check, function(c) {\n            $(c).prop(\"checked\", state);\n        });\n        this.init_grid_elements();\n    },\n\n    // Go back to page one; this is useful when a filter is applied.\n    go_page_one: function() {\n        // Need to go back to page 1 if not showing all.\n        var cur_page = this.grid.get(\"cur_page\");\n        if (cur_page !== null && cur_page !== undefined && cur_page !== \"all\") {\n            this.grid.set(\"cur_page\", 1);\n        }\n    },\n\n    //\n    // execute operations and hyperlink requests\n    //\n    execute: function(options) {\n        // get url\n        var id = null;\n        var href = null;\n        var operation = null;\n        var confirmation_text = null;\n        var target = null;\n\n        // check for options\n        if (options) {\n            // get options\n            href = options.href;\n            operation = options.operation;\n            id = options.id;\n            confirmation_text = options.confirmation_text;\n            target = options.target;\n\n            // check if input contains the operation tag\n            if (href !== undefined && href.indexOf(\"operation=\") != -1) {\n                // Get operation, id in hyperlink's href.\n                var href_parts = href.split(\"?\");\n                if (href_parts.length > 1) {\n                    var href_parms_str = href_parts[1];\n                    var href_parms = href_parms_str.split(\"&\");\n                    for (var index = 0; index < href_parms.length; index++) {\n                        if (href_parms[index].indexOf(\"operation\") != -1) {\n                            // Found operation parm; get operation value.\n                            operation = href_parms[index].split(\"=\")[1];\n                            operation = operation.replace(/\\+/g, \" \");\n                        } else if (href_parms[index].indexOf(\"id\") != -1) {\n                            // Found id parm; get id value.\n                            id = href_parms[index].split(\"=\")[1];\n                        }\n                    }\n                }\n            }\n        }\n\n        // check for operation details\n        if (operation && id) {\n            // show confirmation box\n            if (\n                confirmation_text &&\n                confirmation_text != \"\" &&\n                confirmation_text != \"None\" &&\n                confirmation_text != \"null\"\n            )\n                if (!confirm(confirmation_text)) return false;\n\n            // use small characters for operation?!\n            operation = operation.toLowerCase();\n\n            // Update grid.\n            this.grid.set({\n                operation: operation,\n                item_ids: id\n            });\n\n            // Do operation. If operation cannot be performed asynchronously, redirect to location.\n            if (target == \"top\") {\n                window.top.location =\n                    href + \"?\" + $.param(this.grid.get_url_data());\n            } else if (this.grid.can_async_op(operation) || this.dict_format) {\n                this.update_grid();\n            } else {\n                this.go_to(target, href);\n            }\n\n            // done\n            return false;\n        }\n\n        // refresh grid\n        if (href) {\n            this.go_to(target, href);\n            return false;\n        }\n\n        // refresh grid\n        if (this.grid.get(\"async\") || this.dict_format) {\n            this.update_grid();\n        } else {\n            this.go_to(target, href);\n        }\n\n        // done\n        return false;\n    },\n\n    // go to url\n    go_to: function(target, href) {\n        // get aysnc status\n        var async = this.grid.get(\"async\");\n        this.grid.set(\"async\", false);\n\n        // get slide status\n        var advanced_search = this.$el.find(\"#advanced-search\").is(\":visible\");\n        this.grid.set(\"advanced_search\", advanced_search);\n\n        // get default url\n        if (!href) {\n            href =\n                this.grid.get(\"url_base\") +\n                \"?\" +\n                $.param(this.grid.get_url_data());\n        }\n\n        // clear grid of transient request attributes.\n        this.grid.set({\n            operation: undefined,\n            item_ids: undefined,\n            async: async\n        });\n        switch (target) {\n            case \"inbound\":\n                // this currently assumes that there is only a single grid shown at a time\n                var $div = $(\".grid-header\").closest(\".inbound\");\n                if ($div.length !== 0) {\n                    $div.load(href);\n                    return;\n                }\n                break;\n            case \"top\":\n                window.top.location = href;\n                break;\n            default:\n                window.location = href;\n        }\n    },\n\n    // Update grid.\n    update_grid: function() {\n        // If there's an operation, do POST; otherwise, do GET.\n        var method = this.grid.get(\"operation\") ? \"POST\" : \"GET\";\n\n        // Show overlay to indicate loading and prevent user actions.\n        this.$el.find(\".loading-elt-overlay\").show();\n        var self = this;\n        $.ajax({\n            type: method,\n            url: self.grid.get(\"url_base\"),\n            data: self.grid.get_url_data(),\n            error: function(response) {\n                alert(\"Grid refresh failed\");\n            },\n            success: function(response_text) {\n                // backup\n                var embedded = self.grid.get(\"embedded\");\n                var insert = self.grid.get(\"insert\");\n                var advanced_search = self.$el\n                    .find(\"#advanced-search\")\n                    .is(\":visible\");\n\n                // request new configuration\n                var json = self.dict_format\n                    ? response_text\n                    : $.parseJSON(response_text);\n\n                // update\n                json.embedded = embedded;\n                json.insert = insert;\n                json.advanced_search = advanced_search;\n\n                // Initialize new grid config\n                self.init_grid(json);\n\n                // Hide loading overlay.\n                self.$el.find(\".loading-elt-overlay\").hide();\n            },\n            complete: function() {\n                // Clear grid of transient request attributes.\n                self.grid.set({\n                    operation: undefined,\n                    item_ids: undefined\n                });\n            }\n        });\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/grid/grid-view.js","/**\n *  This class creates/wraps a default html select field as backbone class.\n */\ndefine([\"utils/utils\", \"mvc/ui/ui-buttons\"], function(Utils, Buttons) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.data = [];\n            this.data2 = [];\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    cls: \"ui-select\",\n                    error_text: \"No options available\",\n                    empty_text: \"Nothing selected\",\n                    visible: true,\n                    wait: false,\n                    multiple: false,\n                    searchable: true,\n                    optional: false,\n                    disabled: false,\n                    readonly: false,\n                    onchange: function() {},\n                    value: null,\n                    individual: false,\n                    pagesize: 20\n                }).set(options);\n            this.on(\"change\", function() {\n                self.model.get(\"onchange\") &&\n                    self.model.get(\"onchange\")(self.value());\n            });\n            this.listenTo(this.model, \"change:data\", this._changeData, this);\n            this.listenTo(\n                this.model,\n                \"change:disabled\",\n                this._changeDisabled,\n                this\n            );\n            this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n            this.listenTo(\n                this.model,\n                \"change:visible\",\n                this._changeVisible,\n                this\n            );\n            this.listenTo(this.model, \"change:value\", this._changeValue, this);\n            this.listenTo(\n                this.model,\n                \"change:multiple change:searchable change:cls change:id\",\n                this.render,\n                this\n            );\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            this.model.get(\"searchable\")\n                ? this._renderSearchable()\n                : this._renderClassic();\n            this.$el\n                .addClass(this.model.get(\"cls\"))\n                .attr(\"id\", this.model.get(\"id\"));\n            this.$select\n                .empty()\n                .addClass(\"select\")\n                .attr(\"id\", this.model.get(\"id\") + \"_select\")\n                .prop(\"multiple\", this.model.get(\"multiple\"))\n                .on(\"change\", function() {\n                    self.value(self._getValue());\n                    self.trigger(\"change\");\n                });\n            this._changeData();\n            this._changeWait();\n            this._changeVisible();\n            this._changeDisabled();\n        },\n\n        /** Renders the classic selection field */\n        _renderClassic: function() {\n            var self = this;\n            this.$el\n                .addClass(\n                    this.model.get(\"multiple\")\n                        ? \"ui-select-multiple\"\n                        : \"ui-select\"\n                )\n                .append((this.$select = $(\"<select/>\")))\n                .append((this.$dropdown = $(\"<div/>\")))\n                .append(\n                    (this.$resize = $(\"<div/>\").append(\n                        (this.$resize_icon = $(\"<i/>\"))\n                    ))\n                );\n            if (this.model.get(\"multiple\")) {\n                this.$dropdown.hide();\n                this.$resize_icon\n                    .addClass(\"fa fa-angle-double-right fa-rotate-45\")\n                    .show();\n                this.$resize\n                    .removeClass()\n                    .addClass(\"icon-resize\")\n                    .show()\n                    .off(\"mousedown\")\n                    .on(\"mousedown\", function(event) {\n                        var currentY = event.pageY;\n                        var currentHeight = self.$select.height();\n                        self.minHeight = self.minHeight || currentHeight;\n                        $(\"#dd-helper\")\n                            .show()\n                            .on(\"mousemove\", function(event) {\n                                self.$select.height(\n                                    Math.max(\n                                        currentHeight +\n                                            (event.pageY - currentY),\n                                        self.minHeight\n                                    )\n                                );\n                            })\n                            .on(\"mouseup mouseleave\", function() {\n                                $(\"#dd-helper\")\n                                    .hide()\n                                    .off();\n                            });\n                    });\n            } else {\n                this.$dropdown.show();\n                this.$resize.hide();\n                this.$resize_icon.hide();\n            }\n        },\n\n        /** Renders the default select2 field */\n        _renderSearchable: function() {\n            var self = this;\n            this.$el\n                .append((this.$select = $(\"<div/>\")))\n                .append((this.$dropdown = $(\"<div/>\")));\n            this.$dropdown.hide();\n            if (!this.model.get(\"multiple\")) {\n                this.$dropdown.show().on(\"click\", function() {\n                    self.$select.select2 && self.$select.select2(\"open\");\n                });\n            }\n            this.all_button = null;\n            if (\n                this.model.get(\"multiple\") &&\n                !this.model.get(\"individual\") &&\n                !this.model.get(\"readonly\")\n            ) {\n                this.all_button = new Buttons.ButtonCheck({\n                    onclick: function() {\n                        var new_value = [];\n                        self.all_button.value() !== 0 &&\n                            _.each(self.model.get(\"data\"), function(option) {\n                                new_value.push(option.value);\n                            });\n                        self.value(new_value);\n                        self.trigger(\"change\");\n                    }\n                });\n                this.$el.prepend(this.all_button.$el);\n            }\n        },\n\n        /** Matches a search term with a given text */\n        _match: function(term, text) {\n            return (\n                !term ||\n                term == \"\" ||\n                String(text)\n                    .toUpperCase()\n                    .indexOf(term.toUpperCase()) >= 0\n            );\n        },\n\n        /** Updates the selection options */\n        _changeData: function() {\n            var self = this;\n            this.data = [];\n            if (!this.model.get(\"multiple\") && this.model.get(\"optional\")) {\n                this.data.push({\n                    value: \"__null__\",\n                    label: self.model.get(\"empty_text\")\n                });\n            }\n            _.each(this.model.get(\"data\"), function(option) {\n                self.data.push(option);\n            });\n            if (this.length() == 0) {\n                this.data.push({\n                    value: \"__null__\",\n                    label: this.model.get(\"error_text\")\n                });\n            }\n            if (this.model.get(\"searchable\")) {\n                this.data2 = [];\n                _.each(this.data, function(option, index) {\n                    self.data2.push({\n                        order: index,\n                        id: option.value,\n                        text: option.label,\n                        tags: option.tags\n                    });\n                });\n                this.$select.data(\"select2\") && this.$select.select2(\"destroy\");\n                this.matched_tags = {};\n                this.$select.select2({\n                    data: self.data2,\n                    closeOnSelect: !this.model.get(\"multiple\"),\n                    multiple: this.model.get(\"multiple\"),\n                    query: function(q) {\n                        self.matched_tags = {};\n                        var pagesize = self.model.get(\"pagesize\");\n                        var results = _.filter(self.data2, function(e) {\n                            var found = false;\n                            _.each(e.tags, function(tag) {\n                                if (self._match(q.term, tag)) {\n                                    found = self.matched_tags[tag] = true;\n                                }\n                            });\n                            return found || self._match(q.term, e.text);\n                        });\n                        q.callback({\n                            results: results.slice(\n                                (q.page - 1) * pagesize,\n                                q.page * pagesize\n                            ),\n                            more: results.length >= q.page * pagesize\n                        });\n                    },\n                    formatResult: function(result) {\n                        return (\n                            _.escape(result.text) +\n                            '<div class=\"ui-tags\">' +\n                            _.reduce(\n                                result.tags,\n                                function(memo, tag) {\n                                    if (self.matched_tags[tag]) {\n                                        return (\n                                            memo +\n                                            \"&nbsp;\" +\n                                            '<div class=\"label label-info\">' +\n                                            _.escape(tag) +\n                                            \"</div>\"\n                                        );\n                                    }\n                                    return memo;\n                                },\n                                \"\"\n                            ) +\n                            \"</div>\"\n                        );\n                    }\n                });\n                this.$(\".select2-container .select2-search input\").off(\"blur\");\n            } else {\n                this.$select.find(\"option\").remove();\n                _.each(this.data, function(option) {\n                    self.$select.append(\n                        $(\"<option/>\")\n                            .attr(\"value\", option.value)\n                            .html(_.escape(option.label))\n                    );\n                });\n            }\n            this.model.set(\n                \"disabled\",\n                this.model.get(\"readonly\") || this.length() == 0\n            );\n            this._changeValue();\n        },\n\n        /** Handles field enabling/disabling, usually used when no options are available */\n        _changeDisabled: function() {\n            if (this.model.get(\"searchable\")) {\n                this.$select.select2(\n                    this.model.get(\"disabled\") ? \"disable\" : \"enable\"\n                );\n            } else {\n                this.$select.prop(\"disabled\", this.model.get(\"disabled\"));\n            }\n        },\n\n        /** Searchable fields may display a spinner e.g. while waiting for a server response */\n        _changeWait: function() {\n            this.$dropdown\n                .removeClass()\n                .addClass(\"icon-dropdown fa\")\n                .addClass(\n                    this.model.get(\"wait\")\n                        ? \"fa-spinner fa-spin\"\n                        : \"fa-caret-down\"\n                );\n        },\n\n        /** Handles field visibility */\n        _changeVisible: function() {\n            this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n            this.$select[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        },\n\n        /** Synchronizes the model value with the actually selected field value */\n        _changeValue: function() {\n            this._setValue(this.model.get(\"value\"));\n            if (this.model.get(\"multiple\")) {\n                if (this.all_button) {\n                    var value = this._getValue();\n                    this.all_button.value(\n                        $.isArray(value) ? value.length : 0,\n                        this.length()\n                    );\n                }\n            } else if (\n                this._getValue() === null &&\n                !this.model.get(\"optional\")\n            ) {\n                this._setValue(this.first());\n            }\n        },\n\n        /** Return/Set current selection */\n        value: function(new_value) {\n            new_value !== undefined && this.model.set(\"value\", new_value);\n            return this._getValue();\n        },\n\n        /** Return the first select option */\n        first: function() {\n            return this.data.length > 0 ? this.data[0].value : null;\n        },\n\n        /** Check if a value is an existing option */\n        exists: function(value) {\n            return _.findWhere(this.data, { value: value });\n        },\n\n        /** Return the label/text of the current selection */\n        text: function() {\n            var v = this._getValue();\n            var d = this.exists($.isArray(v) ? v[0] : v);\n            return d ? d.label : \"\";\n        },\n\n        /** Show the select field */\n        show: function() {\n            this.model.set(\"visible\", true);\n        },\n\n        /** Hide the select field */\n        hide: function() {\n            this.model.set(\"visible\", false);\n        },\n\n        /** Show a spinner indicating that the select options are currently loaded */\n        wait: function() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Hide spinner indicating that the request has been completed */\n        unwait: function() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Returns true if the field is disabled */\n        disabled: function() {\n            return this.model.get(\"disabled\");\n        },\n\n        /** Enable the select field */\n        enable: function() {\n            this.model.set(\"disabled\", false);\n        },\n\n        /** Disable the select field */\n        disable: function() {\n            this.model.set(\"disabled\", true);\n        },\n\n        /** Update all available options at once */\n        add: function(options, sorter) {\n            _.each(this.model.get(\"data\"), function(v) {\n                v.keep &&\n                    !_.findWhere(options, { value: v.value }) &&\n                    options.push(v);\n            });\n            sorter && options && options.sort(sorter);\n            this.model.set(\"data\", options);\n        },\n\n        /** Update available options */\n        update: function(options) {\n            this.model.set(\"data\", options);\n        },\n\n        /** Set the custom onchange callback function */\n        setOnChange: function(callback) {\n            this.model.set(\"onchange\", callback);\n        },\n\n        /** Number of available options */\n        length: function() {\n            return $.isArray(this.model.get(\"data\"))\n                ? this.model.get(\"data\").length\n                : 0;\n        },\n\n        /** Set value to dom */\n        _setValue: function(new_value) {\n            var self = this;\n            if (new_value === null || new_value === undefined) {\n                new_value = \"__null__\";\n            }\n            if (this.model.get(\"multiple\")) {\n                new_value = $.isArray(new_value) ? new_value : [new_value];\n            } else if ($.isArray(new_value)) {\n                if (new_value.length > 0) {\n                    new_value = new_value[0];\n                } else {\n                    new_value = \"__null__\";\n                }\n            }\n            if (this.model.get(\"searchable\")) {\n                if ($.isArray(new_value)) {\n                    var val = [];\n                    _.each(new_value, function(v) {\n                        var d = _.findWhere(self.data2, { id: v });\n                        d && val.push(d);\n                    });\n                    new_value = val;\n                } else {\n                    var d = _.findWhere(this.data2, { id: new_value });\n                    new_value = d;\n                }\n                this.$select.select2(\"data\", new_value);\n            } else {\n                this.$select.val(new_value);\n            }\n        },\n\n        /** Get value from dom */\n        _getValue: function() {\n            var val = null;\n            if (this.model.get(\"searchable\")) {\n                var selected = this.$select.select2(\"data\");\n                if (selected) {\n                    if ($.isArray(selected)) {\n                        val = [];\n                        selected.sort(function(a, b) {\n                            return a.order - b.order;\n                        });\n                        _.each(selected, function(v) {\n                            val.push(v.id);\n                        });\n                    } else {\n                        val = selected.id;\n                    }\n                }\n            } else {\n                val = this.$select.val();\n            }\n            return Utils.isEmpty(val) ? null : val;\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-default.js","/** Base class for options based ui elements **/\ndefine([\"utils/utils\", \"mvc/ui/ui-buttons\"], function(Utils, Buttons) {\n    var Base = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    visible: true,\n                    data: [],\n                    id: Utils.uid(),\n                    error_text: \"No options available.\",\n                    wait_text: \"Please wait...\",\n                    multiple: false,\n                    optional: false,\n                    onchange: function() {}\n                }).set(options);\n            this.listenTo(this.model, \"change:value\", this._changeValue, this);\n            this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n            this.listenTo(this.model, \"change:data\", this._changeData, this);\n            this.listenTo(\n                this.model,\n                \"change:visible\",\n                this._changeVisible,\n                this\n            );\n            this.on(\"change\", function() {\n                self.model.get(\"onchange\")(self.value());\n            });\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            this.$el\n                .empty()\n                .removeClass()\n                .addClass(\"ui-options\")\n                .append((this.$message = $(\"<div/>\")))\n                .append((this.$menu = $(\"<div/>\").addClass(\"ui-options-menu\")))\n                .append((this.$options = $(this._template())));\n\n            // add select/unselect all button\n            this.all_button = null;\n            if (this.model.get(\"multiple\")) {\n                this.all_button = new Buttons.ButtonCheck({\n                    onclick: function() {\n                        self\n                            .$(\"input\")\n                            .prop(\"checked\", self.all_button.value() !== 0);\n                        self.value(self._getValue());\n                        self.trigger(\"change\");\n                    }\n                });\n                this.$menu.append(this.all_button.$el);\n            }\n\n            // finalize dom\n            this._changeData();\n            this._changeWait();\n            this._changeVisible();\n        },\n\n        /** Update available options */\n        update: function(options) {\n            this.model.set(\"data\", options);\n        },\n\n        _changeData: function() {\n            var self = this;\n            this.$options.empty();\n            if (this._templateOptions) {\n                this.$options.append(\n                    this._templateOptions(this.model.get(\"data\"))\n                );\n            } else {\n                _.each(this.model.get(\"data\"), function(option) {\n                    self.$options.append(\n                        $(self._templateOption(option))\n                            .addClass(\"ui-option\")\n                            .tooltip({\n                                title: option.tooltip,\n                                placement: \"bottom\"\n                            })\n                    );\n                });\n            }\n            var self = this;\n            this.$(\"input\").on(\"change\", function() {\n                self.value(self._getValue());\n                self.trigger(\"change\");\n            });\n            this._changeValue();\n            this._changeWait();\n        },\n\n        _changeVisible: function() {\n            this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        },\n\n        _changeWait: function() {\n            if (this.model.get(\"wait\")) {\n                if (this.length() === 0) {\n                    this._messageShow(this.model.get(\"wait_text\"), \"info\");\n                    this.$options.hide();\n                    this.$menu.hide();\n                }\n            } else {\n                if (this.length() === 0) {\n                    this._messageShow(this.model.get(\"error_text\"), \"danger\");\n                    this.$options.hide();\n                    this.$menu.hide();\n                } else {\n                    this.$message.hide();\n                    this.$options.css(\"display\", \"inline-block\");\n                    this.$menu.show();\n                }\n            }\n        },\n\n        _changeValue: function() {\n            this._setValue(this.model.get(\"value\"));\n            if (\n                this._getValue() === null &&\n                !this.model.get(\"multiple\") &&\n                !this.model.get(\"optional\")\n            ) {\n                this._setValue(this.first());\n            }\n            this.all_button &&\n                this.all_button.value(\n                    $.isArray(this._getValue()) ? this._getValue().length : 0,\n                    this.length()\n                );\n        },\n\n        /** Return/Set current selection */\n        value: function(new_value) {\n            new_value !== undefined && this.model.set(\"value\", new_value);\n            return this._getValue();\n        },\n\n        /** Return first available option */\n        first: function() {\n            var options = this.$(\"input\").first();\n            return options.length > 0 ? options.val() : null;\n        },\n\n        /** Show a spinner indicating that the select options are currently loaded */\n        wait: function() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Hide spinner indicating that the request has been completed */\n        unwait: function() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Returns the number of options */\n        length: function() {\n            return this.$(\".ui-option\").length;\n        },\n\n        /** Set value to dom */\n        _setValue: function(new_value) {\n            var self = this;\n            if (new_value !== undefined) {\n                this.$(\"input\").prop(\"checked\", false);\n                if (new_value !== null) {\n                    var values = $.isArray(new_value) ? new_value : [new_value];\n                    _.each(values, function(v) {\n                        self\n                            .$('input[value=\"' + v + '\"]')\n                            .first()\n                            .prop(\"checked\", true);\n                    });\n                }\n            }\n        },\n\n        /** Return current selection */\n        _getValue: function() {\n            var selected = [];\n            this.$(\":checked\").each(function() {\n                selected.push($(this).val());\n            });\n            if (Utils.isEmpty(selected)) {\n                return null;\n            }\n            return this.model.get(\"multiple\") ? selected : selected[0];\n        },\n\n        /** Show message instead if options */\n        _messageShow: function(text, status) {\n            this.$message\n                .show()\n                .removeClass()\n                .addClass(\"ui-message alert alert-\" + status)\n                .html(text);\n        },\n\n        /** Main template function */\n        _template: function() {\n            return $(\"<div/>\").addClass(\"ui-options-list\");\n        }\n    });\n\n    /** Iconized **/\n    var BaseIcons = Base.extend({\n        _templateOption: function(pair) {\n            var id = Utils.uid();\n            return $(\"<div/>\")\n                .addClass(\"ui-option\")\n                .append(\n                    $(\"<input/>\").attr({\n                        id: id,\n                        type: this.model.get(\"type\"),\n                        name: this.model.id,\n                        value: pair.value\n                    })\n                )\n                .append(\n                    $(\"<label/>\")\n                        .addClass(\"ui-options-label\")\n                        .attr(\"for\", id)\n                        .html(pair.label)\n                );\n        }\n    });\n\n    /** Radio button field **/\n    var Radio = {};\n    Radio.View = BaseIcons.extend({\n        initialize: function(options) {\n            options.type = \"radio\";\n            BaseIcons.prototype.initialize.call(this, options);\n        }\n    });\n\n    /** Checkbox options field **/\n    var Checkbox = {};\n    Checkbox.View = BaseIcons.extend({\n        initialize: function(options) {\n            options.type = \"checkbox\";\n            options.multiple = true;\n            BaseIcons.prototype.initialize.call(this, options);\n        }\n    });\n\n    /** Radio button options field styled as classic buttons **/\n    var RadioButton = {};\n    RadioButton.View = Base.extend({\n        initialize: function(options) {\n            Base.prototype.initialize.call(this, options);\n        },\n\n        /** Set current value */\n        _setValue: function(new_value) {\n            if (new_value !== undefined) {\n                this.$(\"input\").prop(\"checked\", false);\n                this.$(\"label\").removeClass(\"active\");\n                this.$('[value=\"' + new_value + '\"]')\n                    .prop(\"checked\", true)\n                    .closest(\"label\")\n                    .addClass(\"active\");\n            }\n        },\n\n        /** Template for a single option */\n        _templateOption: function(pair) {\n            var $el = $(\"<label/>\").addClass(\"btn btn-default\");\n            pair.icon &&\n                $el.append(\n                    $(\"<i/>\")\n                        .addClass(\"fa\")\n                        .addClass(pair.icon)\n                        .addClass(!pair.label && \"no-padding\")\n                );\n            $el.append(\n                $(\"<input/>\").attr({\n                    type: \"radio\",\n                    name: this.model.id,\n                    value: pair.value\n                })\n            );\n            pair.label && $el.append(pair.label);\n            return $el;\n        },\n\n        /** Main template function */\n        _template: function() {\n            return $(\"<div/>\")\n                .addClass(\"btn-group ui-radiobutton\")\n                .attr(\"data-toggle\", \"buttons\");\n        }\n    });\n\n    return {\n        Base: Base,\n        BaseIcons: BaseIcons,\n        Radio: Radio,\n        RadioButton: RadioButton,\n        Checkbox: Checkbox\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-options.js","// dependencies\ndefine([\"utils/utils\", \"mvc/ui/ui-portlet\", \"mvc/ui/ui-misc\"], function(\n    Utils,\n    Portlet,\n    Ui\n) {\n    // ui list element\n    var View = Backbone.View.extend({\n        // create portlet to keep track of selected list elements\n        initialize: function(options) {\n            // link this\n            var self = this;\n\n            // initialize options\n            this.options = options;\n            this.name = options.name || \"element\";\n            this.multiple = options.multiple || false;\n\n            // create message handler\n            this.message = new Ui.Message();\n\n            // create portlet\n            this.portlet = new Portlet.View({ cls: \"ui-portlet-section\" });\n\n            // create select field containing the options which can be inserted into the list\n            this.select = new Ui.Select.View({ optional: options.optional });\n\n            // create insert new list element button\n            this.button = new Ui.ButtonIcon({\n                icon: \"fa fa-sign-in\",\n                tooltip: \"Insert new \" + this.name,\n                onclick: function() {\n                    self.add({\n                        id: self.select.value(),\n                        name: self.select.text()\n                    });\n                }\n            });\n\n            // build main element\n            this.setElement(this._template(options));\n            this.$(\".ui-list-message\").append(this.message.$el);\n            this.$(\".ui-list-portlet\").append(this.portlet.$el);\n            this.$(\".ui-list-button\").append(this.button.$el);\n            this.$(\".ui-list-select\").append(this.select.$el);\n        },\n\n        /** Return/Set currently selected list elements */\n        value: function(val) {\n            // set new value\n            if (val !== undefined) {\n                this.portlet.empty();\n                if ($.isArray(val)) {\n                    for (var i in val) {\n                        var v = val[i];\n                        var v_id = null;\n                        var v_name = null;\n                        if ($.type(v) != \"string\") {\n                            v_id = v.id;\n                            v_name = v.name;\n                        } else {\n                            v_id = v_name = v;\n                        }\n                        if (v_id != null) {\n                            this.add({\n                                id: v_id,\n                                name: v_name\n                            });\n                        }\n                    }\n                }\n                this._refresh();\n            }\n            // get current value\n            var lst = [];\n            this.$(\".ui-list-id\").each(function() {\n                lst.push({\n                    id: $(this).prop(\"id\"),\n                    name: $(this)\n                        .find(\".ui-list-name\")\n                        .html()\n                });\n            });\n            if (lst.length == 0) {\n                return null;\n            }\n            return lst;\n        },\n\n        /** Add row */\n        add: function(options) {\n            var self = this;\n            if (this.$('[id=\"' + options.id + '\"]').length === 0) {\n                if (!Utils.isEmpty(options.id)) {\n                    var $el = $(\n                        this._templateRow({\n                            id: options.id,\n                            name: options.name\n                        })\n                    );\n                    $el.on(\"click\", function() {\n                        $el.remove();\n                        self._refresh();\n                    });\n                    $el.on(\"mouseover\", function() {\n                        $el.addClass(\"portlet-highlight\");\n                    });\n                    $el.on(\"mouseout\", function() {\n                        $el.removeClass(\"portlet-highlight\");\n                    });\n                    this.portlet.append($el);\n                    this._refresh();\n                } else {\n                    this.message.update({\n                        message: \"Please select a valid \" + this.name + \".\",\n                        status: \"danger\"\n                    });\n                }\n            } else {\n                this.message.update({\n                    message: \"This \" + this.name + \" is already in the list.\"\n                });\n            }\n        },\n\n        /** Update available options */\n        update: function(options) {\n            this.select.update(options);\n        },\n\n        /** Refresh view */\n        _refresh: function() {\n            if (this.$(\".ui-list-id\").length > 0) {\n                !this.multiple && this.button.disable();\n                this.$(\".ui-list-portlet\").show();\n            } else {\n                this.button.enable();\n                this.$(\".ui-list-portlet\").hide();\n            }\n            this.options.onchange && this.options.onchange();\n        },\n\n        /** Main Template */\n        _template: function(options) {\n            return (\n                '<div class=\"ui-list\">' +\n                '<div class=\"ui-margin-top\">' +\n                '<span class=\"ui-list-button\"/>' +\n                '<span class=\"ui-list-select\"/>' +\n                \"</div>\" +\n                '<div class=\"ui-list-message\"/>' +\n                '<div class=\"ui-list-portlet\"/>' +\n                \"</div>\"\n            );\n        },\n\n        /** Row Template */\n        _templateRow: function(options) {\n            return (\n                '<div id=\"' +\n                options.id +\n                '\" class=\"ui-list-id\">' +\n                '<span class=\"ui-list-delete fa fa-trash\"/>' +\n                '<span class=\"ui-list-name\">' +\n                options.name +\n                \"</span>\" +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-list.js","define(\n    [\n        //jquery\n        //backbone\n    ],\n    function() {\n        // =============================================================================\n        /**\n * view for a popup menu\n */\n        var PopupMenu = Backbone.View.extend({\n            //TODO: maybe better as singleton off the Galaxy obj\n            /** Cache the desired button element and options, set up the button click handler\n     *  NOTE: attaches this view as HTML/jQ data on the button for later use.\n     */\n            initialize: function($button, options) {\n                // default settings\n                this.$button = $button;\n                if (!this.$button.length) {\n                    this.$button = $(\"<div/>\");\n                }\n                this.options = options || [];\n                this.$button.data(\"popupmenu\", this);\n\n                // set up button click -> open menu behavior\n                var menu = this;\n                this.$button.click(function(event) {\n                    // if there's already a menu open, remove it\n                    $(\".popmenu-wrapper\").remove();\n                    menu._renderAndShow(event);\n                    return false;\n                });\n            },\n\n            // render the menu, append to the page body at the click position, and set up the 'click-away' handlers, show\n            _renderAndShow: function(clickEvent) {\n                this.render();\n                this.$el\n                    .appendTo(\"body\")\n                    .css(this._getShownPosition(clickEvent))\n                    .show();\n                this._setUpCloseBehavior();\n            },\n\n            // render the menu\n            // this menu doesn't attach itself to the DOM ( see _renderAndShow )\n            render: function() {\n                // render the menu body absolute and hidden, fill with template\n                this.$el\n                    .addClass(\"popmenu-wrapper\")\n                    .hide()\n                    .css({ position: \"absolute\" })\n                    .html(this.template(this.$button.attr(\"id\"), this.options));\n\n                // set up behavior on each link/anchor elem\n                if (this.options.length) {\n                    var menu = this;\n                    //precondition: there should be one option per li\n                    this.$el.find(\"li\").each(function(i, li) {\n                        var option = menu.options[i];\n\n                        // if the option has 'func', call that function when the anchor is clicked\n                        if (option.func) {\n                            $(this)\n                                .children(\"a.popupmenu-option\")\n                                .click(function(event) {\n                                    option.func.call(menu, event, option);\n                                    // We must preventDefault otherwise clicking \"cancel\"\n                                    // on a purge or something still navigates and causes\n                                    // the action.\n                                    event.preventDefault();\n                                    // bubble up so that an option click will call the close behavior\n                                });\n                        }\n                    });\n                }\n                return this;\n            },\n\n            template: function(id, options) {\n                return [\n                    '<ul id=\"',\n                    id,\n                    '-menu\" class=\"dropdown-menu\">',\n                    this._templateOptions(options),\n                    \"</ul>\"\n                ].join(\"\");\n            },\n\n            _templateOptions: function(options) {\n                if (!options.length) {\n                    return \"<li>(no options)</li>\";\n                }\n                return _.map(options, function(option) {\n                    if (option.divider) {\n                        return '<li class=\"divider\"></li>';\n                    } else if (option.header) {\n                        return [\n                            '<li class=\"head\"><a href=\"javascript:void(0);\">',\n                            option.html,\n                            \"</a></li>\"\n                        ].join(\"\");\n                    }\n                    var href = option.href || \"javascript:void(0);\",\n                        target = option.target\n                            ? ' target=\"' + option.target + '\"'\n                            : \"\",\n                        check = option.checked\n                            ? '<span class=\"fa fa-check\"></span>'\n                            : \"\";\n                    return [\n                        '<li><a class=\"popupmenu-option\" href=\"',\n                        href,\n                        '\"',\n                        target,\n                        \">\",\n                        check,\n                        option.html,\n                        \"</a></li>\"\n                    ].join(\"\");\n                }).join(\"\");\n            },\n\n            // get the absolute position/offset for the menu\n            _getShownPosition: function(clickEvent) {\n                // display menu horiz. centered on click...\n                var menuWidth = this.$el.width();\n                var x = clickEvent.pageX - menuWidth / 2;\n\n                // adjust to handle horiz. scroll and window dimensions ( draw entirely on visible screen area )\n                x = Math.min(\n                    x,\n                    $(document).scrollLeft() + $(window).width() - menuWidth - 5\n                );\n                x = Math.max(x, $(document).scrollLeft() + 5);\n                return {\n                    top: clickEvent.pageY,\n                    left: x\n                };\n            },\n\n            // bind an event handler to all available frames so that when anything is clicked\n            // the menu is removed from the DOM and the event handler unbinds itself\n            _setUpCloseBehavior: function() {\n                var menu = this;\n                //TODO: alternately: focus hack, blocking overlay, jquery.blockui\n\n                // function to close popup and unbind itself\n                function closePopup(event) {\n                    $(document).off(\"click.close_popup\");\n                    if (window && window.parent !== window) {\n                        try {\n                            $(window.parent.document).off(\"click.close_popup\");\n                        } catch (err) {}\n                    } else {\n                        try {\n                            $(\"iframe#galaxy_main\")\n                                .contents()\n                                .off(\"click.close_popup\");\n                        } catch (err) {}\n                    }\n                    menu.remove();\n                }\n\n                $(\"html\").one(\"click.close_popup\", closePopup);\n                if (window && window.parent !== window) {\n                    try {\n                        $(window.parent.document)\n                            .find(\"html\")\n                            .one(\"click.close_popup\", closePopup);\n                    } catch (err) {}\n                } else {\n                    try {\n                        $(\"iframe#galaxy_main\")\n                            .contents()\n                            .one(\"click.close_popup\", closePopup);\n                    } catch (err) {}\n                }\n            },\n\n            // add a menu option/item at the given index\n            addItem: function(item, index) {\n                // append to end if no index\n                index = index >= 0 ? index : this.options.length;\n                this.options.splice(index, 0, item);\n                return this;\n            },\n\n            // remove a menu option/item at the given index\n            removeItem: function(index) {\n                if (index >= 0) {\n                    this.options.splice(index, 1);\n                }\n                return this;\n            },\n\n            // search for a menu option by its html\n            findIndexByHtml: function(html) {\n                for (var i = 0; i < this.options.length; i++) {\n                    if (\n                        _.has(this.options[i], \"html\") &&\n                        this.options[i].html === html\n                    ) {\n                        return i;\n                    }\n                }\n                return null;\n            },\n\n            // search for a menu option by its html\n            findItemByHtml: function(html) {\n                return this.options[this.findIndexByHtml(html)];\n            },\n\n            // string representation\n            toString: function() {\n                return \"PopupMenu\";\n            }\n        });\n        /** shortcut to new for when you don't need to preserve the ref */\n        PopupMenu.create = function _create($button, options) {\n            return new PopupMenu($button, options);\n        };\n\n        // -----------------------------------------------------------------------------\n        // the following class functions are bridges from the original make_popupmenu and make_popup_menus\n        // to the newer backbone.js PopupMenu\n\n        /** Create a PopupMenu from simple map initial_options activated by clicking button_element.\n *      Converts initial_options to object array used by PopupMenu.\n *  @param {jQuery|DOMElement} button_element element which, when clicked, activates menu\n *  @param {Object} initial_options map of key -> values, where\n *      key is option text, value is fn to call when option is clicked\n *  @returns {PopupMenu} the PopupMenu created\n */\n        PopupMenu.make_popupmenu = function(button_element, initial_options) {\n            var convertedOptions = [];\n            _.each(initial_options, function(optionVal, optionKey) {\n                var newOption = { html: optionKey };\n\n                // keys with null values indicate: header\n                if (optionVal === null) {\n                    // !optionVal? (null only?)\n                    newOption.header = true;\n\n                    // keys with function values indicate: a menu option\n                } else if (jQuery.type(optionVal) === \"function\") {\n                    newOption.func = optionVal;\n                }\n                //TODO:?? any other special optionVals?\n                // there was no divider option originally\n                convertedOptions.push(newOption);\n            });\n            return new PopupMenu($(button_element), convertedOptions);\n        };\n\n        /** Find all anchors in $parent (using selector) and covert anchors into a PopupMenu options map.\n *  @param {jQuery} $parent the element that contains the links to convert to options\n *  @param {String} selector jq selector string to find links\n *  @returns {Object[]} the options array to initialize a PopupMenu\n */\n        //TODO: lose parent and selector, pass in array of links, use map to return options\n        PopupMenu.convertLinksToOptions = function($parent, selector) {\n            $parent = $($parent);\n            selector = selector || \"a\";\n            var options = [];\n            $parent.find(selector).each(function(elem, i) {\n                var option = {},\n                    $link = $(elem);\n\n                // convert link text to the option text (html) and the href into the option func\n                option.html = $link.text();\n                if ($link.attr(\"href\")) {\n                    var linkHref = $link.attr(\"href\"),\n                        linkTarget = $link.attr(\"target\"),\n                        confirmText = $link.attr(\"confirm\");\n\n                    option.func = function() {\n                        // if there's a \"confirm\" attribute, throw up a confirmation dialog, and\n                        //  if the user cancels - do nothing\n                        if (confirmText && !confirm(confirmText)) {\n                            return;\n                        }\n\n                        // if there's no confirm attribute, or the user accepted the confirm dialog:\n                        switch (linkTarget) {\n                            // relocate the center panel\n                            case \"_parent\":\n                                window.parent.location = linkHref;\n                                break;\n\n                            // relocate the entire window\n                            case \"_top\":\n                                window.top.location = linkHref;\n                                break;\n\n                            // relocate this panel\n                            default:\n                                window.location = linkHref;\n                        }\n                    };\n                }\n                options.push(option);\n            });\n            return options;\n        };\n\n        /** Create a single popupmenu from existing DOM button and anchor elements\n *  @param {jQuery} $buttonElement the element that when clicked will open the menu\n *  @param {jQuery} $menuElement the element that contains the anchors to convert into a menu\n *  @param {String} menuElementLinkSelector jq selector string used to find anchors to be made into menu options\n *  @returns {PopupMenu} the PopupMenu (Backbone View) that can render, control the menu\n */\n        PopupMenu.fromExistingDom = function(\n            $buttonElement,\n            $menuElement,\n            menuElementLinkSelector\n        ) {\n            $buttonElement = $($buttonElement);\n            $menuElement = $($menuElement);\n            var options = PopupMenu.convertLinksToOptions(\n                $menuElement,\n                menuElementLinkSelector\n            );\n            // we're done with the menu (having converted it to an options map)\n            $menuElement.remove();\n            return new PopupMenu($buttonElement, options);\n        };\n\n        /** Create all popupmenus within a document or a more specific element\n *  @param {DOMElement} parent the DOM element in which to search for popupmenus to build (defaults to document)\n *  @param {String} menuSelector jq selector string to find popupmenu menu elements (defaults to \"div[popupmenu]\")\n *  @param {Function} buttonSelectorBuildFn the function to build the jq button selector.\n *      Will be passed $menuElement, parent.\n *      (Defaults to return '#' + $menuElement.attr( 'popupmenu' ); )\n *  @returns {PopupMenu[]} array of popupmenus created\n */\n        PopupMenu.make_popup_menus = function(\n            parent,\n            menuSelector,\n            buttonSelectorBuildFn\n        ) {\n            parent = parent || document;\n            // orig. Glx popupmenu menus have a (non-std) attribute 'popupmenu'\n            //  which contains the id of the button that activates the menu\n            menuSelector = menuSelector || \"div[popupmenu]\";\n            // default to (orig. Glx) matching button to menu by using the popupmenu attr of the menu as the id of the button\n            buttonSelectorBuildFn =\n                buttonSelectorBuildFn ||\n                function($menuElement, parent) {\n                    return \"#\" + $menuElement.attr(\"popupmenu\");\n                };\n\n            // aggregate and return all PopupMenus\n            var popupMenusCreated = [];\n            $(parent)\n                .find(menuSelector)\n                .each(function() {\n                    var $menuElement = $(this),\n                        $buttonElement = $(parent).find(\n                            buttonSelectorBuildFn($menuElement, parent)\n                        );\n                    popupMenusCreated.push(\n                        PopupMenu.fromDom($buttonElement, $menuElement)\n                    );\n                    $buttonElement.addClass(\"popup\");\n                });\n            return popupMenusCreated;\n        };\n\n        // =============================================================================\n        return PopupMenu;\n    }\n);\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/popup-menu.js","/** This class creates a ui table element. */\ndefine([\"utils/utils\"], function(Utils) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            this.options = Utils.merge(options, {\n                content: \"No content available.\",\n                onchange: null,\n                ondblclick: null,\n                onconfirm: null,\n                cls: \"ui-table\",\n                selectable: true,\n                cls_tr: \"\"\n            });\n            this.setElement(this._template());\n            this.$thead = this.$(\"thead\");\n            this.$tbody = this.$(\"tbody\");\n            this.$tmessage = this.$(\"tmessage\");\n            this.row = this._row();\n            this.row_count = 0;\n        },\n\n        events: {\n            click: \"_onclick\",\n            dblclick: \"_ondblclick\"\n        },\n\n        /** Add cell to header row */\n        addHeader: function($el) {\n            this.row.append($(\"<th/>\").append($el));\n        },\n\n        /** Append header row to table */\n        appendHeader: function() {\n            this.$thead.append(this.row);\n            this.row = $(\"<tr/>\");\n        },\n\n        /** Add cell to row */\n        add: function($el, width, align) {\n            var wrapper = $(\"<td/>\");\n            if (width) {\n                wrapper.css(\"width\", width);\n            }\n            if (align) {\n                wrapper.css(\"text-align\", align);\n            }\n            this.row.append(wrapper.append($el));\n        },\n\n        /** Append row to table */\n        append: function(id, fade) {\n            this._commit(id, fade, false);\n        },\n\n        /** Prepend row to table */\n        prepend: function(id, fade) {\n            this._commit(id, fade, true);\n        },\n\n        /** Helper to get row element */\n        get: function(id) {\n            return this.$(\"#\" + id);\n        },\n\n        /** Delete row by id */\n        del: function(id) {\n            var item = this.$tbody.find(\"#\" + id);\n            if (item.length > 0) {\n                item.remove();\n                this.row_count--;\n                this._refresh();\n            }\n        },\n\n        /** Delete all rows */\n        delAll: function() {\n            this.$tbody.empty();\n            this.row_count = 0;\n            this._refresh();\n        },\n\n        /** Set a value i.e. selects/highlights a particular row by id */\n        value: function(new_value) {\n            if (this.options.selectable) {\n                this.before = this.$tbody.find(\".current\").attr(\"id\");\n                if (new_value !== undefined) {\n                    this.$tbody.find(\"tr\").removeClass(\"current\");\n                    if (new_value) {\n                        this.$tbody.find(\"#\" + new_value).addClass(\"current\");\n                    }\n                }\n                var after = this.$tbody.find(\".current\").attr(\"id\");\n                if (after === undefined) {\n                    return null;\n                } else {\n                    if (after != this.before && this.options.onchange) {\n                        this.options.onchange(new_value);\n                    }\n                    return after;\n                }\n            }\n        },\n\n        /** Return the number of rows */\n        size: function() {\n            return this.$tbody.find(\"tr\").length;\n        },\n\n        /** Helper to append rows */\n        _commit: function(id, fade, prepend) {\n            this.del(id);\n            this.row.attr(\"id\", id);\n            if (prepend) {\n                this.$tbody.prepend(this.row);\n            } else {\n                this.$tbody.append(this.row);\n            }\n            if (fade) {\n                this.row.hide();\n                this.row.fadeIn();\n            }\n            this.row = this._row();\n            this.row_count++;\n            this._refresh();\n        },\n\n        /** Helper to create new row */\n        _row: function() {\n            return $('<tr class=\"' + this.options.cls_tr + '\"></tr>');\n        },\n\n        /** Handles onclick events */\n        _onclick: function(e) {\n            var old_value = this.value();\n            var new_value = $(e.target)\n                .closest(\"tr\")\n                .attr(\"id\");\n            if (new_value != \"\") {\n                if (new_value && old_value != new_value) {\n                    if (this.options.onconfirm) {\n                        this.options.onconfirm(new_value);\n                    } else {\n                        this.value(new_value);\n                    }\n                }\n            }\n        },\n\n        /** Handles ondblclick events */\n        _ondblclick: function(e) {\n            var value = this.value();\n            if (value && this.options.ondblclick) {\n                this.options.ondblclick(value);\n            }\n        },\n\n        /** Refresh helper */\n        _refresh: function() {\n            if (this.row_count == 0) {\n                this.$tmessage.show();\n            } else {\n                this.$tmessage.hide();\n            }\n        },\n\n        /** Template */\n        _template: function() {\n            return (\n                \"<div>\" +\n                '<table class=\"' +\n                this.options.cls +\n                '\">' +\n                \"<thead/>\" +\n                \"<tbody/>\" +\n                \"</table>\" +\n                \"<tmessage>\" +\n                this.options.content +\n                \"</tmessage>\" +\n                \"<div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-table.js","/* This class maps the form dom to an api compatible javascript dictionary. */\nimport Utils from \"utils/utils\";\nvar Manager = Backbone.Model.extend({\n    initialize: function(app) {\n        this.app = app;\n    },\n\n    /** Creates a checksum. */\n    checksum: function() {\n        var sum = \"\";\n        var self = this;\n        this.app.section.$el.find(\".section-row\").each(function() {\n            var id = $(this).attr(\"id\");\n            var field = self.app.field_list[id];\n            if (field) {\n                sum +=\n                    id +\n                    \":\" +\n                    JSON.stringify(field.value && field.value()) +\n                    \":\" +\n                    field.collapsed +\n                    \";\";\n            }\n        });\n        return sum;\n    },\n\n    /** Convert dom into a dictionary of flat id/value pairs used e.g. on job submission. */\n    create: function() {\n        var self = this;\n\n        // get raw dictionary from dom\n        var dict = {};\n        this._iterate(this.app.section.$el, dict);\n\n        // add to result dictionary, label elements\n        var result_dict = {};\n        this.flat_dict = {};\n        function add(flat_id, input_id, input_value) {\n            self.flat_dict[flat_id] = input_id;\n            result_dict[flat_id] = input_value;\n            self.app.element_list[input_id] &&\n                self.app.element_list[input_id].$el.attr(\"tour_id\", flat_id);\n        }\n        // converter between raw dictionary and job dictionary\n        function convert(identifier, head) {\n            for (var index in head) {\n                var node = head[index];\n                if (node.input) {\n                    var input = node.input;\n                    var flat_id = identifier;\n                    if (identifier != \"\") {\n                        flat_id += \"|\";\n                    }\n                    flat_id += input.name;\n                    switch (input.type) {\n                        case \"repeat\":\n                            var section_label = \"section-\";\n                            var block_indices = [];\n                            var block_prefix = null;\n                            for (var block_label in node) {\n                                var pos = block_label.indexOf(section_label);\n                                if (pos != -1) {\n                                    pos += section_label.length;\n                                    block_indices.push(\n                                        parseInt(block_label.substr(pos))\n                                    );\n                                    if (!block_prefix) {\n                                        block_prefix = block_label.substr(\n                                            0,\n                                            pos\n                                        );\n                                    }\n                                }\n                            }\n                            block_indices.sort(function(a, b) {\n                                return a - b;\n                            });\n                            var index = 0;\n                            for (var i in block_indices) {\n                                convert(\n                                    flat_id + \"_\" + index++,\n                                    node[block_prefix + block_indices[i]]\n                                );\n                            }\n                            break;\n                        case \"conditional\":\n                            var value = self.app.field_list[input.id].value();\n                            add(\n                                flat_id + \"|\" + input.test_param.name,\n                                input.id,\n                                value\n                            );\n                            var selectedCase = matchCase(input, value);\n                            if (selectedCase != -1) {\n                                convert(\n                                    flat_id,\n                                    head[input.id + \"-section-\" + selectedCase]\n                                );\n                            }\n                            break;\n                        case \"section\":\n                            convert((!input.flat && flat_id) || \"\", node);\n                            break;\n                        default:\n                            var field = self.app.field_list[input.id];\n                            if (field && field.value) {\n                                var value = field.value();\n                                if (\n                                    input.ignore === undefined ||\n                                    input.ignore != value\n                                ) {\n                                    if (\n                                        field.collapsed &&\n                                        input.collapsible_value\n                                    ) {\n                                        value = input.collapsible_value;\n                                    }\n                                    add(flat_id, input.id, value);\n                                    if (input.payload) {\n                                        for (var p_id in input.payload) {\n                                            add(\n                                                p_id,\n                                                input.id,\n                                                input.payload[p_id]\n                                            );\n                                        }\n                                    }\n                                }\n                            }\n                    }\n                }\n            }\n        }\n        convert(\"\", dict);\n        return result_dict;\n    },\n\n    /** Matches flat ids to corresponding input element\n         * @param{string} flat_id - Flat input id to be looked up.\n         */\n    match: function(flat_id) {\n        return this.flat_dict && this.flat_dict[flat_id];\n    },\n\n    /** Match conditional values to selected cases\n        */\n    matchCase: function(input, value) {\n        return matchCase(input, value);\n    },\n\n    /** Matches a new tool model to the current input elements e.g. used to update dynamic options\n        */\n    matchModel: function(model, callback) {\n        var self = this;\n        visitInputs(model.inputs, function(input, name) {\n            self.flat_dict[name] && callback(input, self.flat_dict[name]);\n        });\n    },\n\n    /** Matches identifier from api response to input elements e.g. used to display validation errors\n        */\n    matchResponse: function(response) {\n        var result = {};\n        var self = this;\n        function search(id, head) {\n            if (typeof head === \"string\") {\n                var input_id = self.flat_dict[id];\n                input_id && (result[input_id] = head);\n            } else {\n                for (var i in head) {\n                    var new_id = i;\n                    if (id !== \"\") {\n                        var separator = \"|\";\n                        if (head instanceof Array) {\n                            separator = \"_\";\n                        }\n                        new_id = id + separator + new_id;\n                    }\n                    search(new_id, head[i]);\n                }\n            }\n        }\n        search(\"\", response);\n        return result;\n    },\n\n    /** Map dom tree to dictionary tree with input elements.\n        */\n    _iterate: function(parent, dict) {\n        var self = this;\n        var children = $(parent).children();\n        children.each(function() {\n            var child = this;\n            var id = $(child).attr(\"id\");\n            if ($(child).hasClass(\"section-row\")) {\n                var input = self.app.input_list[id];\n                dict[id] = (input && { input: input }) || {};\n                self._iterate(child, dict[id]);\n            } else {\n                self._iterate(child, dict);\n            }\n        });\n    }\n});\n\n/** Match conditional values to selected cases\n     * @param{dict}   input     - Definition of conditional input parameter\n     * @param{dict}   value     - Current value\n     */\nvar matchCase = function(input, value) {\n    if (input.test_param.type == \"boolean\") {\n        if (value == \"true\") {\n            value = input.test_param.truevalue || \"true\";\n        } else {\n            value = input.test_param.falsevalue || \"false\";\n        }\n    }\n    for (var i in input.cases) {\n        if (input.cases[i].value == value) {\n            return i;\n        }\n    }\n    return -1;\n};\n\n/** Visits tool inputs\n     * @param{dict}   inputs    - Nested dictionary of input elements\n     * @param{dict}   callback  - Called with the mapped dictionary object and corresponding model node\n     */\nvar visitInputs = function(inputs, callback, prefix, context) {\n    context = $.extend(true, {}, context);\n    _.each(inputs, function(input) {\n        if (input && input.type && input.name) {\n            context[input.name] = input;\n        }\n    });\n    for (var key in inputs) {\n        var node = inputs[key];\n        node.name = node.name || key;\n        var name = prefix ? prefix + \"|\" + node.name : node.name;\n        switch (node.type) {\n            case \"repeat\":\n                _.each(node.cache, function(cache, j) {\n                    visitInputs(cache, callback, name + \"_\" + j, context);\n                });\n                break;\n            case \"conditional\":\n                if (node.test_param) {\n                    callback(\n                        node.test_param,\n                        name + \"|\" + node.test_param.name,\n                        context\n                    );\n                    var selectedCase = matchCase(node, node.test_param.value);\n                    if (selectedCase != -1) {\n                        visitInputs(\n                            node.cases[selectedCase].inputs,\n                            callback,\n                            name,\n                            context\n                        );\n                    } else {\n                        Galaxy.emit.debug(\n                            \"form-data::visitInputs() - Invalid case for \" +\n                                name +\n                                \".\"\n                        );\n                    }\n                } else {\n                    Galaxy.emit.debug(\n                        \"form-data::visitInputs() - Conditional test parameter missing for \" +\n                            name +\n                            \".\"\n                    );\n                }\n                break;\n            case \"section\":\n                visitInputs(node.inputs, callback, name, context);\n                break;\n            default:\n                callback(node, name, context);\n        }\n    }\n};\n\nexport default {\n    Manager: Manager,\n    visitInputs: visitInputs\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-data.js","// dependencies\n\n// grid model\nexport default Backbone.Model.extend({\n    defaults: {\n        url_base: \"\",\n        async: false,\n        async_ops: [],\n        categorical_filters: [],\n        filters: {},\n        sort_key: null,\n        show_item_checkboxes: false,\n        advanced_search: false,\n        cur_page: 1,\n        num_pages: 1,\n        operation: undefined,\n        item_ids: undefined\n    },\n\n    /**\n     * Return true if operation can be done asynchronously.\n     */\n    can_async_op: function(op) {\n        return _.indexOf(this.attributes.async_ops, op) !== -1;\n    },\n\n    /**\n     * Add filtering criterion.\n     */\n    add_filter: function(key, value, append) {\n        // Update URL arg with new condition.\n        if (append) {\n            // Update or append value.\n            var cur_val = this.attributes.filters[key],\n                new_val;\n            if (cur_val === null || cur_val === undefined) {\n                new_val = value;\n            } else if (typeof cur_val == \"string\") {\n                if (cur_val == \"All\" || cur_val == value) {\n                    new_val = value;\n                } else {\n                    // Replace string with array.\n                    var values = [];\n                    values[0] = cur_val;\n                    values[1] = value;\n                    new_val = values;\n                }\n            } else {\n                // Current value is an array.\n                new_val = cur_val;\n                if (new_val.indexOf(value) === -1) {\n                    new_val.push(value);\n                }\n            }\n            this.attributes.filters[key] = new_val;\n        } else {\n            // Replace value.\n            this.attributes.filters[key] = value;\n        }\n    },\n\n    /**\n     * Remove filtering criterion.\n     */\n    remove_filter: function(key, condition) {\n        var cur_val = this.attributes.filters[key];\n        if (cur_val === null || cur_val === undefined) {\n            return false;\n        }\n\n        if (typeof cur_val === \"string\") {\n            // overwrite/remove condition.\n            this.attributes.filters[key] = \"\";\n        } else {\n            // filter contains an array of conditions.\n            var condition_index = _.indexOf(cur_val, condition);\n            if (condition_index !== -1) {\n                cur_val[condition_index] = \"\";\n            }\n        }\n    },\n\n    /**\n     * Returns URL data for obtaining a new grid.\n     */\n    get_url_data: function() {\n        var url_data = {\n            async: this.attributes.async,\n            sort: this.attributes.sort_key,\n            page: this.attributes.cur_page,\n            show_item_checkboxes: this.attributes.show_item_checkboxes,\n            advanced_search: this.attributes.advanced_search\n        };\n\n        // Add operation, item_ids only if they have values.\n        if (this.attributes.operation) {\n            url_data.operation = this.attributes.operation;\n        }\n        if (this.attributes.item_ids) {\n            url_data.id = this.attributes.item_ids;\n        }\n\n        // Add filter arguments to data, placing \"f-\" in front of all arguments.\n        var self = this;\n        _.each(_.pairs(self.attributes.filters), function(k) {\n            url_data[\"f-\" + k[0]] = k[1];\n        });\n        return url_data;\n    },\n\n    // Return URL for obtaining a new grid\n    get_url: function(args) {\n        return (\n            this.get(\"url_base\") +\n            \"?\" +\n            $.param(this.get_url_data()) +\n            \"&\" +\n            $.param(args)\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/grid/grid-model.js","// dependencies\nimport Utils from \"utils/utils\";\n// grid view templates\nexport default {\n    // template\n    grid: function(options) {\n        var tmpl = \"\";\n        if (options.embedded) {\n            tmpl = this.grid_header(options) + this.grid_table(options);\n        } else {\n            tmpl =\n                '<div class=\"loading-elt-overlay\"></div>' +\n                \"<table>\" +\n                \"<tr>\" +\n                '<td width=\"75%\">' +\n                this.grid_header(options) +\n                \"</td>\" +\n                \"<td></td>\" +\n                \"<td></td>\" +\n                \"</tr>\" +\n                \"<tr>\" +\n                '<td width=\"100%\" id=\"grid-message\" valign=\"top\"></td>' +\n                \"<td></td>\" +\n                \"<td></td>\" +\n                \"</tr>\" +\n                \"</table>\" +\n                this.grid_table(options);\n        }\n\n        // add info text\n        if (options.info_text) {\n            tmpl +=\n                '<br><div class=\"toolParamHelp\" style=\"clear: both;\">' +\n                options.info_text +\n                \"</div>\";\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    grid_table: function(options) {\n        return (\n            '<form method=\"post\" onsubmit=\"return false;\">' +\n            '<table id=\"grid-table\" class=\"grid\">' +\n            '<thead id=\"grid-table-header\"></thead>' +\n            '<tbody id=\"grid-table-body\"></tbody>' +\n            '<tfoot id=\"grid-table-footer\"></tfoot>' +\n            \"</table>\" +\n            \"</form>\"\n        );\n    },\n\n    // template\n    grid_header: function(options) {\n        var tmpl = '<div class=\"grid-header\">';\n        if (!options.embedded) {\n            tmpl += \"<h2>\" + options.title + \"</h2>\";\n        }\n        if (options.global_actions) {\n            tmpl += '<ul class=\"manage-table-actions\">';\n            var show_popup = options.global_actions.length >= 3;\n            if (show_popup) {\n                tmpl +=\n                    '<li><a class=\"action-button\" id=\"popup-global-actions\" class=\"menubutton\">Actions</a></li>' +\n                    '<div popupmenu=\"popup-global-actions\">';\n            }\n            for (var i in options.global_actions) {\n                var action = options.global_actions[i];\n                tmpl +=\n                    \"<li>\" +\n                    '<a class=\"action-button use-target\" target=\"' +\n                    action.target +\n                    '\" href=\"' +\n                    action.url_args +\n                    '\" onclick=\"return false;\" >' +\n                    action.label +\n                    \"</a>\" +\n                    \"</li>\";\n            }\n            if (show_popup) {\n                tmpl += \"</div>\";\n            }\n            tmpl += \"</ul>\";\n        }\n        if (options.insert) {\n            tmpl += options.insert;\n        }\n\n        // add grid filters\n        tmpl += this.grid_filters(options);\n        tmpl += \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    header: function(options) {\n        // start\n        var tmpl = \"<tr>\";\n\n        // add checkbox\n        if (options.show_item_checkboxes) {\n            tmpl += \"<th>\";\n            if (options.items.length > 0) {\n                tmpl +=\n                    '<input type=\"checkbox\" id=\"check_all\" name=select_all_checkbox value=\"true\">' +\n                    '<input type=\"hidden\" name=select_all_checkbox value=\"true\">';\n            }\n            tmpl += \"</th>\";\n        }\n\n        // create header elements\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.visible) {\n                tmpl += '<th id=\"' + column.key + '-header\">';\n                if (column.href) {\n                    tmpl +=\n                        '<a href=\"' +\n                        column.href +\n                        '\" class=\"sort-link\" sort_key=\"' +\n                        column.key +\n                        '\">' +\n                        column.label +\n                        \"</a>\";\n                } else {\n                    tmpl += column.label;\n                }\n                tmpl +=\n                    '<span class=\"sort-arrow\">' +\n                    column.extra +\n                    \"</span>\" +\n                    \"</th>\";\n            }\n        }\n\n        // finalize\n        tmpl += \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    body: function(options) {\n        // initialize\n        var tmpl = \"\";\n        var num_rows_rendered = 0;\n        var items_length = options.items.length;\n\n        // empty grid?\n        if (items_length == 0) {\n            // No results.\n            tmpl += '<tr><td colspan=\"100\"><em>No Items</em></td></tr>';\n            num_rows_rendered = 1;\n        }\n\n        // create rows\n        for (var i in options.items) {\n            // encode ids\n            var item = options.items[i];\n            var encoded_id = item.encode_id;\n            var popupmenu_id = \"grid-\" + i + \"-popup\";\n\n            // Tag current\n            tmpl += \"<tr \";\n            if (options.current_item_id == item.id) {\n                tmpl += 'class=\"current\"';\n            }\n            tmpl += \">\";\n\n            // Item selection column\n            if (options.show_item_checkboxes) {\n                tmpl +=\n                    '<td style=\"width: 1.5em;\">' +\n                    '<input type=\"checkbox\" name=\"id\" value=\"' +\n                    encoded_id +\n                    '\" id=\"' +\n                    encoded_id +\n                    '\" class=\"grid-row-select-checkbox\" />' +\n                    \"</td>\";\n            }\n\n            // Data columns\n            for (var j in options.columns) {\n                var column = options.columns[j];\n                if (column.visible) {\n                    // Nowrap\n                    var nowrap = \"\";\n                    if (column.nowrap) {\n                        nowrap = 'style=\"white-space:nowrap;\"';\n                    }\n\n                    // get column settings\n                    var column_settings = item.column_config[column.label];\n\n                    // load attributes\n                    var link = column_settings.link;\n                    var value = column_settings.value;\n                    var target = column_settings.target;\n\n                    // unescape value\n                    if (jQuery.type(value) === \"string\") {\n                        value = value.replace(/\\/\\//g, \"/\");\n                    }\n\n                    // Attach popup menu?\n                    var id = \"\";\n                    var cls = \"\";\n                    if (column.attach_popup) {\n                        id = \"grid-\" + i + \"-popup\";\n                        cls = \"menubutton\";\n                        if (link != \"\") {\n                            cls += \" split\";\n                        }\n                        cls += \" popup\";\n                    }\n\n                    // Check for row wrapping\n                    tmpl += \"<td \" + nowrap + \">\";\n\n                    // Link\n                    if (link) {\n                        if (options.operations.length != 0) {\n                            tmpl +=\n                                '<div id=\"' +\n                                id +\n                                '\" class=\"' +\n                                cls +\n                                '\" style=\"float: left;\">';\n                        }\n                        tmpl +=\n                            '<a class=\"menubutton-label use-target\" target=\"' +\n                            target +\n                            '\" href=\"' +\n                            link +\n                            '\" onclick=\"return false;\">' +\n                            value +\n                            \"</a>\";\n                        if (options.operations.length != 0) {\n                            tmpl += \"</div>\";\n                        }\n                    } else {\n                        tmpl +=\n                            '<div id=\"' +\n                            id +\n                            '\" class=\"' +\n                            cls +\n                            '\"><label id=\"' +\n                            column.label_id_prefix +\n                            encoded_id +\n                            '\" for=\"' +\n                            encoded_id +\n                            '\">' +\n                            (value || \"\") +\n                            \"</label></div>\";\n                    }\n                    tmpl += \"</td>\";\n                }\n            }\n            tmpl += \"</tr>\";\n            num_rows_rendered++;\n        }\n        return tmpl;\n    },\n\n    // template\n    footer: function(options) {\n        // create template string\n        var tmpl = \"\";\n\n        // paging\n        if (options.use_paging && options.num_pages > 1) {\n            // get configuration\n            var num_page_links = options.num_page_links;\n            var cur_page_num = options.cur_page_num;\n            var num_pages = options.num_pages;\n\n            // First pass on min page.\n            var page_link_range = num_page_links / 2;\n            var min_page = cur_page_num - page_link_range;\n            var min_offset = 0;\n            if (min_page <= 0) {\n                // Min page is too low.\n                min_page = 1;\n                min_offset = page_link_range - (cur_page_num - min_page);\n            }\n\n            // Set max page.\n            var max_range = page_link_range + min_offset;\n            var max_page = cur_page_num + max_range;\n            var max_offset;\n            if (max_page <= num_pages) {\n                // Max page is fine.\n                max_offset = 0;\n            } else {\n                // Max page is too high.\n                max_page = num_pages;\n                // +1 to account for the +1 in the loop below.\n                max_offset = max_range - (max_page + 1 - cur_page_num);\n            }\n\n            // Second and final pass on min page to add any unused\n            // offset from max to min.\n            if (max_offset != 0) {\n                min_page -= max_offset;\n                if (min_page < 1) {\n                    min_page = 1;\n                }\n            }\n\n            // template header\n            tmpl += '<tr id=\"page-links-row\">';\n            if (options.show_item_checkboxes) {\n                tmpl += \"<td></td>\";\n            }\n            tmpl +=\n                '<td colspan=\"100\">' +\n                '<span id=\"page-link-container\">' +\n                \"Page:\";\n\n            if (min_page > 1) {\n                tmpl +=\n                    '<span class=\"page-link\" id=\"page-link-1\"><a href=\"javascript:void(0);\" page_num=\"1\" onclick=\"return false;\">1</a></span> ...';\n            }\n\n            // create page urls\n            for (\n                var page_index = min_page;\n                page_index < max_page + 1;\n                page_index++\n            ) {\n                if (page_index == options.cur_page_num) {\n                    tmpl +=\n                        '<span class=\"page-link inactive-link\" id=\"page-link-' +\n                        page_index +\n                        '\">' +\n                        page_index +\n                        \"</span>\";\n                } else {\n                    tmpl +=\n                        '<span class=\"page-link\" id=\"page-link-' +\n                        page_index +\n                        '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' +\n                        page_index +\n                        '\">' +\n                        page_index +\n                        \"</a></span>\";\n                }\n            }\n\n            // show last page\n            if (max_page < num_pages) {\n                tmpl +=\n                    \"...\" +\n                    '<span class=\"page-link\" id=\"page-link-' +\n                    num_pages +\n                    '\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"' +\n                    num_pages +\n                    '\">' +\n                    num_pages +\n                    \"</a></span>\";\n            }\n            tmpl += \"</span>\";\n\n            // Show all link\n            tmpl +=\n                '<span class=\"page-link\" id=\"show-all-link-span\"> | <a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"all\">Show All</a></span>' +\n                \"</td>\" +\n                \"</tr>\";\n        }\n\n        // Grid operations for multiple items.\n        if (options.show_item_checkboxes) {\n            // start template\n            tmpl +=\n                \"<tr>\" +\n                '<input type=\"hidden\" id=\"operation\" name=\"operation\" value=\"\">' +\n                \"<td></td>\" +\n                '<td colspan=\"100\">' +\n                'For <span class=\"grid-selected-count\"></span> selected items: ';\n\n            // configure buttons for operations\n            for (var i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.allow_multiple) {\n                    tmpl +=\n                        '<input type=\"button\" value=\"' +\n                        operation.label +\n                        '\" class=\"operation-button action-button\">&nbsp;';\n                }\n            }\n\n            // finalize template\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // count global operations\n        var found_global = false;\n        for (i in options.operations) {\n            if (options.operations[i].global_operation) {\n                found_global = true;\n                break;\n            }\n        }\n\n        // add global operations\n        if (found_global) {\n            tmpl += \"<tr>\" + '<td colspan=\"100\">';\n            for (i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.global_operation) {\n                    tmpl +=\n                        '<a class=\"action-button\" href=\"' +\n                        operation.global_operation +\n                        '\">' +\n                        operation.label +\n                        \"</a>\";\n                }\n            }\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // add legend\n        if (options.legend) {\n            tmpl +=\n                \"<tr>\" +\n                '<td colspan=\"100\">' +\n                options.legend +\n                \"</td>\" +\n                \"</tr>\";\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    message: function(options) {\n        var status = options.status == \"success\" ? \"done\" : options.status;\n        return (\n            \"<p>\" +\n            '<div class=\"' +\n            status +\n            'message transient-message\">' +\n            _.escape(options.message) +\n            \"</div>\" +\n            '<div style=\"clear: both\"></div>' +\n            \"</p>\"\n        );\n    },\n\n    // template\n    grid_filters: function(options) {\n        // get filters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n\n        // show advanced search if flag set or if there are filters for advanced search fields\n        var advanced_search_display = \"none\";\n        if (options.advanced_search) {\n            advanced_search_display = \"block\";\n        }\n\n        // identify columns with advanced filtering\n        var show_advanced_search_link = false;\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                var column_key = column.key;\n                var f_key = filters[column_key];\n                var d_key = default_filter_dict[column_key];\n                if (f_key && d_key && f_key != d_key) {\n                    advanced_search_display = \"block\";\n                }\n                show_advanced_search_link = true;\n            }\n        }\n\n        // hide standard search if advanced is shown\n        var standard_search_display = \"block\";\n        if (advanced_search_display == \"block\") {\n            standard_search_display = \"none\";\n        }\n\n        //\n        // standard search\n        //\n        var tmpl =\n            '<div id=\"standard-search\" style=\"display: ' +\n            standard_search_display +\n            ';\">' +\n            \"<table>\" +\n            \"<tr>\" +\n            '<td style=\"padding: 0;\">' +\n            \"<table>\";\n\n        // add standard filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"standard\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize standard search\n        tmpl += \"</table>\" + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\";\n\n        // show advanced search link in standard display\n        if (show_advanced_search_link) {\n            tmpl +=\n                '<a href=\"\" class=\"advanced-search-toggle\">Advanced Search</a>';\n        }\n\n        // finalize standard search display\n        tmpl += \"</td>\" + \"</tr>\" + \"</table>\" + \"</div>\";\n\n        //\n        // advanced search\n        //\n        tmpl +=\n            '<div id=\"advanced-search\" style=\"display: ' +\n            advanced_search_display +\n            '; margin-top: 5px; border: 1px solid #ccc;\">' +\n            \"<table>\" +\n            \"<tr>\" +\n            '<td style=\"text-align: left\" colspan=\"100\">' +\n            '<a href=\"\" class=\"advanced-search-toggle\">Close Advanced Search</a>' +\n            \"</td>\" +\n            \"</tr>\";\n\n        // add advanced filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize advanced search template\n        tmpl += \"</table>\" + \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    grid_column_filter: function(options, column) {\n        // collect parameters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n        var column_label = column.label;\n        var column_key = column.key;\n        if (column.filterable == \"advanced\") {\n            column_label = column_label.toLowerCase();\n        }\n\n        // start\n        var tmpl = \"<tr>\";\n\n        if (column.filterable == \"advanced\") {\n            tmpl +=\n                '<td align=\"left\" style=\"padding-left: 10px\">' +\n                column_label +\n                \":</td>\";\n        }\n        tmpl += '<td style=\"padding-bottom: 1px;\">';\n        if (column.is_text) {\n            tmpl +=\n                '<form class=\"text-filter-form\" column_key=\"' +\n                column_key +\n                '\" action=\"' +\n                options.url +\n                '\" method=\"get\" >';\n            // Carry forward filtering criteria with hidden inputs.\n            for (i in options.columns) {\n                var temp_column = options.columns[i];\n                var filter_value = filters[temp_column.key];\n                if (filter_value) {\n                    if (filter_value != \"All\") {\n                        if (temp_column.is_text) {\n                            filter_value = JSON.stringify(filter_value);\n                        }\n                        tmpl +=\n                            '<input type=\"hidden\" id=\"' +\n                            temp_column.key +\n                            '\" name=\"f-' +\n                            temp_column.key +\n                            '\" value=\"' +\n                            filter_value +\n                            '\"/>';\n                    }\n                }\n            }\n            // Print current filtering criteria and links to delete.\n            tmpl += '<span id=\"' + column_key + '-filtering-criteria\">';\n\n            // add filters\n            var column_filter = filters[column_key];\n            if (column_filter) {\n                // identify type\n                var type = jQuery.type(column_filter);\n\n                // single filter value\n                if (type == \"string\") {\n                    if (column_filter != \"All\") {\n                        // append template\n                        tmpl += this.filter_element(column_key, column_filter);\n                    }\n                }\n\n                // multiple filter values\n                if (type == \"array\") {\n                    for (var i in column_filter) {\n                        // get filter\n                        var filter = column_filter[i];\n\n                        // copy filters and remove entry\n                        var params = column_filter;\n                        params = params.slice(i);\n\n                        // append template\n                        tmpl += this.filter_element(column_key, filter);\n                    }\n                }\n            }\n\n            // close span\n            tmpl += \"</span>\";\n\n            // Set value, size of search input field. Minimum size is 20 characters.\n            var value = \"\";\n            if (column.filterable == \"standard\") {\n                value = column.label.toLowerCase();\n                var size = value.length;\n                if (size < 20) {\n                    size = 20;\n                }\n                // +4 to account for space after placeholder\n                size = size + 4;\n            }\n\n            // print input field for column\n            tmpl +=\n                '<span class=\"search-box\">' +\n                '<input class=\"search-box-input\" id=\"input-' +\n                column_key +\n                '-filter\" name=\"f-' +\n                column_key +\n                '\" type=\"text\" placeholder=\"' +\n                value +\n                '\" size=\"' +\n                size +\n                '\"/>' +\n                '<button type=\"submit\" style=\"background: transparent; border: none; padding: 4px; margin: 0px;\">' +\n                '<i class=\"fa fa-search\"></i>' +\n                \"</button>\" +\n                \"</span>\" +\n                \"</form>\";\n        } else {\n            // filter criteria\n            tmpl += '<span id=\"' + column_key + '-filtering-criteria\">';\n\n            // add category filters\n            var seperator = false;\n            for (var cf_label in options.categorical_filters[column_key]) {\n                // get category filter\n                var cf = options.categorical_filters[column_key][cf_label];\n\n                // each filter will have only a single argument, so get that single argument\n                var cf_key = \"\";\n                var cf_arg = \"\";\n                for (var key in cf) {\n                    cf_key = key;\n                    cf_arg = cf[key];\n                }\n\n                // add seperator\n                if (seperator) {\n                    tmpl += \" | \";\n                }\n                seperator = true;\n\n                // add category\n                var filter = filters[column_key];\n                if (filter && cf[column_key] && filter == cf_arg) {\n                    tmpl +=\n                        '<span class=\"categorical-filter ' +\n                        column_key +\n                        '-filter current-filter\">' +\n                        cf_label +\n                        \"</span>\";\n                } else {\n                    tmpl +=\n                        '<span class=\"categorical-filter ' +\n                        column_key +\n                        '-filter\">' +\n                        '<a href=\"javascript:void(0);\" filter_key=\"' +\n                        cf_key +\n                        '\" filter_val=\"' +\n                        cf_arg +\n                        '\">' +\n                        cf_label +\n                        \"</a>\" +\n                        \"</span>\";\n                }\n            }\n            tmpl += \"</span>\";\n        }\n        tmpl += \"</td>\" + \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template for filter items\n    filter_element: function(filter_key, filter_value) {\n        filter_value = Utils.sanitize(filter_value);\n        return (\n            '<span class=\"text-filter-val\">' +\n            filter_value +\n            '<a href=\"javascript:void(0);\" filter_key=\"' +\n            filter_key +\n            '\" filter_val=\"' +\n            filter_value +\n            '\">' +\n            '<i class=\"fa fa-times\" style=\"padding-left: 5px; padding-bottom: 6px;\"/>' +\n            \"</a>\" +\n            \"</span>\"\n        );\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/grid/grid-template.js","define([\"utils/utils\"], function(Utils) {\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    min: null,\n                    max: null,\n                    step: null,\n                    precise: false,\n                    split: 10000,\n                    value: null,\n                    onchange: function() {}\n                }).set(options);\n\n            // create new element\n            this.setElement(this._template());\n            this.$el.attr(\"id\", this.model.id);\n            this.$text = this.$(\".ui-form-slider-text\");\n            this.$slider = this.$(\".ui-form-slider-element\");\n\n            // add text field event\n            var pressed = [];\n            this.$text\n                .on(\"change\", function() {\n                    self.value($(this).val());\n                })\n                .on(\"keyup\", function(e) {\n                    pressed[e.which] = false;\n                })\n                .on(\"keydown\", function(e) {\n                    var v = e.which;\n                    pressed[v] = true;\n                    if (\n                        self.model.get(\"is_workflow\") &&\n                        pressed[16] &&\n                        v == 52\n                    ) {\n                        self.value(\"$\");\n                        event.preventDefault();\n                    } else if (\n                        !(\n                            v == 8 ||\n                            v == 9 ||\n                            v == 13 ||\n                            v == 37 ||\n                            v == 39 ||\n                            (v >= 48 && v <= 57 && !pressed[16]) ||\n                            (v >= 96 && v <= 105) ||\n                            ((v == 190 || v == 110) &&\n                                $(this)\n                                    .val()\n                                    .indexOf(\".\") == -1 &&\n                                self.model.get(\"precise\")) ||\n                            ((v == 189 || v == 109) &&\n                                $(this)\n                                    .val()\n                                    .indexOf(\"-\") == -1) ||\n                            self._isParameter($(this).val()) ||\n                            pressed[91] ||\n                            pressed[17]\n                        )\n                    ) {\n                        event.preventDefault();\n                    }\n                });\n\n            // build slider, cannot be rebuild in render\n            var opts = this.model.attributes;\n            this.has_slider =\n                opts.max !== null && opts.min !== null && opts.max > opts.min;\n            var step = opts.step;\n            if (!step) {\n                if (opts.precise && this.has_slider) {\n                    step = (opts.max - opts.min) / opts.split;\n                } else {\n                    step = 1.0;\n                }\n            }\n            if (this.has_slider) {\n                this.$text.addClass(\"ui-form-slider-left\");\n                this.$slider\n                    .slider({ min: opts.min, max: opts.max, step: step })\n                    .on(\"slide\", function(event, ui) {\n                        self.value(ui.value);\n                    });\n            } else {\n                this.$slider.hide();\n            }\n\n            // add listeners\n            this.listenTo(this.model, \"change\", this.render, this);\n            this.render();\n        },\n\n        render: function() {\n            var value = this.model.get(\"value\");\n            this.has_slider && this.$slider.slider(\"value\", value);\n            value !== this.$text.val() && this.$text.val(value);\n        },\n\n        /** Set and return the current value */\n        value: function(new_val) {\n            var options = this.model.attributes;\n            if (new_val !== undefined) {\n                if (\n                    new_val !== null &&\n                    new_val !== \"\" &&\n                    !this._isParameter(new_val)\n                ) {\n                    isNaN(new_val) && (new_val = 0);\n                    !options.precise && (new_val = Math.round(new_val));\n                    options.max !== null &&\n                        (new_val = Math.min(new_val, options.max));\n                    options.min !== null &&\n                        (new_val = Math.max(new_val, options.min));\n                }\n                this.model.set(\"value\", new_val);\n                this.model.trigger(\"change\");\n                options.onchange(new_val);\n            }\n            return this.model.get(\"value\");\n        },\n\n        /** Return true if the field contains a workflow parameter i.e. $('name') */\n        _isParameter: function(value) {\n            return (\n                this.model.get(\"is_workflow\") &&\n                String(value).substring(0, 1) === \"$\"\n            );\n        },\n\n        /** Slider template */\n        _template: function() {\n            return (\n                '<div class=\"ui-form-slider\">' +\n                '<input class=\"ui-form-slider-text\" type=\"text\"/>' +\n                '<div class=\"ui-form-slider-element\"/>' +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-slider.js","/** This class creates/wraps a drill down element. */\ndefine([\"utils/utils\", \"mvc/ui/ui-options\"], function(Utils, Options) {\n    var View = Options.BaseIcons.extend({\n        initialize: function(options) {\n            options.type = options.display || \"checkbox\";\n            options.multiple = options.type == \"checkbox\";\n            Options.BaseIcons.prototype.initialize.call(this, options);\n        },\n\n        /** Set states for selected values */\n        _setValue: function(new_value) {\n            Options.BaseIcons.prototype._setValue.call(this, new_value);\n            if (\n                new_value !== undefined &&\n                new_value !== null &&\n                this.header_index\n            ) {\n                var self = this;\n                var values = $.isArray(new_value) ? new_value : [new_value];\n                _.each(values, function(v) {\n                    var list = self.header_index[v];\n                    _.each(list, function(element) {\n                        self._setState(element, true);\n                    });\n                });\n            }\n        },\n\n        /** Expand/collapse a sub group */\n        _setState: function(header_id, is_expanded) {\n            var $button = this.$(\".button-\" + header_id);\n            var $subgroup = this.$(\".subgroup-\" + header_id);\n            $button.data(\"is_expanded\", is_expanded);\n            if (is_expanded) {\n                $subgroup.show();\n                $button\n                    .removeClass(\"fa-plus-square\")\n                    .addClass(\"fa-minus-square\");\n            } else {\n                $subgroup.hide();\n                $button\n                    .removeClass(\"fa-minus-square\")\n                    .addClass(\"fa-plus-square\");\n            }\n        },\n\n        /** Template to create options tree */\n        _templateOptions: function() {\n            var self = this;\n            this.header_index = {};\n\n            // attach event handler\n            function attach($el, header_id) {\n                var $button = $el.find(\".button-\" + header_id);\n                $button.on(\"click\", function() {\n                    self._setState(header_id, !$button.data(\"is_expanded\"));\n                });\n            }\n\n            // recursive function which iterates through options\n            function iterate($tmpl, options, header) {\n                header = header || [];\n                for (var i in options) {\n                    var level = options[i];\n                    var has_options = level.options && level.options.length > 0;\n                    var new_header = header.slice(0);\n                    self.header_index[level.value] = new_header.slice(0);\n                    var $group = $(\"<div/>\");\n                    if (has_options) {\n                        var header_id = Utils.uid();\n                        var $button = $(\"<span/>\")\n                            .addClass(\"button-\" + header_id)\n                            .addClass(\"ui-drilldown-button fa fa-plus-square\");\n                        var $subgroup = $(\"<div/>\")\n                            .addClass(\"subgroup-\" + header_id)\n                            .addClass(\"ui-drilldown-subgroup\");\n                        $group.append(\n                            $(\"<div/>\")\n                                .append($button)\n                                .append(\n                                    self._templateOption({\n                                        label: level.name,\n                                        value: level.value\n                                    })\n                                )\n                        );\n                        new_header.push(header_id);\n                        iterate($subgroup, level.options, new_header);\n                        $group.append($subgroup);\n                        attach($group, header_id);\n                    } else {\n                        $group.append(\n                            self._templateOption({\n                                label: level.name,\n                                value: level.value\n                            })\n                        );\n                    }\n                    $tmpl.append($group);\n                }\n            }\n\n            // iterate through options and create dom\n            var $tmpl = $(\"<div/>\");\n            iterate($tmpl, this.model.get(\"data\"));\n            return $tmpl;\n        },\n\n        /** Template for drill down view */\n        _template: function() {\n            return $(\"<div/>\")\n                .addClass(\"ui-options-list drilldown-container\")\n                .attr(\"id\", this.model.id);\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-drilldown.js","/**\n    This class creates a form section and populates it with input elements. It also handles repeat blocks and conditionals by recursively creating new sub sections.\n*/\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Portlet from \"mvc/ui/ui-portlet\";\nimport Repeat from \"mvc/form/form-repeat\";\nimport InputElement from \"mvc/form/form-input\";\nimport Parameters from \"mvc/form/form-parameters\";\nvar View = Backbone.View.extend({\n    initialize: function(app, options) {\n        this.app = app;\n        this.inputs = options.inputs;\n        this.parameters = new Parameters();\n        this.setElement($(\"<div/>\"));\n        this.render();\n    },\n\n    /** Render section view */\n    render: function() {\n        var self = this;\n        this.$el.empty();\n        _.each(this.inputs, function(input) {\n            self.add(input);\n        });\n    },\n\n    /** Add a new input element */\n    add: function(input) {\n        var input_def = jQuery.extend(true, {}, input);\n        input_def.id = input.id = Utils.uid();\n        this.app.input_list[input_def.id] = input_def;\n        switch (input_def.type) {\n            case \"conditional\":\n                this._addConditional(input_def);\n                break;\n            case \"repeat\":\n                this._addRepeat(input_def);\n                break;\n            case \"section\":\n                this._addSection(input_def);\n                break;\n            default:\n                this._addRow(input_def);\n        }\n    },\n\n    /** Add a conditional block */\n    _addConditional: function(input_def) {\n        var self = this;\n        input_def.test_param.id = input_def.id;\n        this.app.model.get(\"sustain_conditionals\") &&\n            (input_def.test_param.disabled = true);\n        var field = this._addRow(input_def.test_param);\n\n        // set onchange event for test parameter\n        field.model &&\n            field.model.set(\"onchange\", function(value) {\n                var selectedCase = self.app.data.matchCase(input_def, value);\n                for (var i in input_def.cases) {\n                    var case_def = input_def.cases[i];\n                    var section_row = self.$(\n                        \"#\" + input_def.id + \"-section-\" + i\n                    );\n                    var nonhidden = false;\n                    for (var j in case_def.inputs) {\n                        if (!case_def.inputs[j].hidden) {\n                            nonhidden = true;\n                            break;\n                        }\n                    }\n                    if (i == selectedCase && nonhidden) {\n                        section_row.fadeIn(\"fast\");\n                    } else {\n                        section_row.hide();\n                    }\n                }\n                self.app.trigger(\"change\");\n            });\n\n        // add conditional sub sections\n        for (var i in input_def.cases) {\n            var sub_section = new View(this.app, {\n                inputs: input_def.cases[i].inputs\n            });\n            this._append(\n                sub_section.$el.addClass(\"ui-form-section\"),\n                input_def.id + \"-section-\" + i\n            );\n        }\n\n        // trigger refresh on conditional input field after all input elements have been created\n        field.trigger(\"change\");\n    },\n\n    /** Add a repeat block */\n    _addRepeat: function(input_def) {\n        var self = this;\n        var block_index = 0;\n\n        // create repeat block element\n        var repeat = new Repeat.View({\n            title: input_def.title || \"Repeat\",\n            min: input_def.min,\n            max: input_def.max,\n            onnew: function() {\n                create(input_def.inputs);\n                self.app.trigger(\"change\");\n            }\n        });\n\n        // helper function to create new repeat blocks\n        function create(inputs) {\n            var sub_section_id = input_def.id + \"-section-\" + block_index++;\n            var sub_section = new View(self.app, { inputs: inputs });\n            repeat.add({\n                id: sub_section_id,\n                $el: sub_section.$el,\n                ondel: function() {\n                    repeat.del(sub_section_id);\n                    self.app.trigger(\"change\");\n                }\n            });\n        }\n\n        //\n        // add parsed/minimum number of repeat blocks\n        //\n        var n_cache = _.size(input_def.cache);\n        for (\n            var i = 0;\n            i <\n            Math.max(\n                Math.max(n_cache, input_def.min || 0),\n                input_def.default || 0\n            );\n            i++\n        ) {\n            create(i < n_cache ? input_def.cache[i] : input_def.inputs);\n        }\n\n        // hide options\n        this.app.model.get(\"sustain_repeats\") && repeat.hideOptions();\n\n        // create input field wrapper\n        var input_element = new InputElement(this.app, {\n            label: input_def.title || input_def.name,\n            help: input_def.help,\n            field: repeat\n        });\n        this._append(input_element.$el, input_def.id);\n    },\n\n    /** Add a customized section */\n    _addSection: function(input_def) {\n        var portlet = new Portlet.View({\n            title: input_def.title || input_def.name,\n            cls: \"ui-portlet-section\",\n            collapsible: true,\n            collapsible_button: true,\n            collapsed: !input_def.expanded\n        });\n        portlet.append(new View(this.app, { inputs: input_def.inputs }).$el);\n        portlet.append(\n            $(\"<div/>\")\n                .addClass(\"ui-form-info\")\n                .html(input_def.help)\n        );\n        this.app.on(\"expand\", function(input_id) {\n            portlet.$(\"#\" + input_id).length > 0 && portlet.expand();\n        });\n        this._append(portlet.$el, input_def.id);\n    },\n\n    /** Add a single input field element */\n    _addRow: function(input_def) {\n        var self = this;\n        var id = input_def.id;\n        input_def.onchange =\n            input_def.onchange ||\n            function() {\n                self.app.trigger(\"change\", id);\n            };\n        var field = this.parameters.create(input_def);\n        this.app.field_list[id] = field;\n        var input_element = new InputElement(this.app, {\n            name: input_def.name,\n            label: input_def.hide_label\n                ? \"\"\n                : input_def.label || input_def.name,\n            value: input_def.value,\n            text_value: input_def.text_value,\n            collapsible_value: input_def.collapsible_value,\n            collapsible_preview: input_def.collapsible_preview,\n            help: input_def.help,\n            argument: input_def.argument,\n            disabled: input_def.disabled,\n            color: input_def.color,\n            style: input_def.style,\n            backdrop: input_def.backdrop,\n            hidden: input_def.hidden,\n            fixed: input_def.fixed,\n            field: field\n        });\n        this.app.element_list[id] = input_element;\n        this._append(input_element.$el, input_def.id);\n        return field;\n    },\n\n    /** Append a new element to the form i.e. input element, repeat block, conditionals etc. */\n    _append: function($el, id) {\n        this.$el.append($el.addClass(\"section-row\").attr(\"id\", id));\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-section.js","/** This class creates a ui component which enables the dynamic creation of portlets */\nimport Utils from \"utils/utils\";\nimport Portlet from \"mvc/ui/ui-portlet\";\nimport Ui from \"mvc/ui/ui-misc\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        this.list = {};\n        this.options = Utils.merge(options, {\n            title: \"Repeat\",\n            empty_text: \"Not available.\",\n            max: null,\n            min: null\n        });\n        this.button_new = new Ui.ButtonIcon({\n            icon: \"fa-plus\",\n            title: \"Insert \" + this.options.title,\n            tooltip: \"Add new \" + this.options.title + \" block\",\n            cls: \"ui-button-icon ui-clear-float form-repeat-add\",\n            onclick: function() {\n                options.onnew && options.onnew();\n            }\n        });\n        this.setElement(\n            $(\"<div/>\")\n                .append((this.$list = $(\"<div/>\")))\n                .append($(\"<div/>\").append(this.button_new.$el))\n        );\n    },\n\n    /** Number of repeat blocks */\n    size: function() {\n        return _.size(this.list);\n    },\n\n    /** Add new repeat block */\n    add: function(options) {\n        if (!options.id || this.list[options.id]) {\n            Galaxy.emit.debug(\n                \"form-repeat::add()\",\n                \"Duplicate or invalid repeat block id.\"\n            );\n            return;\n        }\n        var button_delete = new Ui.ButtonIcon({\n            icon: \"fa-trash-o\",\n            tooltip: \"Delete this repeat block\",\n            cls: \"ui-button-icon-plain form-repeat-delete\",\n            onclick: function() {\n                options.ondel && options.ondel();\n            }\n        });\n        var portlet = new Portlet.View({\n            id: options.id,\n            title: \"placeholder\",\n            cls: options.cls || \"ui-portlet-repeat\",\n            operations: { button_delete: button_delete }\n        });\n        portlet.append(options.$el);\n        portlet.$el.addClass(\"section-row\").hide();\n        this.list[options.id] = portlet;\n        this.$list.append(portlet.$el.fadeIn(\"fast\"));\n        this.options.max > 0 &&\n            this.size() >= this.options.max &&\n            this.button_new.disable();\n        this._refresh();\n    },\n\n    /** Delete repeat block */\n    del: function(id) {\n        if (!this.list[id]) {\n            Galaxy.emit.debug(\"form-repeat::del()\", \"Invalid repeat block id.\");\n            return;\n        }\n        this.$list.find(\"#\" + id).remove();\n        delete this.list[id];\n        this.button_new.enable();\n        this._refresh();\n    },\n\n    /** Remove all */\n    delAll: function() {\n        for (var id in this.list) {\n            this.del(id);\n        }\n    },\n\n    /** Hides add/del options */\n    hideOptions: function() {\n        this.button_new.$el.hide();\n        _.each(this.list, function(portlet) {\n            portlet.hideOperation(\"button_delete\");\n        });\n        _.isEmpty(this.list) &&\n            this.$el.append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-info\")\n                    .html(this.options.empty_text)\n            );\n    },\n\n    /** Refresh view */\n    _refresh: function() {\n        var index = 0;\n        for (var id in this.list) {\n            var portlet = this.list[id];\n            portlet.title(++index + \": \" + this.options.title);\n            portlet[\n                this.size() > this.options.min\n                    ? \"showOperation\"\n                    : \"hideOperation\"\n            ](\"button_delete\");\n        }\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-repeat.js","/**\n    This class creates a form input element wrapper\n*/\n\nexport default Backbone.View.extend({\n    initialize: function(app, options) {\n        this.app = app;\n        this.app_options = app.model ? app.model.attributes : {};\n        this.field = (options && options.field) || new Backbone.View();\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                text_enable: this.app_options.text_enable || \"Enable\",\n                text_disable: this.app_options.text_disable || \"Disable\",\n                cls_enable:\n                    this.app_options.cls_enable || \"fa fa-caret-square-o-down\",\n                cls_disable:\n                    this.app_options.cls_disable || \"fa fa-caret-square-o-up\",\n                always_refresh: this.app_options.always_refresh\n            }).set(options);\n\n        // set element and link components\n        this.setElement(this._template());\n        this.$field = this.$(\".ui-form-field\");\n        this.$info = this.$(\".ui-form-info\");\n        this.$preview = this.$(\".ui-form-preview\");\n        this.$collapsible = this.$(\".ui-form-collapsible\");\n        this.$collapsible_text = this.$(\".ui-form-collapsible-text\");\n        this.$collapsible_icon = this.$(\".ui-form-collapsible-icon\");\n        this.$title = this.$(\".ui-form-title\");\n        this.$title_text = this.$(\".ui-form-title-text\");\n        this.$error_text = this.$(\".ui-form-error-text\");\n        this.$error = this.$(\".ui-form-error\");\n        this.$backdrop = this.$(\".ui-form-backdrop\");\n\n        // add field element\n        this.$field.prepend(this.field.$el);\n\n        // decide wether to expand or collapse fields\n        var collapsible_value = this.model.get(\"collapsible_value\");\n        this.field.collapsed =\n            collapsible_value !== undefined &&\n            JSON.stringify(this.model.get(\"value\")) ==\n                JSON.stringify(collapsible_value);\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n\n        // add click handler\n        var self = this;\n        this.$collapsible.on(\"click\", function() {\n            self.field.collapsed = !self.field.collapsed;\n            app.trigger && app.trigger(\"change\");\n            self.render();\n        });\n\n        // hide error on value change\n        if (this.field.model && !this.model.get(\"always_refresh\")) {\n            this.listenTo(this.field.model, \"change:value\", function() {\n                self.reset();\n            });\n        }\n    },\n\n    /** Set backdrop for input element */\n    backdrop: function() {\n        this.model.set(\"backdrop\", true);\n    },\n\n    /** Set error text */\n    error: function(text) {\n        this.model.set(\"error_text\", text);\n    },\n\n    /** Reset this view */\n    reset: function() {\n        !this.model.get(\"fixed\") && this.model.set(\"error_text\", null);\n    },\n\n    render: function() {\n        // render help\n        $(\".tooltip\").hide();\n        var help_text = this.model.get(\"help\", \"\");\n        var help_argument = this.model.get(\"argument\");\n        if (\n            help_argument &&\n            help_text.indexOf(\"(\" + help_argument + \")\") == -1\n        ) {\n            help_text += \" (\" + help_argument + \")\";\n        }\n        this.$info.html(help_text);\n        // render visibility\n        this.$el[this.model.get(\"hidden\") ? \"hide\" : \"show\"]();\n        // render preview view for collapsed fields\n        this.$preview\n            [\n                (this.field.collapsed &&\n                    this.model.get(\"collapsible_preview\")) ||\n                this.model.get(\"disabled\")\n                    ? \"show\"\n                    : \"hide\"\n            ]()\n            .html(_.escape(this.model.get(\"text_value\")));\n        // render error messages\n        var error_text = this.model.get(\"error_text\");\n        this.$error[error_text ? \"show\" : \"hide\"]();\n        this.$el[error_text ? \"addClass\" : \"removeClass\"](\"ui-error\");\n        this.$error_text.html(error_text);\n        // render backdrop\n        this.$backdrop[this.model.get(\"backdrop\") ? \"show\" : \"hide\"]();\n        // render input field\n        this.field.collapsed || this.model.get(\"disabled\")\n            ? this.$field.hide()\n            : this.$field.show();\n        // render input field color and style\n        this.field.model &&\n            this.field.model.set({\n                color: this.model.get(\"color\"),\n                style: this.model.get(\"style\")\n            });\n        // render collapsible options\n        if (\n            !this.model.get(\"disabled\") &&\n            this.model.get(\"collapsible_value\") !== undefined\n        ) {\n            var collapsible_state = this.field.collapsed ? \"enable\" : \"disable\";\n            this.$title_text.hide();\n            this.$collapsible.show();\n            this.$collapsible_text.text(this.model.get(\"label\"));\n            this.$collapsible_icon\n                .removeClass()\n                .addClass(\"icon\")\n                .addClass(this.model.get(\"cls_\" + collapsible_state))\n                .attr(\n                    \"data-original-title\",\n                    this.model.get(\"text_\" + collapsible_state)\n                )\n                .tooltip({ placement: \"bottom\" });\n        } else {\n            this.$title_text.show().text(this.model.get(\"label\"));\n            this.$collapsible.hide();\n        }\n    },\n\n    _template: function() {\n        return $(\"<div/>\")\n            .addClass(\"ui-form-element\")\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-error ui-error\")\n                    .append($(\"<span/>\").addClass(\"fa fa-arrow-down\"))\n                    .append($(\"<span/>\").addClass(\"ui-form-error-text\"))\n            )\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-title\")\n                    .append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-form-collapsible\")\n                            .append(\n                                $(\"<i/>\").addClass(\"ui-form-collapsible-icon\")\n                            )\n                            .append(\n                                $(\"<span/>\").addClass(\n                                    \"ui-form-collapsible-text\"\n                                )\n                            )\n                    )\n                    .append($(\"<span/>\").addClass(\"ui-form-title-text\"))\n            )\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-field\")\n                    .append($(\"<span/>\").addClass(\"ui-form-info\"))\n                    .append($(\"<div/>\").addClass(\"ui-form-backdrop\"))\n            )\n            .append($(\"<div/>\").addClass(\"ui-form-preview\"));\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-input.js","/**\n    This class creates input elements. New input parameter types should be added to the types dictionary.\n*/\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport SelectContent from \"mvc/ui/ui-select-content\";\nimport SelectLibrary from \"mvc/ui/ui-select-library\";\nimport SelectFtp from \"mvc/ui/ui-select-ftp\";\nimport SelectGenomeSpace from \"mvc/ui/ui-select-genomespace\";\nimport ColorPicker from \"mvc/ui/ui-color-picker\";\n// create form view\nexport default Backbone.Model.extend({\n    /** Available parameter types */\n    types: {\n        text: \"_fieldText\",\n        password: \"_fieldText\",\n        select: \"_fieldSelect\",\n        data_column: \"_fieldSelect\",\n        genomebuild: \"_fieldSelect\",\n        data: \"_fieldData\",\n        data_collection: \"_fieldData\",\n        integer: \"_fieldSlider\",\n        float: \"_fieldSlider\",\n        boolean: \"_fieldBoolean\",\n        drill_down: \"_fieldDrilldown\",\n        color: \"_fieldColor\",\n        hidden: \"_fieldHidden\",\n        hidden_data: \"_fieldHidden\",\n        baseurl: \"_fieldHidden\",\n        library_data: \"_fieldLibrary\",\n        ftpfile: \"_fieldFtp\",\n        upload: \"_fieldUpload\",\n        genomespacefile: \"_fieldGenomeSpace\"\n    },\n\n    /** Returns an input field for a given field type */\n    create: function(input_def) {\n        var fieldClass = this.types[input_def.type];\n        var field =\n            typeof this[fieldClass] === \"function\"\n                ? this[fieldClass].call(this, input_def)\n                : null;\n        if (!field) {\n            field = input_def.options\n                ? this._fieldSelect(input_def)\n                : this._fieldText(input_def);\n            Galaxy.emit.debug(\n                \"form-parameters::_addRow()\",\n                \"Auto matched field type (\" + input_def.type + \").\"\n            );\n        }\n        input_def.value === undefined && (input_def.value = null);\n        field.value(input_def.value);\n        return field;\n    },\n\n    /** Data input field */\n    _fieldData: function(input_def) {\n        return new SelectContent.View({\n            id: \"field-\" + input_def.id,\n            extensions: input_def.extensions,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            type: input_def.type,\n            flavor: input_def.flavor,\n            data: input_def.options,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Select/Checkbox/Radio options field */\n    _fieldSelect: function(input_def) {\n        // show text field e.g. in workflow editor\n        if (input_def.is_workflow) {\n            return this._fieldText(input_def);\n        }\n\n        // customize properties\n        if (input_def.type == \"data_column\") {\n            input_def.error_text = \"Missing columns in referenced dataset.\";\n        }\n\n        // identify available options\n        var data = input_def.data;\n        if (!data) {\n            data = [];\n            _.each(input_def.options, function(option) {\n                data.push({ label: option[0], value: option[1] });\n            });\n        }\n\n        // identify display type\n        var SelectClass = Ui.Select;\n        switch (input_def.display) {\n            case \"checkboxes\":\n                SelectClass = Ui.Checkbox;\n                break;\n            case \"radio\":\n                SelectClass = Ui.Radio;\n                break;\n            case \"radiobutton\":\n                SelectClass = Ui.RadioButton;\n                break;\n        }\n\n        // create select field\n        return new SelectClass.View({\n            id: \"field-\" + input_def.id,\n            data: data,\n            error_text: input_def.error_text || \"No options available\",\n            readonly: input_def.readonly,\n            multiple: input_def.multiple,\n            optional: input_def.optional,\n            onchange: input_def.onchange,\n            individual: input_def.individual,\n            searchable: input_def.flavor !== \"workflow\"\n        });\n    },\n\n    /** Drill down options field */\n    _fieldDrilldown: function(input_def) {\n        // show text field e.g. in workflow editor\n        if (input_def.is_workflow) {\n            return this._fieldText(input_def);\n        }\n\n        // create drill down field\n        return new Ui.Drilldown.View({\n            id: \"field-\" + input_def.id,\n            data: input_def.options,\n            display: input_def.display,\n            optional: input_def.optional,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Text input field */\n    _fieldText: function(input_def) {\n        // field replaces e.g. a select field\n        if (input_def.options && input_def.data) {\n            input_def.area = input_def.multiple;\n            if (Utils.isEmpty(input_def.value)) {\n                input_def.value = null;\n            } else {\n                if ($.isArray(input_def.value)) {\n                    var str_value = \"\";\n                    for (var i in input_def.value) {\n                        str_value += String(input_def.value[i]);\n                        if (!input_def.multiple) {\n                            break;\n                        }\n                        str_value += \"\\n\";\n                    }\n                    input_def.value = str_value;\n                }\n            }\n        }\n        // create input element\n        return new Ui.Input({\n            id: \"field-\" + input_def.id,\n            type: input_def.type,\n            area: input_def.area,\n            readonly: input_def.readonly,\n            placeholder: input_def.placeholder,\n            datalist: input_def.datalist,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Slider field */\n    _fieldSlider: function(input_def) {\n        return new Ui.Slider.View({\n            id: \"field-\" + input_def.id,\n            precise: input_def.type == \"float\",\n            is_workflow: input_def.is_workflow,\n            min: input_def.min,\n            max: input_def.max,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Hidden field */\n    _fieldHidden: function(input_def) {\n        return new Ui.Hidden({\n            id: \"field-\" + input_def.id,\n            info: input_def.info\n        });\n    },\n\n    /** Boolean field */\n    _fieldBoolean: function(input_def) {\n        return new Ui.RadioButton.View({\n            id: \"field-\" + input_def.id,\n            data: [\n                { label: \"Yes\", value: \"true\" },\n                { label: \"No\", value: \"false\" }\n            ],\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Color picker field */\n    _fieldColor: function(input_def) {\n        return new ColorPicker({\n            id: \"field-\" + input_def.id,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** Library dataset field */\n    _fieldLibrary: function(input_def) {\n        return new SelectLibrary.View({\n            id: \"field-\" + input_def.id,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** FTP file field */\n    _fieldFtp: function(input_def) {\n        return new SelectFtp.View({\n            id: \"field-\" + input_def.id,\n            optional: input_def.optional,\n            multiple: input_def.multiple,\n            onchange: input_def.onchange\n        });\n    },\n\n    /** GenomeSpace file select field\n         */\n    _fieldGenomeSpace: function(input_def) {\n        var self = this;\n        return new SelectGenomeSpace.View({\n            id: \"field-\" + input_def.id,\n            onchange: function() {\n                self.app.trigger(\"change\");\n            }\n        });\n    },\n\n    /** Upload file field */\n    _fieldUpload: function(input_def) {\n        return new Ui.Upload({\n            id: \"field-\" + input_def.id,\n            onchange: input_def.onchange\n        });\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-parameters.js","define([\"utils/utils\", \"mvc/ui/ui-misc\", \"mvc/ui/ui-select-default\"], function(\n    Utils,\n    Ui,\n    Select\n) {\n    /** Batch mode variations */\n    var Batch = { DISABLED: \"disabled\", ENABLED: \"enabled\", LINKED: \"linked\" };\n\n    /** List of available content selectors options */\n    var Configurations = {\n        data: [\n            {\n                src: \"hda\",\n                icon: \"fa-file-o\",\n                tooltip: \"Single dataset\",\n                multiple: false,\n                batch: Batch.DISABLED\n            },\n            {\n                src: \"hda\",\n                icon: \"fa-files-o\",\n                tooltip: \"Multiple datasets\",\n                multiple: true,\n                batch: Batch.LINKED\n            },\n            {\n                src: \"hdca\",\n                icon: \"fa-folder-o\",\n                tooltip: \"Dataset collection\",\n                multiple: false,\n                batch: Batch.LINKED\n            }\n        ],\n        data_multiple: [\n            {\n                src: \"hda\",\n                icon: \"fa-files-o\",\n                tooltip: \"Multiple datasets\",\n                multiple: true,\n                batch: Batch.DISABLED\n            },\n            {\n                src: \"hdca\",\n                icon: \"fa-folder-o\",\n                tooltip: \"Dataset collections\",\n                multiple: true,\n                batch: Batch.DISABLED\n            }\n        ],\n        data_collection: [\n            {\n                src: \"hdca\",\n                icon: \"fa-folder-o\",\n                tooltip: \"Dataset collection\",\n                multiple: false,\n                batch: Batch.DISABLED\n            }\n        ],\n        workflow_data: [\n            {\n                src: \"hda\",\n                icon: \"fa-file-o\",\n                tooltip: \"Single dataset\",\n                multiple: false,\n                batch: Batch.DISABLED\n            }\n        ],\n        workflow_data_multiple: [\n            {\n                src: \"hda\",\n                icon: \"fa-files-o\",\n                tooltip: \"Multiple datasets\",\n                multiple: true,\n                batch: Batch.DISABLED\n            }\n        ],\n        workflow_data_collection: [\n            {\n                src: \"hdca\",\n                icon: \"fa-folder-o\",\n                tooltip: \"Dataset collection\",\n                multiple: false,\n                batch: Batch.DISABLED\n            }\n        ],\n        module_data: [\n            {\n                src: \"hda\",\n                icon: \"fa-file-o\",\n                tooltip: \"Single dataset\",\n                multiple: false,\n                batch: Batch.DISABLED\n            },\n            {\n                src: \"hda\",\n                icon: \"fa-files-o\",\n                tooltip: \"Multiple datasets\",\n                multiple: true,\n                batch: Batch.ENABLED\n            }\n        ],\n        module_data_collection: [\n            {\n                src: \"hdca\",\n                icon: \"fa-folder-o\",\n                tooltip: \"Dataset collection\",\n                multiple: false,\n                batch: Batch.DISABLED\n            },\n            {\n                src: \"hdca\",\n                icon: \"fa-folder\",\n                tooltip: \"Multiple collections\",\n                multiple: true,\n                batch: Batch.ENABLED\n            }\n        ]\n    };\n\n    /** View for hda and hdca content selector ui elements */\n    var View = Backbone.View.extend({\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    src_labels: { hda: \"dataset\", hdca: \"dataset collection\" },\n                    pagelimit: 100,\n                    statustimer: 1000\n                }).set(options);\n            this.setElement($(\"<div/>\").addClass(\"ui-select-content\"));\n            this.button_product = new Ui.RadioButton.View({\n                value: \"false\",\n                data: [\n                    {\n                        icon: \"fa fa-chain\",\n                        value: \"false\",\n                        tooltip:\n                            \"Linked inputs will be run in matched order with other datasets e.g. use this for matching forward and reverse reads.\"\n                    },\n                    {\n                        icon: \"fa fa-chain-broken\",\n                        value: \"true\",\n                        tooltip:\n                            \"Unlinked dataset inputs will be run against *all* other inputs.\"\n                    }\n                ]\n            });\n            var $batch_div = $(\"<div/>\")\n                .addClass(\"ui-form-info\")\n                .append($(\"<i/>\").addClass(\"fa fa-sitemap\"))\n                .append(\n                    $(\"<span/>\").html(\n                        \"This is a batch mode input field. Separate jobs will be triggered for each dataset selection.\"\n                    )\n                );\n            this.$batch = {\n                linked: $batch_div.clone(),\n                enabled: $batch_div\n                    .clone()\n                    .append(\n                        $(\"<div/>\")\n                            .append(\n                                $(\"<div/>\")\n                                    .addClass(\"ui-form-title\")\n                                    .html(\"Batch options:\")\n                            )\n                            .append(this.button_product.$el)\n                    )\n                    .append($(\"<div/>\").css(\"clear\", \"both\"))\n            };\n\n            // add drag-drop event handlers\n            this.$el\n                .on(\"dragenter\", function(e) {\n                    this.lastenter = e.target;\n                    self.$el.addClass(\"ui-dragover\");\n                })\n                .on(\"dragover\", function(e) {\n                    e.preventDefault();\n                })\n                .on(\"dragleave\", function(e) {\n                    this.lastenter === e.target &&\n                        self.$el.removeClass(\"ui-dragover\");\n                })\n                .on(\"drop\", function(e) {\n                    self._handleDrop(e);\n                });\n\n            // track current history elements\n            this.history = {};\n\n            // add listeners\n            this.listenTo(this.model, \"change:data\", this._changeData, this);\n            this.listenTo(this.model, \"change:wait\", this._changeWait, this);\n            this.listenTo(\n                this.model,\n                \"change:current\",\n                this._changeCurrent,\n                this\n            );\n            this.listenTo(this.model, \"change:value\", this._changeValue, this);\n            this.listenTo(\n                this.model,\n                \"change:type change:optional change:multiple change:extensions\",\n                this._changeType,\n                this\n            );\n            this.render();\n\n            // add change event\n            this.on(\"change\", function() {\n                options.onchange && options.onchange(self.value());\n            });\n        },\n\n        render: function() {\n            this._changeType();\n            this._changeValue();\n            this._changeWait();\n        },\n\n        /** Indicate that select fields are being updated */\n        wait: function() {\n            this.model.set(\"wait\", true);\n        },\n\n        /** Indicate that the options update has been completed */\n        unwait: function() {\n            this.model.set(\"wait\", false);\n        },\n\n        /** Update data representing selectable options */\n        update: function(options) {\n            this.model.set(\"data\", options);\n        },\n\n        /** Return the currently selected dataset values */\n        value: function(new_value) {\n            new_value !== undefined && this.model.set(\"value\", new_value);\n            var current = this.model.get(\"current\");\n            if (this.config[current]) {\n                var id_list = this.fields[current].value();\n                if (id_list !== null) {\n                    id_list = $.isArray(id_list) ? id_list : [id_list];\n                    if (id_list.length > 0) {\n                        var result = this._batch({ values: [] });\n                        for (var i in id_list) {\n                            var details = this.history[\n                                id_list[i] + \"_\" + this.config[current].src\n                            ];\n                            if (details) {\n                                result.values.push(details);\n                            } else {\n                                Galaxy.emit.debug(\n                                    \"ui-select-content::value()\",\n                                    \"Requested details not found for '\" +\n                                        id_list[i] +\n                                        \"'.\"\n                                );\n                                return null;\n                            }\n                        }\n                        result.values.sort(function(a, b) {\n                            return a.hid - b.hid;\n                        });\n                        return result;\n                    }\n                }\n            } else {\n                Galaxy.emit.debug(\n                    \"ui-select-content::value()\",\n                    \"Invalid value/source '\" + new_value + \"'.\"\n                );\n            }\n            return null;\n        },\n\n        /** Change of current select field */\n        _changeCurrent: function() {\n            var self = this;\n            _.each(this.fields, function(field, i) {\n                if (self.model.get(\"current\") == i) {\n                    field.$el.show();\n                    _.each(self.$batch, function($batchfield, batchmode) {\n                        $batchfield[\n                            self.config[i].batch == batchmode ? \"show\" : \"hide\"\n                        ]();\n                    });\n                    self.button_type.value(i);\n                } else {\n                    field.$el.hide();\n                }\n            });\n        },\n\n        /** Change of type */\n        _changeType: function() {\n            var self = this;\n\n            // identify selector type identifier i.e. [ flavor ]_[ type ]_[ multiple ]\n            var config_id =\n                (this.model.get(\"flavor\")\n                    ? this.model.get(\"flavor\") + \"_\"\n                    : \"\") +\n                String(this.model.get(\"type\")) +\n                (this.model.get(\"multiple\") ? \"_multiple\" : \"\");\n            if (Configurations[config_id]) {\n                this.config = Configurations[config_id];\n            } else {\n                this.config = Configurations[\"data\"];\n                Galaxy.emit.debug(\n                    \"ui-select-content::_changeType()\",\n                    \"Invalid configuration/type id '\" + config_id + \"'.\"\n                );\n            }\n\n            // prepare extension component of error message\n            var data = self.model.get(\"data\");\n            var extensions = Utils.textify(this.model.get(\"extensions\"));\n            var src_labels = this.model.get(\"src_labels\");\n\n            // build views\n            this.fields = [];\n            this.button_data = [];\n            _.each(this.config, function(c, i) {\n                self.button_data.push({\n                    value: i,\n                    icon: c.icon,\n                    tooltip: c.tooltip\n                });\n                self.fields.push(\n                    new Select.View({\n                        optional: self.model.get(\"optional\"),\n                        multiple: c.multiple,\n                        searchable:\n                            !c.multiple ||\n                            (data &&\n                                data[c.src] &&\n                                data[c.src].length >\n                                    self.model.get(\"pagelimit\")),\n                        individual: true,\n                        error_text:\n                            \"No \" +\n                            (extensions ? extensions + \" \" : \"\") +\n                            (src_labels[c.src] || \"content\") +\n                            \" available.\",\n                        onchange: function() {\n                            self.trigger(\"change\");\n                        }\n                    })\n                );\n            });\n            this.button_type = new Ui.RadioButton.View({\n                value: this.model.get(\"current\"),\n                data: this.button_data,\n                onchange: function(value) {\n                    self.model.set(\"current\", value);\n                    self.trigger(\"change\");\n                }\n            });\n\n            // append views\n            this.$el.empty();\n            var button_width = 0;\n            if (this.fields.length > 1) {\n                this.$el.append(this.button_type.$el);\n                button_width = Math.max(0, this.fields.length * 36) + \"px\";\n            }\n            _.each(this.fields, function(field) {\n                self.$el.append(field.$el.css({ \"margin-left\": button_width }));\n            });\n            _.each(this.$batch, function($batchfield, batchmode) {\n                self.$el.append(\n                    $batchfield.css({ \"margin-left\": button_width })\n                );\n            });\n            this.model.set(\"current\", 0);\n            this._changeCurrent();\n            this._changeData();\n        },\n\n        /** Change of wait flag */\n        _changeWait: function() {\n            var self = this;\n            _.each(this.fields, function(field) {\n                field[self.model.get(\"wait\") ? \"wait\" : \"unwait\"]();\n            });\n        },\n\n        /** Change of available options */\n        _changeData: function() {\n            var options = this.model.get(\"data\");\n            var self = this;\n            var select_options = {};\n            _.each(options, function(items, src) {\n                select_options[src] = [];\n                _.each(items, function(item) {\n                    select_options[src].push({\n                        hid: item.hid,\n                        keep: item.keep,\n                        label: item.hid + \": \" + item.name,\n                        value: item.id,\n                        tags: item.tags\n                    });\n                    self.history[item.id + \"_\" + src] = item;\n                });\n            });\n            _.each(this.config, function(c, i) {\n                select_options[c.src] &&\n                    self.fields[i].add(select_options[c.src], function(a, b) {\n                        return b.hid - a.hid;\n                    });\n            });\n        },\n\n        /** Change of incoming value */\n        _changeValue: function() {\n            var new_value = this.model.get(\"value\");\n            if (new_value && new_value.values && new_value.values.length > 0) {\n                // create list with content ids\n                var list = [];\n                _.each(new_value.values, function(value) {\n                    list.push(value.id);\n                });\n                // sniff first suitable field type from config list\n                var src = new_value.values[0].src;\n                var multiple = new_value.values.length > 1;\n                for (var i = 0; i < this.config.length; i++) {\n                    var field = this.fields[i];\n                    var c = this.config[i];\n                    if (\n                        c.src == src &&\n                        [multiple, true].indexOf(c.multiple) !== -1\n                    ) {\n                        this.model.set(\"current\", i);\n                        field.value(list);\n                        break;\n                    }\n                }\n            } else {\n                _.each(this.fields, function(field) {\n                    field.value(null);\n                });\n            }\n        },\n\n        /** Handles drop events e.g. from history panel */\n        _handleDrop: function(ev) {\n            try {\n                var data = this.model.get(\"data\");\n                var current = this.model.get(\"current\");\n                var config = this.config[current];\n                var field = this.fields[current];\n                var drop_data = JSON.parse(\n                    ev.originalEvent.dataTransfer.getData(\"text\")\n                )[0];\n                var new_id = drop_data.id;\n                var new_src =\n                    drop_data.history_content_type == \"dataset\"\n                        ? \"hda\"\n                        : \"hdca\";\n                var new_value = { id: new_id, src: new_src };\n                if (data && _.findWhere(data[new_src], new_value)) {\n                    if (config.src == new_src) {\n                        var current_value = field.value();\n                        if (current_value && config.multiple) {\n                            if (current_value.indexOf(new_id) == -1) {\n                                current_value.push(new_id);\n                            }\n                        } else {\n                            current_value = new_id;\n                        }\n                        field.value(current_value);\n                    } else {\n                        this.model.set(\"value\", { values: [new_value] });\n                        this.model.trigger(\"change:value\");\n                    }\n                    this.trigger(\"change\");\n                    this._handleDropStatus(\"success\");\n                } else {\n                    this._handleDropStatus(\"danger\");\n                }\n            } catch (e) {\n                this._handleDropStatus(\"danger\");\n            }\n            ev.preventDefault();\n        },\n\n        /** Highlight drag result */\n        _handleDropStatus: function(status) {\n            var self = this;\n            this.$el\n                .removeClass(\"ui-dragover\")\n                .addClass(\"ui-dragover-\" + status);\n            setTimeout(function() {\n                self.$el.removeClass(\"ui-dragover-\" + status);\n            }, this.model.get(\"statustimer\"));\n        },\n\n        /** Assists in identifying the batch mode */\n        _batch: function(result) {\n            result[\"batch\"] = false;\n            var current = this.model.get(\"current\");\n            var config = this.config[current];\n            if (config.src == \"hdca\" && !config.multiple) {\n                var hdca = this.history[this.fields[current].value() + \"_hdca\"];\n                if (hdca && hdca.map_over_type) {\n                    result[\"batch\"] = true;\n                }\n            }\n            if (config.batch == Batch.LINKED || config.batch == Batch.ENABLED) {\n                result[\"batch\"] = true;\n                if (\n                    config.batch == Batch.ENABLED &&\n                    this.button_product.value() === \"true\"\n                ) {\n                    result[\"product\"] = true;\n                }\n            }\n            return result;\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-content.js","// dependencies\ndefine(\n    [\"utils/utils\", \"mvc/ui/ui-misc\", \"mvc/ui/ui-table\", \"mvc/ui/ui-list\"],\n    function(Utils, Ui, Table, List) {\n        // collection of libraries\n        var Libraries = Backbone.Collection.extend({\n            url: Galaxy.root + \"api/libraries?deleted=false\"\n        });\n\n        // collection of dataset\n        var LibraryDatasets = Backbone.Collection.extend({\n            initialize: function() {\n                var self = this;\n                this.config = new Backbone.Model({ library_id: null });\n                this.config.on(\"change\", function() {\n                    self.fetch({ reset: true });\n                });\n            },\n            url: function() {\n                return (\n                    Galaxy.root +\n                    \"api/libraries/\" +\n                    this.config.get(\"library_id\") +\n                    \"/contents\"\n                );\n            }\n        });\n\n        // hda/hdca content selector ui element\n        var View = Backbone.View.extend({\n            // initialize\n            initialize: function(options) {\n                // link this\n                var self = this;\n\n                // collections\n                this.libraries = new Libraries();\n                this.datasets = new LibraryDatasets();\n\n                // link app and options\n                this.options = options;\n\n                // select field for the library\n                // TODO: Remove this once the library API supports searching for library datasets\n                this.library_select = new Ui.Select.View({\n                    onchange: function(value) {\n                        self.datasets.config.set(\"library_id\", value);\n                    }\n                });\n\n                // create ui-list view to keep track of selected data libraries\n                this.dataset_list = new List.View({\n                    name: \"dataset\",\n                    optional: options.optional,\n                    multiple: options.multiple,\n                    onchange: function() {\n                        self.trigger(\"change\");\n                    }\n                });\n\n                // add reset handler for fetched libraries\n                this.libraries.on(\"reset\", function() {\n                    var data = [];\n                    self.libraries.each(function(model) {\n                        data.push({\n                            value: model.id,\n                            label: model.get(\"name\")\n                        });\n                    });\n                    self.library_select.update(data);\n                });\n\n                // add reset handler for fetched library datasets\n                this.datasets.on(\"reset\", function() {\n                    var data = [];\n                    var library_current = self.library_select.text();\n                    if (library_current !== null) {\n                        self.datasets.each(function(model) {\n                            if (model.get(\"type\") === \"file\") {\n                                data.push({\n                                    value: model.id,\n                                    label: model.get(\"name\")\n                                });\n                            }\n                        });\n                    }\n                    self.dataset_list.update(data);\n                });\n\n                // add change event. fires on trigger\n                this.on(\"change\", function() {\n                    options.onchange && options.onchange(self.value());\n                });\n\n                // create elements\n                this.setElement(this._template());\n                this.$(\".library-select\").append(this.library_select.$el);\n                this.$el.append(this.dataset_list.$el);\n\n                // initial fetch of libraries\n                this.libraries.fetch({\n                    reset: true,\n                    success: function() {\n                        self.library_select.trigger(\"change\");\n                        if (self.options.value !== undefined) {\n                            self.value(self.options.value);\n                        }\n                    }\n                });\n            },\n\n            /** Return/Set currently selected library datasets */\n            value: function(val) {\n                return this.dataset_list.value(val);\n            },\n\n            /** Template */\n            _template: function() {\n                return (\n                    '<div class=\"ui-select-library\">' +\n                    '<div class=\"library ui-margin-bottom\">' +\n                    '<span class=\"library-title\">Select Library</span>' +\n                    '<span class=\"library-select\"/>' +\n                    \"</div>\" +\n                    \"</div>\"\n                );\n            }\n        });\n\n        return {\n            View: View\n        };\n    }\n);\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-library.js","// dependencies\ndefine([\"utils/utils\", \"mvc/ui/ui-list\"], function(Utils, List) {\n    /**\n * FTP file selector\n */\n    var View = Backbone.View.extend({\n        // initialize\n        initialize: function(options) {\n            // link this\n            var self = this;\n\n            // create ui-list view to keep track of selected ftp files\n            this.ftpfile_list = new List.View({\n                name: \"file\",\n                optional: options.optional,\n                multiple: options.multiple,\n                onchange: function() {\n                    options.onchange && options.onchange(self.value());\n                }\n            });\n\n            // create elements\n            this.setElement(this.ftpfile_list.$el);\n\n            // initial fetch of ftps\n            Utils.get({\n                url: Galaxy.root + \"api/remote_files\",\n                success: function(response) {\n                    var data = [];\n                    for (var i in response) {\n                        data.push({\n                            value: response[i][\"path\"],\n                            label: response[i][\"path\"]\n                        });\n                    }\n                    self.ftpfile_list.update(data);\n                }\n            });\n        },\n\n        /** Return/Set currently selected ftp datasets */\n        value: function(val) {\n            return this.ftpfile_list.value(val);\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-ftp.js","// dependencies\ndefine([\"utils/utils\", \"mvc/ui/ui-misc\", \"mvc/tool/tool-genomespace\"], function(\n    Utils,\n    Ui,\n    GenomespaceBrowser\n) {\n    /**\n * GenomeSpace file selector\n */\n    var View = Backbone.View.extend({\n        // initialize\n        initialize: function(options) {\n            // link this\n            var self = this;\n\n            // create insert new list element button\n            this.browse_button = new Ui.ButtonIcon({\n                title: \"Browse\",\n                icon: \"fa fa-sign-in\",\n                tooltip: \"Browse GenomeSpace\",\n                onclick: function() {\n                    self.browseGenomeSpace();\n                }\n            });\n\n            // create genomespace filepath textbox\n            this.filename_textbox = new Ui.Input();\n\n            // create genomespace token textbox\n            this.token_textbox = new Ui.Input({\n                type: \"password\"\n            });\n\n            // create elements\n            this.setElement(this._template(options));\n            this.$(\".ui-gs-browse-button\").append(this.browse_button.$el);\n            this.$(\".ui-gs-filename-textbox\").append(this.filename_textbox.$el);\n            this.$(\".ui-gs-token-textbox\").append(this.token_textbox.$el);\n        },\n\n        /** Browse GenomeSpace */\n        browseGenomeSpace: function(options) {\n            var self = this;\n            GenomespaceBrowser.openFileBrowser({\n                successCallback: function(data) {\n                    self.value(data.destination + \"^\" + data.token);\n                }\n            });\n        },\n\n        /** Main Template */\n        _template: function(options) {\n            return (\n                '<div class=\"ui-gs-select-file\">' +\n                '<div class=\"ui-gs-browse-field\">' +\n                '<span class=\"ui-gs-browse-button\" />' +\n                '<span class=\"ui-gs-filename-textbox\" />' +\n                \"</div>\" +\n                '<div class=\"ui-gs-token-field\">' +\n                '<span class=ui-gs-label\"><div class=\"ui-gs-token-label\">Token</div></span>' +\n                '<span class=\"ui-gs-token-textbox\" />' +\n                \"</div>\" +\n                \"</div>\"\n            );\n        },\n\n        /** Return/Set currently selected genomespace filename/token */\n        value: function(new_value) {\n            // check if new_value is defined\n            if (new_value !== undefined) {\n                this._setValue(new_value);\n            } else {\n                return this._getValue();\n            }\n        },\n\n        // get value\n        _getValue: function() {\n            return (\n                this.filename_textbox.value() + \"^\" + this.token_textbox.value()\n            );\n        },\n\n        // set value\n        _setValue: function(new_value) {\n            if (new_value) {\n                values = new_value.split(\"^\");\n                this.filename_textbox.value(values[0]);\n                this.token_textbox.value(values[1]);\n            }\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select-genomespace.js","// Provides support for interacting with the GenomeSpace File Browser popup dialogue\n\n// tool form templates\nexport default {\n    openFileBrowser: function(options) {\n        var GS_UI_URL = window.Galaxy.config.genomespace_ui_url;\n        var GS_UPLOAD_URL =\n            GS_UI_URL + \"upload/loadUrlToGenomespace.html?getLocation=true\";\n\n        var newWin = window.open(\n            GS_UPLOAD_URL,\n            \"GenomeSpace File Browser\",\n            \"height=360px,width=600px\"\n        );\n\n        successCalBack = options[\"successCallback\"];\n        window.addEventListener(\n            \"message\",\n            function(e) {\n                successCalBack(e.data);\n            },\n            false\n        );\n\n        newWin.focus();\n\n        if (options[\"errorCallback\"] != null)\n            newWin.setCallbackOnGSUploadError = config[\"errorCallback\"];\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/tool/tool-genomespace.js","/** Renders the color picker used e.g. in the tool form **/\ndefine([\"utils/utils\"], function(Utils) {\n    return Backbone.View.extend({\n        colors: {\n            standard: [\n                \"c00000\",\n                \"ff0000\",\n                \"ffc000\",\n                \"ffff00\",\n                \"92d050\",\n                \"00b050\",\n                \"00b0f0\",\n                \"0070c0\",\n                \"002060\",\n                \"7030a0\"\n            ],\n            base: [\n                \"ffffff\",\n                \"000000\",\n                \"eeece1\",\n                \"1f497d\",\n                \"4f81bd\",\n                \"c0504d\",\n                \"9bbb59\",\n                \"8064a2\",\n                \"4bacc6\",\n                \"f79646\"\n            ],\n            theme: [\n                [\n                    \"f2f2f2\",\n                    \"7f7f7f\",\n                    \"ddd9c3\",\n                    \"c6d9f0\",\n                    \"dbe5f1\",\n                    \"f2dcdb\",\n                    \"ebf1dd\",\n                    \"e5e0ec\",\n                    \"dbeef3\",\n                    \"fdeada\"\n                ],\n                [\n                    \"d8d8d8\",\n                    \"595959\",\n                    \"c4bd97\",\n                    \"8db3e2\",\n                    \"b8cce4\",\n                    \"e5b9b7\",\n                    \"d7e3bc\",\n                    \"ccc1d9\",\n                    \"b7dde8\",\n                    \"fbd5b5\"\n                ],\n                [\n                    \"bfbfbf\",\n                    \"3f3f3f\",\n                    \"938953\",\n                    \"548dd4\",\n                    \"95b3d7\",\n                    \"d99694\",\n                    \"c3d69b\",\n                    \"b2a2c7\",\n                    \"92cddc\",\n                    \"fac08f\"\n                ],\n                [\n                    \"a5a5a5\",\n                    \"262626\",\n                    \"494429\",\n                    \"17365d\",\n                    \"366092\",\n                    \"953734\",\n                    \"76923c\",\n                    \"5f497a\",\n                    \"31859b\",\n                    \"e36c09\"\n                ],\n                [\n                    \"7f7f7e\",\n                    \"0c0c0c\",\n                    \"1d1b10\",\n                    \"0f243e\",\n                    \"244061\",\n                    \"632423\",\n                    \"4f6128\",\n                    \"3f3151\",\n                    \"205867\",\n                    \"974806\"\n                ]\n            ]\n        },\n\n        initialize: function(options) {\n            this.options = Utils.merge(options, {});\n            this.setElement(this._template());\n            this.$panel = this.$(\".ui-color-picker-panel\");\n            this.$view = this.$(\".ui-color-picker-view\");\n            this.$value = this.$(\".ui-color-picker-value\");\n            this.$header = this.$(\".ui-color-picker-header\");\n            this._build();\n            this.visible = false;\n            this.value(this.options.value);\n            this.$boxes = this.$(\".ui-color-picker-box\");\n            var self = this;\n            this.$boxes.on(\"click\", function() {\n                self.value($(this).css(\"background-color\"));\n                self.$header.trigger(\"click\");\n            });\n            this.$header.on(\"click\", function() {\n                self.visible = !self.visible;\n                if (self.visible) {\n                    self.$view.fadeIn(\"fast\");\n                } else {\n                    self.$view.fadeOut(\"fast\");\n                }\n            });\n        },\n\n        /** Get/set value */\n        value: function(new_val) {\n            if (new_val !== undefined && new_val !== null) {\n                this.$value.css(\"background-color\", new_val);\n                this.$(\".ui-color-picker-box\").empty();\n                this.$(this._getValue()).html(this._templateCheck());\n                this.options.onchange && this.options.onchange(new_val);\n            }\n            return this._getValue();\n        },\n\n        /** Get value from dom */\n        _getValue: function() {\n            var rgb = this.$value.css(\"background-color\");\n            rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n            if (rgb) {\n                function hex(x) {\n                    return (\"0\" + parseInt(x).toString(16)).slice(-2);\n                }\n                return \"#\" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);\n            } else {\n                return null;\n            }\n        },\n\n        /** Build color panel */\n        _build: function() {\n            this._content({ colors: this.colors.base });\n            for (var i in this.colors.theme) {\n                var line_def = {};\n                if (i == 0) {\n                    line_def[\"bottom\"] = true;\n                } else if (i != this.colors.theme.length - 1) {\n                    line_def[\"top\"] = true;\n                    line_def[\"bottom\"] = true;\n                } else {\n                    line_def[\"top\"] = true;\n                }\n                line_def[\"colors\"] = this.colors.theme[i];\n                this._content(line_def);\n            }\n            this._content({ colors: this.colors.standard });\n        },\n\n        /** Create content */\n        _content: function(options) {\n            var colors = options.colors;\n            var $content = $(this._templateContent());\n            var $line = $content.find(\".line\");\n            this.$panel.append($content);\n            for (var i in colors) {\n                var $box = $(this._templateBox(colors[i]));\n                if (options.top) {\n                    $box.css(\"border-top\", \"none\");\n                    $box.css(\"border-top-left-radius\", \"0px\");\n                    $box.css(\"border-top-right-radius\", \"0px\");\n                }\n                if (options.bottom) {\n                    $box.css(\"border-bottom\", \"none\");\n                    $box.css(\"border-bottom-left-radius\", \"0px\");\n                    $box.css(\"border-bottom-right-radius\", \"0px\");\n                }\n                $line.append($box);\n            }\n            return $content;\n        },\n\n        /** Check icon */\n        _templateCheck: function() {\n            return '<div class=\"ui-color-picker-check fa fa-check\"/>';\n        },\n\n        /** Content template */\n        _templateContent: function() {\n            return (\n                '<div class=\"ui-color-picker-content\">' +\n                '<div class=\"line\"/>' +\n                \"</div>\"\n            );\n        },\n\n        /** Box template */\n        _templateBox: function(color) {\n            return (\n                '<div id=\"' +\n                color +\n                '\" class=\"ui-color-picker-box\" style=\"background-color: #' +\n                color +\n                ';\"/>'\n            );\n        },\n\n        /** Main template */\n        _template: function() {\n            return (\n                '<div class=\"ui-color-picker\">' +\n                '<div class=\"ui-color-picker-header\">' +\n                '<div class=\"ui-color-picker-value\"/>' +\n                '<div class=\"ui-color-picker-label\">Select a color</div>' +\n                \"</div>\" +\n                '<div class=\"ui-color-picker-view ui-input\">' +\n                '<div class=\"ui-color-picker-panel\"/>' +\n                \"</div>\"\n            );\n            (\"</div>\");\n        }\n    });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-color-picker.js","import jQuery from \"jquery\";\nvar $ = jQuery;\nimport QUERY_STRING from \"utils/query-string-parsing\";\nimport Ui from \"mvc/ui/ui-misc\";\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function(url, data) {\n        data = data || {};\n        data.__identifer = Math.random()\n            .toString(36)\n            .substr(2);\n        if (!$.isEmptyObject(data)) {\n            url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            url += $.param(data, true);\n        }\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = QUERY_STRING.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function(args, name) {\n        return true;\n    },\n\n    access_denied: function() {\n        this.page.display(\n            new Ui.Message({\n                status: \"danger\",\n                message:\n                    \"You must be logged in with proper credentials to make this request.\",\n                persistent: true\n            })\n        );\n    }\n});\n\nexport default Router;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/layout/router.js","/**\n *  This class contains backbone wrappers for basic ui elements such as Images, Labels, Buttons, Input fields etc.\n */\ndefine(\n    [\n        \"utils/utils\",\n        \"mvc/ui/ui-select-default\",\n        \"mvc/ui/ui-slider\",\n        \"mvc/ui/ui-options\",\n        \"mvc/ui/ui-drilldown\",\n        \"mvc/ui/ui-buttons\",\n        \"mvc/ui/ui-modal\"\n    ],\n    function(Utils, Select, Slider, Options, Drilldown, Buttons, Modal) {\n        /** Label wrapper */\n        var Label = Backbone.View.extend({\n            tagName: \"label\",\n            initialize: function(options) {\n                this.model =\n                    (options && options.model) || new Backbone.Model(options);\n                this.tagName = options.tagName || this.tagName;\n                this.setElement($(\"<\" + this.tagName + \"/>\"));\n                this.listenTo(this.model, \"change\", this.render, this);\n                this.render();\n            },\n            title: function(new_title) {\n                this.model.set(\"title\", new_title);\n            },\n            value: function() {\n                return this.model.get(\"title\");\n            },\n            render: function() {\n                this.$el\n                    .removeClass()\n                    .addClass(\"ui-label\")\n                    .addClass(this.model.get(\"cls\"))\n                    .html(this.model.get(\"title\"));\n                return this;\n            }\n        });\n\n        /** Displays messages used e.g. in the tool form */\n        var Message = Backbone.View.extend({\n            initialize: function(options) {\n                this.model =\n                    (options && options.model) ||\n                    new Backbone.Model({\n                        message: null,\n                        status: \"info\",\n                        cls: \"\",\n                        persistent: false,\n                        fade: true\n                    }).set(options);\n                this.listenTo(this.model, \"change\", this.render, this);\n                this.render();\n            },\n            update: function(options) {\n                this.model.set(options);\n            },\n            render: function() {\n                this.$el\n                    .removeClass()\n                    .addClass(\"ui-message\")\n                    .addClass(this.model.get(\"cls\"));\n                var status = this.model.get(\"status\");\n                if (this.model.get(\"large\")) {\n                    this.$el.addClass(\n                        ((status == \"success\" && \"done\") ||\n                            (status == \"danger\" && \"error\") ||\n                            status) + \"messagelarge\"\n                    );\n                } else {\n                    this.$el.addClass(\"alert\").addClass(\"alert-\" + status);\n                }\n                if (this.model.get(\"message\")) {\n                    this.$el.html(this.messageForDisplay());\n                    this.$el[this.model.get(\"fade\") ? \"fadeIn\" : \"show\"]();\n                    this.timeout && window.clearTimeout(this.timeout);\n                    if (!this.model.get(\"persistent\")) {\n                        var self = this;\n                        this.timeout = window.setTimeout(function() {\n                            self.model.set(\"message\", \"\");\n                        }, 3000);\n                    }\n                } else {\n                    this.$el.fadeOut();\n                }\n                return this;\n            },\n            messageForDisplay: function() {\n                return _.escape(this.model.get(\"message\"));\n            }\n        });\n\n        var UnescapedMessage = Message.extend({\n            messageForDisplay: function() {\n                return this.model.get(\"message\");\n            }\n        });\n\n        /** Renders an input element used e.g. in the tool form */\n        var Input = Backbone.View.extend({\n            initialize: function(options) {\n                this.model =\n                    (options && options.model) ||\n                    new Backbone.Model({\n                        type: \"text\",\n                        placeholder: \"\",\n                        disabled: false,\n                        readonly: false,\n                        visible: true,\n                        cls: \"\",\n                        area: false,\n                        color: null,\n                        style: null\n                    }).set(options);\n                this.tagName = this.model.get(\"area\") ? \"textarea\" : \"input\";\n                this.setElement($(\"<\" + this.tagName + \"/>\"));\n                this.listenTo(this.model, \"change\", this.render, this);\n                this.render();\n            },\n            events: {\n                input: \"_onchange\"\n            },\n            value: function(new_val) {\n                new_val !== undefined &&\n                    this.model.set(\n                        \"value\",\n                        typeof new_val === \"string\" ? new_val : \"\"\n                    );\n                return this.model.get(\"value\");\n            },\n            render: function() {\n                var self = this;\n                this.$el\n                    .removeClass()\n                    .addClass(\"ui-\" + this.tagName)\n                    .addClass(this.model.get(\"cls\"))\n                    .addClass(this.model.get(\"style\"))\n                    .attr(\"id\", this.model.id)\n                    .attr(\"type\", this.model.get(\"type\"))\n                    .attr(\"placeholder\", this.model.get(\"placeholder\"))\n                    .css(\"color\", this.model.get(\"color\") || \"\")\n                    .css(\"border-color\", this.model.get(\"color\") || \"\");\n                var datalist = this.model.get(\"datalist\");\n                if ($.isArray(datalist) && datalist.length > 0) {\n                    this.$el.autocomplete({\n                        source: function(request, response) {\n                            response(self.model.get(\"datalist\"));\n                        },\n                        change: function() {\n                            self._onchange();\n                        }\n                    });\n                }\n                if (this.model.get(\"value\") !== this.$el.val()) {\n                    this.$el.val(this.model.get(\"value\"));\n                }\n                _.each([\"readonly\", \"disabled\"], function(attr_name) {\n                    self.model.get(attr_name)\n                        ? self.$el.attr(attr_name, true)\n                        : self.$el.removeAttr(attr_name);\n                });\n                this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n                return this;\n            },\n            _onchange: function() {\n                this.value(this.$el.val());\n                this.model.get(\"onchange\") &&\n                    this.model.get(\"onchange\")(this.model.get(\"value\"));\n            }\n        });\n\n        /** Creates a hidden element input field used e.g. in the tool form */\n        var Hidden = Backbone.View.extend({\n            initialize: function(options) {\n                this.model =\n                    (options && options.model) || new Backbone.Model(options);\n                this.setElement(\n                    $(\"<div/>\")\n                        .append((this.$info = $(\"<div/>\")))\n                        .append((this.$hidden = $(\"<div/>\")))\n                );\n                this.listenTo(this.model, \"change\", this.render, this);\n                this.render();\n            },\n            value: function(new_val) {\n                new_val !== undefined && this.model.set(\"value\", new_val);\n                return this.model.get(\"value\");\n            },\n            render: function() {\n                this.$el.attr(\"id\", this.model.id);\n                this.$hidden.val(this.model.get(\"value\"));\n                this.model.get(\"info\")\n                    ? this.$info.show().text(this.model.get(\"info\"))\n                    : this.$info.hide();\n                return this;\n            }\n        });\n\n        /** Creates a upload element input field */\n        var Upload = Backbone.View.extend({\n            initialize: function(options) {\n                var self = this;\n                this.model =\n                    (options && options.model) || new Backbone.Model(options);\n                this.setElement(\n                    $(\"<div/>\")\n                        .append((this.$info = $(\"<div/>\")))\n                        .append(\n                            (this.$file = $(\"<input/>\")\n                                .attr(\"type\", \"file\")\n                                .addClass(\"ui-margin-bottom\"))\n                        )\n                        .append(\n                            (this.$text = $(\"<textarea/>\")\n                                .addClass(\"ui-textarea\")\n                                .attr(\"disabled\", true))\n                        )\n                        .append(\n                            (this.$wait = $(\"<i/>\").addClass(\n                                \"fa fa-spinner fa-spin\"\n                            ))\n                        )\n                );\n                this.listenTo(this.model, \"change\", this.render, this);\n                this.$file.on(\"change\", function(e) {\n                    self._readFile(e);\n                });\n                this.render();\n            },\n            value: function(new_val) {\n                new_val !== undefined && this.model.set(\"value\", new_val);\n                return this.model.get(\"value\");\n            },\n            render: function() {\n                this.$el.attr(\"id\", this.model.id);\n                this.model.get(\"info\")\n                    ? this.$info.show().text(this.model.get(\"info\"))\n                    : this.$info.hide();\n                this.model.get(\"value\")\n                    ? this.$text.text(this.model.get(\"value\")).show()\n                    : this.$text.hide();\n                this.model.get(\"wait\") ? this.$wait.show() : this.$wait.hide();\n                return this;\n            },\n            _readFile: function(e) {\n                var self = this;\n                var file = e.target.files && e.target.files[0];\n                if (file) {\n                    var reader = new FileReader();\n                    reader.onload = function() {\n                        self.model.set({ wait: false, value: this.result });\n                    };\n                    this.model.set({ wait: true, value: null });\n                    reader.readAsText(file);\n                }\n            }\n        });\n\n        return {\n            Button: Buttons.ButtonDefault,\n            ButtonIcon: Buttons.ButtonIcon,\n            ButtonCheck: Buttons.ButtonCheck,\n            ButtonMenu: Buttons.ButtonMenu,\n            ButtonLink: Buttons.ButtonLink,\n            Input: Input,\n            Label: Label,\n            Message: Message,\n            UnescapedMessage: UnescapedMessage,\n            Upload: Upload,\n            Modal: Modal,\n            RadioButton: Options.RadioButton,\n            Checkbox: Options.Checkbox,\n            Radio: Options.Radio,\n            Select: Select,\n            Hidden: Hidden,\n            Slider: Slider,\n            Drilldown: Drilldown\n        };\n    }\n);\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-misc.js","/** Generic form view */\nimport Form from \"mvc/form/form-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        this.model = new Backbone.Model(options);\n        this.url = this.model.get(\"url\");\n        this.redirect = this.model.get(\"redirect\");\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + this.url,\n            type: \"GET\"\n        })\n            .done(function(response) {\n                var options = $.extend({}, self.model.attributes, response);\n                var form = new Form({\n                    title: options.title,\n                    message: options.message,\n                    status: options.status || \"warning\",\n                    icon: options.icon,\n                    inputs: options.inputs,\n                    buttons: {\n                        submit: new Ui.Button({\n                            tooltip: options.submit_tooltip,\n                            title: options.submit_title || \"Save\",\n                            icon: options.submit_icon || \"fa-save\",\n                            cls: \"btn btn-primary ui-clear-float\",\n                            onclick: function() {\n                                self._submit(form);\n                            }\n                        })\n                    }\n                });\n                self.$el.empty().append(form.$el);\n            })\n            .fail(function(response) {\n                self.$el.empty().append(\n                    new Ui.Message({\n                        message: \"Failed to load resource \" + self.url + \".\",\n                        status: \"danger\",\n                        persistent: true\n                    }).$el\n                );\n            });\n    },\n\n    _submit: function(form) {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + self.url,\n            data: JSON.stringify(form.data.create()),\n            type: \"PUT\",\n            contentType: \"application/json\"\n        })\n            .done(function(response) {\n                var success_message = {\n                    message: response.message,\n                    status: \"success\",\n                    persistent: false\n                };\n                if (self.redirect) {\n                    window.location =\n                        Galaxy.root +\n                        self.redirect +\n                        \"?\" +\n                        $.param(success_message);\n                } else {\n                    form.data.matchModel(response, function(input, input_id) {\n                        form.field_list[input_id].value(input.value);\n                    });\n                    self._showMessage(form, success_message);\n                }\n            })\n            .fail(function(response) {\n                self._showMessage(form, {\n                    message: response.responseJSON.err_msg,\n                    status: \"danger\",\n                    persistent: false\n                });\n            });\n    },\n\n    _showMessage: function(form, options) {\n        var $panel = form.$el\n            .parents()\n            .filter(function() {\n                return (\n                    [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1\n                );\n            })\n            .first();\n        $panel.animate({ scrollTop: 0 }, 500);\n        form.message.update(options);\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-wrapper.js","define([\"utils/utils\", \"mvc/ui/ui-misc\"], function(Utils, Ui) {\n    var View = Backbone.View.extend({\n        visible: false,\n        initialize: function(options) {\n            var self = this;\n            this.model =\n                (options && options.model) ||\n                new Backbone.Model({\n                    id: Utils.uid(),\n                    cls: \"ui-portlet\",\n                    title: \"\",\n                    icon: \"\",\n                    buttons: null,\n                    body: null,\n                    scrollable: true,\n                    nopadding: false,\n                    operations: null,\n                    collapsible: false,\n                    collapsible_button: false,\n                    collapsed: false,\n                    onchange_title: null\n                }).set(options);\n            this.setElement(this._template());\n\n            // link all dom elements\n            this.$body = this.$(\".portlet-body\");\n            this.$title_text = this.$(\".portlet-title-text\");\n            this.$title_icon = this.$(\".portlet-title-icon\");\n            this.$header = this.$(\".portlet-header\");\n            this.$content = this.$(\".portlet-content\");\n            this.$backdrop = this.$(\".portlet-backdrop\");\n            this.$buttons = this.$(\".portlet-buttons\");\n            this.$operations = this.$(\".portlet-operations\");\n\n            // add body to component list\n            this.model.get(\"body\") && this.append(this.model.get(\"body\"));\n\n            // add icon for collapsible option\n            this.collapsible_button = new Ui.ButtonIcon({\n                icon: \"fa-eye\",\n                tooltip: \"Collapse/Expand\",\n                cls: \"ui-button-icon-plain\",\n                onclick: function() {\n                    self[self.collapsed ? \"expand\" : \"collapse\"]();\n                }\n            });\n            this.render();\n        },\n\n        render: function() {\n            var self = this;\n            var options = this.model.attributes;\n            this.$el\n                .removeClass()\n                .addClass(options.cls)\n                .attr(\"id\", options.id);\n            this.$header[options.title ? \"show\" : \"hide\"]();\n            this.$title_text.html(options.title);\n            _.each([this.$content, this.$body], function($el) {\n                $el[options.nopadding ? \"addClass\" : \"removeClass\"](\n                    \"no-padding\"\n                );\n            });\n\n            // render title icon\n            if (options.icon) {\n                this.$title_icon\n                    .removeClass()\n                    .addClass(\"portlet-title-icon fa\")\n                    .addClass(options.icon)\n                    .show();\n            } else {\n                this.$title_icon.hide();\n            }\n\n            // make portlet collapsible\n            this.$title_text\n                [options.collapsible ? \"addClass\" : \"removeClass\"](\n                    \"no-highlight collapsible\"\n                )\n                .off();\n            if (options.collapsible) {\n                this.$title_text.on(\"click\", function() {\n                    self[self.collapsed ? \"expand\" : \"collapse\"]();\n                });\n                options.collapsed ? this.collapse() : this.expand();\n            }\n\n            // allow title editing\n            this.$title_text.prop(\"disabled\", !options.onchange_title);\n            options.onchange_title &&\n                this.$title_text.make_text_editable({\n                    on_finish: function(new_title) {\n                        options.onchange_title(new_title);\n                    }\n                });\n\n            // render buttons\n            if (options.buttons) {\n                this.$buttons.empty().show();\n                $.each(this.model.get(\"buttons\"), function(name, item) {\n                    item.$el.prop(\"id\", name);\n                    self.$buttons.append(item.$el);\n                });\n            } else {\n                this.$buttons.hide();\n            }\n\n            // render operations\n            this.$operations.empty;\n            if (options.collapsible_button) {\n                this.$operations.append(this.collapsible_button.$el);\n            }\n            if (options.operations) {\n                $.each(options.operations, function(name, item) {\n                    item.$el.prop(\"id\", name);\n                    self.$operations.append(item.$el);\n                });\n            }\n            return this;\n        },\n\n        /** Append new doms to body */\n        append: function($el) {\n            this.$body.append($el);\n        },\n\n        /** Remove all content */\n        empty: function() {\n            this.$body.empty();\n        },\n\n        /** Return header element */\n        header: function() {\n            return this.$header;\n        },\n\n        /** Return body element */\n        body: function() {\n            return this.$body;\n        },\n\n        /** Show portlet */\n        show: function() {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n        },\n\n        /** Hide portlet */\n        hide: function() {\n            this.visible = false;\n            this.$el.hide();\n        },\n\n        /** Enable a particular button */\n        enableButton: function(id) {\n            this.$buttons.find(\"#\" + id).prop(\"disabled\", false);\n        },\n\n        /** Disable a particular button */\n        disableButton: function(id) {\n            this.$buttons.find(\"#\" + id).prop(\"disabled\", true);\n        },\n\n        /** Hide a particular operation */\n        hideOperation: function(id) {\n            this.$operations.find(\"#\" + id).hide();\n        },\n\n        /** Show a particular operation */\n        showOperation: function(id) {\n            this.$operations.find(\"#\" + id).show();\n        },\n\n        /** Replaces the event callback of an existing operation */\n        setOperation: function(id, callback) {\n            this.$operations\n                .find(\"#\" + id)\n                .off(\"click\")\n                .on(\"click\", callback);\n        },\n\n        /** Change title */\n        title: function(new_title) {\n            new_title && this.$title_text.html(new_title);\n            return this.$title_text.html();\n        },\n\n        /** Collapse portlet */\n        collapse: function() {\n            this.collapsed = true;\n            this.$content.height(\"0%\");\n            this.$body.hide();\n            this.collapsible_button.setIcon(\"fa-eye-slash\");\n        },\n\n        /** Expand portlet */\n        expand: function() {\n            this.collapsed = false;\n            this.$content.height(\"100%\");\n            this.$body.fadeIn(\"fast\");\n            this.collapsible_button.setIcon(\"fa-eye\");\n        },\n\n        /** Disable content access */\n        disable: function() {\n            this.$backdrop.show();\n        },\n\n        /** Enable content access */\n        enable: function() {\n            this.$backdrop.hide();\n        },\n\n        _template: function() {\n            return $(\"<div/>\")\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"portlet-header\")\n                        .append($(\"<div/>\").addClass(\"portlet-operations\"))\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"portlet-title\")\n                                .append(\n                                    $(\"<i/>\").addClass(\"portlet-title-icon\")\n                                )\n                                .append(\n                                    $(\"<span/>\").addClass(\"portlet-title-text\")\n                                )\n                        )\n                )\n                .append(\n                    $(\"<div/>\")\n                        .addClass(\"portlet-content\")\n                        .append($(\"<div/>\").addClass(\"portlet-body\"))\n                        .append($(\"<div/>\").addClass(\"portlet-buttons\"))\n                )\n                .append($(\"<div/>\").addClass(\"portlet-backdrop\"));\n        }\n    });\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-portlet.js","/**\n    This is the main class of the form plugin. It is referenced as 'app' in lower level modules.\n*/\nimport Utils from \"utils/utils\";\nimport Portlet from \"mvc/ui/ui-portlet\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport FormSection from \"mvc/form/form-section\";\nimport FormData from \"mvc/form/form-data\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        this.model = new Backbone.Model({\n            initial_errors: false,\n            cls: \"ui-portlet-limited\",\n            icon: null,\n            always_refresh: true,\n            status: \"warning\",\n            hide_operations: false,\n            onchange: function() {}\n        }).set(options);\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    /** Update available options */\n    update: function(new_model) {\n        var self = this;\n        this.data.matchModel(new_model, function(node, input_id) {\n            var input = self.input_list[input_id];\n            if (input && input.options) {\n                if (!_.isEqual(input.options, node.options)) {\n                    input.options = node.options;\n                    var field = self.field_list[input_id];\n                    if (field.update) {\n                        var new_options = [];\n                        if (\n                            [\"data\", \"data_collection\", \"drill_down\"].indexOf(\n                                input.type\n                            ) != -1\n                        ) {\n                            new_options = input.options;\n                        } else {\n                            for (var i in node.options) {\n                                var opt = node.options[i];\n                                if (opt.length > 2) {\n                                    new_options.push({\n                                        label: opt[0],\n                                        value: opt[1]\n                                    });\n                                }\n                            }\n                        }\n                        field.update(new_options);\n                        field.trigger(\"change\");\n                        Galaxy.emit.debug(\n                            \"form-view::update()\",\n                            \"Updating options for \" + input_id\n                        );\n                    }\n                }\n            }\n        });\n    },\n\n    /** Set form into wait mode */\n    wait: function(active) {\n        for (var i in this.input_list) {\n            var field = this.field_list[i];\n            var input = this.input_list[i];\n            if (input.is_dynamic && field.wait && field.unwait) {\n                field[active ? \"wait\" : \"unwait\"]();\n            }\n        }\n    },\n\n    /** Highlight and scroll to input element (currently only used for error notifications) */\n    highlight: function(input_id, message, silent) {\n        var input_element = this.element_list[input_id];\n        if (input_element) {\n            input_element.error(message || \"Please verify this parameter.\");\n            this.portlet.expand();\n            this.trigger(\"expand\", input_id);\n            if (!silent) {\n                var $panel = this.$el\n                    .parents()\n                    .filter(function() {\n                        return (\n                            [\"auto\", \"scroll\"].indexOf(\n                                $(this).css(\"overflow\")\n                            ) != -1\n                        );\n                    })\n                    .first();\n                $panel.animate(\n                    {\n                        scrollTop:\n                            $panel.scrollTop() +\n                            input_element.$el.offset().top -\n                            120\n                    },\n                    500\n                );\n            }\n        }\n    },\n\n    /** Highlights errors */\n    errors: function(options) {\n        this.trigger(\"reset\");\n        if (options && options.errors) {\n            var error_messages = this.data.matchResponse(options.errors);\n            for (var input_id in this.element_list) {\n                var input = this.element_list[input_id];\n                if (error_messages[input_id]) {\n                    this.highlight(input_id, error_messages[input_id], true);\n                }\n            }\n        }\n    },\n\n    /** Render tool form */\n    render: function() {\n        var self = this;\n        this.off(\"change\");\n        this.off(\"reset\");\n        // contains the dom field elements as created by the parameter factory i.e. form-parameters\n        this.field_list = {};\n        // contains input definitions/dictionaries as provided by the parameters to_dict() function through the api\n        this.input_list = {};\n        // contains the dom elements of each input element i.e. form-input which wraps the actual input field\n        this.element_list = {};\n        // converts the form into a json data structure\n        this.data = new FormData.Manager(this);\n        this._renderForm();\n        this.data.create();\n        this.model.get(\"initial_errors\") && this.errors(this.model.attributes);\n        // add listener which triggers on checksum change, and reset the form input wrappers\n        var current_check = this.data.checksum();\n        this.on(\"change\", function(input_id) {\n            var input = self.input_list[input_id];\n            if (\n                !input ||\n                input.refresh_on_change ||\n                self.model.get(\"always_refresh\")\n            ) {\n                var new_check = self.data.checksum();\n                if (new_check != current_check) {\n                    current_check = new_check;\n                    self.model.get(\"onchange\")();\n                }\n            }\n        });\n        this.on(\"reset\", function() {\n            _.each(self.element_list, function(input_element) {\n                input_element.reset();\n            });\n        });\n        return this;\n    },\n\n    /** Renders/appends dom elements of the form */\n    _renderForm: function() {\n        $(\".tooltip\").remove();\n        var options = this.model.attributes;\n        this.message = new Ui.UnescapedMessage();\n        this.section = new FormSection.View(this, {\n            inputs: options.inputs\n        });\n        this.portlet = new Portlet.View({\n            icon: options.icon,\n            title: options.title,\n            cls: options.cls,\n            operations: !options.hide_operations && options.operations,\n            buttons: options.buttons,\n            collapsible: options.collapsible,\n            collapsed: options.collapsed,\n            onchange_title: options.onchange_title\n        });\n        this.portlet.append(this.message.$el);\n        this.portlet.append(this.section.$el);\n        this.$el.empty();\n        options.inputs && this.$el.append(this.portlet.$el);\n        options.message &&\n            this.message.update({\n                persistent: true,\n                status: options.status,\n                message: options.message\n            });\n        Galaxy.emit.debug(\"form-view::initialize()\", \"Completed\");\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-view.js"],"sourceRoot":""}