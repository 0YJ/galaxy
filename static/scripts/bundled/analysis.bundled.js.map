{"version":3,"sources":["webpack:///analysis.bundled.js","webpack:///./galaxy/scripts/mvc/ui/ui-popover.js","webpack:///./galaxy/scripts/mvc/dataset/states.js","webpack:///./galaxy/scripts/mvc/ui/ui-select.js","webpack:///./galaxy/scripts/ui/fa-icon-button.js","webpack:///./galaxy/scripts/mvc/upload/upload-model.js","webpack:///./galaxy/scripts/mvc/tag.js","webpack:///./galaxy/scripts/layout/router.js","webpack:///./galaxy/scripts/mvc/upload/upload-settings.js","webpack:///./galaxy/scripts/mvc/upload/upload-ftp.js","webpack:///./galaxy/scripts/mvc/upload/upload-extension.js","webpack:///./galaxy/scripts/utils/uploadbox.js","webpack:///./galaxy/scripts/mvc/collection/list-collection-creator.js","webpack:///./galaxy/scripts/mvc/history/hdca-model.js","webpack:///./galaxy/scripts/mvc/collection/collection-model.js","webpack:///./galaxy/scripts/mvc/history/history-model.js","webpack:///./galaxy/scripts/mvc/history/history-contents.js","webpack:///./galaxy/scripts/mvc/history/history-preferences.js","webpack:///./galaxy/scripts/mvc/list/list-item.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-li.js","webpack:///./galaxy/scripts/mvc/collection/collection-li.js","webpack:///./galaxy/scripts/mvc/form/form-wrapper.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-model.js","webpack:///./galaxy/scripts/mvc/history/history-content-model.js","webpack:///./galaxy/scripts/mvc/collection/base-creator.js","webpack:///./galaxy/scripts/utils/natural-sort.js","webpack:///./galaxy/scripts/ui/hoverhighlight.js","webpack:///./galaxy/scripts/mvc/tool/tool-form-composite.js","webpack:///./galaxy/scripts/mvc/history/copy-dialog.js","webpack:///./galaxy/scripts/mvc/ui/error-modal.js","webpack:///./galaxy/scripts/mvc/base/controlled-fetch-collection.js","webpack:///./galaxy/scripts/mvc/history/hda-model.js","webpack:///./galaxy/scripts/mvc/list/list-view.js","webpack:///./galaxy/scripts/ui/search-input.js","webpack:///./galaxy/scripts/mvc/history/hda-li.js","webpack:///./galaxy/scripts/mvc/history/hdca-li.js","webpack:///./galaxy/scripts/mvc/collection/collection-view.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-li-edit.js","webpack:///./galaxy/scripts/mvc/annotation.js","webpack:///./galaxy/scripts/apps/analysis.js","webpack:///./galaxy/scripts/apps/panels/tool-panel.js","webpack:///./galaxy/scripts/mvc/upload/upload-view.js","webpack:///./galaxy/scripts/mvc/upload/upload-button.js","webpack:///./galaxy/scripts/mvc/upload/default/default-view.js","webpack:///./galaxy/scripts/mvc/upload/default/default-row.js","webpack:///./galaxy/scripts/mvc/lazy/lazy-limited.js","webpack:///./galaxy/scripts/mvc/upload/composite/composite-view.js","webpack:///./galaxy/scripts/mvc/upload/composite/composite-row.js","webpack:///./galaxy/scripts/mvc/upload/collection/collection-view.js","webpack:///./galaxy/scripts/mvc/upload/collection/collection-row.js","webpack:///./galaxy/scripts/mvc/workflow/workflow-icons.js","webpack:///./galaxy/scripts/apps/panels/history-panel.js","webpack:///./galaxy/scripts/mvc/history/options-menu.js","webpack:///./galaxy/scripts/mvc/history/history-view-edit-current.js","webpack:///./galaxy/scripts/utils/ajax-queue.js","webpack:///./galaxy/scripts/mvc/history/history-view-edit.js","webpack:///./galaxy/scripts/mvc/history/history-view.js","webpack:///./galaxy/scripts/ui/loading-indicator.js","webpack:///./galaxy/scripts/mvc/history/hda-li-edit.js","webpack:///./galaxy/scripts/mvc/history/hdca-li-edit.js","webpack:///./galaxy/scripts/mvc/collection/collection-view-edit.js","webpack:///./galaxy/scripts/mvc/collection/collection-li-edit.js","webpack:///./galaxy/scripts/mvc/collection/pair-collection-creator.js","webpack:///./galaxy/scripts/mvc/collection/list-of-pairs-collection-creator.js","webpack:///./galaxy/scripts/utils/levenshtein.js","webpack:///./galaxy/scripts/mvc/user/user-preferences.js","webpack:///./galaxy/scripts/mvc/user/user-custom-builds.js","webpack:///./galaxy/scripts/mvc/grid/grid-shared.js","webpack:///./galaxy/scripts/mvc/workflow/workflow.js","webpack:///./galaxy/scripts/mvc/workflow/workflow-model.js","webpack:///./galaxy/scripts/mvc/history/history-list.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-error.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-edit-attributes.js"],"names":["webpackJsonp","module","exports","__webpack_require__","Backbone","_","$","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","Utils","View","extend","optionsDefault","with_close","title","placement","container","body","initialize","options","this","setElement","_template","uid","defaults","parent","append","el","$title","$close","$body","self","on","e","visible","is","target","has","length","hide","render","html","$el","removeClass","addClass","css","_get_placement","show","off","newTitle","empty","remove","top","left","width","_get_width","height","$container","container_width","container_height","_get_height","container_position","position","indexOf","parseInt","apply","call","Object","defineProperty","value","STATES","UPLOAD","QUEUED","RUNNING","SETTING_METADATA","NEW","EMPTY","OK","PAUSED","FAILED_METADATA","NOT_VIEWABLE","DISCARDED","ERROR","READY_STATES","NOT_READY_STATES","default","placeholder","data","multiple","minimumInputLength","initialData","merge","console","log","select_data","_refresh","_setValue","onchange","new_value","before","_getValue","after","text","select2","disabled","enable","disable","add","push","id","del","index","_getIndex","splice","update","key","select_opt","containerCssClass","ajax","dropdownCssClass","escapeMarkup","formatResult","formatSelection","initSelection","selected","dropdownAutoWidth","findIndex","__WEBPACK_AMD_DEFINE_FACTORY__","root","factory","tooltipConfig","classes","concat","join","href","faIcon","$button","tooltip","isFunction","onclick","click","Model","extension","genome","url_paste","status","info","file_name","file_mode","file_size","file_type","file_path","file_data","percentage","space_to_tab","to_posix_lines","enabled","reset","attr","clear","set","Collection","model","_interopRequireDefault","obj","__esModule","_baseMvc","_baseMvc2","_localization","_localization2","TagsEditor","LoggableMixin","HiddenUntilActivatedViewMixin","tagName","className","select_width","events","show_editor","usePrompt","label","workflow_mode","keydown","hiddenUntilActivated","$activator","_workflowTemplate","_defaultTemplate","$input","tags","_getTagsUsed","_setUpBehaviors","_hashToName","tag","startsWith","slice","_nameToHash","_renderEditor","_renderTags","keydownHandler","which","hideEditor","showEditor","tagsToCSV","get","renderedArray","each","renderString","tagsArray","isArray","isEmpty","map","escape","sort","find","Galaxy","user","event","val","save","added","_addNewTagToTagsUsed","newTag","tagsUsed","contains","stopListening","prototype","toString","_jquery","_jquery2","_queryStringParsing","_queryStringParsing2","_uiMisc","_uiMisc2","Router","page","url","__identifer","Math","random","substr","isEmptyObject","param","params","navigate","trigger","execute","callback","args","name","debug","queryObj","parse","pop","authenticate","access_denied","display","Message","message","persistent","_utils","class_check","class_uncheck","parameters","$cover","$table","listenTo","parameter","$checkbox","_utils2","cls","class_add","class_remove","class_partial","help_enabled","help_text","ftp_upload_site","collection","onadd","onremove","$content","$wait","$help","$number","$disk","$warning","$select","method","success","ftp_files","_index","_renderTable","error","rows","size","ftp_file","_renderRow","bytesToString","_all","attributes","$it","_templateRow","$icon","model_index","ftp_index","path","_switch","hasClass","new_index","counts","reduce","memo","element","ctime","_uiPopover","_uiPopover2","description","findWhere","list","extension_popup","_templateDescription","tmpl","description_url","jQuery","props","uploadpost","config","cnf","progress","maxfilesize","error_filesize","error_default","error_server","error_login","error_message","form","FormData","payload","sizes","files","d","file","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","response","extra_info","responseText","parseJSON","err_msg","statusText","upload","addEventListener","lengthComputable","round","loaded","total","emit","send","fn","uploadinput","opts","ondragover","ondragleave","change","dataTransfer","preventDefault","stopPropagation","dialog","uploadbox","queue_running","mode","filter","queue","f","duplicate","String","queue_index","announce","queue_length","process","queue_stop","complete","select","start","stop","configure","compatible","window","File","FileList","dragover","dragleave","m","alert","createListCollection","contents","defaultHideSourceItems","elements","toJSON","listCollectionCreatorModal","creationFn","hideSourceItems","src","history_content_type","createHDCA","_hdcaModel","_hdcaModel2","_states","_states2","_baseCreator","_baseCreator2","_uiModal","_uiModal2","_naturalSort","DatasetCollectionElementView","_logNamespace","template","toggle","toggleClass","source","discard","view","parentWidth","animate","margin-right","destroy","click .name","click .discard","dragstart","dragend","drop","_click","ev","_clickName","prompt","_clickDiscard","_dragstart","originalEvent","effectAllowed","setData","JSON","stringify","_dragend","_sendToParent","ListCollectionCreator","CollectionCreatorMixin","elementViewClass","collectionClass","HistoryListDatasetCollection","minElements","defaultAttributes","TypeError","oncreate","oncancel","autoscrollDist","highlightClr","footerSettings",".hide-originals","metric","creator","initialElements","_setUpCommonSettings","_instanceSetUp","_elementsSetUp","selectedIds","$dragging","blocking","invalidElements","workingElements","elementViews","_ensureElementIds","_validateElements","_mangleDuplicateNames","_sortElements","forEach","hasOwnProperty","uniqueId","problem","_isElementInvalid","state","deleted","purged","counter","existingNames","currName","Error","speed","_renderInvalid","templates","main","_renderHeader","_renderMiddle","_renderFooter","_addPluginComponents","focus","invalidInitial","problems","$header","header","prepend","helpContent","_invalidElementsAlert","$middle","middle","_renderList","hoverhighlight","_showAlert","_disableNameAndCreate","isUndefined","prop","$list","_renderClearSelected","$tmp","removeElementView","elementView","_createElementView","children","invoke","_listenToElementView","addElementView","without","_renderNoElementsLeft","noElementsLeft","_elementToJSON","createList","hideOriginals","always","fail","done","_errorHandler","once","content","responseJSON","click .more-help","click .less-help","click .main-help","click .header .alert button","click .reset","click .clear-selected","click .collection-elements","dragover .collection-elements","drop .collection-elements","collection-element.dragstart .collection-elements","collection-element.dragend   .collection-elements","change .collection-name","keydown .collection-name","change .hide-originals","click .cancel-create","click .create-collection","clearSelectedElements","_dragoverElements","_checkForAutoscroll","clientY","$nearest","_getNearestElement","$placeholder","$element","y","offset","scrollTop","upperDist","lowerDist","outerHeight","lis","toArray","i","$li","halfHeight","floor","_dropElements","dropEffect","insertBefore","insertAfter","last","_syncOrderToDom","newElements","_elementDragstart","_elementDragend","_creatorTemplates","footer","collectionCreatorModal","CreatorClass","deferred","Deferred","modal","reject","resolve","closing_events","_collectionCreator","buildHDCASave","_super","isNew","urlRoot","type","_collectionModel","_collectionModel2","_historyContentModel","_historyContentModel2","hcontentMixin","HistoryContentMixin","ListDC","ListDatasetCollection","PairDC","PairDatasetCollection","ListPairedDC","ListPairedDatasetCollection","ListOfListsDC","ListOfListsDatasetCollection","clone","collection_type","model_class","HistoryPairDatasetCollection","HistoryListPairedDatasetCollection","HistoryListOfListsDatasetCollection","_datasetModel","_datasetModel2","DatasetCollectionElementMixin","element_identifier","element_index","element_type","_mergeObject","object","element_id","constructor","idAttribute","arguments","DatasetCollectionElement","DCECollection","DatasetDCE","DatasetAssociation","mixin","warn","_downloadQueryParameters","hasDetails","DatasetDCECollection","DatasetCollection","SearchableModelMixin","_createElementsModel","unset","silent","parent_hdca_id","json","inReadyState","populated","isDeletedOrPurged","getVisibleContents","filters","parsed","create_time","Date","update_time","delete","when","undelete","searchAttributes","NestedDCDCE","NestedDCDCECollection","NestedPairDCDCE","NestedPairDCDCECollection","NestedListDCDCE","NestedListDCDCECollection","_historyContents","_historyContents2","_historyPreferences","_controlledFetchCollection","_controlledFetchCollection2","History","UPDATE_DELAY","contents_active","contents_states","contentsClass","HistoryContents","searchAliases","historyJSON","logger","history","historyId","order","_setUpListeners","_setUpCollectionListeners","updateTimeoutId","msg","details","clearUpdateTimeout","change:id","newId","makeArray","contentsShown","contentsActive","shown","active","includeDeleted","includeHidden","hidden","nice_size","ownedByCurrUser","isAnonymous","numOfUnfinishedJobs","unfinishedJobIds","numOfUnfinishedShownContents","runningAndActive","_fetchContentRelatedAttributes","contentRelatedAttrs","fetch","keys","refresh","lastUpdateTime","allFetched","currentPage","fetchPage","fetchUpdated","serverResponseDatetime","getResponseHeader","err","checkForUpdates","_delayThenUpdate","setTimeout","delay","historyData","clearTimeout","fetchWithContents","contentsOptions","then","setHistoryId","fetchContents","fetchCurrentPage","_delete","purge","copy","current","allDatasets","postData","history_id","all_datasets","post","setAsCurrent","getJSON","_collectionSuper","InfinitelyScrollingCollection","HistoryCollection","limitOnFirstFetch","limitPerFetch","models","currentHistoryId","setUpListeners","change:deleted","copied","original","newData","setCurrent","set-as-current","oldCurrentId","_buildFetchData","_buildFetchFilters","superFilters","fetchFirst","limit","encoded_id-in","fetchMore","comparators","buildComparator","ascending","name-dsc","size-asc","currentHistory","unshift","create","hdas","historyOptions","xhrOptions","_hdaModel","_hdaModel2","_historyPreferences2","_ajaxQueue","_ajaxQueue2","PaginatedCollection","attrs","HistoryDatasetAssociation","validationError","limitPerPage","limitPerProgressiveFetch","_setUpWebStorage","initialSettings","storage","HistoryPrefs","historyStorageKey","include-deleted","newVal","include-hidden","hid","hid-asc","running","c","getByHid","haveDetails","all","visibleAndUndeleted","setIncludeDeleted","setting","isBoolean","result","setIncludeHidden","prefs","expandedIds","values","v","_fetchParams","getTotalItemCount","since","update_time-ge","toISOString","fetchDeleted","fetchHidden","fetchAllDetails","detailsFlag","fetchCollectionCounts","_filterAndUpdate","filterParams","updateWhat","updateArgs","fetched","modelArray","currJson","ajaxQueue","ajaxFn","AjaxQueue","reverse","isString","progressivelyFetchDetails","_recursivelyFetch","_options","detailKeys","defer","notify","limitPerCall","isCopyable","contentsJSON","copyableModelClasses","isObject","contentType","LibraryDatasetDatasetAssociation","HistoryDatasetCollectionAssociation","elementIdentifiers","collectionType","hide_source_items","element_identifiers","haveSearchDetails","matches","matchesWhat","SessionStorageModel","show_deleted","show_hidden","addExpanded","removeExpanded","isExpanded","contentId","allExpanded","clearExpanded","storageKeyPrefix","clearAll","sessionStorage","removeItem","ExpandableView","expanded","fxSpeed","$newRender","_buildNewRender","_queueNewRender","$details","replaceWith","_renderDetails","_swapNewRender","next","fadeOut","fadeIn","$where","$newDetails","toggleExpanded","expand","collapse","_fetchModelDetails","_expand","slideDown","slideUp","ListItemView","SelectableViewMixin","DraggableViewMixin","isSelectable","_renderWarnings","_renderTitleBar","_renderPrimaryActions","_renderSubtitle","selectable","showSelector","draggable","draggableOn","$warnings","warnings","templateFn","titleBar","subtitle","click .title-bar","keydown .title-bar","click .selector","_clickTitleBar","altKey","toggleSelect","_keyDownTitleBar","keyCode","wrapTemplate","FoldoutListItemView","foldoutStyle","foldoutPanelClass","foldout","_createFoldoutPanel","_attachFoldout","FoldoutClass","_getFoldoutPanelClass","_getFoldoutPanelOptions","$whereTo","_expandByDrilldown","detailsTemplate","_listItem","_listItem2","_faIconButton","_faIconButton2","DatasetListItemView","linkTarget","changedAttributes","changed","_renderNametags","_renderDisplayButton","displayBtnData","urls","frame","addDataset","noAccess","_renderSecondaryActions","_renderSummary","_renderDetailMessages","_renderDisplayApplications","summaryRenderFn","summaries","unknown","detailMessages","displayApplications","_renderDownloadButton","_renderShowParamsButton","show_params","hasData","download","_renderMetaFileDownloadButton","meta_file","meta_download","click .display-btn","click .params-btn","click .download-btn","failed_metadata","noAccessTemplate","summaryTemplates","detailMessageTemplates","resubmitted","displayApplicationsTemplate","_datasetLi","_datasetLi2","DCListItemView","hasUser","$selector","titleBarTemplate","subtitleTemplate","DCEListItemView","DatasetDCEListItemView","NestedDCDCEListItemView","_formView","_formView2","redirect","icon","inputs","buttons","submit","Button","submit_tooltip","submit_title","submit_icon","_submit","success_message","location","matchModel","input","input_id","field_list","_showMessage","parents","first","searchableMixin","accessible","data_type","file_ext","meta_files","misc_blurb","misc_info","_generateUrls","edit","report_error","rerun","visualization","currModel","newState","previous","ready","dataset","wait","hda","responseObj","format","database","blurb","nameAndId","DatasetAssociationCollection","ids","item","notReady","startingLength","responses","ajaxFns","chain","curr","shift","isVisible","unhide","_validationWarning","what","_changeHideOriginals","_changeName","_getName","_nameCheckForEnter","_clickCreate","_clickMoreHelp","_clickLessHelp","_toggleHelp","alertClass","_hideAlert","_cancelCreate","$footer","property","selector","naturalSort","a","b","re","x","toLowerCase","nC","fromCharCode","xN","replace","split","yN","xD","getTime","yD","oFxNcL","oFyNcL","cLoc","numS","max","parseFloat","scope","color","$this","targetSelector","mouseover","background","mouseout","_deferred","_deferred2","_formData","_formData2","_toolFormBase","_toolFormBase2","_webhooks","_webhooks2","_workflowIcons","_workflowIcons2","$message","$steps","_configure","resize","step_index","margin","child","_handleWorkflowParameter","match","exec","wp_name","wp_inputs","wp_count","style","links","forms","steps","parms","step","step_type","step_label","step_name","annotation","step_version","fixed_title","help","citations","collapsible","collapsed","_isDataStep","sustain_version","sustain_repeats","sustain_conditionals","narrow","text_enable","text_disable","cls_enable","cls_disable","errors","messages","initial_errors","hide_operations","needs_refresh","always_refresh","visitInputs","output_connections","output_connection","sub_step","j","input_step_index","connections_by_name","connection","input_name","step_linked","output_name","wp_input","wp_linked","backdrop","post_job_actions","pja","action_arguments","arg","data_resolved","context","is_runtime_value","__class__","is_data_input","data_ref","is_workflow","default_value","flavor","optional","collapsible_value","collapsible_preview","_renderMessage","_renderParameters","_renderHistory","_renderStep","execute_btn","_execute","Label","fade","step_version_changes","wp_form","input_list","input_def","_refreshStep","_append","history_form","test_param","cases","promise","postchange","current_state","tool_id","tool_version","version","request","portlet","short_str","is_simple_input","hide_label","link","ignore","show_progress","wait_text","field","source_step","wp_field","wp_value","_refreshHistory","currHistoryPanel","_refresh_history","_enabled","history_form_data","job_def","new_history_name","replacement_params","parameters_normalized","batch","validated","job_inputs","job_input_id","input_value","highlight","_templateSuccess","WebhookView","toolId","toolVersion","input_found","err_data","step_related_errors","error_messages","matchResponse","_templateError","Close","lst","sanitize","_errorModal","_errorModal2","CopyDialog","defaultName","submitLabel","errorMessage","progressive","activeLabel","allLabel","anonWarning","_showAjaxIndicator","indicator","margin-top","checkNameAndCopy","copyAllDatasets","ajaxErrorModal","rejectWith","autoClose","defaultCopyNameFn","nameFn","defaultCopyName","defaultCopyWhat","allowAll","originalClosingCallback","closing_callback","isAnon","copyWhat","cancelled","ImportDialog","historyCopyDialog","useImport","_l","Ok","appendTo","DETAILS_MSG","errorModal","offlineErrorModal","badGatewayErrorModal","CONTACT_MSG","DEFAULT_AJAX_ERR_MSG","_ajaxDetails","raven","Raven","userAgent","navigator","onLine","omit","functions","lastAjax","_underscore","_underscore2","_backbone","_backbone2","ControlledFetchCollection","setOrder","changed-order","_buildFetchOptions","traditional","_fetchFiltersToAjaxData","pick","filterMap","q","qv","k","update_time-asc","create_time-asc","comparator","shouldPaginate","getLastPage","getPageCount","getPageLimitOffset","pageNum","constrainPageNum","min","fetchPrevPage","fetchNextPage","lastFetched","fetchedData","numFetched","fetchAll","_loadingIndicator","_loadingIndicator2","ListPanel","viewClass","emptyMsg","noneFoundMsg","searchPlaceholder","searchFor","selecting","lastSelected","dragItems","views","_createDefaultCollection","$scrollContainer","loading","_showLoadingIndicator","loading-done","_hideLoadingIndicator","_setUpViewListeners","changes","renderAll","removed","renderItems","addItemView","removeItemView","view:selected","shiftKey","lastSelectedView","viewFromModelId","selectRange","showSelectors","view:de-selected","_renderControls","_renderTitle","_renderSearch","$controls","controls","panel","_renderMultiselectActionMenu","$menu","actions","multiselectActions","$newMenu","$actions","action","func","$messages","$emptyMessage","freeViews","shownModels","_filterCollection","itemModel","_createItemView","_attachItems","_renderEmptyMessage","bind","_filterItem","every","matchesAll","ViewClass","_getItemViewClass","_getItemViewOptions","_setUpItemViewListeners","_destroyItemView","_destroyItemViews","Array","getSelectedModels","_renderItemView$el","expandAll","collapseAll","modelIndex","_attachView","useFx","_insertIntoListAt","$what","eq","viewFromModel","viewsWhereModel","properties","isMatch","viewRange","viewA","viewB","indexA","indexB","searchInput","initialVal","onfirstsearch","_firstSearch","onsearch","searchItems","onclear","clearSearch","force","$search","THROTTLE_SELECTOR_FX_AT","hideSelectors","hideSelector","toggleSelectors","selectAll","deselectAll","deselect","range","getSelectedViews","scrollPosition","scrollTo","pos","scrollToTop","scrollToItem","scrollToId","click .select-all","click .deselect-all","ModelListPanel","modelCollectionKey","setModel","freeModel","oldModelId","_setUpModelListeners","controlsTemplate","parentNode","clearSearchInput","blur","search","searchTerms","firstSearch","inputTemplate","KEYCODE_ESC","KEYCODE_RETURN","$parentNode","inputVal","minSearchLen","escWillClear","oninit","keyup","s","HDAListItemView","_collectionLi","_collectionLi2","_collectionView","_collectionView2","HDCAListItemView","change:tags change:populated change:visible","ListCollectionView","PairCollectionView","ListOfPairsCollectionView","ListOfListsCollectionView","_listView","_listView2","CollectionView","DatasetDCEViewClass","NestedDCDCEViewClass","panelStack","parentName","downloadUrl","expanded:drilldown","drilldown","_expandDrilldownPanel","collapsed:drilldown","_collapseDrilldownPanel","click .navigation .back","close","_tag","_tag2","_annotation","_annotation2","DatasetListItemEdit","purgeAllowed","tagsEditorShown","annotationEditorShown","_renderEditButton","_renderDeleteButton","editBtnData","router","dataset_id","deletedAlready","_renderAnnotation","_makeDbkeyEditLink","_renderToolHelpButton","datasetID","jobID","creating_job","parseToolBuild","helpString","parseHTML","parseToolID","_renderErrButton","_renderRerunButton","_renderVisualizationsButton","job_id","visualizations","$visualizations","_addScratchBookFn","addBack","$links","tagsEditor","onshowFirstTime","onshow","onhide","annotationEditor","AnnotationEditor","editableDbkey","click .undelete-link","click .purge-link","click .edit-btn","click .delete-btn","click .rerun-btn","click .report-err-btn","click .visualization-btn","click .dbkey a","_clickUndeleteLink","_clickPurgeLink","confirm","visualizationsTemplate","$annotation","make_text_editable","use_textarea","on_finish","newAnnotation","_galaxy","_galaxy2","_router","_router2","_toolPanel","_toolPanel2","_historyPanel","_historyPanel2","_page","_page2","_toolForm","_toolForm2","_formWrapper","_formWrapper2","_userPreferences","_userPreferences2","_userCustomBuilds","_userCustomBuilds2","_tours","_tours2","_gridView","_gridView2","_gridShared","_gridShared2","_workflow","_workflow2","_historyList","_historyList2","_toolFormComposite","_toolFormComposite2","_datasetError","_datasetError2","_datasetEditAttributes","_datasetEditAttributes2","app","bootstrapped","GalaxyApp","AnalysisRouter","routes","(/)","(/)root*","(/)tours(/)(:tour_id)","(/)user(/)","(/)user(/)(:form_id)","(/)workflow(/)","(/)workflow/run(/)","(/)pages(/)create(/)","(/)pages(/)edit(/)","(/)pages(/)(:action_id)","(/)visualizations(/)edit(/)","(/)visualizations/(:action_id)","(/)workflows/list_published(/)","(/)histories(/)rename(/)","(/)histories(/)permissions(/)","(/)histories(/)(:action_id)","(/)datasets(/)list(/)","(/)workflow/import_workflow","(/)custom_builds","(/)datasets/edit","(/)datasets/error","require_login","show_tours","tour_id","giveTour","ToursView","show_user","show_user_form","form_id","user_id","show_visualizations","action_id","plural","show_visualizations_edit","show_workflows_published","url_base","dict_format","show_histories","show_histories_rename","show_histories_permissions","show_datasets","show_pages","show_pages_create","show_pages_edit","show_workflows","show_run","_loadWorkflow","show_import_workflow","ImportWorkflowView","show_custom_builds","historyPanel","historyView","show_dataset_edit_attributes","show_dataset_error","home","toolPanel","_loadCenterIframe","_loadToolForm","workflow_id","m_c","m_a","decodeURIComponent","getQueryString","error_msg","Left","Right","_tools","_tools2","_uploadView","_uploadView2","ToolPanel","stored_workflow_menu_entries","tool_search","ToolSearch","tools","ToolCollection","toolbox","tool_panel","layout","toolbox_in_panel","tool_panel_view","ToolPanelView","upload_button","nginx_upload_path","default_genome","default_extension","_templateAllWorkflow","menu_entry","_templateWorkflowLink","stored_workflow","encoded_stored_workflow_id","_templateTool","tool","wf","_uiTabs","_uiTabs2","_uploadButton","_uploadButton2","_defaultView","_defaultView2","_compositeView","_compositeView2","auto","list_extensions","list_genomes","ui_button","onunload","datatypes","composite_files","a_text","b_text","datatypes_disable_auto","genomes","current_user","tabs","default_view","composite_view","collection_view","title_separator","currentFtp","toData","items","file_count","dbkey","it","prefix","$progress","_uploadModel","_uploadModel2","_defaultRow","_defaultRow2","_uploadFtp2","_uploadFtp3","_uploadExtension","_uploadExtension2","_uiSelect","_uiSelect2","_lazyLimited","_lazyLimited2","upload_size","$uploadbox","$uploadtable","btnLocal","btnFtp","_eventFtp","btnCreate","_eventCreate","btnStart","_eventStart","btnStop","_eventStop","btnReset","_eventReset","btnClose","button","_eventAnnounce","_eventProgress","_eventSuccess","_eventError","_eventComplete","ftp","select_extension","ext","_changeExtension","select_genome","_changeGenome","loader","new_content","upload_row","_eventRemove","enable_reset","enable_start","enable_sources","show_table","new_model","_uploadPercentage","upload_completed","refreshContents","_uploadFtp","defaults_only","_uploadSettings","_uploadSettings2","status_classes","init","queued","$mode","$text","$size","$info_text","$info_progress","$text_content","$settings","$symbol","$progress_bar","$percentage","settings","_removeRow","showExtensionInfo","_showSettings","_refreshPercentage","_refreshStatus","_refreshInfo","_refreshGenome","_refreshExtension","_refreshFileSize","_refreshType","content_list","_reset","_remove","_done","model_id","_compositeRow","_compositeRow2","file_desc","where","$source","$status","$file_name","$file_desc","$file_size","_refreshReady","button_menu","ButtonMenu","pull","addMenu","_showFtp","_refreshFileName","_refreshMode","offsetHeight","_collectionRow","_collectionRow2","_listCollectionCreator","btnBuild","_eventBuild","updateExtension","select_collection","updateCollectionType","updateGenome","_updateScreen","hids","pluck","allHids","selection","buildCollection","enable_build","data_input","data_collection_input","subworkflow","pause","_optionsMenu","_optionsMenu2","_historyViewEditCurrent","_historyViewEditCurrent2","HistoryPanel","userIsAnonymous","allow_user_dataset_purge","CurrentHistoryView","listenToGalaxy","buttonRefresh","ButtonLink","loadCurrentHistory","buttonOptions","buttonViewMulti","connectToQuotaMeter","quotaMeter","optionsMenu","anonymous","buildMenu","menu","menuOption","anon","galaxy_main","_popupMenu","_popupMenu2","_copyDialog","_copyDialog2","createNewHistory","user_action","async","webhooks","webhooks_menu","webhook","activate","_historyModel","_historyViewEdit","_historyViewEdit2","HistoryViewPrefs","storageKey","HistoryViewEdit","HDCAViewClass","preferences","currentContentId","loadHistory","switchToHistory","change:nice_size change:size","oldState","_debouncedScrollCaptureHandler","debounce","prependTo","_renderQuotaMessage","quotaMsg","_setCurrentContentById","setCurrentContent","delegateEvents","click .uploader-link","click .get-data-link","$toolMenu","galaxy","center-frame:load","pathToMatch","fullpath","hdaId","useToURLRegexMap","regex","use","center-panel:load","showQuotaMessage","hideQuotaMessage","isOverQuota","clearMessages","$target","currentTarget","not","$msg","unhideHidden","deleteHidden","quotaMsgTemplate","initialFunctions","numToProcess","NamedAjaxQueue","names","fnIndex","causeFail","_historyView","_historyView2","_hdaLiEdit","_hdaLiEdit2","_hdcaLiEdit","_hdcaLiEdit2","_listCollectionCreator2","_pairCollectionCreator","_pairCollectionCreator2","_listOfPairsCollectionCreator","_listOfPairsCollectionCreator2","HistoryView","HDAViewClass","HDAListItemEdit","HDCAListItemEdit","droptarget:drop","dataDropped","dropTargetOff","view:attached view:removed","_renderCounts","search:loading-progress","_renderSearchProgress","search:searching","_renderSearchFindings","updateHistoryDiskSize","_handleItemDeletedChange","change:visible","_handleItemVisibleChange","change:purged","fetching-deleted","fetching-hidden","fetching-deleted-done fetching-hidden-done","toggleHDATagEditors","toggleHDAAnnotationEditors","newName","previousName","_collectionActions","createFunc","createPairCollection","createListOfPairsCollection","_handleItemDeletion","_handleItemUndeletion","_handleItemHidden","_handleItemUnhidden","showOrHide","click .show-selectors-btn","click .toggle-deleted-link","toggleShowDeleted","click .toggle-hidden-link","toggleShowHidden","found","dropTargetOn","dropTarget","dropHandlers","dragenter","$dropTarget","_renderDropTarget","_renderDropTargetHelp","evName","_dropHandlers","dropTargetToggle","getData","countsTemplate","foundTemplate","_historyModel2","_hdaLi","_hdaLi2","_hdcaLi","_hdcaLi2","_userModel","FETCH_COLLECTION_COUNTS_DELAY","detailedFetchTimeoutId","_clearDetailedFetchTimeout","errorHandler","views:ready view:attached view:removed","_renderSelectButton","view:attached","fetching-more","_toggleContentsLoadingIndicator","fetching-more-done","$indicator","$existing","$emptyMsg","_renderPagination","_renderSomeItems","$paginationControls","pagination","click > .controls .prev","click > .controls .next","change > .controls .pages","click .messages [class$=message]","_clickPrevPage","_clickNextPage","_changePageSelect","store","scrollToHid","ordinalIndicator","number","numStr","charAt","mainTemplate","paginationTemplate","LoadingIndicator","cover","z-index","bottom","right","opacity","background-color","text-align","font-style","_datasetLiEdit","_datasetLiEdit2","click .unhide-link","_collectionViewEdit","_collectionViewEdit2","ListCollectionViewEdit","PairCollectionViewEdit","ListOfPairsCollectionViewEdit","ListOfListsCollectionViewEdit","_collectionLiEdit","_collectionLiEdit2","CollectionViewEdit","DatasetDCEListItemEdit","NestedDCDCEListItemEdit","NestedPairCollectionViewEdit","DCListItemEdit","DCEListItemEdit","pairCollectionCreatorModal","PairedDatasetCollectionElementView","identifier","PairCollectionCreator","_createForwardElementView","_createReverseElementView","swap","click .swap","autoPairFnBuilder","getRegExps","_regexps","RegExp","createPair","listA","listB","aInBIndex","bInAIndex","_pair","preprocessMatch","regexps","matchTo","possible","bestMatch","score","paired","scoreThreshold","pairedCollectionCreatorModal","_levenshtein","_levenshtein2","_naturalSort2","PairView","pair","PairedCollectionCreator","datasets","DEFAULT_FILTERS","automaticallyPair","strategy","matchPercentage","twoPassAutopairing","initialList","commonFilters","strategies","DEFAULT_STRATEGY","removeExtensions","unpairedPanelHidden","pairedPanelHidden","_dataSetUp","illumina","Rs","simple","lcs","levenshtein","unpaired","_sortInitialList","_ensureIds","autoPair","_sortDatasetList","_splitByFilters","_filter","test","regexFilters","stringFilter","_addToUnpaired","binSearchSortedIndex","low","hi","mid","compared","autopairSimple","autopairLevenshtein","distance","autopairLCS","_naiveStartingAndEndingLCS","s1","s2","fwdLCS","revLCS","fwd","rev","_createPair","_guessNameForPair","forward","fwdName","revName","lastDotIndex","lastIndexOf","_unpair","unpairAll","pairs","_pairToJSON","ajaxData","dataType","_ajaxErrHandler","_renderFilters","_renderUnpaired","_renderPaired","$fwd","$rev","$prd","_renderUnpairedDisplayStr","_renderUnpairedEmpty","_renderPairButton","_renderUnpairedDataset","_adjUnpairedOnScrollbar","_renderUnpairedNotShown","numFiltered","$unpairedColumns","$firstDataset","ucRight","outerWidth","dsRight","rightDiff","_renderPairedEmpty","pairView",".remove-extensions","_chooseFiltersPopover","filterChoice","val1","val2","$popoverContent","filterSet","popover","splitView","msgClass","hideUnpaired","click .forward-column .column-title","click .reverse-column .column-title","click .unpair-all-link","change .forward-unpaired-filter input","focus .forward-unpaired-filter input","click .autopair-link","click .choose-filters .filter-choice","click .clear-filters-link","change .reverse-unpaired-filter input","focus .reverse-unpaired-filter input","click .forward-column .dataset.unpaired","click .reverse-column .dataset.unpaired","click .paired-column .dataset.unpaired","click .unpaired-columns","mousedown .unpaired-columns .dataset","click .paired-column-title","mousedown .flexible-partition-drag","click .paired-columns .dataset.paired","click .paired-columns","click .paired-columns .pair-name","click .unpair-btn","dragover .paired-columns .column-datasets","drop .paired-columns .column-datasets","pair.dragstart .paired-columns .column-datasets","pair.dragend   .paired-columns .column-datasets","change .remove-extensions","toggleExtensions","_clickShowOnlyUnpaired","hidePaired","_clickShowOnlyPaired","_clickUnpairAll","_clickAutopair","_clickFilterChoice","$selected","_hideChooseFilters","_clearFilters","_clickUnpairedDataset","toggleSelectUnpaired","$dataset","waitToPair","pairAllSelected","fwds","revs","clearSelectedUnpaired","_mousedownUnpaired","$startTarget","moveListener","document","one","_clickPairRow","rowIndex","_startPartitionDrag","endDrag","unbind","trackMouse","pageY","startingY","adjPartition","mousemove","adj","$unpaired","$paired","unpairedHi","pairedHi","movingUpwards","flex","selectPair","clearSelectedPaired","_clickPairName","$name","$pair","customizedName","_clickUnpair","pairIndex","_dragoverPairedColumns","_getNearestPairedDatasetLi","_dropPairedColumns","_syncPairsToDom","newPaired","_pairDragstart","_pairDragend","_printList","_printPair","levenshteinDistance","matrix","information","password","communication","permissions","api_key","toolbox_filters","openids","custom_builds","logout","Cancel","Sign out","session_csrf_token","$preferences","email","use_remote_user","_addLink","enable_communication_server","has_user_tool_filters","enable_openid","_templateFooter","$row","_templateLink","$a","nice_total_disk_usage","enable_quotas","quota","_uiTable","_uiTable2","installed_builds","Select","empty_text","error_text","table","addHeader","appendHeader","$installed","$form","_renderForm","delAll","ButtonIcon","area","input_field","_renderHelp","len_type","_templateFasta","_templateLen","grid","_templateShared","$tmpl","shared_by_others","display_url","username","slug","mod_toastr","TAGS","WORKFLOWS","QueryStringParsing","WorkflowItemView","bindAll","timeOut","click #show-in-tool-panel","click #delete-workflow","click #rename-workflow","click #copy-workflow","_rowTemplate","showInToolPanel","removeWorkflow","wfName","renameWorkflow","oldName","copyWorkflow","wfJson","currentOwner","at","resp","errorThrown","jqXHR","textStatus","wfId","checkboxHtml","_templateActions","renderTagEditor","TagEditor","WorkflowCollection","appendItem","unhighlightDropZone","readWorkflowFiles","reader","FileReader","onload","theFile","wf_json","readAsText","_showArgErrors","msg_text","_templateHeader","templateActions","_templateActionButtons","tableTemplate","_templateWorkflowTable","confirmDelete","searchWorkflow","adjustActiondropdown","workflowItemView","workflow","$el_searchinput","$el_tabletr","min_querylen","query","regular_expression","_templateNoWorkflow","tableHtml","_mainTemplate","myexperiment_target_url","baseMVC","WorkflowItem","operation","_showCopyDialog","reload","data_url","job_url","job","render_error_page","error_response","display_message","stderr","_getBugFormTemplate","doNotClear","safe","UnescapedMessage","floating","form_data","_createTabs","initial_message","_reloadHistory","attribute","_getAttribute","conversion","_getConversion","datatype","_getDatatype","permission","_getPermission","operations","submit_attributes","submit_autodetect","submit_conversion","submit_datatype","submit_permission"],"mappings":"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AE+Z,UAEF,qCACA,oDACA,EAAA1P,EAAApF,SAAG,aACH,OACA,6BACA,oDACA,EAAAoF,EAAApF,SAAG,QACH,OACA,SACA,SACA,wCACA,4DACA,WACA,EAAAoF,EAAApF,SAAG,4BACH,wCACA,sCACA,UACFgD,KAAK,KAIXqX,OAAQtf,EAAE+Z,UAEF,6CACA,+CACA,WACA,EAAA1P,EAAApF,SAAG,oCACH,MACA,EAAAoF,EAAApF,SAAG,cACH,OACA,wDACA,WACA,EAAAoF,EAAApF,SAAG,mCACH,MACA,EAAAoF,EAAApF,SAAG,kBACH,OACA,SACA,8DACA,UACFgD,KAAK,KAIXic,OAAQlkB,EAAE+Z,UAEF,iCACA,sBACA,6CACA,EAAA1P,EAAApF,SAAG,0BACH,IACA,8DACA,WACA,SACA,sBACA,0DACA,iBACA,EAAAoF,EAAApF,SAAG,wCACH,OACA,mDACA,EAAAoF,EAAApF,SAAG,QACH,UACA,SACA,SAEA,gDACA,wCACA,oDACA,EAAAoF,EAAApF,SAAG,UACH,YACA,8CACA,2EACA,EAAAoF,EAAApF,SAAG,yCACH,+BACA,YACA,yCACA,oBACA,EAAAoF,EAAApF,SAAG,+BACH,YACA,oBACA,EAAAoF,EAAApF,SAAG,6CACH,YACA,QACA,SACA,SAEA,wCACA,sDACA,EAAAoF,EAAApF,SAAG,eACH,YACA,SACA,UACFgD,KAAK,KAIXkX,YAAanf,EAAE+Z,UAEP,OACA,EAAA1P,EAAApF,UAEQ,oGACA,sGACA,iEACFgD,KAAK,KAEX,OACA,OACA,QACA,EAAAoC,EAAApF,UAEQ,8CACA,qEACFgD,KAAK,KAEX,QACA,QACA,EAAAoC,EAAApF,UAEQ,mEACA,uEACFgD,KAAK,KAEX,QACA,QACA,EAAAoC,EAAApF,UAEQ,+FACA,sGACA,yEACA,mEACFgD,KAAK,KAEX,QACA,QACA,EAAAoC,EAAApF,UAEQ,oGACA,kBACFgD,KAAK,KAEX,QACA,QACA,EAAAoC,EAAApF,UAEQ,wFACFgD,KAAK,KAEX,QACA,cACA,OACA,EAAAoC,EAAApF,UAEQ,4FACA,gEACFgD,KA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AAQtkB,KAAM,OAAQ+wD,EAAK/wD,OAIlEtB,SAAU,WACN,MAAO,2BAGX0Q,UAAWve,EAAEO,UAETkZ,EAAAxU,QAAY2W,uBAAuBqI,mBAG/BhF,OAAQjf,EAAE+Z,UAEF,qCACA,oDACA,EAAA1P,EAAApF,SAAG,aACH,OACA,6BACA,oDACA,EAAAoF,EAAApF,SAAG,QACH,OACA,SACA,SACA,wCACA,+FACA,sCACA,SAEA,uEACA,kDACA,8BACA,6BACA,wBACA,EAAAoF,EAAApF,SAAG,oBACH,UACA,iDACA,SACA,kEACA,6CACA,EAAAoF,EAAApF,SAAG,oBACH,OACA,SACA,SACA,SACA,yDACA,8BACA,6DACA,EAAAoF,EAAApF,SAAG,kBACH,OACA,6DACA,EAAAoF,EAAApF,SAAG,iBACH,aACA,wDACA,EAAAoF,EAAApF,SAAG,aACH,OACA,SACA,SACA,kDACA,8BACA,6BACA,wBACA,EAAAoF,EAAApF,SAAG,oBACH,UACA,iDACA,SACA,kEACA,6CACA,EAAAoF,EAAApF,SAAG,oBACH,OACA,SACA,SACA,SACA,UACFgD,KAAK,KAIXqX,OAAQtf,EAAE+Z,UAGF,iFACA,kDACA,oCACA,SACA,yDACA,oCACA,SACA,kDACA,oCACA,SACA,SACA,mCACA,gDACA,EAAA1P,EAAApF,SAAG,kBACH,WACA,8BACA,iDACA,8BACA,SACA,0DACA,EAAAoF,EAAApF,SAAG,cACH,OACA,SACA,SACA,+EACA,oCACA,UACFgD,KAAK,KAIXic,OAAQlkB,EAAE+Z,UAEF,iCACA,sBACA,6CACA,EAAA1P,EAAApF,SAAG,0BACH,IACA,8DACA,WACA,6CACA,EAAAoF,EAAApF,SAAG,0CACH,IACA,iEACA,WACA,SACA,sBACA,0DACA,iBACA,EAAAoF,EAAApF,SAAG,kCACH,OACA,mDACA,EAAAoF,EAAApF,SAAG,QACH,UACA,SACA,SAEA,gDACA,wCACA,oDACA,EAAAoF,EAAApF,SAAG,UACH,YACA,8CACA,2EACA,EAAAoF,EAAApF,SAAG,yCACH,+BACA,YACA,yCACA,oBACA,EAAA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","file":"analysis.bundled.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/**\n * Popover wrapper\n*/\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils) {\n    var View = Backbone.View.extend({\n        optionsDefault: {\n            with_close: true,\n            title: null,\n            placement: \"top\",\n            container: \"body\",\n            body: null\n        },\n\n        initialize: function initialize(options) {\n            this.setElement(this._template());\n            this.uid = Utils.uid();\n            this.options = _.defaults(options || {}, this.optionsDefault);\n            this.options.container.parent().append(this.el);\n            this.$title = this.$(\".popover-title-label\");\n            this.$close = this.$(\".popover-close\");\n            this.$body = this.$(\".popover-content\");\n\n            // add initial content\n            this.options.body && this.append(this.options.body);\n\n            // add event to hide if click is outside of popup and not on container\n            var self = this;\n            $(\"body\").on(\"mousedown.\" + this.uid, function (e) {\n                // the 'is' for buttons that trigger popups\n                // the 'has' for icons within a button that triggers a popup\n                self.visible && !$(self.options.container).is(e.target) && !$(self.el).is(e.target) && $(self.el).has(e.target).length === 0 && self.hide();\n            });\n        },\n\n        /**\n        * Render popover\n        */\n        render: function render() {\n            this.$title.html(this.options.title);\n            this.$el.removeClass().addClass(\"ui-popover popover fade in\").addClass(this.options.placement);\n            this.$el.css(this._get_placement(this.options.placement));\n\n            // configure close option\n            var self = this;\n            if (this.options.with_close) {\n                this.$close.on(\"click\", function () {\n                    self.hide();\n                }).show();\n            } else {\n                this.$close.off().hide();\n            }\n        },\n\n        /**\n        * Set the popover title\n        * @params{ String }    newTitle    - New popover title\n        */\n        title: function title(newTitle) {\n            if (newTitle !== undefined) {\n                this.options.title = newTitle;\n                this.$title.html(newTitle);\n            }\n        },\n\n        /**\n        * Show popover\n        */\n        show: function show() {\n            this.render();\n            this.$el.show();\n            this.visible = true;\n        },\n\n        /**\n        * Hide popover\n        */\n        hide: function hide() {\n            this.$el.hide();\n            this.visible = false;\n        },\n\n        /**\n        * Append new content to the popover\n        * @params{ Object }  $el - Dom element\n        */\n        append: function append($el) {\n            this.$body.append($el);\n        },\n\n        /**\n        * Remove all content\n        */\n        empty: function empty() {\n            this.$body.empty();\n        },\n\n        /**\n        * Remove popover\n        */\n        remove: function remove() {\n            $(\"body\").off(\"mousedown.\" + this.uid);\n            this.$el.remove();\n        },\n\n        /**\n        * Improve popover location/placement\n        */\n        _get_placement: function _get_placement(placement) {\n            // get popover dimensions\n            var width = this._get_width(this.$el);\n            var height = this.$el.height();\n\n            // get container details\n            var $container = this.options.container;\n            var container_width = this._get_width($container);\n            var container_height = this._get_height($container);\n            var container_position = $container.position();\n\n            // get position\n            var top, left;\n            top = left = 0;\n            if ([\"top\", \"bottom\"].indexOf(placement) != -1) {\n                left = container_position.left - width + (container_width + width) / 2;\n                switch (placement) {\n                    case \"top\":\n                        top = container_position.top - height - 5;\n                        break;\n                    case \"bottom\":\n                        top = container_position.top + container_height + 5;\n                        break;\n                }\n            } else {\n                top = container_position.top - height + (container_height + height) / 2;\n                switch (placement) {\n                    case \"right\":\n                        left = container_position.left + container_width;\n                        break;\n                }\n            }\n            return { top: top, left: left };\n        },\n\n        /**\n        * Returns padding/margin corrected width\n        */\n        _get_width: function _get_width($el) {\n            return $el.width() + parseInt($el.css(\"padding-left\")) + parseInt($el.css(\"margin-left\")) + parseInt($el.css(\"padding-right\")) + parseInt($el.css(\"margin-right\"));\n        },\n\n        /**\n        * Returns padding corrected height\n        */\n        _get_height: function _get_height($el) {\n            return $el.height() + parseInt($el.css(\"padding-top\")) + parseInt($el.css(\"padding-bottom\"));\n        },\n\n        /**\n        * Return the popover template\n        */\n        _template: function _template(options) {\n            return '<div class=\"ui-popover popover fade in\">' + '<div class=\"arrow\"/>' + '<div class=\"popover-title\">' + '<div class=\"popover-title-label\"/>' + '<div class=\"popover-close fa fa-times-circle\"/>' + \"</div>\" + '<div class=\"popover-content\"/>' + \"</div>\";\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n//==============================================================================\n/** Map of possible HDA/collection/job states to their string equivalents.\n *      A port of galaxy.model.Dataset.states.\n */\nvar STATES = {\n    // NOT ready states\n    /** is uploading and not ready */\n    UPLOAD: \"upload\",\n    /** the job that will produce the dataset queued in the runner */\n    QUEUED: \"queued\",\n    /** the job that will produce the dataset is running */\n    RUNNING: \"running\",\n    /** metadata for the dataset is being discovered/set */\n    SETTING_METADATA: \"setting_metadata\",\n\n    // ready states\n    /** was created without a tool */\n    NEW: \"new\",\n    /** has no data */\n    EMPTY: \"empty\",\n    /** has successfully completed running */\n    OK: \"ok\",\n\n    /** the job that will produce the dataset paused */\n    PAUSED: \"paused\",\n    /** metadata discovery/setting failed or errored (but otherwise ok) */\n    FAILED_METADATA: \"failed_metadata\",\n    //TODO: not in trans.app.model.Dataset.states - is in database\n    /** not accessible to the current user (i.e. due to permissions) */\n    NOT_VIEWABLE: \"noPermission\",\n    /** deleted while uploading */\n    DISCARDED: \"discarded\",\n    /** the tool producing this dataset failed */\n    ERROR: \"error\"\n};\n\nSTATES.READY_STATES = [STATES.OK, STATES.EMPTY, STATES.PAUSED, STATES.FAILED_METADATA, STATES.NOT_VIEWABLE, STATES.DISCARDED, STATES.ERROR];\n\nSTATES.NOT_READY_STATES = [STATES.UPLOAD, STATES.QUEUED, STATES.RUNNING, STATES.SETTING_METADATA, STATES.NEW];\n\n//==============================================================================\nexports.default = STATES;\n\n/***/ }),\n/* 12 */,\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n// dependencies\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Utils) {\n    /**\n    * A plugin for initializing select2 input items.\n    * Make sure the select2 library itself is loaded beforehand.\n    * Also the element to which select2 will be appended has to \n    * be created before select2 initialization (and passed as option).\n    */\n    var View = Backbone.View.extend({\n        // options\n        optionsDefault: {\n            css: \"\",\n            placeholder: \"No data available\",\n            data: [],\n            value: null,\n            multiple: false,\n            minimumInputLength: 0,\n            // example format of initial data: \"id:name,55:anotherrole@role.com,27:role@role.com\"\n            initialData: \"\"\n        },\n\n        // initialize\n        initialize: function initialize(options) {\n            // configure options\n            this.options = Utils.merge(options, this.optionsDefault);\n\n            // create new element\n            this.setElement(this._template(this.options));\n\n            // check if container exists\n            if (!this.options.container) {\n                console.log(\"ui-select::initialize() : container not specified.\");\n                return;\n            }\n\n            // add to dom\n            this.options.container.append(this.$el);\n\n            // link selection dictionary\n            this.select_data = this.options.data;\n\n            // refresh\n            this._refresh();\n\n            if (!this.options.multiple) {\n                // initial value\n                if (this.options.value) {\n                    this._setValue(this.options.value);\n                }\n\n                // add change event\n                var self = this;\n                if (this.options.onchange) {\n                    this.$el.on(\"change\", function () {\n                        self.options.onchange(self.value());\n                    });\n                }\n            }\n        },\n\n        // value\n        value: function value(new_value) {\n            // get current id/value\n            var before = this._getValue();\n\n            // check if new_value is defined\n            if (new_value !== undefined) {\n                this._setValue(new_value);\n            }\n\n            // get current id/value\n            var after = this._getValue();\n\n            // fire onchange\n            if (after != before && this.options.onchange) {\n                this.options.onchange(after);\n            }\n\n            // return current value\n            return after;\n        },\n\n        // label\n        text: function text() {\n            return this.$el.select2(\"data\").text;\n        },\n\n        // disabled\n        disabled: function disabled() {\n            return !this.$el.select2(\"enable\");\n        },\n\n        // enable\n        enable: function enable() {\n            this.$el.select2(\"enable\", true);\n        },\n\n        // disable\n        disable: function disable() {\n            this.$el.select2(\"enable\", false);\n        },\n\n        // add\n        add: function add(options) {\n            // add options\n            this.select_data.push({\n                id: options.id,\n                text: options.text\n            });\n\n            // refresh\n            this._refresh();\n        },\n\n        // remove\n        del: function del(id) {\n            // search option\n            var index = this._getIndex(id);\n\n            // check if found\n            if (index != -1) {\n                // remove options\n                this.select_data.splice(index, 1);\n\n                // refresh\n                this._refresh();\n            }\n        },\n\n        // remove\n        remove: function remove() {\n            this.$el.select2(\"destroy\");\n        },\n\n        // update\n        update: function update(options) {\n            // copy options\n            this.select_data = [];\n            for (var key in options.data) {\n                this.select_data.push(options.data[key]);\n            }\n\n            // refresh\n            this._refresh();\n        },\n\n        // refresh\n        _refresh: function _refresh() {\n            // add select2 data based on type of input\n            if (!this.options.multiple) {\n                var selected = this._getValue();\n                var select_opt = {\n                    data: this.select_data,\n                    containerCssClass: this.options.css,\n                    placeholder: this.options.placeholder,\n                    dropdownAutoWidth: true\n                };\n                this.$el.select2(select_opt);\n                // select previous value (if exists)\n                this._setValue(selected);\n            } else {\n                var select_opt = {\n                    multiple: this.options.multiple,\n                    containerCssClass: this.options.css,\n                    placeholder: this.options.placeholder,\n                    minimumInputLength: this.options.minimumInputLength,\n                    ajax: this.options.ajax,\n                    dropdownCssClass: this.options.dropdownCssClass,\n                    escapeMarkup: this.options.escapeMarkup,\n                    formatResult: this.options.formatResult,\n                    formatSelection: this.options.formatSelection,\n                    initSelection: this.options.initSelection,\n                    initialData: this.options.initialData\n                };\n                this.$el.select2(select_opt);\n            }\n        },\n\n        // get index\n        _getIndex: function _getIndex(value) {\n            // returns the index of the searched value\n            _.findIndex(this.select_data, { id: value });\n        },\n\n        // get value\n        _getValue: function _getValue() {\n            return this.$el.select2(\"val\");\n        },\n\n        // set value\n        _setValue: function _setValue(new_value) {\n            var index = this._getIndex(new_value);\n            if (index == -1) {\n                if (this.select_data.length > 0) {\n                    new_value = this.select_data[0].id;\n                }\n            }\n            this.$el.select2(\"val\", new_value);\n        },\n\n        // element\n        _template: function _template(options) {\n            return '<input type=\"hidden\" value=\"' + this.options.initialData + '\"/>';\n        }\n    });\n\n    return {\n        View: View\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, _) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n(function (root, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {\n        root.faIconButton = factory();\n    }\n})(undefined, function () {\n    //============================================================================\n    /** Returns a jQuery object containing a clickable font-awesome button.\n     *      options:\n     *          tooltipConfig   : option map for bootstrap tool tip\n     *          classes         : array of class names (will always be classed as icon-btn)\n     *          disabled        : T/F - add the 'disabled' class?\n     *          title           : tooltip/title string\n     *          target          : optional href target\n     *          href            : optional href\n     *          faIcon          : which font awesome icon to use\n     *          onclick         : function to call when the button is clicked\n     */\n    var faIconButton = function faIconButton(options) {\n        options = options || {};\n        options.tooltipConfig = options.tooltipConfig || {\n            placement: \"bottom\"\n        };\n\n        options.classes = [\"icon-btn\"].concat(options.classes || []);\n        if (options.disabled) {\n            options.classes.push(\"disabled\");\n        }\n\n        var html = ['<a class=\"', options.classes.join(\" \"), '\"', options.title ? ' title=\"' + options.title + '\"' : \"\", !options.disabled && options.target ? ' target=\"' + options.target + '\"' : \"\", ' href=\"', !options.disabled && options.href ? options.href : \"javascript:void(0);\", '\">',\n        // could go with something less specific here - like 'html'\n        '<span class=\"fa ', options.faIcon, '\"></span>', \"</a>\"].join(\"\");\n        var $button = $(html).tooltip(options.tooltipConfig);\n        if (_.isFunction(options.onclick)) {\n            $button.click(options.onclick);\n        }\n        return $button;\n    };\n\n    //============================================================================\n    return faIconButton;\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 15 */,\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar Model = Backbone.Model.extend({\n    defaults: {\n        extension: \"auto\",\n        genome: \"?\",\n        url_paste: \"\",\n        status: \"init\",\n        info: null,\n        file_name: \"\",\n        file_mode: \"\",\n        file_size: 0,\n        file_type: null,\n        file_path: \"\",\n        file_data: null,\n        percentage: 0,\n        space_to_tab: false,\n        to_posix_lines: true,\n        enabled: true\n    },\n    reset: function reset(attr) {\n        this.clear().set(this.defaults).set(attr);\n    }\n});\nvar Collection = Backbone.Collection.extend({ model: Model });\nexports.default = { Model: Model, Collection: Collection };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// =============================================================================\n/** A view on any model that has a 'tags' attribute (a list of tag strings)\n *      Incorporates the select2 jQuery plugin for tags display/editing:\n *      http://ivaynberg.github.io/select2/\n */\nvar TagsEditor = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(_baseMvc2.default.HiddenUntilActivatedViewMixin).extend({\n    tagName: \"div\",\n    className: \"tags-display\",\n    select_width: \"100%\",\n    events: {},\n\n    /** Set up listeners, parse options */\n    initialize: function initialize(options) {\n        //console.debug( this, options );\n        // only listen to the model only for changes to tags - re-render\n        this.show_editor = false;\n        if (options.usePrompt === false) {\n            this.label = \"\";\n        } else {\n            this.label = '<label class=\"prompt\">' + (0, _localization2.default)(\"Tags\") + \"</label>\";\n        }\n        this.workflow_mode = options.workflow_mode || false;\n        if (this.workflow_mode) {\n            this.events.click = \"showEditor\";\n            this.events.keydown = \"keydownHandler\";\n        }\n        this.hiddenUntilActivated(options.$activator, options);\n    },\n\n    /** Build the DOM elements, call select to on the created input, and set up behaviors */\n    render: function render() {\n        var self = this;\n        if (this.workflow_mode) {\n            this.$el.html(this._workflowTemplate());\n        } else {\n            this.$el.html(this._defaultTemplate());\n        }\n        this.$input().select2({\n            placeholder: \"Add tags\",\n            width: this.workflow_mode ? this.width : this.select_width,\n            tags: function tags() {\n                // initialize possible tags in the dropdown based on all the tags the user has used so far\n                return self._getTagsUsed();\n            }\n        });\n\n        this._setUpBehaviors();\n        return this;\n    },\n\n    _hashToName: function _hashToName(tag) {\n        if (tag.startsWith(\"#\")) {\n            return \"name:\" + tag.slice(1);\n        }\n        return tag;\n    },\n\n    _nameToHash: function _nameToHash(tag) {\n        if (tag.startsWith(\"name:\")) {\n            tag = \"#\" + tag.slice(5);\n        }\n        return tag;\n    },\n\n    /** @returns {String} the html text used to build the view's DOM */\n    _defaultTemplate: function _defaultTemplate() {\n        return [this.label, this._renderEditor()].join(\"\");\n    },\n\n    _workflowTemplate: function _workflowTemplate() {\n        // Shows labels by default, event handler controls whether we show tags or editor\n        return [this.show_editor ? this._renderEditor() : this._renderTags()].join(\" \");\n    },\n\n    keydownHandler: function keydownHandler(e) {\n        switch (e.which) {\n            // esc\n            case 27:\n                // hide the tag editor when pressing escape\n                this.hideEditor();\n                break;\n        }\n    },\n\n    showEditor: function showEditor() {\n        this.show_editor = true;\n        this.render();\n    },\n\n    hideEditor: function hideEditor() {\n        this.show_editor = false;\n        this.render();\n    },\n\n    _renderEditor: function _renderEditor() {\n        // set up initial tags by adding as CSV to input vals (necc. to init select2)\n        return '<input class=\"tags-input\" value=\"' + this.tagsToCSV() + '\"/>';\n    },\n\n    _renderTags: function _renderTags() {\n        var tags = this.model.get(\"tags\");\n        var addButton = \"static/images/fugue/tag--plus.png\";\n        var renderedArray = [];\n        _.each(tags, function (tag) {\n            tag = tag.indexOf(\"name:\") == 0 ? tag.slice(5) : tag;\n            var renderString = '<span class=\"label label-info\">' + tag + \"</span>\";\n            renderedArray.push(renderString);\n        });\n        if (renderedArray.length === 0) {\n            // If there are no tags to render we just show the add-tag-button\n            renderedArray.push(\"<img src=\" + addButton + ' class=\"add-tag-button\" title=\"Add tags\"/>');\n        }\n        return renderedArray.join(\" \");\n    },\n\n    /** @returns {String} the sorted, comma-separated tags from the model */\n    tagsToCSV: function tagsToCSV() {\n        var self = this;\n        var tagsArray = this.model.get(\"tags\");\n        if (!_.isArray(tagsArray) || _.isEmpty(tagsArray)) {\n            return \"\";\n        }\n        return tagsArray.map(function (tag) {\n            return _.escape(self._nameToHash(tag));\n        }).sort().join(\",\");\n    },\n\n    /** @returns {jQuery} the input for this view */\n    $input: function $input() {\n        return this.$el.find(\"input.tags-input\");\n    },\n\n    /** @returns {String[]} all tags used by the current user */\n    _getTagsUsed: function _getTagsUsed() {\n        //TODO: global\n        var self = this;\n        return _.map(Galaxy.user.get(\"tags_used\"), self._nameToHash);\n    },\n\n    /** set up any event listeners on the view's DOM (mostly handled by select2) */\n    _setUpBehaviors: function _setUpBehaviors() {\n        var self = this;\n        this.$input().on(\"change\", function (event) {\n            // Modify any 'hashtag' 'nametags'\n            event.val = _.map(event.val, self._hashToName);\n            // save the model's tags in either remove or added event\n            self.model.save({ tags: event.val });\n            // if it's new, add the tag to the users tags\n            if (event.added) {\n                //??: solve weird behavior in FF on test.galaxyproject.org where\n                //  event.added.text is string object: 'String{ 0=\"o\", 1=\"n\", 2=\"e\" }'\n                self._addNewTagToTagsUsed(event.added.text + \"\");\n            }\n        });\n    },\n\n    /** add a new tag (if not already there) to the list of all tags used by the user\n    *  @param {String} newTag  the tag to add to the list of used\n    */\n    _addNewTagToTagsUsed: function _addNewTagToTagsUsed(newTag) {\n        //TODO: global\n        var tagsUsed = Galaxy.user.get(\"tags_used\");\n        if (!_.contains(tagsUsed, newTag)) {\n            tagsUsed.push(newTag);\n            tagsUsed.sort();\n            Galaxy.user.set(\"tags_used\", tagsUsed);\n        }\n    },\n\n    /** shut down event listeners and remove this view's DOM */\n    remove: function remove() {\n        this.$input.off();\n        this.stopListening(this.model);\n        Backbone.View.prototype.remove.call(this);\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return [\"TagsEditor(\", this.model + \"\", \")\"].join(\"\");\n    }\n});\n\nexports.default = {\n    TagsEditor: TagsEditor\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _queryStringParsing = __webpack_require__(8);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ = _jquery2.default;\n\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function initialize(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function push(url, data) {\n        data = data || {};\n        data.__identifer = Math.random().toString(36).substr(2);\n        if (!$.isEmptyObject(data)) {\n            url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            url += $.param(data, true);\n        }\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function execute(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = _queryStringParsing2.default.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function authenticate(args, name) {\n        return true;\n    },\n\n    access_denied: function access_denied() {\n        this.page.display(new _uiMisc2.default.Message({\n            status: \"danger\",\n            message: \"You must be logged in with proper credentials to make this request.\",\n            persistent: true\n        }));\n    }\n});\n\nexports.default = Router;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    options: {\n        class_check: \"fa-check-square-o\",\n        class_uncheck: \"fa-square-o\",\n        parameters: [{\n            id: \"space_to_tab\",\n            title: \"Convert spaces to tabs\"\n        }, {\n            id: \"to_posix_lines\",\n            title: \"Use POSIX standard\"\n        }]\n    },\n\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = options.model;\n        this.setElement($(\"<div/>\").addClass(\"upload-settings\"));\n        this.$el.append($(\"<div/>\").addClass(\"upload-settings-cover\"));\n        this.$el.append($(\"<table/>\").addClass(\"upload-settings-table ui-table-striped\").append(\"<tbody/>\"));\n        this.$cover = this.$(\".upload-settings-cover\");\n        this.$table = this.$(\".upload-settings-table > tbody\");\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.model.trigger(\"change\");\n    },\n\n    render: function render() {\n        var self = this;\n        this.$table.empty();\n        _.each(this.options.parameters, function (parameter) {\n            var $checkbox = $(\"<div/>\").addClass(\"upload-\" + parameter.id + \" upload-icon-button fa\").addClass(self.model.get(parameter.id) && self.options.class_check || self.options.class_uncheck).on(\"click\", function () {\n                self.model.get(\"enabled\") && self.model.set(parameter.id, !self.model.get(parameter.id));\n            });\n            self.$table.append($(\"<tr/>\").append($(\"<td/>\").append($checkbox)).append($(\"<td/>\").append(parameter.title)));\n        });\n        this.$cover[this.model.get(\"enabled\") && \"hide\" || \"show\"]();\n    }\n}); /** This renders the content of the settings popup, allowing users to specify flags i.e. for space-to-tab conversion **/\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = new Backbone.Model({\n            cls: \"upload-ftp\",\n            class_add: \"upload-icon-button fa fa-square-o\",\n            class_remove: \"upload-icon-button fa fa-check-square-o\",\n            class_partial: \"upload-icon-button fa fa-minus-square-o\",\n            help_enabled: true,\n            help_text: \"This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>\" + options.ftp_upload_site + \"</strong> using your Galaxy credentials.\",\n            collection: null,\n            onchange: function onchange() {},\n            onadd: function onadd() {},\n            onremove: function onremove() {}\n        }).set(options);\n        this.collection = this.model.get(\"collection\");\n        this.setElement(this._template());\n        this.$content = this.$(\".upload-ftp-content\");\n        this.$wait = this.$(\".upload-ftp-wait\");\n        this.$help = this.$(\".upload-ftp-help\");\n        this.$number = this.$(\".upload-ftp-number\");\n        this.$disk = this.$(\".upload-ftp-disk\");\n        this.$body = this.$(\".upload-ftp-body\");\n        this.$warning = this.$(\".upload-ftp-warning\");\n        this.$select = this.$(\".upload-ftp-select-all\");\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        this.$wait.show();\n        this.$content.hide();\n        this.$warning.hide();\n        this.$help.hide();\n        $.ajax({\n            url: Galaxy.root + \"api/remote_files\",\n            method: \"GET\",\n            success: function success(ftp_files) {\n                self.model.set(\"ftp_files\", ftp_files);\n                self._index();\n                self._renderTable();\n            },\n            error: function error() {\n                self._renderTable();\n            }\n        });\n    },\n\n    /** Fill table with ftp entries */\n    _renderTable: function _renderTable() {\n        var self = this;\n        var ftp_files = this.model.get(\"ftp_files\");\n        this.rows = [];\n        if (ftp_files && ftp_files.length > 0) {\n            this.$body.empty();\n            var size = 0;\n            _.each(ftp_files, function (ftp_file) {\n                self.rows.push(self._renderRow(ftp_file));\n                size += ftp_file.size;\n            });\n            this.$number.html(ftp_files.length + \" files\");\n            this.$disk.html(_utils2.default.bytesToString(size, true));\n            if (this.collection) {\n                this.$(\"._has_collection\").show();\n                this.$select.addClass(this.model.get(\"class_add\")).off().on(\"click\", function () {\n                    self._all();\n                });\n                this._refresh();\n            }\n            this.$content.show();\n        } else {\n            this.$warning.show();\n        }\n        this.model.get(\"help_enabled\") && this.$help.show();\n        this.$wait.hide();\n    },\n\n    /** Add row */\n    _renderRow: function _renderRow(ftp_file) {\n        var self = this;\n        var options = this.model.attributes;\n        var $it = $(this._templateRow(ftp_file));\n        var $icon = $it.find(\".icon\");\n        this.$body.append($it);\n        if (this.collection) {\n            var model_index = this.ftp_index[ftp_file.path];\n            $icon.addClass(model_index === undefined ? options.class_add : options.class_remove);\n            $it.on(\"click\", function () {\n                self._switch($icon, ftp_file);\n                self._refresh();\n            });\n        } else {\n            $it.on(\"click\", function () {\n                options.onchange(ftp_file);\n            });\n        }\n        return $icon;\n    },\n\n    /** Create ftp index */\n    _index: function _index() {\n        var self = this;\n        this.ftp_index = {};\n        this.collection && this.collection.each(function (model) {\n            if (model.get(\"file_mode\") == \"ftp\") {\n                self.ftp_index[model.get(\"file_path\")] = model.id;\n            }\n        });\n    },\n\n    /** Select all event handler */\n    _all: function _all() {\n        var options = this.model.attributes;\n        var ftp_files = this.model.get(\"ftp_files\");\n        var add = this.$select.hasClass(options.class_add);\n        for (var index in ftp_files) {\n            var ftp_file = ftp_files[index];\n            var model_index = this.ftp_index[ftp_file.path];\n            if (model_index === undefined && add || model_index !== undefined && !add) {\n                this._switch(this.rows[index], ftp_file);\n            }\n        }\n        this._refresh();\n    },\n\n    /** Handle collection changes */\n    _switch: function _switch($icon, ftp_file) {\n        $icon.removeClass();\n        var options = this.model.attributes;\n        var model_index = this.ftp_index[ftp_file.path];\n        if (model_index === undefined) {\n            var new_index = options.onadd(ftp_file);\n            $icon.addClass(options.class_remove);\n            this.ftp_index[ftp_file.path] = new_index;\n        } else {\n            options.onremove(model_index);\n            $icon.addClass(options.class_add);\n            this.ftp_index[ftp_file.path] = undefined;\n        }\n    },\n\n    /** Refresh select all button state */\n    _refresh: function _refresh() {\n        var counts = _.reduce(this.ftp_index, function (memo, element) {\n            element !== undefined && memo++;\n            return memo;\n        }, 0);\n        this.$select.removeClass();\n        if (counts == 0) {\n            this.$select.addClass(this.model.get(\"class_add\"));\n        } else {\n            this.$select.addClass(counts == this.rows.length ? this.model.get(\"class_remove\") : this.model.get(\"class_partial\"));\n        }\n    },\n\n    /** Template of row */\n    _templateRow: function _templateRow(options) {\n        return '<tr class=\"upload-ftp-row\">' + '<td class=\"_has_collection\" style=\"display: none;\"><div class=\"icon\"/></td>' + '<td class=\"ftp-name\">' + _.escape(options.path) + \"</td>\" + '<td class=\"ftp-size\">' + _utils2.default.bytesToString(options.size) + \"</td>\" + '<td class=\"ftp-time\">' + options.ctime + \"</td>\" + \"</tr>\";\n    },\n\n    /** Template of main view */\n    _template: function _template() {\n        return '<div class=\"' + this.model.get(\"cls\") + '\">' + '<div class=\"upload-ftp-wait fa fa-spinner fa-spin\"/>' + '<div class=\"upload-ftp-help\">' + this.model.get(\"help_text\") + \"</div>\" + '<div class=\"upload-ftp-content\">' + '<span style=\"whitespace: nowrap; float: left;\">Available files: </span>' + '<span style=\"whitespace: nowrap; float: right;\">' + '<span class=\"upload-icon fa fa-file-text-o\"/>' + '<span class=\"upload-ftp-number\"/>&nbsp;&nbsp;' + '<span class=\"upload-icon fa fa-hdd-o\"/>' + '<span class=\"upload-ftp-disk\"/>' + \"</span>\" + '<table class=\"grid\" style=\"float: left;\">' + \"<thead>\" + \"<tr>\" + '<th class=\"_has_collection\" style=\"display: none;\"><div class=\"upload-ftp-select-all\"></th>' + \"<th>Name</th>\" + \"<th>Size</th>\" + \"<th>Created</th>\" + \"</tr>\" + \"</thead>\" + '<tbody class=\"upload-ftp-body\"/>' + \"</table>\" + \"</div>\" + '<div class=\"upload-ftp-warning warningmessage\">' + \"Your FTP directory does not contain any files.\" + \"</div>\";\n        \"<div>\";\n    }\n}); /** This renders the content of the ftp popup **/\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiPopover = __webpack_require__(10);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** This renders a popover with extension details **/\nexports.default = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = new Backbone.Model(options);\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        var options = this.model.attributes;\n        var description = _.findWhere(options.list, {\n            id: options.extension\n        });\n        this.extension_popup && this.extension_popup.remove();\n        this.extension_popup = new _uiPopover2.default.View({\n            placement: options.placement || \"bottom\",\n            container: options.$el\n        });\n        this.extension_popup.title(options.title);\n        this.extension_popup.empty();\n        this.extension_popup.append(this._templateDescription(description));\n        this.extension_popup.show();\n    },\n\n    /** Template for extensions description */\n    _templateDescription: function _templateDescription(options) {\n        if (options.description) {\n            var tmpl = options.description;\n            if (options.description_url) {\n                tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n            }\n            return tmpl;\n        } else {\n            return \"There is no description available for this file extension.\";\n        }\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, _) {\n\n/*\n    galaxy upload plugins - requires FormData and XMLHttpRequest\n*/\n(function ($) {\n    // add event properties\n    jQuery.event.props.push(\"dataTransfer\");\n\n    /**\n        Posts file data to the API\n    */\n    $.uploadpost = function (config) {\n        // parse options\n        var cnf = $.extend({}, {\n            data: {},\n            success: function success() {},\n            error: function error() {},\n            progress: function progress() {},\n            url: null,\n            maxfilesize: 2048,\n            error_filesize: \"File exceeds 2GB. Please use a FTP client.\",\n            error_default: \"Please make sure the file is available.\",\n            error_server: \"Upload request failed.\",\n            error_login: \"Uploads require you to log in.\"\n        }, config);\n\n        // link data\n        var data = cnf.data;\n\n        // check errors\n        if (data.error_message) {\n            cnf.error(data.error_message);\n            return;\n        }\n\n        // construct form data\n        var form = new FormData();\n        for (var key in data.payload) {\n            form.append(key, data.payload[key]);\n        }\n\n        // add files to submission\n        var sizes = 0;\n        for (var key in data.files) {\n            var d = data.files[key];\n            form.append(d.name, d.file, d.file.name);\n            sizes += d.file.size;\n        }\n\n        // check file size, unless it's an ftp file\n        if (sizes > 1048576 * cnf.maxfilesize) {\n            cnf.error(cnf.error_filesize);\n            return;\n        }\n\n        // prepare request\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", cnf.url, true);\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        // captures state changes\n        xhr.onreadystatechange = function () {\n            // check for request completed, server connection closed\n            if (xhr.readyState == xhr.DONE) {\n                // parse response\n                var response = null;\n                var extra_info = \"\";\n                if (xhr.responseText) {\n                    try {\n                        response = jQuery.parseJSON(xhr.responseText);\n                        extra_info = response.err_msg;\n                    } catch (e) {\n                        response = xhr.responseText;\n                        extra_info = response;\n                    }\n                }\n                // pass any error to the error option\n                if (xhr.status < 200 || xhr.status > 299) {\n                    var text = xhr.statusText;\n                    if (xhr.status == 403) {\n                        text = cnf.error_login;\n                    } else if (xhr.status == 0) {\n                        text = cnf.error_server;\n                    } else if (!text) {\n                        text = cnf.error_default;\n                    }\n                    cnf.error(text + \" (\" + xhr.status + \"). \" + extra_info);\n                } else {\n                    cnf.success(response);\n                }\n            }\n        };\n\n        // prepare upload progress\n        xhr.upload.addEventListener(\"progress\", function (e) {\n            if (e.lengthComputable) {\n                cnf.progress(Math.round(e.loaded * 100 / e.total));\n            }\n        }, false);\n\n        // send request\n        Galaxy.emit.debug(\"uploadbox::uploadpost()\", \"Posting following data.\", cnf);\n        xhr.send(form);\n    };\n\n    /**\n        Handles the upload events drag/drop etc.\n    */\n    $.fn.uploadinput = function (options) {\n        // initialize\n        var el = this;\n        var opts = $.extend({}, {\n            ondragover: function ondragover() {},\n            ondragleave: function ondragleave() {},\n            onchange: function onchange() {},\n            multiple: false\n        }, options);\n\n        // append hidden upload field\n        var $input = $('<input type=\"file\" style=\"display: none\" ' + (opts.multiple && \"multiple\" || \"\") + \"/>\");\n        el.append($input.change(function (e) {\n            opts.onchange(e.target.files);\n            $(this).val(\"\");\n        }));\n\n        // drag/drop events\n        el.on(\"drop\", function (e) {\n            opts.ondragleave(e);\n            if (e.dataTransfer) {\n                opts.onchange(e.dataTransfer.files);\n                e.preventDefault();\n            }\n        });\n        el.on(\"dragover\", function (e) {\n            e.preventDefault();\n            opts.ondragover(e);\n        });\n        el.on(\"dragleave\", function (e) {\n            e.stopPropagation();\n            opts.ondragleave(e);\n        });\n\n        // exports\n        return {\n            dialog: function dialog() {\n                $input.trigger(\"click\");\n            }\n        };\n    };\n\n    /**\n        Handles the upload queue and events such as drag/drop etc.\n    */\n    $.fn.uploadbox = function (options) {\n        // parse options\n        var opts = $.extend({}, {\n            dragover: function dragover() {},\n            dragleave: function dragleave() {},\n            announce: function announce(d) {},\n            initialize: function initialize(d) {},\n            progress: function progress(d, m) {},\n            success: function success(d, m) {},\n            error: function error(d, m) {\n                alert(m);\n            },\n            complete: function complete() {}\n        }, options);\n\n        // file queue\n        var queue = {};\n\n        // queue index/length counter\n        var queue_index = 0;\n        var queue_length = 0;\n\n        // indicates if queue is currently running\n        var queue_running = false;\n        var queue_stop = false;\n\n        // element\n        var uploadinput = $(this).uploadinput({\n            multiple: true,\n            onchange: function onchange(files) {\n                add(files);\n            },\n            ondragover: options.ondragover,\n            ondragleave: options.ondragleave\n        });\n\n        // add new files to upload queue\n        function add(files) {\n            if (files && files.length && !queue_running) {\n                var index = undefined;\n                _.each(files, function (file, key) {\n                    if (file.mode !== \"new\" && _.filter(queue, function (f) {\n                        return f.name === file.name && f.size === file.size;\n                    }).length) {\n                        file.duplicate = true;\n                    }\n                });\n                _.each(files, function (file) {\n                    if (!file.duplicate) {\n                        index = String(queue_index++);\n                        queue[index] = file;\n                        opts.announce(index, queue[index]);\n                        queue_length++;\n                    }\n                });\n                return index;\n            }\n        }\n\n        // remove file from queue\n        function remove(index) {\n            if (queue[index]) {\n                delete queue[index];\n                queue_length--;\n            }\n        }\n\n        // process an upload, recursive\n        function process() {\n            // validate\n            if (queue_length == 0 || queue_stop) {\n                queue_stop = false;\n                queue_running = false;\n                opts.complete();\n                return;\n            } else {\n                queue_running = true;\n            }\n\n            // get an identifier from the queue\n            var index = -1;\n            for (var key in queue) {\n                index = key;\n                break;\n            }\n\n            // get current file from queue\n            var file = queue[index];\n\n            // remove from queue\n            remove(index);\n\n            // create and submit data\n            $.uploadpost({\n                url: opts.url,\n                data: opts.initialize(index),\n                success: function success(message) {\n                    opts.success(index, message);\n                    process();\n                },\n                error: function error(message) {\n                    opts.error(index, message);\n                    process();\n                },\n                progress: function progress(percentage) {\n                    opts.progress(index, percentage);\n                }\n            });\n        }\n\n        /*\n            public interface\n        */\n\n        // open file browser for selection\n        function select() {\n            uploadinput.dialog();\n        }\n\n        // remove all entries from queue\n        function reset(index) {\n            for (index in queue) {\n                remove(index);\n            }\n        }\n\n        // initiate upload process\n        function start() {\n            if (!queue_running) {\n                queue_running = true;\n                process();\n            }\n        }\n\n        // stop upload process\n        function stop() {\n            queue_stop = true;\n        }\n\n        // set options\n        function configure(options) {\n            opts = $.extend({}, opts, options);\n            return opts;\n        }\n\n        // verify browser compatibility\n        function compatible() {\n            return window.File && window.FormData && window.XMLHttpRequest && window.FileList;\n        }\n\n        // export functions\n        return {\n            select: select,\n            add: add,\n            remove: remove,\n            start: start,\n            stop: stop,\n            reset: reset,\n            configure: configure,\n            compatible: compatible\n        };\n    };\n})(jQuery);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _hdcaModel = __webpack_require__(36);\n\nvar _hdcaModel2 = _interopRequireDefault(_hdcaModel);\n\nvar _states = __webpack_require__(11);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _baseCreator = __webpack_require__(74);\n\nvar _baseCreator2 = _interopRequireDefault(_baseCreator);\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _naturalSort = __webpack_require__(75);\n\nvar _naturalSort2 = _interopRequireDefault(_naturalSort);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(76);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"collections\";\n\n/*==============================================================================\nTODO:\n    use proper Element model and not just json\n    straighten out createFn, collection.createHDCA\n    possibly stop using modals for this\n    It would be neat to do a drag and drop\n\n==============================================================================*/\n/** A view for both DatasetDCEs and NestedDCDCEs\n *  (things that implement collection-model:DatasetCollectionElementMixin)\n */\nvar DatasetCollectionElementView = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n    tagName: \"li\",\n    className: \"collection-element\",\n\n    initialize: function initialize(attributes) {\n        this.element = attributes.element || {};\n        this.selected = attributes.selected || false;\n    },\n\n    render: function render() {\n        this.$el.attr(\"data-element-id\", this.element.id).attr(\"draggable\", true).html(this.template({ element: this.element }));\n        if (this.selected) {\n            this.$el.addClass(\"selected\");\n        }\n        return this;\n    },\n\n    //TODO: lots of unused space in the element - possibly load details and display them horiz.\n    template: _.template(['<a class=\"name\" title=\"', (0, _localization2.default)(\"Click to rename\"), '\" href=\"javascript:void(0)\">', \"<%- element.name %>\", \"</a>\", '<button class=\"discard btn btn-sm\" title=\"', (0, _localization2.default)(\"Remove this dataset from the list\"), '\">', (0, _localization2.default)(\"Discard\"), \"</button>\"].join(\"\")),\n\n    /** select this element and pub */\n    select: function select(toggle) {\n        this.$el.toggleClass(\"selected\", toggle);\n        this.trigger(\"select\", {\n            source: this,\n            selected: this.$el.hasClass(\"selected\")\n        });\n    },\n\n    /** animate the removal of this element and pub */\n    discard: function discard() {\n        var view = this,\n            parentWidth = this.$el.parent().width();\n        this.$el.animate({ \"margin-right\": parentWidth }, \"fast\", function () {\n            view.trigger(\"discard\", {\n                source: view\n            });\n            view.destroy();\n        });\n    },\n\n    /** remove the DOM and any listeners */\n    destroy: function destroy() {\n        this.off();\n        this.$el.remove();\n    },\n\n    events: {\n        click: \"_click\",\n        \"click .name\": \"_clickName\",\n        \"click .discard\": \"_clickDiscard\",\n\n        dragstart: \"_dragstart\",\n        dragend: \"_dragend\",\n        dragover: \"_sendToParent\",\n        drop: \"_sendToParent\"\n    },\n\n    /** select when the li is clicked */\n    _click: function _click(ev) {\n        ev.stopPropagation();\n        this.select(ev);\n    },\n\n    /** rename a pair when the name is clicked */\n    _clickName: function _clickName(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        var promptString = [(0, _localization2.default)(\"Enter a new name for the element\"), \":\\n(\", (0, _localization2.default)(\"Note that changing the name here will not rename the dataset\"), \")\"].join(\"\"),\n            response = prompt((0, _localization2.default)(\"Enter a new name for the element\") + \":\", this.element.name);\n        if (response) {\n            this.element.name = response;\n            this.render();\n        }\n        //TODO: cancelling with ESC leads to closure of the creator...\n    },\n\n    /** discard when the discard button is clicked */\n    _clickDiscard: function _clickDiscard(ev) {\n        ev.stopPropagation();\n        this.discard();\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragstart: function _dragstart(ev) {\n        if (ev.originalEvent) {\n            ev = ev.originalEvent;\n        }\n        ev.dataTransfer.effectAllowed = \"move\";\n        ev.dataTransfer.setData(\"text/plain\", JSON.stringify(this.element));\n\n        this.$el.addClass(\"dragging\");\n        this.$el.parent().trigger(\"collection-element.dragstart\", [this]);\n    },\n\n    /** dragging for re-ordering */\n    _dragend: function _dragend(ev) {\n        this.$el.removeClass(\"dragging\");\n        this.$el.parent().trigger(\"collection-element.dragend\", [this]);\n    },\n\n    /** manually bubble up an event to the parent/container */\n    _sendToParent: function _sendToParent(ev) {\n        this.$el.parent().trigger(ev);\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return \"DatasetCollectionElementView()\";\n    }\n});\n\n// ============================================================================\n/** An interface for building collections.\n */\nvar ListCollectionCreator = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(_baseCreator2.default.CollectionCreatorMixin).extend({\n    _logNamespace: logNamespace,\n\n    /** the class used to display individual elements */\n    elementViewClass: DatasetCollectionElementView,\n    /** the class this creator will create and save */\n    collectionClass: _hdcaModel2.default.HistoryListDatasetCollection,\n    className: \"list-collection-creator collection-creator flex-row-container\",\n\n    /** minimum number of valid elements to start with in order to build a collection of this type */\n    minElements: 1,\n\n    defaultAttributes: {\n        //TODO: remove - use new collectionClass().save()\n        /** takes elements and creates the proper collection - returns a promise */\n        creationFn: function creationFn() {\n            throw new TypeError(\"no creation fn for creator\");\n        },\n        /** fn to call when the collection is created (scoped to this) */\n        oncreate: function oncreate() {},\n        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n        oncancel: function oncancel() {},\n        /** distance from list edge to begin autoscrolling list */\n        autoscrollDist: 24,\n        /** Color passed to hoverhighlight */\n        highlightClr: \"rgba( 64, 255, 255, 1.0 )\"\n    },\n\n    footerSettings: {\n        \".hide-originals\": \"hideOriginals\"\n    },\n\n    /** set up initial options, instance vars, behaviors */\n    initialize: function initialize(attributes) {\n        this.metric(\"ListCollectionCreator.initialize\", attributes);\n        var creator = this;\n        _.each(this.defaultAttributes, function (value, key) {\n            value = attributes[key] || value;\n            creator[key] = value;\n        });\n\n        /** unordered, original list - cache to allow reversal */\n        creator.initialElements = attributes.elements || [];\n\n        this._setUpCommonSettings(attributes);\n        this._instanceSetUp();\n        this._elementsSetUp();\n        this._setUpBehaviors();\n    },\n\n    /** set up instance vars */\n    _instanceSetUp: function _instanceSetUp() {\n        /** Ids of elements that have been selected by the user - to preserve over renders */\n        this.selectedIds = {};\n        /** DOM elements currently being dragged */\n        this.$dragging = null;\n        /** Used for blocking UI events during ajax/operations (don't post twice) */\n        this.blocking = false;\n    },\n\n    // ------------------------------------------------------------------------ process raw list\n    /** set up main data */\n    _elementsSetUp: function _elementsSetUp() {\n        //this.debug( '-- _dataSetUp' );\n        /** a list of invalid elements and the reasons they aren't valid */\n        this.invalidElements = [];\n        //TODO: handle fundamental problem of syncing DOM, views, and list here\n        /** data for list in progress */\n        this.workingElements = [];\n        /** views for workingElements */\n        this.elementViews = [];\n\n        // copy initial list, sort, add ids if needed\n        this.workingElements = this.initialElements.slice(0);\n        this._ensureElementIds();\n        this._validateElements();\n        this._mangleDuplicateNames();\n        this._sortElements();\n    },\n\n    /** add ids to dataset objs in initial list if none */\n    _ensureElementIds: function _ensureElementIds() {\n        this.workingElements.forEach(function (element) {\n            if (!element.hasOwnProperty(\"id\")) {\n                element.id = _.uniqueId();\n            }\n        });\n        return this.workingElements;\n    },\n\n    /** separate working list into valid and invalid elements for this collection */\n    _validateElements: function _validateElements() {\n        var creator = this,\n            existingNames = {};\n        creator.invalidElements = [];\n\n        this.workingElements = this.workingElements.filter(function (element) {\n            var problem = creator._isElementInvalid(element);\n            if (problem) {\n                creator.invalidElements.push({\n                    element: element,\n                    text: problem\n                });\n            }\n            return !problem;\n        });\n        return this.workingElements;\n    },\n\n    /** describe what is wrong with a particular element if anything */\n    _isElementInvalid: function _isElementInvalid(element) {\n        if (element.history_content_type !== \"dataset\") {\n            return (0, _localization2.default)(\"is not a dataset\");\n        }\n        var validState = element.state === _states2.default.OK || _.contains(_states2.default.NOT_READY_STATES, element.state);\n        if (!validState) {\n            return (0, _localization2.default)(\"has errored, is paused, or is not accessible\");\n        }\n        if (element.deleted || element.purged) {\n            return (0, _localization2.default)(\"has been deleted or purged\");\n        }\n        return null;\n    },\n\n    /** mangle duplicate names using a mac-like '(counter)' addition to any duplicates */\n    _mangleDuplicateNames: function _mangleDuplicateNames() {\n        var SAFETY = 900,\n            counter = 1,\n            existingNames = {};\n        this.workingElements.forEach(function (element) {\n            var currName = element.name;\n            while (existingNames.hasOwnProperty(currName)) {\n                currName = element.name + \" (\" + counter + \")\";\n                counter += 1;\n                if (counter >= SAFETY) {\n                    throw new Error(\"Safety hit in while loop - thats impressive\");\n                }\n            }\n            element.name = currName;\n            existingNames[element.name] = true;\n        });\n    },\n\n    /** sort a list of elements */\n    _sortElements: function _sortElements(list) {\n        // // currently only natural sort by name\n        // this.workingElements.sort( function( a, b ){ return naturalSort( a.name, b.name ); });\n        // return this.workingElements;\n    },\n\n    // ------------------------------------------------------------------------ rendering\n    // templates : ListCollectionCreator.templates,\n    /** render the entire interface */\n    render: function render(speed, callback) {\n        //this.debug( '-- _render' );\n        if (this.workingElements.length < this.minElements) {\n            return this._renderInvalid(speed, callback);\n        }\n\n        this.$el.empty().html(this.templates.main());\n        this._renderHeader(speed);\n        this._renderMiddle(speed);\n        this._renderFooter(speed);\n        this._addPluginComponents();\n        this.$(\".collection-name\").focus();\n        this.trigger(\"rendered\", this);\n        return this;\n    },\n\n    /** render a simplified interface aimed at telling the user why they can't move forward */\n    _renderInvalid: function _renderInvalid(speed, callback) {\n        //this.debug( '-- _render' );\n        this.$el.empty().html(this.templates.invalidInitial({\n            problems: this.invalidElements,\n            elements: this.workingElements\n        }));\n        if (typeof this.oncancel === \"function\") {\n            this.$(\".cancel-create.btn\").show();\n        }\n        this.trigger(\"rendered\", this);\n        return this;\n    },\n\n    /** render the header section */\n    _renderHeader: function _renderHeader(speed, callback) {\n        var $header = this.$(\".header\").empty().html(this.templates.header()).find(\".help-content\").prepend($(this.templates.helpContent()));\n        //TODO: should only show once despite calling _renderHeader again\n        if (this.invalidElements.length) {\n            this._invalidElementsAlert();\n        }\n        return $header;\n    },\n\n    /** render the middle including the elements */\n    _renderMiddle: function _renderMiddle(speed, callback) {\n        var $middle = this.$(\".middle\").empty().html(this.templates.middle());\n        this._renderList(speed);\n        return $middle;\n    },\n\n    /** add any jQuery/bootstrap/custom plugins to elements rendered */\n    _addPluginComponents: function _addPluginComponents() {\n        this.$(\".help-content i\").hoverhighlight(\".collection-creator\", this.highlightClr);\n    },\n\n    /** build and show an alert describing any elements that could not be included due to problems */\n    _invalidElementsAlert: function _invalidElementsAlert() {\n        this._showAlert(this.templates.invalidElements({\n            problems: this.invalidElements\n        }), \"alert-warning\");\n    },\n\n    _disableNameAndCreate: function _disableNameAndCreate(disable) {\n        disable = !_.isUndefined(disable) ? disable : true;\n        if (disable) {\n            this.$(\".collection-name\").prop(\"disabled\", true);\n            this.$(\".create-collection\").toggleClass(\"disabled\", true);\n            // } else {\n            //     this.$( '.collection-name' ).prop( 'disabled', false );\n            //     this.$( '.create-collection' ).removeClass( 'disable' );\n        }\n    },\n\n    // ------------------------------------------------------------------------ rendering elements\n    /** conv. to the main list display DOM */\n    $list: function $list() {\n        return this.$(\".collection-elements\");\n    },\n\n    /** show or hide the clear selected control based on the num of selected elements */\n    _renderClearSelected: function _renderClearSelected() {\n        if (_.size(this.selectedIds)) {\n            this.$(\".collection-elements-controls > .clear-selected\").show();\n        } else {\n            this.$(\".collection-elements-controls > .clear-selected\").hide();\n        }\n    },\n\n    /** render the elements in order (or a warning if no elements found) */\n    _renderList: function _renderList(speed, callback) {\n        //this.debug( '-- _renderList' );\n        var creator = this,\n            $tmp = jQuery(\"<div/>\"),\n            $list = creator.$list();\n\n        _.each(this.elementViews, function (view) {\n            view.destroy();\n            creator.removeElementView(view);\n        });\n\n        // if( !this.workingElements.length ){\n        //     this._renderNoValidElements();\n        //     return;\n        // }\n\n        creator.workingElements.forEach(function (element) {\n            var elementView = creator._createElementView(element);\n            $tmp.append(elementView.$el);\n        });\n\n        creator._renderClearSelected();\n        $list.empty().append($tmp.children());\n        _.invoke(creator.elementViews, \"render\");\n\n        if ($list.height() > $list.css(\"max-height\")) {\n            $list.css(\"border-width\", \"1px 0px 1px 0px\");\n        } else {\n            $list.css(\"border-width\", \"0px\");\n        }\n    },\n\n    /** create an element view, cache in elementViews, set up listeners, and return */\n    _createElementView: function _createElementView(element) {\n        var elementView = new this.elementViewClass({\n            //TODO: use non-generic class or not all\n            // model : COLLECTION.DatasetDCE( element )\n            element: element,\n            selected: _.has(this.selectedIds, element.id)\n        });\n        this.elementViews.push(elementView);\n        this._listenToElementView(elementView);\n        return elementView;\n    },\n\n    /** listen to any element events */\n    _listenToElementView: function _listenToElementView(view) {\n        var creator = this;\n        creator.listenTo(view, {\n            select: function select(data) {\n                var element = data.source.element;\n                if (data.selected) {\n                    creator.selectedIds[element.id] = true;\n                } else {\n                    delete creator.selectedIds[element.id];\n                }\n                creator.trigger(\"elements:select\", data);\n            },\n            discard: function discard(data) {\n                creator.trigger(\"elements:discard\", data);\n            }\n        });\n    },\n\n    /** add a new element view based on the json in element */\n    addElementView: function addElementView(element) {\n        //TODO: workingElements is sorted, add element in appropo index\n        // add element, sort elements, find element index\n        // var view = this._createElementView( element );\n        // return view;\n    },\n\n    /** stop listening to view and remove from caches */\n    removeElementView: function removeElementView(view) {\n        delete this.selectedIds[view.element.id];\n        this._renderClearSelected();\n\n        this.elementViews = _.without(this.elementViews, view);\n        this.stopListening(view);\n    },\n\n    /** render a message in the list that no elements remain to create a collection */\n    _renderNoElementsLeft: function _renderNoElementsLeft() {\n        this._disableNameAndCreate(true);\n        this.$(\".collection-elements\").append(this.templates.noElementsLeft());\n    },\n\n    // /** render a message in the list that no valid elements were found to create a collection */\n    // _renderNoValidElements : function(){\n    //     this._disableNameAndCreate( true );\n    //     this.$( '.collection-elements' ).append( this.templates.noValidElements() );\n    // },\n\n    // ------------------------------------------------------------------------ API\n    /** convert element into JSON compatible with the collections API */\n    _elementToJSON: function _elementToJSON(element) {\n        // return element.toJSON();\n        return element;\n    },\n\n    /** create the collection via the API\n    *  @returns {jQuery.xhr Object} the jquery ajax request\n    */\n    createList: function createList(name) {\n        if (!this.workingElements.length) {\n            var message = (0, _localization2.default)(\"No valid elements for final list\") + \". \";\n            message += '<a class=\"cancel-create\" href=\"javascript:void(0);\">' + (0, _localization2.default)(\"Cancel\") + \"</a> \";\n            message += (0, _localization2.default)(\"or\");\n            message += ' <a class=\"reset\" href=\"javascript:void(0);\">' + (0, _localization2.default)(\"start over\") + \"</a>.\";\n            this._showAlert(message);\n            return;\n        }\n\n        var creator = this,\n            elements = this.workingElements.map(function (element) {\n            return creator._elementToJSON(element);\n        });\n\n        creator.blocking = true;\n        return creator.creationFn(elements, name, creator.hideOriginals).always(function () {\n            creator.blocking = false;\n        }).fail(function (xhr, status, message) {\n            creator.trigger(\"error\", {\n                xhr: xhr,\n                status: status,\n                message: (0, _localization2.default)(\"An error occurred while creating this collection\")\n            });\n        }).done(function (response, message, xhr) {\n            creator.trigger(\"collection:created\", response, message, xhr);\n            creator.metric(\"collection:created\", response);\n            if (typeof creator.oncreate === \"function\") {\n                creator.oncreate.call(this, response, message, xhr);\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ events\n    /** set up event handlers on self */\n    _setUpBehaviors: function _setUpBehaviors() {\n        this.on(\"error\", this._errorHandler);\n\n        this.once(\"rendered\", function () {\n            this.trigger(\"rendered:initial\", this);\n        });\n\n        this.on(\"elements:select\", function (data) {\n            this._renderClearSelected();\n        });\n\n        this.on(\"elements:discard\", function (data) {\n            var element = data.source.element;\n            this.removeElementView(data.source);\n\n            this.workingElements = _.without(this.workingElements, element);\n            if (!this.workingElements.length) {\n                this._renderNoElementsLeft();\n            }\n        });\n\n        //this.on( 'all', function(){\n        //    this.info( arguments );\n        //});\n        return this;\n    },\n\n    /** handle errors with feedback and details to the user (if available) */\n    _errorHandler: function _errorHandler(data) {\n        this.error(data);\n\n        var creator = this,\n            content = data.message || (0, _localization2.default)(\"An error occurred\");\n        if (data.xhr) {\n            var xhr = data.xhr,\n                message = data.message;\n            if (xhr.readyState === 0 && xhr.status === 0) {\n                content += \": \" + (0, _localization2.default)(\"Galaxy could not be reached and may be updating.\") + (0, _localization2.default)(\" Try again in a few minutes.\");\n            } else if (xhr.responseJSON) {\n                content += \":<br /><pre>\" + JSON.stringify(xhr.responseJSON) + \"</pre>\";\n            } else {\n                content += \": \" + message;\n            }\n        }\n        creator._showAlert(content, \"alert-danger\");\n    },\n\n    events: {\n        // header\n        \"click .more-help\": \"_clickMoreHelp\",\n        \"click .less-help\": \"_clickLessHelp\",\n        \"click .main-help\": \"_toggleHelp\",\n        \"click .header .alert button\": \"_hideAlert\",\n\n        \"click .reset\": \"reset\",\n        \"click .clear-selected\": \"clearSelectedElements\",\n\n        // elements - selection\n        \"click .collection-elements\": \"clearSelectedElements\",\n\n        // elements - drop target\n        // 'dragenter .collection-elements': '_dragenterElements',\n        // 'dragleave .collection-elements': '_dragleaveElements',\n        \"dragover .collection-elements\": \"_dragoverElements\",\n        \"drop .collection-elements\": \"_dropElements\",\n\n        // these bubble up from the elements as custom events\n        \"collection-element.dragstart .collection-elements\": \"_elementDragstart\",\n        \"collection-element.dragend   .collection-elements\": \"_elementDragend\",\n\n        // footer\n        \"change .collection-name\": \"_changeName\",\n        \"keydown .collection-name\": \"_nameCheckForEnter\",\n        \"change .hide-originals\": \"_changeHideOriginals\",\n        \"click .cancel-create\": \"_cancelCreate\",\n        \"click .create-collection\": \"_clickCreate\" //,\n    },\n\n    // ........................................................................ elements\n    /** reset all data to the initial state */\n    reset: function reset() {\n        this._instanceSetUp();\n        this._elementsSetUp();\n        this.render();\n    },\n\n    /** deselect all elements */\n    clearSelectedElements: function clearSelectedElements(ev) {\n        this.$(\".collection-elements .collection-element\").removeClass(\"selected\");\n        this.$(\".collection-elements-controls > .clear-selected\").hide();\n    },\n\n    //_dragenterElements : function( ev ){\n    //    //this.debug( '_dragenterElements:', ev );\n    //},\n    //TODO: if selected are dragged out of the list area - remove the placeholder - cuz it won't work anyway\n    // _dragleaveElements : function( ev ){\n    //    //this.debug( '_dragleaveElements:', ev );\n    // },\n\n    /** track the mouse drag over the list adding a placeholder to show where the drop would occur */\n    _dragoverElements: function _dragoverElements(ev) {\n        //this.debug( '_dragoverElements:', ev );\n        ev.preventDefault();\n\n        var $list = this.$list();\n        this._checkForAutoscroll($list, ev.originalEvent.clientY);\n        var $nearest = this._getNearestElement(ev.originalEvent.clientY);\n\n        //TODO: no need to re-create - move instead\n        this.$(\".element-drop-placeholder\").remove();\n        var $placeholder = $('<div class=\"element-drop-placeholder\"></div>');\n        if (!$nearest.length) {\n            $list.append($placeholder);\n        } else {\n            $nearest.before($placeholder);\n        }\n    },\n\n    /** If the mouse is near enough to the list's top or bottom, scroll the list */\n    _checkForAutoscroll: function _checkForAutoscroll($element, y) {\n        var AUTOSCROLL_SPEED = 2,\n            offset = $element.offset(),\n            scrollTop = $element.scrollTop(),\n            upperDist = y - offset.top,\n            lowerDist = offset.top + $element.outerHeight() - y;\n        if (upperDist >= 0 && upperDist < this.autoscrollDist) {\n            $element.scrollTop(scrollTop - AUTOSCROLL_SPEED);\n        } else if (lowerDist >= 0 && lowerDist < this.autoscrollDist) {\n            $element.scrollTop(scrollTop + AUTOSCROLL_SPEED);\n        }\n    },\n\n    /** get the nearest element based on the mouse's Y coordinate.\n    *  If the y is at the end of the list, return an empty jQuery object.\n    */\n    _getNearestElement: function _getNearestElement(y) {\n        var WIGGLE = 4,\n            lis = this.$(\".collection-elements li.collection-element\").toArray();\n        for (var i = 0; i < lis.length; i++) {\n            var $li = $(lis[i]),\n                top = $li.offset().top,\n                halfHeight = Math.floor($li.outerHeight() / 2) + WIGGLE;\n            if (top + halfHeight > y && top - halfHeight < y) {\n                return $li;\n            }\n        }\n        return $();\n    },\n\n    /** drop (dragged/selected elements) onto the list, re-ordering the internal list */\n    _dropElements: function _dropElements(ev) {\n        if (ev.originalEvent) {\n            ev = ev.originalEvent;\n        }\n        // both required for firefox\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"move\";\n\n        // insert before the nearest element or after the last.\n        var $nearest = this._getNearestElement(ev.clientY);\n        if ($nearest.length) {\n            this.$dragging.insertBefore($nearest);\n        } else {\n            // no nearest before - insert after last element\n            this.$dragging.insertAfter(this.$(\".collection-elements .collection-element\").last());\n        }\n        // resync the creator's list based on the new DOM order\n        this._syncOrderToDom();\n        return false;\n    },\n\n    /** resync the creator's list of elements based on the DOM order */\n    _syncOrderToDom: function _syncOrderToDom() {\n        var creator = this,\n            newElements = [];\n        //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n        this.$(\".collection-elements .collection-element\").each(function () {\n            var id = $(this).attr(\"data-element-id\"),\n                element = _.findWhere(creator.workingElements, {\n                id: id\n            });\n            if (element) {\n                newElements.push(element);\n            } else {\n                console.error(\"missing element: \", id);\n            }\n        });\n        this.workingElements = newElements;\n        this._renderList();\n    },\n\n    /** drag communication with element sub-views: dragstart */\n    _elementDragstart: function _elementDragstart(ev, element) {\n        // auto select the element causing the event and move all selected\n        element.select(true);\n        this.$dragging = this.$(\".collection-elements .collection-element.selected\");\n    },\n\n    /** drag communication with element sub-views: dragend - remove the placeholder */\n    _elementDragend: function _elementDragend(ev, element) {\n        $(\".element-drop-placeholder\").remove();\n        this.$dragging = null;\n    },\n\n    // ------------------------------------------------------------------------ templates\n    //TODO: move to require text plugin and load these as text\n    //TODO: underscore currently unnecc. bc no vars are used\n    //TODO: better way of localizing text-nodes in long strings\n    /** underscore template fns attached to class */\n    templates: _.extend({}, _baseCreator2.default.CollectionCreatorMixin._creatorTemplates, {\n        /** the header (not including help text) */\n        header: _.template(['<div class=\"main-help well clear\">', '<a class=\"more-help\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"More help\"), \"</a>\", '<div class=\"help-content\">', '<a class=\"less-help\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Less\"), \"</a>\", \"</div>\", \"</div>\", '<div class=\"alert alert-dismissable\">', '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" ', 'title=\"', (0, _localization2.default)(\"Close and show more help\"), '\" aria-hidden=\"true\">&times;</button>', '<span class=\"alert-message\"></span>', \"</div>\"].join(\"\")),\n\n        /** the middle: element list */\n        middle: _.template(['<div class=\"collection-elements-controls\">', '<a class=\"reset\" href=\"javascript:void(0);\" ', 'title=\"', (0, _localization2.default)(\"Undo all reordering and discards\"), '\">', (0, _localization2.default)(\"Start over\"), \"</a>\", '<a class=\"clear-selected\" href=\"javascript:void(0);\" ', 'title=\"', (0, _localization2.default)(\"De-select all selected datasets\"), '\">', (0, _localization2.default)(\"Clear selected\"), \"</a>\", \"</div>\", '<div class=\"collection-elements scroll-container flex-row\">', \"</div>\"].join(\"\")),\n\n        /** creation and cancel controls */\n        footer: _.template(['<div class=\"attributes clear\">', '<div class=\"clear\">', '<label class=\"setting-prompt pull-right\">', (0, _localization2.default)(\"Hide original elements\"), \"?\", '<input class=\"hide-originals pull-right\" type=\"checkbox\" />', \"</label>\", \"</div>\", '<div class=\"clear\">', '<input class=\"collection-name form-control pull-right\" ', 'placeholder=\"', (0, _localization2.default)(\"Enter a name for your new collection\"), '\" />', '<div class=\"collection-name-prompt pull-right\">', (0, _localization2.default)(\"Name\"), \":</div>\", \"</div>\", \"</div>\", '<div class=\"actions clear vertically-spaced\">', '<div class=\"other-options pull-left\">', '<button class=\"cancel-create btn\" tabindex=\"-1\">', (0, _localization2.default)(\"Cancel\"), \"</button>\", '<div class=\"create-other btn-group dropup\">', '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">', (0, _localization2.default)(\"Create a different kind of collection\"), ' <span class=\"caret\"></span>', \"</button>\", '<ul class=\"dropdown-menu\" role=\"menu\">', '<li><a href=\"#\">', (0, _localization2.default)(\"Create a <i>single</i> pair\"), \"</a></li>\", '<li><a href=\"#\">', (0, _localization2.default)(\"Create a list of <i>unpaired</i> datasets\"), \"</a></li>\", \"</ul>\", \"</div>\", \"</div>\", '<div class=\"main-options pull-right\">', '<button class=\"create-collection btn btn-primary\">', (0, _localization2.default)(\"Create list\"), \"</button>\", \"</div>\", \"</div>\"].join(\"\")),\n\n        /** help content */\n        helpContent: _.template([\"<p>\", (0, _localization2.default)([\"Collections of datasets are permanent, ordered lists of datasets that can be passed to tools and \", \"workflows in order to have analyses done on each member of the entire group. This interface allows \", \"you to create a collection and re-order the final collection.\"].join(\"\")), \"</p>\", \"<ul>\", \"<li>\", (0, _localization2.default)([\"Rename elements in the list by clicking on \", '<i data-target=\".collection-element .name\">the existing name</i>.'].join(\"\")), \"</li>\", \"<li>\", (0, _localization2.default)([\"Discard elements from the final created list by clicking on the \", '<i data-target=\".collection-element .discard\">\"Discard\"</i> button.'].join(\"\")), \"</li>\", \"<li>\", (0, _localization2.default)([\"Reorder the list by clicking and dragging elements. Select multiple elements by clicking on \", '<i data-target=\".collection-element\">them</i> and you can then move those selected by dragging the ', \"entire group. Deselect them by clicking them again or by clicking the \", 'the <i data-target=\".clear-selected\">\"Clear selected\"</i> link.'].join(\"\")), \"</li>\", \"<li>\", (0, _localization2.default)(['Click the <i data-target=\".reset\">\"Start over\"</i> link to begin again as if you had just opened ', \"the interface.\"].join(\"\")), \"</li>\", \"<li>\", (0, _localization2.default)(['Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'].join(\"\")), \"</li>\", \"</ul><br />\", \"<p>\", (0, _localization2.default)(['Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ', 'click <i data-target=\".create-collection\">\"Create list\"</i>.'].join(\"\")), \"</p>\"].join(\"\")),\n\n        /** shown in list when all elements are discarded */\n        invalidElements: _.template([(0, _localization2.default)(\"The following selections could not be included due to problems:\"), \"<ul><% _.each( problems, function( problem ){ %>\", \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\", \"<% }); %></ul>\"].join(\"\")),\n\n        /** shown in list when all elements are discarded */\n        noElementsLeft: _.template(['<li class=\"no-elements-left-message\">', (0, _localization2.default)(\"No elements left! \"), (0, _localization2.default)(\"Would you like to \"), '<a class=\"reset\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"start over\"), \"</a>?\", \"</li>\"].join(\"\")),\n\n        /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n        invalidInitial: _.template(['<div class=\"header flex-row no-flex\">', '<div class=\"alert alert-warning\" style=\"display: block\">', '<span class=\"alert-message\">', \"<% if( _.size( problems ) ){ %>\", (0, _localization2.default)(\"The following selections could not be included due to problems\"), \":\", \"<ul><% _.each( problems, function( problem ){ %>\", \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\", \"<% }); %></ul>\", \"<% } else if( _.size( elements ) < 1 ){ %>\", (0, _localization2.default)(\"No datasets were selected\"), \".\", \"<% } %>\", \"<br />\", (0, _localization2.default)(\"At least one element is needed for the collection\"), \". \", (0, _localization2.default)(\"You may need to \"), '<a class=\"cancel-create\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"cancel\"), \"</a> \", (0, _localization2.default)(\"and reselect new elements\"), \".\", \"</span>\", \"</div>\", \"</div>\", '<div class=\"footer flex-row no-flex\">', '<div class=\"actions clear vertically-spaced\">', '<div class=\"other-options pull-left\">', '<button class=\"cancel-create btn\" tabindex=\"-1\">', (0, _localization2.default)(\"Cancel\"), \"</button>\",\n        // _l( 'Create a different kind of collection' ),\n        \"</div>\", \"</div>\", \"</div>\"].join(\"\"))\n    }),\n\n    // ------------------------------------------------------------------------ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListCollectionCreator\";\n    }\n});\n\n//=============================================================================\n/** Create a modal and load its body with the given CreatorClass creator type\n *  @returns {Deferred} resolved when creator has built a collection.\n */\nvar collectionCreatorModal = function _collectionCreatorModal(elements, options, CreatorClass) {\n    var deferred = jQuery.Deferred(),\n        modal = Galaxy.modal || new _uiModal2.default.View(),\n        creator;\n\n    options = _.defaults(options || {}, {\n        elements: elements,\n        oncancel: function oncancel() {\n            modal.hide();\n            deferred.reject(\"cancelled\");\n        },\n        oncreate: function oncreate(creator, response) {\n            modal.hide();\n            deferred.resolve(response);\n        }\n    });\n\n    creator = new CreatorClass(options);\n    modal.show({\n        title: options.title || (0, _localization2.default)(\"Create a collection\"),\n        body: creator.$el,\n        width: \"80%\",\n        height: \"100%\",\n        closing_events: true\n    });\n    creator.render();\n    window._collectionCreator = creator;\n\n    //TODO: remove modal header\n    return deferred;\n};\n\n/** List collection flavor of collectionCreatorModal. */\nvar listCollectionCreatorModal = function _listCollectionCreatorModal(elements, options) {\n    options = options || {};\n    options.title = (0, _localization2.default)(\"Create a collection from a list of datasets\");\n    return collectionCreatorModal(elements, options, ListCollectionCreator);\n};\n\n//==============================================================================\n/** Use a modal to create a list collection, then add it to the given history contents.\n *  @returns {Deferred} resolved when the collection is added to the history.\n */\nfunction createListCollection(contents, defaultHideSourceItems) {\n    var elements = contents.toJSON(),\n        promise = listCollectionCreatorModal(elements, {\n        defaultHideSourceItems: defaultHideSourceItems,\n        creationFn: function creationFn(elements, name, hideSourceItems) {\n            elements = elements.map(function (element) {\n                return {\n                    id: element.id,\n                    name: element.name,\n                    //TODO: this allows for list:list even if the filter above does not - reconcile\n                    src: element.history_content_type === \"dataset\" ? \"hda\" : \"hdca\"\n                };\n            });\n            return contents.createHDCA(elements, \"list\", name, hideSourceItems);\n        }\n    });\n    return promise;\n}\n\n//==============================================================================\nexports.default = {\n    DatasetCollectionElementView: DatasetCollectionElementView,\n    ListCollectionCreator: ListCollectionCreator,\n\n    collectionCreatorModal: collectionCreatorModal,\n    listCollectionCreatorModal: listCollectionCreatorModal,\n    createListCollection: createListCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _collectionModel = __webpack_require__(37);\n\nvar _collectionModel2 = _interopRequireDefault(_collectionModel);\n\nvar _historyContentModel = __webpack_require__(73);\n\nvar _historyContentModel2 = _interopRequireDefault(_historyContentModel);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*==============================================================================\n\nModels for DatasetCollections contained within a history.\n\nTODO:\n    these might be compactable to one class if some duplication with\n    collection-model is used.\n\n==============================================================================*/\nvar hcontentMixin = _historyContentModel2.default.HistoryContentMixin,\n    ListDC = _collectionModel2.default.ListDatasetCollection,\n    PairDC = _collectionModel2.default.PairDatasetCollection,\n    ListPairedDC = _collectionModel2.default.ListPairedDatasetCollection,\n    ListOfListsDC = _collectionModel2.default.ListOfListsDatasetCollection;\n\n//==============================================================================\n/** Override to post to contents route w/o id. */\nfunction buildHDCASave(_super) {\n    return function _save(attributes, options) {\n        if (this.isNew()) {\n            options = options || {};\n            options.url = this.urlRoot + this.get(\"history_id\") + \"/contents\";\n            attributes = attributes || {};\n            attributes.type = \"dataset_collection\";\n        }\n        return _super.call(this, attributes, options);\n    };\n}\n\n//==============================================================================\n/** @class Backbone model for List Dataset Collection within a History.\n */\nvar HistoryListDatasetCollection = ListDC.extend(hcontentMixin).extend(\n/** @lends HistoryListDatasetCollection.prototype */{\n    defaults: _.extend(_.clone(ListDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"list\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(ListDC.prototype.save),\n\n    /** String representation. */\n    toString: function toString() {\n        return \"History\" + ListDC.prototype.toString.call(this);\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for Pair Dataset Collection within a History.\n *  @constructs\n */\nvar HistoryPairDatasetCollection = PairDC.extend(hcontentMixin).extend(\n/** @lends HistoryPairDatasetCollection.prototype */{\n    defaults: _.extend(_.clone(PairDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"paired\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(PairDC.prototype.save),\n\n    /** String representation. */\n    toString: function toString() {\n        return \"History\" + PairDC.prototype.toString.call(this);\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for List of Pairs Dataset Collection within a History. */\nvar HistoryListPairedDatasetCollection = ListPairedDC.extend(hcontentMixin).extend({\n    defaults: _.extend(_.clone(ListPairedDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"list:paired\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(ListPairedDC.prototype.save),\n\n    /** String representation. */\n    toString: function toString() {\n        return \"History\" + ListPairedDC.prototype.toString.call(this);\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for List of Lists Dataset Collection within a History. */\nvar HistoryListOfListsDatasetCollection = ListOfListsDC.extend(hcontentMixin).extend({\n    defaults: _.extend(_.clone(ListOfListsDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"list:list\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(ListOfListsDC.prototype.save),\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"HistoryListOfListsDatasetCollection(\", this.get(\"name\"), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexports.default = {\n    HistoryListDatasetCollection: HistoryListDatasetCollection,\n    HistoryPairDatasetCollection: HistoryPairDatasetCollection,\n    HistoryListPairedDatasetCollection: HistoryListPairedDatasetCollection,\n    HistoryListOfListsDatasetCollection: HistoryListOfListsDatasetCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, Backbone, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _datasetModel = __webpack_require__(72);\n\nvar _datasetModel2 = _interopRequireDefault(_datasetModel);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\n/*\nNotes:\n\nTerminology:\n    DatasetCollection/DC : a container of datasets or nested DatasetCollections\n    Element/DatasetCollectionElement/DCE : an item contained in a DatasetCollection\n    HistoryDatasetCollectionAssociation/HDCA: a DatasetCollection contained in a history\n\n\nThis all seems too complex unfortunately:\n\n- Terminology collision between DatasetCollections (DCs) and Backbone Collections.\n- In the DatasetCollections API JSON, DC Elements use a 'Has A' stucture to *contain*\n    either a dataset or a nested DC. This would make the hierarchy much taller. I've\n    decided to merge the contained JSON with the DC element json - making the 'has a'\n    relation into an 'is a' relation. This seems simpler to me and allowed a lot of\n    DRY in both models and views, but may make tracking or tracing within these models\n    more difficult (since DatasetCollectionElements are now *also* DatasetAssociations\n    or DatasetCollections (nested)). This also violates the rule of thumb about\n    favoring aggregation over inheritance.\n- Currently, there are three DatasetCollection subclasses: List, Pair, and ListPaired.\n    These each should a) be usable on their own, b) be usable in the context of\n    nesting within a collection model (at least in the case of ListPaired), and\n    c) be usable within the context of other container models (like History or\n    LibraryFolder, etc.). I've tried to separate/extract classes in order to\n    handle those three situations, but it's proven difficult to do in a simple,\n    readable manner.\n- Ideally, histories and libraries would inherit from the same server models as\n    dataset collections do since they are (in essence) dataset collections themselves -\n    making the whole nested structure simpler. This would be a large, error-prone\n    refactoring and migration.\n\nMany of the classes and heirarchy are meant as extension points so, while the\nrelations and flow may be difficult to understand initially, they'll allow us to\nhandle the growth or flux dataset collection in the future (w/o actually implementing\nany YAGNI).\n\n*/\n//_________________________________________________________________________________________________ ELEMENTS\n/** @class mixin for Dataset collection elements.\n *      When collection elements are passed from the API, the underlying element is\n *          in a sub-object 'object' (IOW, a DCE representing an HDA will have HDA json in element.object).\n *      This mixin uses the constructor and parse methods to merge that JSON with the DCE attribtues\n *          effectively changing a DCE from a container to a subclass (has a --> is a).\n */\nvar DatasetCollectionElementMixin = {\n    /** default attributes used by elements in a dataset collection */\n    defaults: {\n        model_class: \"DatasetCollectionElement\",\n        element_identifier: null,\n        element_index: null,\n        element_type: null\n    },\n\n    /** merge the attributes of the sub-object 'object' into this model */\n    _mergeObject: function _mergeObject(attributes) {\n        // if we don't preserve and correct ids here, the element id becomes the object id\n        // and collision in backbone's _byId will occur and only\n        _.extend(attributes, attributes.object, {\n            element_id: attributes.id\n        });\n        delete attributes.object;\n        return attributes;\n    },\n\n    /** override to merge this.object into this */\n    constructor: function constructor(attributes, options) {\n        // console.debug( '\\t DatasetCollectionElement.constructor:', attributes, options );\n        attributes = this._mergeObject(attributes);\n        this.idAttribute = \"element_id\";\n        Backbone.Model.apply(this, arguments);\n    },\n\n    /** when the model is fetched, merge this.object into this */\n    parse: function parse(response, options) {\n        var attributes = response;\n        attributes = this._mergeObject(attributes);\n        return attributes;\n    }\n};\n\n/** @class Concrete class of Generic DatasetCollectionElement */\nvar DatasetCollectionElement = Backbone.Model.extend(_baseMvc2.default.LoggableMixin).extend(DatasetCollectionElementMixin).extend({ _logNamespace: \"collections\" });\n\n//==============================================================================\n/** @class Base/Abstract Backbone collection for Generic DCEs. */\nvar DCECollection = Backbone.Collection.extend(_baseMvc2.default.LoggableMixin).extend(\n/** @lends DCECollection.prototype */{\n    _logNamespace: \"collections\",\n\n    model: DatasetCollectionElement,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"DatasetCollectionElementCollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for a dataset collection element that is a dataset (HDA).\n */\nvar DatasetDCE = _datasetModel2.default.DatasetAssociation.extend(_baseMvc2.default.mixin(DatasetCollectionElementMixin,\n/** @lends DatasetDCE.prototype */{\n    /** url fn */\n    url: function url() {\n        // won't always be an hda\n        if (!this.has(\"history_id\")) {\n            console.warn(\"no endpoint for non-hdas within a collection yet\");\n            // (a little silly since this api endpoint *also* points at hdas)\n            return Galaxy.root + \"api/datasets\";\n        }\n        return Galaxy.root + \"api/histories/\" + this.get(\"history_id\") + \"/contents/\" + this.get(\"id\");\n    },\n\n    defaults: _.extend({}, _datasetModel2.default.DatasetAssociation.prototype.defaults, DatasetCollectionElementMixin.defaults),\n\n    _downloadQueryParameters: function _downloadQueryParameters() {\n        return \"?to_ext=\" + this.get(\"file_ext\") + \"&hdca_id=\" + this.get(\"parent_hdca_id\") + \"&element_identifier=\" + this.get(\"element_identifier\");\n    },\n\n    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n    //  - re-apply manually for now\n    /** call the mixin constructor */\n    constructor: function constructor(attributes, options) {\n        this.debug(\"\\t DatasetDCE.constructor:\", attributes, options);\n        //DATASET_MODEL.DatasetAssociation.prototype.constructor.call( this, attributes, options );\n        DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n    },\n\n    /** Does this model already contain detailed data (as opposed to just summary level data)? */\n    hasDetails: function hasDetails() {\n        return this.elements && this.elements.length;\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        var objStr = this.get(\"element_identifier\");\n        return [\"DatasetDCE(\", objStr, \")\"].join(\"\");\n    }\n}));\n\n//==============================================================================\n/** @class DCECollection of DatasetDCE's (a list of datasets, a pair of datasets).\n */\nvar DatasetDCECollection = DCECollection.extend(\n/** @lends DatasetDCECollection.prototype */{\n    model: DatasetDCE,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"DatasetDCECollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//_________________________________________________________________________________________________ COLLECTIONS\n/** @class Backbone model for Dataset Collections.\n *      The DC API returns an array of JSON objects under the attribute elements.\n *      This model:\n *          - removes that array/attribute ('elements') from the model,\n *          - creates a bbone collection (of the class defined in the 'collectionClass' attribute),\n *          - passes that json onto the bbone collection\n *          - caches the bbone collection in this.elements\n */\nvar DatasetCollection = Backbone.Model.extend(_baseMvc2.default.LoggableMixin).extend(_baseMvc2.default.SearchableModelMixin).extend(\n/** @lends DatasetCollection.prototype */{\n    _logNamespace: \"collections\",\n\n    /** default attributes for a model */\n    defaults: {\n        /* 'list', 'paired', or 'list:paired' */\n        collection_type: null,\n        //??\n        deleted: false\n    },\n\n    /** Which class to use for elements */\n    collectionClass: DCECollection,\n\n    /** set up: create elements instance var and (on changes to elements) update them  */\n    initialize: function initialize(model, options) {\n        this.debug(this + \"(DatasetCollection).initialize:\", model, options, this);\n        this.elements = this._createElementsModel();\n        this.on(\"change:elements\", function () {\n            this.log(\"change:elements\");\n            //TODO: prob. better to update the collection instead of re-creating it\n            this.elements = this._createElementsModel();\n        });\n    },\n\n    /** move elements model attribute to full collection */\n    _createElementsModel: function _createElementsModel() {\n        this.debug(this + \"._createElementsModel\", this.collectionClass, this.get(\"elements\"), this.elements);\n        //TODO: same patterns as DatasetCollectionElement _createObjectModel - refactor to BASE_MVC.hasSubModel?\n        var elements = this.get(\"elements\") || [];\n        this.unset(\"elements\", { silent: true });\n        var self = this;\n        _.each(elements, function (element, index) {\n            _.extend(element, {\n                parent_hdca_id: self.get(\"id\")\n            });\n        });\n        this.elements = new this.collectionClass(elements);\n        //this.debug( 'collectionClass:', this.collectionClass + '', this.elements );\n        return this.elements;\n    },\n\n    // ........................................................................ common queries\n    /** pass the elements back within the model json when this is serialized */\n    toJSON: function toJSON() {\n        var json = Backbone.Model.prototype.toJSON.call(this);\n        if (this.elements) {\n            json.elements = this.elements.toJSON();\n        }\n        return json;\n    },\n\n    /** Is this collection in a 'ready' state no processing (for the collection) is left\n    *  to do on the server.\n    */\n    inReadyState: function inReadyState() {\n        var populated = this.get(\"populated\");\n        return this.isDeletedOrPurged() || populated;\n    },\n\n    //TODO:?? the following are the same interface as DatasetAssociation - can we combine?\n    /** Does the DC contain any elements yet? Is a fetch() required? */\n    hasDetails: function hasDetails() {\n        return this.elements.length !== 0;\n    },\n\n    /** Given the filters, what models in this.elements would be returned? */\n    getVisibleContents: function getVisibleContents(filters) {\n        // filters unused for now\n        return this.elements;\n    },\n\n    // ........................................................................ ajax\n    /** override to use actual Dates objects for create/update times */\n    parse: function parse(response, options) {\n        var parsed = Backbone.Model.prototype.parse.call(this, response, options);\n        if (parsed.create_time) {\n            parsed.create_time = new Date(parsed.create_time);\n        }\n        if (parsed.update_time) {\n            parsed.update_time = new Date(parsed.update_time);\n        }\n        return parsed;\n    },\n\n    /** save this dataset, _Mark_ing it as deleted (just a flag) */\n    delete: function _delete(options) {\n        if (this.get(\"deleted\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: true }, options);\n    },\n    /** save this dataset, _Mark_ing it as undeleted */\n    undelete: function undelete(options) {\n        if (!this.get(\"deleted\") || this.get(\"purged\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: false }, options);\n    },\n\n    /** Is this collection deleted or purged? */\n    isDeletedOrPurged: function isDeletedOrPurged() {\n        return this.get(\"deleted\") || this.get(\"purged\");\n    },\n\n    // ........................................................................ searchable\n    /** searchable attributes for collections */\n    searchAttributes: [\"name\", \"tags\"],\n\n    // ........................................................................ misc\n    /** String representation */\n    toString: function toString() {\n        var idAndName = [this.get(\"id\"), this.get(\"name\") || this.get(\"element_identifier\")];\n        return \"DatasetCollection(\" + idAndName.join(\",\") + \")\";\n    }\n});\n\n//==============================================================================\n/** Model for a DatasetCollection containing datasets (non-nested).\n */\nvar ListDatasetCollection = DatasetCollection.extend(\n/** @lends ListDatasetCollection.prototype */{\n    /** override since we know the collection will only contain datasets */\n    collectionClass: DatasetDCECollection,\n\n    /** String representation. */\n    toString: function toString() {\n        return \"List\" + DatasetCollection.prototype.toString.call(this);\n    }\n});\n\n//==============================================================================\n/** Model for a DatasetCollection containing fwd/rev datasets (a list of 2).\n */\nvar PairDatasetCollection = ListDatasetCollection.extend(\n/** @lends PairDatasetCollection.prototype */{\n    /** String representation. */\n    toString: function toString() {\n        return \"Pair\" + DatasetCollection.prototype.toString.call(this);\n    }\n});\n\n//_________________________________________________________________________________________________ NESTED COLLECTIONS\n// this is where things get weird, man. Weird.\n//TODO: it might be possible to compact all the following...I think.\n//==============================================================================\n/** @class Backbone model for a Generic DatasetCollectionElement that is also a DatasetCollection\n *      (a nested collection). Currently only list:paired.\n */\nvar NestedDCDCE = DatasetCollection.extend(_baseMvc2.default.mixin(DatasetCollectionElementMixin,\n/** @lends NestedDCDCE.prototype */{\n    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n    //  - re-apply manually it now\n    /** call the mixin constructor */\n    constructor: function constructor(attributes, options) {\n        this.debug(\"\\t NestedDCDCE.constructor:\", attributes, options);\n        DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        var objStr = this.object ? \"\" + this.object : this.get(\"element_identifier\");\n        return [\"NestedDCDCE(\", objStr, \")\"].join(\"\");\n    }\n}));\n\n//==============================================================================\n/** @class Backbone collection containing Generic NestedDCDCE's (nested dataset collections).\n */\nvar NestedDCDCECollection = DCECollection.extend(\n/** @lends NestedDCDCECollection.prototype */{\n    /** This is a collection of nested collections */\n    model: NestedDCDCE,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"NestedDCDCECollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for a paired dataset collection within a list:paired dataset collection.\n */\nvar NestedPairDCDCE = PairDatasetCollection.extend(_baseMvc2.default.mixin(DatasetCollectionElementMixin,\n/** @lends NestedPairDCDCE.prototype */{\n    //TODO:?? possibly rename to NestedDatasetCollection?\n\n    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n    //  - re-apply manually it now\n    /** This is both a collection and a collection element - call the constructor */\n    constructor: function constructor(attributes, options) {\n        this.debug(\"\\t NestedPairDCDCE.constructor:\", attributes, options);\n        //DatasetCollection.constructor.call( this, attributes, options );\n        DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        var objStr = this.object ? \"\" + this.object : this.get(\"element_identifier\");\n        return [\"NestedPairDCDCE(\", objStr, \")\"].join(\"\");\n    }\n}));\n\n//==============================================================================\n/** @class Backbone collection for a backbone collection containing paired dataset collections.\n */\nvar NestedPairDCDCECollection = NestedDCDCECollection.extend(\n/** @lends PairDCDCECollection.prototype */{\n    /** We know this collection is composed of only nested pair collections */\n    model: NestedPairDCDCE,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"NestedPairDCDCECollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone Model for a DatasetCollection (list) that contains DatasetCollections (pairs).\n */\nvar ListPairedDatasetCollection = DatasetCollection.extend(\n/** @lends ListPairedDatasetCollection.prototype */{\n    /** list:paired is the only collection that itself contains collections */\n    collectionClass: NestedPairDCDCECollection,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"ListPairedDatasetCollection(\", this.get(\"name\"), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for a list dataset collection within a list:list dataset collection. */\nvar NestedListDCDCE = ListDatasetCollection.extend(_baseMvc2.default.mixin(DatasetCollectionElementMixin,\n/** @lends NestedListDCDCE.prototype */{\n    /** This is both a collection and a collection element - call the constructor */\n    constructor: function constructor(attributes, options) {\n        this.debug(\"\\t NestedListDCDCE.constructor:\", attributes, options);\n        DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        var objStr = this.object ? \"\" + this.object : this.get(\"element_identifier\");\n        return [\"NestedListDCDCE(\", objStr, \")\"].join(\"\");\n    }\n}));\n\n//==============================================================================\n/** @class Backbone collection containing list dataset collections. */\nvar NestedListDCDCECollection = NestedDCDCECollection.extend({\n    /** We know this collection is composed of only nested pair collections */\n    model: NestedListDCDCE,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"NestedListDCDCECollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone Model for a DatasetCollection (list) that contains other lists. */\nvar ListOfListsDatasetCollection = DatasetCollection.extend({\n    /** list:paired is the only collection that itself contains collections */\n    collectionClass: NestedListDCDCECollection,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"ListOfListsDatasetCollection(\", this.get(\"name\"), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexports.default = {\n    ListDatasetCollection: ListDatasetCollection,\n    PairDatasetCollection: PairDatasetCollection,\n    ListPairedDatasetCollection: ListPairedDatasetCollection,\n    ListOfListsDatasetCollection: ListOfListsDatasetCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, jQuery, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _historyContents = __webpack_require__(39);\n\nvar _historyContents2 = _interopRequireDefault(_historyContents);\n\nvar _historyPreferences = __webpack_require__(40);\n\nvar _historyPreferences2 = _interopRequireDefault(_historyPreferences);\n\nvar _controlledFetchCollection = __webpack_require__(80);\n\nvar _controlledFetchCollection2 = _interopRequireDefault(_controlledFetchCollection);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\n/** @class Model for a Galaxy history resource - both a record of user\n *      tool use and a collection of the datasets those tools produced.\n *  @name History\n *  @augments Backbone.Model\n */\nvar History = Backbone.Model.extend(_baseMvc2.default.LoggableMixin).extend(_baseMvc2.default.mixin(_baseMvc2.default.SearchableModelMixin,\n/** @lends History.prototype */{\n    _logNamespace: \"history\",\n\n    /** ms between fetches when checking running jobs/datasets for updates */\n    UPDATE_DELAY: 4000,\n\n    // values from api (may need more)\n    defaults: {\n        model_class: \"History\",\n        id: null,\n        name: \"Unnamed History\",\n        state: \"new\",\n\n        deleted: false,\n        contents_active: {},\n        contents_states: {}\n    },\n\n    urlRoot: Galaxy.root + \"api/histories\",\n\n    contentsClass: _historyContents2.default.HistoryContents,\n\n    /** What model fields to search with */\n    searchAttributes: [\"name\", \"annotation\", \"tags\"],\n\n    /** Adding title and singular tag */\n    searchAliases: {\n        title: \"name\",\n        tag: \"tags\"\n    },\n\n    // ........................................................................ set up/tear down\n    /** Set up the model\n    *  @param {Object} historyJSON model data for this History\n    *  @param {Object} options     any extra settings including logger\n    */\n    initialize: function initialize(historyJSON, options) {\n        options = options || {};\n        this.logger = options.logger || null;\n        this.log(this + \".initialize:\", historyJSON, options);\n\n        /** HistoryContents collection of the HDAs contained in this history. */\n        this.contents = new this.contentsClass([], {\n            history: this,\n            historyId: this.get(\"id\"),\n            order: options.order\n        });\n\n        this._setUpListeners();\n        this._setUpCollectionListeners();\n\n        /** cached timeout id for the dataset updater */\n        this.updateTimeoutId = null;\n    },\n\n    /** set up any event listeners for this history including those to the contained HDAs\n    *  events: error:contents  if an error occurred with the contents collection\n    */\n    _setUpListeners: function _setUpListeners() {\n        // if the model's id changes ('current' or null -> an actual id), update the contents history_id\n        return this.on({\n            error: function error(model, xhr, options, msg, details) {\n                this.clearUpdateTimeout();\n            },\n            \"change:id\": function changeId(model, newId) {\n                if (this.contents) {\n                    this.contents.historyId = newId;\n                }\n            }\n        });\n    },\n\n    /** event handlers for the contents submodels */\n    _setUpCollectionListeners: function _setUpCollectionListeners() {\n        if (!this.contents) {\n            return this;\n        }\n        // bubble up errors\n        return this.listenTo(this.contents, {\n            error: function error() {\n                this.trigger.apply(this, jQuery.makeArray(arguments));\n            }\n        });\n    },\n\n    // ........................................................................ derived attributes\n    /**  */\n    contentsShown: function contentsShown() {\n        var contentsActive = this.get(\"contents_active\");\n        var shown = contentsActive.active || 0;\n        shown += this.contents.includeDeleted ? contentsActive.deleted : 0;\n        shown += this.contents.includeHidden ? contentsActive.hidden : 0;\n        return shown;\n    },\n\n    /** convert size in bytes to a more human readable version */\n    nice_size: function nice_size() {\n        var size = this.get(\"size\");\n        return size ? _utils2.default.bytesToString(size, true, 2) : (0, _localization2.default)(\"(empty)\");\n    },\n\n    /** override to add nice_size */\n    toJSON: function toJSON() {\n        return _.extend(Backbone.Model.prototype.toJSON.call(this), {\n            nice_size: this.nice_size()\n        });\n    },\n\n    /** override to allow getting nice_size */\n    get: function get(key) {\n        if (key === \"nice_size\") {\n            return this.nice_size();\n        }\n        return Backbone.Model.prototype.get.apply(this, arguments);\n    },\n\n    // ........................................................................ common queries\n    /** T/F is this history owned by the current user (Galaxy.user)\n    *      Note: that this will return false for an anon user even if the history is theirs.\n    */\n    ownedByCurrUser: function ownedByCurrUser() {\n        // no currUser\n        if (!Galaxy || !Galaxy.user) {\n            return false;\n        }\n        // user is anon or history isn't owned\n        if (Galaxy.user.isAnonymous() || Galaxy.user.id !== this.get(\"user_id\")) {\n            return false;\n        }\n        return true;\n    },\n\n    /** Return the number of running jobs assoc with this history (note: unknown === 0) */\n    numOfUnfinishedJobs: function numOfUnfinishedJobs() {\n        var unfinishedJobIds = this.get(\"non_ready_jobs\");\n        return unfinishedJobIds ? unfinishedJobIds.length : 0;\n    },\n\n    /** Return the number of running hda/hdcas in this history (note: unknown === 0) */\n    numOfUnfinishedShownContents: function numOfUnfinishedShownContents() {\n        return this.contents.runningAndActive().length || 0;\n    },\n\n    // ........................................................................ updates\n    _fetchContentRelatedAttributes: function _fetchContentRelatedAttributes() {\n        var contentRelatedAttrs = [\"size\", \"non_ready_jobs\", \"contents_active\", \"hid_counter\"];\n        return this.fetch({\n            data: $.param({\n                keys: contentRelatedAttrs.join(\",\")\n            })\n        });\n    },\n\n    /** check for any changes since the last time we updated (or fetch all if ) */\n    refresh: function refresh(options) {\n        // console.log( this + '.refresh' );\n        options = options || {};\n        var self = this;\n\n        // note if there was no previous update time, all summary contents will be fetched\n        var lastUpdateTime = self.lastUpdateTime;\n        // if we don't flip this, then a fully-fetched list will not be re-checked via fetch\n        this.contents.allFetched = false;\n        var fetchFn = self.contents.currentPage !== 0 ? function () {\n            return self.contents.fetchPage(self.contents.currentPage);\n        } : function () {\n            return self.contents.fetchUpdated(lastUpdateTime);\n        };\n        // note: if there was no previous update time, all summary contents will be fetched\n        return fetchFn().done(function (response, status, xhr) {\n            var serverResponseDatetime;\n            try {\n                serverResponseDatetime = new Date(xhr.getResponseHeader(\"Date\"));\n            } catch (err) {}\n            self.lastUpdateTime = serverResponseDatetime || new Date();\n            self.checkForUpdates(options);\n        });\n    },\n\n    /** continuously fetch updated contents every UPDATE_DELAY ms if this history's datasets or jobs are unfinished */\n    checkForUpdates: function checkForUpdates(options) {\n        // console.log( this + '.checkForUpdates' );\n        options = options || {};\n        var delay = this.UPDATE_DELAY;\n        var self = this;\n        if (!self.id) {\n            return;\n        }\n\n        function _delayThenUpdate() {\n            // prevent buildup of updater timeouts by clearing previous if any, then set new and cache id\n            self.clearUpdateTimeout();\n            self.updateTimeoutId = setTimeout(function () {\n                self.refresh(options);\n            }, delay);\n        }\n\n        // if there are still datasets in the non-ready state, recurse into this function with the new time\n        var nonReadyContentCount = this.numOfUnfinishedShownContents();\n        // console.log( 'nonReadyContentCount:', nonReadyContentCount );\n        if (nonReadyContentCount > 0) {\n            _delayThenUpdate();\n        } else {\n            // no datasets are running, but currently runnning jobs may still produce new datasets\n            // see if the history has any running jobs and continue to update if so\n            // (also update the size for the user in either case)\n            self._fetchContentRelatedAttributes().done(function (historyData) {\n                // console.log( 'non_ready_jobs:', historyData.non_ready_jobs );\n                if (self.numOfUnfinishedJobs() > 0) {\n                    _delayThenUpdate();\n                } else {\n                    // otherwise, let listeners know that all updates have stopped\n                    self.trigger(\"ready\");\n                }\n            });\n        }\n    },\n\n    /** clear the timeout and the cached timeout id */\n    clearUpdateTimeout: function clearUpdateTimeout() {\n        if (this.updateTimeoutId) {\n            clearTimeout(this.updateTimeoutId);\n            this.updateTimeoutId = null;\n        }\n    },\n\n    // ........................................................................ ajax\n    /** override to use actual Dates objects for create/update times */\n    parse: function parse(response, options) {\n        var parsed = Backbone.Model.prototype.parse.call(this, response, options);\n        if (parsed.create_time) {\n            parsed.create_time = new Date(parsed.create_time);\n        }\n        if (parsed.update_time) {\n            parsed.update_time = new Date(parsed.update_time);\n        }\n        return parsed;\n    },\n\n    /** fetch this histories data (using options) then it's contents (using contentsOptions) */\n    fetchWithContents: function fetchWithContents(options, contentsOptions) {\n        options = options || {};\n        var self = this;\n\n        // console.log( this + '.fetchWithContents' );\n        // TODO: push down to a base class\n        options.view = \"dev-detailed\";\n\n        // fetch history then use history data to fetch (paginated) contents\n        return this.fetch(options).then(function getContents(history) {\n            self.contents.history = self;\n            self.contents.setHistoryId(history.id);\n            return self.fetchContents(contentsOptions);\n        });\n    },\n\n    /** fetch this histories contents, adjusting options based on the stored history preferences */\n    fetchContents: function fetchContents(options) {\n        options = options || {};\n        var self = this;\n\n        // we're updating, reset the update time\n        self.lastUpdateTime = new Date();\n        return self.contents.fetchCurrentPage(options);\n    },\n\n    /** save this history, _Mark_ing it as deleted (just a flag) */\n    _delete: function _delete(options) {\n        if (this.get(\"deleted\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: true }, options);\n    },\n    /** purge this history, _Mark_ing it as purged and removing all dataset data from the server */\n    purge: function purge(options) {\n        if (this.get(\"purged\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: true, purged: true }, options);\n    },\n    /** save this history, _Mark_ing it as undeleted */\n    undelete: function undelete(options) {\n        if (!this.get(\"deleted\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: false }, options);\n    },\n\n    /** Make a copy of this history on the server\n    *  @param {Boolean} current    if true, set the copy as the new current history (default: true)\n    *  @param {String} name        name of new history (default: none - server sets to: Copy of <current name>)\n    *  @fires copied               passed this history and the response JSON from the copy\n    *  @returns {xhr}\n    */\n    copy: function copy(current, name, allDatasets) {\n        current = current !== undefined ? current : true;\n        if (!this.id) {\n            throw new Error(\"You must set the history ID before copying it.\");\n        }\n\n        var postData = { history_id: this.id };\n        if (current) {\n            postData.current = true;\n        }\n        if (name) {\n            postData.name = name;\n        }\n        if (!allDatasets) {\n            postData.all_datasets = false;\n        }\n        postData.view = \"dev-detailed\";\n\n        var history = this;\n        var copy = jQuery.post(this.urlRoot, postData);\n        // if current - queue to setAsCurrent before firing 'copied'\n        if (current) {\n            return copy.then(function (response) {\n                var newHistory = new History(response);\n                return newHistory.setAsCurrent().done(function () {\n                    history.trigger(\"copied\", history, response);\n                });\n            });\n        }\n        return copy.done(function (response) {\n            history.trigger(\"copied\", history, response);\n        });\n    },\n\n    setAsCurrent: function setAsCurrent() {\n        var history = this,\n            xhr = jQuery.getJSON(Galaxy.root + \"history/set_as_current?id=\" + this.id);\n\n        xhr.done(function () {\n            history.trigger(\"set-as-current\", history);\n        });\n        return xhr;\n    },\n\n    // ........................................................................ misc\n    toString: function toString() {\n        return \"History(\" + this.get(\"id\") + \",\" + this.get(\"name\") + \")\";\n    }\n}));\n\n//==============================================================================\nvar _collectionSuper = _controlledFetchCollection2.default.InfinitelyScrollingCollection;\n/** @class A collection of histories (per user)\n *      that maintains the current history as the first in the collection.\n *  New or copied histories become the current history.\n */\nvar HistoryCollection = _collectionSuper.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: \"history\",\n\n    model: History,\n    /** @type {String} initial order used by collection */\n    order: \"update_time\",\n    /** @type {Number} limit used for the first fetch (or a reset) */\n    limitOnFirstFetch: 10,\n    /** @type {Number} limit used for each subsequent fetch */\n    limitPerFetch: 10,\n\n    initialize: function initialize(models, options) {\n        options = options || {};\n        this.log(\"HistoryCollection.initialize\", models, options);\n        _collectionSuper.prototype.initialize.call(this, models, options);\n\n        /** @type {boolean} should deleted histories be included */\n        this.includeDeleted = options.includeDeleted || false;\n\n        /** @type {String} encoded id of the history that's current */\n        this.currentHistoryId = options.currentHistoryId;\n\n        this.setUpListeners();\n        // note: models are sent to reset *after* this fn ends; up to this point\n        // the collection *is empty*\n    },\n\n    urlRoot: Galaxy.root + \"api/histories\",\n    url: function url() {\n        return this.urlRoot;\n    },\n\n    /** set up reflexive event handlers */\n    setUpListeners: function setUpListeners() {\n        return this.on({\n            // when a history is deleted, remove it from the collection (if optionally set to do so)\n            \"change:deleted\": function changeDeleted(history) {\n                // TODO: this becomes complicated when more filters are used\n                this.debug(\"change:deleted\", this.includeDeleted, history.get(\"deleted\"));\n                if (!this.includeDeleted && history.get(\"deleted\")) {\n                    this.remove(history);\n                }\n            },\n            // listen for a history copy, setting it to current\n            copied: function copied(original, newData) {\n                this.setCurrent(new History(newData, []));\n            },\n            // when a history is made current, track the id in the collection\n            \"set-as-current\": function setAsCurrent(history) {\n                var oldCurrentId = this.currentHistoryId;\n                this.trigger(\"no-longer-current\", oldCurrentId);\n                this.currentHistoryId = history.id;\n            }\n        });\n    },\n\n    /** override to change view */\n    _buildFetchData: function _buildFetchData(options) {\n        return _.extend(_collectionSuper.prototype._buildFetchData.call(this, options), {\n            view: \"dev-detailed\"\n        });\n    },\n\n    /** override to filter out deleted and purged */\n    _buildFetchFilters: function _buildFetchFilters(options) {\n        var superFilters = _collectionSuper.prototype._buildFetchFilters.call(this, options) || {};\n        var filters = {};\n        if (!this.includeDeleted) {\n            filters.deleted = false;\n            filters.purged = false;\n        } else {\n            // force API to return both deleted and non\n            //TODO: when the API is updated, remove this\n            filters.deleted = null;\n        }\n        return _.defaults(superFilters, filters);\n    },\n\n    /** override to fetch current as well (as it may be outside the first 10, etc.) */\n    fetchFirst: function fetchFirst(options) {\n        var self = this;\n        // TODO: batch?\n        var xhr = $.when();\n        if (this.currentHistoryId) {\n            xhr = _collectionSuper.prototype.fetchFirst.call(self, {\n                silent: true,\n                limit: 1,\n                filters: {\n                    // without these a deleted current history will return [] here and block the other xhr\n                    purged: \"\",\n                    deleted: \"\",\n                    \"encoded_id-in\": this.currentHistoryId\n                }\n            });\n        }\n        return xhr.then(function () {\n            options = options || {};\n            options.offset = 0;\n            return self.fetchMore(options);\n        });\n    },\n\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: _.extend(_.clone(_collectionSuper.prototype.comparators), {\n        name: _baseMvc2.default.buildComparator(\"name\", {\n            ascending: true\n        }),\n        \"name-dsc\": _baseMvc2.default.buildComparator(\"name\", {\n            ascending: false\n        }),\n        size: _baseMvc2.default.buildComparator(\"size\", {\n            ascending: false\n        }),\n        \"size-asc\": _baseMvc2.default.buildComparator(\"size\", {\n            ascending: true\n        })\n    }),\n\n    /** override to always have the current history first */\n    sort: function sort(options) {\n        options = options || {};\n        var silent = options.silent;\n        var currentHistory = this.remove(this.get(this.currentHistoryId));\n        _collectionSuper.prototype.sort.call(this, _.defaults({ silent: true }, options));\n        this.unshift(currentHistory, { silent: true });\n        if (!silent) {\n            this.trigger(\"sort\", this, options);\n        }\n        return this;\n    },\n\n    /** create a new history and by default set it to be the current history */\n    create: function create(data, hdas, historyOptions, xhrOptions) {\n        //TODO: .create is actually a collection function that's overridden here\n        var collection = this,\n            xhr = jQuery.getJSON(Galaxy.root + \"history/create_new_current\");\n        return xhr.done(function (newData) {\n            collection.setCurrent(new History(newData, [], historyOptions || {}));\n        });\n    },\n\n    /** set the current history to the given history, placing it first in the collection.\n     *  Pass standard bbone options for use in unshift.\n     *  @triggers new-current passed history and this collection\n     */\n    setCurrent: function setCurrent(history, options) {\n        options = options || {};\n        // new histories go in the front\n        this.unshift(history, options);\n        this.currentHistoryId = history.get(\"id\");\n        if (!options.silent) {\n            this.trigger(\"new-current\", history, this);\n        }\n        return this;\n    },\n\n    toString: function toString() {\n        return \"HistoryCollection(\" + this.length + \",current:\" + this.currentHistoryId + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    History: History,\n    HistoryCollection: HistoryCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, jQuery, Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _controlledFetchCollection = __webpack_require__(80);\n\nvar _controlledFetchCollection2 = _interopRequireDefault(_controlledFetchCollection);\n\nvar _hdaModel = __webpack_require__(81);\n\nvar _hdaModel2 = _interopRequireDefault(_hdaModel);\n\nvar _hdcaModel = __webpack_require__(36);\n\nvar _hdcaModel2 = _interopRequireDefault(_hdcaModel);\n\nvar _historyPreferences = __webpack_require__(40);\n\nvar _historyPreferences2 = _interopRequireDefault(_historyPreferences);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _ajaxQueue = __webpack_require__(152);\n\nvar _ajaxQueue2 = _interopRequireDefault(_ajaxQueue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _controlledFetchCollection2.default.PaginatedCollection;\n/** @class Backbone collection for history content.\n *      NOTE: history content seems like a dataset collection, but differs in that it is mixed:\n *          each element can be either an HDA (dataset) or a DatasetCollection and co-exist on\n *          the same level.\n *      Dataset collections on the other hand are not mixed and (so far) can only contain either\n *          HDAs or child dataset collections on one level.\n *      This is why this does not inherit from any of the DatasetCollections (currently).\n */\nvar HistoryContents = _super.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: \"history\",\n\n    // ........................................................................ composite collection\n    /** since history content is a mix, override model fn into a factory, creating based on history_content_type */\n    model: function model(attrs, options) {\n        if (attrs.history_content_type === \"dataset\") {\n            return new _hdaModel2.default.HistoryDatasetAssociation(attrs, options);\n        } else if (attrs.history_content_type === \"dataset_collection\") {\n            switch (attrs.collection_type) {\n                case \"list\":\n                    return new _hdcaModel2.default.HistoryListDatasetCollection(attrs, options);\n                case \"paired\":\n                    return new _hdcaModel2.default.HistoryPairDatasetCollection(attrs, options);\n                case \"list:paired\":\n                    return new _hdcaModel2.default.HistoryListPairedDatasetCollection(attrs, options);\n                case \"list:list\":\n                    return new _hdcaModel2.default.HistoryListOfListsDatasetCollection(attrs, options);\n            }\n            // This is a hack inside a hack:\n            // Raise a plain object with validationError to fake a model.validationError\n            // (since we don't have a model to use validate with)\n            // (the outer hack being the mixed content/model function in this collection)\n            var msg = \"Unknown collection_type: \" + attrs.collection_type;\n            console.warn(msg, attrs);\n            return { validationError: msg };\n        }\n        return {\n            validationError: \"Unknown history_content_type: \" + attrs.history_content_type\n        };\n    },\n\n    // ........................................................................ set up\n    limitPerPage: 500,\n\n    /** @type {Integer} how many contents per call to fetch when using progressivelyFetchDetails */\n    limitPerProgressiveFetch: 500,\n\n    /** @type {String} order used here and when fetching from server */\n    order: \"hid\",\n\n    /** root api url */\n    urlRoot: Galaxy.root + \"api/histories\",\n\n    /** complete api url */\n    url: function url() {\n        return this.urlRoot + \"/\" + this.historyId + \"/contents\";\n    },\n\n    /** Set up */\n    initialize: function initialize(models, options) {\n        options = options || {};\n        _super.prototype.initialize.call(this, models, options);\n\n        this.history = options.history || null;\n        this.setHistoryId(options.historyId || null);\n        /** @type {Boolean} does this collection contain and fetch deleted elements */\n        this.includeDeleted = options.includeDeleted || this.includeDeleted;\n        /** @type {Boolean} does this collection contain and fetch non-visible elements */\n        this.includeHidden = options.includeHidden || this.includeHidden;\n\n        // backbonejs uses collection.model.prototype.idAttribute to determine if a model is *already* in a collection\n        //  and either merged or replaced. In this case, our 'model' is a function so we need to add idAttribute\n        //  manually here - if we don't, contents will not merge but be replaced/swapped.\n        this.model.prototype.idAttribute = \"type_id\";\n    },\n\n    setHistoryId: function setHistoryId(newId) {\n        this.historyId = newId;\n        this._setUpWebStorage();\n    },\n\n    /** Set up client side storage. Currently PersistanStorage keyed under 'history:<id>' */\n    _setUpWebStorage: function _setUpWebStorage(initialSettings) {\n        // TODO: use initialSettings\n        if (!this.historyId) {\n            return;\n        }\n        this.storage = new _historyPreferences2.default.HistoryPrefs({\n            id: _historyPreferences2.default.HistoryPrefs.historyStorageKey(this.historyId)\n        });\n        this.trigger(\"new-storage\", this.storage, this);\n\n        this.on({\n            \"include-deleted\": function includeDeleted(newVal) {\n                this.storage.includeDeleted(newVal);\n            },\n            \"include-hidden\": function includeHidden(newVal) {\n                this.storage.includeHidden(newVal);\n            }\n        });\n\n        this.includeDeleted = this.storage.includeDeleted() || false;\n        this.includeHidden = this.storage.includeHidden() || false;\n        return this;\n    },\n\n    // ........................................................................ common queries\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: _.extend(_.clone(_super.prototype.comparators), {\n        name: _baseMvc2.default.buildComparator(\"name\", { ascending: true }),\n        \"name-dsc\": _baseMvc2.default.buildComparator(\"name\", {\n            ascending: false\n        }),\n        hid: _baseMvc2.default.buildComparator(\"hid\", { ascending: false }),\n        \"hid-asc\": _baseMvc2.default.buildComparator(\"hid\", { ascending: true })\n    }),\n\n    /** Get every model in this collection not in a 'ready' state (running). */\n    running: function running() {\n        return this.filter(function (c) {\n            return !c.inReadyState();\n        });\n    },\n\n    /** return contents that are not ready and not deleted/hidden */\n    runningAndActive: function runningAndActive() {\n        return this.filter(function (c) {\n            return !c.inReadyState() && c.get(\"visible\") &&\n            // TODO: deletedOrPurged?\n            !c.get(\"deleted\");\n        });\n    },\n\n    /** Get the model with the given hid\n     *  @param {Int} hid the hid to search for\n     *  @returns {HistoryDatasetAssociation} the model with the given hid or undefined if not found\n     */\n    getByHid: function getByHid(hid) {\n        // note: there *can* be more than one content with a given hid, this finds the first based on order\n        return this.findWhere({ hid: hid });\n    },\n\n    /** return true if all contents have details */\n    haveDetails: function haveDetails() {\n        return this.all(function (c) {\n            return c.hasDetails();\n        });\n    },\n\n    // ........................................................................ hidden / deleted\n    /** return a new contents collection of only hidden items */\n    hidden: function hidden() {\n        return this.filter(function (c) {\n            return c.hidden();\n        });\n    },\n\n    /** return a new contents collection of only hidden items */\n    deleted: function deleted() {\n        return this.filter(function (c) {\n            return c.get(\"deleted\");\n        });\n    },\n\n    /** return a new contents collection of only hidden items */\n    visibleAndUndeleted: function visibleAndUndeleted() {\n        return this.filter(function (c) {\n            return c.get(\"visible\") &&\n            // TODO: deletedOrPurged?\n            !c.get(\"deleted\");\n        });\n    },\n\n    /** create a setter in order to publish the change */\n    setIncludeDeleted: function setIncludeDeleted(setting, options) {\n        if (_.isBoolean(setting) && setting !== this.includeDeleted) {\n            this.includeDeleted = setting;\n            if (_.result(options, \"silent\")) {\n                return;\n            }\n            this.trigger(\"include-deleted\", setting, this);\n        }\n    },\n\n    /** create a setter in order to publish the change */\n    setIncludeHidden: function setIncludeHidden(setting, options) {\n        if (_.isBoolean(setting) && setting !== this.includeHidden) {\n            this.includeHidden = setting;\n            options = options || {};\n            if (_.result(options, \"silent\")) {\n                return;\n            }\n            this.trigger(\"include-hidden\", setting, this);\n        }\n    },\n\n    // ........................................................................ ajax\n    // ............ controlled fetch collection\n    /** override to get expanded ids from sessionStorage and pass to API as details */\n    fetch: function fetch(options) {\n        options = options || {};\n        if (this.historyId && !options.details) {\n            var prefs = _historyPreferences2.default.HistoryPrefs.get(this.historyId).toJSON();\n            if (!_.isEmpty(prefs.expandedIds)) {\n                options.details = _.values(prefs.expandedIds).join(\",\");\n            }\n        }\n        return _super.prototype.fetch.call(this, options);\n    },\n\n    // ............. ControlledFetch stuff\n    /** override to include the API versioning flag */\n    _buildFetchData: function _buildFetchData(options) {\n        return _.extend(_super.prototype._buildFetchData.call(this, options), {\n            v: \"dev\"\n        });\n    },\n\n    /** Extend to include details and version */\n    _fetchParams: _super.prototype._fetchParams.concat([\n    // TODO: remove (the need for) both\n    /** version */\n    \"v\",\n    /** dataset ids to get full details of */\n    \"details\"]),\n\n    /** override to add deleted/hidden filters */\n    _buildFetchFilters: function _buildFetchFilters(options) {\n        var superFilters = _super.prototype._buildFetchFilters.call(this, options) || {};\n        var filters = {};\n        if (!this.includeDeleted) {\n            filters.deleted = false;\n            filters.purged = false;\n        }\n        if (!this.includeHidden) {\n            filters.visible = true;\n        }\n        return _.defaults(superFilters, filters);\n    },\n\n    // ............ paginated collection\n    getTotalItemCount: function getTotalItemCount() {\n        return this.history.contentsShown();\n    },\n\n    // ............ history contents specific ajax\n    /** override to filter requested contents to those updated after the Date 'since' */\n    fetchUpdated: function fetchUpdated(since, options) {\n        if (since) {\n            options = options || { filters: {} };\n            options.remove = false;\n            options.filters = {\n                \"update_time-ge\": since.toISOString(),\n                // workflows will produce hidden datasets (non-output datasets) that still\n                // need to be updated in the collection or they'll update forever\n                // we can remove the default visible filter by using an 'empty' value\n                visible: \"\"\n            };\n        }\n        return this.fetch(options);\n    },\n\n    /** fetch all the deleted==true contents of this collection */\n    fetchDeleted: function fetchDeleted(options) {\n        options = options || {};\n        var self = this;\n        options.filters = _.extend(options.filters, {\n            // all deleted, purged or not\n            deleted: true,\n            purged: undefined\n        });\n        options.remove = false;\n\n        self.trigger(\"fetching-deleted\", self);\n        return self.fetch(options).always(function () {\n            self.trigger(\"fetching-deleted-done\", self);\n        });\n    },\n\n    /** fetch all the visible==false contents of this collection */\n    fetchHidden: function fetchHidden(options) {\n        options = options || {};\n        var self = this;\n        options.filters = _.extend(options.filters, {\n            visible: false\n        });\n        options.remove = false;\n\n        self.trigger(\"fetching-hidden\", self);\n        return self.fetch(options).always(function () {\n            self.trigger(\"fetching-hidden-done\", self);\n        });\n    },\n\n    /** fetch detailed model data for all contents in this collection */\n    fetchAllDetails: function fetchAllDetails(options) {\n        options = options || {};\n        var detailsFlag = { details: \"all\" };\n        options.data = _.extend(options.data || {}, detailsFlag);\n        return this.fetch(options);\n    },\n\n    /** specialty fetch method for retrieving the element_counts of all hdcas in the history */\n    fetchCollectionCounts: function fetchCollectionCounts(options) {\n        options = options || {};\n        options.keys = [\"type_id\", \"element_count\"].join(\",\");\n        options.filters = _.extend(options.filters || {}, {\n            history_content_type: \"dataset_collection\"\n        });\n        options.remove = false;\n        return this.fetch(options);\n    },\n\n    // ............. quasi-batch ops\n    // TODO: to batch\n    /** helper that fetches using filterParams then calls save on each fetched using updateWhat as the save params */\n    _filterAndUpdate: function _filterAndUpdate(filterParams, updateWhat) {\n        var self = this;\n        var idAttribute = self.model.prototype.idAttribute;\n        var updateArgs = [updateWhat];\n\n        return self.fetch({ filters: filterParams, remove: false }).then(function (fetched) {\n            // convert filtered json array to model array\n            fetched = fetched.reduce(function (modelArray, currJson, i) {\n                var model = self.get(currJson[idAttribute]);\n                return model ? modelArray.concat(model) : modelArray;\n            }, []);\n            return self.ajaxQueue(\"save\", updateArgs, fetched);\n        });\n    },\n\n    /** using a queue, perform ajaxFn on each of the models in this collection */\n    ajaxQueue: function ajaxQueue(ajaxFn, args, collection) {\n        collection = collection || this.models;\n        return new _ajaxQueue2.default.AjaxQueue(collection.slice().reverse().map(function (content, i) {\n            var fn = _.isString(ajaxFn) ? content[ajaxFn] : ajaxFn;\n            return function () {\n                return fn.apply(content, args);\n            };\n        })).deferred;\n    },\n\n    /** fetch contents' details in batches of limitPerCall - note: only get searchable details here */\n    progressivelyFetchDetails: function progressivelyFetchDetails(options) {\n        options = options || {};\n        var deferred = jQuery.Deferred();\n        var self = this;\n        var limit = options.limitPerCall || self.limitPerProgressiveFetch;\n        // TODO: only fetch tags and annotations if specifically requested\n        var searchAttributes = _hdaModel2.default.HistoryDatasetAssociation.prototype.searchAttributes;\n        var detailKeys = searchAttributes.join(\",\");\n\n        function _recursivelyFetch(offset) {\n            offset = offset || 0;\n            var _options = _.extend(_.clone(options), {\n                view: \"summary\",\n                keys: detailKeys,\n                limit: limit,\n                offset: offset,\n                reset: offset === 0,\n                remove: false\n            });\n\n            _.defer(function () {\n                self.fetch.call(self, _options).fail(deferred.reject).done(function (response) {\n                    deferred.notify(response, limit, offset);\n                    if (response.length !== limit) {\n                        self.allFetched = true;\n                        deferred.resolve(response, limit, offset);\n                    } else {\n                        _recursivelyFetch(offset + limit);\n                    }\n                });\n            });\n        }\n        _recursivelyFetch();\n        return deferred;\n    },\n\n    /** does some bit of JSON represent something that can be copied into this contents collection */\n    isCopyable: function isCopyable(contentsJSON) {\n        var copyableModelClasses = [\"HistoryDatasetAssociation\", \"HistoryDatasetCollectionAssociation\"];\n        return _.isObject(contentsJSON) && contentsJSON.id && _.contains(copyableModelClasses, contentsJSON.model_class);\n    },\n\n    /** copy an existing, accessible hda into this collection */\n    copy: function copy(json) {\n        // TODO: somehow showhorn all this into 'save'\n        var id, type, contentType;\n        if (_.isString(json)) {\n            id = json;\n            contentType = \"hda\";\n            type = \"dataset\";\n        } else {\n            id = json.id;\n            contentType = {\n                HistoryDatasetAssociation: \"hda\",\n                LibraryDatasetDatasetAssociation: \"ldda\",\n                HistoryDatasetCollectionAssociation: \"hdca\"\n            }[json.model_class] || \"hda\";\n            type = contentType === \"hdca\" ? \"dataset_collection\" : \"dataset\";\n        }\n        var collection = this,\n            xhr = jQuery.ajax(this.url(), {\n            method: \"POST\",\n            contentType: \"application/json\",\n            data: JSON.stringify({\n                content: id,\n                source: contentType,\n                type: type\n            })\n        }).done(function (response) {\n            collection.add([response], { parse: true });\n        }).fail(function (error, status, message) {\n            collection.trigger(\"error\", collection, xhr, {}, \"Error copying contents\", { type: type, id: id, source: contentType });\n        });\n        return xhr;\n    },\n\n    /** create a new HDCA in this collection */\n    createHDCA: function createHDCA(elementIdentifiers, collectionType, name, hideSourceItems, options) {\n        // normally collection.create returns the new model, but we need the promise from the ajax, so we fake create\n        //precondition: elementIdentifiers is an array of plain js objects\n        //  in the proper form to create the collectionType\n        var hdca = this.model({\n            history_content_type: \"dataset_collection\",\n            collection_type: collectionType,\n            history_id: this.historyId,\n            name: name,\n            hide_source_items: hideSourceItems || false,\n            // should probably be able to just send in a bunch of json here and restruct per class\n            // note: element_identifiers is now (incorrectly) an attribute\n            element_identifiers: elementIdentifiers\n            // do not create the model on the client until the ajax returns\n        });\n        return hdca.save(options);\n    },\n\n    // ........................................................................ searching\n    /** return true if all contents have the searchable attributes */\n    haveSearchDetails: function haveSearchDetails() {\n        return this.allFetched && this.all(function (content) {\n            // null (which is a valid returned annotation value)\n            // will return false when using content.has( 'annotation' )\n            //TODO: a bit hacky - formalize\n            return _.has(content.attributes, \"annotation\");\n        });\n    },\n\n    /** return a new collection of contents whose attributes contain the substring matchesWhat */\n    matches: function matches(matchesWhat) {\n        return this.filter(function (content) {\n            return content.matches(matchesWhat);\n        });\n    },\n\n    // ........................................................................ misc\n    /** In this override, copy the historyId to the clone */\n    clone: function clone() {\n        var clone = Backbone.Collection.prototype.clone.call(this);\n        clone.historyId = this.historyId;\n        return clone;\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"HistoryContents(\", [this.historyId, this.length].join(), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexports.default = {\n    HistoryContents: HistoryContents\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"history\";\n\n// ============================================================================\n/** session storage for individual history preferences */\nvar HistoryPrefs = _baseMvc2.default.SessionStorageModel.extend(\n/** @lends HistoryPrefs.prototype */{\n    //TODO:?? move to user prefs?\n    defaults: {\n        //TODO:?? expandedIds to array?\n        expandedIds: {},\n        show_deleted: false,\n        show_hidden: false\n    },\n\n    /** add an hda id to the hash of expanded hdas */\n    addExpanded: function addExpanded(model) {\n        //TODO: use type_id and not model\n        var current = this.get(\"expandedIds\");\n        current[model.id] = model.get(\"id\");\n        this.save(\"expandedIds\", current);\n    },\n\n    /** remove an hda id from the hash of expanded hdas */\n    removeExpanded: function removeExpanded(model) {\n        var current = this.get(\"expandedIds\");\n        delete current[model.id];\n        this.save(\"expandedIds\", current);\n    },\n\n    isExpanded: function isExpanded(contentId) {\n        return _.result(this.get(\"expandedIds\"), contentId, false);\n    },\n\n    allExpanded: function allExpanded() {\n        return _.values(this.get(\"expandedIds\"));\n    },\n\n    clearExpanded: function clearExpanded() {\n        this.set(\"expandedIds\", {});\n    },\n\n    includeDeleted: function includeDeleted(val) {\n        // moving the invocation here so other components don't need to know the key\n        // TODO: change this key later\n        if (!_.isUndefined(val)) {\n            this.set(\"show_deleted\", val);\n        }\n        return this.get(\"show_deleted\");\n    },\n\n    includeHidden: function includeHidden(val) {\n        // TODO: change this key later\n        if (!_.isUndefined(val)) {\n            this.set(\"show_hidden\", val);\n        }\n        return this.get(\"show_hidden\");\n    },\n\n    toString: function toString() {\n        return \"HistoryPrefs(\" + this.id + \")\";\n    }\n}, {\n    // ........................................................................ class vars\n    // class lvl for access w/o instantiation\n    storageKeyPrefix: \"history:\",\n\n    /** key string to store each histories settings under */\n    historyStorageKey: function historyStorageKey(historyId) {\n        if (!historyId) {\n            throw new Error(\"HistoryPrefs.historyStorageKey needs valid id: \" + historyId);\n        }\n        // single point of change\n        return HistoryPrefs.storageKeyPrefix + historyId;\n    },\n\n    /** return the existing storage for the history with the given id (or create one if it doesn't exist) */\n    get: function get(historyId) {\n        return new HistoryPrefs({\n            id: HistoryPrefs.historyStorageKey(historyId)\n        });\n    },\n\n    /** clear all history related items in sessionStorage */\n    clearAll: function clearAll(historyId) {\n        for (var key in sessionStorage) {\n            if (key.indexOf(HistoryPrefs.storageKeyPrefix) === 0) {\n                sessionStorage.removeItem(key);\n            }\n        }\n    }\n});\n\n//==============================================================================\nexports.default = {\n    HistoryPrefs: HistoryPrefs\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"list\";\n//==============================================================================\n/** A view which, when first rendered, shows only summary data/attributes, but\n *      can be expanded to show further details (and optionally fetch those\n *      details from the server).\n */\nvar ExpandableView = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: Although the reasoning behind them is different, this shares a lot with HiddenUntilActivated above: combine them\n    //PRECONDITION: model must have method hasDetails\n    //PRECONDITION: subclasses must have templates.el and templates.details\n\n    initialize: function initialize(attributes) {\n        /** are the details of this view expanded/shown or not? */\n        this.expanded = attributes.expanded || false;\n        this.log(\"\\t expanded:\", this.expanded);\n        this.fxSpeed = attributes.fxSpeed !== undefined ? attributes.fxSpeed : this.fxSpeed;\n    },\n\n    // ........................................................................ render main\n    /** jq fx speed */\n    fxSpeed: \"fast\",\n\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render: function render(speed) {\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors($newRender);\n        this._queueNewRender($newRender, speed);\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     *      If the view is already expanded, build the details as well.\n     */\n    _buildNewRender: function _buildNewRender() {\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = $(this.templates.el(this.model.toJSON(), this));\n        if (this.expanded) {\n            this.$details($newRender).replaceWith(this._renderDetails().show());\n        }\n        return $newRender;\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender: function _queueNewRender($newRender, speed) {\n        speed = speed === undefined ? this.fxSpeed : speed;\n        var view = this;\n\n        if (speed === 0) {\n            view._swapNewRender($newRender);\n            view.trigger(\"rendered\", view);\n        } else {\n            $(view).queue(\"fx\", [function (next) {\n                view.$el.fadeOut(speed, next);\n            }, function (next) {\n                view._swapNewRender($newRender);\n                next();\n            }, function (next) {\n                view.$el.fadeIn(speed, next);\n            }, function (next) {\n                view.trigger(\"rendered\", view);\n                next();\n            }]);\n        }\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender: function _swapNewRender($newRender) {\n        return this.$el.empty().attr(\"class\", _.isFunction(this.className) ? this.className() : this.className).append($newRender.children());\n    },\n\n    /** set up js behaviors, event handlers for elements within the given container\n     *  @param {jQuery} $container jq object that contains the elements to process (defaults to this.$el)\n     */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        $where = $where || this.$el;\n        // set up canned behavior on children (bootstrap, popupmenus, editable_text, etc.)\n        //make_popup_menus( $where );\n        $where.find(\"[title]\").tooltip({ placement: \"bottom\" });\n    },\n\n    // ......................................................................... details\n    /** shortcut to details DOM (as jQ) */\n    $details: function $details($where) {\n        $where = $where || this.$el;\n        return $where.find(\"> .details\");\n    },\n\n    /** build the DOM for the details and set up behaviors on it */\n    _renderDetails: function _renderDetails() {\n        var $newDetails = $(this.templates.details(this.model.toJSON(), this));\n        this._setUpBehaviors($newDetails);\n        return $newDetails;\n    },\n\n    // ......................................................................... expansion/details\n    /** Show or hide the details\n     *  @param {Boolean} expand if true, expand; if false, collapse\n     */\n    toggleExpanded: function toggleExpanded(expand) {\n        expand = expand === undefined ? !this.expanded : expand;\n        if (expand) {\n            this.expand();\n        } else {\n            this.collapse();\n        }\n        return this;\n    },\n\n    /** Render and show the full, detailed body of this view including extra data and controls.\n     *      note: if the model does not have detailed data, fetch that data before showing the body\n     *  @fires expanded when a body has been expanded\n     */\n    expand: function expand() {\n        var view = this;\n        return view._fetchModelDetails().always(function () {\n            view._expand();\n        });\n    },\n\n    /** Check for model details and, if none, fetch them.\n     *  @returns {jQuery.promise} the model.fetch.xhr if details are being fetched, an empty promise if not\n     */\n    _fetchModelDetails: function _fetchModelDetails() {\n        if (!this.model.hasDetails()) {\n            return this.model.fetch();\n        }\n        return jQuery.when();\n    },\n\n    /** Inner fn called when expand (public) has fetched the details */\n    _expand: function _expand() {\n        var view = this,\n            $newDetails = view._renderDetails();\n        view.$details().replaceWith($newDetails);\n        // needs to be set after the above or the slide will not show\n        view.expanded = true;\n        view.$details().slideDown(view.fxSpeed, function () {\n            view.trigger(\"expanded\", view);\n        });\n    },\n\n    /** Hide the body/details of an HDA.\n     *  @fires collapsed when a body has been collapsed\n     */\n    collapse: function collapse() {\n        this.debug(this + \"(ExpandableView).collapse\");\n        var view = this;\n        view.expanded = false;\n        this.$details().slideUp(view.fxSpeed, function () {\n            view.trigger(\"collapsed\", view);\n        });\n    }\n});\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *      Inherits from Expandable, Selectable, Draggable.\n *  The DOM contains warnings, a title bar, and a series of primary action controls.\n *      Primary actions are meant to be easily accessible item functions (such as delete)\n *      that are rendered in the title bar.\n *\n *  Details are rendered when the user clicks the title bar or presses enter/space when\n *      the title bar is in focus.\n *\n *  Designed as a base class for history panel contents - but usable elsewhere (I hope).\n */\nvar ListItemView = ExpandableView.extend(_baseMvc2.default.mixin(_baseMvc2.default.SelectableViewMixin, _baseMvc2.default.DraggableViewMixin, {\n    tagName: \"div\",\n    className: \"list-item\",\n\n    /** Set up the base class and all mixins */\n    initialize: function initialize(attributes) {\n        ExpandableView.prototype.initialize.call(this, attributes);\n        _baseMvc2.default.SelectableViewMixin.initialize.call(this, attributes);\n        _baseMvc2.default.DraggableViewMixin.initialize.call(this, attributes);\n        this._setUpListeners();\n    },\n\n    /** event listeners */\n    _setUpListeners: function _setUpListeners() {\n        // hide the primary actions in the title bar when selectable and narrow\n        this.on(\"selectable\", function (isSelectable) {\n            if (isSelectable) {\n                this.$(\".primary-actions\").hide();\n            } else {\n                this.$(\".primary-actions\").show();\n            }\n        }, this);\n        return this;\n    },\n\n    // ........................................................................ rendering\n    /** In this override, call methods to build warnings, titlebar and primary actions */\n    _buildNewRender: function _buildNewRender() {\n        var $newRender = ExpandableView.prototype._buildNewRender.call(this);\n        $newRender.children(\".warnings\").replaceWith(this._renderWarnings());\n        $newRender.children(\".title-bar\").replaceWith(this._renderTitleBar());\n        $newRender.children(\".primary-actions\").append(this._renderPrimaryActions());\n        $newRender.find(\"> .title-bar .subtitle\").replaceWith(this._renderSubtitle());\n        return $newRender;\n    },\n\n    /** In this override, render the selector controls and set up dragging before the swap */\n    _swapNewRender: function _swapNewRender($newRender) {\n        ExpandableView.prototype._swapNewRender.call(this, $newRender);\n        if (this.selectable) {\n            this.showSelector(0);\n        }\n        if (this.draggable) {\n            this.draggableOn();\n        }\n        return this.$el;\n    },\n\n    /** Render any warnings the item may need to show (e.g. \"I'm deleted\") */\n    _renderWarnings: function _renderWarnings() {\n        var view = this,\n            $warnings = $('<div class=\"warnings\"></div>'),\n            json = view.model.toJSON();\n        //TODO:! unordered (map)\n        _.each(view.templates.warnings, function (templateFn) {\n            $warnings.append($(templateFn(json, view)));\n        });\n        return $warnings;\n    },\n\n    /** Render the title bar (the main/exposed SUMMARY dom element) */\n    _renderTitleBar: function _renderTitleBar() {\n        return $(this.templates.titleBar(this.model.toJSON(), this));\n    },\n\n    /** Return an array of jQ objects containing common/easily-accessible item controls */\n    _renderPrimaryActions: function _renderPrimaryActions() {\n        // override this\n        return [];\n    },\n\n    /** Render the title bar (the main/exposed SUMMARY dom element) */\n    _renderSubtitle: function _renderSubtitle() {\n        return $(this.templates.subtitle(this.model.toJSON(), this));\n    },\n\n    // ......................................................................... events\n    /** event map */\n    events: {\n        // expand the body when the title is clicked or when in focus and space or enter is pressed\n        \"click .title-bar\": \"_clickTitleBar\",\n        \"keydown .title-bar\": \"_keyDownTitleBar\",\n        \"click .selector\": \"toggleSelect\"\n    },\n\n    /** expand when the title bar is clicked */\n    _clickTitleBar: function _clickTitleBar(event) {\n        event.stopPropagation();\n        if (event.altKey) {\n            this.toggleSelect(event);\n            if (!this.selectable) {\n                this.showSelector();\n            }\n        } else {\n            this.toggleExpanded();\n        }\n    },\n\n    /** expand when the title bar is in focus and enter or space is pressed */\n    _keyDownTitleBar: function _keyDownTitleBar(event) {\n        // bail (with propagation) if keydown and not space or enter\n        var KEYCODE_SPACE = 32,\n            KEYCODE_RETURN = 13;\n        if (event && event.type === \"keydown\" && (event.keyCode === KEYCODE_SPACE || event.keyCode === KEYCODE_RETURN)) {\n            this.toggleExpanded();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"ListItemView(\" + modelString + \")\";\n    }\n}));\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListItemView.prototype.templates = function () {\n    var elTemplato = _baseMvc2.default.wrapTemplate(['<div class=\"list-element\">',\n    // errors, messages, etc.\n    '<div class=\"warnings\"></div>',\n\n    // multi-select checkbox\n    '<div class=\"selector\">', '<span class=\"fa fa-2x fa-square-o\"></span>', \"</div>\",\n    // space for title bar buttons - gen. floated to the right\n    '<div class=\"primary-actions\"></div>', '<div class=\"title-bar\"></div>',\n\n    // expandable area for more details\n    '<div class=\"details\"></div>', \"</div>\"]);\n\n    var warnings = {};\n\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate([\n    // adding a tabindex here allows focusing the title bar and the use of keydown to expand the dataset display\n    '<div class=\"title-bar clear\" tabindex=\"0\">',\n    //TODO: prob. belongs in dataset-list-item\n    '<span class=\"state-icon\"></span>', '<div class=\"title\">', '<span class=\"name\"><%- element.name %></span>', \"</div>\", '<div class=\"subtitle\"></div>', \"</div>\"], \"element\");\n\n    var subtitleTemplate = _baseMvc2.default.wrapTemplate([\n    // override this\n    '<div class=\"subtitle\"></div>']);\n\n    var detailsTemplate = _baseMvc2.default.wrapTemplate([\n    // override this\n    '<div class=\"details\"></div>']);\n\n    return {\n        el: elTemplato,\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate,\n        details: detailsTemplate\n    };\n}();\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *  *AND* can display some sub-list of it's own when expanded (e.g. dataset collections).\n *  This list will 'foldout' when the item is expanded depending on this.foldoutStyle:\n *      If 'foldout': will expand vertically to show the nested list\n *      If 'drilldown': will overlay the parent list\n *\n *  Inherits from ListItemView.\n *\n *  _renderDetails does the work of creating this.details: a sub-view that shows the nested list\n */\nvar FoldoutListItemView = ListItemView.extend({\n    /** If 'foldout': show the sub-panel inside the expanded item\n     *  If 'drilldown': only fire events and handle by pub-sub\n     *      (allow the panel containing this item to attach it, hide itself, etc.)\n     */\n    foldoutStyle: \"foldout\",\n    /** Panel view class to instantiate for the sub-panel */\n    foldoutPanelClass: null,\n\n    /** override to:\n     *      add attributes foldoutStyle and foldoutPanelClass for config poly\n     *      disrespect attributes.expanded if drilldown\n     */\n    initialize: function initialize(attributes) {\n        if (this.foldoutStyle === \"drilldown\") {\n            this.expanded = false;\n        }\n        this.foldoutStyle = attributes.foldoutStyle || this.foldoutStyle;\n        this.foldoutPanelClass = attributes.foldoutPanelClass || this.foldoutPanelClass;\n\n        ListItemView.prototype.initialize.call(this, attributes);\n        this.foldout = this._createFoldoutPanel();\n    },\n\n    /** in this override, attach the foldout panel when rendering details */\n    _renderDetails: function _renderDetails() {\n        if (this.foldoutStyle === \"drilldown\") {\n            return $();\n        }\n        var $newDetails = ListItemView.prototype._renderDetails.call(this);\n        return this._attachFoldout(this.foldout, $newDetails);\n    },\n\n    /** In this override, handle collection expansion. */\n    _createFoldoutPanel: function _createFoldoutPanel() {\n        var model = this.model;\n        var FoldoutClass = this._getFoldoutPanelClass(model),\n            options = this._getFoldoutPanelOptions(model),\n            foldout = new FoldoutClass(_.extend(options, {\n            model: model\n        }));\n        return foldout;\n    },\n\n    /** Stub to return proper foldout panel class */\n    _getFoldoutPanelClass: function _getFoldoutPanelClass() {\n        // override\n        return this.foldoutPanelClass;\n    },\n\n    /** Stub to return proper foldout panel options */\n    _getFoldoutPanelOptions: function _getFoldoutPanelOptions() {\n        return {\n            // propagate foldout style down\n            foldoutStyle: this.foldoutStyle,\n            fxSpeed: this.fxSpeed\n        };\n    },\n\n    /** Render the foldout panel inside the view, hiding controls */\n    _attachFoldout: function _attachFoldout(foldout, $whereTo) {\n        $whereTo = $whereTo || this.$(\"> .details\");\n        this.foldout = foldout.render(0);\n        foldout.$(\"> .controls\").hide();\n        return $whereTo.append(foldout.$el);\n    },\n\n    /** In this override, branch on foldoutStyle to show expanded */\n    expand: function expand() {\n        var view = this;\n        return view._fetchModelDetails().always(function () {\n            if (view.foldoutStyle === \"foldout\") {\n                view._expand();\n            } else if (view.foldoutStyle === \"drilldown\") {\n                view._expandByDrilldown();\n            }\n        });\n    },\n\n    /** For drilldown, set up close handler and fire expanded:drilldown\n     *      containing views can listen to this and handle other things\n     *      (like hiding themselves) by listening for expanded/collapsed:drilldown\n     */\n    _expandByDrilldown: function _expandByDrilldown() {\n        var view = this;\n        // attachment and rendering done by listener\n        view.listenTo(view.foldout, \"close\", function () {\n            view.trigger(\"collapsed:drilldown\", view, view.foldout);\n        });\n        view.trigger(\"expanded:drilldown\", view, view.foldout);\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nFoldoutListItemView.prototype.templates = function () {\n    var detailsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"details\">',\n    // override with more info (that goes above the panel)\n    \"</div>\"], \"collection\");\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        details: detailsTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    ExpandableView: ExpandableView,\n    ListItemView: ListItemView,\n    FoldoutListItemView: FoldoutListItemView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, jQuery, Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listItem = __webpack_require__(41);\n\nvar _listItem2 = _interopRequireDefault(_listItem);\n\nvar _states = __webpack_require__(11);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _faIconButton = __webpack_require__(14);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"dataset\";\n/*==============================================================================\nTODO:\n    straighten out state rendering and templates used\n    inaccessible/STATES.NOT_VIEWABLE is a special case\n    simplify button rendering\n\n==============================================================================*/\nvar _super = _listItem2.default.ListItemView;\n/** @class Read only list view for either LDDAs, HDAs, or HDADCEs.\n *      Roughly, any DatasetInstance (and not a raw Dataset).\n */\nvar DatasetListItemView = _super.extend(\n/** @lends DatasetListItemView.prototype */{\n    _logNamespace: logNamespace,\n\n    className: _super.prototype.className + \" dataset\",\n    //TODO:?? doesn't exactly match an hda's type_id\n    id: function id() {\n        return [\"dataset\", this.model.get(\"id\")].join(\"-\");\n    },\n\n    /** Set up: instance vars, options, and event handlers */\n    initialize: function initialize(attributes) {\n        if (attributes.logger) {\n            this.logger = this.model.logger = attributes.logger;\n        }\n        this.log(this + \".initialize:\", attributes);\n        _super.prototype.initialize.call(this, attributes);\n\n        /** where should pages from links be displayed? (default to new tab/window) */\n        this.linkTarget = attributes.linkTarget || \"_blank\";\n    },\n\n    /** event listeners */\n    _setUpListeners: function _setUpListeners() {\n        _super.prototype._setUpListeners.call(this);\n        var self = this;\n\n        // re-rendering on any model changes\n        return self.listenTo(self.model, {\n            change: function change(model) {\n                // if the model moved into the ready state and is expanded without details, fetch those details now\n                if (self.model.changedAttributes().state && self.model.inReadyState() && self.expanded && !self.model.hasDetails()) {\n                    // normally, will render automatically (due to fetch -> change),\n                    // but! setting_metadata sometimes doesn't cause any other changes besides state\n                    // so, not rendering causes it to seem frozen in setting_metadata state\n                    self.model.fetch({ silent: true }).done(function () {\n                        self.render();\n                    });\n                } else {\n                    if (_.has(model.changed, \"tags\") && _.keys(model.changed).length === 1) {\n                        // If only the tags have changed, rerender specifically\n                        // the titlebar region.  Otherwise default to the full\n                        // render.\n                        self.$(\".nametags\").html(self._renderNametags());\n                    } else {\n                        self.render();\n                    }\n                }\n            }\n        });\n    },\n\n    // ......................................................................... expandable\n    /** In this override, only get details if in the ready state, get rerunnable if in other states.\n    *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n    */\n    _fetchModelDetails: function _fetchModelDetails() {\n        var view = this;\n        if (view.model.inReadyState() && !view.model.hasDetails()) {\n            return view.model.fetch({ silent: true });\n        }\n        return jQuery.when();\n    },\n\n    // ......................................................................... removal\n    /** Remove this view's html from the DOM and remove all event listeners.\n    *  @param {Number or String} speed jq effect speed\n    *  @param {Function} callback      an optional function called when removal is done (scoped to this view)\n    */\n    remove: function remove(speed, callback) {\n        var view = this;\n        speed = speed || this.fxSpeed;\n        this.$el.fadeOut(speed, function () {\n            Backbone.View.prototype.remove.call(view);\n            if (callback) {\n                callback.call(view);\n            }\n        });\n    },\n\n    // ......................................................................... rendering\n    /* TODO:\n    dataset states are the issue primarily making dataset rendering complex\n        each state should have it's own way of displaying/set of details\n        often with different actions that can be applied\n    throw in deleted/purged/visible and things get complicated easily\n    I've considered (a couple of times) - creating a view for each state\n        - but recreating the view during an update...seems wrong\n    */\n    /** In this override, add the dataset state as a class for use with state-based CSS */\n    _swapNewRender: function _swapNewRender($newRender) {\n        _super.prototype._swapNewRender.call(this, $newRender);\n        if (this.model.has(\"state\")) {\n            this.$el.addClass(\"state-\" + this.model.get(\"state\"));\n        }\n        return this.$el;\n    },\n\n    // ................................................................................ titlebar\n    /** In this override, add the dataset display button. */\n    _renderPrimaryActions: function _renderPrimaryActions() {\n        // render just the display for read-only\n        return [this._renderDisplayButton()];\n    },\n\n    /** Render icon-button to display dataset data */\n    _renderDisplayButton: function _renderDisplayButton() {\n        // don't show display if not viewable or not accessible\n        var state = this.model.get(\"state\");\n        if (state === _states2.default.NOT_VIEWABLE || state === _states2.default.DISCARDED || !this.model.get(\"accessible\")) {\n            return null;\n        }\n\n        var displayBtnData = {\n            target: this.linkTarget,\n            classes: \"display-btn\"\n        };\n\n        // show a disabled display if the data's been purged\n        if (this.model.get(\"purged\")) {\n            displayBtnData.disabled = true;\n            displayBtnData.title = (0, _localization2.default)(\"Cannot display datasets removed from disk\");\n\n            // disable if still uploading\n        } else if (state === _states2.default.UPLOAD) {\n            displayBtnData.disabled = true;\n            displayBtnData.title = (0, _localization2.default)(\"This dataset must finish uploading before it can be viewed\");\n\n            // disable if still new\n        } else if (state === _states2.default.NEW) {\n            displayBtnData.disabled = true;\n            displayBtnData.title = (0, _localization2.default)(\"This dataset is not yet viewable\");\n        } else {\n            displayBtnData.title = (0, _localization2.default)(\"View data\");\n\n            // default link for dataset\n            displayBtnData.href = this.model.urls.display;\n\n            // add frame manager option onclick event\n            var self = this;\n            displayBtnData.onclick = function (ev) {\n                if (Galaxy.frame && Galaxy.frame.active) {\n                    // Add dataset to frames.\n                    Galaxy.frame.addDataset(self.model.get(\"id\"));\n                    ev.preventDefault();\n                }\n            };\n        }\n        displayBtnData.faIcon = \"fa-eye\";\n        return (0, _faIconButton2.default)(displayBtnData);\n    },\n\n    // ......................................................................... rendering details\n    /** Render the enclosing div of the hda body and, if expanded, the html in the body\n    *  @returns {jQuery} rendered DOM\n    */\n    _renderDetails: function _renderDetails() {\n        //TODO: generalize to be allow different details for each state\n\n        // no access - render nothing but a message\n        if (this.model.get(\"state\") === _states2.default.NOT_VIEWABLE) {\n            return $(this.templates.noAccess(this.model.toJSON(), this));\n        }\n\n        var $details = _super.prototype._renderDetails.call(this);\n        $details.find(\".actions .left\").empty().append(this._renderSecondaryActions());\n        $details.find(\".summary\").html(this._renderSummary()).prepend(this._renderDetailMessages());\n        $details.find(\".display-applications\").html(this._renderDisplayApplications());\n\n        this._setUpBehaviors($details);\n        return $details;\n    },\n\n    /** Defer to the appropo summary rendering fn based on state */\n    _renderSummary: function _renderSummary() {\n        var json = this.model.toJSON(),\n            summaryRenderFn = this.templates.summaries[json.state];\n        summaryRenderFn = summaryRenderFn || this.templates.summaries.unknown;\n        return summaryRenderFn(json, this);\n    },\n\n    /** Render messages to be displayed only when the details are shown */\n    _renderDetailMessages: function _renderDetailMessages() {\n        var view = this,\n            $warnings = $('<div class=\"detail-messages\"></div>'),\n            json = view.model.toJSON();\n        //TODO:! unordered (map)\n        _.each(view.templates.detailMessages, function (templateFn) {\n            $warnings.append($(templateFn(json, view)));\n        });\n        return $warnings;\n    },\n\n    /** Render the external display application links */\n    _renderDisplayApplications: function _renderDisplayApplications() {\n        if (this.model.isDeletedOrPurged()) {\n            return \"\";\n        }\n        // render both old and new display apps using the same template\n        return [this.templates.displayApplications(this.model.get(\"display_apps\"), this), this.templates.displayApplications(this.model.get(\"display_types\"), this)].join(\"\");\n    },\n\n    // ......................................................................... secondary/details actions\n    /** A series of links/buttons for less commonly used actions: re-run, info, etc. */\n    _renderSecondaryActions: function _renderSecondaryActions() {\n        this.debug(\"_renderSecondaryActions\");\n        switch (this.model.get(\"state\")) {\n            case _states2.default.NOT_VIEWABLE:\n                return [];\n            case _states2.default.OK:\n            case _states2.default.FAILED_METADATA:\n            case _states2.default.ERROR:\n                return [this._renderDownloadButton(), this._renderShowParamsButton()];\n        }\n        return [this._renderShowParamsButton()];\n    },\n\n    /** Render icon-button to show the input and output (stdout/err) for the job that created this.\n    *  @returns {jQuery} rendered DOM\n    */\n    _renderShowParamsButton: function _renderShowParamsButton() {\n        // gen. safe to show in all cases\n        return (0, _faIconButton2.default)({\n            title: (0, _localization2.default)(\"View details\"),\n            classes: \"params-btn\",\n            href: this.model.urls.show_params,\n            target: this.linkTarget,\n            faIcon: \"fa-info-circle\",\n            onclick: function onclick(ev) {\n                if (Galaxy.frame && Galaxy.frame.active) {\n                    Galaxy.frame.add({\n                        title: \"Dataset details\",\n                        url: this.href\n                    });\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n            }\n        });\n    },\n\n    /** Render icon-button/popupmenu to download the data (and/or the associated meta files (bai, etc.)) for this.\n    *  @returns {jQuery} rendered DOM\n    */\n    _renderDownloadButton: function _renderDownloadButton() {\n        // don't show anything if the data's been purged\n        if (this.model.get(\"purged\") || !this.model.hasData()) {\n            return null;\n        }\n\n        // return either: a popupmenu with links to download assoc. meta files (if there are meta files)\n        //  or a single download icon-button (if there are no meta files)\n        if (!_.isEmpty(this.model.get(\"meta_files\"))) {\n            return this._renderMetaFileDownloadButton();\n        }\n\n        return $(['<a class=\"download-btn icon-btn\" ', 'href=\"', this.model.urls.download, '\" title=\"' + (0, _localization2.default)(\"Download\") + '\" download>', '<span class=\"fa fa-floppy-o\"></span>', \"</a>\"].join(\"\"));\n    },\n\n    /** Render the download button which opens a dropdown with links to download assoc. meta files (indeces, etc.) */\n    _renderMetaFileDownloadButton: function _renderMetaFileDownloadButton() {\n        var urls = this.model.urls;\n        return $(['<div class=\"metafile-dropdown dropdown\">', '<a class=\"download-btn icon-btn\" href=\"javascript:void(0)\" data-toggle=\"dropdown\"', ' title=\"' + (0, _localization2.default)(\"Download\") + '\">', '<span class=\"fa fa-floppy-o\"></span>', \"</a>\", '<ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dLabel\">', '<li><a href=\"' + urls.download + '\" download>', (0, _localization2.default)(\"Download dataset\"), \"</a></li>\", _.map(this.model.get(\"meta_files\"), function (meta_file) {\n            return ['<li><a href=\"', urls.meta_download + meta_file.file_type, '\">', (0, _localization2.default)(\"Download\"), \" \", meta_file.file_type, \"</a></li>\"].join(\"\");\n        }).join(\"\\n\"), \"</ul>\", \"</div>\"].join(\"\\n\"));\n    },\n\n    _renderNametags: function _renderNametags() {\n        var tpl = _.template([\"<% _.each(_.sortBy(_.uniq(tags), function(x) { return x }), function(tag){ %>\", '<% if (tag.indexOf(\"name:\") == 0){ %>', '<span class=\"label label-info\"><%- tag.slice(5) %></span>', \"<% } %>\", \"<% }); %>\"].join(\"\"));\n        return tpl({ tags: this.model.get(\"tags\") });\n    },\n\n    // ......................................................................... misc\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .display-btn\": function clickDisplayBtn(ev) {\n            this.trigger(\"display\", this, ev);\n        },\n        \"click .params-btn\": function clickParamsBtn(ev) {\n            this.trigger(\"params\", this, ev);\n        },\n        \"click .download-btn\": function clickDownloadBtn(ev) {\n            this.trigger(\"download\", this, ev);\n        }\n    }),\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"DatasetListItemView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemView.prototype.templates = function () {\n    //TODO: move to require text! plugin\n\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        failed_metadata: _baseMvc2.default.wrapTemplate([\n        // failed metadata is rendered as a warning on an otherwise ok dataset view\n        '<% if( model.state === \"failed_metadata\" ){ %>', '<div class=\"warningmessagesmall\">', (0, _localization2.default)(\"An error occurred setting the metadata for this dataset\"), \"</div>\", \"<% } %>\"]),\n        error: _baseMvc2.default.wrapTemplate([\n        // error during index fetch - show error on dataset\n        \"<% if( model.error ){ %>\", '<div class=\"errormessagesmall\">', (0, _localization2.default)(\"There was an error getting the data for this dataset\"), \": <%- model.error %>\", \"</div>\", \"<% } %>\"]),\n        purged: _baseMvc2.default.wrapTemplate([\"<% if( model.purged ){ %>\", '<div class=\"purged-msg warningmessagesmall\">', (0, _localization2.default)(\"This dataset has been deleted and removed from disk\"), \"</div>\", \"<% } %>\"]),\n        deleted: _baseMvc2.default.wrapTemplate([\n        // deleted not purged\n        \"<% if( model.deleted && !model.purged ){ %>\", '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This dataset has been deleted\"), \"</div>\", \"<% } %>\"])\n\n        //NOTE: hidden warning is only needed for HDAs\n    });\n\n    var detailsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"details\">', '<div class=\"summary\"></div>', '<div class=\"actions clear\">', '<div class=\"left\"></div>', '<div class=\"right\"></div>', \"</div>\",\n\n    // do not display tags, annotation, display apps, or peek when deleted\n    \"<% if( !dataset.deleted && !dataset.purged ){ %>\", '<div class=\"tags-display\"></div>', '<div class=\"annotation-display\"></div>', '<div class=\"display-applications\"></div>', \"<% if( dataset.peek ){ %>\", '<pre class=\"dataset-peek\"><%= dataset.peek %></pre>', \"<% } %>\", \"<% } %>\", \"</div>\"], \"dataset\");\n\n    var noAccessTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"details\">', '<div class=\"summary\">', (0, _localization2.default)(\"You do not have permission to view this dataset\"), \"</div>\", \"</div>\"], \"dataset\");\n\n    //TODO: still toooooooooooooo complex - rework\n    var summaryTemplates = {};\n    summaryTemplates[_states2.default.OK] = summaryTemplates[_states2.default.FAILED_METADATA] = _baseMvc2.default.wrapTemplate([\"<% if( dataset.misc_blurb ){ %>\", '<div class=\"blurb\">', '<span class=\"value\"><%- dataset.misc_blurb %></span>', \"</div>\", \"<% } %>\", \"<% if( dataset.file_ext ){ %>\", '<div class=\"datatype\">', '<label class=\"prompt\">', (0, _localization2.default)(\"format\"), \"</label>\", '<span class=\"value\"><%- dataset.file_ext %></span>', \"</div>\", \"<% } %>\", \"<% if( dataset.metadata_dbkey ){ %>\", '<div class=\"dbkey\">', '<label class=\"prompt\">', (0, _localization2.default)(\"database\"), \"</label>\", '<span class=\"value\">', \"<%- dataset.metadata_dbkey %>\", \"</span>\", \"</div>\", \"<% } %>\", \"<% if( dataset.misc_info ){ %>\", '<div class=\"info\">', '<span class=\"value\"><%- dataset.misc_info %></span>', \"</div>\", \"<% } %>\"], \"dataset\");\n    summaryTemplates[_states2.default.NEW] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"This is a new dataset and not all of its data are available yet\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.NOT_VIEWABLE] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"You do not have permission to view this dataset\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.DISCARDED] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"The job creating this dataset was cancelled before completion\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.QUEUED] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"This job is waiting to run\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.RUNNING] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"This job is currently running\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.UPLOAD] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"This dataset is currently uploading\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.SETTING_METADATA] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"Metadata is being auto-detected\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.PAUSED] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)('This job is paused. Use the \"Resume Paused Jobs\" in the history menu to resume'), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.ERROR] = _baseMvc2.default.wrapTemplate([\"<% if( !dataset.purged ){ %>\", \"<div><%- dataset.misc_blurb %></div>\", \"<% } %>\", '<span class=\"help-text\">', (0, _localization2.default)(\"An error occurred with this dataset\"), \":</span>\", '<div class=\"job-error-text\"><%- dataset.misc_info %></div>'], \"dataset\");\n    summaryTemplates[_states2.default.EMPTY] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"No data\"), \": <i><%- dataset.misc_blurb %></i></div>\"], \"dataset\");\n    summaryTemplates.unknown = _baseMvc2.default.wrapTemplate(['<div>Error: unknown dataset state: \"<%- dataset.state %>\"</div>'], \"dataset\");\n\n    // messages to be displayed only within the details section ('below the fold')\n    var detailMessageTemplates = {\n        resubmitted: _baseMvc2.default.wrapTemplate([\n        // deleted not purged\n        \"<% if( model.resubmitted ){ %>\", '<div class=\"resubmitted-msg infomessagesmall\">', (0, _localization2.default)(\"The job creating this dataset has been resubmitted\"), \"</div>\", \"<% } %>\"])\n    };\n\n    // this is applied to both old and new style display apps\n    var displayApplicationsTemplate = _baseMvc2.default.wrapTemplate([\"<% _.each( apps, function( app ){ %>\", '<div class=\"display-application\">', '<span class=\"display-application-location\"><%- app.label %></span> ', '<span class=\"display-application-links\">', \"<% _.each( app.links, function( link ){ %>\", '<a target=\"<%- link.target %>\" href=\"<%- link.href %>\">', \"<% print( _l( link.text ) ); %>\", \"</a> \", \"<% }); %>\", \"</span>\", \"</div>\", \"<% }); %>\"], \"apps\");\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        details: detailsTemplate,\n        noAccess: noAccessTemplate,\n        summaries: summaryTemplates,\n        detailMessages: detailMessageTemplates,\n        displayApplications: displayApplicationsTemplate\n    });\n}();\n\n// ============================================================================\nexports.default = {\n    DatasetListItemView: DatasetListItemView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, $, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listItem = __webpack_require__(41);\n\nvar _listItem2 = _interopRequireDefault(_listItem);\n\nvar _datasetLi = __webpack_require__(42);\n\nvar _datasetLi2 = _interopRequireDefault(_datasetLi);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar FoldoutListItemView = _listItem2.default.FoldoutListItemView,\n    ListItemView = _listItem2.default.ListItemView;\n/** @class Read only view for DatasetCollection.\n */\nvar DCListItemView = FoldoutListItemView.extend(\n/** @lends DCListItemView.prototype */{\n    className: FoldoutListItemView.prototype.className + \" dataset-collection\",\n    id: function id() {\n        return [\"dataset_collection\", this.model.get(\"id\")].join(\"-\");\n    },\n\n    /** override to add linkTarget */\n    initialize: function initialize(attributes) {\n        this.linkTarget = attributes.linkTarget || \"_blank\";\n        this.hasUser = attributes.hasUser;\n        FoldoutListItemView.prototype.initialize.call(this, attributes);\n    },\n\n    /** event listeners */\n    _setUpListeners: function _setUpListeners() {\n        FoldoutListItemView.prototype._setUpListeners.call(this);\n        this.listenTo(this.model, \"change\", function (model, options) {\n            // if the model has changed deletion status render it entirely\n            if (_.has(model.changed, \"deleted\")) {\n                this.render();\n\n                // if the model has been decorated after the fact with the element count,\n                // render the subtitle where the count is displayed\n            } else if (_.has(model.changed, \"element_count\")) {\n                this.$(\"> .title-bar .subtitle\").replaceWith(this._renderSubtitle());\n            }\n        });\n    },\n\n    // ......................................................................... rendering\n    /** render a subtitle to show the user what sort of collection this is */\n    _renderSubtitle: function _renderSubtitle() {\n        return $(this.templates.subtitle(this.model.toJSON(), this));\n    },\n\n    // ......................................................................... foldout\n    /** override to add linktarget to sub-panel */\n    _getFoldoutPanelOptions: function _getFoldoutPanelOptions() {\n        var options = FoldoutListItemView.prototype._getFoldoutPanelOptions.call(this);\n        return _.extend(options, {\n            linkTarget: this.linkTarget,\n            hasUser: this.hasUser\n        });\n    },\n\n    /** override to not catch sub-panel selectors */\n    $selector: function $selector() {\n        return this.$(\"> .selector\");\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"DCListItemView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCListItemView.prototype.templates = function () {\n    var warnings = _.extend({}, FoldoutListItemView.prototype.templates.warnings, {\n        error: _baseMvc2.default.wrapTemplate([\n        // error during index fetch - show error on dataset\n        \"<% if( model.error ){ %>\", '<div class=\"errormessagesmall\">', (0, _localization2.default)(\"There was an error getting the data for this collection\"), \": <%- model.error %>\", \"</div>\", \"<% } %>\"]),\n        purged: _baseMvc2.default.wrapTemplate([\"<% if( model.purged ){ %>\", '<div class=\"purged-msg warningmessagesmall\">', (0, _localization2.default)(\"This collection has been deleted and removed from disk\"), \"</div>\", \"<% } %>\"]),\n        deleted: _baseMvc2.default.wrapTemplate([\n        // deleted not purged\n        \"<% if( model.deleted && !model.purged ){ %>\", '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This collection has been deleted\"), \"</div>\", \"<% } %>\"])\n    });\n\n    // use element identifier\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"title-bar clear\" tabindex=\"0\">', '<div class=\"title\">', '<span class=\"name\"><%- collection.element_identifier || collection.name %></span>', \"</div>\", '<div class=\"subtitle\"></div>', \"</div>\"], \"collection\");\n\n    // use element identifier\n    var subtitleTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"subtitle\">', '<% var countText = collection.element_count? ( collection.element_count + \" \" ) : \"\"; %>', '<%        if( collection.collection_type === \"list\" ){ %>', (0, _localization2.default)(\"a list of <%- countText %>datasets\"), '<% } else if( collection.collection_type === \"paired\" ){ %>', (0, _localization2.default)(\"a pair of datasets\"), '<% } else if( collection.collection_type === \"list:paired\" ){ %>', (0, _localization2.default)(\"a list of <%- countText %>dataset pairs\"), '<% } else if( collection.collection_type === \"list:list\" ){ %>', (0, _localization2.default)(\"a list of <%- countText %>dataset lists\"), \"<% } %>\", \"</div>\"], \"collection\");\n\n    return _.extend({}, FoldoutListItemView.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate\n    });\n}();\n\n//==============================================================================\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemView = ListItemView.extend(\n/** @lends DCEListItemView.prototype */{\n    /** add the DCE class to the list item */\n    className: ListItemView.prototype.className + \" dataset-collection-element\",\n\n    /** set up */\n    initialize: function initialize(attributes) {\n        if (attributes.logger) {\n            this.logger = this.model.logger = attributes.logger;\n        }\n        this.log(\"DCEListItemView.initialize:\", attributes);\n        ListItemView.prototype.initialize.call(this, attributes);\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"DCEListItemView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCEListItemView.prototype.templates = function () {\n    // use the element identifier here - since that will persist and the user will need it\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"title-bar clear\" tabindex=\"0\">', '<div class=\"title\">', '<span class=\"name\"><%- element.element_identifier %></span>', \"</div>\", '<div class=\"subtitle\"></div>', \"</div>\"], \"element\");\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n}();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemView = _datasetLi2.default.DatasetListItemView.extend(\n/** @lends DatasetDCEListItemView.prototype */{\n    className: _datasetLi2.default.DatasetListItemView.prototype.className + \" dataset-collection-element\",\n\n    /** set up */\n    initialize: function initialize(attributes) {\n        if (attributes.logger) {\n            this.logger = this.model.logger = attributes.logger;\n        }\n        this.log(\"DatasetDCEListItemView.initialize:\", attributes);\n        _datasetLi2.default.DatasetListItemView.prototype.initialize.call(this, attributes);\n    },\n\n    /** In this override, only get details if in the ready state.\n    *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n    */\n    _fetchModelDetails: function _fetchModelDetails() {\n        var view = this;\n        if (view.model.inReadyState() && !view.model.hasDetails()) {\n            return view.model.fetch({ silent: true });\n        }\n        return jQuery.when();\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"DatasetDCEListItemView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemView.prototype.templates = function () {\n    // use the element identifier here and not the dataset name\n    //TODO:?? can we steal the DCE titlebar?\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"title-bar clear\" tabindex=\"0\">', '<span class=\"state-icon\"></span>', '<div class=\"title\">', '<span class=\"name\"><%- element.element_identifier %></span>', \"</div>\", \"</div>\"], \"element\");\n\n    return _.extend({}, _datasetLi2.default.DatasetListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n}();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemView = DCListItemView.extend(\n/** @lends NestedDCDCEListItemView.prototype */{\n    className: DCListItemView.prototype.className + \" dataset-collection-element\",\n\n    /** In this override, add the state as a class for use with state-based CSS */\n    _swapNewRender: function _swapNewRender($newRender) {\n        DCListItemView.prototype._swapNewRender.call(this, $newRender);\n        var state = this.model.get(\"state\") || \"ok\";\n        this.$el.addClass(\"state-\" + state);\n        return this.$el;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"NestedDCDCEListItemView(\" + modelString + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    DCListItemView: DCListItemView,\n    DCEListItemView: DCEListItemView,\n    DatasetDCEListItemView: DatasetDCEListItemView,\n    NestedDCDCEListItemView: NestedDCDCEListItemView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _formView = __webpack_require__(9);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Generic form view */\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = new Backbone.Model(options);\n        this.url = this.model.get(\"url\");\n        this.redirect = this.model.get(\"redirect\");\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + this.url,\n            type: \"GET\"\n        }).done(function (response) {\n            var options = $.extend({}, self.model.attributes, response);\n            var form = new _formView2.default({\n                title: options.title,\n                message: options.message,\n                status: options.status || \"warning\",\n                icon: options.icon,\n                inputs: options.inputs,\n                buttons: {\n                    submit: new _uiMisc2.default.Button({\n                        tooltip: options.submit_tooltip,\n                        title: options.submit_title || \"Save\",\n                        icon: options.submit_icon || \"fa-save\",\n                        cls: \"btn btn-primary ui-clear-float\",\n                        onclick: function onclick() {\n                            self._submit(form);\n                        }\n                    })\n                }\n            });\n            self.$el.empty().append(form.$el);\n        }).fail(function (response) {\n            self.$el.empty().append(new _uiMisc2.default.Message({\n                message: \"Failed to load resource \" + self.url + \".\",\n                status: \"danger\",\n                persistent: true\n            }).$el);\n        });\n    },\n\n    _submit: function _submit(form) {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + self.url,\n            data: JSON.stringify(form.data.create()),\n            type: \"PUT\",\n            contentType: \"application/json\"\n        }).done(function (response) {\n            var success_message = {\n                message: response.message,\n                status: \"success\",\n                persistent: false\n            };\n            if (self.redirect) {\n                window.location = Galaxy.root + self.redirect + \"?\" + $.param(success_message);\n            } else {\n                form.data.matchModel(response, function (input, input_id) {\n                    form.field_list[input_id].value(input.value);\n                });\n                self._showMessage(form, success_message);\n            }\n        }).fail(function (response) {\n            self._showMessage(form, {\n                message: response.responseJSON.err_msg,\n                status: \"danger\",\n                persistent: false\n            });\n        });\n    },\n\n    _showMessage: function _showMessage(form, options) {\n        var $panel = form.$el.parents().filter(function () {\n            return [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1;\n        }).first();\n        $panel.animate({ scrollTop: 0 }, 500);\n        form.message.update(options);\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _states = __webpack_require__(11);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"dataset\";\n//==============================================================================\nvar searchableMixin = _baseMvc2.default.SearchableModelMixin;\n/** @class base model for any DatasetAssociation (HDAs, LDDAs, DatasetCollectionDAs).\n *      No knowledge of what type (HDA/LDDA/DCDA) should be needed here.\n *  The DA's are made searchable (by attribute) by mixing in SearchableModelMixin.\n */\nvar DatasetAssociation = Backbone.Model.extend(_baseMvc2.default.LoggableMixin).extend(_baseMvc2.default.mixin(searchableMixin,\n/** @lends DatasetAssociation.prototype */{\n    _logNamespace: logNamespace,\n\n    /** default attributes for a model */\n    defaults: {\n        state: _states2.default.NEW,\n        deleted: false,\n        purged: false,\n        name: \"(unnamed dataset)\",\n        accessible: true,\n        // sniffed datatype (sam, tabular, bed, etc.)\n        data_type: \"\",\n        file_ext: \"\",\n        file_size: 0,\n\n        // array of associated file types (eg. [ 'bam_index', ... ])\n        meta_files: [],\n\n        misc_blurb: \"\",\n        misc_info: \"\",\n\n        tags: []\n        // do NOT default on annotation, as this default is valid and will be passed on 'save'\n        //  which is incorrect behavior when the model is only partially fetched (annos are not passed in summary data)\n        //annotation          : ''\n    },\n\n    /** instance vars and listeners */\n    initialize: function initialize(attributes, options) {\n        this.debug(this + \"(Dataset).initialize\", attributes, options);\n\n        //!! this state is not in trans.app.model.Dataset.states - set it here -\n        if (!this.get(\"accessible\")) {\n            this.set(\"state\", _states2.default.NOT_VIEWABLE);\n        }\n\n        /** Datasets rely/use some web controllers - have the model generate those URLs on startup */\n        this.urls = this._generateUrls();\n\n        this._setUpListeners();\n    },\n\n    /** returns misc. web urls for rendering things like re-run, display, etc. */\n    _generateUrls: function _generateUrls() {\n        var id = this.get(\"id\");\n        if (!id) {\n            return {};\n        }\n        var urls = {\n            purge: \"datasets/\" + id + \"/purge_async\",\n            display: \"datasets/\" + id + \"/display/?preview=True\",\n            edit: \"datasets/edit?dataset_id=\" + id,\n            download: \"datasets/\" + id + \"/display\" + this._downloadQueryParameters(),\n            report_error: \"dataset/errors?id=\" + id,\n            rerun: \"tool_runner/rerun?id=\" + id,\n            show_params: \"datasets/\" + id + \"/show_params\",\n            visualization: \"visualization\",\n            meta_download: \"dataset/get_metadata_file?hda_id=\" + id + \"&metadata_name=\"\n        };\n        _.each(urls, function (value, key) {\n            urls[key] = Galaxy.root + value;\n        });\n        this.urls = urls;\n        return urls;\n    },\n\n    _downloadQueryParameters: function _downloadQueryParameters() {\n        return \"?to_ext=\" + this.get(\"file_ext\");\n    },\n\n    /** set up any event listeners\n    *  event: state:ready  fired when this DA moves into/is already in a ready state\n    */\n    _setUpListeners: function _setUpListeners() {\n        // if the state has changed and the new state is a ready state, fire an event\n        this.on(\"change:state\", function (currModel, newState) {\n            this.log(this + \" has changed state:\", currModel, newState);\n            if (this.inReadyState()) {\n                this.trigger(\"state:ready\", currModel, newState, this.previous(\"state\"));\n            }\n        });\n        // the download url (currently) relies on having a correct file extension\n        this.on(\"change:id change:file_ext\", function (currModel) {\n            this._generateUrls();\n        });\n    },\n\n    // ........................................................................ common queries\n    /** override to add urls */\n    toJSON: function toJSON() {\n        var json = Backbone.Model.prototype.toJSON.call(this);\n        //console.warn( 'returning json?' );\n        //return json;\n        return _.extend(json, {\n            urls: this.urls\n        });\n    },\n\n    /** Is this dataset deleted or purged? */\n    isDeletedOrPurged: function isDeletedOrPurged() {\n        return this.get(\"deleted\") || this.get(\"purged\");\n    },\n\n    /** Is this dataset in a 'ready' state; where 'Ready' states are states where no\n    *      processing (for the ds) is left to do on the server.\n    */\n    inReadyState: function inReadyState() {\n        var ready = _.contains(_states2.default.READY_STATES, this.get(\"state\"));\n        return this.isDeletedOrPurged() || ready;\n    },\n\n    /** Does this model already contain detailed data (as opposed to just summary level data)? */\n    hasDetails: function hasDetails() {\n        // if it's inaccessible assume it has everything it needs\n        if (!this.get(\"accessible\")) {\n            return true;\n        }\n        return this.has(\"annotation\");\n    },\n\n    /** Convenience function to match dataset.has_data. */\n    hasData: function hasData() {\n        return this.get(\"file_size\") > 0;\n    },\n\n    // ........................................................................ ajax\n    fetch: function fetch(options) {\n        var dataset = this;\n        return Backbone.Model.prototype.fetch.call(this, options).always(function () {\n            dataset._generateUrls();\n        });\n    },\n\n    /** override to use actual Dates objects for create/update times */\n    parse: function parse(response, options) {\n        var parsed = Backbone.Model.prototype.parse.call(this, response, options);\n        if (parsed.create_time) {\n            parsed.create_time = new Date(parsed.create_time);\n        }\n        if (parsed.update_time) {\n            parsed.update_time = new Date(parsed.update_time);\n        }\n        return parsed;\n    },\n\n    /** override to wait by default */\n    save: function save(attrs, options) {\n        options = options || {};\n        options.wait = _.isUndefined(options.wait) ? true : options.wait;\n        return Backbone.Model.prototype.save.call(this, attrs, options);\n    },\n\n    //NOTE: subclasses of DA's will need to implement url and urlRoot in order to have these work properly\n    /** save this dataset, _Mark_ing it as deleted (just a flag) */\n    delete: function _delete(options) {\n        if (this.get(\"deleted\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: true }, options);\n    },\n    /** save this dataset, _Mark_ing it as undeleted */\n    undelete: function undelete(options) {\n        if (!this.get(\"deleted\") || this.get(\"purged\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: false }, options);\n    },\n\n    /** remove the file behind this dataset from the filesystem (if permitted) */\n    purge: function _purge(options) {\n        //TODO: use, override model.destroy, HDA.delete({ purge: true })\n        if (this.get(\"purged\")) {\n            return jQuery.when();\n        }\n        options = options || {};\n        options.url = this.urls.purge;\n\n        //TODO: ideally this would be a DELETE call to the api\n        //  using purge async for now\n        var hda = this,\n            xhr = jQuery.ajax(options);\n        xhr.done(function (message, status, responseObj) {\n            hda.set({ deleted: true, purged: true });\n        });\n        xhr.fail(function (xhr, status, message) {\n            // Exception messages are hidden within error page including:  '...not allowed in this Galaxy instance.'\n            // unbury and re-add to xhr\n            var error = (0, _localization2.default)(\"Unable to purge dataset\");\n            var messageBuriedInUnfortunatelyFormattedError = \"Removal of datasets by users \" + \"is not allowed in this Galaxy instance\";\n            if (xhr.responseJSON && xhr.responseJSON.error) {\n                error = xhr.responseJSON.error;\n            } else if (xhr.responseText.indexOf(messageBuriedInUnfortunatelyFormattedError) !== -1) {\n                error = messageBuriedInUnfortunatelyFormattedError;\n            }\n            xhr.responseText = error;\n            hda.trigger(\"error\", hda, xhr, options, (0, _localization2.default)(error), {\n                error: error\n            });\n        });\n        return xhr;\n    },\n\n    // ........................................................................ searching\n    /** what attributes of an HDA will be used in a text search */\n    searchAttributes: [\"name\", \"file_ext\", \"genome_build\", \"misc_blurb\", \"misc_info\", \"annotation\", \"tags\"],\n\n    /** our attr keys don't often match the labels we display to the user - so, when using\n    *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n    *      following attr keys.\n    */\n    searchAliases: {\n        title: \"name\",\n        format: \"file_ext\",\n        database: \"genome_build\",\n        blurb: \"misc_blurb\",\n        description: \"misc_blurb\",\n        info: \"misc_info\",\n        tag: \"tags\"\n    },\n\n    // ........................................................................ misc\n    /** String representation */\n    toString: function toString() {\n        var nameAndId = this.get(\"id\") || \"\";\n        if (this.get(\"name\")) {\n            nameAndId = '\"' + this.get(\"name\") + '\",' + nameAndId;\n        }\n        return \"Dataset(\" + nameAndId + \")\";\n    }\n}));\n\n//==============================================================================\n/** @class Backbone collection for dataset associations.\n */\nvar DatasetAssociationCollection = Backbone.Collection.extend(_baseMvc2.default.LoggableMixin).extend(\n/** @lends HistoryContents.prototype */{\n    _logNamespace: logNamespace,\n\n    model: DatasetAssociation,\n\n    /** root api url */\n    urlRoot: Galaxy.root + \"api/datasets\",\n\n    /** url fn */\n    url: function url() {\n        return this.urlRoot;\n    },\n\n    // ........................................................................ common queries\n    /** Get the ids of every item in this collection\n    *  @returns array of encoded ids\n    */\n    ids: function ids() {\n        return this.map(function (item) {\n            return item.get(\"id\");\n        });\n    },\n\n    /** Get contents that are not ready\n    *  @returns array of content models\n    */\n    notReady: function notReady() {\n        return this.filter(function (content) {\n            return !content.inReadyState();\n        });\n    },\n\n    /** return true if any datasets don't have details */\n    haveDetails: function haveDetails() {\n        return this.all(function (dataset) {\n            return dataset.hasDetails();\n        });\n    },\n\n    // ........................................................................ ajax\n    /** using a queue, perform ajaxFn on each of the models in this collection */\n    ajaxQueue: function ajaxQueue(ajaxFn, options) {\n        var deferred = jQuery.Deferred(),\n            startingLength = this.length,\n            responses = [];\n\n        if (!startingLength) {\n            deferred.resolve([]);\n            return deferred;\n        }\n\n        // use reverse order (stylistic choice)\n        var ajaxFns = this.chain().reverse().map(function (dataset, i) {\n            return function () {\n                var xhr = ajaxFn.call(dataset, options);\n                // if successful, notify using the deferred to allow tracking progress\n                xhr.done(function (response) {\n                    deferred.notify({\n                        curr: i,\n                        total: startingLength,\n                        response: response,\n                        model: dataset\n                    });\n                });\n                // (regardless of previous error or success) if not last ajax call, shift and call the next\n                //  if last fn, resolve deferred\n                xhr.always(function (response) {\n                    responses.push(response);\n                    if (ajaxFns.length) {\n                        ajaxFns.shift()();\n                    } else {\n                        deferred.resolve(responses);\n                    }\n                });\n            };\n        }).value();\n        // start the queue\n        ajaxFns.shift()();\n\n        return deferred;\n    },\n\n    // ........................................................................ sorting/filtering\n    /** return a new collection of datasets whose attributes contain the substring matchesWhat */\n    matches: function matches(matchesWhat) {\n        return this.filter(function (dataset) {\n            return dataset.matches(matchesWhat);\n        });\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"DatasetAssociationCollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexports.default = {\n    DatasetAssociation: DatasetAssociation,\n    DatasetAssociationCollection: DatasetAssociationCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _states = __webpack_require__(11);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\n/** @class Mixin for HistoryContents content (HDAs, HDCAs).\n */\nvar HistoryContentMixin = {\n    /** default attributes for a model */\n    defaults: {\n        /** parent (containing) history */\n        history_id: null,\n        /** some content_type (HistoryContents can contain mixed model classes) */\n        history_content_type: null,\n        /** indicating when/what order the content was generated in the context of the history */\n        hid: null,\n        /** whether the user wants the content shown (visible) */\n        visible: true\n    },\n\n    // ........................................................................ mixed content element\n    // In order to be part of a MIXED bbone collection, we can't rely on the id\n    //  (which may collide btwn models of different classes)\n    // Instead, use type_id which prefixes the history_content_type so the bbone collection can differentiate\n    idAttribute: \"type_id\",\n\n    // ........................................................................ common queries\n    /** the more common alias of visible */\n    hidden: function hidden() {\n        return !this.get(\"visible\");\n    },\n\n    //TODO: remove\n    /** based on includeDeleted, includeHidden (gen. from the container control),\n     *      would this ds show in the list of ds's?\n     *  @param {Boolean} includeDeleted are we showing deleted hdas?\n     *  @param {Boolean} includeHidden are we showing hidden hdas?\n     */\n    isVisible: function isVisible(includeDeleted, includeHidden) {\n        var isVisible = true;\n        if (!includeDeleted && (this.get(\"deleted\") || this.get(\"purged\"))) {\n            isVisible = false;\n        }\n        if (!includeHidden && !this.get(\"visible\")) {\n            isVisible = false;\n        }\n        return isVisible;\n    },\n\n    // ........................................................................ ajax\n    //TODO?: these are probably better done on the leaf classes\n    /** history content goes through the 'api/histories' API */\n    urlRoot: Galaxy.root + \"api/histories/\",\n\n    /** full url spec. for this content */\n    url: function url() {\n        var url = this.urlRoot + this.get(\"history_id\") + \"/contents/\" + this.get(\"history_content_type\") + \"s/\" + this.get(\"id\");\n        return url;\n    },\n\n    /** save this content as not visible */\n    hide: function hide(options) {\n        if (!this.get(\"visible\")) {\n            return jQuery.when();\n        }\n        return this.save({ visible: false }, options);\n    },\n    /** save this content as visible */\n    unhide: function unhide(options) {\n        if (this.get(\"visible\")) {\n            return jQuery.when();\n        }\n        return this.save({ visible: true }, options);\n    },\n\n    // ........................................................................ misc\n    toString: function toString() {\n        return [this.get(\"type_id\"), this.get(\"hid\"), this.get(\"name\")].join(\":\");\n    }\n};\n\n//==============================================================================\nexports.default = {\n    HistoryContentMixin: HistoryContentMixin\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/* For presentation-related functionality shared across collection creators.\n   Particularily overlapping functionality related to name processing and help.\n*/\nvar CollectionCreatorMixin = {\n    /** add (or clear if clear is truthy) a validation warning to the DOM element described in what */\n    _validationWarning: function _validationWarning(what, clear) {\n        var VALIDATION_CLASS = \"validation-warning\";\n        if (what === \"name\") {\n            what = this.$(\".collection-name\").add(this.$(\".collection-name-prompt\"));\n            this.$(\".collection-name\").focus().select();\n        }\n        if (clear) {\n            what = what || this.$(\".\" + VALIDATION_CLASS);\n            what.removeClass(VALIDATION_CLASS);\n        } else {\n            what.addClass(VALIDATION_CLASS);\n        }\n    },\n\n    _changeHideOriginals: function _changeHideOriginals(ev) {\n        this.hideOriginals = this.$(\".hide-originals\").prop(\"checked\");\n    },\n\n    // ........................................................................ footer\n    /** handle a collection name change */\n    _changeName: function _changeName(ev) {\n        this._validationWarning(\"name\", !!this._getName());\n    },\n\n    /** check for enter key press when in the collection name and submit */\n    _nameCheckForEnter: function _nameCheckForEnter(ev) {\n        if (ev.keyCode === 13 && !this.blocking) {\n            this._clickCreate();\n        }\n    },\n\n    /** get the current collection name */\n    _getName: function _getName() {\n        return _.escape(this.$(\".collection-name\").val());\n    },\n\n    // ........................................................................ header\n    /** expand help */\n    _clickMoreHelp: function _clickMoreHelp(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").addClass(\"expanded\");\n        this.$(\".more-help\").hide();\n    },\n    /** collapse help */\n    _clickLessHelp: function _clickLessHelp(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").removeClass(\"expanded\");\n        this.$(\".more-help\").show();\n    },\n    /** toggle help */\n    _toggleHelp: function _toggleHelp(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").toggleClass(\"expanded\");\n        this.$(\".more-help\").toggle();\n    },\n\n    /** show an alert on the top of the interface containing message (alertClass is bootstrap's alert-*) */\n    _showAlert: function _showAlert(message, alertClass) {\n        alertClass = alertClass || \"alert-danger\";\n        this.$(\".main-help\").hide();\n        this.$(\".header .alert\").attr(\"class\", \"alert alert-dismissable\").addClass(alertClass).show().find(\".alert-message\").html(message);\n    },\n    /** hide the alerts at the top */\n    _hideAlert: function _hideAlert(message) {\n        this.$(\".main-help\").show();\n        this.$(\".header .alert\").hide();\n    },\n\n    _cancelCreate: function _cancelCreate(ev) {\n        if (typeof this.oncancel === \"function\") {\n            this.oncancel.call(this);\n        }\n    },\n\n    /** attempt to create the current collection */\n    _clickCreate: function _clickCreate(ev) {\n        var name = this._getName();\n        if (!name) {\n            this._validationWarning(\"name\");\n        } else if (!this.blocking) {\n            this.createList(name);\n        }\n    },\n\n    _setUpCommonSettings: function _setUpCommonSettings(attributes) {\n        this.hideOriginals = attributes.defaultHideSourceItems || false;\n    },\n\n    /** render the footer, completion controls, and cancel controls */\n    _renderFooter: function _renderFooter(speed, callback) {\n        var self = this;\n        var $footer = this.$(\".footer\").empty().html(this.templates.footer());\n        _.each(this.footerSettings, function (property, selector) {\n            self.$(selector).prop(\"checked\", self[property]);\n        });\n        if (typeof this.oncancel === \"function\") {\n            this.$(\".cancel-create.btn\").show();\n        }\n        return $footer;\n    },\n\n    _creatorTemplates: {\n        main: _.template(['<div class=\"header flex-row no-flex\"></div>', '<div class=\"middle flex-row flex-row-container\"></div>', '<div class=\"footer flex-row no-flex\"></div>'].join(\"\"))\n    }\n};\n\n//==============================================================================\nexports.default = {\n    CollectionCreatorMixin: CollectionCreatorMixin\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n    // Alphanumeric/natural sort fn\n    function naturalSort(a, b) {\n        // setup temp-scope variables for comparison evauluation\n        var re = /(-?[0-9\\.]+)/g,\n            x = a.toString().toLowerCase() || \"\",\n            y = b.toString().toLowerCase() || \"\",\n            nC = String.fromCharCode(0),\n            xN = x.replace(re, nC + \"$1\" + nC).split(nC),\n            yN = y.replace(re, nC + \"$1\" + nC).split(nC),\n            xD = new Date(x).getTime(),\n            yD = xD ? new Date(y).getTime() : null;\n        // natural sorting of dates\n        if (yD) {\n            if (xD < yD) {\n                return -1;\n            } else if (xD > yD) {\n                return 1;\n            }\n        }\n        // natural sorting through split numeric strings and default strings\n        var oFxNcL, oFyNcL;\n        for (var cLoc = 0, numS = Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {\n            oFxNcL = parseFloat(xN[cLoc]) || xN[cLoc];\n            oFyNcL = parseFloat(yN[cLoc]) || yN[cLoc];\n            if (oFxNcL < oFyNcL) {\n                return -1;\n            } else if (oFxNcL > oFyNcL) {\n                return 1;\n            }\n        }\n        return 0;\n    }\n\n    return naturalSort;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, $) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n(function (factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n})(function () {\n    //=============================================================================\n\n    jQuery.fn.extend({\n        hoverhighlight: function $hoverhighlight(scope, color) {\n            scope = scope || \"body\";\n            if (!this.length) {\n                return this;\n            }\n\n            $(this).each(function () {\n                var $this = $(this),\n                    targetSelector = $this.data(\"target\");\n\n                if (targetSelector) {\n                    $this.mouseover(function (ev) {\n                        $(targetSelector, scope).css({\n                            background: color\n                        });\n                    }).mouseout(function (ev) {\n                        $(targetSelector).css({\n                            background: \"\"\n                        });\n                    });\n                }\n            });\n            return this;\n        }\n    });\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _deferred = __webpack_require__(67);\n\nvar _deferred2 = _interopRequireDefault(_deferred);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _formView = __webpack_require__(9);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _formData = __webpack_require__(70);\n\nvar _formData2 = _interopRequireDefault(_formData);\n\nvar _toolFormBase = __webpack_require__(66);\n\nvar _toolFormBase2 = _interopRequireDefault(_toolFormBase);\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _webhooks = __webpack_require__(17);\n\nvar _webhooks2 = _interopRequireDefault(_webhooks);\n\nvar _workflowIcons = __webpack_require__(148);\n\nvar _workflowIcons2 = _interopRequireDefault(_workflowIcons);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.modal = parent.Galaxy.modal || new _uiModal2.default.View();\n        this.model = options && options.model || new Backbone.Model(options);\n        this.deferred = new _deferred2.default();\n        this.setElement($(\"<div/>\").addClass(\"ui-form-composite\").append(this.$message = $(\"<div/>\")).append(this.$header = $(\"<div/>\")).append(this.$steps = $(\"<div/>\")));\n        $(\"body\").append(this.$el);\n        this._configure();\n        this.render();\n        $(window).resize(function () {\n            self._refresh();\n        });\n    },\n\n    /** Refresh height of scrollable div below header, handle scrolling by lazy loading steps */\n    _refresh: function _refresh(step_index) {\n        var margin = _.reduce(this.$el.children(), function (memo, child) {\n            return memo + $(child).outerHeight();\n        }, 0) - this.$steps.height() + 90;\n        this.$steps.css(\"height\", $(window).height() - margin);\n    },\n\n    /** Configures form/step options for each workflow step */\n    _configure: function _configure() {\n        var self = this;\n        this.forms = [];\n        this.steps = [];\n        this.links = [];\n        this.parms = [];\n        _.each(this.model.get(\"steps\"), function (step, i) {\n            Galaxy.emit.debug(\"tool-form-composite::initialize()\", i + \" : Preparing workflow step.\");\n            var icon = _workflowIcons2.default[step.step_type];\n            var title = parseInt(i + 1) + \": \" + (step.step_label || step.step_name);\n            if (step.annotation) {\n                title += \" - \" + step.annotation;\n            }\n            if (step.step_version) {\n                title += \" (Galaxy Version \" + step.step_version + \")\";\n            }\n            step = _utils2.default.merge({\n                index: i,\n                fixed_title: _.escape(title),\n                icon: icon || \"\",\n                help: null,\n                citations: null,\n                collapsible: true,\n                collapsed: i > 0 && !self._isDataStep(step),\n                sustain_version: true,\n                sustain_repeats: true,\n                sustain_conditionals: true,\n                narrow: true,\n                text_enable: \"Edit\",\n                text_disable: \"Undo\",\n                cls_enable: \"fa fa-edit\",\n                cls_disable: \"fa fa-undo\",\n                errors: step.messages,\n                initial_errors: true,\n                cls: \"ui-portlet-narrow\",\n                hide_operations: true,\n                needs_refresh: false,\n                always_refresh: step.step_type != \"tool\"\n            }, step);\n            self.steps[i] = step;\n            self.links[i] = [];\n            self.parms[i] = {};\n        });\n\n        // build linear index of step input pairs\n        _.each(this.steps, function (step, i) {\n            _formData2.default.visitInputs(step.inputs, function (input, name) {\n                self.parms[i][name] = input;\n            });\n        });\n\n        // iterate through data input modules and collect linked sub steps\n        _.each(this.steps, function (step, i) {\n            _.each(step.output_connections, function (output_connection) {\n                _.each(self.steps, function (sub_step, j) {\n                    sub_step.step_index === output_connection.input_step_index && self.links[i].push(sub_step);\n                });\n            });\n        });\n\n        // convert all connected data inputs to hidden fields with proper labels,\n        // and track the linked source step\n        _.each(this.steps, function (step, i) {\n            _.each(self.steps, function (sub_step, j) {\n                var connections_by_name = {};\n                _.each(step.output_connections, function (connection) {\n                    sub_step.step_index === connection.input_step_index && (connections_by_name[connection.input_name] = connection);\n                });\n                _.each(self.parms[j], function (input, name) {\n                    var connection = connections_by_name[name];\n                    if (connection) {\n                        input.type = \"hidden\";\n                        input.help = input.step_linked ? input.help + \", \" : \"\";\n                        input.help += \"Output dataset '\" + connection.output_name + \"' from step \" + (parseInt(i) + 1);\n                        input.step_linked = input.step_linked || [];\n                        input.step_linked.push(step);\n                    }\n                });\n            });\n        });\n\n        // identify and configure workflow parameters\n        var wp_count = 0;\n        this.wp_inputs = {};\n        function _handleWorkflowParameter(value, callback) {\n            var re = /\\$\\{(.+?)\\}/g,\n                match;\n            while (match = re.exec(String(value))) {\n                var wp_name = match[1];\n                callback(self.wp_inputs[wp_name] = self.wp_inputs[wp_name] || {\n                    label: wp_name,\n                    name: wp_name,\n                    type: \"text\",\n                    color: \"hsl( \" + ++wp_count * 100 + \", 70%, 30% )\",\n                    style: \"ui-form-wp-source\",\n                    links: []\n                });\n            }\n        }\n        _.each(this.steps, function (step, i) {\n            _.each(self.parms[i], function (input, name) {\n                _handleWorkflowParameter(input.value, function (wp_input) {\n                    wp_input.links.push(step);\n                    input.wp_linked = true;\n                    input.type = \"text\";\n                    input.backdrop = true;\n                    input.style = \"ui-form-wp-target\";\n                });\n            });\n            _.each(step.post_job_actions, function (pja) {\n                _.each(pja.action_arguments, function (arg) {\n                    _handleWorkflowParameter(arg, function () {});\n                });\n            });\n        });\n\n        // select fields are shown for dynamic fields if all putative data inputs are available,\n        // or if an explicit reference is specified as data_ref and available\n        _.each(this.steps, function (step, i) {\n            if (step.step_type == \"tool\") {\n                var data_resolved = true;\n                _formData2.default.visitInputs(step.inputs, function (input, name, context) {\n                    var is_runtime_value = input.value && input.value.__class__ == \"RuntimeValue\";\n                    var is_data_input = [\"data\", \"data_collection\"].indexOf(input.type) != -1;\n                    var data_ref = context[input.data_ref];\n                    input.step_linked && !self._isDataStep(input.step_linked) && (data_resolved = false);\n                    input.options && (input.options.length == 0 && !data_resolved || input.wp_linked) && (input.is_workflow = true);\n                    data_ref && (input.is_workflow = data_ref.step_linked && !self._isDataStep(data_ref.step_linked) || input.wp_linked);\n                    (is_data_input || input.value && input.value.__class__ == \"RuntimeValue\" && !input.step_linked) && (step.collapsed = false);\n                    is_runtime_value && (input.value = input.default_value);\n                    input.flavor = \"workflow\";\n                    if (!is_runtime_value && !is_data_input && input.type !== \"hidden\" && !input.wp_linked) {\n                        if (input.optional || !_utils2.default.isEmpty(input.value) && input.value !== \"\") {\n                            input.collapsible_value = input.value;\n                            input.collapsible_preview = true;\n                        }\n                    }\n                });\n            }\n        });\n    },\n\n    render: function render() {\n        var self = this;\n        this.deferred.reset();\n        this._renderHeader();\n        this._renderMessage();\n        this._renderParameters();\n        this._renderHistory();\n        _.each(this.steps, function (step) {\n            self._renderStep(step);\n        });\n    },\n\n    /** Render header */\n    _renderHeader: function _renderHeader() {\n        var self = this;\n        this.execute_btn = new _uiMisc2.default.Button({\n            icon: \"fa-check\",\n            title: \"Run workflow\",\n            cls: \"btn btn-primary\",\n            onclick: function onclick() {\n                self._execute();\n            }\n        });\n        this.$header.addClass(\"ui-form-header\").empty().append(new _uiMisc2.default.Label({\n            title: \"Workflow: \" + this.model.get(\"name\")\n        }).$el).append(this.execute_btn.$el);\n    },\n\n    /** Render message */\n    _renderMessage: function _renderMessage() {\n        this.$message.empty();\n        if (this.model.get(\"has_upgrade_messages\")) {\n            this.$message.append(new _uiMisc2.default.Message({\n                message: \"Some tools in this workflow may have changed since it was last saved or some errors were found. The workflow may still run, but any new options will have default values. Please review the messages below to make a decision about whether the changes will affect your analysis.\",\n                status: \"warning\",\n                persistent: true,\n                fade: false\n            }).$el);\n        }\n        var step_version_changes = this.model.get(\"step_version_changes\");\n        if (step_version_changes && step_version_changes.length > 0) {\n            this.$message.append(new _uiMisc2.default.Message({\n                message: \"Some tools are being executed with different versions compared to those available when this workflow was last saved because the other versions are not or no longer available on this Galaxy instance. To upgrade your workflow and dismiss this message simply edit the workflow and re-save it.\",\n                status: \"warning\",\n                persistent: true,\n                fade: false\n            }).$el);\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderParameters: function _renderParameters() {\n        var self = this;\n        this.wp_form = null;\n        if (!_.isEmpty(this.wp_inputs)) {\n            this.wp_form = new _formView2.default({\n                title: \"<b>Workflow Parameters</b>\",\n                inputs: this.wp_inputs,\n                cls: \"ui-portlet-narrow\",\n                onchange: function onchange() {\n                    _.each(self.wp_form.input_list, function (input_def, i) {\n                        _.each(input_def.links, function (step) {\n                            self._refreshStep(step);\n                        });\n                    });\n                }\n            });\n            this._append(this.$steps.empty(), this.wp_form.$el);\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderHistory: function _renderHistory() {\n        this.history_form = new _formView2.default({\n            cls: \"ui-portlet-narrow\",\n            title: \"<b>History Options</b>\",\n            inputs: [{\n                type: \"conditional\",\n                name: \"new_history\",\n                test_param: {\n                    name: \"check\",\n                    label: \"Send results to a new history\",\n                    type: \"boolean\",\n                    value: \"false\",\n                    help: \"\"\n                },\n                cases: [{\n                    value: \"true\",\n                    inputs: [{\n                        name: \"name\",\n                        label: \"History name\",\n                        type: \"text\",\n                        value: this.model.get(\"name\")\n                    }]\n                }]\n            }]\n        });\n        this._append(this.$steps, this.history_form.$el);\n    },\n\n    /** Render step */\n    _renderStep: function _renderStep(step) {\n        var self = this;\n        var form = null;\n        this.deferred.execute(function (promise) {\n            self.$steps.addClass(\"ui-steps\");\n            if (step.step_type == \"tool\") {\n                step.postchange = function (process, form) {\n                    var self = this;\n                    var current_state = {\n                        tool_id: step.id,\n                        tool_version: step.version,\n                        inputs: $.extend(true, {}, form.data.create())\n                    };\n                    form.wait(true);\n                    Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Sending current state.\", current_state);\n                    _utils2.default.request({\n                        type: \"POST\",\n                        url: Galaxy.root + \"api/tools/\" + step.id + \"/build\",\n                        data: current_state,\n                        success: function success(data) {\n                            form.update(data);\n                            form.wait(false);\n                            Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Received new model.\", data);\n                            process.resolve();\n                        },\n                        error: function error(response) {\n                            Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Refresh request failed.\", response);\n                            process.reject();\n                        }\n                    });\n                };\n                form = new _toolFormBase2.default(step);\n                if (step.post_job_actions && step.post_job_actions.length) {\n                    form.portlet.append($(\"<div/>\").addClass(\"ui-form-element-disabled\").append($(\"<div/>\").addClass(\"ui-form-title\").html(\"<b>Job Post Actions</b>\")).append($(\"<div/>\").addClass(\"ui-form-preview\").html(_.reduce(step.post_job_actions, function (memo, value) {\n                        return memo + \" \" + value.short_str;\n                    }, \"\"))));\n                }\n            } else {\n                var is_simple_input = [\"data_input\", \"data_collection_input\"].indexOf(step.step_type) != -1;\n                _.each(step.inputs, function (input) {\n                    input.flavor = \"module\";\n                    input.hide_label = is_simple_input;\n                });\n                form = new _formView2.default(_utils2.default.merge({\n                    title: step.fixed_title,\n                    onchange: function onchange() {\n                        _.each(self.links[step.index], function (link) {\n                            self._refreshStep(link);\n                        });\n                    },\n                    inputs: step.inputs && step.inputs.length > 0 ? step.inputs : [{\n                        type: \"hidden\",\n                        name: \"No options available.\",\n                        ignore: null\n                    }]\n                }, step));\n            }\n            self.forms[step.index] = form;\n            self._append(self.$steps, form.$el);\n            self._refresh();\n            step.needs_refresh && self._refreshStep(step);\n            form.portlet[!self.show_progress ? \"enable\" : \"disable\"]();\n            self.show_progress && self.execute_btn.model.set({\n                wait: true,\n                wait_text: \"Preparing...\",\n                percentage: (step.index + 1) * 100.0 / self.steps.length\n            });\n            Galaxy.emit.debug(\"tool-form-composite::initialize()\", step.index + \" : Workflow step state ready.\", step);\n            setTimeout(function () {\n                promise.resolve();\n            }, 0);\n        });\n    },\n\n    /** Refreshes step values from source step values */\n    _refreshStep: function _refreshStep(step) {\n        var self = this;\n        var form = this.forms[step.index];\n        if (form) {\n            _.each(self.parms[step.index], function (input, name) {\n                if (input.step_linked || input.wp_linked) {\n                    var field = form.field_list[form.data.match(name)];\n                    if (field) {\n                        var new_value = undefined;\n                        if (input.step_linked) {\n                            new_value = { values: [] };\n                            _.each(input.step_linked, function (source_step) {\n                                if (self._isDataStep(source_step)) {\n                                    var value = self.forms[source_step.index].data.create().input;\n                                    value && _.each(value.values, function (v) {\n                                        new_value.values.push(v);\n                                    });\n                                }\n                            });\n                            if (!input.multiple && new_value.values.length > 0) {\n                                new_value = {\n                                    values: [new_value.values[0]]\n                                };\n                            }\n                        } else if (input.wp_linked) {\n                            new_value = input.value;\n                            var re = /\\$\\{(.+?)\\}/g,\n                                match;\n                            while (match = re.exec(input.value)) {\n                                var wp_field = self.wp_form.field_list[self.wp_form.data.match(match[1])];\n                                var wp_value = wp_field && wp_field.value();\n                                if (wp_value) {\n                                    new_value = new_value.split(match[0]).join(wp_value);\n                                }\n                            }\n                        }\n                        if (new_value !== undefined) {\n                            field.value(new_value);\n                        }\n                    }\n                }\n            });\n            form.trigger(\"change\");\n        } else {\n            step.needs_refresh = true;\n        }\n    },\n\n    /** Refresh the history after job submission while form is shown */\n    _refreshHistory: function _refreshHistory() {\n        var self = this;\n        var history = parent.Galaxy && parent.Galaxy.currHistoryPanel && parent.Galaxy.currHistoryPanel.model;\n        this._refresh_history && clearTimeout(this._refresh_history);\n        if (history) {\n            history.refresh().success(function () {\n                if (history.numOfUnfinishedShownContents() === 0) {\n                    self._refresh_history = setTimeout(function () {\n                        self._refreshHistory();\n                    }, history.UPDATE_DELAY);\n                }\n            });\n        }\n    },\n\n    /** Build remaining steps */\n    _execute: function _execute() {\n        var self = this;\n        this.show_progress = true;\n        this._enabled(false);\n        this.deferred.execute(function (promise) {\n            setTimeout(function () {\n                promise.resolve();\n                self._submit();\n            }, 0);\n        });\n    },\n\n    /** Validate and submit workflow */\n    _submit: function _submit() {\n        var self = this;\n        var history_form_data = this.history_form.data.create();\n        var job_def = {\n            new_history_name: history_form_data[\"new_history|name\"] ? history_form_data[\"new_history|name\"] : null,\n            history_id: !history_form_data[\"new_history|name\"] ? this.model.get(\"history_id\") : null,\n            replacement_params: this.wp_form ? this.wp_form.data.create() : {},\n            parameters: {},\n            // Tool form will submit flat maps for each parameter\n            // (e.g. \"repeat_0|cond|param\": \"foo\" instead of nested\n            // data structures).\n            parameters_normalized: true,\n            // Tool form always wants a list of invocations back\n            // so that inputs can be batched.\n            batch: true\n        };\n        var validated = true;\n        for (var i in this.forms) {\n            var form = this.forms[i];\n            var job_inputs = form.data.create();\n            var step = self.steps[i];\n            var step_index = step.step_index;\n            form.trigger(\"reset\");\n            for (var job_input_id in job_inputs) {\n                var input_value = job_inputs[job_input_id];\n                var input_id = form.data.match(job_input_id);\n                var input_field = form.field_list[input_id];\n                var input_def = form.input_list[input_id];\n                if (!input_def.step_linked) {\n                    if (this._isDataStep(step)) {\n                        validated = input_value && input_value.values && input_value.values.length > 0;\n                    } else {\n                        validated = input_def.optional || input_def.is_workflow && input_value !== \"\" || !input_def.is_workflow && input_value !== null;\n                    }\n                    if (!validated) {\n                        form.highlight(input_id);\n                        break;\n                    }\n                    job_def.parameters[step_index] = job_def.parameters[step_index] || {};\n                    job_def.parameters[step_index][job_input_id] = job_inputs[job_input_id];\n                }\n            }\n            if (!validated) {\n                break;\n            }\n        }\n        if (!validated) {\n            self._enabled(true);\n            Galaxy.emit.debug(\"tool-form-composite::submit()\", \"Validation failed.\", job_def);\n        } else {\n            Galaxy.emit.debug(\"tool-form-composite::submit()\", \"Validation complete.\", job_def);\n            _utils2.default.request({\n                type: \"POST\",\n                url: Galaxy.root + \"api/workflows/\" + this.model.id + \"/invocations\",\n                data: job_def,\n                success: function success(response) {\n                    Galaxy.emit.debug(\"tool-form-composite::submit\", \"Submission successful.\", response);\n                    self.$el.children().hide();\n                    self.$el.append(self._templateSuccess(response));\n\n                    // Show Webhook if job is running\n                    if ($.isArray(response) && response.length > 0) {\n                        self.$el.append($(\"<div/>\", { id: \"webhook-view\" }));\n                        var WebhookApp = new _webhooks2.default.WebhookView({\n                            urlRoot: Galaxy.root + \"api/webhooks/workflow\",\n                            toolId: job_def.tool_id,\n                            toolVersion: job_def.tool_version\n                        });\n                    }\n\n                    self._refreshHistory();\n                },\n                error: function error(response) {\n                    Galaxy.emit.debug(\"tool-form-composite::submit\", \"Submission failed.\", response);\n                    var input_found = false;\n                    if (response && response.err_data) {\n                        for (var i in self.forms) {\n                            var form = self.forms[i];\n                            var step_related_errors = response.err_data[form.model.get(\"step_index\")];\n                            if (step_related_errors) {\n                                var error_messages = form.data.matchResponse(step_related_errors);\n                                for (var input_id in error_messages) {\n                                    form.highlight(input_id, error_messages[input_id]);\n                                    input_found = true;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (!input_found) {\n                        self.modal.show({\n                            title: \"Workflow submission failed\",\n                            body: self._templateError(job_def, response && response.err_msg),\n                            buttons: {\n                                Close: function Close() {\n                                    self.modal.hide();\n                                }\n                            }\n                        });\n                    }\n                },\n                complete: function complete() {\n                    self._enabled(true);\n                }\n            });\n        }\n    },\n\n    /** Append new dom to body */\n    _append: function _append($container, $el) {\n        $container.append(\"<p/>\").append($el);\n    },\n\n    /** Set enabled/disabled state */\n    _enabled: function _enabled(enabled) {\n        this.execute_btn.model.set({\n            wait: !enabled,\n            wait_text: \"Sending...\",\n            percentage: -1\n        });\n        this.wp_form && this.wp_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        this.history_form && this.history_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        _.each(this.forms, function (form) {\n            form && form.portlet[enabled ? \"enable\" : \"disable\"]();\n        });\n    },\n\n    /** Is data input module/step */\n    _isDataStep: function _isDataStep(steps) {\n        var lst = $.isArray(steps) ? steps : [steps];\n        for (var i = 0; i < lst.length; i++) {\n            var step = lst[i];\n            if (!step || !step.step_type || !step.step_type.startsWith(\"data\")) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    /** Templates */\n    _templateSuccess: function _templateSuccess(response) {\n        if ($.isArray(response) && response.length > 0) {\n            return $(\"<div/>\").addClass(\"donemessagelarge\").append($(\"<p/>\").html(\"Successfully invoked workflow <b>\" + _utils2.default.sanitize(this.model.get(\"name\")) + \"</b>\" + (response.length > 1 ? \" <b>\" + response.length + \" times</b>\" : \"\") + \".\")).append($(\"<p/>\").append(\"<b/>\").text(\"You can check the status of queued jobs and view the resulting data by refreshing the History pane. When the job has been run the status will change from 'running' to 'finished' if completed successfully or 'error' if problems were encountered.\"));\n        } else {\n            return this._templateError(response, \"Invalid success response. No invocations found.\");\n        }\n    },\n\n    _templateError: function _templateError(response, err_msg) {\n        return $(\"<div/>\").addClass(\"errormessagelarge\").append($(\"<p/>\").text(\"The server could not complete the request. Please contact the Galaxy Team if this error persists. \" + (JSON.stringify(err_msg) || \"\"))).append($(\"<pre/>\").text(JSON.stringify(response, null, 4)));\n    }\n}); /** This is the run workflow tool form view. */\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, jQuery, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _errorModal = __webpack_require__(79);\n\nvar _errorModal2 = _interopRequireDefault(_errorModal);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\n/**\n * A dialog/modal that allows copying a user history or 'importing' from user\n * another. Generally called via historyCopyDialog below.\n * @type {Object}\n */\nvar CopyDialog = {\n    // language related strings/fns\n    defaultName: _.template(\"Copy of '<%- name %>'\"),\n    title: _.template((0, _localization2.default)(\"Copying history\") + ' \"<%- name %>\"'),\n    submitLabel: (0, _localization2.default)(\"Copy\"),\n    errorMessage: (0, _localization2.default)(\"History could not be copied.\"),\n    progressive: (0, _localization2.default)(\"Copying history\"),\n    activeLabel: (0, _localization2.default)(\"Copy only the active, non-deleted datasets\"),\n    allLabel: (0, _localization2.default)(\"Copy all datasets including deleted ones\"),\n    anonWarning: (0, _localization2.default)(\"As an anonymous user, unless you login or register, you will lose your current history \") + (0, _localization2.default)(\"after copying this history. \"),\n\n    // template for modal body\n    _template: _.template([\n    //TODO: remove inline styles\n    // show a warning message for losing current to anon users\n    \"<% if( isAnon ){ %>\", '<div class=\"warningmessage\">', \"<%- anonWarning %>\", (0, _localization2.default)(\"You can\"), ' <a href=\"/user/login\">', (0, _localization2.default)(\"login here\"), \"</a> \", (0, _localization2.default)(\"or\"), \" \", ' <a href=\"/user/create\">', (0, _localization2.default)(\"register here\"), \"</a>.\", \"</div>\", \"<% } %>\", \"<form>\", '<label for=\"copy-modal-title\">', (0, _localization2.default)(\"Enter a title for the new history\"), \":\", \"</label><br />\",\n    // TODO: could use required here and the form validators\n    // NOTE: use unescaped here if escaped in the modal function below\n    '<input id=\"copy-modal-title\" class=\"form-control\" style=\"width: 100%\" value=\"<%= name %>\" />', '<p class=\"invalid-title bg-danger\" style=\"color: red; margin: 8px 0px 8px 0px; display: none\">', (0, _localization2.default)(\"Please enter a valid history title\"), \"</p>\",\n    // if allowAll, add the option to copy deleted datasets, too\n    \"<% if( allowAll ){ %>\", \"<br />\", \"<p>\", (0, _localization2.default)(\"Choose which datasets from the original history to include:\"), \"</p>\",\n    // copy non-deleted is the default\n    '<input name=\"copy-what\" type=\"radio\" id=\"copy-non-deleted\" value=\"copy-non-deleted\" ', '<% if( copyWhat === \"copy-non-deleted\" ){ print( \"checked\" ); } %>/>', '<label for=\"copy-non-deleted\"> <%- activeLabel %></label>', \"<br />\", '<input name=\"copy-what\" type=\"radio\" id=\"copy-all\" value=\"copy-all\" ', '<% if( copyWhat === \"copy-all\" ){ print( \"checked\" ); } %>/>', '<label for=\"copy-all\"> <%- allLabel %></label>', \"<% } %>\", \"</form>\"].join(\"\")),\n\n    // empty modal body and let the user know the copy is happening\n    _showAjaxIndicator: function _showAjaxIndicator() {\n        var indicator = '<p><span class=\"fa fa-spinner fa-spin\"></span> ' + this.progressive + \"...</p>\";\n        this.modal.$(\".modal-body\").empty().append(indicator).css({ \"margin-top\": \"8px\" });\n    },\n\n    // (sorta) public interface - display the modal, render the form, and potentially copy the history\n    // returns a jQuery.Deferred done->history copied, fail->user cancelled\n    dialog: function _dialog(modal, history, options) {\n        options = options || {};\n\n        var dialog = this,\n            deferred = jQuery.Deferred(),\n\n        // TODO: getting a little byzantine here\n        defaultCopyNameFn = options.nameFn || this.defaultName,\n            defaultCopyName = defaultCopyNameFn({\n            name: history.get(\"name\")\n        }),\n\n        // TODO: these two might be simpler as one 3 state option (all,active,no-choice)\n        defaultCopyWhat = options.allDatasets ? \"copy-all\" : \"copy-non-deleted\",\n            allowAll = !_.isUndefined(options.allowAll) ? options.allowAll : true,\n            autoClose = !_.isUndefined(options.autoClose) ? options.autoClose : true;\n\n        this.modal = modal;\n\n        // validate the name and copy if good\n        function checkNameAndCopy() {\n            var name = modal.$(\"#copy-modal-title\").val();\n            if (!name) {\n                modal.$(\".invalid-title\").show();\n                return;\n            }\n            // get further settings, shut down and indicate the ajax call, then hide and resolve/reject\n            var copyAllDatasets = modal.$('input[name=\"copy-what\"]:checked').val() === \"copy-all\";\n            modal.$(\"button\").prop(\"disabled\", true);\n            dialog._showAjaxIndicator();\n            history.copy(true, name, copyAllDatasets).done(function (response) {\n                deferred.resolve(response);\n            }).fail(function (xhr, status, message) {\n                var options = {\n                    name: name,\n                    copyAllDatasets: copyAllDatasets\n                };\n                _errorModal2.default.ajaxErrorModal(history, xhr, options, dialog.errorMessage);\n                deferred.rejectWith(deferred, arguments);\n            }).done(function () {\n                if (autoClose) {\n                    modal.hide();\n                }\n            });\n        }\n\n        var originalClosingCallback = options.closing_callback;\n        modal.show(_.extend(options, {\n            title: this.title({ name: history.get(\"name\") }),\n            body: $(dialog._template({\n                name: defaultCopyName,\n                isAnon: Galaxy.user.isAnonymous(),\n                allowAll: allowAll,\n                copyWhat: defaultCopyWhat,\n                activeLabel: this.activeLabel,\n                allLabel: this.allLabel,\n                anonWarning: this.anonWarning\n            })),\n            buttons: _.object([[(0, _localization2.default)(\"Cancel\"), function () {\n                modal.hide();\n            }], [this.submitLabel, checkNameAndCopy]]),\n            height: \"auto\",\n            closing_events: true,\n            closing_callback: function _historyCopyClose(cancelled) {\n                if (cancelled) {\n                    deferred.reject({ cancelled: true });\n                }\n                if (originalClosingCallback) {\n                    originalClosingCallback(cancelled);\n                }\n            }\n        }));\n\n        // set the default dataset copy, autofocus the title, and set up for a simple return\n        modal.$(\"#copy-modal-title\").focus().select();\n        modal.$(\"#copy-modal-title\").on(\"keydown\", function (ev) {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                checkNameAndCopy();\n            }\n        });\n\n        return deferred;\n    }\n};\n\n//==============================================================================\n// maintain the (slight) distinction between copy and import\n/**\n * Subclass CopyDialog to use the import language.\n */\nvar ImportDialog = _.extend({}, CopyDialog, {\n    defaultName: _.template(\"imported: <%- name %>\"),\n    title: _.template((0, _localization2.default)(\"Importing history\") + ' \"<%- name %>\"'),\n    submitLabel: (0, _localization2.default)(\"Import\"),\n    errorMessage: (0, _localization2.default)(\"History could not be imported.\"),\n    progressive: (0, _localization2.default)(\"Importing history\"),\n    activeLabel: (0, _localization2.default)(\"Import only the active, non-deleted datasets\"),\n    allLabel: (0, _localization2.default)(\"Import all datasets including deleted ones\"),\n    anonWarning: (0, _localization2.default)(\"As an anonymous user, unless you login or register, you will lose your current history \") + (0, _localization2.default)(\"after importing this history. \")\n});\n\n//==============================================================================\n/**\n * Main interface for both history import and history copy dialogs.\n * @param  {Backbone.Model} history     the history to copy\n * @param  {Object}         options     a hash\n * @return {jQuery.Deferred}            promise that fails on close and succeeds on copy\n *\n * options:\n *     (this object is also passed to the modal used to display the dialog and accepts modal options)\n *     {Function} nameFn    if defined, use this to build the default name shown to the user\n *                          (the fn is passed: {name: <original history's name>})\n *     {bool} useImport     if true, use the 'import' language (instead of Copy)\n *     {bool} allowAll      if true, allow the user to choose between copying all datasets and\n *                          only non-deleted datasets\n *     {String} allDatasets default initial checked radio button: 'copy-all' or 'copy-non-deleted',\n */\nvar historyCopyDialog = function historyCopyDialog(history, options) {\n    options = options || {};\n    // create our own modal if Galaxy doesn't have one (mako tab without use_panels)\n    var modal = window.parent.Galaxy.modal || new _uiModal2.default.View({});\n    return options.useImport ? ImportDialog.dialog(modal, history, options) : CopyDialog.dialog(modal, history, options);\n};\n\n//==============================================================================\nexports.default = historyCopyDialog;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, _) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (_l) {\n    \"use strict\";\n\n    //TODO: toastr is another possibility - I didn't see where I might add details, tho\n\n    /* ============================================================================\n    Error modals meant to replace the o-so-easy alerts.\n    These are currently styled as errormessages but use the Galaxy.modal\n    infrastructure to be shown/closed. They're capable of showing details in a\n    togglable dropdown and the details are formatted in a pre.\n    Example:\n    errorModal( 'Heres a message', 'A Title', { some_details: 'here' });\n    errorModal( 'Heres a message' ); // no details, title is 'Error'\n    There are three specialized forms:\n    offlineErrorModal       a canned response for when there's no connection\n    badGatewayErrorModal    canned response for when Galaxy is restarting\n    ajaxErrorModal          plugable into any Backbone class as an\n        error event handler by accepting the error args: model, xhr, options\n    Examples:\n    if( navigator.offLine ){ offlineErrorModal(); }\n    if( xhr.status === 502 ){ badGatewayErrorModal(); }\n    this.listenTo( this.model, 'error', ajaxErrorModal );\n    ============================================================================ */\n\n    var CONTACT_MSG = _l(\"Please contact a Galaxy administrator if the problem persists.\");\n    var DEFAULT_AJAX_ERR_MSG = _l(\"An error occurred while updating information with the server.\");\n    var DETAILS_MSG = _l(\"The following information can assist the developers in finding the source of the error:\");\n\n    /** private helper that builds the modal and handles adding details */\n    function _errorModal(message, title, details) {\n        // create and return the modal, adding details button only if needed\n        Galaxy.modal.show({\n            title: title,\n            body: message,\n            closing_events: true,\n            buttons: {\n                Ok: function Ok() {\n                    Galaxy.modal.hide();\n                }\n            }\n        });\n        Galaxy.modal.$el.addClass(\"error-modal\");\n\n        if (details) {\n            Galaxy.modal.$(\".error-details\").add(Galaxy.modal.$('button:contains(\"Details\")')).remove();\n            $(\"<div/>\").addClass(\"error-details\").hide().appendTo(Galaxy.modal.$(\".modal-content\")).append([$(\"<p/>\").text(DETAILS_MSG), $(\"<pre/>\").text(JSON.stringify(details, null, \"  \"))]);\n\n            $('<button id=\"button-1\" class=\"pull-left\">' + _l(\"Details\") + \"</button>\").appendTo(Galaxy.modal.$(\".buttons\")).click(function () {\n                Galaxy.modal.$(\".error-details\").toggle();\n            });\n        }\n        return Galaxy.modal;\n    }\n\n    /** Display a modal showing an error message but fallback to alert if there's no modal */\n    function errorModal(message, title, details) {\n        if (!message) {\n            return;\n        }\n\n        message = _l(message);\n        title = _l(title) || _l(\"Error:\");\n        if (window.Galaxy && Galaxy.modal) {\n            return _errorModal(message, title, details);\n        }\n\n        alert(title + \"\\n\\n\" + message);\n        console.log(\"error details:\", JSON.stringify(details));\n    }\n\n    // ----------------------------------------------------------------------------\n    /** display a modal when the user may be offline */\n    function offlineErrorModal() {\n        return errorModal(_l(\"You appear to be offline. Please check your connection and try again.\"), _l(\"Offline?\"));\n    }\n\n    // ----------------------------------------------------------------------------\n    /** 502 messages that should be displayed when galaxy is restarting */\n    function badGatewayErrorModal() {\n        return errorModal(_l(\"Galaxy is currently unreachable. Please try again in a few minutes.\") + \" \" + CONTACT_MSG, _l(\"Cannot connect to Galaxy\"));\n    }\n\n    // ----------------------------------------------------------------------------\n    /** display a modal (with details) about a failed Backbone ajax operation */\n    function ajaxErrorModal(model, xhr, options, message, title) {\n        message = message || DEFAULT_AJAX_ERR_MSG;\n        message += \" \" + CONTACT_MSG;\n        title = title || _l(\"An error occurred\");\n        var details = _ajaxDetails(model, xhr, options);\n        return errorModal(message, title, details);\n    }\n\n    /** build details which may help debugging the ajax call */\n    function _ajaxDetails(model, xhr, options) {\n        return {\n            //TODO: still can't manage Raven id\n            raven: _.result(window.Raven, \"lastEventId\"),\n            userAgent: navigator.userAgent,\n            onLine: navigator.onLine,\n            version: _.result(Galaxy.config, \"version_major\"),\n            xhr: _.omit(xhr, _.functions(xhr)),\n            options: _.omit(options, \"xhr\"),\n            // add ajax data from Galaxy object cache\n            url: _.result(Galaxy.lastAjax, \"url\"),\n            data: _.result(Galaxy.lastAjax, \"data\"),\n            // backbone stuff (auto-redacting email for user)\n            model: _.result(model, \"toJSON\", model + \"\"),\n            user: _.omit(_.result(Galaxy.user, \"toJSON\"), \"email\")\n        };\n    }\n\n    //=============================================================================\n    return {\n        errorModal: errorModal,\n        offlineErrorModal: offlineErrorModal,\n        badGatewayErrorModal: badGatewayErrorModal,\n        ajaxErrorModal: ajaxErrorModal\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nvar _backbone = __webpack_require__(2);\n\nvar _backbone2 = _interopRequireDefault(_backbone);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//=============================================================================\n/**\n * A Collection that can be limited/offset/re-ordered/filtered.\n * @type {Backbone.Collection}\n */\nvar ControlledFetchCollection = _backbone2.default.Collection.extend({\n    /** call setOrder on initialization to build the comparator based on options */\n    initialize: function initialize(models, options) {\n        _backbone2.default.Collection.prototype.initialize.call(this, models, options);\n        this.setOrder(options.order || this.order, { silent: true });\n    },\n\n    /** set up to track order changes and re-sort when changed */\n    _setUpListeners: function _setUpListeners() {\n        return this.on({\n            \"changed-order\": this.sort\n        });\n    },\n\n    /** override to provide order and offsets based on instance vars, set limit if passed,\n     *  and set allFetched/fire 'all-fetched' when xhr returns\n     */\n    fetch: function fetch(options) {\n        options = this._buildFetchOptions(options);\n        Galaxy.debug(\"fetch options:\", options);\n        return _backbone2.default.Collection.prototype.fetch.call(this, options);\n    },\n\n    /** build ajax data/parameters from options */\n    _buildFetchOptions: function _buildFetchOptions(options) {\n        // note: we normally want options passed in to override the defaults built here\n        // so most of these fns will generate defaults\n        options = _underscore2.default.clone(options) || {};\n        var self = this;\n\n        // jquery ajax option; allows multiple q/qv for filters (instead of 'q[]')\n        options.traditional = true;\n\n        // options.data\n        // we keep limit, offset, etc. in options *as well as move it into data* because:\n        // - it makes fetch calling convenient to add it to a single options map (instead of as mult. args)\n        // - it allows the std. event handlers (for fetch, etc.) to have access\n        //   to the pagination options too\n        //      (i.e. this.on( 'sync', function( options ){ if( options.limit ){ ... } }))\n        // however, when we send to xhr/jquery we copy them to data also so that they become API query params\n        options.data = options.data || self._buildFetchData(options);\n        Galaxy.debug(\"data:\", options.data);\n\n        // options.data.filters --> options.data.q, options.data.qv\n        var filters = this._buildFetchFilters(options);\n        Galaxy.debug(\"filters:\", filters);\n        if (!_underscore2.default.isEmpty(filters)) {\n            _underscore2.default.extend(options.data, this._fetchFiltersToAjaxData(filters));\n        }\n        Galaxy.debug(\"data:\", options.data);\n        return options;\n    },\n\n    /** Build the dictionary to send to fetch's XHR as data */\n    _buildFetchData: function _buildFetchData(options) {\n        var defaults = {};\n        if (this.order) {\n            defaults.order = this.order;\n        }\n        return _underscore2.default.defaults(_underscore2.default.pick(options, this._fetchParams), defaults);\n    },\n\n    /** These attribute keys are valid params to fetch/API-index */\n    _fetchParams: [\n    /** model dependent string to control the order of models returned */\n    \"order\",\n    /** limit the number of models returned from a fetch */\n    \"limit\",\n    /** skip this number of models when fetching */\n    \"offset\",\n    /** what series of attributes to return (model dependent) */\n    \"view\",\n    /** individual keys to return for the models (see api/histories.index) */\n    \"keys\"],\n\n    /** add any needed filters here based on collection state */\n    _buildFetchFilters: function _buildFetchFilters(options) {\n        // override\n        return _underscore2.default.clone(options.filters || {});\n    },\n\n    /** Convert dictionary filters to qqv style arrays */\n    _fetchFiltersToAjaxData: function _fetchFiltersToAjaxData(filters) {\n        // return as a map so ajax.data can extend from it\n        var filterMap = {\n            q: [],\n            qv: []\n        };\n        _underscore2.default.each(filters, function (v, k) {\n            // don't send if filter value is empty\n            if (v === undefined || v === \"\") {\n                return;\n            }\n            // json to python\n            if (v === true) {\n                v = \"True\";\n            }\n            if (v === false) {\n                v = \"False\";\n            }\n            if (v === null) {\n                v = \"None\";\n            }\n            // map to k/v arrays (q/qv)\n            filterMap.q.push(k);\n            filterMap.qv.push(v);\n        });\n        return filterMap;\n    },\n\n    /** override to reset allFetched flag to false */\n    reset: function reset(models, options) {\n        this.allFetched = false;\n        return _backbone2.default.Collection.prototype.reset.call(this, models, options);\n    },\n\n    // ........................................................................ order\n    order: null,\n\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: {\n        update_time: _baseMvc2.default.buildComparator(\"update_time\", {\n            ascending: false\n        }),\n        \"update_time-asc\": _baseMvc2.default.buildComparator(\"update_time\", {\n            ascending: true\n        }),\n        create_time: _baseMvc2.default.buildComparator(\"create_time\", {\n            ascending: false\n        }),\n        \"create_time-asc\": _baseMvc2.default.buildComparator(\"create_time\", {\n            ascending: true\n        })\n    },\n\n    /** set the order and comparator for this collection then sort with the new order\n     *  @event 'changed-order' passed the new order and the collection\n     */\n    setOrder: function setOrder(order, options) {\n        options = options || {};\n        var collection = this;\n        var comparator = collection.comparators[order];\n        if (_underscore2.default.isUndefined(comparator)) {\n            throw new Error(\"unknown order: \" + order);\n        }\n        // if( _.isUndefined( comparator ) ){ return; }\n        if (comparator === collection.comparator) {\n            return;\n        }\n\n        collection.order = order;\n        collection.comparator = comparator;\n\n        if (!options.silent) {\n            collection.trigger(\"changed-order\", options);\n        }\n        return collection;\n    }\n});\n\n//=============================================================================\n/**\n *\n */\nvar PaginatedCollection = ControlledFetchCollection.extend({\n    /** @type {Number} limit used for each page's fetch */\n    limitPerPage: 500,\n\n    initialize: function initialize(models, options) {\n        ControlledFetchCollection.prototype.initialize.call(this, models, options);\n        this.currentPage = options.currentPage || 0;\n    },\n\n    getTotalItemCount: function getTotalItemCount() {\n        return this.length;\n    },\n\n    shouldPaginate: function shouldPaginate() {\n        return this.getTotalItemCount() >= this.limitPerPage;\n    },\n\n    getLastPage: function getLastPage() {\n        return Math.floor(this.getTotalItemCount() / this.limitPerPage);\n    },\n\n    getPageCount: function getPageCount() {\n        return this.getLastPage() + 1;\n    },\n\n    getPageLimitOffset: function getPageLimitOffset(pageNum) {\n        pageNum = this.constrainPageNum(pageNum);\n        return {\n            limit: this.limitPerPage,\n            offset: pageNum * this.limitPerPage\n        };\n    },\n\n    constrainPageNum: function constrainPageNum(pageNum) {\n        return Math.max(0, Math.min(pageNum, this.getLastPage()));\n    },\n\n    /** fetch the next page of data */\n    fetchPage: function fetchPage(pageNum, options) {\n        var self = this;\n        pageNum = self.constrainPageNum(pageNum);\n        self.currentPage = pageNum;\n        options = _underscore2.default.defaults(options || {}, self.getPageLimitOffset(pageNum));\n\n        self.trigger(\"fetching-more\");\n        return self.fetch(options).always(function () {\n            self.trigger(\"fetching-more-done\");\n        });\n    },\n\n    fetchCurrentPage: function fetchCurrentPage(options) {\n        return this.fetchPage(this.currentPage, options);\n    },\n\n    fetchPrevPage: function fetchPrevPage(options) {\n        return this.fetchPage(this.currentPage - 1, options);\n    },\n\n    fetchNextPage: function fetchNextPage(options) {\n        return this.fetchPage(this.currentPage + 1, options);\n    }\n});\n\n//=============================================================================\n/**\n * A Collection that will load more elements without reseting.\n */\nvar InfinitelyScrollingCollection = ControlledFetchCollection.extend({\n    /** @type {Number} limit used for the first fetch (or a reset) */\n    limitOnFirstFetch: null,\n    /** @type {Number} limit used for each subsequent fetch */\n    limitPerFetch: 100,\n\n    initialize: function initialize(models, options) {\n        ControlledFetchCollection.prototype.initialize.call(this, models, options);\n        /** @type {Integer} number of contents to return from the first fetch */\n        this.limitOnFirstFetch = options.limitOnFirstFetch || this.limitOnFirstFetch;\n        /** @type {Integer} limit for every fetch after the first */\n        this.limitPerFetch = options.limitPerFetch || this.limitPerFetch;\n        /** @type {Boolean} are all contents fetched? */\n        this.allFetched = false;\n        /** @type {Integer} what was the offset of the last content returned */\n        this.lastFetched = options.lastFetched || 0;\n    },\n\n    /** build ajax data/parameters from options */\n    _buildFetchOptions: function _buildFetchOptions(options) {\n        // options (options for backbone.fetch and jquery.ajax generally)\n        // backbone option; false here to make fetching an addititive process\n        options.remove = options.remove || false;\n        return ControlledFetchCollection.prototype._buildFetchOptions.call(this, options);\n    },\n\n    /** fetch the first 'page' of data */\n    fetchFirst: function fetchFirst(options) {\n        Galaxy.debug(\"ControlledFetchCollection.fetchFirst:\", options);\n        options = options ? _underscore2.default.clone(options) : {};\n        this.allFetched = false;\n        this.lastFetched = 0;\n        return this.fetchMore(_underscore2.default.defaults(options, {\n            reset: true,\n            limit: this.limitOnFirstFetch\n        }));\n    },\n\n    /** fetch the next page of data */\n    fetchMore: function fetchMore(options) {\n        Galaxy.debug(\"ControlledFetchCollection.fetchMore:\", options);\n        options = _underscore2.default.clone(options || {});\n        var collection = this;\n\n        Galaxy.debug(\"fetchMore, options.reset:\", options.reset);\n        if (!options.reset && collection.allFetched) {\n            return jQuery.when();\n        }\n\n        // TODO: this fails in the edge case where\n        //  the first fetch offset === limit (limit 4, offset 4, collection.length 4)\n        if (options.reset) {\n            options.offset = 0;\n        } else if (options.offset === undefined) {\n            options.offset = collection.lastFetched;\n        }\n        var limit = options.limit = options.limit || collection.limitPerFetch || null;\n        Galaxy.debug(\"fetchMore, limit:\", limit, \"offset:\", options.offset);\n\n        collection.trigger(\"fetching-more\");\n        return collection.fetch(options).always(function () {\n            collection.trigger(\"fetching-more-done\");\n        })\n        // maintain allFetched flag and trigger if all were fetched this time\n        .done(function _postFetchMore(fetchedData) {\n            var numFetched = _underscore2.default.isArray(fetchedData) ? fetchedData.length : 0;\n            collection.lastFetched += numFetched;\n            Galaxy.debug(\"fetchMore, lastFetched:\", collection.lastFetched);\n            // anything less than a full page means we got all there is to get\n            if (!limit || numFetched < limit) {\n                collection.allFetched = true;\n                collection.trigger(\"all-fetched\", this);\n            }\n        });\n    },\n\n    /** fetch all the collection */\n    fetchAll: function fetchAll(options) {\n        // whitelist options to prevent allowing limit/offset/filters\n        // (use vanilla fetch instead)\n        options = options || {};\n        var self = this;\n        options = _underscore2.default.pick(options, \"silent\");\n        options.filters = {};\n        return self.fetch(options).done(function () {\n            self.allFetched = true;\n            self.trigger(\"all-fetched\", self);\n        });\n    }\n});\n\n//==============================================================================\nexports.default = {\n    ControlledFetchCollection: ControlledFetchCollection,\n    PaginatedCollection: PaginatedCollection,\n    InfinitelyScrollingCollection: InfinitelyScrollingCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _datasetModel = __webpack_require__(72);\n\nvar _datasetModel2 = _interopRequireDefault(_datasetModel);\n\nvar _historyContentModel = __webpack_require__(73);\n\nvar _historyContentModel2 = _interopRequireDefault(_historyContentModel);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _datasetModel2.default.DatasetAssociation,\n    hcontentMixin = _historyContentModel2.default.HistoryContentMixin;\n/** @class (HDA) model for a Galaxy dataset contained in and related to a history.\n */\nvar HistoryDatasetAssociation = _super.extend(_baseMvc2.default.mixin(hcontentMixin,\n/** @lends HistoryDatasetAssociation.prototype */{\n    /** default attributes for a model */\n    defaults: _.extend({}, _super.prototype.defaults, hcontentMixin.defaults, {\n        history_content_type: \"dataset\",\n        model_class: \"HistoryDatasetAssociation\"\n    })\n}));\n\n//==============================================================================\nexports.default = {\n    HistoryDatasetAssociation: HistoryDatasetAssociation\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listItem = __webpack_require__(41);\n\nvar _listItem2 = _interopRequireDefault(_listItem);\n\nvar _loadingIndicator = __webpack_require__(155);\n\nvar _loadingIndicator2 = _interopRequireDefault(_loadingIndicator);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(83);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"list\";\n/* ============================================================================\nTODO:\n\n============================================================================ */\n/** @class View for a list/collection of models and the sub-views of those models.\n *      Sub-views must (at least have the interface if not) inherit from ListItemView.\n *      (For a list panel that also includes some 'container' model (History->HistoryContents)\n *      use ModelWithListPanel)\n *\n *  Allows for:\n *      searching collection/sub-views\n *      selecting/multi-selecting sub-views\n *\n *  Currently used:\n *      for dataset/dataset-choice\n *      as superclass of ModelListPanel\n */\nvar ListPanel = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(\n/** @lends ListPanel.prototype */{\n    _logNamespace: logNamespace,\n\n    /** class to use for constructing the sub-views */\n    viewClass: _listItem2.default.ListItemView,\n    /** class to used for constructing collection of sub-view models */\n    collectionClass: Backbone.Collection,\n\n    tagName: \"div\",\n    className: \"list-panel\",\n\n    /** (in ms) that jquery effects will use */\n    fxSpeed: \"fast\",\n\n    /** string to display when the collection has no contents */\n    emptyMsg: (0, _localization2.default)(\"This list is empty\"),\n    /** displayed when no items match the search terms */\n    noneFoundMsg: (0, _localization2.default)(\"No matching items found\"),\n    /** string used for search placeholder */\n    searchPlaceholder: (0, _localization2.default)(\"search\"),\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n    *  @param {Object} attributes optional settings for the list\n    */\n    initialize: function initialize(attributes, options) {\n        attributes = attributes || {};\n        // set the logger if requested\n        if (attributes.logger) {\n            this.logger = attributes.logger;\n        }\n        this.log(this + \".initialize:\", attributes);\n\n        // ---- instance vars\n        /** how quickly should jquery fx run? */\n        this.fxSpeed = _.has(attributes, \"fxSpeed\") ? attributes.fxSpeed : this.fxSpeed;\n\n        /** filters for displaying subviews */\n        this.filters = [];\n        /** current search terms */\n        this.searchFor = attributes.searchFor || \"\";\n\n        /** loading indicator */\n        // this.indicator = new LoadingIndicator( this.$el );\n\n        /** currently showing selectors on items? */\n        this.selecting = attributes.selecting !== undefined ? attributes.selecting : true;\n        //this.selecting = false;\n\n        /** cached selected item.model.ids to persist btwn renders */\n        this.selected = attributes.selected || [];\n        /** the last selected item.model.id */\n        this.lastSelected = null;\n\n        /** are sub-views draggable */\n        this.dragItems = attributes.dragItems || false;\n\n        /** list item view class (when passed models) */\n        this.viewClass = attributes.viewClass || this.viewClass;\n\n        /** list item views */\n        this.views = [];\n        /** list item models */\n        this.collection = attributes.collection || this._createDefaultCollection();\n\n        /** filter fns run over collection items to see if they should show in the list */\n        this.filters = attributes.filters || [];\n\n        /** override $scrollContainer fn via attributes - fn should return jq for elem to call scrollTo on */\n        this.$scrollContainer = attributes.$scrollContainer || this.$scrollContainer;\n\n        /** @type {String} generic title */\n        this.title = attributes.title || \"\";\n        /** @type {String} generic subtitle */\n        this.subtitle = attributes.subtitle || \"\";\n\n        this._setUpListeners();\n    },\n\n    // ------------------------------------------------------------------------ listeners\n    /** create any event listeners for the list */\n    _setUpListeners: function _setUpListeners() {\n        this.off();\n\n        //TODO: move errorHandler down into list-view from history-view or\n        //  pass to global error handler (Galaxy)\n        this.on({\n            error: function error(model, xhr, options, msg, details) {\n                //this.errorHandler( model, xhr, options, msg, details );\n                console.error(model, xhr, options, msg, details);\n            },\n            // show hide the loading indicator\n            loading: function loading() {\n                this._showLoadingIndicator(\"loading...\", 40);\n            },\n            \"loading-done\": function loadingDone() {\n                this._hideLoadingIndicator(40);\n            }\n        });\n\n        // throw the first render up as a diff namespace using once (for outside consumption)\n        this.once(\"rendered\", function () {\n            this.trigger(\"rendered:initial\", this);\n        });\n\n        this._setUpCollectionListeners();\n        this._setUpViewListeners();\n        return this;\n    },\n\n    /** create and return a collection for when none is initially passed */\n    _createDefaultCollection: function _createDefaultCollection() {\n        // override\n        return new this.collectionClass([]);\n    },\n\n    /** listening for collection events */\n    _setUpCollectionListeners: function _setUpCollectionListeners() {\n        this.log(this + \"._setUpCollectionListeners\", this.collection);\n        this.stopListening(this.collection);\n\n        // bubble up error events\n        this.listenTo(this.collection, {\n            error: function error(model, xhr, options, msg, details) {\n                this.trigger(\"error\", model, xhr, options, msg, details);\n            },\n            update: function update(collection, options) {\n                var changes = options.changes;\n                // console.info( collection + ', update:', changes, '\\noptions:', options );\n                // more than one: render everything\n                if (options.renderAll || changes.added.length + changes.removed.length > 1) {\n                    return this.renderItems();\n                }\n                // otherwise, let the single add/remove handlers do it\n                if (changes.added.length === 1) {\n                    return this.addItemView(_.first(changes.added), collection, options);\n                }\n                if (changes.removed.length === 1) {\n                    return this.removeItemView(_.first(changes.removed), collection, options);\n                }\n            }\n        });\n        return this;\n    },\n\n    /** listening for sub-view events that bubble up with the 'view:' prefix */\n    _setUpViewListeners: function _setUpViewListeners() {\n        this.log(this + \"._setUpViewListeners\");\n\n        // shift to select a range\n        this.on({\n            \"view:selected\": function viewSelected(view, ev) {\n                if (ev && ev.shiftKey && this.lastSelected) {\n                    var lastSelectedView = this.viewFromModelId(this.lastSelected);\n                    if (lastSelectedView) {\n                        this.selectRange(view, lastSelectedView);\n                    }\n                } else if (ev && ev.altKey && !this.selecting) {\n                    this.showSelectors();\n                }\n                this.selected.push(view.model.id);\n                this.lastSelected = view.model.id;\n            },\n\n            \"view:de-selected\": function viewDeSelected(view, ev) {\n                this.selected = _.without(this.selected, view.model.id);\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ rendering\n    /** Render this content, set up ui.\n    *  @param {Number or String} speed   the speed of the render\n    */\n    render: function render(speed) {\n        this.log(this + \".render\", speed);\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors($newRender);\n        this._queueNewRender($newRender, speed);\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el. */\n    _buildNewRender: function _buildNewRender() {\n        this.debug(this + \"(ListPanel)._buildNewRender\");\n        var $newRender = $(this.templates.el({}, this));\n        this._renderControls($newRender);\n        this._renderTitle($newRender);\n        this._renderSubtitle($newRender);\n        this._renderSearch($newRender);\n        this.renderItems($newRender);\n        return $newRender;\n    },\n\n    /** Build a temp div containing the new children for the view's $el. */\n    _renderControls: function _renderControls($newRender) {\n        this.debug(this + \"(ListPanel)._renderControls\");\n        var $controls = $(this.templates.controls({}, this));\n        $newRender.find(\".controls\").replaceWith($controls);\n        return $controls;\n    },\n\n    /** return a jQuery object containing the title DOM */\n    _renderTitle: function _renderTitle($where) {\n        //$where = $where || this.$el;\n        //$where.find( '.title' ).replaceWith( ... )\n    },\n\n    /** return a jQuery object containing the subtitle DOM (if any) */\n    _renderSubtitle: function _renderSubtitle($where) {\n        //$where = $where || this.$el;\n        //$where.find( '.title' ).replaceWith( ... )\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n    *  @param {Number or String} speed   jq speed to use for rendering effects\n    *  @fires rendered when rendered\n    */\n    _queueNewRender: function _queueNewRender($newRender, speed) {\n        speed = speed === undefined ? this.fxSpeed : speed;\n        var panel = this;\n        panel.log(\"_queueNewRender:\", $newRender, speed);\n\n        $(panel).queue(\"fx\", [function (next) {\n            panel.$el.fadeOut(speed, next);\n        }, function (next) {\n            panel._swapNewRender($newRender);\n            next();\n        }, function (next) {\n            panel.$el.fadeIn(speed, next);\n        }, function (next) {\n            panel.trigger(\"rendered\", panel);\n            next();\n        }]);\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender: function _swapNewRender($newRender) {\n        this.$el.empty().attr(\"class\", this.className).append($newRender.children());\n        if (this.selecting) {\n            this.showSelectors(0);\n        }\n        return this;\n    },\n\n    /** Set up any behaviors, handlers (ep. plugins) that need to be called when the entire view has been built but\n    *  not attached to the page yet.\n    */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        $where = $where || this.$el;\n        this.$controls($where).find(\"[title]\").tooltip();\n        // set up the pupup for actions available when multi selecting\n        this._renderMultiselectActionMenu($where);\n        return this;\n    },\n\n    /** render a menu containing the actions available to sets of selected items */\n    _renderMultiselectActionMenu: function _renderMultiselectActionMenu($where) {\n        $where = $where || this.$el;\n        var $menu = $where.find(\".list-action-menu\"),\n            actions = this.multiselectActions();\n        if (!actions.length) {\n            return $menu.empty();\n        }\n\n        var $newMenu = $(['<div class=\"list-action-menu btn-group\">', '<button class=\"list-action-menu-btn btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">', (0, _localization2.default)(\"For all selected\"), \"...\", \"</button>\", '<ul class=\"dropdown-menu pull-right\" role=\"menu\">', \"</ul>\", \"</div>\"].join(\"\"));\n        var $actions = actions.map(function (action) {\n            var html = ['<li><a href=\"javascript:void(0);\">', action.html, \"</a></li>\"].join(\"\");\n            return $(html).click(function (ev) {\n                ev.preventDefault();\n                return action.func(ev);\n            });\n        });\n        $newMenu.find(\"ul\").append($actions);\n        $menu.replaceWith($newMenu);\n        return $newMenu;\n    },\n\n    /** return a list of plain objects used to render multiselect actions menu. Each object should have:\n    *      html: an html string used as the anchor contents\n    *      func: a function called when the anchor is clicked (passed the click event)\n    */\n    multiselectActions: function multiselectActions() {\n        return [];\n    },\n\n    // ------------------------------------------------------------------------ sub-$element shortcuts\n    /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n    $scrollContainer: function $scrollContainer($where) {\n        // override or set via attributes.$scrollContainer\n        return ($where || this.$el).parent().parent();\n    },\n    /** convenience selector for the section that displays the list controls */\n    $controls: function $controls($where) {\n        return ($where || this.$el).find(\"> .controls\");\n    },\n    /** list-items: where the subviews are contained in the view's dom */\n    $list: function $list($where) {\n        return ($where || this.$el).find(\"> .list-items\");\n    },\n    /** container where list messages are attached */\n    $messages: function $messages($where) {\n        //TODO: controls isn't really correct here (only for ModelListPanel)\n        return ($where || this.$el).find(\"> .controls .messages\");\n    },\n    /** the message displayed when no views can be shown (no views, none matching search) */\n    $emptyMessage: function $emptyMessage($where) {\n        return ($where || this.$el).find(\"> .empty-message\");\n    },\n\n    // ------------------------------------------------------------------------ hda sub-views\n    /** render the subviews for the list's collection */\n    renderItems: function renderItems($whereTo) {\n        $whereTo = $whereTo || this.$el;\n        var panel = this;\n        panel.log(this + \".renderItems\", $whereTo);\n\n        var $list = panel.$list($whereTo);\n        panel.freeViews();\n        // console.log( 'views freed' );\n        //TODO:? cache and re-use views?\n        var shownModels = panel._filterCollection();\n        // console.log( 'models filtered:', shownModels );\n\n        panel.views = shownModels.map(function (itemModel) {\n            var view = panel._createItemView(itemModel);\n            return view;\n        });\n\n        $list.empty();\n        // console.log( 'list emptied' );\n        if (panel.views.length) {\n            panel._attachItems($whereTo);\n            // console.log( 'items attached' );\n        }\n        panel._renderEmptyMessage($whereTo).toggle(!panel.views.length);\n        panel.trigger(\"views:ready\", panel.views);\n\n        // console.log( '------------------------------------------- rendering items' );\n        return panel.views;\n    },\n\n    /** Filter the collection to only those models that should be currently viewed */\n    _filterCollection: function _filterCollection() {\n        // override this\n        var panel = this;\n        return panel.collection.filter(_.bind(panel._filterItem, panel));\n    },\n\n    /** Should the model be viewable in the current state?\n    *     Checks against this.filters and this.searchFor\n    */\n    _filterItem: function _filterItem(model) {\n        // override this\n        var panel = this;\n        return _.every(panel.filters.map(function (fn) {\n            return fn.call(model);\n        })) && (!panel.searchFor || model.matchesAll(panel.searchFor));\n    },\n\n    /** Create a view for a model and set up it's listeners */\n    _createItemView: function _createItemView(model) {\n        var ViewClass = this._getItemViewClass(model);\n        var options = _.extend(this._getItemViewOptions(model), {\n            model: model\n        });\n        var view = new ViewClass(options);\n        this._setUpItemViewListeners(view);\n        return view;\n    },\n\n    /** Free a view for a model. Note: does not remove it from the DOM */\n    _destroyItemView: function _destroyItemView(view) {\n        this.stopListening(view);\n        this.views = _.without(this.views, view);\n    },\n\n    _destroyItemViews: function _destroyItemViews(view) {\n        var self = this;\n        self.views.forEach(function (v) {\n            self.stopListening(v);\n        });\n        self.views = [];\n        return self;\n    },\n\n    /** free any sub-views the list has */\n    freeViews: function freeViews() {\n        return this._destroyItemViews();\n    },\n\n    /** Get the bbone view class based on the model */\n    _getItemViewClass: function _getItemViewClass(model) {\n        // override this\n        return this.viewClass;\n    },\n\n    /** Get the options passed to the new view based on the model */\n    _getItemViewOptions: function _getItemViewOptions(model) {\n        // override this\n        return {\n            //logger      : this.logger,\n            fxSpeed: this.fxSpeed,\n            expanded: false,\n            selectable: this.selecting,\n            selected: _.contains(this.selected, model.id),\n            draggable: this.dragItems\n        };\n    },\n\n    /** Set up listeners for new models */\n    _setUpItemViewListeners: function _setUpItemViewListeners(view) {\n        var panel = this;\n        // send all events to the panel, re-namspaceing them with the view prefix\n        this.listenTo(view, \"all\", function () {\n            var args = Array.prototype.slice.call(arguments, 0);\n            args[0] = \"view:\" + args[0];\n            panel.trigger.apply(panel, args);\n        });\n\n        // drag multiple - hijack ev.setData to add all selected items\n        this.listenTo(view, \"draggable:dragstart\", function (ev, v) {\n            //TODO: set multiple drag data here\n            var json = {},\n                selected = this.getSelectedModels();\n            if (selected.length) {\n                json = selected.toJSON();\n            } else {\n                json = [v.model.toJSON()];\n            }\n            ev.dataTransfer.setData(\"text\", JSON.stringify(json));\n            //ev.dataTransfer.setDragImage( v.el, 60, 60 );\n        }, this);\n\n        return panel;\n    },\n\n    /** Attach views in this.views to the model based on $whereTo */\n    _attachItems: function _attachItems($whereTo) {\n        var self = this;\n        // console.log( '_attachItems:', $whereTo, this.$list( $whereTo ) );\n        //ASSUMES: $list has been emptied\n        this.$list($whereTo).append(this.views.map(function (view) {\n            return self._renderItemView$el(view);\n        }));\n        return this;\n    },\n\n    /** get a given subview's $el (or whatever may wrap it) and return it */\n    _renderItemView$el: function _renderItemView$el(view) {\n        // useful to wrap and override\n        return view.render(0).$el;\n    },\n\n    /** render the empty/none-found message */\n    _renderEmptyMessage: function _renderEmptyMessage($whereTo) {\n        this.debug(\"_renderEmptyMessage\", $whereTo, this.searchFor);\n        var text = this.searchFor ? this.noneFoundMsg : this.emptyMsg;\n        return this.$emptyMessage($whereTo).text(text);\n    },\n\n    /** expand all item views */\n    expandAll: function expandAll() {\n        _.each(this.views, function (view) {\n            view.expand();\n        });\n    },\n\n    /** collapse all item views */\n    collapseAll: function collapseAll() {\n        _.each(this.views, function (view) {\n            view.collapse();\n        });\n    },\n\n    // ------------------------------------------------------------------------ collection/views syncing\n    /** Add a view (if the model should be viewable) to the panel */\n    addItemView: function addItemView(model, collection, options) {\n        // console.log( this + '.addItemView:', model );\n        var panel = this;\n        // get the index of the model in the list of filtered models shown by this list\n        // in order to insert the view in the proper place\n        //TODO:? potentially expensive\n        var modelIndex = panel._filterCollection().indexOf(model);\n        if (modelIndex === -1) {\n            return undefined;\n        }\n        var view = panel._createItemView(model);\n        // console.log( 'adding and rendering:', modelIndex, view.toString() );\n\n        $(view).queue(\"fx\", [function (next) {\n            // hide the empty message first if only view\n            if (panel.$emptyMessage().is(\":visible\")) {\n                panel.$emptyMessage().fadeOut(panel.fxSpeed, next);\n            } else {\n                next();\n            }\n        }, function (next) {\n            panel._attachView(view, modelIndex);\n            next();\n        }]);\n        return view;\n    },\n\n    /** internal fn to add view (to both panel.views and panel.$list) */\n    _attachView: function _attachView(view, modelIndex, useFx) {\n        // console.log( this + '._attachView:', view, modelIndex, useFx );\n        useFx = _.isUndefined(useFx) ? true : useFx;\n        modelIndex = modelIndex || 0;\n        var panel = this;\n\n        // use the modelIndex to splice into views and insert at the proper index in the DOM\n        panel.views.splice(modelIndex, 0, view);\n        panel._insertIntoListAt(modelIndex, panel._renderItemView$el(view).hide());\n\n        panel.trigger(\"view:attached\", view);\n        if (useFx) {\n            view.$el.slideDown(panel.fxSpeed, function () {\n                panel.trigger(\"view:attached:rendered\");\n            });\n        } else {\n            view.$el.show();\n            panel.trigger(\"view:attached:rendered\");\n        }\n        return view;\n    },\n\n    /** insert a jq object as a child of list-items at the specified *DOM index* */\n    _insertIntoListAt: function _insertIntoListAt(index, $what) {\n        // console.log( this + '._insertIntoListAt:', index, $what );\n        var $list = this.$list();\n        if (index === 0) {\n            $list.prepend($what);\n        } else {\n            $list.children().eq(index - 1).after($what);\n        }\n        return $what;\n    },\n\n    /** Remove a view from the panel (if found) */\n    removeItemView: function removeItemView(model, collection, options) {\n        var panel = this;\n        var view = _.find(panel.views, function (v) {\n            return v.model === model;\n        });\n        if (!view) {\n            return undefined;\n        }\n        panel.views = _.without(panel.views, view);\n        panel.trigger(\"view:removed\", view);\n\n        // potentially show the empty message if no views left\n        // use anonymous queue here - since remove can happen multiple times\n        $({}).queue(\"fx\", [function (next) {\n            view.$el.fadeOut(panel.fxSpeed, next);\n        }, function (next) {\n            view.remove();\n            panel.trigger(\"view:removed:rendered\");\n            if (!panel.views.length) {\n                panel._renderEmptyMessage().fadeIn(panel.fxSpeed, next);\n            } else {\n                next();\n            }\n        }]);\n        return view;\n    },\n\n    /** get views based on model.id */\n    viewFromModelId: function viewFromModelId(id) {\n        return _.find(this.views, function (v) {\n            return v.model.id === id;\n        });\n    },\n\n    /** get views based on model */\n    viewFromModel: function viewFromModel(model) {\n        return model ? this.viewFromModelId(model.id) : undefined;\n    },\n\n    /** get views based on model properties */\n    viewsWhereModel: function viewsWhereModel(properties) {\n        return this.views.filter(function (view) {\n            return _.isMatch(view.model.attributes, properties);\n        });\n    },\n\n    /** A range of views between (and including) viewA and viewB */\n    viewRange: function viewRange(viewA, viewB) {\n        if (viewA === viewB) {\n            return viewA ? [viewA] : [];\n        }\n\n        var indexA = this.views.indexOf(viewA),\n            indexB = this.views.indexOf(viewB);\n\n        // handle not found\n        if (indexA === -1 || indexB === -1) {\n            if (indexA === indexB) {\n                return [];\n            }\n            return indexA === -1 ? [viewB] : [viewA];\n        }\n        // reverse if indeces are\n        //note: end inclusive\n        return indexA < indexB ? this.views.slice(indexA, indexB + 1) : this.views.slice(indexB, indexA + 1);\n    },\n\n    // ------------------------------------------------------------------------ searching\n    /** render a search input for filtering datasets shown\n    *      (see SearchableMixin in base-mvc for implementation of the actual searching)\n    *      return will start the search\n    *      esc will clear the search\n    *      clicking the clear button will clear the search\n    *      uses searchInput in ui.js\n    */\n    _renderSearch: function _renderSearch($where) {\n        $where.find(\".controls .search-input\").searchInput({\n            placeholder: this.searchPlaceholder,\n            initialVal: this.searchFor,\n            onfirstsearch: _.bind(this._firstSearch, this),\n            onsearch: _.bind(this.searchItems, this),\n            onclear: _.bind(this.clearSearch, this)\n        });\n        return $where;\n    },\n\n    /** What to do on the first search entered */\n    _firstSearch: function _firstSearch(searchFor) {\n        // override to load model details if necc.\n        this.log(\"onFirstSearch\", searchFor);\n        return this.searchItems(searchFor);\n    },\n\n    /** filter view list to those that contain the searchFor terms */\n    searchItems: function searchItems(searchFor, force) {\n        this.log(\"searchItems\", searchFor, this.searchFor, force);\n        if (!force && this.searchFor === searchFor) {\n            return this;\n        }\n        this.searchFor = searchFor;\n        this.renderItems();\n        this.trigger(\"search:searching\", searchFor, this);\n        var $search = this.$(\"> .controls .search-query\");\n        if ($search.val() !== searchFor) {\n            $search.val(searchFor);\n        }\n        return this;\n    },\n\n    /** clear the search filters and show all views that are normally shown */\n    clearSearch: function clearSearch(searchFor) {\n        //this.log( 'onSearchClear', this );\n        this.searchFor = \"\";\n        this.trigger(\"search:clear\", this);\n        this.$(\"> .controls .search-query\").val(\"\");\n        this.renderItems();\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ selection\n    /** @type Integer when the number of list item views is >= to this, don't animate selectors */\n    THROTTLE_SELECTOR_FX_AT: 20,\n\n    /** show selectors on all visible itemViews and associated controls */\n    showSelectors: function showSelectors(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        this.selecting = true;\n        this.$(\".list-actions\").slideDown(speed);\n        speed = this.views.length >= this.THROTTLE_SELECTOR_FX_AT ? 0 : speed;\n        _.each(this.views, function (view) {\n            view.showSelector(speed);\n        });\n        //this.selected = [];\n        //this.lastSelected = null;\n    },\n\n    /** hide selectors on all visible itemViews and associated controls */\n    hideSelectors: function hideSelectors(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        this.selecting = false;\n        this.$(\".list-actions\").slideUp(speed);\n        speed = this.views.length >= this.THROTTLE_SELECTOR_FX_AT ? 0 : speed;\n        _.each(this.views, function (view) {\n            view.hideSelector(speed);\n        });\n        this.selected = [];\n        this.lastSelected = null;\n    },\n\n    /** show or hide selectors on all visible itemViews and associated controls */\n    toggleSelectors: function toggleSelectors() {\n        if (!this.selecting) {\n            this.showSelectors();\n        } else {\n            this.hideSelectors();\n        }\n    },\n\n    /** select all visible items */\n    selectAll: function selectAll(event) {\n        _.each(this.views, function (view) {\n            view.select(event);\n        });\n    },\n\n    /** deselect all visible items */\n    deselectAll: function deselectAll(event) {\n        this.lastSelected = null;\n        _.each(this.views, function (view) {\n            view.deselect(event);\n        });\n    },\n\n    /** select a range of datasets between A and B */\n    selectRange: function selectRange(viewA, viewB) {\n        var range = this.viewRange(viewA, viewB);\n        _.each(range, function (view) {\n            view.select();\n        });\n        return range;\n    },\n\n    /** return an array of all currently selected itemViews */\n    getSelectedViews: function getSelectedViews() {\n        return _.filter(this.views, function (v) {\n            return v.selected;\n        });\n    },\n\n    /** return a collection of the models of all currenly selected items */\n    getSelectedModels: function getSelectedModels() {\n        // console.log( '(getSelectedModels)' );\n        return new this.collection.constructor(_.map(this.getSelectedViews(), function (view) {\n            return view.model;\n        }));\n    },\n\n    // ------------------------------------------------------------------------ loading indicator\n    /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n    _showLoadingIndicator: function _showLoadingIndicator(msg, speed, callback) {\n        this.debug(\"_showLoadingIndicator\", this.indicator, msg, speed, callback);\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        if (!this.indicator) {\n            this.indicator = new _loadingIndicator2.default(this.$el);\n            this.debug(\"\\t created\", this.indicator);\n        }\n        if (!this.$el.is(\":visible\")) {\n            this.indicator.show(0, callback);\n        } else {\n            this.$el.fadeOut(speed);\n            this.indicator.show(msg, speed, callback);\n        }\n    },\n\n    /** hide the loading indicator */\n    _hideLoadingIndicator: function _hideLoadingIndicator(speed, callback) {\n        this.debug(\"_hideLoadingIndicator\", this.indicator, speed, callback);\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        if (this.indicator) {\n            this.indicator.hide(speed, callback);\n        }\n    },\n\n    // ------------------------------------------------------------------------ scrolling\n    /** get the current scroll position of the panel in its parent */\n    scrollPosition: function scrollPosition() {\n        return this.$scrollContainer().scrollTop();\n    },\n\n    /** set the current scroll position of the panel in its parent */\n    scrollTo: function scrollTo(pos, speed) {\n        speed = speed || 0;\n        this.$scrollContainer().animate({ scrollTop: pos }, speed);\n        return this;\n    },\n\n    /** Scrolls the panel to the top. */\n    scrollToTop: function scrollToTop(speed) {\n        return this.scrollTo(0, speed);\n    },\n\n    /** scroll to the given view in list-items */\n    scrollToItem: function scrollToItem(view, speed) {\n        if (!view) {\n            return this;\n        }\n        return this;\n    },\n\n    /** Scrolls the panel to show the content with the given id. */\n    scrollToId: function scrollToId(id, speed) {\n        return this.scrollToItem(this.viewFromModelId(id), speed);\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events: {\n        \"click .select-all\": \"selectAll\",\n        \"click .deselect-all\": \"deselectAll\"\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString: function toString() {\n        return \"ListPanel(\" + this.collection + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListPanel.prototype.templates = function () {\n    var elTemplate = _baseMvc2.default.wrapTemplate([\n    // temp container\n    \"<div>\", '<div class=\"controls\"></div>', '<div class=\"list-items\"></div>', '<div class=\"empty-message infomessagesmall\"></div>', \"</div>\"]);\n\n    var controlsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"controls\">', '<div class=\"title\">', '<div class=\"name\"><%- view.title %></div>', \"</div>\", '<div class=\"subtitle\"><%- view.subtitle %></div>',\n    // buttons, controls go here\n    '<div class=\"actions\"></div>',\n    // deleted msg, etc.\n    '<div class=\"messages\"></div>', '<div class=\"search\">', '<div class=\"search-input\"></div>', \"</div>\",\n\n    // show when selectors are shown\n    '<div class=\"list-actions\">', '<div class=\"btn-group\">', '<button class=\"select-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"All\"), \"</button>\", '<button class=\"deselect-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"None\"), \"</button>\", \"</div>\", '<div class=\"list-action-menu btn-group\">', \"</div>\", \"</div>\", \"</div>\"]);\n\n    return {\n        el: elTemplate,\n        controls: controlsTemplate\n    };\n}();\n\n//=============================================================================\n/** View for a model that has a sub-collection (e.g. History, DatasetCollection)\n *  Allows:\n *      the model to be reset\n *      auto assign panel.collection to panel.model[ panel.modelCollectionKey ]\n *\n */\nvar ModelListPanel = ListPanel.extend({\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey: \"contents\",\n\n    initialize: function initialize(attributes) {\n        ListPanel.prototype.initialize.call(this, attributes);\n        this.selecting = attributes.selecting !== undefined ? attributes.selecting : false;\n\n        this.setModel(this.model, attributes);\n    },\n\n    /** release/free/shutdown old models and set up panel for new models\n     *  @fires new-model with the panel as parameter\n     */\n    setModel: function setModel(model, attributes) {\n        attributes = attributes || {};\n        this.debug(this + \".setModel:\", model, attributes);\n\n        this.freeModel();\n        this.freeViews();\n\n        if (model) {\n            var oldModelId = this.model ? this.model.get(\"id\") : null;\n\n            // set up the new model with user, logger, storage, events\n            this.model = model;\n            if (this.logger) {\n                this.model.logger = this.logger;\n            }\n            this._setUpModelListeners();\n\n            //TODO: relation btwn model, collection becoming tangled here\n            // free the collection, and assign the new collection to either\n            //  the model[ modelCollectionKey ], attributes.collection, or an empty vanilla collection\n            this.stopListening(this.collection);\n            this.collection = this.model[this.modelCollectionKey] || attributes.collection || this._createDefaultCollection();\n            this._setUpCollectionListeners();\n\n            if (oldModelId && model.get(\"id\") !== oldModelId) {\n                this.trigger(\"new-model\", this);\n            }\n        }\n        return this;\n    },\n\n    /** free the current model and all listeners for it, free any views for the model */\n    freeModel: function freeModel() {\n        // stop/release the previous model, and clear cache to sub-views\n        if (this.model) {\n            this.stopListening(this.model);\n            //TODO: see base-mvc\n            //this.model.free();\n            //this.model = null;\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ listening\n    /** listening for model events */\n    _setUpModelListeners: function _setUpModelListeners() {\n        // override\n        this.log(this + \"._setUpModelListeners\", this.model);\n        // bounce model errors up to the panel\n        this.listenTo(this.model, \"error\", function () {\n            var args = Array.prototype.slice.call(arguments, 0);\n            //args.unshift( 'model:error' );\n            args.unshift(\"error\");\n            this.trigger.apply(this, args);\n        }, this);\n\n        // debugging\n        if (this.logger) {\n            this.listenTo(this.model, \"all\", function (event) {\n                this.info(this + \"(model)\", event, arguments);\n            });\n        }\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     */\n    _renderControls: function _renderControls($newRender) {\n        this.debug(this + \"(ModelListPanel)._renderControls\");\n        var json = this.model ? this.model.toJSON() : {},\n            $controls = $(this.templates.controls(json, this));\n        $newRender.find(\".controls\").replaceWith($controls);\n        return $controls;\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString: function toString() {\n        return \"ModelListPanel(\" + this.model + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nModelListPanel.prototype.templates = function () {\n    var controlsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"controls\">', '<div class=\"title\">',\n    //TODO: this is really the only difference - consider factoring titlebar out\n    '<div class=\"name\"><%- model.name %></div>', \"</div>\", '<div class=\"subtitle\"><%- view.subtitle %></div>', '<div class=\"actions\"></div>', '<div class=\"messages\"></div>', '<div class=\"search\">', '<div class=\"search-input\"></div>', \"</div>\", '<div class=\"list-actions\">', '<div class=\"btn-group\">', '<button class=\"select-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"All\"), \"</button>\", '<button class=\"deselect-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"None\"), \"</button>\", \"</div>\", '<div class=\"list-action-menu btn-group\">', \"</div>\", \"</div>\", \"</div>\"]);\n\n    return _.extend(_.clone(ListPanel.prototype.templates), {\n        controls: controlsTemplate\n    });\n}();\n\n//=============================================================================\nexports.default = {\n    ListPanel: ListPanel,\n    ModelListPanel: ModelListPanel\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, jQuery) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n// from: https://raw.githubusercontent.com/umdjs/umd/master/jqueryPlugin.js\n// Uses AMD or browser globals to create a jQuery plugin.\n(function (factory) {\n    if (true) {\n        //TODO: So...this turns out to be an all or nothing thing. If I load jQuery in the define below, it will\n        //  (of course) wipe the old jquery *and all the plugins loaded into it*. So the define below *is still\n        //  relying on jquery being loaded globally* in order to preserve plugins.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n})(function () {\n    var _l = window._l || function (s) {\n        return s;\n    };\n\n    //TODO: consolidate with tool menu functionality, use there\n\n    /** searchInput: (jQuery plugin)\n     *      Creates a search input, a clear button, and loading indicator\n     *      within the selected node.\n     *\n     *      When the user either presses return or enters some minimal number\n     *      of characters, a callback is called. Pressing ESC when the input\n     *      is focused will clear the input and call a separate callback.\n     */\n    function searchInput(parentNode, options) {\n        var KEYCODE_ESC = 27,\n            KEYCODE_RETURN = 13,\n            $parentNode = $(parentNode),\n            firstSearch = true,\n            defaults = {\n            initialVal: \"\",\n            name: \"search\",\n            placeholder: \"search\",\n            classes: \"\",\n            onclear: function onclear() {},\n            onfirstsearch: null,\n            onsearch: function onsearch(inputVal) {},\n            minSearchLen: 0,\n            escWillClear: true,\n            oninit: function oninit() {}\n        };\n\n        // .................................................................... input rendering and events\n        // visually clear the search, trigger an event, and call the callback\n        function clearSearchInput(event) {\n            var $input = $(this).parent().children(\"input\");\n            $input.val(\"\").trigger(\"searchInput.clear\").blur();\n            options.onclear();\n        }\n\n        // search for searchTerms, trigger an event, call the appropo callback (based on whether this is the first)\n        function search(event, searchTerms) {\n            if (!searchTerms) {\n                return clearSearchInput();\n            }\n            $(this).trigger(\"search.search\", searchTerms);\n            if (typeof options.onfirstsearch === \"function\" && firstSearch) {\n                firstSearch = false;\n                options.onfirstsearch(searchTerms);\n            } else {\n                options.onsearch(searchTerms);\n            }\n        }\n\n        // .................................................................... input rendering and events\n        function inputTemplate() {\n            // class search-query is bootstrap 2.3 style that now lives in base.less\n            return ['<input type=\"text\" name=\"', options.name, '\" placeholder=\"', options.placeholder, '\" ', 'class=\"search-query ', options.classes, '\" ', \"/>\"].join(\"\");\n        }\n\n        // the search input that responds to keyboard events and displays the search value\n        function $input() {\n            return $(inputTemplate())\n            // select all text on a focus\n            .focus(function (event) {\n                $(this).select();\n            })\n            // attach behaviors to esc, return if desired, search on some min len string\n            .keyup(function (event) {\n                event.preventDefault();\n                event.stopPropagation();\n\n                // esc key will clear if desired\n                if (event.which === KEYCODE_ESC && options.escWillClear) {\n                    clearSearchInput.call(this, event);\n                } else {\n                    var searchTerms = $(this).val();\n                    // return key or the search string len > minSearchLen (if not 0) triggers search\n                    if (event.which === KEYCODE_RETURN || options.minSearchLen && searchTerms.length >= options.minSearchLen) {\n                        search.call(this, event, searchTerms);\n                    }\n                }\n            }).val(options.initialVal);\n        }\n\n        // .................................................................... clear button rendering and events\n        // a button for clearing the search bar, placed on the right hand side\n        function $clearBtn() {\n            return $(['<span class=\"search-clear fa fa-times-circle\" ', 'title=\"', _l(\"clear search (esc)\"), '\"></span>'].join(\"\")).tooltip({ placement: \"bottom\" }).click(function (event) {\n                clearSearchInput.call(this, event);\n            });\n        }\n\n        // .................................................................... loadingIndicator rendering\n        // a button for clearing the search bar, placed on the right hand side\n        function $loadingIndicator() {\n            return $(['<span class=\"search-loading fa fa-spinner fa-spin\" ', 'title=\"', _l(\"loading...\"), '\"></span>'].join(\"\")).hide().tooltip({ placement: \"bottom\" });\n        }\n\n        // .................................................................... commands\n        // visually swap the load, clear buttons\n        function toggleLoadingIndicator() {\n            $parentNode.find(\".search-loading\").toggle();\n            $parentNode.find(\".search-clear\").toggle();\n        }\n\n        // .................................................................... init\n        // string command (not constructor)\n        if (jQuery.type(options) === \"string\") {\n            if (options === \"toggle-loading\") {\n                toggleLoadingIndicator();\n            }\n            return $parentNode;\n        }\n\n        // initial render\n        if (jQuery.type(options) === \"object\") {\n            options = jQuery.extend(true, {}, defaults, options);\n        }\n        //NOTE: prepended\n        return $parentNode.addClass(\"search-input\").prepend([$input(), $clearBtn(), $loadingIndicator()]);\n    }\n\n    // as jq plugin\n    jQuery.fn.extend({\n        searchInput: function $searchInput(options) {\n            return this.each(function () {\n                return searchInput(this, options);\n            });\n        }\n    });\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _datasetLi = __webpack_require__(42);\n\nvar _datasetLi2 = _interopRequireDefault(_datasetLi);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _datasetLi2.default.DatasetListItemView;\n/** @class Read only view for HistoryDatasetAssociation.\n *      Since there are no controls on the HDAView to hide the dataset,\n *      the primary thing this class does (currently) is override templates\n *      to render the HID.\n */\nvar HDAListItemView = _super.extend(\n/** @lends HDAListItemView.prototype */{\n    className: _super.prototype.className + \" history-content\",\n\n    initialize: function initialize(attributes, options) {\n        _super.prototype.initialize.call(this, attributes, options);\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"HDAListItemView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemView.prototype.templates = function () {\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate([\n    // adding the hid display to the title\n    '<div class=\"title-bar clear\" tabindex=\"0\">', '<span class=\"state-icon\"></span>', '<div class=\"title\">',\n    //TODO: remove whitespace and use margin-right\n    '<span class=\"hid\"><%- dataset.hid %></span> ', '<span class=\"name\"><%- dataset.name %></span>', \"</div>\", \"</br>\", '<span class=\"nametags\">', \"<% _.each(_.sortBy(_.uniq(dataset.tags), function(x) { return x }), function(tag){ %>\", '<% if (tag.indexOf(\"name:\") == 0){ %>', '<span class=\"label label-info\"><%- tag.slice(5) %></span>', \"<% } %>\", \"<% }); %>\", \"</span>\", \"</div>\"], \"dataset\");\n\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: _baseMvc2.default.wrapTemplate([\n        // add a warning when hidden\n        \"<% if( !dataset.visible ){ %>\", '<div class=\"hidden-msg warningmessagesmall\">', (0, _localization2.default)(\"This dataset has been hidden\"), \"</div>\", \"<% } %>\"], \"dataset\")\n    });\n\n    return _.extend({}, _super.prototype.templates, {\n        titleBar: titleBarTemplate,\n        warnings: warnings\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    HDAListItemView: HDAListItemView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _states = __webpack_require__(11);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _collectionLi = __webpack_require__(43);\n\nvar _collectionLi2 = _interopRequireDefault(_collectionLi);\n\nvar _collectionView = __webpack_require__(86);\n\nvar _collectionView2 = _interopRequireDefault(_collectionView);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _collectionLi2.default.DCListItemView;\n/** @class Read only view for HistoryDatasetCollectionAssociation (a dataset collection inside a history).\n */\nvar HDCAListItemView = _super.extend(\n/** @lends HDCAListItemView.prototype */{\n    className: _super.prototype.className + \" history-content\",\n\n    /** event listeners */\n    _setUpListeners: function _setUpListeners() {\n        _super.prototype._setUpListeners.call(this);\n        this.listenTo(this.model, {\n            \"change:tags change:populated change:visible\": function changeTagsChangePopulatedChangeVisible(model, options) {\n                this.render();\n            }\n        });\n    },\n\n    /** Override to provide the proper collections panels as the foldout */\n    _getFoldoutPanelClass: function _getFoldoutPanelClass() {\n        switch (this.model.get(\"collection_type\")) {\n            case \"list\":\n                return _collectionView2.default.ListCollectionView;\n            case \"paired\":\n                return _collectionView2.default.PairCollectionView;\n            case \"list:paired\":\n                return _collectionView2.default.ListOfPairsCollectionView;\n            case \"list:list\":\n                return _collectionView2.default.ListOfListsCollectionView;\n        }\n        throw new TypeError(\"Uknown collection_type: \" + this.model.get(\"collection_type\"));\n    },\n\n    /** In this override, add the state as a class for use with state-based CSS */\n    _swapNewRender: function _swapNewRender($newRender) {\n        _super.prototype._swapNewRender.call(this, $newRender);\n        //TODO: model currently has no state\n        var state = !this.model.get(\"populated\") ? _states2.default.RUNNING : _states2.default.OK;\n        //if( this.model.has( 'state' ) ){\n        this.$el.addClass(\"state-\" + state);\n        //}\n        return this.$el;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"HDCAListItemView(\" + modelString + \")\";\n    }\n});\n\n/** underscore templates */\nHDCAListItemView.prototype.templates = function () {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: _baseMvc2.default.wrapTemplate([\n        // add a warning when hidden\n        \"<% if( !collection.visible ){ %>\", '<div class=\"hidden-msg warningmessagesmall\">', (0, _localization2.default)(\"This collection has been hidden\"), \"</div>\", \"<% } %>\"], \"collection\")\n    });\n\n    // could steal this from hda-base (or use mixed content)\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate([\n    // adding the hid display to the title\n    '<div class=\"title-bar clear\" tabindex=\"0\">', '<span class=\"state-icon\"></span>', '<div class=\"title\">',\n    //TODO: remove whitespace and use margin-right\n    '<span class=\"hid\"><%- collection.hid %></span> ', '<span class=\"name\"><%- collection.name %></span>', \"</div>\", '<div class=\"subtitle\"></div>', '<span class=\"nametags\">', \"<% _.each(_.sortBy(_.uniq(collection.tags), function(x) { return x }), function(tag){ %>\", '<% if (tag.indexOf(\"name:\") == 0){ %>', '<span class=\"label label-info\"><%- tag.slice(5) %></span>', \"<% } %>\", \"<% }); %>\", \"</span>\", \"</div>\"], \"collection\");\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    HDCAListItemView: HDCAListItemView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listView = __webpack_require__(82);\n\nvar _listView2 = _interopRequireDefault(_listView);\n\nvar _collectionModel = __webpack_require__(37);\n\nvar _collectionModel2 = _interopRequireDefault(_collectionModel);\n\nvar _collectionLi = __webpack_require__(43);\n\nvar _collectionLi2 = _interopRequireDefault(_collectionLi);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"collections\";\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class non-editable, read-only View/Controller for a dataset collection.\n */\nvar _super = _listView2.default.ModelListPanel;\nvar CollectionView = _super.extend(\n/** @lends CollectionView.prototype */{\n    //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n    _logNamespace: logNamespace,\n\n    className: _super.prototype.className + \" dataset-collection-panel\",\n\n    /** sub view class used for datasets */\n    DatasetDCEViewClass: _collectionLi2.default.DatasetDCEListItemView,\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLi2.default.NestedDCDCEListItemView,\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey: \"elements\",\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n    *  @param {Object} attributes optional settings for the panel\n    */\n    initialize: function initialize(attributes) {\n        _super.prototype.initialize.call(this, attributes);\n        this.linkTarget = attributes.linkTarget || \"_blank\";\n\n        this.hasUser = attributes.hasUser;\n        /** A stack of panels that currently cover or hide this panel */\n        this.panelStack = [];\n        /** The text of the link to go back to the panel containing this one */\n        this.parentName = attributes.parentName;\n        /** foldout or drilldown */\n        this.foldoutStyle = attributes.foldoutStyle || \"foldout\";\n        this.downloadUrl = this.model.attributes.url + \"/download\";\n    },\n\n    _queueNewRender: function _queueNewRender($newRender, speed) {\n        speed = speed === undefined ? this.fxSpeed : speed;\n        var panel = this;\n        panel.log(\"_queueNewRender:\", $newRender, speed);\n\n        // TODO: jquery@1.12 doesn't change display when the elem has display: flex\n        // this causes display: block for those elems after the use of show/hide animations\n        // animations are removed from this view for now until fixed\n        panel._swapNewRender($newRender);\n        panel.trigger(\"rendered\", panel);\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** In this override, use model.getVisibleContents */\n    _filterCollection: function _filterCollection() {\n        //TODO: should *not* be model.getVisibleContents - visibility is not model related\n        return this.model.getVisibleContents();\n    },\n\n    /** override to return proper view class based on element_type */\n    _getItemViewClass: function _getItemViewClass(model) {\n        //this.debug( this + '._getItemViewClass:', model );\n        //TODO: subclasses use DCEViewClass - but are currently unused - decide\n        switch (model.get(\"element_type\")) {\n            case \"hda\":\n                return this.DatasetDCEViewClass;\n            case \"dataset_collection\":\n                return this.NestedDCDCEViewClass;\n        }\n        throw new TypeError(\"Unknown element type:\", model.get(\"element_type\"));\n    },\n\n    /** override to add link target and anon */\n    _getItemViewOptions: function _getItemViewOptions(model) {\n        var options = _super.prototype._getItemViewOptions.call(this, model);\n        return _.extend(options, {\n            linkTarget: this.linkTarget,\n            hasUser: this.hasUser,\n            //TODO: could move to only nested: list:paired\n            foldoutStyle: this.foldoutStyle\n        });\n    },\n\n    // ------------------------------------------------------------------------ collection sub-views\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners: function _setUpItemViewListeners(view) {\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call(panel, view);\n\n        // use pub-sub to: handle drilldown expansion and collapse\n        panel.listenTo(view, {\n            \"expanded:drilldown\": function expandedDrilldown(v, drilldown) {\n                this._expandDrilldownPanel(drilldown);\n            },\n            \"collapsed:drilldown\": function collapsedDrilldown(v, drilldown) {\n                this._collapseDrilldownPanel(drilldown);\n            }\n        });\n        return this;\n    },\n\n    /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n    _expandDrilldownPanel: function _expandDrilldownPanel(drilldown) {\n        this.panelStack.push(drilldown);\n        // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n        this.$(\"> .controls\").add(this.$list()).hide();\n        drilldown.parentName = this.model.get(\"name\");\n        this.$el.append(drilldown.render().$el);\n    },\n\n    /** Handle drilldown close by freeing the panel and re-rendering this panel */\n    _collapseDrilldownPanel: function _collapseDrilldownPanel(drilldown) {\n        this.panelStack.pop();\n        this.render();\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events: {\n        \"click .navigation .back\": \"close\"\n    },\n\n    /** close/remove this collection panel */\n    close: function close(event) {\n        this.remove();\n        this.trigger(\"close\");\n    },\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"CollectionView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//------------------------------------------------------------------------------ TEMPLATES\nCollectionView.prototype.templates = function () {\n    var controlsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"controls\">', '<div class=\"navigation\">', '<a class=\"back\" href=\"javascript:void(0)\">', '<span class=\"fa fa-icon fa-angle-left\"></span>', (0, _localization2.default)(\"Back to \"), \"<%- view.parentName %>\", \"</a>\", \"</div>\", '<div class=\"title\">', '<div class=\"name\"><%- collection.name || collection.element_identifier %></div>', '<div class=\"subtitle\">', '<% if( collection.collection_type === \"list\" ){ %>', (0, _localization2.default)(\"a list of datasets\"), '<% } else if( collection.collection_type === \"paired\" ){ %>', (0, _localization2.default)(\"a pair of datasets\"), '<% } else if( collection.collection_type === \"list:paired\" ){ %>', (0, _localization2.default)(\"a list of paired datasets\"), '<% } else if( collection.collection_type === \"list:list\" ){ %>', (0, _localization2.default)(\"a list of dataset lists\"), \"<% } %>\", \"</div>\", \"</div>\", '<div class=\"tags-display\"></div>', '<div class=\"actions\">', '<a class=\"download-btn icon-btn\" ', 'href=\"<%- view.downloadUrl %>', '\" title=\"\" download=\"\" data-original-title=\"Download Collection\">', '<span class=\"fa fa-floppy-o\"></span>', \"</a>\", \"</div>\", \"</div>\"], \"collection\");\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        controls: controlsTemplate\n    });\n}();\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionView = CollectionView.extend(\n/** @lends ListCollectionView.prototype */{\n    //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n    /** sub view class used for datasets */\n    DatasetDCEViewClass: _collectionLi2.default.DatasetDCEListItemView,\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListCollectionView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionView = ListCollectionView.extend(\n/** @lends PairCollectionView.prototype */{\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"PairCollectionView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListOfPairsCollectionView = CollectionView.extend(\n/** @lends ListOfPairsCollectionView.prototype */{\n    //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLi2.default.NestedDCDCEListItemView.extend({\n        foldoutPanelClass: PairCollectionView\n    }),\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListOfPairsCollectionView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a list of lists dataset collection. */\nvar ListOfListsCollectionView = CollectionView.extend({\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLi2.default.NestedDCDCEListItemView.extend({\n        foldoutPanelClass: PairCollectionView\n    }),\n\n    /** string rep */\n    toString: function toString() {\n        return \"ListOfListsCollectionView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    CollectionView: CollectionView,\n    ListCollectionView: ListCollectionView,\n    PairCollectionView: PairCollectionView,\n    ListOfPairsCollectionView: ListOfPairsCollectionView,\n    ListOfListsCollectionView: ListOfListsCollectionView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _states = __webpack_require__(11);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _datasetLi = __webpack_require__(42);\n\nvar _datasetLi2 = _interopRequireDefault(_datasetLi);\n\nvar _tag = __webpack_require__(22);\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _annotation = __webpack_require__(88);\n\nvar _annotation2 = _interopRequireDefault(_annotation);\n\nvar _faIconButton = __webpack_require__(14);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _datasetLi2.default.DatasetListItemView;\n/** @class Editing view for DatasetAssociation.\n */\nvar DatasetListItemEdit = _super.extend(\n/** @lends DatasetListItemEdit.prototype */{\n    /** set up: options */\n    initialize: function initialize(attributes) {\n        _super.prototype.initialize.call(this, attributes);\n        this.hasUser = attributes.hasUser;\n\n        /** allow user purge of dataset files? */\n        this.purgeAllowed = attributes.purgeAllowed || false;\n\n        //TODO: move to HiddenUntilActivatedViewMixin\n        /** should the tags editor be shown or hidden initially? */\n        this.tagsEditorShown = attributes.tagsEditorShown || false;\n        /** should the tags editor be shown or hidden initially? */\n        this.annotationEditorShown = attributes.annotationEditorShown || false;\n    },\n\n    // ......................................................................... titlebar actions\n    /** In this override, add the other two primary actions: edit and delete */\n    _renderPrimaryActions: function _renderPrimaryActions() {\n        var actions = _super.prototype._renderPrimaryActions.call(this);\n        if (this.model.get(\"state\") === _states2.default.NOT_VIEWABLE) {\n            return actions;\n        }\n        // render the display, edit attr and delete icon-buttons\n        return _super.prototype._renderPrimaryActions.call(this).concat([this._renderEditButton(), this._renderDeleteButton()]);\n    },\n\n    //TODO: move titleButtons into state renderers, remove state checks in the buttons\n\n    /** Render icon-button to edit the attributes (format, permissions, etc.) this dataset. */\n    _renderEditButton: function _renderEditButton() {\n        var self = this;\n        // don't show edit while uploading, in-accessible\n        // DO show if in error (ala previous history panel)\n        if (this.model.get(\"state\") === _states2.default.DISCARDED || !this.model.get(\"accessible\")) {\n            return null;\n        }\n        var purged = this.model.get(\"purged\"),\n            deleted = this.model.get(\"deleted\"),\n            editBtnData = {\n            title: (0, _localization2.default)(\"Edit attributes\"),\n            href: Galaxy.root + \"datasets/edit?dataset_id=\" + this.model.attributes.id,\n            faIcon: \"fa-pencil\",\n            classes: \"edit-btn\",\n            onclick: function onclick(ev) {\n                if (Galaxy.router) {\n                    ev.preventDefault();\n                    Galaxy.router.push(\"datasets/edit\", {\n                        dataset_id: self.model.attributes.id\n                    });\n                }\n            }\n        };\n        // disable if purged or deleted and explain why in the tooltip\n        if (deleted || purged) {\n            editBtnData.disabled = true;\n            if (purged) {\n                editBtnData.title = (0, _localization2.default)(\"Cannot edit attributes of datasets removed from disk\");\n            } else if (deleted) {\n                editBtnData.title = (0, _localization2.default)(\"Undelete dataset to edit attributes\");\n            }\n\n            // disable if still uploading or new\n        } else if (_.contains([_states2.default.UPLOAD, _states2.default.NEW], this.model.get(\"state\"))) {\n            editBtnData.disabled = true;\n            editBtnData.title = (0, _localization2.default)(\"This dataset is not yet editable\");\n        }\n        return (0, _faIconButton2.default)(editBtnData);\n    },\n\n    /** Render icon-button to delete this hda. */\n    _renderDeleteButton: function _renderDeleteButton() {\n        // don't show delete if...\n        if (!this.model.get(\"accessible\")) {\n            return null;\n        }\n\n        var self = this,\n            deletedAlready = this.model.isDeletedOrPurged();\n        return (0, _faIconButton2.default)({\n            title: !deletedAlready ? (0, _localization2.default)(\"Delete\") : (0, _localization2.default)(\"Dataset is already deleted\"),\n            disabled: deletedAlready,\n            faIcon: \"fa-times\",\n            classes: \"delete-btn\",\n            onclick: function onclick() {\n                // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                self.model[\"delete\"]();\n            }\n        });\n    },\n\n    // ......................................................................... details\n    /** In this override, add tags and annotations controls, make the ? dbkey a link to editing page */\n    _renderDetails: function _renderDetails() {\n        //TODO: generalize to be allow different details for each state\n        var $details = _super.prototype._renderDetails.call(this),\n            state = this.model.get(\"state\");\n\n        if (!this.model.isDeletedOrPurged() && _.contains([_states2.default.OK, _states2.default.FAILED_METADATA], state)) {\n            this._renderTags($details);\n            this._renderAnnotation($details);\n            this._makeDbkeyEditLink($details);\n        }\n\n        this._setUpBehaviors($details);\n        return $details;\n    },\n\n    /**************************************************************************\n    * Render help button to show tool help text without rerunning the tool.\n    * Issue #2100\n    */\n    _renderToolHelpButton: function _renderToolHelpButton() {\n        var datasetID = this.model.attributes.dataset_id;\n        var jobID = this.model.attributes.creating_job;\n        var self = this;\n\n        var parseToolBuild = function parseToolBuild(data) {\n            var helpString = '<div id=\"thdiv-' + datasetID + '\" class=\"toolhelp\">';\n            if (data.name && data.help) {\n                helpString += \"<strong>Tool help for \" + data.name + \"</strong><hr/>\";\n                helpString += data.help;\n            } else {\n                helpString += \"<strong>Tool help is unavailable for this dataset.</strong><hr/>\";\n            }\n            helpString += \"</div>\";\n            self.$el.find(\".details\").append($.parseHTML(helpString));\n        };\n        var parseToolID = function parseToolID(data) {\n            $.ajax({\n                url: Galaxy.root + \"api/tools/\" + data.tool_id + \"/build\"\n            }).done(function (data) {\n                parseToolBuild(data);\n            }).fail(function () {\n                parseToolBuild({});\n            });\n        };\n        if (Galaxy.user.id === null) {\n            return null;\n        }\n        return (0, _faIconButton2.default)({\n            title: (0, _localization2.default)(\"Tool Help\"),\n            classes: \"icon-btn\",\n            href: \"#\",\n            faIcon: \"fa-question\",\n            onclick: function onclick() {\n                var divString = \"thdiv-\" + datasetID;\n                if (self.$el.find(\".toolhelp\").length > 0) {\n                    self.$el.find(\".toolhelp\").toggle();\n                } else {\n                    $.ajax({\n                        url: Galaxy.root + \"api/jobs/\" + jobID\n                    }).done(function (data) {\n                        parseToolID(data);\n                    }).fail(function () {\n                        console.log('Failed at recovering job information from the  Galaxy API for job id \"' + jobID + '\".');\n                    });\n                }\n            }\n        });\n    },\n    //*************************************************************************\n\n    /** Add less commonly used actions in the details section based on state */\n    _renderSecondaryActions: function _renderSecondaryActions() {\n        var actions = _super.prototype._renderSecondaryActions.call(this);\n        switch (this.model.get(\"state\")) {\n            case _states2.default.UPLOAD:\n            case _states2.default.NOT_VIEWABLE:\n                return actions;\n            case _states2.default.ERROR:\n                // error button comes first\n                actions.unshift(this._renderErrButton());\n                return actions.concat([this._renderRerunButton(), this._renderToolHelpButton()]);\n            case _states2.default.OK:\n            case _states2.default.FAILED_METADATA:\n                return actions.concat([this._renderRerunButton(), this._renderVisualizationsButton(), this._renderToolHelpButton()]);\n        }\n        return actions.concat([this._renderRerunButton(), this._renderToolHelpButton()]);\n    },\n\n    /** Render icon-button to report an error on this dataset to the galaxy admin. */\n    _renderErrButton: function _renderErrButton() {\n        var self = this;\n        return (0, _faIconButton2.default)({\n            title: (0, _localization2.default)(\"View or report this error\"),\n            href: Galaxy.root + \"datasets/error?dataset_id=\" + this.model.attributes.id,\n            classes: \"report-error-btn\",\n            faIcon: \"fa-bug\",\n            onclick: function onclick(ev) {\n                if (Galaxy.router) {\n                    ev.preventDefault();\n                    Galaxy.router.push(\"datasets/error\", {\n                        dataset_id: self.model.attributes.id\n                    });\n                }\n            }\n        });\n    },\n\n    /** Render icon-button to re-run the job that created this dataset. */\n    _renderRerunButton: function _renderRerunButton() {\n        var creating_job = this.model.get(\"creating_job\");\n        if (this.model.get(\"rerunnable\")) {\n            return (0, _faIconButton2.default)({\n                title: (0, _localization2.default)(\"Run this job again\"),\n                href: this.model.urls.rerun,\n                classes: \"rerun-btn\",\n                target: this.linkTarget,\n                faIcon: \"fa-refresh\",\n                onclick: function onclick(ev) {\n                    if (Galaxy.router) {\n                        ev.preventDefault();\n                        Galaxy.router.push(\"/\", {\n                            job_id: creating_job\n                        });\n                    }\n                }\n            });\n        }\n    },\n\n    /** Render an icon-button or popupmenu of links based on the applicable visualizations */\n    _renderVisualizationsButton: function _renderVisualizationsButton() {\n        //TODO: someday - lazyload visualizations\n        var visualizations = this.model.get(\"visualizations\");\n        if (this.model.isDeletedOrPurged() || !this.hasUser || !this.model.hasData() || _.isEmpty(visualizations)) {\n            return null;\n        }\n        if (!_.isObject(visualizations[0])) {\n            this.warn(\"Visualizations have been switched off\");\n            return null;\n        }\n\n        var $visualizations = $(this.templates.visualizations(visualizations, this));\n        //HACK: need to re-write those directed at galaxy_main with linkTarget\n        $visualizations.find('[target=\"galaxy_main\"]').attr(\"target\", this.linkTarget);\n        // use addBack here to include the root $visualizations elem (for the case of 1 visualization)\n        this._addScratchBookFn($visualizations.find(\".visualization-link\").addBack(\".visualization-link\"));\n        return $visualizations;\n    },\n\n    /** add scratchbook functionality to visualization links */\n    _addScratchBookFn: function _addScratchBookFn($links) {\n        var li = this;\n        $links.click(function (ev) {\n            if (Galaxy.frame && Galaxy.frame.active) {\n                Galaxy.frame.add({\n                    title: \"Visualization\",\n                    url: $(this).attr(\"href\")\n                });\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n        });\n    },\n\n    //TODO: if possible move these to readonly view - but display the owner's tags/annotation (no edit)\n    /** Render the tags list/control */\n    _renderTags: function _renderTags($where) {\n        if (!this.hasUser) {\n            return;\n        }\n        var view = this;\n        this.tagsEditor = new _tag2.default.TagsEditor({\n            model: this.model,\n            el: $where.find(\".tags-display\"),\n            onshowFirstTime: function onshowFirstTime() {\n                this.render();\n            },\n            // persist state on the hda view (and not the editor) since these are currently re-created each time\n            onshow: function onshow() {\n                view.tagsEditorShown = true;\n            },\n            onhide: function onhide() {\n                view.tagsEditorShown = false;\n            },\n            $activator: (0, _faIconButton2.default)({\n                title: (0, _localization2.default)(\"Edit dataset tags\"),\n                classes: \"tag-btn\",\n                faIcon: \"fa-tags\"\n            }).appendTo($where.find(\".actions .right\"))\n        });\n        if (this.tagsEditorShown) {\n            this.tagsEditor.toggle(true);\n        }\n    },\n\n    /** Render the annotation display/control */\n    _renderAnnotation: function _renderAnnotation($where) {\n        if (!this.hasUser) {\n            return;\n        }\n        var view = this;\n        this.annotationEditor = new _annotation2.default.AnnotationEditor({\n            model: this.model,\n            el: $where.find(\".annotation-display\"),\n            onshowFirstTime: function onshowFirstTime() {\n                this.render();\n            },\n            // persist state on the hda view (and not the editor) since these are currently re-created each time\n            onshow: function onshow() {\n                view.annotationEditorShown = true;\n            },\n            onhide: function onhide() {\n                view.annotationEditorShown = false;\n            },\n            $activator: (0, _faIconButton2.default)({\n                title: (0, _localization2.default)(\"Edit dataset annotation\"),\n                classes: \"annotate-btn\",\n                faIcon: \"fa-comment\"\n            }).appendTo($where.find(\".actions .right\"))\n        });\n        if (this.annotationEditorShown) {\n            this.annotationEditor.toggle(true);\n        }\n    },\n\n    /** If the format/dbkey/genome_build isn't set, make the display a link to the edit page */\n    _makeDbkeyEditLink: function _makeDbkeyEditLink($details) {\n        // make the dbkey a link to editing\n        if (this.model.get(\"metadata_dbkey\") === \"?\" && !this.model.isDeletedOrPurged()) {\n            var editableDbkey = $('<a class=\"value\">?</a>').attr(\"href\", this.model.urls.edit).attr(\"target\", \"_top\");\n            $details.find(\".dbkey .value\").replaceWith(editableDbkey);\n        }\n    },\n\n    // ......................................................................... events\n    /** event map */\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .undelete-link\": \"_clickUndeleteLink\",\n        \"click .purge-link\": \"_clickPurgeLink\",\n\n        \"click .edit-btn\": function clickEditBtn(ev) {\n            this.trigger(\"edit\", this, ev);\n        },\n        \"click .delete-btn\": function clickDeleteBtn(ev) {\n            this.trigger(\"delete\", this, ev);\n        },\n        \"click .rerun-btn\": function clickRerunBtn(ev) {\n            this.trigger(\"rerun\", this, ev);\n        },\n        \"click .report-err-btn\": function clickReportErrBtn(ev) {\n            this.trigger(\"report-err\", this, ev);\n        },\n        \"click .visualization-btn\": function clickVisualizationBtn(ev) {\n            this.trigger(\"visualize\", this, ev);\n        },\n        \"click .dbkey a\": function clickDbkeyA(ev) {\n            this.trigger(\"edit\", this, ev);\n        }\n    }),\n\n    /** listener for item undelete (in the messages section) */\n    _clickUndeleteLink: function _clickUndeleteLink(ev) {\n        this.model.undelete();\n        return false;\n    },\n\n    /** listener for item purge (in the messages section) */\n    _clickPurgeLink: function _clickPurgeLink(ev) {\n        if (confirm((0, _localization2.default)(\"This will permanently remove the data in your dataset. Are you sure?\"))) {\n            this.model.purge();\n        }\n        return false;\n    },\n\n    // ......................................................................... misc\n    /** string rep */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"HDAEditView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemEdit.prototype.templates = function () {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        failed_metadata: _baseMvc2.default.wrapTemplate([\n        // in this override, provide a link to the edit page\n        '<% if( dataset.state === \"failed_metadata\" ){ %>', '<div class=\"failed_metadata-warning warningmessagesmall\">', (0, _localization2.default)(\"An error occurred setting the metadata for this dataset\"), '<br /><a href=\"<%- dataset.urls.edit %>\" target=\"_top\">', (0, _localization2.default)(\"Set it manually or retry auto-detection\"), \"</a>\", \"</div>\", \"<% } %>\"], \"dataset\"),\n\n        deleted: _baseMvc2.default.wrapTemplate([\n        // in this override, provide links to undelete or purge the dataset\n        \"<% if( dataset.deleted && !dataset.purged ){ %>\",\n        // deleted not purged\n        '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This dataset has been deleted\"), '<br /><a class=\"undelete-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Undelete it\"), \"</a>\", \"<% if( view.purgeAllowed ){ %>\", '<br /><a class=\"purge-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Permanently remove it from disk\"), \"</a>\", \"<% } %>\", \"</div>\", \"<% } %>\"], \"dataset\")\n    });\n\n    var visualizationsTemplate = _baseMvc2.default.wrapTemplate([\"<% if( visualizations.length === 1 ){ %>\", '<a class=\"visualization-link icon-btn\" href=\"<%- visualizations[0].href %>\"', ' target=\"<%- visualizations[0].target %>\" title=\"', (0, _localization2.default)(\"Visualize in\"), ' <%- visualizations[0].html %>\">', '<span class=\"fa fa-bar-chart-o\"></span>', \"</a>\", \"<% } else { %>\", '<div class=\"visualizations-dropdown dropdown icon-btn\">', '<a data-toggle=\"dropdown\" title=\"', (0, _localization2.default)(\"Visualize\"), '\">', '<span class=\"fa fa-bar-chart-o\"></span>', \"</a>\", '<ul class=\"dropdown-menu\" role=\"menu\">', \"<% _.each( visualizations, function( visualization ){ %>\", '<li><a class=\"visualization-link\" href=\"<%- visualization.href %>\"', ' target=\"<%- visualization.target %>\">', \"<%- visualization.html %>\", \"</a></li>\", \"<% }); %>\", \"</ul>\", \"</div>\", \"<% } %>\"], \"visualizations\");\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        visualizations: visualizationsTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    DatasetListItemEdit: DatasetListItemEdit\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(15);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// =============================================================================\n/** A view on any model that has a 'annotation' attribute\n */\nvar AnnotationEditor = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(_baseMvc2.default.HiddenUntilActivatedViewMixin).extend({\n    tagName: \"div\",\n    className: \"annotation-display\",\n\n    /** Set up listeners, parse options */\n    initialize: function initialize(options) {\n        options = options || {};\n        this.tooltipConfig = options.tooltipConfig || {\n            placement: \"bottom\"\n        };\n        //console.debug( this, options );\n        // only listen to the model only for changes to annotations\n        this.listenTo(this.model, \"change:annotation\", function () {\n            this.render();\n        });\n        this.hiddenUntilActivated(options.$activator, options);\n    },\n\n    /** Build the DOM elements, call select to on the created input, and set up behaviors */\n    render: function render() {\n        var view = this;\n        this.$el.html(this._template());\n\n        //TODO: handle empties better\n        this.$annotation().make_text_editable({\n            use_textarea: true,\n            on_finish: function on_finish(newAnnotation) {\n                view.$annotation().text(newAnnotation);\n                view.model.save({ annotation: newAnnotation }, { silent: true }).fail(function () {\n                    view.$annotation().text(view.model.previous(\"annotation\"));\n                });\n            }\n        });\n        return this;\n    },\n\n    /** @returns {String} the html text used to build the view's DOM */\n    _template: function _template() {\n        var annotation = this.model.get(\"annotation\");\n        return [\n        //TODO: make prompt optional\n        '<label class=\"prompt\">', (0, _localization2.default)(\"Annotation\"), \"</label>\",\n        // set up initial tags by adding as CSV to input vals (necc. to init select2)\n        '<div class=\"annotation\">', _.escape(annotation), \"</div>\"].join(\"\");\n    },\n\n    /** @returns {jQuery} the main element for this view */\n    $annotation: function $annotation() {\n        return this.$el.find(\".annotation\");\n    },\n\n    /** shut down event listeners and remove this view's DOM */\n    remove: function remove() {\n        this.$annotation.off();\n        this.stopListening(this.model);\n        Backbone.View.prototype.remove.call(this);\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return [\"AnnotationEditor(\", this.model + \"\", \")\"].join(\"\");\n    }\n});\n// =============================================================================\nexports.default = {\n    AnnotationEditor: AnnotationEditor\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _galaxy = __webpack_require__(24);\n\nvar _galaxy2 = _interopRequireDefault(_galaxy);\n\nvar _router = __webpack_require__(30);\n\nvar _router2 = _interopRequireDefault(_router);\n\nvar _toolPanel = __webpack_require__(138);\n\nvar _toolPanel2 = _interopRequireDefault(_toolPanel);\n\nvar _historyPanel = __webpack_require__(149);\n\nvar _historyPanel2 = _interopRequireDefault(_historyPanel);\n\nvar _page = __webpack_require__(25);\n\nvar _page2 = _interopRequireDefault(_page);\n\nvar _toolForm = __webpack_require__(65);\n\nvar _toolForm2 = _interopRequireDefault(_toolForm);\n\nvar _formWrapper = __webpack_require__(44);\n\nvar _formWrapper2 = _interopRequireDefault(_formWrapper);\n\nvar _userPreferences = __webpack_require__(163);\n\nvar _userPreferences2 = _interopRequireDefault(_userPreferences);\n\nvar _userCustomBuilds = __webpack_require__(164);\n\nvar _userCustomBuilds2 = _interopRequireDefault(_userCustomBuilds);\n\nvar _tours = __webpack_require__(57);\n\nvar _tours2 = _interopRequireDefault(_tours);\n\nvar _gridView = __webpack_require__(12);\n\nvar _gridView2 = _interopRequireDefault(_gridView);\n\nvar _gridShared = __webpack_require__(165);\n\nvar _gridShared2 = _interopRequireDefault(_gridShared);\n\nvar _workflow = __webpack_require__(166);\n\nvar _workflow2 = _interopRequireDefault(_workflow);\n\nvar _historyList = __webpack_require__(168);\n\nvar _historyList2 = _interopRequireDefault(_historyList);\n\nvar _toolFormComposite = __webpack_require__(77);\n\nvar _toolFormComposite2 = _interopRequireDefault(_toolFormComposite);\n\nvar _queryStringParsing = __webpack_require__(8);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _datasetError = __webpack_require__(169);\n\nvar _datasetError2 = _interopRequireDefault(_datasetError);\n\nvar _datasetEditAttributes = __webpack_require__(170);\n\nvar _datasetEditAttributes2 = _interopRequireDefault(_datasetEditAttributes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ = _jquery2.default;\n\n\n/** define the 'Analyze Data'/analysis/main/home page for Galaxy\n *  * has a masthead\n *  * a left tool menu to allow the user to load tools in the center panel\n *  * a right history menu that shows the user's current data\n *  * a center panel\n *  Both panels (generally) persist while the center panel shows any\n *  UI needed for the current step of an analysis, like:\n *      * tool forms to set tool parameters,\n *      * tables showing the contents of datasets\n *      * etc.\n */\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new _galaxy2.default.GalaxyApp(options, bootstrapped);\n    Galaxy.debug(\"analysis app\");\n\n    /** Routes */\n    var AnalysisRouter = _router2.default.extend({\n        routes: {\n            \"(/)\": \"home\",\n            \"(/)root*\": \"home\",\n            \"(/)tours(/)(:tour_id)\": \"show_tours\",\n            \"(/)user(/)\": \"show_user\",\n            \"(/)user(/)(:form_id)\": \"show_user_form\",\n            \"(/)workflow(/)\": \"show_workflows\",\n            \"(/)workflow/run(/)\": \"show_run\",\n            \"(/)pages(/)create(/)\": \"show_pages_create\",\n            \"(/)pages(/)edit(/)\": \"show_pages_edit\",\n            \"(/)pages(/)(:action_id)\": \"show_pages\",\n            \"(/)visualizations(/)edit(/)\": \"show_visualizations_edit\",\n            \"(/)visualizations/(:action_id)\": \"show_visualizations\",\n            \"(/)workflows/list_published(/)\": \"show_workflows_published\",\n            \"(/)histories(/)rename(/)\": \"show_histories_rename\",\n            \"(/)histories(/)permissions(/)\": \"show_histories_permissions\",\n            \"(/)histories(/)(:action_id)\": \"show_histories\",\n            \"(/)datasets(/)list(/)\": \"show_datasets\",\n            \"(/)workflow/import_workflow\": \"show_import_workflow\",\n            \"(/)custom_builds\": \"show_custom_builds\",\n            \"(/)datasets/edit\": \"show_dataset_edit_attributes\",\n            \"(/)datasets/error\": \"show_dataset_error\"\n        },\n\n        require_login: [\"show_user\", \"show_user_form\", \"show_workflows\"],\n\n        authenticate: function authenticate(args, name) {\n            return Galaxy.user && Galaxy.user.id || this.require_login.indexOf(name) == -1;\n        },\n\n        show_tours: function show_tours(tour_id) {\n            if (tour_id) {\n                _tours2.default.giveTour(tour_id);\n            } else {\n                this.page.display(new _tours2.default.ToursView());\n            }\n        },\n\n        show_user: function show_user() {\n            this.page.display(new _userPreferences2.default.View());\n        },\n\n        show_user_form: function show_user_form(form_id) {\n            var model = new _userPreferences2.default.Model({\n                user_id: Galaxy.params.id\n            });\n            this.page.display(new _formWrapper2.default.View(model.get(form_id)));\n        },\n\n        show_visualizations: function show_visualizations(action_id) {\n            this.page.display(new _gridShared2.default.View({\n                action_id: action_id,\n                plural: \"Visualizations\",\n                item: \"visualization\"\n            }));\n        },\n\n        show_visualizations_edit: function show_visualizations_edit() {\n            this.page.display(new _formWrapper2.default.View({\n                url: \"visualization/edit?id=\" + _queryStringParsing2.default.get(\"id\"),\n                redirect: \"visualizations/list\"\n            }));\n        },\n\n        show_workflows_published: function show_workflows_published() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"workflow/list_published\",\n                dict_format: true\n            }));\n        },\n\n        show_histories: function show_histories(action_id) {\n            this.page.display(new _historyList2.default.View({ action_id: action_id }));\n        },\n\n        show_histories_rename: function show_histories_rename() {\n            this.page.display(new _formWrapper2.default.View({\n                url: \"history/rename?id=\" + _queryStringParsing2.default.get(\"id\"),\n                redirect: \"histories/list\"\n            }));\n        },\n\n        show_histories_permissions: function show_histories_permissions() {\n            this.page.display(new _formWrapper2.default.View({\n                url: \"history/permissions?id=\" + _queryStringParsing2.default.get(\"id\"),\n                redirect: \"histories/list\"\n            }));\n        },\n\n        show_datasets: function show_datasets() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"dataset/list\",\n                dict_format: true\n            }));\n        },\n\n        show_pages: function show_pages(action_id) {\n            this.page.display(new _gridShared2.default.View({\n                action_id: action_id,\n                plural: \"Pages\",\n                item: \"page\"\n            }));\n        },\n\n        show_pages_create: function show_pages_create() {\n            this.page.display(new _formWrapper2.default.View({\n                url: \"page/create\",\n                redirect: \"pages/list\"\n            }));\n        },\n\n        show_pages_edit: function show_pages_edit() {\n            this.page.display(new _formWrapper2.default.View({\n                url: \"page/edit?id=\" + _queryStringParsing2.default.get(\"id\"),\n                redirect: \"pages/list\"\n            }));\n        },\n\n        show_workflows: function show_workflows() {\n            this.page.display(new _workflow2.default.View());\n        },\n\n        show_run: function show_run() {\n            this._loadWorkflow();\n        },\n\n        show_import_workflow: function show_import_workflow() {\n            this.page.display(new _workflow2.default.ImportWorkflowView());\n        },\n\n        show_custom_builds: function show_custom_builds() {\n            var self = this;\n            var historyPanel = this.page.historyPanel.historyView;\n            if (!historyPanel || !historyPanel.model || !historyPanel.model.id) {\n                window.setTimeout(function () {\n                    self.show_custom_builds();\n                }, 500);\n                return;\n            }\n            this.page.display(new _userCustomBuilds2.default.View());\n        },\n\n        show_dataset_edit_attributes: function show_dataset_edit_attributes() {\n            this.page.display(new _datasetEditAttributes2.default.View());\n        },\n\n        show_dataset_error: function show_dataset_error() {\n            this.page.display(new _datasetError2.default.View());\n        },\n\n        /**  */\n        home: function home(params) {\n            // TODO: to router, remove Globals\n            // load a tool by id (tool_id) or rerun a previous tool execution (job_id)\n            if (params.tool_id || params.job_id) {\n                if (params.tool_id === \"upload1\") {\n                    this.page.toolPanel.upload.show();\n                    this._loadCenterIframe(\"welcome\");\n                } else {\n                    this._loadToolForm(params);\n                }\n            } else {\n                // show the workflow run form\n                if (params.workflow_id) {\n                    this._loadWorkflow();\n                    // load the center iframe with controller.action: galaxy.org/?m_c=history&m_a=list -> history/list\n                } else if (params.m_c) {\n                    this._loadCenterIframe(params.m_c + \"/\" + params.m_a);\n                    // show the workflow run form\n                } else {\n                    this._loadCenterIframe(\"welcome\");\n                }\n            }\n        },\n\n        /** load the center panel with a tool form described by the given params obj */\n        _loadToolForm: function _loadToolForm(params) {\n            //TODO: load tool form code async\n            params.id = decodeURIComponent(params.tool_id);\n            this.page.display(new _toolForm2.default.View(params));\n        },\n\n        /** load the center panel iframe using the given url */\n        _loadCenterIframe: function _loadCenterIframe(url, root) {\n            root = root || Galaxy.root;\n            url = root + url;\n            this.page.$(\"#galaxy_main\").prop(\"src\", url);\n        },\n\n        /** load workflow by its url in run mode */\n        _loadWorkflow: function _loadWorkflow() {\n            var self = this;\n            _utils2.default.get({\n                url: Galaxy.root + \"api/workflows/\" + _utils2.default.getQueryString(\"id\") + \"/download?style=run\",\n                success: function success(response) {\n                    self.page.display(new _toolFormComposite2.default.View(response));\n                },\n                error: function error(response) {\n                    var error_msg = response.err_msg || \"Error occurred while loading the resource.\";\n                    var options = {\n                        message: error_msg,\n                        status: \"danger\",\n                        persistent: true\n                    };\n                    self.page.display(new _uiMisc2.default.Message(options));\n                }\n            });\n        }\n    });\n\n    // render and start the router\n    $(function () {\n        Galaxy.page = new _page2.default.View(_.extend(options, {\n            Left: _toolPanel2.default,\n            Right: _historyPanel2.default,\n            Router: AnalysisRouter\n        }));\n    });\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _tools = __webpack_require__(64);\n\nvar _tools2 = _interopRequireDefault(_tools);\n\nvar _uploadView = __webpack_require__(139);\n\nvar _uploadView2 = _interopRequireDefault(_uploadView);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nvar _toolFormComposite = __webpack_require__(77);\n\nvar _toolFormComposite2 = _interopRequireDefault(_toolFormComposite);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ToolPanel = Backbone.View.extend({\n    initialize: function initialize(page, options) {\n        // access configuration options\n        var config = options.config;\n        this.root = options.root;\n\n        /** @type {Object[]} descriptions of user's workflows to be shown in the tool menu */\n        this.stored_workflow_menu_entries = config.stored_workflow_menu_entries || [];\n\n        // create tool search, tool panel, and tool panel view.\n        var tool_search = new _tools2.default.ToolSearch({\n            hidden: false\n        });\n        var tools = new _tools2.default.ToolCollection(config.toolbox);\n        this.tool_panel = new _tools2.default.ToolPanel({\n            tool_search: tool_search,\n            tools: tools,\n            layout: config.toolbox_in_panel\n        });\n        this.tool_panel_view = new _tools2.default.ToolPanelView({\n            model: this.tool_panel\n        });\n\n        // add upload modal\n        this.upload_button = new _uploadView2.default({\n            nginx_upload_path: config.nginx_upload_path,\n            ftp_upload_site: config.ftp_upload_site,\n            default_genome: config.default_genome,\n            default_extension: config.default_extension\n        });\n\n        // add uploader button to Galaxy object\n        Galaxy.upload = this.upload_button;\n\n        // components for panel definition\n        this.model = new Backbone.Model({\n            title: (0, _localization2.default)(\"Tools\"),\n            buttons: [this.upload_button]\n        });\n\n        // build body template\n        this.setElement(this._template());\n    },\n\n    render: function render() {\n        // if there are tools, render panel and display everything\n        var self = this;\n        if (this.tool_panel.get(\"layout\").size() > 0) {\n            this.$el.prepend(this.tool_panel_view.$el);\n            this.tool_panel_view.render();\n        }\n        // build the dom for the workflow portion of the tool menu\n        // add internal workflow list\n        self.$(\"#internal-workflows\").append(self._templateAllWorkflow({\n            title: (0, _localization2.default)(\"All workflows\"),\n            href: \"workflow\"\n        }));\n        _.each(this.stored_workflow_menu_entries, function (menu_entry) {\n            self.$(\"#internal-workflows\").append(self._templateWorkflowLink({\n                title: menu_entry.stored_workflow.name,\n                href: \"workflow/run?id=\" + menu_entry.encoded_stored_workflow_id\n            }));\n        });\n    },\n\n    /** build a link to one tool */\n    _templateTool: function _templateTool(tool) {\n        return ['<div class=\"toolTitle\">', '<a href=\"', this.root, tool.href, '\" target=\"galaxy_main\">', tool.title, \"</a>\", \"</div>\"].join(\"\");\n    },\n\n    /** build a link to 'All Workflows' */\n    _templateAllWorkflow: function _templateAllWorkflow(tool) {\n        return ['<div class=\"toolTitle\">',\n        // global\n        '<a href=\"', Galaxy.root, tool.href, '\">', tool.title, \"</a>\", \"</div>\"].join(\"\");\n    },\n\n    /** build links to workflows in toolpanel */\n    _templateWorkflowLink: function _templateWorkflowLink(wf) {\n        return ['<div class=\"toolTitle\">', '<a class=\"' + wf.cls + ' \" href=\"', Galaxy.root, wf.href, '\">', wf.title, \"</a>\", \"</div>\"].join(\"\");\n    },\n\n    /** override to include inital menu dom and workflow section */\n    _template: function _template() {\n        return ['<div class=\"toolMenuContainer\">', '<div class=\"toolMenu\" style=\"display: none\">', '<div id=\"search-no-results\" style=\"display: none; padding-top: 5px\">', \"<em><strong>\", (0, _localization2.default)(\"Search did not match any tools.\"), \"</strong></em>\", \"</div>\", \"</div>\", '<div class=\"toolSectionPad\"/>', '<div class=\"toolSectionPad\"/>', '<div class=\"toolSectionTitle\" id=\"title_XXinternalXXworkflow\">', \"<span>\", (0, _localization2.default)(\"Workflows\"), \"</span>\", \"</div>\", '<div id=\"internal-workflows\" class=\"toolSectionBody\">', '<div class=\"toolSectionBg\"/>', \"</div>\", \"</div>\"].join(\"\");\n    },\n\n    toString: function toString() {\n        return \"toolPanel\";\n    }\n});\n\nexports.default = ToolPanel;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _uiTabs = __webpack_require__(28);\n\nvar _uiTabs2 = _interopRequireDefault(_uiTabs);\n\nvar _uploadButton = __webpack_require__(140);\n\nvar _uploadButton2 = _interopRequireDefault(_uploadButton);\n\nvar _defaultView = __webpack_require__(141);\n\nvar _defaultView2 = _interopRequireDefault(_defaultView);\n\nvar _compositeView = __webpack_require__(144);\n\nvar _compositeView2 = _interopRequireDefault(_compositeView);\n\nvar _collectionView = __webpack_require__(146);\n\nvar _collectionView2 = _interopRequireDefault(_collectionView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    options: {\n        nginx_upload_path: \"\",\n        ftp_upload_site: \"n/a\",\n        default_genome: \"?\",\n        default_extension: \"auto\",\n        height: 500,\n        width: 900,\n        auto: {\n            id: \"auto\",\n            text: \"Auto-detect\",\n            description: \"This system will try to detect the file type automatically. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be.  You can also upload compressed files, which will automatically be decompressed.\"\n        }\n    },\n\n    // contains all available dataset extensions/types\n    list_extensions: [],\n\n    // contains all available genomes\n    list_genomes: [],\n\n    initialize: function initialize(options) {\n        var self = this;\n        this.options = _utils2.default.merge(options, this.options);\n\n        // create view for upload/progress button\n        this.ui_button = new _uploadButton2.default.View({\n            onclick: function onclick(e) {\n                e.preventDefault();\n                self.show();\n            },\n            onunload: function onunload() {\n                var percentage = self.ui_button.model.get(\"percentage\", 0);\n                if (percentage > 0 && percentage < 100) {\n                    return \"Several uploads are queued.\";\n                }\n            }\n        });\n\n        // set element to button view\n        this.setElement(this.ui_button.$el);\n\n        // load extensions\n        var self = this;\n        _utils2.default.get({\n            url: Galaxy.root + \"api/datatypes?extension_only=False\",\n            success: function success(datatypes) {\n                for (var key in datatypes) {\n                    self.list_extensions.push({\n                        id: datatypes[key].extension,\n                        text: datatypes[key].extension,\n                        description: datatypes[key].description,\n                        description_url: datatypes[key].description_url,\n                        composite_files: datatypes[key].composite_files\n                    });\n                }\n                self.list_extensions.sort(function (a, b) {\n                    var a_text = a.text && a.text.toLowerCase();\n                    var b_text = b.text && b.text.toLowerCase();\n                    return a_text > b_text ? 1 : a_text < b_text ? -1 : 0;\n                });\n                if (!self.options.datatypes_disable_auto) {\n                    self.list_extensions.unshift(self.options.auto);\n                }\n            }\n        });\n\n        // load genomes\n        _utils2.default.get({\n            url: Galaxy.root + \"api/genomes\",\n            success: function success(genomes) {\n                for (var key in genomes) {\n                    self.list_genomes.push({\n                        id: genomes[key][1],\n                        text: genomes[key][0]\n                    });\n                }\n                self.list_genomes.sort(function (a, b) {\n                    if (a.id == self.options.default_genome) {\n                        return -1;\n                    }\n                    if (b.id == self.options.default_genome) {\n                        return 1;\n                    }\n                    return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\n                });\n            }\n        });\n    },\n\n    /** Show/hide upload dialog */\n    show: function show() {\n        var self = this;\n        if (!Galaxy.currHistoryPanel || !Galaxy.currHistoryPanel.model) {\n            window.setTimeout(function () {\n                self.show();\n            }, 500);\n            return;\n        }\n        this.current_user = Galaxy.user.id;\n        if (!this.modal) {\n            this.tabs = new _uiTabs2.default.View();\n            this.default_view = new _defaultView2.default(this);\n            this.tabs.add({\n                id: \"regular\",\n                title: \"Regular\",\n                $el: this.default_view.$el\n            });\n            this.composite_view = new _compositeView2.default(this);\n            this.tabs.add({\n                id: \"composite\",\n                title: \"Composite\",\n                $el: this.composite_view.$el\n            });\n            this.collection_view = new _collectionView2.default(this);\n            this.tabs.add({\n                id: \"collection\",\n                title: \"Collection\",\n                $el: this.collection_view.$el\n            });\n            this.modal = new _uiModal2.default.View({\n                title: \"Download from web or upload from disk\",\n                body: this.tabs.$el,\n                height: this.options.height,\n                width: this.options.width,\n                closing_events: true,\n                title_separator: false\n            });\n        }\n        this.modal.show();\n    },\n\n    /** Refresh user and current history */\n    currentHistory: function currentHistory() {\n        return this.current_user && Galaxy.currHistoryPanel.model.get(\"id\");\n    },\n\n    /** Get ftp configuration */\n    currentFtp: function currentFtp() {\n        return this.current_user && this.options.ftp_upload_site;\n    },\n\n    /**\n          * Package API data from array of models\n          * @param{Array} items - Upload items/rows filtered from a collection\n        */\n    toData: function toData(items, history_id) {\n        // create dictionary for data submission\n        var data = {\n            payload: {\n                tool_id: \"upload1\",\n                history_id: history_id || this.currentHistory(),\n                inputs: {}\n            },\n            files: [],\n            error_message: null\n        };\n        // add upload tools input data\n        if (items && items.length > 0) {\n            var inputs = {\n                file_count: items.length,\n                dbkey: items[0].get(\"genome\", \"?\"),\n                file_type: items[0].get(\"extension\", \"auto\")\n            };\n            for (var index in items) {\n                var it = items[index];\n                it.set(\"status\", \"running\");\n                if (it.get(\"file_size\") > 0) {\n                    var prefix = \"files_\" + index + \"|\";\n                    inputs[prefix + \"type\"] = \"upload_dataset\";\n                    inputs[prefix + \"space_to_tab\"] = it.get(\"space_to_tab\") && \"Yes\" || null;\n                    inputs[prefix + \"to_posix_lines\"] = it.get(\"to_posix_lines\") && \"Yes\" || null;\n                    inputs[prefix + \"dbkey\"] = it.get(\"genome\", null);\n                    inputs[prefix + \"file_type\"] = it.get(\"extension\", null);\n                    switch (it.get(\"file_mode\")) {\n                        case \"new\":\n                            inputs[prefix + \"url_paste\"] = it.get(\"url_paste\");\n                            break;\n                        case \"ftp\":\n                            inputs[prefix + \"ftp_files\"] = it.get(\"file_path\");\n                            break;\n                        case \"local\":\n                            data.files.push({\n                                name: prefix + \"file_data\",\n                                file: it.get(\"file_data\")\n                            });\n                    }\n                } else {\n                    data.error_message = \"Upload content incomplete.\";\n                    it.set(\"status\", \"error\");\n                    it.set(\"info\", data.error_message);\n                    break;\n                }\n            }\n            data.payload.inputs = JSON.stringify(inputs);\n        }\n        return data;\n    }\n}); /** Upload app contains the upload progress button and upload modal, compiles model data for API request **/\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/** View for upload/progress bar button */\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model({\n            icon: \"fa-upload\",\n            tooltip: \"Download from URL or upload files from disk\",\n            label: \"Load Data\",\n            percentage: 0,\n            status: \"\",\n            onunload: function onunload() {},\n            onclick: function onclick() {}\n        }).set(options);\n        this.setElement(this._template());\n        this.$progress = this.$(\".progress-bar\");\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n        $(window).on(\"beforeunload\", function () {\n            return self.model.get(\"onunload\")();\n        });\n    },\n\n    render: function render() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el.off(\"click\").on(\"click\", function (e) {\n            options.onclick(e);\n        }).tooltip({\n            title: this.model.get(\"tooltip\"),\n            placement: \"bottom\"\n        });\n        this.$progress.removeClass().addClass(\"progress-bar\").addClass(\"progress-bar-notransition\").addClass(options.status != \"\" && \"progress-bar-\" + options.status).css({ width: options.percentage + \"%\" });\n    },\n\n    /** Template */\n    _template: function _template() {\n        return '<div class=\"upload-button\">' + '<div class=\"progress\">' + '<div class=\"progress-bar\"/>' + '<a class=\"panel-header-button\" href=\"javascript:void(0)\" id=\"tool-panel-upload-button\">' + '<span class=\"fa fa-upload\"/>' + \"</a>\" + \"</div>\" + \"</div>\";\n    }\n});\nexports.default = { View: View };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadModel = __webpack_require__(16);\n\nvar _uploadModel2 = _interopRequireDefault(_uploadModel);\n\nvar _defaultRow = __webpack_require__(142);\n\nvar _defaultRow2 = _interopRequireDefault(_defaultRow);\n\nvar _uploadFtp2 = __webpack_require__(32);\n\nvar _uploadFtp3 = _interopRequireDefault(_uploadFtp2);\n\nvar _uploadExtension = __webpack_require__(33);\n\nvar _uploadExtension2 = _interopRequireDefault(_uploadExtension);\n\nvar _uiPopover = __webpack_require__(10);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiSelect = __webpack_require__(13);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _lazyLimited = __webpack_require__(143);\n\nvar _lazyLimited2 = _interopRequireDefault(_lazyLimited);\n\n__webpack_require__(34);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Renders contents of the default uploader */\nexports.default = Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new _uploadModel2.default.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function reset() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function initialize(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n\n        // build template\n        this.setElement(this._template());\n        this.$uploadbox = this.$(\".upload-box\");\n        this.$uploadtable = this.$(\".upload-table\");\n\n        // append buttons to dom\n        this.btnLocal = new _uiMisc2.default.Button({\n            id: \"btn-local\",\n            title: \"Choose local file\",\n            onclick: function onclick() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new _uiMisc2.default.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP file\",\n            onclick: function onclick() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new _uiMisc2.default.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function onclick() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new _uiMisc2.default.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function onclick() {\n                self._eventStart();\n            }\n        });\n        this.btnStop = new _uiMisc2.default.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function onclick() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new _uiMisc2.default.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function onclick() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new _uiMisc2.default.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function onclick() {\n                self.app.modal.hide();\n            }\n        });\n        _.each([this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnClose], function (button) {\n            self.$(\".upload-buttons\").prepend(button.$el);\n        });\n\n        // file upload\n        this.uploadbox = this.$uploadbox.uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function announce(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function initialize(index) {\n                return self.app.toData([self.collection.get(index)], self.history_id);\n            },\n            progress: function progress(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function success(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function error(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function complete() {\n                self._eventComplete();\n            },\n            ondragover: function ondragover() {\n                self.$uploadbox.addClass(\"highlight\");\n            },\n            ondragleave: function ondragleave() {\n                self.$uploadbox.removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new _uiPopover2.default.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new _uiSelect2.default.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function (ext) {\n                return !ext.composite_files;\n            }),\n            value: this.options.default_extension,\n            onchange: function onchange(extension) {\n                self._changeExtension(extension);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\").on(\"click\", function (e) {\n            new _uploadExtension2.default({\n                $el: $(e.target),\n                title: self.select_extension.text(),\n                extension: self.select_extension.value(),\n                list: self.list_extensions,\n                placement: \"top\"\n            });\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // genome extension\n        this.select_genome = new _uiSelect2.default.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function onchange(genome) {\n                self._changeGenome(genome);\n            }\n        });\n\n        // Lazy load helper\n        this.loader = new _lazyLimited2.default({\n            $container: this.$uploadbox,\n            collection: this.collection,\n            new_content: function new_content(model) {\n                var upload_row = new _defaultRow2.default(self, { model: model });\n                self.$uploadtable.find(\"> tbody:first\").append(upload_row.$el);\n                upload_row.render();\n                return upload_row;\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", function (model) {\n            self._eventRemove(model);\n        });\n        this.render();\n    },\n\n    render: function render() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message = \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = \"You added \" + this.counter.announce + \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n            } else {\n                message = \"Please wait...\" + this.counter.announce + \" out of \" + this.counter.running + \" remaining.\";\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset = this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n        var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function _eventAnnounce(index, file) {\n        this.counter.announce++;\n        var new_model = new _uploadModel2.default.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file\n        });\n        this.render();\n        this.collection.add(new_model);\n    },\n\n    /** Progress */\n    _eventProgress: function _eventProgress(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n    },\n\n    /** Success */\n    _eventSuccess: function _eventSuccess(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\" });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this.render();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function _eventError(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this.render();\n    },\n\n    /** Queue is done */\n    _eventComplete: function _eventComplete() {\n        this.collection.each(function (model) {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this.render();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function _eventRemove(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this.render();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function _eventFtp() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(new _uploadFtp3.default({\n                collection: this.collection,\n                ftp_upload_site: this.ftp_upload_site,\n                onadd: function onadd(ftp_file) {\n                    return self.uploadbox.add([{\n                        mode: \"ftp\",\n                        name: ftp_file.path,\n                        size: ftp_file.size,\n                        path: ftp_file.path\n                    }]);\n                },\n                onremove: function onremove(model_index) {\n                    self.collection.remove(model_index);\n                }\n            }).$el);\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function _eventCreate() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function _eventStart() {\n        if (this.counter.announce != 0 && this.counter.running == 0) {\n            // prepare upload process\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each(function (model) {\n                if (model.get(\"status\") == \"init\") {\n                    model.set(\"status\", \"queued\");\n                    self.upload_size += model.get(\"file_size\");\n                }\n            });\n            this.ui_button.model.set({\n                percentage: 0,\n                status: \"success\"\n            });\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n\n            // package ftp files separately, and remove them from queue\n            this._uploadFtp();\n\n            // queue remaining files\n            this.uploadbox.start();\n            this.render();\n        }\n    },\n\n    /** Pause upload process */\n    _eventStop: function _eventStop() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function _eventReset() {\n        if (this.counter.running == 0) {\n            var self = this;\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this.render();\n        }\n    },\n\n    /** Update extension for all models */\n    _changeExtension: function _changeExtension(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"init\" && (model.get(\"extension\") == self.options.default_extension || !defaults_only)) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update genome for all models */\n    _changeGenome: function _changeGenome(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"init\" && (model.get(\"genome\") == self.options.default_genome || !defaults_only)) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Package and upload ftp files in a single request */\n    _uploadFtp: function _uploadFtp() {\n        var self = this;\n        var list = [];\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"queued\" && model.get(\"file_mode\") == \"ftp\") {\n                self.uploadbox.remove(model.id);\n                list.push(model);\n            }\n        });\n        if (list.length > 0) {\n            $.uploadpost({\n                data: this.app.toData(list),\n                url: this.app.options.nginx_upload_path,\n                success: function success(message) {\n                    _.each(list, function (model) {\n                        self._eventSuccess(model.id);\n                    });\n                },\n                error: function error(message) {\n                    _.each(list, function (model) {\n                        self._eventError(model.id, message);\n                    });\n                }\n            });\n        }\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function _uploadPercentage(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function _template() {\n        return '<div class=\"upload-view-default\">' + '<div class=\"upload-top\">' + '<h6 class=\"upload-top-info\"/>' + \"</div>\" + '<div class=\"upload-box\">' + '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' + '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' + \"<thead>\" + \"<tr>\" + \"<th>Name</th>\" + \"<th>Size</th>\" + \"<th>Type</th>\" + \"<th>Genome</th>\" + \"<th>Settings</th>\" + \"<th>Status</th>\" + \"<th/>\" + \"</tr>\" + \"</thead>\" + \"<tbody/>\" + \"</table>\" + \"</div>\" + '<div class=\"upload-footer\">' + '<span class=\"upload-footer-title\">Type (set all):</span>' + '<span class=\"upload-footer-extension\"/>' + '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' + '<span class=\"upload-footer-title\">Genome (set all):</span>' + '<span class=\"upload-footer-genome\"/>' + \"</div>\" + '<div class=\"upload-buttons\"/>' + \"</div>\";\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadModel = __webpack_require__(16);\n\nvar _uploadModel2 = _interopRequireDefault(_uploadModel);\n\nvar _uploadSettings = __webpack_require__(31);\n\nvar _uploadSettings2 = _interopRequireDefault(_uploadSettings);\n\nvar _uiPopover = __webpack_require__(10);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiSelect = __webpack_require__(13);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function initialize(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new _uiPopover2.default.View({\n            title: \"Upload configuration\",\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // create select genomes\n        this.select_genome = new _uiSelect2.default.View({\n            css: \"upload-genome\",\n            data: self.app.list_genomes,\n            container: this.$(\".upload-genome\"),\n            value: default_genome,\n            onchange: function onchange(genome) {\n                self.model.set(\"genome\", genome);\n            }\n        });\n\n        // create select extension\n        this.select_extension = new _uiSelect2.default.View({\n            css: \"upload-extension\",\n            data: self.app.list_extensions,\n            container: this.$(\".upload-extension\"),\n            value: default_extension,\n            onchange: function onchange(extension) {\n                self.model.set(\"extension\", extension);\n            }\n        });\n\n        // initialize genome and extension values\n        this.model.set({\n            genome: default_genome,\n            extension: default_extension\n        });\n\n        // handle click event\n        this.$symbol.on(\"click\", function () {\n            self._removeRow();\n        });\n\n        // handle extension info popover\n        this.$(\".upload-extension-info\").on(\"click\", function (e) {\n            self.app.showExtensionInfo({\n                $el: $(e.target),\n                title: self.select_extension.text(),\n                extension: self.select_extension.value()\n            });\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // handle settings popover\n        this.$settings.on(\"click\", function (e) {\n            self._showSettings();\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", function (e) {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", function () {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", function () {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", function () {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:genome\", function () {\n            self._refreshGenome();\n        });\n        this.listenTo(this.model, \"change:extension\", function () {\n            self._refreshExtension();\n        });\n        this.listenTo(this.model, \"change:file_size\", function () {\n            self._refreshFileSize();\n        });\n    },\n\n    render: function render() {\n        this._refreshType();\n        this._refreshPercentage();\n        this._refreshStatus();\n        this._refreshInfo();\n        this._refreshGenome();\n        this._refreshExtension();\n        this._refreshFileSize();\n    },\n\n    /** Remove view */\n    remove: function remove() {\n        this.select_genome.remove();\n        this.select_extension.remove();\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    /** Render type */\n    _refreshType: function _refreshType() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(_utils2.default.bytesToString(options.file_size));\n        this.$mode.removeClass().addClass(\"upload-mode\").addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text.css({\n                width: this.$el.width() - 16 + \"px\",\n                top: this.$el.height() - 8 + \"px\"\n            }).show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Update extension */\n    _refreshExtension: function _refreshExtension() {\n        this.select_extension.value(this.model.get(\"extension\"));\n    },\n\n    /** Update genome */\n    _refreshGenome: function _refreshGenome() {\n        this.select_genome.value(this.model.get(\"genome\"));\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function _refreshInfo() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function _refreshPercentage() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: percentage + \"%\" });\n        this.$percentage.html(percentage != 100 ? percentage + \"%\" : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function _refreshStatus() {\n        var status = this.model.get(\"status\");\n        this.$symbol.removeClass().addClass(\"upload-symbol\").addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (enabled) {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        } else {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        }\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function _refreshFileSize() {\n        this.$size.html(_utils2.default.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function _removeRow() {\n        if ([\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !== -1) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function _showSettings() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new _uploadSettings2.default(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function _template(options) {\n        return '<tr id=\"upload-row-' + options.id + '\" class=\"upload-row\">' + \"<td>\" + '<div class=\"upload-text-column\">' + '<div class=\"upload-mode\"/>' + '<div class=\"upload-title\"/>' + '<div class=\"upload-text\">' + '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' + '<textarea class=\"upload-text-content form-control\"/>' + \"</div>\" + \"</div>\" + \"</td>\" + \"<td>\" + '<div class=\"upload-size\"/>' + \"</td>\" + \"<td>\" + '<div class=\"upload-extension\" style=\"float: left;\"/>&nbsp;&nbsp' + '<div class=\"upload-extension-info upload-icon-button fa fa-search\"/>' + \"</td>\" + \"<td>\" + '<div class=\"upload-genome\"/>' + \"</td>\" + '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' + \"<td>\" + '<div class=\"upload-info\">' + '<div class=\"upload-info-text\"/>' + '<div class=\"upload-info-progress progress\">' + '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' + '<div class=\"upload-percentage\">0%</div>' + \"</div>\" + \"</div>\" + \"</td>\" + \"<td>\" + '<div class=\"upload-symbol ' + this.status_classes.init + '\"/>' + \"</td>\" + \"</tr>\";\n    }\n}); /** Renders the default uploader rows */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/** Contains helpers to limit/lazy load views for backbone views */\n\nexports.default = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.$container = options.$container;\n        this.collection = options.collection;\n        this.new_content = options.new_content;\n        this.max = options.max || 50;\n        this.content_list = {};\n        this.$message = $(\"<div/>\").addClass(\"ui-limitloader\").append(\"...only the first \" + this.max + \" entries are visible.\");\n        this.$container.append(this.$message);\n        this.listenTo(this.collection, \"reset\", this._reset, this);\n        this.listenTo(this.collection, \"add\", this._refresh, this);\n        this.listenTo(this.collection, \"remove\", this._remove, this);\n    },\n\n    /** Checks if the limit has been reached */\n    _done: function _done() {\n        var done = _.size(this.content_list) > this.max;\n        this.$message[done ? \"show\" : \"hide\"]();\n        return done;\n    },\n\n    /** Remove all content */\n    _reset: function _reset() {\n        _.each(this.content_list, function (content) {\n            content.remove();\n        });\n        this.content_list = {};\n        this.$message.hide();\n    },\n\n    /** Remove content */\n    _remove: function _remove(model) {\n        var model_id = model.id;\n        var content = this.content_list[model_id];\n        if (content) {\n            content.remove();\n            delete this.content_list[model_id];\n        }\n        this._refresh();\n    },\n\n    /** Refreshes container content by adding new views if visible */\n    _refresh: function _refresh() {\n        if (!this._done()) {\n            for (var i in this.collection.models) {\n                var model = this.collection.models[i];\n                var view = this.content_list[model.id];\n                if (!this.content_list[model.id]) {\n                    var content = this.new_content(model);\n                    this.content_list[model.id] = content;\n                    if (this._done()) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadModel = __webpack_require__(16);\n\nvar _uploadModel2 = _interopRequireDefault(_uploadModel);\n\nvar _compositeRow = __webpack_require__(145);\n\nvar _compositeRow2 = _interopRequireDefault(_compositeRow);\n\nvar _uploadExtension = __webpack_require__(33);\n\nvar _uploadExtension2 = _interopRequireDefault(_uploadExtension);\n\nvar _uiPopover = __webpack_require__(10);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiSelect = __webpack_require__(13);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    collection: new _uploadModel2.default.Collection(),\n    initialize: function initialize(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // create button section\n        this.btnStart = new _uiMisc2.default.Button({\n            title: \"Start\",\n            onclick: function onclick() {\n                self._eventStart();\n            }\n        });\n        this.btnClose = new _uiMisc2.default.Button({\n            title: \"Close\",\n            onclick: function onclick() {\n                self.app.modal.hide();\n            }\n        });\n\n        // append buttons to dom\n        _.each([this.btnStart, this.btnClose], function (button) {\n            self.$(\".upload-buttons\").prepend(button.$el);\n        });\n\n        // select extension\n        this.select_extension = new _uiSelect2.default.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function (ext) {\n                return ext.composite_files;\n            }),\n            onchange: function onchange(extension) {\n                self.collection.reset();\n                var details = _.findWhere(self.list_extensions, {\n                    id: extension\n                });\n                if (details && details.composite_files) {\n                    _.each(details.composite_files, function (item) {\n                        self.collection.add({\n                            id: self.collection.size(),\n                            file_desc: item.description || item.name\n                        });\n                    });\n                }\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\").on(\"click\", function (e) {\n            new _uploadExtension2.default({\n                $el: $(e.target),\n                title: self.select_extension.text(),\n                extension: self.select_extension.value(),\n                list: self.list_extensions,\n                placement: \"top\"\n            });\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // genome extension\n        this.select_genome = new _uiSelect2.default.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome\n        });\n\n        // listener for collection triggers on change in composite datatype and extension selection\n        this.listenTo(this.collection, \"add\", function (model) {\n            self._eventAnnounce(model);\n        });\n        this.listenTo(this.collection, \"change add\", function () {\n            self.render();\n        });\n        this.select_extension.options.onchange(this.select_extension.value());\n        this.render();\n    },\n\n    render: function render() {\n        var model = this.collection.first();\n        if (model && model.get(\"status\") == \"running\") {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        } else {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        }\n        if (this.collection.where({ status: \"ready\" }).length == this.collection.length && this.collection.length > 0) {\n            this.btnStart.enable();\n            this.btnStart.$el.addClass(\"btn-primary\");\n        } else {\n            this.btnStart.disable();\n            this.btnStart.$el.removeClass(\"btn-primary\");\n        }\n        this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n    },\n\n    //\n    // upload events / process pipeline\n    //\n\n    /** Builds the basic ui with placeholder rows for each composite data type file */\n    _eventAnnounce: function _eventAnnounce(model) {\n        var upload_row = new _compositeRow2.default(this, { model: model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n        upload_row.render();\n    },\n\n    /** Start upload process */\n    _eventStart: function _eventStart() {\n        var self = this;\n        this.collection.each(function (model) {\n            model.set({\n                genome: self.select_genome.value(),\n                extension: self.select_extension.value()\n            });\n        });\n        $.uploadpost({\n            url: this.app.options.nginx_upload_path,\n            data: this.app.toData(this.collection.filter()),\n            success: function success(message) {\n                self._eventSuccess(message);\n            },\n            error: function error(message) {\n                self._eventError(message);\n            },\n            progress: function progress(percentage) {\n                self._eventProgress(percentage);\n            }\n        });\n    },\n\n    /** Refresh progress state */\n    _eventProgress: function _eventProgress(percentage) {\n        this.collection.each(function (it) {\n            it.set(\"percentage\", percentage);\n        });\n    },\n\n    /** Refresh success state */\n    _eventSuccess: function _eventSuccess(message) {\n        this.collection.each(function (it) {\n            it.set(\"status\", \"success\");\n        });\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Refresh error state */\n    _eventError: function _eventError(message) {\n        this.collection.each(function (it) {\n            it.set({ status: \"error\", info: message });\n        });\n    },\n\n    /** Load html template */\n    _template: function _template() {\n        return '<div class=\"upload-view-composite\">' + '<div class=\"upload-top\">' + '<h6 class=\"upload-top-info\"/>' + \"</div>\" + '<div class=\"upload-box\">' + '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' + \"<thead>\" + \"<tr>\" + \"<th/>\" + \"<th/>\" + \"<th>Description</th>\" + \"<th>Name</th>\" + \"<th>Size</th>\" + \"<th>Settings</th>\" + \"<th>Status</th>\" + \"</tr>\" + \"</thead>\" + \"<tbody/>\" + \"</table>\" + \"</div>\" + '<div class=\"upload-footer\">' + '<span class=\"upload-footer-title\">Composite Type:</span>' + '<span class=\"upload-footer-extension\"/>' + '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' + '<span class=\"upload-footer-title\">Genome/Build:</span>' + '<span class=\"upload-footer-genome\"/>' + \"</div>\" + '<div class=\"upload-buttons\"/>' + \"</div>\";\n    }\n}); /** Renders contents of the composite uploader */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadSettings = __webpack_require__(31);\n\nvar _uploadSettings2 = _interopRequireDefault(_uploadSettings);\n\nvar _uploadFtp = __webpack_require__(32);\n\nvar _uploadFtp2 = _interopRequireDefault(_uploadFtp);\n\nvar _uiPopover = __webpack_require__(10);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _uiSelect = __webpack_require__(13);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\n__webpack_require__(34);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-mode fa fa-exclamation text-primary\",\n        ready: \"upload-mode fa fa-check text-success\",\n        running: \"upload-mode fa fa-spinner fa-spin\",\n        success: \"upload-mode fa fa-check\",\n        error: \"upload-mode fa fa-exclamation-triangle\"\n    },\n\n    initialize: function initialize(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template());\n        this.$source = this.$(\".upload-source\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$status = this.$(\".upload-status\");\n        this.$text = this.$(\".upload-text\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$file_name = this.$(\".upload-file-name\");\n        this.$file_desc = this.$(\".upload-file-desc\");\n        this.$file_size = this.$(\".upload-file-size\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // build upload functions\n        this.uploadinput = this.$el.uploadinput({\n            ondragover: function ondragover() {\n                self.model.get(\"enabled\") && self.$el.addClass(\"warning\");\n            },\n            ondragleave: function ondragleave() {\n                self.$el.removeClass(\"warning\");\n            },\n            onchange: function onchange(files) {\n                if (self.model.get(\"status\") != \"running\" && files && files.length > 0) {\n                    self.model.reset({\n                        file_data: files[0],\n                        file_name: files[0].name,\n                        file_size: files[0].size,\n                        file_mode: files[0].mode || \"local\"\n                    });\n                    self._refreshReady();\n                }\n            }\n        });\n\n        // source selection popup\n        this.button_menu = new _uiMisc2.default.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: \"Select\",\n            pull: \"left\"\n        });\n        this.$source.append(this.button_menu.$el);\n        this.button_menu.addMenu({\n            icon: \"fa-laptop\",\n            title: \"Choose local file\",\n            onclick: function onclick() {\n                self.uploadinput.dialog();\n            }\n        });\n        if (this.app.ftp_upload_site) {\n            this.button_menu.addMenu({\n                icon: \"fa-folder-open-o\",\n                title: \"Choose FTP file\",\n                onclick: function onclick() {\n                    self._showFtp();\n                }\n            });\n        }\n        this.button_menu.addMenu({\n            icon: \"fa-edit\",\n            title: \"Paste/Fetch data\",\n            onclick: function onclick() {\n                self.model.reset({\n                    file_mode: \"new\",\n                    file_name: \"New File\"\n                });\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new _uiPopover2.default.View({\n            title: \"Choose FTP file:\",\n            container: this.$source.find(\".ui-button-menu\"),\n            placement: \"right\"\n        });\n\n        // append popup to settings icon\n        this.settings = new _uiPopover2.default.View({\n            title: \"Upload configuration\",\n            container: this.$settings,\n            placement: \"bottom\"\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", function (e) {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n            self._refreshReady();\n        });\n\n        // handle settings popover\n        this.$settings.on(\"click\", function (e) {\n            self._showSettings();\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", function () {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", function () {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", function () {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_name\", function () {\n            self._refreshFileName();\n        });\n        this.listenTo(this.model, \"change:file_mode\", function () {\n            self._refreshMode();\n        });\n        this.listenTo(this.model, \"change:file_size\", function () {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", function () {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", function () {\n            self.remove();\n        });\n    },\n\n    render: function render() {\n        this.$el.attr(\"id\", \"upload-row-\" + this.model.id);\n        this.$file_name.html(_.escape(this.model.get(\"file_name\") || \"-\"));\n        this.$file_desc.html(this.model.get(\"file_desc\") || \"Unavailable\");\n        this.$file_size.html(_utils2.default.bytesToString(this.model.get(\"file_size\")));\n        this.$status.removeClass().addClass(this.status_classes.init);\n    },\n\n    /** Remove view */\n    remove: function remove() {\n        // call the base class remove method\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    //\n    // handle model events\n    //\n\n    /** Refresh ready or not states */\n    _refreshReady: function _refreshReady() {\n        this.app.collection.each(function (model) {\n            model.set(\"status\", model.get(\"file_size\") > 0 && \"ready\" || \"init\");\n        });\n    },\n\n    /** Refresh mode and e.g. show/hide textarea field */\n    _refreshMode: function _refreshMode() {\n        var file_mode = this.model.get(\"file_mode\");\n        if (file_mode == \"new\") {\n            this.height = this.$el.height();\n            this.$text.css({\n                width: this.$el.width() - 16 + \"px\",\n                top: this.$el.height() - 8 + \"px\"\n            }).show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$text_content.val(\"\").trigger(\"keyup\");\n        } else {\n            this.$el.height(this.height);\n            this.$text.hide();\n        }\n    },\n\n    /** Refresh information */\n    _refreshInfo: function _refreshInfo() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage */\n    _refreshPercentage: function _refreshPercentage() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        if (percentage != 0) {\n            this.$progress_bar.css({ width: percentage + \"%\" });\n        } else {\n            this.$progress_bar.addClass(\"no-transition\");\n            this.$progress_bar.css({ width: \"0%\" });\n            this.$progress_bar[0].offsetHeight;\n            this.$progress_bar.removeClass(\"no-transition\");\n        }\n        this.$percentage.html(percentage != 100 ? percentage + \"%\" : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function _refreshStatus() {\n        var status = this.model.get(\"status\");\n        this.$status.removeClass().addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status != \"running\");\n        this.$text_content.attr(\"disabled\", !this.model.get(\"enabled\"));\n        this.$el.removeClass(\"success danger warning\");\n        if (status == \"running\" || status == \"ready\") {\n            this.model.set(\"percentage\", 0);\n        }\n        this.$source.find(\".button\")[status == \"running\" ? \"addClass\" : \"removeClass\"](\"disabled\");\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.model.set(\"percentage\", 100);\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.model.set(\"percentage\", 0);\n            this.$info_progress.hide();\n            this.$info_text.show();\n        } else {\n            this.$info_progress.show();\n            this.$info_text.hide();\n        }\n    },\n\n    /** File name */\n    _refreshFileName: function _refreshFileName() {\n        this.$file_name.html(this.model.get(\"file_name\") || \"-\");\n    },\n\n    /** File size */\n    _refreshFileSize: function _refreshFileSize() {\n        this.$file_size.html(_utils2.default.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Show/hide ftp popup */\n    _showFtp: function _showFtp() {\n        if (!this.ftp.visible) {\n            var self = this;\n            this.ftp.empty();\n            this.ftp.append(new _uploadFtp2.default({\n                ftp_upload_site: this.app.ftp_upload_site,\n                onchange: function onchange(ftp_file) {\n                    self.ftp.hide();\n                    if (self.model.get(\"status\") != \"running\" && ftp_file) {\n                        self.model.reset({\n                            file_mode: \"ftp\",\n                            file_name: ftp_file.path,\n                            file_size: ftp_file.size,\n                            file_path: ftp_file.path\n                        });\n                        self._refreshReady();\n                    }\n                }\n            }).$el);\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Show/hide settings popup */\n    _showSettings: function _showSettings() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new _uploadSettings2.default(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** Template */\n    _template: function _template() {\n        return '<tr class=\"upload-row\">' + \"<td>\" + '<div class=\"upload-source\"/>' + '<div class=\"upload-text-column\">' + '<div class=\"upload-text\">' + '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' + '<textarea class=\"upload-text-content form-control\"/>' + \"</div>\" + \"</div>\" + \"</td>\" + \"<td>\" + '<div class=\"upload-status\"/>' + \"</td>\" + \"<td>\" + '<div class=\"upload-file-desc upload-title\"/>' + \"</td>\" + \"<td>\" + '<div class=\"upload-file-name upload-title\"/>' + \"</td>\" + \"<td>\" + '<div class=\"upload-file-size upload-size\"/>' + \"</td>\" + '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' + \"<td>\" + '<div class=\"upload-info\">' + '<div class=\"upload-info-text\"/>' + '<div class=\"upload-info-progress progress\">' + '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' + '<div class=\"upload-percentage\">0%</div>' + \"</div>\" + \"</div>\" + \"</td>\" + \"</tr>\";\n    }\n}); /** Renders the composite upload row view */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadModel = __webpack_require__(16);\n\nvar _uploadModel2 = _interopRequireDefault(_uploadModel);\n\nvar _collectionRow = __webpack_require__(147);\n\nvar _collectionRow2 = _interopRequireDefault(_collectionRow);\n\nvar _uploadFtp = __webpack_require__(32);\n\nvar _uploadFtp2 = _interopRequireDefault(_uploadFtp);\n\nvar _uploadExtension = __webpack_require__(33);\n\nvar _uploadExtension2 = _interopRequireDefault(_uploadExtension);\n\nvar _uiPopover = __webpack_require__(10);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiSelect = __webpack_require__(13);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _listCollectionCreator = __webpack_require__(35);\n\nvar _listCollectionCreator2 = _interopRequireDefault(_listCollectionCreator);\n\n__webpack_require__(34);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Renders contents of the collection uploader */\nexports.default = Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new _uploadModel2.default.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function reset() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function initialize(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // append buttons to dom\n        this.btnLocal = new _uiMisc2.default.Button({\n            id: \"btn-local\",\n            title: \"Choose local files\",\n            onclick: function onclick() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new _uiMisc2.default.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP files\",\n            onclick: function onclick() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new _uiMisc2.default.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function onclick() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new _uiMisc2.default.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function onclick() {\n                self._eventStart();\n            }\n        });\n        this.btnBuild = new _uiMisc2.default.Button({\n            id: \"btn-build\",\n            title: \"Build\",\n            onclick: function onclick() {\n                self._eventBuild();\n            }\n        });\n        this.btnStop = new _uiMisc2.default.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function onclick() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new _uiMisc2.default.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function onclick() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new _uiMisc2.default.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function onclick() {\n                self.app.modal.hide();\n            }\n        });\n        _.each([this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnBuild, this.btnClose], function (button) {\n            self.$(\".upload-buttons\").prepend(button.$el);\n        });\n\n        // file upload\n        this.uploadbox = this.$(\".upload-box\").uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function announce(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function initialize(index) {\n                return self.app.toData([self.collection.get(index)], self.history_id);\n            },\n            progress: function progress(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function success(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function error(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function complete() {\n                self._eventComplete();\n            },\n            ondragover: function ondragover() {\n                self.$(\".upload-box\").addClass(\"highlight\");\n            },\n            ondragleave: function ondragleave() {\n                self.$(\".upload-box\").removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new _uiPopover2.default.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new _uiSelect2.default.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function (ext) {\n                return !ext.composite_files;\n            }),\n            value: this.options.default_extension,\n            onchange: function onchange(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        this.collectionType = \"list\";\n        this.select_collection = new _uiSelect2.default.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-collection-type\"),\n            data: [{ id: \"list\", text: \"List\" }, { id: \"paired\", text: \"Paired\" }, { id: \"list:paired\", text: \"List of Pairs\" }],\n            value: \"list\",\n            onchange: function onchange(collectionType) {\n                self.updateCollectionType(collectionType);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\").on(\"click\", function (e) {\n            new _uploadExtension2.default({\n                $el: $(e.target),\n                title: self.select_extension.text(),\n                extension: self.select_extension.value(),\n                list: self.list_extensions,\n                placement: \"top\"\n            });\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // genome extension\n        this.select_genome = new _uiSelect2.default.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function onchange(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", function (model) {\n            self._eventRemove(model);\n        });\n        this._updateScreen();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function _eventAnnounce(index, file) {\n        this.counter.announce++;\n        var new_model = new _uploadModel2.default.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file,\n            extension: this.select_extension.value(),\n            genome: this.select_genome.value()\n        });\n        this.collection.add(new_model);\n        var upload_row = new _collectionRow2.default(this, { model: new_model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this._updateScreen();\n        upload_row.render();\n    },\n\n    /** Progress */\n    _eventProgress: function _eventProgress(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n    },\n\n    /** Success */\n    _eventSuccess: function _eventSuccess(index, message) {\n        // var hdaId = message[\"outputs\"][0][\"id\"];\n        var hids = _.pluck(message[\"outputs\"], \"hid\");\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\", hids: hids });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this._updateScreen();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function _eventError(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this._updateScreen();\n    },\n\n    /** Queue is done */\n    _eventComplete: function _eventComplete() {\n        this.collection.each(function (model) {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this._updateScreen();\n    },\n\n    _eventBuild: function _eventBuild() {\n        var allHids = [];\n        _.forEach(this.collection.models, function (upload) {\n            allHids.push.apply(allHids, upload.get(\"hids\"));\n        });\n        var models = _.map(allHids, function (hid) {\n            return Galaxy.currHistoryPanel.collection.getByHid(hid);\n        });\n        var selection = new Galaxy.currHistoryPanel.collection.constructor(models);\n        // I'm building the selection wrong because I need to set this historyId directly.\n        selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n        Galaxy.currHistoryPanel.buildCollection(this.collectionType, selection, true);\n        this.counter.running = 0;\n        this._updateScreen();\n        this._eventReset();\n        this.app.modal.hide();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function _eventRemove(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function _eventFtp() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(new _uploadFtp2.default({\n                collection: this.collection,\n                ftp_upload_site: this.ftp_upload_site,\n                onadd: function onadd(ftp_file) {\n                    return self.uploadbox.add([{\n                        mode: \"ftp\",\n                        name: ftp_file.path,\n                        size: ftp_file.size,\n                        path: ftp_file.path\n                    }]);\n                },\n                onremove: function onremove(model_index) {\n                    self.collection.remove(model_index);\n                }\n            }).$el);\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function _eventCreate() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function _eventStart() {\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"init\") {\n                model.set(\"status\", \"queued\");\n                self.upload_size += model.get(\"file_size\");\n            }\n        });\n        this.ui_button.model.set({ percentage: 0, status: \"success\" });\n        this.counter.running = this.counter.announce;\n        this.history_id = this.app.currentHistory();\n        this.uploadbox.start();\n        this._updateScreen();\n    },\n\n    /** Pause upload process */\n    _eventStop: function _eventStop() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function _eventReset() {\n        if (this.counter.running == 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this._updateScreen();\n        }\n    },\n\n    /** Update extension for all models */\n    updateExtension: function updateExtension(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"init\" && (model.get(\"extension\") == self.options.default_extension || !defaults_only)) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function updateCollectionType(collectionType) {\n        var self = this;\n        this.collectionType = collectionType;\n    },\n\n    /** Update genome for all models */\n    updateGenome: function updateGenome(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"init\" && (model.get(\"genome\") == self.options.default_genome || !defaults_only)) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Set screen */\n    _updateScreen: function _updateScreen() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message = \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = \"You added \" + this.counter.announce + \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n            } else {\n                message = \"Please wait...\" + this.counter.announce + \" out of \" + this.counter.running + \" remaining.\";\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset = this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n        var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n        var enable_build = this.counter.running == 0 && this.counter.announce == 0 && this.counter.success > 0 && this.counter.error == 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function _uploadPercentage(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function _template() {\n        return '<div class=\"upload-view-default\">' + '<div class=\"upload-top\">' + '<h6 class=\"upload-top-info\"/>' + \"</div>\" + '<div class=\"upload-box\">' + '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' + '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' + \"<thead>\" + \"<tr>\" + \"<th>Name</th>\" + \"<th>Size</th>\" + \"<th>Status</th>\" + \"<th/>\" + \"</tr>\" + \"</thead>\" + \"<tbody/>\" + \"</table>\" + \"</div>\" + '<div class=\"upload-footer\">' + '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' + '<span class=\"upload-footer-collection-type\"/>' + '<span class=\"upload-footer-title-compressed\">File Type:</span>' + '<span class=\"upload-footer-extension\"/>' + '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' + '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' + '<span class=\"upload-footer-genome\"/>' + \"</div>\" + '<div class=\"upload-buttons\"/>' + \"</div>\";\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadModel = __webpack_require__(16);\n\nvar _uploadModel2 = _interopRequireDefault(_uploadModel);\n\nvar _uploadSettings = __webpack_require__(31);\n\nvar _uploadSettings2 = _interopRequireDefault(_uploadSettings);\n\nvar _uiPopover = __webpack_require__(10);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiSelect = __webpack_require__(13);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function initialize(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title-extended\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new _uiPopover2.default.View({\n            title: \"Upload configuration\",\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // handle click event\n        this.$symbol.on(\"click\", function () {\n            self._removeRow();\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", function (e) {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", function () {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", function () {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", function () {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_size\", function () {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", function () {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", function () {\n            self.remove();\n        });\n    },\n\n    render: function render() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(_utils2.default.bytesToString(options.file_size));\n        this.$mode.removeClass().addClass(\"upload-mode\").addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text.css({\n                width: this.$el.width() - 16 + \"px\",\n                top: this.$el.height() - 8 + \"px\"\n            }).show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function _refreshInfo() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function _refreshPercentage() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: percentage + \"%\" });\n        this.$percentage.html(percentage != 100 ? percentage + \"%\" : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function _refreshStatus() {\n        var status = this.model.get(\"status\");\n        this.$symbol.removeClass().addClass(\"upload-symbol\").addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function _refreshFileSize() {\n        this.$size.html(_utils2.default.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function _removeRow() {\n        if ([\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !== -1) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function _showSettings() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new _uploadSettings2.default(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function _template(options) {\n        return '<tr id=\"upload-row-' + options.id + '\" class=\"upload-row\">' + \"<td>\" + '<div class=\"upload-text-column\">' + '<div class=\"upload-mode\"/>' + '<div class=\"upload-title-extended\"/>' + '<div class=\"upload-text\">' + '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' + '<textarea class=\"upload-text-content form-control\"/>' + \"</div>\" + \"</div>\" + \"</td>\" + \"<td>\" + '<div class=\"upload-size\"/>' + \"</td>\" + \"<td>\" + '<div class=\"upload-info\">' + '<div class=\"upload-info-text\"/>' + '<div class=\"upload-info-progress progress\">' + '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' + '<div class=\"upload-percentage\">0%</div>' + \"</div>\" + \"</div>\" + \"</td>\" + \"<td>\" + '<div class=\"upload-symbol ' + this.status_classes.init + '\"/>' + \"</td>\" + \"</tr>\";\n    }\n}); /** Renders the collection uploader rows */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n    return {\n        tool: \"fa-wrench\",\n        data_input: \"fa-file-o\",\n        data_collection_input: \"fa-folder-o\",\n        subworkflow: \"fa-sitemap fa-rotate-270\",\n        pause: \"fa-pause\"\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _optionsMenu = __webpack_require__(150);\n\nvar _optionsMenu2 = _interopRequireDefault(_optionsMenu);\n\nvar _historyViewEditCurrent = __webpack_require__(151);\n\nvar _historyViewEditCurrent2 = _interopRequireDefault(_historyViewEditCurrent);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** the right hand panel in the analysis page that shows the current history */\nvar HistoryPanel = Backbone.View.extend({\n    initialize: function initialize(page, options) {\n        var self = this;\n        this.userIsAnonymous = Galaxy.user.isAnonymous();\n        this.allow_user_dataset_purge = options.config.allow_user_dataset_purge;\n        this.root = options.root;\n\n        // view of the current history\n        this.historyView = new _historyViewEditCurrent2.default.CurrentHistoryView({\n            className: _historyViewEditCurrent2.default.CurrentHistoryView.prototype.className + \" middle\",\n            purgeAllowed: this.allow_user_dataset_purge,\n            linkTarget: \"galaxy_main\"\n        });\n\n        // add history panel to Galaxy object\n        Galaxy.currHistoryPanel = this.historyView;\n        Galaxy.currHistoryPanel.listenToGalaxy(Galaxy);\n\n        // build buttons\n        this.buttonRefresh = new _uiMisc2.default.ButtonLink({\n            id: \"history-refresh-button\",\n            title: \"Refresh history\",\n            cls: \"panel-header-button\",\n            icon: \"fa fa-refresh\",\n            onclick: function onclick() {\n                self.historyView.loadCurrentHistory();\n            }\n        });\n        this.buttonOptions = new _uiMisc2.default.ButtonLink({\n            id: \"history-options-button\",\n            title: \"History options\",\n            cls: \"panel-header-button\",\n            target: \"galaxy_main\",\n            icon: \"fa fa-cog\",\n            href: this.root + \"root/history_options\"\n        });\n        this.buttonViewMulti = new _uiMisc2.default.ButtonLink({\n            id: \"history-view-multi-button\",\n            title: \"View all histories\",\n            cls: \"panel-header-button\",\n            icon: \"fa fa-columns\",\n            href: this.root + \"history/view_multiple\"\n        });\n\n        // define components\n        this.model = new Backbone.Model({\n            cls: \"history-right-panel\",\n            title: (0, _localization2.default)(\"History\"),\n            buttons: [this.buttonRefresh, this.buttonOptions, this.buttonViewMulti]\n        });\n\n        // build body template and connect history view\n        this.setElement(this._template());\n        this.historyView.setElement(this.$el);\n        this.historyView.connectToQuotaMeter(Galaxy.quotaMeter);\n        this.historyView.loadCurrentHistory();\n\n        // fetch to update the quota meter adding 'current' for any anon-user's id\n        Galaxy.listenTo(this.historyView, \"history-size-change\", function () {\n            Galaxy.user.fetch({\n                url: Galaxy.user.urlRoot() + \"/\" + (Galaxy.user.id || \"current\")\n            });\n        });\n    },\n\n    render: function render() {\n        this.optionsMenu = (0, _optionsMenu2.default)(this.buttonOptions.$el, {\n            anonymous: this.userIsAnonymous,\n            purgeAllowed: this.allow_user_dataset_purge,\n            root: this.root\n        });\n        this.buttonViewMulti.$el[!this.userIsAnonymous ? \"show\" : \"hide\"]();\n    },\n\n    /** add history view div */\n    _template: function _template(data) {\n        return ['<div id=\"current-history-panel\" class=\"history-panel middle\"/>'].join(\"\");\n    },\n\n    toString: function toString() {\n        return \"historyPanel\";\n    }\n});\n\nexports.default = HistoryPanel;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _popupMenu = __webpack_require__(27);\n\nvar _popupMenu2 = _interopRequireDefault(_popupMenu);\n\nvar _copyDialog = __webpack_require__(78);\n\nvar _copyDialog2 = _interopRequireDefault(_copyDialog);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nvar _webhooks = __webpack_require__(17);\n\nvar _webhooks2 = _interopRequireDefault(_webhooks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// ============================================================================\nvar menu = [{\n    html: (0, _localization2.default)(\"History Lists\"),\n    header: true\n}, {\n    html: (0, _localization2.default)(\"Saved Histories\"),\n    href: \"histories/list\",\n    target: \"_top\"\n}, {\n    html: (0, _localization2.default)(\"Histories Shared with Me\"),\n    href: \"histories/list_shared\",\n    target: \"_top\"\n}, {\n    html: (0, _localization2.default)(\"Current History\"),\n    header: true,\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Create New\"),\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel) {\n            Galaxy.currHistoryPanel.createNewHistory();\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Copy History\"),\n    func: function func() {\n        (0, _copyDialog2.default)(Galaxy.currHistoryPanel.model).done(function () {\n            Galaxy.currHistoryPanel.loadCurrentHistory();\n        });\n    }\n}, {\n    html: (0, _localization2.default)(\"Share or Publish\"),\n    href: \"history/sharing\"\n}, {\n    html: (0, _localization2.default)(\"Show Structure\"),\n    href: \"history/display_structured\",\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Extract Workflow\"),\n    href: \"workflow/build_from_current_history\"\n}, {\n    html: (0, _localization2.default)(\"Delete\"),\n    anon: true,\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel && confirm((0, _localization2.default)(\"Really delete the current history?\"))) {\n            Galaxy.currHistoryPanel.model._delete().done(function () {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Delete Permanently\"),\n    purge: true,\n    anon: true,\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel && confirm((0, _localization2.default)(\"Really delete the current history permanently? This cannot be undone.\"))) {\n            Galaxy.currHistoryPanel.model.purge().done(function () {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Dataset Actions\"),\n    header: true,\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Copy Datasets\"),\n    href: \"dataset/copy_datasets\"\n}, {\n    html: (0, _localization2.default)(\"Dataset Security\"),\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel && Galaxy.router) {\n            Galaxy.router.push(\"/histories/permissions?id=\" + Galaxy.currHistoryPanel.model.id);\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Resume Paused Jobs\"),\n    href: \"history/resume_paused_jobs?current=True\",\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Collapse Expanded Datasets\"),\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel) {\n            Galaxy.currHistoryPanel.collapseAll();\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Unhide Hidden Datasets\"),\n    anon: true,\n    func: function func() {\n        // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n        if (Galaxy && Galaxy.currHistoryPanel && confirm((0, _localization2.default)(\"Really unhide all hidden datasets?\"))) {\n            $.post(Galaxy.root + \"history/adjust_hidden\", { user_action: \"unhide\" }, function () {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Delete Hidden Datasets\"),\n    anon: true,\n    func: function func() {\n        // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n        if (Galaxy && Galaxy.currHistoryPanel && confirm((0, _localization2.default)(\"Really delete all hidden datasets?\"))) {\n            $.post(Galaxy.root + \"history/adjust_hidden\", { user_action: \"delete\" }, function () {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Purge Deleted Datasets\"),\n    confirm: (0, _localization2.default)(\"Really delete all deleted datasets permanently? This cannot be undone.\"),\n    href: \"history/purge_deleted_datasets\",\n    purge: true,\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Downloads\"),\n    header: true\n}, {\n    html: (0, _localization2.default)(\"Export Tool Citations\"),\n    href: \"history/citations\",\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Export History to File\"),\n    href: \"history/export_archive?preview=True\",\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Other Actions\"),\n    header: true\n}, {\n    html: (0, _localization2.default)(\"Import from File\"),\n    href: \"history/import_archive\"\n}];\n\n// Webhooks\n_webhooks2.default.add({\n    url: \"api/webhooks/history-menu/all\",\n    async: false, // (hypothetically) slows down the performance\n    callback: function callback(webhooks) {\n        var webhooks_menu = [];\n\n        $.each(webhooks.models, function (index, model) {\n            var webhook = model.toJSON();\n            if (webhook.activate) {\n                webhooks_menu.push({\n                    html: (0, _localization2.default)(webhook.config.title),\n                    // func: function() {},\n                    anon: true\n                });\n            }\n        });\n\n        if (webhooks_menu.length > 0) {\n            webhooks_menu.unshift({\n                html: (0, _localization2.default)(\"Webhooks\"),\n                header: true\n            });\n            $.merge(menu, webhooks_menu);\n        }\n    }\n});\n\nfunction buildMenu(isAnon, purgeAllowed, urlRoot) {\n    return _.clone(menu).filter(function (menuOption) {\n        if (isAnon && !menuOption.anon) {\n            return false;\n        }\n        if (!purgeAllowed && menuOption.purge) {\n            return false;\n        }\n\n        //TODO:?? hard-coded galaxy_main\n        if (menuOption.href) {\n            menuOption.href = urlRoot + menuOption.href;\n            menuOption.target = menuOption.target || \"galaxy_main\";\n        }\n\n        if (menuOption.confirm) {\n            menuOption.func = function () {\n                if (confirm(menuOption.confirm)) {\n                    galaxy_main.location = menuOption.href;\n                }\n            };\n        }\n        return true;\n    });\n}\n\nvar create = function create($button, options) {\n    options = options || {};\n    var isAnon = options.anonymous === undefined ? true : options.anonymous,\n        purgeAllowed = options.purgeAllowed || false,\n        menu = buildMenu(isAnon, purgeAllowed, Galaxy.root);\n    //console.debug( 'menu:', menu );\n    return new _popupMenu2.default($button, menu);\n};\n\n// ============================================================================\nexports.default = create;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, $, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _historyModel = __webpack_require__(38);\n\nvar _historyModel2 = _interopRequireDefault(_historyModel);\n\nvar _historyViewEdit = __webpack_require__(153);\n\nvar _historyViewEdit2 = _interopRequireDefault(_historyViewEdit);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// ============================================================================\n/** session storage for history panel preferences (and to maintain state)\n */\nvar HistoryViewPrefs = _baseMvc2.default.SessionStorageModel.extend(\n/** @lends HistoryViewPrefs.prototype */{\n    defaults: {\n        /** should the tags editor be shown or hidden initially? */\n        tagsEditorShown: false,\n        /** should the annotation editor be shown or hidden initially? */\n        annotationEditorShown: false,\n        ///** what is the currently focused content (dataset or collection) in the current history?\n        // *      (the history panel will highlight and scroll to the focused content view)\n        // */\n        //focusedContentId : null\n        /** Current scroll position */\n        scrollPosition: 0\n    },\n    toString: function toString() {\n        return \"HistoryViewPrefs(\" + JSON.stringify(this.toJSON()) + \")\";\n    }\n});\n\n/** key string to store panel prefs (made accessible on class so you can access sessionStorage directly) */\nHistoryViewPrefs.storageKey = function storageKey() {\n    return \"history-panel\";\n};\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = _historyViewEdit2.default.HistoryViewEdit;\n// used in root/index.mako\n/** @class View/Controller for the user's current history model as used in the history\n *      panel (current right hand panel) of the analysis page.\n *\n *  The only history panel that:\n *      will poll for updates.\n *      displays datasets in reverse hid order.\n */\nvar CurrentHistoryView = _super.extend(\n/** @lends CurrentHistoryView.prototype */{\n    className: _super.prototype.className + \" current-history-panel\",\n\n    /** override to use drilldown (and not foldout) for how collections are displayed */\n    HDCAViewClass: _super.prototype.HDCAViewClass.extend({\n        foldoutStyle: \"drilldown\"\n    }),\n\n    emptyMsg: [(0, _localization2.default)(\"This history is empty\"), \". \", (0, _localization2.default)(\"You can \"), '<a class=\"uploader-link\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"load your own data\"), \"</a>\", (0, _localization2.default)(\" or \"), '<a class=\"get-data-link\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"get data from an external source\"), \"</a>\"].join(\"\"),\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events */\n    initialize: function initialize(attributes) {\n        attributes = attributes || {};\n\n        // ---- persistent preferences\n        /** maintain state / preferences over page loads */\n        this.preferences = new HistoryViewPrefs(_.extend({\n            id: HistoryViewPrefs.storageKey()\n        }, _.pick(attributes, _.keys(HistoryViewPrefs.prototype.defaults))));\n\n        _super.prototype.initialize.call(this, attributes);\n\n        /** sub-views that will overlay this panel (collections) */\n        this.panelStack = [];\n\n        /** id of currently focused content */\n        this.currentContentId = attributes.currentContentId || null;\n        //NOTE: purposely not sent to localstorage since panel recreation roughly lines up with a reset of this value\n    },\n\n    /** Override to cache the current scroll position with a listener */\n    _setUpListeners: function _setUpListeners() {\n        _super.prototype._setUpListeners.call(this);\n\n        var panel = this;\n        // reset scroll position when there's a new history\n        this.on(\"new-model\", function () {\n            panel.preferences.set(\"scrollPosition\", 0);\n        });\n    },\n\n    // ------------------------------------------------------------------------ loading history/item models\n    // TODO: next three more appropriate moved to the app level\n    /** (re-)loads the user's current history & contents w/ details */\n    loadCurrentHistory: function loadCurrentHistory() {\n        return this.loadHistory(null, {\n            url: Galaxy.root + \"history/current_history_json\"\n        });\n    },\n\n    /** loads a history & contents w/ details and makes them the current history */\n    switchToHistory: function switchToHistory(historyId, attributes) {\n        if (Galaxy.user.isAnonymous()) {\n            this.trigger(\"error\", (0, _localization2.default)(\"You must be logged in to switch histories\"), (0, _localization2.default)(\"Anonymous user\"));\n            return $.when();\n        }\n        return this.loadHistory(historyId, {\n            url: Galaxy.root + \"history/set_as_current?id=\" + historyId\n        });\n    },\n\n    /** creates a new history on the server and sets it as the user's current history */\n    createNewHistory: function createNewHistory(attributes) {\n        if (Galaxy.user.isAnonymous()) {\n            this.trigger(\"error\", (0, _localization2.default)(\"You must be logged in to create histories\"), (0, _localization2.default)(\"Anonymous user\"));\n            return $.when();\n        }\n        return this.loadHistory(null, {\n            url: Galaxy.root + \"history/create_new_current\"\n        });\n    },\n\n    /** release/free/shutdown old models and set up panel for new models */\n    setModel: function setModel(model, attributes, render) {\n        _super.prototype.setModel.call(this, model, attributes, render);\n        if (this.model && this.model.id) {\n            this.log(\"checking for updates\");\n            this.model.checkForUpdates();\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ history/content event listening\n    /** listening for history events */\n    _setUpModelListeners: function _setUpModelListeners() {\n        _super.prototype._setUpModelListeners.call(this);\n        // re-broadcast any model change events so that listeners don't have to re-bind to each history\n        return this.listenTo(this.model, {\n            \"change:nice_size change:size\": function changeNice_sizeChangeSize() {\n                this.trigger(\"history-size-change\", this, this.model, arguments);\n            },\n            \"change:id\": function changeId() {\n                this.once(\"loading-done\", function () {\n                    this.model.checkForUpdates();\n                });\n            }\n        });\n    },\n\n    /** listening for collection events */\n    _setUpCollectionListeners: function _setUpCollectionListeners() {\n        _super.prototype._setUpCollectionListeners.call(this);\n        // if a hidden item is created (gen. by a workflow), moves thru the updater to the ready state,\n        //  then: remove it from the collection if the panel is set to NOT show hidden datasets\n        this.listenTo(this.collection, \"state:ready\", function (model, newState, oldState) {\n            if (!model.get(\"visible\") && !this.collection.storage.includeHidden()) {\n                this.removeItemView(model);\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** override to add a handler to capture the scroll position when the parent scrolls */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        $where = $where || this.$el;\n        // console.log( '_setUpBehaviors', this.$scrollContainer( $where ).get(0), this.$list( $where ) );\n        // we need to call this in _setUpBehaviors which is called after render since the $el\n        // may not be attached to $el.parent and $scrollContainer() may not work\n        var panel = this;\n        _super.prototype._setUpBehaviors.call(panel, $where);\n\n        // cache the handler to remove and re-add so we don't pile up the handlers\n        if (!this._debouncedScrollCaptureHandler) {\n            this._debouncedScrollCaptureHandler = _.debounce(function scrollCapture() {\n                // cache the scroll position (only if visible)\n                if (panel.$el.is(\":visible\")) {\n                    panel.preferences.set(\"scrollPosition\", $(this).scrollTop());\n                }\n            }, 40);\n        }\n\n        panel.$scrollContainer($where).off(\"scroll\", this._debouncedScrollCaptureHandler).on(\"scroll\", this._debouncedScrollCaptureHandler);\n        return panel;\n    },\n\n    /** In this override, handle null models and move the search input to the top */\n    _buildNewRender: function _buildNewRender() {\n        if (!this.model) {\n            return $();\n        }\n        var $newRender = _super.prototype._buildNewRender.call(this);\n        $newRender.find(\".search\").prependTo($newRender.find(\"> .controls\"));\n        this._renderQuotaMessage($newRender);\n        return $newRender;\n    },\n\n    /** render the message displayed when a user is over quota and can't run jobs */\n    _renderQuotaMessage: function _renderQuotaMessage($whereTo) {\n        $whereTo = $whereTo || this.$el;\n        return $(this.templates.quotaMsg({}, this)).prependTo($whereTo.find(\".messages\"));\n    },\n\n    /** In this override, get and set current panel preferences when editor is used */\n    _renderTags: function _renderTags($where) {\n        var panel = this;\n        // render tags and show/hide based on preferences\n        _super.prototype._renderTags.call(panel, $where);\n        if (panel.preferences.get(\"tagsEditorShown\")) {\n            panel.tagsEditor.toggle(true);\n        }\n        // store preference when shown or hidden\n        panel.listenTo(panel.tagsEditor, \"hiddenUntilActivated:shown hiddenUntilActivated:hidden\", function (tagsEditor) {\n            panel.preferences.set(\"tagsEditorShown\", tagsEditor.hidden);\n        });\n    },\n\n    /** In this override, get and set current panel preferences when editor is used */\n    _renderAnnotation: function _renderAnnotation($where) {\n        var panel = this;\n        // render annotation and show/hide based on preferences\n        _super.prototype._renderAnnotation.call(panel, $where);\n        if (panel.preferences.get(\"annotationEditorShown\")) {\n            panel.annotationEditor.toggle(true);\n        }\n        // store preference when shown or hidden\n        panel.listenTo(panel.annotationEditor, \"hiddenUntilActivated:shown hiddenUntilActivated:hidden\", function (annotationEditor) {\n            panel.preferences.set(\"annotationEditorShown\", annotationEditor.hidden);\n        });\n    },\n\n    /** Override to scroll to cached position (in prefs) after swapping */\n    _swapNewRender: function _swapNewRender($newRender) {\n        _super.prototype._swapNewRender.call(this, $newRender);\n        var panel = this;\n        _.delay(function () {\n            var pos = panel.preferences.get(\"scrollPosition\");\n            if (pos) {\n                panel.scrollTo(pos, 0);\n            }\n        }, 10);\n        //TODO: is this enough of a delay on larger histories?\n\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** Override to add the current-content highlight class to currentContentId's view */\n    _attachItems: function _attachItems($whereTo) {\n        _super.prototype._attachItems.call(this, $whereTo);\n        var panel = this;\n        if (panel.currentContentId) {\n            panel._setCurrentContentById(panel.currentContentId);\n        }\n        return this;\n    },\n\n    /** Override to remove any drill down panels */\n    addItemView: function addItemView(model, collection, options) {\n        var view = _super.prototype.addItemView.call(this, model, collection, options);\n        if (!view) {\n            return view;\n        }\n        if (this.panelStack.length) {\n            return this._collapseDrilldownPanel();\n        }\n        return view;\n    },\n\n    // ------------------------------------------------------------------------ collection sub-views\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners: function _setUpItemViewListeners(view) {\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call(panel, view);\n        // use pub-sub to: handle drilldown expansion and collapse\n        return panel.listenTo(view, {\n            \"expanded:drilldown\": function expandedDrilldown(v, drilldown) {\n                this._expandDrilldownPanel(drilldown);\n            },\n            \"collapsed:drilldown\": function collapsedDrilldown(v, drilldown) {\n                this._collapseDrilldownPanel(drilldown);\n            }\n        });\n    },\n\n    /** display 'current content': add a visible highlight and store the id of a content item */\n    setCurrentContent: function setCurrentContent(view) {\n        this.$(\".history-content.current-content\").removeClass(\"current-content\");\n        if (view) {\n            view.$el.addClass(\"current-content\");\n            this.currentContentId = view.model.id;\n        } else {\n            this.currentContentId = null;\n        }\n    },\n\n    /** find the view with the id and then call setCurrentContent on it */\n    _setCurrentContentById: function _setCurrentContentById(id) {\n        var view = this.viewFromModelId(id) || null;\n        this.setCurrentContent(view);\n    },\n\n    /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n    _expandDrilldownPanel: function _expandDrilldownPanel(drilldown) {\n        this.panelStack.push(drilldown);\n        // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n        this.$controls().add(this.$list()).hide();\n        drilldown.parentName = this.model.get(\"name\");\n        drilldown.delegateEvents().render().$el.appendTo(this.$el);\n    },\n\n    /** Handle drilldown close by freeing the panel and re-rendering this panel */\n    _collapseDrilldownPanel: function _collapseDrilldownPanel(drilldown) {\n        this.panelStack.pop();\n        //TODO: MEM: free the panel\n        this.$controls().add(this.$list()).show();\n    },\n\n    // ........................................................................ panel events\n    /** event map */\n    events: _.extend(_.clone(_super.prototype.events), {\n        // the two links in the empty message\n        \"click .uploader-link\": function clickUploaderLink(ev) {\n            Galaxy.upload.show(ev);\n        },\n        \"click .get-data-link\": function clickGetDataLink(ev) {\n            var $toolMenu = $(\".toolMenuContainer\");\n            $toolMenu.parent().scrollTop(0);\n            $toolMenu.find('span:contains(\"Get Data\")').click();\n        }\n    }),\n\n    // ........................................................................ external objects/MVC\n    listenToGalaxy: function listenToGalaxy(galaxy) {\n        this.listenTo(galaxy, {\n            // when the galaxy_main iframe is loaded with a new page,\n            // compare the url to the following list and if there's a match\n            // pull the id from url and indicate in the history view that\n            // the dataset with that id is the 'current'ly active dataset\n            \"center-frame:load\": function centerFrameLoad(data) {\n                var pathToMatch = data.fullpath;\n                var hdaId = null;\n                var useToURLRegexMap = {\n                    display: /datasets\\/([a-f0-9]+)\\/display/,\n                    edit: /datasets\\/([a-f0-9]+)\\/edit/,\n                    report_error: /dataset\\/errors\\?id=([a-f0-9]+)/,\n                    rerun: /tool_runner\\/rerun\\?id=([a-f0-9]+)/,\n                    show_params: /datasets\\/([a-f0-9]+)\\/show_params/\n                    // no great way to do this here? (leave it in the dataset event handlers above?)\n                    // 'visualization' : 'visualization',\n                };\n                _.find(useToURLRegexMap, function (regex, use) {\n                    // grab the more specific match result (1), save, and use it as the find flag\n                    hdaId = _.result(pathToMatch.match(regex), 1);\n                    return hdaId;\n                });\n                // need to type mangle to go from web route to history contents\n                this._setCurrentContentById(hdaId ? \"dataset-\" + hdaId : null);\n            },\n            // when the center panel is given a new view, clear the current indicator\n            \"center-panel:load\": function centerPanelLoad(view) {\n                this._setCurrentContentById();\n            }\n        });\n    },\n\n    //TODO: remove quota meter from panel and remove this\n    /** add listeners to an external quota meter (mvc/user/user-quotameter.js) */\n    connectToQuotaMeter: function connectToQuotaMeter(quotaMeter) {\n        if (!quotaMeter) {\n            return this;\n        }\n        // show/hide the 'over quota message' in the history when the meter tells it to\n        this.listenTo(quotaMeter, \"quota:over\", this.showQuotaMessage);\n        this.listenTo(quotaMeter, \"quota:under\", this.hideQuotaMessage);\n\n        // having to add this to handle re-render of hview while overquota (the above do not fire)\n        this.on(\"rendered rendered:initial\", function () {\n            if (quotaMeter && quotaMeter.isOverQuota()) {\n                this.showQuotaMessage();\n            }\n        });\n        return this;\n    },\n\n    /** Override to preserve the quota message */\n    clearMessages: function clearMessages(ev) {\n        var $target = !_.isUndefined(ev) ? $(ev.currentTarget) : this.$messages().children('[class$=\"message\"]');\n        $target = $target.not(\".quota-message\");\n        $target.fadeOut(this.fxSpeed, function () {\n            $(this).remove();\n        });\n        return this;\n    },\n\n    /** Show the over quota message (which happens to be in the history panel).\n    */\n    showQuotaMessage: function showQuotaMessage() {\n        var $msg = this.$(\".quota-message\");\n        if ($msg.is(\":hidden\")) {\n            $msg.slideDown(this.fxSpeed);\n        }\n    },\n\n    /** Hide the over quota message (which happens to be in the history panel).\n    */\n    hideQuotaMessage: function hideQuotaMessage() {\n        var $msg = this.$(\".quota-message\");\n        if (!$msg.is(\":hidden\")) {\n            $msg.slideUp(this.fxSpeed);\n        }\n    },\n\n    // ........................................................................ options menu\n    //TODO: remove to batch\n    /** unhide any hidden datasets */\n    unhideHidden: function unhideHidden() {\n        var self = this;\n        if (confirm((0, _localization2.default)(\"Really unhide all hidden datasets?\"))) {\n            // get all hidden, regardless of deleted/purged\n            return self.model.contents._filterAndUpdate({ visible: false, deleted: \"\", purged: \"\" }, { visible: true }).done(function () {\n                // TODO: would be better to render these as they're unhidden instead of all at once\n                if (!self.model.contents.includeHidden) {\n                    self.renderItems();\n                }\n            });\n        }\n        return jQuery.when();\n    },\n\n    /** delete any hidden datasets */\n    deleteHidden: function deleteHidden() {\n        var self = this;\n        if (confirm((0, _localization2.default)(\"Really delete all hidden datasets?\"))) {\n            return self.model.contents._filterAndUpdate(\n            // get all hidden, regardless of deleted/purged\n            { visible: false, deleted: \"\", purged: \"\" },\n            // both delete *and* unhide them\n            { deleted: true, visible: true });\n        }\n        return jQuery.when();\n    },\n\n    /** Return a string rep of the history */\n    toString: function toString() {\n        return \"CurrentHistoryView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//------------------------------------------------------------------------------ TEMPLATES\nCurrentHistoryView.prototype.templates = function () {\n    var quotaMsgTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"quota-message errormessage\">', (0, _localization2.default)(\"You are over your disk quota\"), \". \", (0, _localization2.default)(\"Tool execution is on hold until your disk usage drops below your allocated quota\"), \".\", \"</div>\"], \"history\");\n    return _.extend(_.clone(_super.prototype.templates), {\n        quotaMsg: quotaMsgTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    CurrentHistoryView: CurrentHistoryView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n    //ASSUMES: jquery\n    //=============================================================================\n    /** @class AjaxQueue\n    *  Class that allows queueing functions that return jQuery promises (such\n    *  as ajax calls). Each function waits for the previous to complete before\n    *  being called\n    *\n    *  @constructor accepts a list of functions and automatically begins\n    *      processing them\n    */\n    function AjaxQueue(initialFunctions) {\n        //TODO: possibly rename to DeferredQueue\n        var self = this;\n        /** the main deferred for the entire queue - note: also sends notifications of progress */\n        self.deferred = jQuery.Deferred();\n        /** the queue array of functions */\n        self.queue = [];\n        /** cache the response from each deferred call - error or success */\n        self.responses = [];\n        /** total number of fn's to process */\n        self.numToProcess = 0;\n        /** is the queue processing/waiting for any calls to return? */\n        self.running = false;\n\n        self.init(initialFunctions || []);\n        self.start();\n\n        return self;\n    }\n\n    /** add all fns in initialFunctions (if any) to the queue */\n    AjaxQueue.prototype.init = function init(initialFunctions) {\n        var self = this;\n        initialFunctions.forEach(function (fn) {\n            self.add(fn);\n        });\n    };\n\n    /** add a fn to the queue */\n    AjaxQueue.prototype.add = function add(fn) {\n        //console.debug( 'AjaxQueue.prototype.add:', fn );\n        var self = this,\n            index = this.queue.length;\n        this.numToProcess += 1;\n\n        this.queue.push(function () {\n            var fnIndex = index,\n                xhr = fn();\n            // if successful, notify using the deferred to allow tracking progress\n            xhr.done(function (response) {\n                self.deferred.notify({\n                    curr: fnIndex,\n                    total: self.numToProcess,\n                    response: response\n                });\n            });\n            // (regardless of previous error or success) if not last ajax call, shift and call the next\n            //  if last fn, resolve deferred\n            xhr.always(function (response) {\n                self.responses.push(response);\n                if (self.queue.length) {\n                    self.queue.shift()();\n                } else {\n                    self.stop();\n                }\n            });\n        });\n        return this;\n    };\n\n    /** start processing the queue */\n    AjaxQueue.prototype.start = function start() {\n        if (this.queue.length) {\n            this.running = true;\n            this.queue.shift()();\n        }\n        return this;\n    };\n\n    /** stop the queue\n    *  @param {boolean} causeFail  cause an error/fail on the main deferred\n    *  @param {String} msg         message to send when rejecting the main deferred\n    */\n    AjaxQueue.prototype.stop = function stop(causeFail, msg) {\n        //TODO: doesn't abort current call\n        this.running = false;\n        this.queue = [];\n        if (causeFail) {\n            //TODO: spliced args instead\n            this.deferred.reject(msg);\n        } else {\n            this.deferred.resolve(this.responses);\n        }\n        this.numToProcess = 0;\n        this.deferred = jQuery.Deferred();\n        return this;\n    };\n\n    // only a handful of the deferred interface for now - possible YAGNI\n    /** implement done from the jq deferred interface */\n    AjaxQueue.prototype.done = function done(fn) {\n        return this.deferred.done(fn);\n    };\n    /** implement fail from the jq deferred interface */\n    AjaxQueue.prototype.fail = function fail(fn) {\n        return this.deferred.fail(fn);\n    };\n    /** implement always from the jq deferred interface */\n    AjaxQueue.prototype.always = function always(fn) {\n        return this.deferred.always(fn);\n    };\n    /** implement progress from the jq deferred interface */\n    AjaxQueue.prototype.progress = function progress(fn) {\n        return this.deferred.progress(fn);\n    };\n\n    /** shortcut constructor / fire and forget\n    *  @returns {Deferred} the queue's main deferred\n    */\n    AjaxQueue.create = function create(initialFunctions) {\n        return new AjaxQueue(initialFunctions).deferred;\n    };\n\n    //=============================================================================\n    /** @class NamedAjaxQueue\n    *  @augments AjaxQueue\n    *  Allows associating a name with a deferring fn and prevents adding deferring\n    *  fns if the name has already been used. Useful to prevent build up of duplicate\n    *  async calls.\n    *  Both the array initialFunctions sent to constructor and any added later with\n    *  add() should be objects (NOT functions) of the form:\n    *  { name: some unique id,\n    *    fn:   the deferring fn or ajax call }\n    */\n    function NamedAjaxQueue(initialFunctions) {\n        var self = this;\n        self.names = {};\n        AjaxQueue.call(this, initialFunctions);\n        return self;\n    }\n    NamedAjaxQueue.prototype = new AjaxQueue();\n    NamedAjaxQueue.prototype.constructor = NamedAjaxQueue;\n\n    /** add the obj.fn to the queue if obj.name hasn't been used before */\n    NamedAjaxQueue.prototype.add = function add(obj) {\n        //console.debug( 'NamedAjaxQueue.adding:', obj )\n        //console.debug( 'NamedAjaxQueue.prototype.add:', obj );\n        if (!(obj.hasOwnProperty(\"name\") && obj.hasOwnProperty(\"fn\"))) {\n            throw new Error('NamedAjaxQueue.add requires an object with both \"name\" and \"fn\": ' + JSON.stringify(obj));\n        }\n        if (this.names.hasOwnProperty(obj.name)) {\n            //console.warn( 'name has been used:', obj.name );\n            return;\n        }\n        this.names[obj.name] = true;\n        //console.debug( '\\t names: ', this.names )\n        return AjaxQueue.prototype.add.call(this, obj.fn);\n        //console.debug( '\\t queue: ', this.queue.length );\n    };\n\n    /** override to remove names */\n    NamedAjaxQueue.prototype.clear = function clear() {\n        this.names = {};\n        return this;\n    };\n\n    /** shortcut constructor / fire and forget\n    *  @returns {Deferred} the queue's main deferred\n    */\n    NamedAjaxQueue.create = function create(initialFunctions) {\n        return new NamedAjaxQueue(initialFunctions).deferred;\n    };\n\n    //=============================================================================\n    return {\n        AjaxQueue: AjaxQueue,\n        NamedAjaxQueue: NamedAjaxQueue\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _historyView = __webpack_require__(154);\n\nvar _historyView2 = _interopRequireDefault(_historyView);\n\nvar _historyContents = __webpack_require__(39);\n\nvar _historyContents2 = _interopRequireDefault(_historyContents);\n\nvar _states = __webpack_require__(11);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _hdaModel = __webpack_require__(81);\n\nvar _hdaModel2 = _interopRequireDefault(_hdaModel);\n\nvar _hdaLiEdit = __webpack_require__(156);\n\nvar _hdaLiEdit2 = _interopRequireDefault(_hdaLiEdit);\n\nvar _hdcaLiEdit = __webpack_require__(157);\n\nvar _hdcaLiEdit2 = _interopRequireDefault(_hdcaLiEdit);\n\nvar _tag = __webpack_require__(22);\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _annotation = __webpack_require__(88);\n\nvar _annotation2 = _interopRequireDefault(_annotation);\n\nvar _listCollectionCreator = __webpack_require__(35);\n\nvar _listCollectionCreator2 = _interopRequireDefault(_listCollectionCreator);\n\nvar _pairCollectionCreator = __webpack_require__(160);\n\nvar _pairCollectionCreator2 = _interopRequireDefault(_pairCollectionCreator);\n\nvar _listOfPairsCollectionCreator = __webpack_require__(161);\n\nvar _listOfPairsCollectionCreator2 = _interopRequireDefault(_listOfPairsCollectionCreator);\n\nvar _faIconButton = __webpack_require__(14);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _popupMenu = __webpack_require__(27);\n\nvar _popupMenu2 = _interopRequireDefault(_popupMenu);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(15);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = _historyView2.default.HistoryView;\n// base class for history-view-edit-current and used as-is in history/view.mako\n/** @class Editable View/Controller for the history model.\n *\n *  Allows:\n *      (everything HistoryView allows)\n *      changing the name\n *      displaying and editing tags and annotations\n *      multi-selection and operations on mulitple content items\n */\nvar HistoryViewEdit = _super.extend(\n/** @lends HistoryViewEdit.prototype */{\n    /** class to use for constructing the HistoryDatasetAssociation views */\n    HDAViewClass: _hdaLiEdit2.default.HDAListItemEdit,\n    /** class to use for constructing the HistoryDatasetCollectionAssociation views */\n    HDCAViewClass: _hdcaLiEdit2.default.HDCAListItemEdit,\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n    *  @param {Object} attributes\n    */\n    initialize: function initialize(attributes) {\n        attributes = attributes || {};\n        _super.prototype.initialize.call(this, attributes);\n\n        // ---- set up instance vars\n        /** editor for tags - sub-view */\n        this.tagsEditor = null;\n\n        /** enable drag and drop - sub-view */\n        this.dragItems = true;\n\n        /** editor for annotations - sub-view */\n        this.annotationEditor = null;\n\n        /** allow user purge of dataset files? */\n        this.purgeAllowed = attributes.purgeAllowed || false;\n\n        // states/modes the panel can be in\n        /** is the panel currently showing the dataset selection controls? */\n        this.annotationEditorShown = attributes.annotationEditorShown || false;\n        this.tagsEditorShown = attributes.tagsEditorShown || false;\n    },\n\n    /** Override to handle history as drag-drop target */\n    _setUpListeners: function _setUpListeners() {\n        _super.prototype._setUpListeners.call(this);\n        return this.on({\n            \"droptarget:drop\": function droptargetDrop(ev, data) {\n                // process whatever was dropped and re-hide the drop target\n                this.dataDropped(data);\n                this.dropTargetOff();\n            },\n            \"view:attached view:removed\": function viewAttachedViewRemoved() {\n                this._renderCounts();\n            },\n            \"search:loading-progress\": this._renderSearchProgress,\n            \"search:searching\": this._renderSearchFindings\n        });\n    },\n\n    // ------------------------------------------------------------------------ listeners\n    /** listening for history and HDA events */\n    _setUpModelListeners: function _setUpModelListeners() {\n        _super.prototype._setUpModelListeners.call(this);\n        this.listenTo(this.model, \"change:size\", this.updateHistoryDiskSize);\n        return this;\n    },\n\n    /** listening for collection events */\n    _setUpCollectionListeners: function _setUpCollectionListeners() {\n        _super.prototype._setUpCollectionListeners.call(this);\n        this.listenTo(this.collection, {\n            \"change:deleted\": this._handleItemDeletedChange,\n            \"change:visible\": this._handleItemVisibleChange,\n            \"change:purged\": function changePurged(model) {\n                // hafta get the new nice-size w/o the purged model\n                this.model.fetch();\n            },\n            // loading indicators for deleted/hidden\n            \"fetching-deleted\": function fetchingDeleted(collection) {\n                this.$(\"> .controls .deleted-count\").html(\"<i>\" + (0, _localization2.default)(\"loading...\") + \"</i>\");\n            },\n            \"fetching-hidden\": function fetchingHidden(collection) {\n                this.$(\"> .controls .hidden-count\").html(\"<i>\" + (0, _localization2.default)(\"loading...\") + \"</i>\");\n            },\n            \"fetching-deleted-done fetching-hidden-done\": this._renderCounts\n        });\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** In this override, add tag and annotation editors and a btn to toggle the selectors */\n    _buildNewRender: function _buildNewRender() {\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = _super.prototype._buildNewRender.call(this);\n        if (!this.model) {\n            return $newRender;\n        }\n\n        if (Galaxy && Galaxy.user && Galaxy.user.id && Galaxy.user.id === this.model.get(\"user_id\")) {\n            this._renderTags($newRender);\n            this._renderAnnotation($newRender);\n        }\n        return $newRender;\n    },\n\n    /** Update the history size display (curr. upper right of panel). */\n    updateHistoryDiskSize: function updateHistoryDiskSize() {\n        this.$(\".history-size\").text(this.model.get(\"nice_size\"));\n    },\n\n    /** override to render counts when the items are rendered */\n    renderItems: function renderItems($whereTo) {\n        var views = _super.prototype.renderItems.call(this, $whereTo);\n        if (!this.searchFor) {\n            this._renderCounts($whereTo);\n        } else {\n            this._renderSearchFindings($whereTo);\n        }\n        return views;\n    },\n\n    /** override to show counts, what's deleted/hidden, and links to toggle those */\n    _renderCounts: function _renderCounts($whereTo) {\n        $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n        var html = this.templates.counts(this.model.toJSON(), this);\n        return $whereTo.find(\"> .controls .subtitle\").html(html);\n    },\n\n    /** render the tags sub-view controller */\n    _renderTags: function _renderTags($where) {\n        var panel = this;\n        this.tagsEditor = new _tag2.default.TagsEditor({\n            model: this.model,\n            el: $where.find(\".controls .tags-display\"),\n            onshowFirstTime: function onshowFirstTime() {\n                this.render();\n            },\n            // show hide sub-view tag editors when this is shown/hidden\n            onshow: function onshow() {\n                panel.toggleHDATagEditors(true, panel.fxSpeed);\n            },\n            onhide: function onhide() {\n                panel.toggleHDATagEditors(false, panel.fxSpeed);\n            },\n            $activator: (0, _faIconButton2.default)({\n                title: (0, _localization2.default)(\"Edit history tags\"),\n                classes: \"history-tag-btn\",\n                faIcon: \"fa-tags\"\n            }).appendTo($where.find(\".controls .actions\"))\n        });\n    },\n    /** render the annotation sub-view controller */\n    _renderAnnotation: function _renderAnnotation($where) {\n        var panel = this;\n        this.annotationEditor = new _annotation2.default.AnnotationEditor({\n            model: this.model,\n            el: $where.find(\".controls .annotation-display\"),\n            onshowFirstTime: function onshowFirstTime() {\n                this.render();\n            },\n            // show hide sub-view view annotation editors when this is shown/hidden\n            onshow: function onshow() {\n                panel.toggleHDAAnnotationEditors(true, panel.fxSpeed);\n            },\n            onhide: function onhide() {\n                panel.toggleHDAAnnotationEditors(false, panel.fxSpeed);\n            },\n            $activator: (0, _faIconButton2.default)({\n                title: (0, _localization2.default)(\"Edit history annotation\"),\n                classes: \"history-annotate-btn\",\n                faIcon: \"fa-comment\"\n            }).appendTo($where.find(\".controls .actions\"))\n        });\n    },\n\n    /** Set up HistoryViewEdit js/widget behaviours\n    *  In this override, make the name editable\n    */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        $where = $where || this.$el;\n        _super.prototype._setUpBehaviors.call(this, $where);\n        if (!this.model) {\n            return;\n        }\n\n        // anon users shouldn't have access to any of the following\n        if (!Galaxy.user || Galaxy.user.isAnonymous() || Galaxy.user.id !== this.model.get(\"user_id\")) {\n            return;\n        }\n\n        var panel = this,\n            nameSelector = \"> .controls .name\";\n        $where.find(nameSelector).attr(\"title\", (0, _localization2.default)(\"Click to rename history\")).tooltip({ placement: \"bottom\" }).make_text_editable({\n            on_finish: function on_finish(newName) {\n                var previousName = panel.model.get(\"name\");\n                if (newName && newName !== previousName) {\n                    panel.$el.find(nameSelector).text(newName);\n                    panel.model.save({ name: newName }).fail(function () {\n                        panel.$el.find(nameSelector).text(panel.model.previous(\"name\"));\n                    });\n                } else {\n                    panel.$el.find(nameSelector).text(previousName);\n                }\n            }\n        });\n    },\n\n    /** return a new popup menu for choosing a multi selection action\n    *  ajax calls made for multiple datasets are queued\n    */\n    multiselectActions: function multiselectActions() {\n        var panel = this,\n            actions = [{\n            html: (0, _localization2.default)(\"Hide datasets\"),\n            func: function func() {\n                var action = _hdaModel2.default.HistoryDatasetAssociation.prototype.hide;\n                panel.getSelectedModels().ajaxQueue(action);\n            }\n        }, {\n            html: (0, _localization2.default)(\"Unhide datasets\"),\n            func: function func() {\n                var action = _hdaModel2.default.HistoryDatasetAssociation.prototype.unhide;\n                panel.getSelectedModels().ajaxQueue(action);\n            }\n        }, {\n            html: (0, _localization2.default)(\"Delete datasets\"),\n            func: function func() {\n                var action = _hdaModel2.default.HistoryDatasetAssociation.prototype[\"delete\"];\n                panel.getSelectedModels().ajaxQueue(action);\n            }\n        }, {\n            html: (0, _localization2.default)(\"Undelete datasets\"),\n            func: function func() {\n                var action = _hdaModel2.default.HistoryDatasetAssociation.prototype.undelete;\n                panel.getSelectedModels().ajaxQueue(action);\n            }\n        }];\n        if (panel.purgeAllowed) {\n            actions.push({\n                html: (0, _localization2.default)(\"Permanently delete datasets\"),\n                func: function func() {\n                    if (confirm((0, _localization2.default)(\"This will permanently remove the data in your datasets. Are you sure?\"))) {\n                        var action = _hdaModel2.default.HistoryDatasetAssociation.prototype.purge;\n                        panel.getSelectedModels().ajaxQueue(action);\n                    }\n                }\n            });\n        }\n        actions = actions.concat(panel._collectionActions());\n        return actions;\n    },\n\n    /**   */\n    _collectionActions: function _collectionActions() {\n        var panel = this;\n        return [{\n            html: (0, _localization2.default)(\"Build Dataset List\"),\n            func: function func() {\n                panel.buildCollection(\"list\");\n            }\n        },\n        // TODO: Only show quick pair if two things selected.\n        {\n            html: (0, _localization2.default)(\"Build Dataset Pair\"),\n            func: function func() {\n                panel.buildCollection(\"paired\");\n            }\n        }, {\n            html: (0, _localization2.default)(\"Build List of Dataset Pairs\"),\n            func: function func() {\n                panel.buildCollection(\"list:paired\");\n            }\n        }];\n    },\n\n    buildCollection: function buildCollection(collectionType, selection, hideSourceItems) {\n        var panel = this;\n        var selection = selection || panel.getSelectedModels();\n        var hideSourceItems = hideSourceItems || false;\n        var createFunc;\n        if (collectionType == \"list\") {\n            createFunc = _listCollectionCreator2.default.createListCollection;\n        } else if (collectionType == \"paired\") {\n            createFunc = _pairCollectionCreator2.default.createPairCollection;\n        } else if (collectionType == \"list:paired\") {\n            createFunc = _listOfPairsCollectionCreator2.default.createListOfPairsCollection;\n        } else {\n            console.warn(\"Unknown collectionType encountered \" + collectionType);\n        }\n        createFunc(selection, hideSourceItems).done(function () {\n            panel.model.refresh();\n        });\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** In this override, add purgeAllowed and whether tags/annotation editors should be shown */\n    _getItemViewOptions: function _getItemViewOptions(model) {\n        var options = _super.prototype._getItemViewOptions.call(this, model);\n        _.extend(options, {\n            purgeAllowed: this.purgeAllowed,\n            tagsEditorShown: this.tagsEditor && !this.tagsEditor.hidden,\n            annotationEditorShown: this.annotationEditor && !this.annotationEditor.hidden\n        });\n        return options;\n    },\n\n    /** If this item is deleted and we're not showing deleted items, remove the view\n    *  @param {Model} the item model to check\n    */\n    _handleItemDeletedChange: function _handleItemDeletedChange(itemModel) {\n        if (itemModel.get(\"deleted\")) {\n            this._handleItemDeletion(itemModel);\n        } else {\n            this._handleItemUndeletion(itemModel);\n        }\n        this._renderCounts();\n    },\n\n    _handleItemDeletion: function _handleItemDeletion(itemModel) {\n        var contentsShown = this.model.get(\"contents_active\");\n        contentsShown.deleted += 1;\n        contentsShown.active -= 1;\n        if (!this.model.contents.includeDeleted) {\n            this.removeItemView(itemModel);\n        }\n        this.model.set(\"contents_active\", contentsShown);\n    },\n\n    _handleItemUndeletion: function _handleItemUndeletion(itemModel) {\n        var contentsShown = this.model.get(\"contents_active\");\n        contentsShown.deleted -= 1;\n        if (!this.model.contents.includeDeleted) {\n            contentsShown.active -= 1;\n        }\n        this.model.set(\"contents_active\", contentsShown);\n    },\n\n    /** If this item is hidden and we're not showing hidden items, remove the view\n    *  @param {Model} the item model to check\n    */\n    _handleItemVisibleChange: function _handleItemVisibleChange(itemModel) {\n        if (itemModel.hidden()) {\n            this._handleItemHidden(itemModel);\n        } else {\n            this._handleItemUnhidden(itemModel);\n        }\n        this._renderCounts();\n    },\n\n    _handleItemHidden: function _handleItemHidden(itemModel) {\n        var contentsShown = this.model.get(\"contents_active\");\n        contentsShown.hidden += 1;\n        contentsShown.active -= 1;\n        if (!this.model.contents.includeHidden) {\n            this.removeItemView(itemModel);\n        }\n        this.model.set(\"contents_active\", contentsShown);\n    },\n\n    _handleItemUnhidden: function _handleItemUnhidden(itemModel) {\n        var contentsShown = this.model.get(\"contents_active\");\n        contentsShown.hidden -= 1;\n        if (!this.model.contents.includeHidden) {\n            contentsShown.active -= 1;\n        }\n        this.model.set(\"contents_active\", contentsShown);\n    },\n\n    /** toggle the visibility of each content's tagsEditor applying all the args sent to this function */\n    toggleHDATagEditors: function toggleHDATagEditors(showOrHide, speed) {\n        _.each(this.views, function (view) {\n            if (view.tagsEditor) {\n                view.tagsEditor.toggle(showOrHide, speed);\n            }\n        });\n    },\n\n    /** toggle the visibility of each content's annotationEditor applying all the args sent to this function */\n    toggleHDAAnnotationEditors: function toggleHDAAnnotationEditors(showOrHide, speed) {\n        _.each(this.views, function (view) {\n            if (view.annotationEditor) {\n                view.annotationEditor.toggle(showOrHide, speed);\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .show-selectors-btn\": \"toggleSelectors\",\n        \"click .toggle-deleted-link\": function clickToggleDeletedLink(ev) {\n            this.toggleShowDeleted();\n        },\n        \"click .toggle-hidden-link\": function clickToggleHiddenLink(ev) {\n            this.toggleShowHidden();\n        }\n    }),\n\n    // ------------------------------------------------------------------------ search\n    _renderSearchProgress: function _renderSearchProgress(limit, offset) {\n        var stop = limit + offset;\n        return this.$(\"> .controls .subtitle\").html([\"<i>\", (0, _localization2.default)(\"Searching \"), stop, \"/\", this.model.contentsShown(), \"</i>\"].join(\"\"));\n    },\n\n    /** override to display number found in subtitle */\n    _renderSearchFindings: function _renderSearchFindings($whereTo) {\n        $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n        var html = this.templates.found(this.model.toJSON(), this);\n        $whereTo.find(\"> .controls .subtitle\").html(html);\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ as drop target\n    /** turn all the drag and drop handlers on and add some help text above the drop area */\n    dropTargetOn: function dropTargetOn() {\n        if (this.dropTarget) {\n            return this;\n        }\n        this.dropTarget = true;\n\n        //TODO: to init\n        var dropHandlers = {\n            dragenter: _.bind(this.dragenter, this),\n            dragover: _.bind(this.dragover, this),\n            dragleave: _.bind(this.dragleave, this),\n            drop: _.bind(this.drop, this)\n        };\n\n        var $dropTarget = this._renderDropTarget();\n        this.$list().before([this._renderDropTargetHelp(), $dropTarget]);\n        for (var evName in dropHandlers) {\n            if (dropHandlers.hasOwnProperty(evName)) {\n                //console.debug( evName, dropHandlers[ evName ] );\n                $dropTarget.on(evName, dropHandlers[evName]);\n            }\n        }\n        return this;\n    },\n\n    /** render a box to serve as a 'drop here' area on the history */\n    _renderDropTarget: function _renderDropTarget() {\n        this.$(\".history-drop-target\").remove();\n        return $(\"<div/>\").addClass(\"history-drop-target\");\n    },\n\n    /** tell the user how it works  */\n    _renderDropTargetHelp: function _renderDropTargetHelp() {\n        this.$(\".history-drop-target-help\").remove();\n        return $(\"<div/>\").addClass(\"history-drop-target-help\").text((0, _localization2.default)(\"Drag datasets here to copy them to the current history\"));\n    },\n\n    /** shut down drag and drop event handlers and remove drop target */\n    dropTargetOff: function dropTargetOff() {\n        if (!this.dropTarget) {\n            return this;\n        }\n        //this.log( 'dropTargetOff' );\n        this.dropTarget = false;\n        var dropTarget = this.$(\".history-drop-target\").get(0);\n        for (var evName in this._dropHandlers) {\n            if (this._dropHandlers.hasOwnProperty(evName)) {\n                dropTarget.off(evName, this._dropHandlers[evName]);\n            }\n        }\n        this.$(\".history-drop-target\").remove();\n        this.$(\".history-drop-target-help\").remove();\n        return this;\n    },\n    /** toggle the target on/off */\n    dropTargetToggle: function dropTargetToggle() {\n        if (this.dropTarget) {\n            this.dropTargetOff();\n        } else {\n            this.dropTargetOn();\n        }\n        return this;\n    },\n\n    dragenter: function dragenter(ev) {\n        //console.debug( 'dragenter:', this, ev );\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.$(\".history-drop-target\").css(\"border\", \"2px solid black\");\n    },\n    dragover: function dragover(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n    },\n    dragleave: function dragleave(ev) {\n        //console.debug( 'dragleave:', this, ev );\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.$(\".history-drop-target\").css(\"border\", \"1px dashed black\");\n    },\n    /** when (text) is dropped try to parse as json and trigger an event */\n    drop: function drop(ev) {\n        ev.preventDefault();\n        //ev.stopPropagation();\n\n        var self = this;\n        var dataTransfer = ev.originalEvent.dataTransfer;\n        var data = dataTransfer.getData(\"text\");\n\n        dataTransfer.dropEffect = \"move\";\n        try {\n            data = JSON.parse(data);\n        } catch (err) {\n            self.warn(\"error parsing JSON from drop:\", data);\n        }\n\n        self.trigger(\"droptarget:drop\", ev, data, self);\n        return false;\n    },\n\n    /** handler that copies data into the contents */\n    dataDropped: function dataDropped(data) {\n        var self = this;\n        // HDA: dropping will copy it to the history\n        if (_.isObject(data) && data.model_class === \"HistoryDatasetAssociation\" && data.id) {\n            if (self.contents.currentPage !== 0) {\n                return self.contents.fetchPage(0).then(function () {\n                    return self.model.contents.copy(data.id);\n                });\n            }\n            return self.model.contents.copy(data.id);\n        }\n        return jQuery.when();\n    },\n\n    // ........................................................................ misc\n    /** Return a string rep of the history */\n    toString: function toString() {\n        return \"HistoryViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryViewEdit.prototype.templates = function () {\n    var countsTemplate = _baseMvc2.default.wrapTemplate([\"<% var shown = Math.max( view.views.length, history.contents_active.active ) %>\", \"<% if( shown ){ %>\", '<span class=\"shown-count\">', \"<%- shown %> \", (0, _localization2.default)(\"shown\"), \"</span>\", \"<% } %>\", \"<% if( history.contents_active.deleted ){ %>\", '<span class=\"deleted-count\">', \"<% if( view.model.contents.includeDeleted ){ %>\", '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"hide deleted\"), \"</a>\", \"<% } else { %>\", \"<%- history.contents_active.deleted %> \", '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"deleted\"), \"</a>\", \"<% } %>\", \"</span>\", \"<% } %>\", \"<% if( history.contents_active.hidden ){ %>\", '<span class=\"hidden-count\">', \"<% if( view.model.contents.includeHidden ){ %>\", '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"hide hidden\"), \"</a>\", \"<% } else { %>\", \"<%- history.contents_active.hidden %> \", '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"hidden\"), \"</a>\", \"<% } %>\", \"</span>\", \"<% } %>\"], \"history\");\n\n    var foundTemplate = _baseMvc2.default.wrapTemplate([(0, _localization2.default)(\"Found\"), \" <%- view.views.length %>, \", \"<% if( history.contents_active.deleted ){ %>\", \"<% if( view.model.contents.includeDeleted ){ %>\", '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"hide deleted\"), \"</a>, \", \"<% } else { %>\", '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"show deleted\"), \"</a>, \", \"<% } %>\", \"<% } %>\", \"<% if( history.contents_active.hidden ){ %>\", \"<% if( view.model.contents.includeHidden ){ %>\", '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"hide hidden\"), \"</a>\", \"<% } else { %>\", '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"show hidden\"), \"</a>\", \"<% } %>\", \"<% } %>\"], \"history\");\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        counts: countsTemplate,\n        found: foundTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    HistoryViewEdit: HistoryViewEdit\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listView = __webpack_require__(82);\n\nvar _listView2 = _interopRequireDefault(_listView);\n\nvar _historyModel = __webpack_require__(38);\n\nvar _historyModel2 = _interopRequireDefault(_historyModel);\n\nvar _historyContents = __webpack_require__(39);\n\nvar _historyContents2 = _interopRequireDefault(_historyContents);\n\nvar _historyPreferences = __webpack_require__(40);\n\nvar _historyPreferences2 = _interopRequireDefault(_historyPreferences);\n\nvar _hdaLi = __webpack_require__(84);\n\nvar _hdaLi2 = _interopRequireDefault(_hdaLi);\n\nvar _hdcaLi = __webpack_require__(85);\n\nvar _hdcaLi2 = _interopRequireDefault(_hdcaLi);\n\nvar _userModel = __webpack_require__(59);\n\nvar _userModel2 = _interopRequireDefault(_userModel);\n\nvar _errorModal = __webpack_require__(79);\n\nvar _errorModal2 = _interopRequireDefault(_errorModal);\n\nvar _faIconButton = __webpack_require__(14);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(83);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class  non-editable, read-only View/Controller for a history model.\n *  Allows:\n *      changing the loaded history\n *      displaying data, info, and download\n *      tracking history attrs: size, tags, annotations, name, etc.\n *  Does not allow:\n *      changing the name\n */\nvar _super = _listView2.default.ModelListPanel;\nvar HistoryView = _super.extend(\n/** @lends HistoryView.prototype */{\n    _logNamespace: \"history\",\n\n    /** class to use for constructing the HDA views */\n    HDAViewClass: _hdaLi2.default.HDAListItemView,\n    /** class to use for constructing the HDCA views */\n    HDCAViewClass: _hdcaLi2.default.HDCAListItemView,\n    /** class to used for constructing collection of sub-view models */\n    collectionClass: _historyContents2.default.HistoryContents,\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey: \"contents\",\n\n    tagName: \"div\",\n    className: _super.prototype.className + \" history-panel\",\n\n    /** string to display when the collection is empty */\n    emptyMsg: (0, _localization2.default)(\"This history is empty\"),\n    /** displayed when no items match the search terms */\n    noneFoundMsg: (0, _localization2.default)(\"No matching datasets found\"),\n    /** string used for search placeholder */\n    searchPlaceholder: (0, _localization2.default)(\"search datasets\"),\n\n    /** @type {Number} ms to wait after history load to fetch/decorate hdcas with element_count */\n    FETCH_COLLECTION_COUNTS_DELAY: 2000,\n\n    // ......................................................................... SET UP\n    /** Set up the view, bind listeners.\n    *  @param {Object} attributes optional settings for the panel\n    */\n    initialize: function initialize(attributes) {\n        _super.prototype.initialize.call(this, attributes);\n        // ---- instance vars\n        // control contents/behavior based on where (and in what context) the panel is being used\n        /** where should pages from links be displayed? (default to new tab/window) */\n        this.linkTarget = attributes.linkTarget || \"_blank\";\n\n        /** timeout id for detailed fetch of collection counts, etc... */\n        this.detailedFetchTimeoutId = null;\n    },\n\n    /** create and return a collection for when none is initially passed */\n    _createDefaultCollection: function _createDefaultCollection() {\n        // override\n        return new this.collectionClass([], {\n            history: this.model\n        });\n    },\n\n    /** In this override, clear the update timer on the model */\n    freeModel: function freeModel() {\n        _super.prototype.freeModel.call(this);\n        if (this.model) {\n            this.model.clearUpdateTimeout();\n        }\n        this._clearDetailedFetchTimeout();\n        return this;\n    },\n\n    /** clear the timeout and the cached timeout id */\n    _clearDetailedFetchTimeout: function _clearDetailedFetchTimeout() {\n        if (this.detailedFetchTimeoutId) {\n            clearTimeout(this.detailedFetchTimeoutId);\n            this.detailedFetchTimeoutId = null;\n        }\n    },\n\n    /** create any event listeners for the panel\n    *  @fires: rendered:initial    on the first render\n    *  @fires: empty-history       when switching to a history with no contents or creating a new history\n    */\n    _setUpListeners: function _setUpListeners() {\n        _super.prototype._setUpListeners.call(this);\n        this.on({\n            error: function error(model, xhr, options, msg, details) {\n                this.errorHandler(model, xhr, options, msg, details);\n            },\n            \"loading-done\": function loadingDone() {\n                var self = this;\n                // after the initial load, decorate with more time consuming fields (like HDCA element_counts)\n                self.detailedFetchTimeoutId = _.delay(function () {\n                    self.detailedFetchTimeoutId = null;\n                    self.model.contents.fetchCollectionCounts();\n                }, self.FETCH_COLLECTION_COUNTS_DELAY);\n            },\n            \"views:ready view:attached view:removed\": function viewsReadyViewAttachedViewRemoved(view) {\n                this._renderSelectButton();\n            },\n            \"view:attached\": function viewAttached(view) {\n                this.scrollTo(0);\n            }\n        });\n        // this.on( 'all', function(){ console.debug( arguments ); });\n    },\n\n    // ------------------------------------------------------------------------ loading history/hda models\n    /** load the history with the given id then it's contents, sending ajax options to both */\n    loadHistory: function loadHistory(historyId, options, contentsOptions) {\n        contentsOptions = _.extend(contentsOptions || { silent: true });\n        this.info(\"loadHistory:\", historyId, options, contentsOptions);\n        var self = this;\n        self.setModel(new _historyModel2.default.History({ id: historyId }));\n\n        contentsOptions.silent = true;\n        self.trigger(\"loading\");\n        return self.model.fetchWithContents(options, contentsOptions).always(function () {\n            self.render();\n            self.trigger(\"loading-done\");\n        });\n    },\n\n    /** convenience alias to the model. Updates the item list only (not the history) */\n    refreshContents: function refreshContents(options) {\n        if (this.model) {\n            return this.model.refresh(options);\n        }\n        // may have callbacks - so return an empty promise\n        return $.when();\n    },\n\n    /** Override to reset web storage when the id changes (since it needs the id) */\n    _setUpCollectionListeners: function _setUpCollectionListeners() {\n        _super.prototype._setUpCollectionListeners.call(this);\n        return this.listenTo(this.collection, {\n            // 'all' : function(){ console.log( this.collection + ':', arguments ); },\n            \"fetching-more\": function fetchingMore() {\n                this._toggleContentsLoadingIndicator(true);\n                this.$emptyMessage().hide();\n            },\n            \"fetching-more-done\": function fetchingMoreDone() {\n                this._toggleContentsLoadingIndicator(false);\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n    _showLoadingIndicator: function _showLoadingIndicator(msg, speed, callback) {\n        var $indicator = $('<div class=\"loading-indicator\"/>');\n        this.$el.html($indicator.text(msg).slideDown(!_.isUndefined(speed) ? speed : this.fxSpeed));\n    },\n\n    /** hide the loading indicator */\n    _hideLoadingIndicator: function _hideLoadingIndicator(speed) {\n        // make speed a bit slower to compensate for slow rendering of up to 500 contents\n        this.$(\".loading-indicator\").slideUp(!_.isUndefined(speed) ? speed : this.fxSpeed + 200, function () {\n            $(this).remove();\n        });\n    },\n\n    /** In this override, add a btn to toggle the selectors */\n    _buildNewRender: function _buildNewRender() {\n        var $newRender = _super.prototype._buildNewRender.call(this);\n        this._renderSelectButton($newRender);\n        return $newRender;\n    },\n\n    /** button for starting select mode */\n    _renderSelectButton: function _renderSelectButton($where) {\n        $where = $where || this.$el;\n        // do not render selector option if no actions\n        if (!this.multiselectActions().length) {\n            return null;\n        }\n        // do not render (and remove even) if nothing to select\n        if (!this.views.length) {\n            this.hideSelectors();\n            $where.find(\".controls .actions .show-selectors-btn\").remove();\n            return null;\n        }\n        // don't bother rendering if there's one already\n        var $existing = $where.find(\".controls .actions .show-selectors-btn\");\n        if ($existing.length) {\n            return $existing;\n        }\n\n        return (0, _faIconButton2.default)({\n            title: (0, _localization2.default)(\"Operations on multiple datasets\"),\n            classes: \"show-selectors-btn\",\n            faIcon: \"fa-check-square-o\"\n        }).prependTo($where.find(\".controls .actions\"));\n    },\n\n    /** override to avoid showing intial empty message using contents_active */\n    _renderEmptyMessage: function _renderEmptyMessage($whereTo) {\n        var self = this;\n        var $emptyMsg = self.$emptyMessage($whereTo);\n\n        var empty = self.model.get(\"contents_active\").active <= 0;\n        if (empty) {\n            return $emptyMsg.empty().append(self.emptyMsg).show();\n        } else if (self.searchFor && self.model.contents.haveSearchDetails() && !self.views.length) {\n            return $emptyMsg.empty().append(self.noneFoundMsg).show();\n        }\n        $emptyMsg.hide();\n        return $();\n    },\n\n    /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n    $scrollContainer: function $scrollContainer($where) {\n        // override or set via attributes.$scrollContainer\n        return this.$list($where);\n    },\n\n    // ------------------------------------------------------------------------ subviews\n    _toggleContentsLoadingIndicator: function _toggleContentsLoadingIndicator(show) {\n        if (!show) {\n            this.$list().find(\".contents-loading-indicator\").remove();\n        } else {\n            this.$list().html('<div class=\"contents-loading-indicator\">' + '<span class=\"fa fa-2x fa-spinner fa-spin\"/></div>');\n        }\n    },\n\n    /** override to render pagination also */\n    renderItems: function renderItems($whereTo) {\n        // console.log( this + '.renderItems-----------------', new Date() );\n        $whereTo = $whereTo || this.$el;\n        var self = this;\n        var $list = self.$list($whereTo);\n\n        // TODO: bootstrap hack to remove orphaned tooltips\n        $(\".tooltip\").remove();\n\n        $list.empty();\n        self.views = [];\n\n        var models = self._filterCollection();\n        if (models.length) {\n            self._renderPagination($whereTo);\n            self.views = self._renderSomeItems(models, $list);\n        } else {\n            // TODO: consolidate with _renderPagination above by (???) passing in models/length?\n            $whereTo.find(\"> .controls .list-pagination\").empty();\n        }\n        self._renderEmptyMessage($whereTo).toggle(!models.length);\n\n        self.trigger(\"views:ready\", self.views);\n        return self.views;\n    },\n\n    /** render pagination controls if not searching and contents says we're paginating */\n    _renderPagination: function _renderPagination($whereTo) {\n        var $paginationControls = $whereTo.find(\"> .controls .list-pagination\");\n        if (this.searchFor || !this.model.contents.shouldPaginate()) return $paginationControls.empty();\n\n        $paginationControls.html(this.templates.pagination({\n            // pagination is 1-based for the user\n            current: this.model.contents.currentPage + 1,\n            last: this.model.contents.getLastPage() + 1\n        }, this));\n        $paginationControls.find(\"select.pages\").tooltip();\n        return $paginationControls;\n    },\n\n    /** render a subset of the entire collection (client-side pagination) */\n    _renderSomeItems: function _renderSomeItems(models, $list) {\n        var self = this;\n        var views = [];\n        $list.append(models.map(function (m) {\n            var view = self._createItemView(m);\n            views.push(view);\n            return self._renderItemView$el(view);\n        }));\n        return views;\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** in this override, check if the contents would also display based on includeDeleted/hidden */\n    _filterItem: function _filterItem(model) {\n        var self = this;\n        var contents = self.model.contents;\n        return (contents.includeHidden || !model.hidden()) && (contents.includeDeleted || !model.isDeletedOrPurged()) && _super.prototype._filterItem.call(self, model);\n    },\n\n    /** In this override, since history contents are mixed,\n    *      get the appropo view class based on history_content_type\n    */\n    _getItemViewClass: function _getItemViewClass(model) {\n        var contentType = model.get(\"history_content_type\");\n        switch (contentType) {\n            case \"dataset\":\n                return this.HDAViewClass;\n            case \"dataset_collection\":\n                return this.HDCAViewClass;\n        }\n        throw new TypeError(\"Unknown history_content_type: \" + contentType);\n    },\n\n    /** in this override, add a linktarget, and expand if id is in web storage */\n    _getItemViewOptions: function _getItemViewOptions(model) {\n        var options = _super.prototype._getItemViewOptions.call(this, model);\n        return _.extend(options, {\n            linkTarget: this.linkTarget,\n            expanded: this.model.contents.storage.isExpanded(model.id),\n            hasUser: this.model.ownedByCurrUser()\n        });\n    },\n\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners: function _setUpItemViewListeners(view) {\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call(panel, view);\n        //TODO: send from content view: this.model.collection.storage.addExpanded\n        // maintain a list of items whose bodies are expanded\n        return panel.listenTo(view, {\n            expanded: function expanded(v) {\n                panel.model.contents.storage.addExpanded(v.model);\n            },\n            collapsed: function collapsed(v) {\n                panel.model.contents.storage.removeExpanded(v.model);\n            }\n        });\n    },\n\n    /** override to remove expandedIds from webstorage */\n    collapseAll: function collapseAll() {\n        this.model.contents.storage.clearExpanded();\n        _super.prototype.collapseAll.call(this);\n    },\n\n    // ------------------------------------------------------------------------ selection\n    /** Override to correctly set the historyId of the new collection */\n    getSelectedModels: function getSelectedModels() {\n        var collection = _super.prototype.getSelectedModels.call(this);\n        collection.historyId = this.collection.historyId;\n        return collection;\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .show-selectors-btn\": \"toggleSelectors\",\n        \"click > .controls .prev\": \"_clickPrevPage\",\n        \"click > .controls .next\": \"_clickNextPage\",\n        \"change > .controls .pages\": \"_changePageSelect\",\n        // allow (error) messages to be clicked away\n        \"click .messages [class$=message]\": \"clearMessages\"\n    }),\n\n    _clickPrevPage: function _clickPrevPage(ev) {\n        this.model.clearUpdateTimeout();\n        this.model.contents.fetchPrevPage();\n    },\n\n    _clickNextPage: function _clickNextPage(ev) {\n        this.model.clearUpdateTimeout();\n        this.model.contents.fetchNextPage();\n    },\n\n    _changePageSelect: function _changePageSelect(ev) {\n        this.model.clearUpdateTimeout();\n        var page = $(ev.currentTarget).val();\n        this.model.contents.fetchPage(page);\n    },\n\n    /** Toggle and store the deleted visibility and re-render items\n    * @returns {Boolean} new setting\n    */\n    toggleShowDeleted: function toggleShowDeleted(show, options) {\n        show = show !== undefined ? show : !this.model.contents.includeDeleted;\n        var self = this;\n        var contents = self.model.contents;\n        contents.setIncludeDeleted(show, options);\n        self.trigger(\"show-deleted\", show);\n\n        contents.fetchCurrentPage({ renderAll: true });\n        return show;\n    },\n\n    /** Toggle and store whether to render explicity hidden contents\n    * @returns {Boolean} new setting\n    */\n    toggleShowHidden: function toggleShowHidden(show, store, options) {\n        // console.log( 'toggleShowHidden', show, store );\n        show = show !== undefined ? show : !this.model.contents.includeHidden;\n        var self = this;\n        var contents = self.model.contents;\n        contents.setIncludeHidden(show, options);\n        self.trigger(\"show-hidden\", show);\n\n        contents.fetchCurrentPage({ renderAll: true });\n        return show;\n    },\n\n    /** On the first search, if there are no details - load them, then search */\n    _firstSearch: function _firstSearch(searchFor) {\n        var self = this;\n        var inputSelector = \"> .controls .search-input\";\n        this.log(\"onFirstSearch\", searchFor);\n\n        // if the contents already have enough details to search, search and return now\n        if (self.model.contents.haveSearchDetails()) {\n            self.searchItems(searchFor);\n            return;\n        }\n\n        // otherwise, load the details progressively here\n        self.$(inputSelector).searchInput(\"toggle-loading\");\n        // set this now so that only results will show during progress\n        self.searchFor = searchFor;\n        var xhr = self.model.contents.progressivelyFetchDetails({ silent: true }).progress(function (response, limit, offset) {\n            self.renderItems();\n            self.trigger(\"search:loading-progress\", limit, offset);\n        }).always(function () {\n            self.$el.find(inputSelector).searchInput(\"toggle-loading\");\n        }).done(function () {\n            self.searchItems(searchFor, \"force\");\n        });\n    },\n\n    /** clear the search filters and show all views that are normally shown */\n    clearSearch: function clearSearch(searchFor) {\n        var self = this;\n        if (!self.searchFor) return self;\n        //self.log( 'onSearchClear', self );\n        self.searchFor = \"\";\n        self.trigger(\"search:clear\", self);\n        self.$(\"> .controls .search-query\").val(\"\");\n        // NOTE: silent + render prevents collection update event with merge only\n        // - which causes an empty page due to event handler above\n        self.model.contents.fetchCurrentPage({ silent: true }).done(function () {\n            self.renderItems();\n        });\n        return self;\n    },\n\n    // ........................................................................ error handling\n    /** Event handler for errors (from the panel, the history, or the history's contents)\n    *  Alternately use two strings for model and xhr to use custom message and title (respectively)\n    *  @param {Model or View} model    the (Backbone) source of the error\n    *  @param {XMLHTTPRequest} xhr     any ajax obj. assoc. with the error\n    *  @param {Object} options         the options map commonly used with bbone ajax\n    */\n    errorHandler: function errorHandler(model, xhr, options) {\n        //TODO: to mixin or base model\n        // interrupted ajax or no connection\n        if (xhr && xhr.status === 0 && xhr.readyState === 0) {\n            // return ERROR_MODAL.offlineErrorModal();\n            // fail silently\n            return;\n        }\n        // otherwise, leave something to report in the console\n        this.error(model, xhr, options);\n        // and feedback to a modal\n        // if sent two strings (and possibly details as 'options'), use those as message and title\n        if (_.isString(model) && _.isString(xhr)) {\n            var message = model;\n            var title = xhr;\n            return _errorModal2.default.errorModal(message, title, options);\n        }\n        // bad gateway\n        // TODO: possibly to global handler\n        if (xhr && xhr.status === 502) {\n            return _errorModal2.default.badGatewayErrorModal();\n        }\n        return _errorModal2.default.ajaxErrorModal(model, xhr, options);\n    },\n\n    /** Remove all messages from the panel. */\n    clearMessages: function clearMessages(ev) {\n        var $target = !_.isUndefined(ev) ? $(ev.currentTarget) : this.$messages().children('[class$=\"message\"]');\n        $target.fadeOut(this.fxSpeed, function () {\n            $(this).remove();\n        });\n        return this;\n    },\n\n    // ........................................................................ scrolling\n    /** Scrolls the panel to show the content sub-view with the given hid.\n    *  @param {Integer} hid    the hid of item to scroll into view\n    *  @returns {HistoryView} the panel\n    */\n    scrollToHid: function scrollToHid(hid) {\n        return this.scrollToItem(_.first(this.viewsWhereModel({ hid: hid })));\n    },\n\n    // ........................................................................ misc\n    /** utility for adding -st, -nd, -rd, -th to numbers */\n    ordinalIndicator: function ordinalIndicator(number) {\n        var numStr = number + \"\";\n        switch (numStr.charAt(numStr.length - 1)) {\n            case \"1\":\n                return numStr + \"st\";\n            case \"2\":\n                return numStr + \"nd\";\n            case \"3\":\n                return numStr + \"rd\";\n            default:\n                return numStr + \"th\";\n        }\n    },\n\n    /** Return a string rep of the history */\n    toString: function toString() {\n        return \"HistoryView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryView.prototype.templates = function () {\n    var mainTemplate = _baseMvc2.default.wrapTemplate([\n    // temp container\n    \"<div>\", '<div class=\"controls\"></div>', '<ul class=\"list-items\"></ul>', '<div class=\"empty-message infomessagesmall\"></div>', \"</div>\"]);\n\n    var controlsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"controls\">', '<div class=\"title\">', '<div class=\"name\"><%- history.name %></div>', \"</div>\", '<div class=\"subtitle\"></div>', '<div class=\"history-size\"><%- history.nice_size %></div>', '<div class=\"actions\"></div>', '<div class=\"messages\">', \"<% if( history.deleted && history.purged ){ %>\", '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This history has been purged and deleted\"), \"</div>\", \"<% } else if( history.deleted ){ %>\", '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This history has been deleted\"), \"</div>\", \"<% } else if( history.purged ){ %>\", '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This history has been purged\"), \"</div>\", \"<% } %>\", \"<% if( history.message ){ %>\",\n    // should already be localized\n    '<div class=\"<%= history.message.level || \"info\" %>messagesmall\">', \"<%= history.message.text %>\", \"</div>\", \"<% } %>\", \"</div>\",\n\n    // add tags and annotations\n    '<div class=\"tags-display\"></div>', '<div class=\"annotation-display\"></div>', '<div class=\"search\">', '<div class=\"search-input\"></div>', \"</div>\", '<div class=\"list-actions\">', '<div class=\"btn-group\">', '<button class=\"select-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"All\"), \"</button>\", '<button class=\"deselect-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"None\"), \"</button>\", \"</div>\", '<div class=\"list-action-menu btn-group\">', \"</div>\", \"</div>\", '<div class=\"list-pagination form-inline\"></div>', \"</div>\"], \"history\");\n\n    var paginationTemplate = _baseMvc2.default.wrapTemplate(['<button class=\"prev\" <%- pages.current === 1 ? \"disabled\" : \"\" %>>previous</button>', '<select class=\"pages form-control\" ', 'title=\"', (0, _localization2.default)(\"Click to open and select a page. Begin typing a page number to select it\"), '\">', \"<% _.range( 1, pages.last + 1 ).forEach( function( i ){ %>\", '<option value=\"<%- i - 1 %>\" <%- i === pages.current ? \"selected\" : \"\" %>>', \"<%- view.ordinalIndicator( i ) %> of <%- pages.last %> pages\", \"</option>\", \"<% }); %>\", \"</select>\", '<button class=\"next\" <%- pages.current === pages.last ? \"disabled\" : \"\" %>>next</button>'], \"pages\");\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        el: mainTemplate,\n        controls: controlsTemplate,\n        pagination: paginationTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    HistoryView: HistoryView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, $) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {\n        // Browser globals\n        root.LoadingIndicator = factory();\n    }\n\n    //============================================================================\n})(undefined, function () {\n    //TODO: too specific to history panel\n    function LoadingIndicator($where, options) {\n        var self = this;\n        // defaults\n        options = jQuery.extend({\n            cover: false\n        }, options || {});\n\n        function render() {\n            var html = ['<div class=\"loading-indicator\">', '<div class=\"loading-indicator-text\">', '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>', '<span class=\"loading-indicator-message\">loading...</span>', \"</div>\", \"</div>\"].join(\"\\n\");\n\n            var $indicator = $(html).hide().css(options.css || {\n                position: \"fixed\"\n            }),\n                $text = $indicator.children(\".loading-indicator-text\");\n\n            if (options.cover) {\n                $indicator.css({\n                    \"z-index\": 2,\n                    top: $where.css(\"top\"),\n                    bottom: $where.css(\"bottom\"),\n                    left: $where.css(\"left\"),\n                    right: $where.css(\"right\"),\n                    opacity: 0.5,\n                    \"background-color\": \"white\",\n                    \"text-align\": \"center\"\n                });\n                $text = $indicator.children(\".loading-indicator-text\").css({\n                    \"margin-top\": \"20px\"\n                });\n            } else {\n                $text = $indicator.children(\".loading-indicator-text\").css({\n                    margin: \"12px 0px 0px 10px\",\n                    opacity: \"0.85\",\n                    color: \"grey\"\n                });\n                $text.children(\".loading-indicator-message\").css({\n                    margin: \"0px 8px 0px 0px\",\n                    \"font-style\": \"italic\"\n                });\n            }\n            return $indicator;\n        }\n\n        self.show = function (msg, speed, callback) {\n            msg = msg || \"loading...\";\n            speed = speed || \"fast\";\n            // remove previous\n            $where.parent().find(\".loading-indicator\").remove();\n            // since position is fixed - we insert as sibling\n            self.$indicator = render().insertBefore($where);\n            self.message(msg);\n            self.$indicator.fadeIn(speed, callback);\n            return self;\n        };\n\n        self.message = function (msg) {\n            self.$indicator.find(\"i\").text(msg);\n        };\n\n        self.hide = function (speed, callback) {\n            speed = speed || \"fast\";\n            if (self.$indicator && self.$indicator.length) {\n                self.$indicator.fadeOut(speed, function () {\n                    self.$indicator.remove();\n                    if (callback) {\n                        callback();\n                    }\n                });\n            } else {\n                if (callback) {\n                    callback();\n                }\n            }\n            return self;\n        };\n        return self;\n    }\n\n    //============================================================================\n    return LoadingIndicator;\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _datasetLiEdit = __webpack_require__(87);\n\nvar _datasetLiEdit2 = _interopRequireDefault(_datasetLiEdit);\n\nvar _hdaLi = __webpack_require__(84);\n\nvar _hdaLi2 = _interopRequireDefault(_hdaLi);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _datasetLiEdit2.default.DatasetListItemEdit;\n/** @class Editing view for HistoryDatasetAssociation.\n */\nvar HDAListItemEdit = _super.extend(\n/** @lends HDAListItemEdit.prototype */{\n    className: _super.prototype.className + \" history-content\",\n\n    /** In this override, only get details if in the ready state, get rerunnable if in other states.\n    *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n    */\n    _fetchModelDetails: function _fetchModelDetails() {\n        var view = this;\n        if (view.model.inReadyState() && !view.model.hasDetails()) {\n            return view.model.fetch({ silent: true });\n\n            // special case the need for the rerunnable and creating_job attributes\n            // needed for rendering re-run button on queued, running datasets\n        } else if (!view.model.has(\"rerunnable\")) {\n            return view.model.fetch({\n                silent: true,\n                data: {\n                    // only fetch rerunnable and creating_job to keep overhead down\n                    keys: [\"rerunnable\", \"creating_job\"].join(\",\")\n                }\n            });\n        }\n        return jQuery.when();\n    },\n\n    /** event map */\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .unhide-link\": function clickUnhideLink(ev) {\n            this.model.unhide();\n            return false;\n        }\n    }),\n\n    /** string rep */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"HDAListItemEdit(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemEdit.prototype.templates = function () {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: _baseMvc2.default.wrapTemplate([\"<% if( !dataset.visible ){ %>\",\n        // add a link to unhide a dataset\n        '<div class=\"hidden-msg warningmessagesmall\">', (0, _localization2.default)(\"This dataset has been hidden\"), '<br /><a class=\"unhide-link\" a href=\"javascript:void(0);\">', (0, _localization2.default)(\"Unhide it\"), \"</a>\", \"</div>\", \"<% } %>\"], \"dataset\")\n    });\n\n    return _.extend({}, _super.prototype.templates, {\n        //NOTE: *steal* the HDAListItemView titleBar\n        titleBar: _hdaLi2.default.HDAListItemView.prototype.templates.titleBar,\n        warnings: warnings\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    HDAListItemEdit: HDAListItemEdit\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _hdcaLi = __webpack_require__(85);\n\nvar _hdcaLi2 = _interopRequireDefault(_hdcaLi);\n\nvar _collectionViewEdit = __webpack_require__(158);\n\nvar _collectionViewEdit2 = _interopRequireDefault(_collectionViewEdit);\n\nvar _faIconButton = __webpack_require__(14);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _hdcaLi2.default.HDCAListItemView;\n/** @class Editing view for HistoryDatasetCollectionAssociation.\n */\nvar HDCAListItemEdit = _super.extend(\n/** @lends HDCAListItemEdit.prototype */{\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** Override to return editable versions of the collection panels */\n    _getFoldoutPanelClass: function _getFoldoutPanelClass() {\n        switch (this.model.get(\"collection_type\")) {\n            case \"list\":\n                return _collectionViewEdit2.default.ListCollectionViewEdit;\n            case \"paired\":\n                return _collectionViewEdit2.default.PairCollectionViewEdit;\n            case \"list:paired\":\n                return _collectionViewEdit2.default.ListOfPairsCollectionViewEdit;\n            case \"list:list\":\n                return _collectionViewEdit2.default.ListOfListsCollectionViewEdit;\n        }\n        throw new TypeError(\"Uknown collection_type: \" + this.model.get(\"collection_type\"));\n    },\n\n    // ......................................................................... delete\n    /** In this override, add the delete button. */\n    _renderPrimaryActions: function _renderPrimaryActions() {\n        this.log(this + \"._renderPrimaryActions\");\n        // render the display, edit attr and delete icon-buttons\n        return _super.prototype._renderPrimaryActions.call(this).concat([this._renderDeleteButton()]);\n    },\n\n    /** Render icon-button to delete this collection. */\n    _renderDeleteButton: function _renderDeleteButton() {\n        var self = this,\n            deleted = this.model.get(\"deleted\");\n        return (0, _faIconButton2.default)({\n            title: deleted ? (0, _localization2.default)(\"Dataset collection is already deleted\") : (0, _localization2.default)(\"Delete\"),\n            classes: \"delete-btn\",\n            faIcon: \"fa-times\",\n            disabled: deleted,\n            onclick: function onclick() {\n                // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                self.model[\"delete\"]();\n            }\n        });\n    },\n\n    // ......................................................................... misc\n    /** string rep */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"HDCAListItemEdit(\" + modelString + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    HDCAListItemEdit: HDCAListItemEdit\n};\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _collectionView = __webpack_require__(86);\n\nvar _collectionView2 = _interopRequireDefault(_collectionView);\n\nvar _collectionModel = __webpack_require__(37);\n\nvar _collectionModel2 = _interopRequireDefault(_collectionModel);\n\nvar _collectionLiEdit = __webpack_require__(159);\n\nvar _collectionLiEdit2 = _interopRequireDefault(_collectionLiEdit);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _tag = __webpack_require__(22);\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _faIconButton = __webpack_require__(14);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(15);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class editable View/Controller for a dataset collection.\n */\nvar _super = _collectionView2.default.CollectionView;\nvar CollectionViewEdit = _super.extend(\n/** @lends CollectionView.prototype */{\n    //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** sub view class used for datasets */\n    DatasetDCEViewClass: _collectionLiEdit2.default.DatasetDCEListItemEdit,\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLiEdit2.default.NestedDCDCEListItemEdit,\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n    *  @param {Object} attributes optional settings for the panel\n    */\n    initialize: function initialize(attributes) {\n        _super.prototype.initialize.call(this, attributes);\n    },\n\n    /** In this override, make the collection name editable\n    */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        $where = $where || this.$el;\n        _super.prototype._setUpBehaviors.call(this, $where);\n        if (!this.model) {\n            return;\n        }\n\n        // anon users shouldn't have access to any of the following\n        if (!Galaxy.user || Galaxy.user.isAnonymous()) {\n            return;\n        }\n\n        this.tagsEditorShown = true;\n\n        //TODO: extract\n        var panel = this,\n            nameSelector = \"> .controls .name\";\n        $where.find(nameSelector).attr(\"title\", (0, _localization2.default)(\"Click to rename collection\")).tooltip({ placement: \"bottom\" }).make_text_editable({\n            on_finish: function on_finish(newName) {\n                var previousName = panel.model.get(\"name\");\n                if (newName && newName !== previousName) {\n                    panel.$el.find(nameSelector).text(newName);\n                    panel.model.save({ name: newName }).fail(function () {\n                        panel.$el.find(nameSelector).text(panel.model.previous(\"name\"));\n                    });\n                } else {\n                    panel.$el.find(nameSelector).text(previousName);\n                }\n            }\n        });\n        this.tagsEditor = new _tag2.default.TagsEditor({\n            model: this.model,\n            el: $where.find(\".tags-display\"),\n            onshowFirstTime: function onshowFirstTime() {\n                this.render();\n            },\n            usePrompt: false\n        });\n        this.tagsEditor.toggle(true);\n    },\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"CollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionViewEdit = CollectionViewEdit.extend(\n/** @lends ListCollectionView.prototype */{\n    //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n    /** sub view class used for datasets */\n    DatasetDCEViewClass: _collectionLiEdit2.default.DatasetDCEListItemEdit,\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListCollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class Editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionViewEdit = ListCollectionViewEdit.extend(\n/** @lends PairCollectionViewEdit.prototype */{\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"PairCollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class Editable (roughly since these collections are immutable),\n *  View/Controller for a dataset collection.\n */\nvar NestedPairCollectionViewEdit = PairCollectionViewEdit.extend(\n/** @lends NestedPairCollectionViewEdit.prototype */{\n    /** Override to remove the editable text from the name/identifier - these collections are considered immutable */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        _super.prototype._setUpBehaviors.call(this, $where);\n    },\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"NestedPairCollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class editable, View/Controller for a list of pairs dataset collection. */\nvar ListOfPairsCollectionViewEdit = CollectionViewEdit.extend(\n/** @lends ListOfPairsCollectionView.prototype */{\n    //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLiEdit2.default.NestedDCDCEListItemEdit.extend({\n        foldoutPanelClass: NestedPairCollectionViewEdit\n    }),\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListOfPairsCollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class View/Controller for a list of lists dataset collection. */\nvar ListOfListsCollectionViewEdit = CollectionViewEdit.extend(\n/** @lends ListOfListsCollectionView.prototype */{\n    //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLiEdit2.default.NestedDCDCEListItemEdit.extend({\n        foldoutPanelClass: NestedPairCollectionViewEdit\n    }),\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListOfListsCollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    CollectionViewEdit: CollectionViewEdit,\n    ListCollectionViewEdit: ListCollectionViewEdit,\n    PairCollectionViewEdit: PairCollectionViewEdit,\n    ListOfPairsCollectionViewEdit: ListOfPairsCollectionViewEdit,\n    ListOfListsCollectionViewEdit: ListOfListsCollectionViewEdit\n};\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _collectionLi = __webpack_require__(43);\n\nvar _collectionLi2 = _interopRequireDefault(_collectionLi);\n\nvar _datasetLiEdit = __webpack_require__(87);\n\nvar _datasetLiEdit2 = _interopRequireDefault(_datasetLiEdit);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar DCListItemView = _collectionLi2.default.DCListItemView;\n/** @class Edit view for DatasetCollection.\n */\nvar DCListItemEdit = DCListItemView.extend(\n/** @lends DCListItemEdit.prototype */{\n    /** override to add linkTarget */\n    initialize: function initialize(attributes) {\n        DCListItemView.prototype.initialize.call(this, attributes);\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"DCListItemEdit(\" + modelString + \")\";\n    }\n});\n\n//==============================================================================\nvar DCEListItemView = _collectionLi2.default.DCEListItemView;\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemEdit = DCEListItemView.extend(\n/** @lends DCEListItemEdit.prototype */{\n    //TODO: this might be expendable - compacted with HDAListItemView\n\n    /** set up */\n    initialize: function initialize(attributes) {\n        DCEListItemView.prototype.initialize.call(this, attributes);\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"DCEListItemEdit(\" + modelString + \")\";\n    }\n});\n\n//==============================================================================\n// NOTE: this does not inherit from DatasetDCEListItemView as you would expect\n//TODO: but should - if we can find something simpler than using diamond\n/** @class Editable view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemEdit = _datasetLiEdit2.default.DatasetListItemEdit.extend(\n/** @lends DatasetDCEListItemEdit.prototype */{\n    /** set up */\n    initialize: function initialize(attributes) {\n        _datasetLiEdit2.default.DatasetListItemEdit.prototype.initialize.call(this, attributes);\n    },\n\n    // NOTE: this does not inherit from DatasetDCEListItemView - so we duplicate this here\n    //TODO: fix\n    /** In this override, only get details if in the ready state.\n    *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n    */\n    _fetchModelDetails: function _fetchModelDetails() {\n        var view = this;\n        if (view.model.inReadyState() && !view.model.hasDetails()) {\n            return view.model.fetch({ silent: true });\n        }\n        return jQuery.when();\n    },\n\n    /** Override to remove delete button */\n    _renderDeleteButton: function _renderDeleteButton() {\n        return null;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"DatasetDCEListItemEdit(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemEdit.prototype.templates = function () {\n    return _.extend({}, _datasetLiEdit2.default.DatasetListItemEdit.prototype.templates, {\n        titleBar: _collectionLi2.default.DatasetDCEListItemView.prototype.templates.titleBar\n    });\n}();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemEdit = _collectionLi2.default.NestedDCDCEListItemView.extend(\n/** @lends NestedDCDCEListItemEdit.prototype */{\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? this.model + \"\" : \"(no model)\";\n        return \"NestedDCDCEListItemEdit(\" + modelString + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    DCListItemEdit: DCListItemEdit,\n    DCEListItemEdit: DCEListItemEdit,\n    DatasetDCEListItemEdit: DatasetDCEListItemEdit,\n    NestedDCDCEListItemEdit: NestedDCDCEListItemEdit\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listCollectionCreator = __webpack_require__(35);\n\nvar _listCollectionCreator2 = _interopRequireDefault(_listCollectionCreator);\n\nvar _hdcaModel = __webpack_require__(36);\n\nvar _hdcaModel2 = _interopRequireDefault(_hdcaModel);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"collections\";\n/*==============================================================================\nTODO:\n    the paired creator doesn't really mesh with the list creator as parent\n        it may be better to make an abstract super class for both\n    composites may inherit from this (or vis-versa)\n    PairedDatasetCollectionElementView doesn't make a lot of sense\n\n==============================================================================*/\n/**  */\nvar PairedDatasetCollectionElementView = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n    tagName: \"li\",\n    className: \"collection-element\",\n\n    initialize: function initialize(attributes) {\n        this.element = attributes.element || {};\n        this.identifier = attributes.identifier;\n    },\n\n    render: function render() {\n        this.$el.attr(\"data-element-id\", this.element.id).html(this.template({\n            identifier: this.identifier,\n            element: this.element\n        }));\n        return this;\n    },\n\n    //TODO: lots of unused space in the element - possibly load details and display them horiz.\n    template: _.template(['<span class=\"identifier\"><%- identifier %></span>', '<span class=\"name\"><%- element.name %></span>'].join(\"\")),\n\n    /** remove the DOM and any listeners */\n    destroy: function destroy() {\n        this.off();\n        this.$el.remove();\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return \"DatasetCollectionElementView()\";\n    }\n});\n\n// ============================================================================\nvar _super = _listCollectionCreator2.default.ListCollectionCreator;\n\n/** An interface for building collections.\n */\nvar PairCollectionCreator = _super.extend({\n    /** the class used to display individual elements */\n    elementViewClass: PairedDatasetCollectionElementView,\n    /** the class this creator will create and save */\n    collectionClass: _hdcaModel2.default.HistoryPairDatasetCollection,\n    className: \"pair-collection-creator collection-creator flex-row-container\",\n\n    /** override to no-op */\n    _mangleDuplicateNames: function _mangleDuplicateNames() {},\n\n    // TODO: this whole pattern sucks. There needs to be two classes of problem area:\n    //      bad inital choices and\n    //      when the user has painted his/her self into a corner during creation/use-of-the-creator\n    /** render the entire interface */\n    render: function render(speed, callback) {\n        if (this.workingElements.length === 2) {\n            return _super.prototype.render.call(this, speed, callback);\n        }\n        return this._renderInvalid(speed, callback);\n    },\n\n    // ------------------------------------------------------------------------ rendering elements\n    /** render forward/reverse */\n    _renderList: function _renderList(speed, callback) {\n        //this.debug( '-- _renderList' );\n        //precondition: there are two valid elements in workingElements\n        var creator = this,\n            $tmp = jQuery(\"<div/>\"),\n            $list = creator.$list();\n\n        // lose the original views, create the new, append all at once, then call their renders\n        _.each(this.elementViews, function (view) {\n            view.destroy();\n            creator.removeElementView(view);\n        });\n        $tmp.append(creator._createForwardElementView().$el);\n        $tmp.append(creator._createReverseElementView().$el);\n        $list.empty().append($tmp.children());\n        _.invoke(creator.elementViews, \"render\");\n    },\n\n    /** create the forward element view */\n    _createForwardElementView: function _createForwardElementView() {\n        return this._createElementView(this.workingElements[0], {\n            identifier: \"forward\"\n        });\n    },\n\n    /** create the forward element view */\n    _createReverseElementView: function _createReverseElementView() {\n        return this._createElementView(this.workingElements[1], {\n            identifier: \"reverse\"\n        });\n    },\n\n    /** create an element view, cache in elementViews, and return */\n    _createElementView: function _createElementView(element, options) {\n        var elementView = new this.elementViewClass(_.extend(options, {\n            element: element\n        }));\n        this.elementViews.push(elementView);\n        return elementView;\n    },\n\n    /** swap the forward, reverse elements and re-render */\n    swap: function swap() {\n        this.workingElements = [this.workingElements[1], this.workingElements[0]];\n        this._renderList();\n    },\n\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .swap\": \"swap\"\n    }),\n\n    // ------------------------------------------------------------------------ templates\n    //TODO: move to require text plugin and load these as text\n    //TODO: underscore currently unnecc. bc no vars are used\n    //TODO: better way of localizing text-nodes in long strings\n    /** underscore template fns attached to class */\n    templates: _.extend(_.clone(_super.prototype.templates), {\n        /** the middle: element list */\n        middle: _.template(['<div class=\"collection-elements-controls\">', '<a class=\"swap\" href=\"javascript:void(0);\" title=\"', (0, _localization2.default)(\"Swap forward and reverse datasets\"), '\">', (0, _localization2.default)(\"Swap\"), \"</a>\", \"</div>\", '<div class=\"collection-elements scroll-container flex-row\">', \"</div>\"].join(\"\")),\n\n        /** help content */\n        helpContent: _.template([\"<p>\", (0, _localization2.default)([\"Pair collections are permanent collections containing two datasets: one forward and one reverse. \", \"Often these are forward and reverse reads. The pair collections can be passed to tools and \", \"workflows in order to have analyses done on both datasets. This interface allows \", \"you to create a pair, name it, and swap which is forward and which reverse.\"].join(\"\")), \"</p>\", \"<ul>\", \"<li>\", (0, _localization2.default)(['Click the <i data-target=\".swap\">\"Swap\"</i> link to make your forward dataset the reverse ', \"and the reverse dataset forward.\"].join(\"\")), \"</li>\", \"<li>\", (0, _localization2.default)(['Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'].join(\"\")), \"</li>\", \"</ul><br />\", \"<p>\", (0, _localization2.default)(['Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ', 'click <i data-target=\".create-collection\">\"Create list\"</i>.'].join(\"\")), \"</p>\"].join(\"\")),\n\n        /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n        invalidInitial: _.template(['<div class=\"header flex-row no-flex\">', '<div class=\"alert alert-warning\" style=\"display: block\">', '<span class=\"alert-message\">', \"<% if( _.size( problems ) ){ %>\", (0, _localization2.default)(\"The following selections could not be included due to problems\"), \"<ul><% _.each( problems, function( problem ){ %>\", \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\", \"<% }); %></ul>\", \"<% } else if( _.size( elements ) === 0 ){ %>\", (0, _localization2.default)(\"No datasets were selected\"), \".\", \"<% } else if( _.size( elements ) === 1 ){ %>\", (0, _localization2.default)(\"Only one dataset was selected\"), \": <%- elements[0].name %>\", \"<% } else if( _.size( elements ) > 2 ){ %>\", (0, _localization2.default)(\"Too many datasets were selected\"), ': <%- _.pluck( elements, \"name\" ).join( \", \") %>', \"<% } %>\", \"<br />\", (0, _localization2.default)(\"Two (and only two) elements are needed for the pair\"), \". \", (0, _localization2.default)(\"You may need to \"), '<a class=\"cancel-create\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"cancel\"), \"</a> \", (0, _localization2.default)(\"and reselect new elements\"), \".\", \"</span>\", \"</div>\", \"</div>\", '<div class=\"footer flex-row no-flex\">', '<div class=\"actions clear vertically-spaced\">', '<div class=\"other-options pull-left\">', '<button class=\"cancel-create btn\" tabindex=\"-1\">', (0, _localization2.default)(\"Cancel\"), \"</button>\",\n        // _l( 'Create a different kind of collection' ),\n        \"</div>\", \"</div>\", \"</div>\"].join(\"\"))\n    }),\n\n    // ------------------------------------------------------------------------ misc\n    /** string rep */\n    toString: function toString() {\n        return \"PairCollectionCreator\";\n    }\n});\n\n//==============================================================================\n/** List collection flavor of collectionCreatorModal. */\nvar pairCollectionCreatorModal = function _pairCollectionCreatorModal(elements, options) {\n    options = options || {};\n    options.title = (0, _localization2.default)(\"Create a collection from a pair of datasets\");\n    return _listCollectionCreator2.default.collectionCreatorModal(elements, options, PairCollectionCreator);\n};\n\n//==============================================================================\n/** Use a modal to create a pair collection, then add it to the given history contents.\n *  @returns {Deferred} resolved when the collection is added to the history.\n */\nfunction createPairCollection(contents, defaultHideSourceItems) {\n    var elements = contents.toJSON(),\n        promise = pairCollectionCreatorModal(elements, {\n        defaultHideSourceItems: defaultHideSourceItems,\n        creationFn: function creationFn(elements, name, hideSourceItems) {\n            elements = [{ name: \"forward\", src: \"hda\", id: elements[0].id }, { name: \"reverse\", src: \"hda\", id: elements[1].id }];\n            return contents.createHDCA(elements, \"paired\", name, hideSourceItems);\n        }\n    });\n    return promise;\n}\n\n//==============================================================================\nexports.default = {\n    PairCollectionCreator: PairCollectionCreator,\n    pairCollectionCreatorModal: pairCollectionCreatorModal,\n    createPairCollection: createPairCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, jQuery, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _levenshtein = __webpack_require__(162);\n\nvar _levenshtein2 = _interopRequireDefault(_levenshtein);\n\nvar _naturalSort = __webpack_require__(75);\n\nvar _naturalSort2 = _interopRequireDefault(_naturalSort);\n\nvar _baseCreator = __webpack_require__(74);\n\nvar _baseCreator2 = _interopRequireDefault(_baseCreator);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(76);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"collections\";\n/* ============================================================================\nTODO:\n\n\nPROGRAMMATICALLY:\ncurrPanel.once( 'rendered', function(){\n    currPanel.showSelectors();\n    currPanel.selectAll();\n    _.last( currPanel.actionsPopup.options ).func();\n});\n\n============================================================================ */\n/** A view for paired datasets in the collections creator.\n */\nvar PairView = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    tagName: \"li\",\n    className: \"dataset paired\",\n\n    initialize: function initialize(attributes) {\n        this.pair = attributes.pair || {};\n    },\n\n    template: _.template(['<span class=\"forward-dataset-name flex-column\"><%- pair.forward.name %></span>', '<span class=\"pair-name-column flex-column\">', '<span class=\"pair-name\"><%- pair.name %></span>', \"</span>\", '<span class=\"reverse-dataset-name flex-column\"><%- pair.reverse.name %></span>'].join(\"\")),\n\n    render: function render() {\n        this.$el.attr(\"draggable\", true).data(\"pair\", this.pair).html(this.template({ pair: this.pair })).addClass(\"flex-column-container\");\n        return this;\n    },\n\n    events: {\n        dragstart: \"_dragstart\",\n        dragend: \"_dragend\",\n        dragover: \"_sendToParent\",\n        drop: \"_sendToParent\"\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragstart: function _dragstart(ev) {\n        ev.currentTarget.style.opacity = \"0.4\";\n        if (ev.originalEvent) {\n            ev = ev.originalEvent;\n        }\n\n        ev.dataTransfer.effectAllowed = \"move\";\n        ev.dataTransfer.setData(\"text/plain\", JSON.stringify(this.pair));\n\n        this.$el.parent().trigger(\"pair.dragstart\", [this]);\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragend: function _dragend(ev) {\n        ev.currentTarget.style.opacity = \"1.0\";\n        this.$el.parent().trigger(\"pair.dragend\", [this]);\n    },\n\n    /** manually bubble up an event to the parent/container */\n    _sendToParent: function _sendToParent(ev) {\n        this.$el.parent().trigger(ev);\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return \"PairView(\" + this.pair.name + \")\";\n    }\n});\n\n// ============================================================================\n/** returns an autopair function that uses the provided options.match function */\nfunction autoPairFnBuilder(options) {\n    options = options || {};\n    options.createPair = options.createPair || function _defaultCreatePair(params) {\n        params = params || {};\n        var a = params.listA.splice(params.indexA, 1)[0],\n            b = params.listB.splice(params.indexB, 1)[0],\n            aInBIndex = params.listB.indexOf(a),\n            bInAIndex = params.listA.indexOf(b);\n        if (aInBIndex !== -1) {\n            params.listB.splice(aInBIndex, 1);\n        }\n        if (bInAIndex !== -1) {\n            params.listA.splice(bInAIndex, 1);\n        }\n        return this._pair(a, b, { silent: true });\n    };\n    // compile these here outside of the loop\n    var _regexps = [];\n    function getRegExps() {\n        if (!_regexps.length) {\n            _regexps = [new RegExp(this.filters[0]), new RegExp(this.filters[1])];\n        }\n        return _regexps;\n    }\n    // mangle params as needed\n    options.preprocessMatch = options.preprocessMatch || function _defaultPreprocessMatch(params) {\n        var regexps = getRegExps.call(this);\n        return _.extend(params, {\n            matchTo: params.matchTo.name.replace(regexps[0], \"\"),\n            possible: params.possible.name.replace(regexps[1], \"\")\n        });\n    };\n\n    return function _strategy(params) {\n        this.debug(\"autopair _strategy ---------------------------\");\n        params = params || {};\n        var listA = params.listA,\n            listB = params.listB,\n            indexA = 0,\n            indexB,\n            bestMatch = {\n            score: 0.0,\n            index: null\n        },\n            paired = [];\n        //console.debug( 'params:', JSON.stringify( params, null, '  ' ) );\n        this.debug(\"starting list lens:\", listA.length, listB.length);\n        this.debug(\"bestMatch (starting):\", JSON.stringify(bestMatch, null, \"  \"));\n\n        while (indexA < listA.length) {\n            var matchTo = listA[indexA];\n            bestMatch.score = 0.0;\n\n            for (indexB = 0; indexB < listB.length; indexB++) {\n                var possible = listB[indexB];\n                this.debug(indexA + \":\" + matchTo.name);\n                this.debug(indexB + \":\" + possible.name);\n\n                // no matching with self\n                if (listA[indexA] !== listB[indexB]) {\n                    bestMatch = options.match.call(this, options.preprocessMatch.call(this, {\n                        matchTo: matchTo,\n                        possible: possible,\n                        index: indexB,\n                        bestMatch: bestMatch\n                    }));\n                    this.debug(\"bestMatch:\", JSON.stringify(bestMatch, null, \"  \"));\n                    if (bestMatch.score === 1.0) {\n                        this.debug(\"breaking early due to perfect match\");\n                        break;\n                    }\n                }\n            }\n            var scoreThreshold = options.scoreThreshold.call(this);\n            this.debug(\"scoreThreshold:\", scoreThreshold);\n            this.debug(\"bestMatch.score:\", bestMatch.score);\n\n            if (bestMatch.score >= scoreThreshold) {\n                //console.debug( 'autoPairFnBuilder.strategy', listA[ indexA ].name, listB[ bestMatch.index ].name );\n                paired.push(options.createPair.call(this, {\n                    listA: listA,\n                    indexA: indexA,\n                    listB: listB,\n                    indexB: bestMatch.index\n                }));\n                //console.debug( 'list lens now:', listA.length, listB.length );\n            } else {\n                indexA += 1;\n            }\n            if (!listA.length || !listB.length) {\n                return paired;\n            }\n        }\n        this.debug(\"paired:\", JSON.stringify(paired, null, \"  \"));\n        this.debug(\"autopair _strategy ---------------------------\");\n        return paired;\n    };\n}\n\n// ============================================================================\n/** An interface for building collections of paired datasets.\n */\nvar PairedCollectionCreator = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(_baseCreator2.default.CollectionCreatorMixin).extend({\n    _logNamespace: logNamespace,\n\n    className: \"list-of-pairs-collection-creator collection-creator flex-row-container\",\n\n    /** set up initial options, instance vars, behaviors, and autopair (if set to do so) */\n    initialize: function initialize(attributes) {\n        this.metric(\"PairedCollectionCreator.initialize\", attributes);\n        //this.debug( '-- PairedCollectionCreator:', attributes );\n\n        attributes = _.defaults(attributes, {\n            datasets: [],\n            filters: this.DEFAULT_FILTERS,\n            automaticallyPair: true,\n            strategy: \"lcs\",\n            matchPercentage: 0.9,\n            twoPassAutopairing: true\n        });\n\n        /** unordered, original list */\n        this.initialList = attributes.datasets;\n\n        /** is this from a history? if so, what's its id? */\n        this.historyId = attributes.historyId;\n\n        /** which filters should be used initially? (String[2] or name in commonFilters) */\n        this.filters = this.commonFilters[attributes.filters] || this.commonFilters[this.DEFAULT_FILTERS];\n        if (_.isArray(attributes.filters)) {\n            this.filters = attributes.filters;\n        }\n\n        /** try to auto pair the unpaired datasets on load? */\n        this.automaticallyPair = attributes.automaticallyPair;\n\n        /** what method to use for auto pairing (will be passed aggression level) */\n        this.strategy = this.strategies[attributes.strategy] || this.strategies[this.DEFAULT_STRATEGY];\n        if (_.isFunction(attributes.strategy)) {\n            this.strategy = attributes.strategy;\n        }\n\n        /** distance/mismatch level allowed for autopairing */\n        this.matchPercentage = attributes.matchPercentage;\n\n        /** try to autopair using simple first, then this.strategy on the remainder */\n        this.twoPassAutopairing = attributes.twoPassAutopairing;\n\n        /** remove file extensions (\\.*) from created pair names? */\n        this.removeExtensions = true;\n        //this.removeExtensions = false;\n\n        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n        this.oncancel = attributes.oncancel;\n        /** fn to call when the collection is created (scoped to this) */\n        this.oncreate = attributes.oncreate;\n\n        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n        this.autoscrollDist = attributes.autoscrollDist || 24;\n\n        /** is the unpaired panel shown? */\n        this.unpairedPanelHidden = false;\n        /** is the paired panel shown? */\n        this.pairedPanelHidden = false;\n\n        /** DOM elements currently being dragged */\n        this.$dragging = null;\n\n        /** Used for blocking UI events during ajax/operations (don't post twice) */\n        this.blocking = false;\n\n        this._setUpCommonSettings(attributes);\n        this._setUpBehaviors();\n        this._dataSetUp();\n    },\n\n    /** map of common filter pairs by name */\n    commonFilters: {\n        illumina: [\"_1\", \"_2\"],\n        Rs: [\"_R1\", \"_R2\"]\n    },\n    /** which commonFilter to use by default */\n    DEFAULT_FILTERS: \"illumina\",\n\n    /** map of name->fn for autopairing */\n    strategies: {\n        simple: \"autopairSimple\",\n        lcs: \"autopairLCS\",\n        levenshtein: \"autopairLevenshtein\"\n    },\n    /** default autopair strategy name */\n    DEFAULT_STRATEGY: \"lcs\",\n\n    // ------------------------------------------------------------------------ process raw list\n    /** set up main data: cache initialList, sort, and autopair */\n    _dataSetUp: function _dataSetUp() {\n        //this.debug( '-- _dataSetUp' );\n\n        this.paired = [];\n        this.unpaired = [];\n\n        this.selectedIds = [];\n\n        // sort initial list, add ids if needed, and save new working copy to unpaired\n        this._sortInitialList();\n        this._ensureIds();\n        this.unpaired = this.initialList.slice(0);\n\n        if (this.automaticallyPair) {\n            this.autoPair();\n            this.once(\"rendered:initial\", function () {\n                this.trigger(\"autopair\");\n            });\n        }\n    },\n\n    /** sort initial list */\n    _sortInitialList: function _sortInitialList() {\n        //this.debug( '-- _sortInitialList' );\n        this._sortDatasetList(this.initialList);\n    },\n\n    /** sort a list of datasets */\n    _sortDatasetList: function _sortDatasetList(list) {\n        // currently only natural sort by name\n        list.sort(function (a, b) {\n            return (0, _naturalSort2.default)(a.name, b.name);\n        });\n        return list;\n    },\n\n    /** add ids to dataset objs in initial list if none */\n    _ensureIds: function _ensureIds() {\n        this.initialList.forEach(function (dataset) {\n            if (!dataset.hasOwnProperty(\"id\")) {\n                dataset.id = _.uniqueId();\n            }\n        });\n        return this.initialList;\n    },\n\n    /** split initial list into two lists, those that pass forward filters & those passing reverse */\n    _splitByFilters: function _splitByFilters() {\n        var regexFilters = this.filters.map(function (stringFilter) {\n            return new RegExp(stringFilter);\n        }),\n            split = [[], []];\n\n        function _filter(unpaired, filter) {\n            return filter.test(unpaired.name);\n            //return dataset.name.indexOf( filter ) >= 0;\n        }\n        this.unpaired.forEach(function _filterEach(unpaired) {\n            // 90% of the time this seems to work, but:\n            //TODO: this treats *all* strings as regex which may confuse people - possibly check for // surrounding?\n            //  would need explanation in help as well\n            regexFilters.forEach(function (filter, i) {\n                if (_filter(unpaired, filter)) {\n                    split[i].push(unpaired);\n                }\n            });\n        });\n        return split;\n    },\n\n    /** add a dataset to the unpaired list in it's proper order */\n    _addToUnpaired: function _addToUnpaired(dataset) {\n        // currently, unpaired is natural sorted by name, use binary search to find insertion point\n        var binSearchSortedIndex = function (low, hi) {\n            if (low === hi) {\n                return low;\n            }\n\n            var mid = Math.floor((hi - low) / 2) + low,\n                compared = (0, _naturalSort2.default)(dataset.name, this.unpaired[mid].name);\n\n            if (compared < 0) {\n                return binSearchSortedIndex(low, mid);\n            } else if (compared > 0) {\n                return binSearchSortedIndex(mid + 1, hi);\n            }\n            // walk the equal to find the last\n            while (this.unpaired[mid] && this.unpaired[mid].name === dataset.name) {\n                mid++;\n            }\n            return mid;\n        }.bind(this);\n\n        this.unpaired.splice(binSearchSortedIndex(0, this.unpaired.length), 0, dataset);\n    },\n\n    // ------------------------------------------------------------------------ auto pairing\n    /** two passes to automatically create pairs:\n    *  use both simpleAutoPair, then the fn mentioned in strategy\n    */\n    autoPair: function autoPair(strategy) {\n        // split first using exact matching\n        var split = this._splitByFilters(),\n            paired = [];\n        if (this.twoPassAutopairing) {\n            paired = this.autopairSimple({\n                listA: split[0],\n                listB: split[1]\n            });\n            split = this._splitByFilters();\n        }\n\n        // uncomment to see printlns while running tests\n        //this.debug = function(){ console.log.apply( console, arguments ); };\n\n        // then try the remainder with something less strict\n        strategy = strategy || this.strategy;\n        split = this._splitByFilters();\n        paired = paired.concat(this[strategy].call(this, {\n            listA: split[0],\n            listB: split[1]\n        }));\n        return paired;\n    },\n\n    /** autopair by exact match */\n    autopairSimple: autoPairFnBuilder({\n        scoreThreshold: function scoreThreshold() {\n            return 0.6;\n        },\n        match: function _match(params) {\n            params = params || {};\n            if (params.matchTo === params.possible) {\n                return {\n                    index: params.index,\n                    score: 1.0\n                };\n            }\n            return params.bestMatch;\n        }\n    }),\n\n    /** autopair by levenshtein edit distance scoring */\n    autopairLevenshtein: autoPairFnBuilder({\n        scoreThreshold: function scoreThreshold() {\n            return this.matchPercentage;\n        },\n        match: function _matches(params) {\n            params = params || {};\n            var distance = (0, _levenshtein2.default)(params.matchTo, params.possible),\n                score = 1.0 - distance / Math.max(params.matchTo.length, params.possible.length);\n            if (score > params.bestMatch.score) {\n                return {\n                    index: params.index,\n                    score: score\n                };\n            }\n            return params.bestMatch;\n        }\n    }),\n\n    /** autopair by longest common substrings scoring */\n    autopairLCS: autoPairFnBuilder({\n        scoreThreshold: function scoreThreshold() {\n            return this.matchPercentage;\n        },\n        match: function _matches(params) {\n            params = params || {};\n            var match = this._naiveStartingAndEndingLCS(params.matchTo, params.possible).length,\n                score = match / Math.max(params.matchTo.length, params.possible.length);\n            if (score > params.bestMatch.score) {\n                return {\n                    index: params.index,\n                    score: score\n                };\n            }\n            return params.bestMatch;\n        }\n    }),\n\n    /** return the concat'd longest common prefix and suffix from two strings */\n    _naiveStartingAndEndingLCS: function _naiveStartingAndEndingLCS(s1, s2) {\n        var fwdLCS = \"\",\n            revLCS = \"\",\n            i = 0,\n            j = 0;\n        while (i < s1.length && i < s2.length) {\n            if (s1[i] !== s2[i]) {\n                break;\n            }\n            fwdLCS += s1[i];\n            i += 1;\n        }\n        if (i === s1.length) {\n            return s1;\n        }\n        if (i === s2.length) {\n            return s2;\n        }\n\n        i = s1.length - 1;\n        j = s2.length - 1;\n        while (i >= 0 && j >= 0) {\n            if (s1[i] !== s2[j]) {\n                break;\n            }\n            revLCS = [s1[i], revLCS].join(\"\");\n            i -= 1;\n            j -= 1;\n        }\n        return fwdLCS + revLCS;\n    },\n\n    // ------------------------------------------------------------------------ pairing / unpairing\n    /** create a pair from fwd and rev, removing them from unpaired, and placing the new pair in paired */\n    _pair: function _pair(fwd, rev, options) {\n        options = options || {};\n        this.debug(\"_pair:\", fwd, rev);\n        var pair = this._createPair(fwd, rev, options.name);\n        this.paired.push(pair);\n        this.unpaired = _.without(this.unpaired, fwd, rev);\n        if (!options.silent) {\n            this.trigger(\"pair:new\", pair);\n        }\n        return pair;\n    },\n\n    /** create a pair Object from fwd and rev, adding the name attribute (will guess if not given) */\n    _createPair: function _createPair(fwd, rev, name) {\n        // ensure existance and don't pair something with itself\n        if (!(fwd && rev) || fwd === rev) {\n            throw new Error(\"Bad pairing: \" + [JSON.stringify(fwd), JSON.stringify(rev)]);\n        }\n        name = name || this._guessNameForPair(fwd, rev);\n        return { forward: fwd, name: name, reverse: rev };\n    },\n\n    /** try to find a good pair name for the given fwd and rev datasets */\n    _guessNameForPair: function _guessNameForPair(fwd, rev, removeExtensions) {\n        removeExtensions = removeExtensions !== undefined ? removeExtensions : this.removeExtensions;\n        var fwdName = fwd.name,\n            revName = rev.name,\n            lcs = this._naiveStartingAndEndingLCS(fwdName.replace(new RegExp(this.filters[0]), \"\"), revName.replace(new RegExp(this.filters[1]), \"\"));\n        if (removeExtensions) {\n            var lastDotIndex = lcs.lastIndexOf(\".\");\n            if (lastDotIndex > 0) {\n                var extension = lcs.slice(lastDotIndex, lcs.length);\n                lcs = lcs.replace(extension, \"\");\n                fwdName = fwdName.replace(extension, \"\");\n                revName = revName.replace(extension, \"\");\n            }\n        }\n        return lcs || fwdName + \" & \" + revName;\n    },\n\n    /** unpair a pair, removing it from paired, and adding the fwd,rev datasets back into unpaired */\n    _unpair: function _unpair(pair, options) {\n        options = options || {};\n        if (!pair) {\n            throw new Error(\"Bad pair: \" + JSON.stringify(pair));\n        }\n        this.paired = _.without(this.paired, pair);\n        this._addToUnpaired(pair.forward);\n        this._addToUnpaired(pair.reverse);\n\n        if (!options.silent) {\n            this.trigger(\"pair:unpair\", [pair]);\n        }\n        return pair;\n    },\n\n    /** unpair all paired datasets */\n    unpairAll: function unpairAll() {\n        var pairs = [];\n        while (this.paired.length) {\n            pairs.push(this._unpair(this.paired[0], { silent: true }));\n        }\n        this.trigger(\"pair:unpair\", pairs);\n    },\n\n    // ------------------------------------------------------------------------ API\n    /** convert a pair into JSON compatible with the collections API */\n    _pairToJSON: function _pairToJSON(pair, src) {\n        src = src || \"hda\";\n        //TODO: consider making this the pair structure when created instead\n        return {\n            collection_type: \"paired\",\n            src: \"new_collection\",\n            name: pair.name,\n            element_identifiers: [{\n                name: \"forward\",\n                id: pair.forward.id,\n                src: src\n            }, {\n                name: \"reverse\",\n                id: pair.reverse.id,\n                src: src\n            }]\n        };\n    },\n\n    /** create the collection via the API\n    *  @returns {jQuery.xhr Object}    the jquery ajax request\n    */\n    createList: function createList(name) {\n        var creator = this,\n            url = Galaxy.root + \"api/histories/\" + this.historyId + \"/contents/dataset_collections\";\n\n        //TODO: use ListPairedCollection.create()\n        var ajaxData = {\n            type: \"dataset_collection\",\n            collection_type: \"list:paired\",\n            hide_source_items: creator.hideOriginals || false,\n            name: _.escape(name || creator.$(\".collection-name\").val()),\n            element_identifiers: creator.paired.map(function (pair) {\n                return creator._pairToJSON(pair);\n            })\n        };\n        //this.debug( JSON.stringify( ajaxData ) );\n        creator.blocking = true;\n        return jQuery.ajax(url, {\n            type: \"POST\",\n            contentType: \"application/json\",\n            dataType: \"json\",\n            data: JSON.stringify(ajaxData)\n        }).always(function () {\n            creator.blocking = false;\n        }).fail(function (xhr, status, message) {\n            creator._ajaxErrHandler(xhr, status, message);\n        }).done(function (response, message, xhr) {\n            //this.info( 'ok', response, message, xhr );\n            creator.trigger(\"collection:created\", response, message, xhr);\n            creator.metric(\"collection:created\", response);\n            if (typeof creator.oncreate === \"function\") {\n                creator.oncreate.call(this, response, message, xhr);\n            }\n        });\n    },\n\n    /** handle ajax errors with feedback and details to the user (if available) */\n    _ajaxErrHandler: function _ajaxErrHandler(xhr, status, message) {\n        this.error(xhr, status, message);\n        var content = (0, _localization2.default)(\"An error occurred while creating this collection\");\n        if (xhr) {\n            if (xhr.readyState === 0 && xhr.status === 0) {\n                content += \": \" + (0, _localization2.default)(\"Galaxy could not be reached and may be updating.\") + (0, _localization2.default)(\" Try again in a few minutes.\");\n            } else if (xhr.responseJSON) {\n                content += \"<br /><pre>\" + JSON.stringify(xhr.responseJSON) + \"</pre>\";\n            } else {\n                content += \": \" + message;\n            }\n        }\n        creator._showAlert(content, \"alert-danger\");\n    },\n\n    // ------------------------------------------------------------------------ rendering\n    /** render the entire interface */\n    render: function render(speed, callback) {\n        //this.debug( '-- _render' );\n        //this.$el.empty().html( this.templates.main() );\n        this.$el.empty().html(this.templates.main());\n        this._renderHeader(speed);\n        this._renderMiddle(speed);\n        this._renderFooter(speed);\n        this._addPluginComponents();\n        this.trigger(\"rendered\", this);\n        return this;\n    },\n\n    /** render the header section */\n    _renderHeader: function _renderHeader(speed, callback) {\n        //this.debug( '-- _renderHeader' );\n        var $header = this.$(\".header\").empty().html(this.templates.header()).find(\".help-content\").prepend($(this.templates.helpContent()));\n\n        this._renderFilters();\n        return $header;\n    },\n    /** fill the filter inputs with the filter values */\n    _renderFilters: function _renderFilters() {\n        return this.$(\".forward-column .column-header input\").val(this.filters[0]).add(this.$(\".reverse-column .column-header input\").val(this.filters[1]));\n    },\n\n    /** render the middle including unpaired and paired sections (which may be hidden) */\n    _renderMiddle: function _renderMiddle(speed, callback) {\n        var $middle = this.$(\".middle\").empty().html(this.templates.middle());\n\n        // (re-) hide the un/paired panels based on instance vars\n        if (this.unpairedPanelHidden) {\n            this.$(\".unpaired-columns\").hide();\n        } else if (this.pairedPanelHidden) {\n            this.$(\".paired-columns\").hide();\n        }\n\n        this._renderUnpaired();\n        this._renderPaired();\n        return $middle;\n    },\n    /** render the unpaired section, showing datasets accrd. to filters, update the unpaired counts */\n    _renderUnpaired: function _renderUnpaired(speed, callback) {\n        //this.debug( '-- _renderUnpaired' );\n        var creator = this,\n            $fwd,\n            $rev,\n            $prd = [],\n            split = this._splitByFilters();\n        // update unpaired counts\n        this.$(\".forward-column .title\").text([split[0].length, (0, _localization2.default)(\"unpaired forward\")].join(\" \"));\n        this.$(\".forward-column .unpaired-info\").text(this._renderUnpairedDisplayStr(this.unpaired.length - split[0].length));\n        this.$(\".reverse-column .title\").text([split[1].length, (0, _localization2.default)(\"unpaired reverse\")].join(\" \"));\n        this.$(\".reverse-column .unpaired-info\").text(this._renderUnpairedDisplayStr(this.unpaired.length - split[1].length));\n\n        this.$(\".unpaired-columns .column-datasets\").empty();\n\n        // show/hide the auto pair button if any unpaired are left\n        this.$(\".autopair-link\").toggle(this.unpaired.length !== 0);\n        if (this.unpaired.length === 0) {\n            this._renderUnpairedEmpty();\n            return;\n        }\n\n        // create the dataset dom arrays\n        $rev = split[1].map(function (dataset, i) {\n            // if there'll be a fwd dataset across the way, add a button to pair the row\n            if (split[0][i] !== undefined && split[0][i] !== dataset) {\n                $prd.push(creator._renderPairButton());\n            }\n            return creator._renderUnpairedDataset(dataset);\n        });\n        $fwd = split[0].map(function (dataset) {\n            return creator._renderUnpairedDataset(dataset);\n        });\n\n        if (!$fwd.length && !$rev.length) {\n            this._renderUnpairedNotShown();\n            return;\n        }\n        // add to appropo cols\n        //TODO: not the best way to render - consider rendering the entire unpaired-columns section in a fragment\n        //  and swapping out that\n        this.$(\".unpaired-columns .forward-column .column-datasets\").append($fwd).add(this.$(\".unpaired-columns .paired-column .column-datasets\").append($prd)).add(this.$(\".unpaired-columns .reverse-column .column-datasets\").append($rev));\n        this._adjUnpairedOnScrollbar();\n    },\n    /** return a string to display the count of filtered out datasets */\n    _renderUnpairedDisplayStr: function _renderUnpairedDisplayStr(numFiltered) {\n        return [\"(\", numFiltered, \" \", (0, _localization2.default)(\"filtered out\"), \")\"].join(\"\");\n    },\n    /** return an unattached jQuery DOM element to represent an unpaired dataset */\n    _renderUnpairedDataset: function _renderUnpairedDataset(dataset) {\n        //TODO: to underscore template\n        return $(\"<li/>\").attr(\"id\", \"dataset-\" + dataset.id).addClass(\"dataset unpaired\").attr(\"draggable\", true).addClass(dataset.selected ? \"selected\" : \"\").append($(\"<span/>\").addClass(\"dataset-name\").text(dataset.name))\n        //??\n        .data(\"dataset\", dataset);\n    },\n    /** render the button that may go between unpaired datasets, allowing the user to pair a row */\n    _renderPairButton: function _renderPairButton() {\n        //TODO: *not* a dataset - don't pretend like it is\n        return $(\"<li/>\").addClass(\"dataset unpaired\").append($(\"<span/>\").addClass(\"dataset-name\").text((0, _localization2.default)(\"Pair these datasets\")));\n    },\n    /** a message to display when no unpaired left */\n    _renderUnpairedEmpty: function _renderUnpairedEmpty() {\n        //this.debug( '-- renderUnpairedEmpty' );\n        var $msg = $('<div class=\"empty-message\"></div>').text(\"(\" + (0, _localization2.default)(\"no remaining unpaired datasets\") + \")\");\n        this.$(\".unpaired-columns .paired-column .column-datasets\").empty().prepend($msg);\n        return $msg;\n    },\n    /** a message to display when no unpaired can be shown with the current filters */\n    _renderUnpairedNotShown: function _renderUnpairedNotShown() {\n        //this.debug( '-- renderUnpairedEmpty' );\n        var $msg = $('<div class=\"empty-message\"></div>').text(\"(\" + (0, _localization2.default)(\"no datasets were found matching the current filters\") + \")\");\n        this.$(\".unpaired-columns .paired-column .column-datasets\").empty().prepend($msg);\n        return $msg;\n    },\n    /** try to detect if the unpaired section has a scrollbar and adjust left column for better centering of all */\n    _adjUnpairedOnScrollbar: function _adjUnpairedOnScrollbar() {\n        var $unpairedColumns = this.$(\".unpaired-columns\").last(),\n            $firstDataset = this.$(\".unpaired-columns .reverse-column .dataset\").first();\n        if (!$firstDataset.length) {\n            return;\n        }\n        var ucRight = $unpairedColumns.offset().left + $unpairedColumns.outerWidth(),\n            dsRight = $firstDataset.offset().left + $firstDataset.outerWidth(),\n            rightDiff = Math.floor(ucRight) - Math.floor(dsRight);\n        //this.debug( 'rightDiff:', ucRight, '-', dsRight, '=', rightDiff );\n        this.$(\".unpaired-columns .forward-column\").css(\"margin-left\", rightDiff > 0 ? rightDiff : 0);\n    },\n\n    /** render the paired section and update counts of paired datasets */\n    _renderPaired: function _renderPaired(speed, callback) {\n        //this.debug( '-- _renderPaired' );\n        this.$(\".paired-column-title .title\").text([this.paired.length, (0, _localization2.default)(\"paired\")].join(\" \"));\n        // show/hide the unpair all link\n        this.$(\".unpair-all-link\").toggle(this.paired.length !== 0);\n        if (this.paired.length === 0) {\n            this._renderPairedEmpty();\n            return;\n            //TODO: would be best to return here (the $columns)\n        } else {\n            // show/hide 'remove extensions link' when any paired and they seem to have extensions\n            this.$(\".remove-extensions-link\").show();\n        }\n\n        this.$(\".paired-columns .column-datasets\").empty();\n        var creator = this;\n        this.paired.forEach(function (pair, i) {\n            //TODO: cache these?\n            var pairView = new PairView({ pair: pair });\n            creator.$(\".paired-columns .column-datasets\").append(pairView.render().$el).append(['<button class=\"unpair-btn\">', '<span class=\"fa fa-unlink\" title=\"', (0, _localization2.default)(\"Unpair\"), '\"></span>', \"</button>\"].join(\"\"));\n        });\n    },\n    /** a message to display when none paired */\n    _renderPairedEmpty: function _renderPairedEmpty() {\n        var $msg = $('<div class=\"empty-message\"></div>').text(\"(\" + (0, _localization2.default)(\"no paired datasets yet\") + \")\");\n        this.$(\".paired-columns .column-datasets\").empty().prepend($msg);\n        return $msg;\n    },\n\n    footerSettings: {\n        \".hide-originals\": \"hideOriginals\",\n        \".remove-extensions\": \"removeExtensions\"\n    },\n\n    /** add any jQuery/bootstrap/custom plugins to elements rendered */\n    _addPluginComponents: function _addPluginComponents() {\n        this._chooseFiltersPopover(\".choose-filters-link\");\n        this.$(\".help-content i\").hoverhighlight(\".collection-creator\", \"rgba( 64, 255, 255, 1.0 )\");\n    },\n\n    /** build a filter selection popover allowing selection of common filter pairs */\n    _chooseFiltersPopover: function _chooseFiltersPopover(selector) {\n        function filterChoice(val1, val2) {\n            return ['<button class=\"filter-choice btn\" ', 'data-forward=\"', val1, '\" data-reverse=\"', val2, '\">', (0, _localization2.default)(\"Forward\"), \": \", val1, \", \", (0, _localization2.default)(\"Reverse\"), \": \", val2, \"</button>\"].join(\"\");\n        }\n        var $popoverContent = $(_.template(['<div class=\"choose-filters\">', '<div class=\"help\">', (0, _localization2.default)(\"Choose from the following filters to change which unpaired reads are shown in the display\"), \":</div>\", _.values(this.commonFilters).map(function (filterSet) {\n            return filterChoice(filterSet[0], filterSet[1]);\n        }).join(\"\"), \"</div>\"].join(\"\"))({}));\n\n        return this.$(selector).popover({\n            container: \".collection-creator\",\n            placement: \"bottom\",\n            html: true,\n            //animation   : false,\n            content: $popoverContent\n        });\n    },\n\n    /** add (or clear if clear is truthy) a validation warning to what */\n    _validationWarning: function _validationWarning(what, clear) {\n        var VALIDATION_CLASS = \"validation-warning\";\n        if (what === \"name\") {\n            what = this.$(\".collection-name\").add(this.$(\".collection-name-prompt\"));\n            this.$(\".collection-name\").focus().select();\n        }\n        if (clear) {\n            what = what || this.$(\".\" + VALIDATION_CLASS);\n            what.removeClass(VALIDATION_CLASS);\n        } else {\n            what.addClass(VALIDATION_CLASS);\n        }\n    },\n\n    // ------------------------------------------------------------------------ events\n    /** set up event handlers on self */\n    _setUpBehaviors: function _setUpBehaviors() {\n        this.once(\"rendered\", function () {\n            this.trigger(\"rendered:initial\", this);\n        });\n\n        this.on(\"pair:new\", function () {\n            //TODO: ideally only re-render the columns (or even elements) involved\n            this._renderUnpaired();\n            this._renderPaired();\n\n            // scroll to bottom where new pairs are added\n            //TODO: this doesn't seem to work - innerHeight sticks at 133...\n            //  may have to do with improper flex columns\n            //var $pairedView = this.$( '.paired-columns' );\n            //$pairedView.scrollTop( $pairedView.innerHeight() );\n            //this.debug( $pairedView.height() )\n            this.$(\".paired-columns\").scrollTop(8000000);\n        });\n        this.on(\"pair:unpair\", function (pairs) {\n            //TODO: ideally only re-render the columns (or even elements) involved\n            this._renderUnpaired();\n            this._renderPaired();\n            this.splitView();\n        });\n\n        this.on(\"filter-change\", function () {\n            this.filters = [this.$(\".forward-unpaired-filter input\").val(), this.$(\".reverse-unpaired-filter input\").val()];\n            this.metric(\"filter-change\", this.filters);\n            this._renderFilters();\n            this._renderUnpaired();\n        });\n\n        this.on(\"autopair\", function () {\n            this._renderUnpaired();\n            this._renderPaired();\n\n            var message,\n                msgClass = null;\n            if (this.paired.length) {\n                msgClass = \"alert-success\";\n                message = this.paired.length + \" \" + (0, _localization2.default)(\"pairs created\");\n                if (!this.unpaired.length) {\n                    message += \": \" + (0, _localization2.default)(\"all datasets have been successfully paired\");\n                    this.hideUnpaired();\n                    this.$(\".collection-name\").focus();\n                }\n            } else {\n                message = (0, _localization2.default)([\"Could not automatically create any pairs from the given dataset names.\", \"You may want to choose or enter different filters and try auto-pairing again.\", \"Close this message using the X on the right to view more help.\"].join(\" \"));\n            }\n            this._showAlert(message, msgClass);\n        });\n\n        //this.on( 'all', function(){\n        //    this.info( arguments );\n        //});\n        return this;\n    },\n\n    events: {\n        // header\n        \"click .more-help\": \"_clickMoreHelp\",\n        \"click .less-help\": \"_clickLessHelp\",\n        \"click .main-help\": \"_toggleHelp\",\n        \"click .header .alert button\": \"_hideAlert\",\n        \"click .forward-column .column-title\": \"_clickShowOnlyUnpaired\",\n        \"click .reverse-column .column-title\": \"_clickShowOnlyUnpaired\",\n        \"click .unpair-all-link\": \"_clickUnpairAll\",\n        //TODO: this seems kinda backasswards - re-sending jq event as a backbone event, can we listen directly?\n        \"change .forward-unpaired-filter input\": function changeForwardUnpairedFilterInput(ev) {\n            this.trigger(\"filter-change\");\n        },\n        \"focus .forward-unpaired-filter input\": function focusForwardUnpairedFilterInput(ev) {\n            $(ev.currentTarget).select();\n        },\n        \"click .autopair-link\": \"_clickAutopair\",\n        \"click .choose-filters .filter-choice\": \"_clickFilterChoice\",\n        \"click .clear-filters-link\": \"_clearFilters\",\n        \"change .reverse-unpaired-filter input\": function changeReverseUnpairedFilterInput(ev) {\n            this.trigger(\"filter-change\");\n        },\n        \"focus .reverse-unpaired-filter input\": function focusReverseUnpairedFilterInput(ev) {\n            $(ev.currentTarget).select();\n        },\n        // unpaired\n        \"click .forward-column .dataset.unpaired\": \"_clickUnpairedDataset\",\n        \"click .reverse-column .dataset.unpaired\": \"_clickUnpairedDataset\",\n        \"click .paired-column .dataset.unpaired\": \"_clickPairRow\",\n        \"click .unpaired-columns\": \"clearSelectedUnpaired\",\n        \"mousedown .unpaired-columns .dataset\": \"_mousedownUnpaired\",\n        // divider\n        \"click .paired-column-title\": \"_clickShowOnlyPaired\",\n        \"mousedown .flexible-partition-drag\": \"_startPartitionDrag\",\n        // paired\n        \"click .paired-columns .dataset.paired\": \"selectPair\",\n        \"click .paired-columns\": \"clearSelectedPaired\",\n        \"click .paired-columns .pair-name\": \"_clickPairName\",\n        \"click .unpair-btn\": \"_clickUnpair\",\n        // paired - drop target\n        //'dragenter .paired-columns'                 : '_dragenterPairedColumns',\n        //'dragleave .paired-columns .column-datasets': '_dragleavePairedColumns',\n        \"dragover .paired-columns .column-datasets\": \"_dragoverPairedColumns\",\n        \"drop .paired-columns .column-datasets\": \"_dropPairedColumns\",\n\n        \"pair.dragstart .paired-columns .column-datasets\": \"_pairDragstart\",\n        \"pair.dragend   .paired-columns .column-datasets\": \"_pairDragend\",\n\n        // footer\n        \"change .remove-extensions\": function changeRemoveExtensions(ev) {\n            this.toggleExtensions();\n        },\n        \"change .collection-name\": \"_changeName\",\n        \"keydown .collection-name\": \"_nameCheckForEnter\",\n        \"change .hide-originals\": \"_changeHideOriginals\",\n        \"click .cancel-create\": \"_cancelCreate\",\n        \"click .create-collection\": \"_clickCreate\" //,\n    },\n\n    /** toggle between showing only unpaired and split view */\n    _clickShowOnlyUnpaired: function _clickShowOnlyUnpaired(ev) {\n        //this.debug( 'click unpaired', ev.currentTarget );\n        if (this.$(\".paired-columns\").is(\":visible\")) {\n            this.hidePaired();\n        } else {\n            this.splitView();\n        }\n    },\n    /** toggle between showing only paired and split view */\n    _clickShowOnlyPaired: function _clickShowOnlyPaired(ev) {\n        //this.debug( 'click paired' );\n        if (this.$(\".unpaired-columns\").is(\":visible\")) {\n            this.hideUnpaired();\n        } else {\n            this.splitView();\n        }\n    },\n\n    /** hide unpaired, show paired */\n    hideUnpaired: function hideUnpaired(speed, callback) {\n        this.unpairedPanelHidden = true;\n        this.pairedPanelHidden = false;\n        this._renderMiddle(speed, callback);\n    },\n    /** hide paired, show unpaired */\n    hidePaired: function hidePaired(speed, callback) {\n        this.unpairedPanelHidden = false;\n        this.pairedPanelHidden = true;\n        this._renderMiddle(speed, callback);\n    },\n    /** show both paired and unpaired (splitting evenly) */\n    splitView: function splitView(speed, callback) {\n        this.unpairedPanelHidden = this.pairedPanelHidden = false;\n        this._renderMiddle(speed, callback);\n        return this;\n    },\n\n    /** unpair all paired and do other super neat stuff which I'm not really sure about yet... */\n    _clickUnpairAll: function _clickUnpairAll(ev) {\n        this.metric(\"unpairAll\");\n        this.unpairAll();\n    },\n\n    /** attempt to autopair */\n    _clickAutopair: function _clickAutopair(ev) {\n        var paired = this.autoPair();\n        this.metric(\"autopair\", paired.length, this.unpaired.length);\n        this.trigger(\"autopair\");\n    },\n\n    /** set the filters based on the data attributes of the button click target */\n    _clickFilterChoice: function _clickFilterChoice(ev) {\n        var $selected = $(ev.currentTarget);\n        this.$(\".forward-unpaired-filter input\").val($selected.data(\"forward\"));\n        this.$(\".reverse-unpaired-filter input\").val($selected.data(\"reverse\"));\n        this._hideChooseFilters();\n        this.trigger(\"filter-change\");\n    },\n\n    /** hide the choose filters popover */\n    _hideChooseFilters: function _hideChooseFilters() {\n        //TODO: update bootstrap and remove the following hack\n        //  see also: https://github.com/twbs/bootstrap/issues/10260\n        this.$(\".choose-filters-link\").popover(\"hide\");\n        this.$(\".popover\").css(\"display\", \"none\");\n    },\n\n    /** clear both filters */\n    _clearFilters: function _clearFilters(ev) {\n        this.$(\".forward-unpaired-filter input\").val(\"\");\n        this.$(\".reverse-unpaired-filter input\").val(\"\");\n        this.trigger(\"filter-change\");\n    },\n\n    // ........................................................................ unpaired\n    /** select an unpaired dataset */\n    _clickUnpairedDataset: function _clickUnpairedDataset(ev) {\n        ev.stopPropagation();\n        return this.toggleSelectUnpaired($(ev.currentTarget));\n    },\n\n    /** Toggle the selection of an unpaired dataset representation.\n    *  @param [jQuery] $dataset        the unpaired dataset dom rep to select\n    *  @param [Boolean] options.force  if defined, force selection based on T/F; otherwise, toggle\n    */\n    toggleSelectUnpaired: function toggleSelectUnpaired($dataset, options) {\n        options = options || {};\n        var dataset = $dataset.data(\"dataset\"),\n            select = options.force !== undefined ? options.force : !$dataset.hasClass(\"selected\");\n        //this.debug( id, options.force, $dataset, dataset );\n        if (!$dataset.length || dataset === undefined) {\n            return $dataset;\n        }\n\n        if (select) {\n            $dataset.addClass(\"selected\");\n            if (!options.waitToPair) {\n                this.pairAllSelected();\n            }\n        } else {\n            $dataset.removeClass(\"selected\");\n            //delete dataset.selected;\n        }\n        return $dataset;\n    },\n\n    /** pair all the currently selected unpaired datasets */\n    pairAllSelected: function pairAllSelected(options) {\n        options = options || {};\n        var creator = this,\n            fwds = [],\n            revs = [],\n            pairs = [];\n        creator.$(\".unpaired-columns .forward-column .dataset.selected\").each(function () {\n            fwds.push($(this).data(\"dataset\"));\n        });\n        creator.$(\".unpaired-columns .reverse-column .dataset.selected\").each(function () {\n            revs.push($(this).data(\"dataset\"));\n        });\n        fwds.length = revs.length = Math.min(fwds.length, revs.length);\n        //this.debug( fwds );\n        //this.debug( revs );\n        fwds.forEach(function (fwd, i) {\n            try {\n                pairs.push(creator._pair(fwd, revs[i], { silent: true }));\n            } catch (err) {\n                //TODO: preserve selected state of those that couldn't be paired\n                //TODO: warn that some could not be paired\n                creator.error(err);\n            }\n        });\n        if (pairs.length && !options.silent) {\n            this.trigger(\"pair:new\", pairs);\n        }\n        return pairs;\n    },\n\n    /** clear the selection on all unpaired datasets */\n    clearSelectedUnpaired: function clearSelectedUnpaired() {\n        this.$(\".unpaired-columns .dataset.selected\").removeClass(\"selected\");\n    },\n\n    /** when holding down the shift key on a click, 'paint' the moused over datasets as selected */\n    _mousedownUnpaired: function _mousedownUnpaired(ev) {\n        if (ev.shiftKey) {\n            var creator = this,\n                $startTarget = $(ev.target).addClass(\"selected\"),\n                moveListener = function moveListener(ev) {\n                creator.$(ev.target).filter(\".dataset\").addClass(\"selected\");\n            };\n            $startTarget.parent().on(\"mousemove\", moveListener);\n\n            // on any mouseup, stop listening to the move and try to pair any selected\n            $(document).one(\"mouseup\", function (ev) {\n                $startTarget.parent().off(\"mousemove\", moveListener);\n                creator.pairAllSelected();\n            });\n        }\n    },\n\n    /** attempt to pair two datasets directly across from one another */\n    _clickPairRow: function _clickPairRow(ev) {\n        //if( !ev.currentTarget ){ return true; }\n        var rowIndex = $(ev.currentTarget).index(),\n            fwd = $(\".unpaired-columns .forward-column .dataset\").eq(rowIndex).data(\"dataset\"),\n            rev = $(\".unpaired-columns .reverse-column .dataset\").eq(rowIndex).data(\"dataset\");\n        //this.debug( 'row:', rowIndex, fwd, rev );\n        this._pair(fwd, rev);\n    },\n\n    // ........................................................................ divider/partition\n    /** start dragging the visible divider/partition between unpaired and paired panes */\n    _startPartitionDrag: function _startPartitionDrag(ev) {\n        var creator = this,\n            startingY = ev.pageY;\n        //this.debug( 'partition drag START:', ev );\n        $(\"body\").css(\"cursor\", \"ns-resize\");\n        creator.$(\".flexible-partition-drag\").css(\"color\", \"black\");\n\n        function endDrag(ev) {\n            //creator.debug( 'partition drag STOP:', ev );\n            // doing this by an added class didn't really work well - kept flashing still\n            creator.$(\".flexible-partition-drag\").css(\"color\", \"\");\n            $(\"body\").css(\"cursor\", \"\").unbind(\"mousemove\", trackMouse);\n        }\n        function trackMouse(ev) {\n            var offset = ev.pageY - startingY;\n            //creator.debug( 'partition:', startingY, offset );\n            if (!creator.adjPartition(offset)) {\n                //creator.debug( 'mouseup triggered' );\n                $(\"body\").trigger(\"mouseup\");\n            }\n            creator._adjUnpairedOnScrollbar();\n            startingY += offset;\n        }\n        $(\"body\").mousemove(trackMouse);\n        $(\"body\").one(\"mouseup\", endDrag);\n    },\n\n    /** adjust the parition up/down +/-adj pixels */\n    adjPartition: function adjPartition(adj) {\n        var $unpaired = this.$(\".unpaired-columns\"),\n            $paired = this.$(\".paired-columns\"),\n            unpairedHi = parseInt($unpaired.css(\"height\"), 10),\n            pairedHi = parseInt($paired.css(\"height\"), 10);\n        //this.debug( adj, 'hi\\'s:', unpairedHi, pairedHi, unpairedHi + adj, pairedHi - adj );\n\n        unpairedHi = Math.max(10, unpairedHi + adj);\n        pairedHi = pairedHi - adj;\n\n        var movingUpwards = adj < 0;\n        // when the divider gets close to the top - lock into hiding the unpaired section\n        if (movingUpwards) {\n            if (this.unpairedPanelHidden) {\n                return false;\n            } else if (unpairedHi <= 10) {\n                this.hideUnpaired();\n                return false;\n            }\n        } else {\n            if (this.unpairedPanelHidden) {\n                $unpaired.show();\n                this.unpairedPanelHidden = false;\n            }\n        }\n\n        // when the divider gets close to the bottom - lock into hiding the paired section\n        if (!movingUpwards) {\n            if (this.pairedPanelHidden) {\n                return false;\n            } else if (pairedHi <= 15) {\n                this.hidePaired();\n                return false;\n            }\n        } else {\n            if (this.pairedPanelHidden) {\n                $paired.show();\n                this.pairedPanelHidden = false;\n            }\n        }\n\n        $unpaired.css({\n            height: unpairedHi + \"px\",\n            flex: \"0 0 auto\"\n        });\n        return true;\n    },\n\n    // ........................................................................ paired\n    /** select a pair when clicked */\n    selectPair: function selectPair(ev) {\n        ev.stopPropagation();\n        $(ev.currentTarget).toggleClass(\"selected\");\n    },\n\n    /** deselect all pairs */\n    clearSelectedPaired: function clearSelectedPaired(ev) {\n        this.$(\".paired-columns .dataset.selected\").removeClass(\"selected\");\n    },\n\n    /** rename a pair when the pair name is clicked */\n    _clickPairName: function _clickPairName(ev) {\n        ev.stopPropagation();\n        var $name = $(ev.currentTarget),\n            $pair = $name.parent().parent(),\n            index = $pair.index(\".dataset.paired\"),\n            pair = this.paired[index],\n            response = prompt(\"Enter a new name for the pair:\", pair.name);\n        if (response) {\n            pair.name = response;\n            // set a flag (which won't be passed in json creation) for manual naming so we don't overwrite these\n            //  when adding/removing extensions\n            //hackish\n            pair.customizedName = true;\n            $name.text(pair.name);\n        }\n    },\n\n    /** unpair this pair */\n    _clickUnpair: function _clickUnpair(ev) {\n        //if( !ev.currentTarget ){ return true; }\n        var pairIndex = Math.floor($(ev.currentTarget).index(\".unpair-btn\"));\n        //this.debug( 'pair:', pairIndex );\n        this._unpair(this.paired[pairIndex]);\n    },\n\n    // ........................................................................ paired - drag and drop re-ordering\n    //_dragenterPairedColumns : function( ev ){\n    //    this.debug( '_dragenterPairedColumns:', ev );\n    //},\n    //_dragleavePairedColumns : function( ev ){\n    //    //this.debug( '_dragleavePairedColumns:', ev );\n    //},\n    /** track the mouse drag over the paired list adding a placeholder to show where the drop would occur */\n    _dragoverPairedColumns: function _dragoverPairedColumns(ev) {\n        //this.debug( '_dragoverPairedColumns:', ev );\n        ev.preventDefault();\n\n        var $list = this.$(\".paired-columns .column-datasets\");\n        this._checkForAutoscroll($list, ev.originalEvent.clientY);\n        //this.debug( ev.originalEvent.clientX, ev.originalEvent.clientY );\n        var $nearest = this._getNearestPairedDatasetLi(ev.originalEvent.clientY);\n\n        $(\".element-drop-placeholder\").remove();\n        var $placeholder = $('<div class=\"element-drop-placeholder\"></div>');\n        if (!$nearest.length) {\n            $list.append($placeholder);\n        } else {\n            $nearest.before($placeholder);\n        }\n    },\n\n    /** If the mouse is near enough to the list's top or bottom, scroll the list */\n    _checkForAutoscroll: function _checkForAutoscroll($element, y) {\n        var AUTOSCROLL_SPEED = 2;\n        var offset = $element.offset(),\n            scrollTop = $element.scrollTop(),\n            upperDist = y - offset.top,\n            lowerDist = offset.top + $element.outerHeight() - y;\n        //this.debug( '_checkForAutoscroll:', scrollTop, upperDist, lowerDist );\n        if (upperDist >= 0 && upperDist < this.autoscrollDist) {\n            $element.scrollTop(scrollTop - AUTOSCROLL_SPEED);\n        } else if (lowerDist >= 0 && lowerDist < this.autoscrollDist) {\n            $element.scrollTop(scrollTop + AUTOSCROLL_SPEED);\n        }\n    },\n\n    /** get the nearest *previous* paired dataset PairView based on the mouse's Y coordinate.\n    *      If the y is at the end of the list, return an empty jQuery object.\n    */\n    _getNearestPairedDatasetLi: function _getNearestPairedDatasetLi(y) {\n        var WIGGLE = 4,\n            lis = this.$(\".paired-columns .column-datasets li\").toArray();\n        for (var i = 0; i < lis.length; i++) {\n            var $li = $(lis[i]),\n                top = $li.offset().top,\n                halfHeight = Math.floor($li.outerHeight() / 2) + WIGGLE;\n            if (top + halfHeight > y && top - halfHeight < y) {\n                //this.debug( y, top + halfHeight, top - halfHeight )\n                return $li;\n            }\n        }\n        return $();\n    },\n    /** drop (dragged/selected PairViews) onto the list, re-ordering both the DOM and the internal array of pairs */\n    _dropPairedColumns: function _dropPairedColumns(ev) {\n        // both required for firefox\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"move\";\n\n        var $nearest = this._getNearestPairedDatasetLi(ev.originalEvent.clientY);\n        if ($nearest.length) {\n            this.$dragging.insertBefore($nearest);\n        } else {\n            // no nearest before - insert after last element (unpair button)\n            this.$dragging.insertAfter(this.$(\".paired-columns .unpair-btn\").last());\n        }\n        // resync the creator's list of paired based on the new DOM order\n        this._syncPairsToDom();\n        return false;\n    },\n    /** resync the creator's list of paired based on the DOM order of pairs */\n    _syncPairsToDom: function _syncPairsToDom() {\n        var newPaired = [];\n        //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n        this.$(\".paired-columns .dataset.paired\").each(function () {\n            newPaired.push($(this).data(\"pair\"));\n        });\n        //this.debug( newPaired );\n        this.paired = newPaired;\n        this._renderPaired();\n    },\n    /** drag communication with pair sub-views: dragstart */\n    _pairDragstart: function _pairDragstart(ev, pair) {\n        //this.debug( '_pairDragstart', ev, pair )\n        // auto select the pair causing the event and move all selected\n        pair.$el.addClass(\"selected\");\n        var $selected = this.$(\".paired-columns .dataset.selected\");\n        this.$dragging = $selected;\n    },\n    /** drag communication with pair sub-views: dragend - remove the placeholder */\n    _pairDragend: function _pairDragend(ev, pair) {\n        //this.debug( '_pairDragend', ev, pair )\n        $(\".element-drop-placeholder\").remove();\n        this.$dragging = null;\n    },\n\n    // ........................................................................ footer\n    toggleExtensions: function toggleExtensions(force) {\n        var creator = this;\n        creator.removeExtensions = force !== undefined ? force : !creator.removeExtensions;\n\n        _.each(creator.paired, function (pair) {\n            // don't overwrite custom names\n            if (pair.customizedName) {\n                return;\n            }\n            pair.name = creator._guessNameForPair(pair.forward, pair.reverse);\n        });\n\n        creator._renderPaired();\n        creator._renderFooter();\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** debug a dataset list */\n    _printList: function _printList(list) {\n        var creator = this;\n        _.each(list, function (e) {\n            if (list === creator.paired) {\n                creator._printPair(e);\n            } else {\n                //creator.debug( e );\n            }\n        });\n    },\n\n    /** print a pair Object */\n    _printPair: function _printPair(pair) {\n        this.debug(pair.forward.name, pair.reverse.name, \": ->\", pair.name);\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return \"PairedCollectionCreator\";\n    },\n\n    templates: _.extend({}, _baseCreator2.default.CollectionCreatorMixin._creatorTemplates, {\n        /** the header (not including help text) */\n        header: _.template(['<div class=\"main-help well clear\">', '<a class=\"more-help\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"More help\"), \"</a>\", '<div class=\"help-content\">', '<a class=\"less-help\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Less\"), \"</a>\", \"</div>\", \"</div>\", '<div class=\"alert alert-dismissable\">', '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>', '<span class=\"alert-message\"></span>', \"</div>\", '<div class=\"column-headers vertically-spaced flex-column-container\">', '<div class=\"forward-column flex-column column\">', '<div class=\"column-header\">', '<div class=\"column-title\">', '<span class=\"title\">', (0, _localization2.default)(\"Unpaired forward\"), \"</span>\", '<span class=\"title-info unpaired-info\"></span>', \"</div>\", '<div class=\"unpaired-filter forward-unpaired-filter pull-left\">', '<input class=\"search-query\" placeholder=\"', (0, _localization2.default)(\"Filter this list\"), '\" />', \"</div>\", \"</div>\", \"</div>\", '<div class=\"paired-column flex-column no-flex column\">', '<div class=\"column-header\">', '<a class=\"choose-filters-link\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"Choose filters\"), \"</a>\", '<a class=\"clear-filters-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Clear filters\"), \"</a><br />\", '<a class=\"autopair-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Auto-pair\"), \"</a>\", \"</div>\", \"</div>\", '<div class=\"reverse-column flex-column column\">', '<div class=\"column-header\">', '<div class=\"column-title\">', '<span class=\"title\">', (0, _localization2.default)(\"Unpaired reverse\"), \"</span>\", '<span class=\"title-info unpaired-info\"></span>', \"</div>\", '<div class=\"unpaired-filter reverse-unpaired-filter pull-left\">', '<input class=\"search-query\" placeholder=\"', (0, _localization2.default)(\"Filter this list\"), '\" />', \"</div>\", \"</div>\", \"</div>\", \"</div>\"].join(\"\")),\n\n        /** the middle: unpaired, divider, and paired */\n        middle: _.template([\n        // contains two flex rows (rows that fill available space) and a divider btwn\n        '<div class=\"unpaired-columns flex-column-container scroll-container flex-row\">', '<div class=\"forward-column flex-column column\">', '<ol class=\"column-datasets\"></ol>', \"</div>\", '<div class=\"paired-column flex-column no-flex column\">', '<ol class=\"column-datasets\"></ol>', \"</div>\", '<div class=\"reverse-column flex-column column\">', '<ol class=\"column-datasets\"></ol>', \"</div>\", \"</div>\", '<div class=\"flexible-partition\">', '<div class=\"flexible-partition-drag\" title=\"', (0, _localization2.default)(\"Drag to change\"), '\"></div>', '<div class=\"column-header\">', '<div class=\"column-title paired-column-title\">', '<span class=\"title\"></span>', \"</div>\", '<a class=\"unpair-all-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Unpair all\"), \"</a>\", \"</div>\", \"</div>\", '<div class=\"paired-columns flex-column-container scroll-container flex-row\">', '<ol class=\"column-datasets\"></ol>', \"</div>\"].join(\"\")),\n\n        /** creation and cancel controls */\n        footer: _.template(['<div class=\"attributes clear\">', '<div class=\"clear\">', '<label class=\"setting-prompt pull-right\">', (0, _localization2.default)(\"Hide original elements\"), \"?\", '<input class=\"hide-originals pull-right\" type=\"checkbox\" />', \"</label>\", '<label class=\"setting-prompt pull-right\">', (0, _localization2.default)(\"Remove file extensions from pair names\"), \"?\", '<input class=\"remove-extensions pull-right\" type=\"checkbox\" />', \"</label>\", \"</div>\", '<div class=\"clear\">', '<input class=\"collection-name form-control pull-right\" ', 'placeholder=\"', (0, _localization2.default)(\"Enter a name for your new list\"), '\" />', '<div class=\"collection-name-prompt pull-right\">', (0, _localization2.default)(\"Name\"), \":</div>\", \"</div>\", \"</div>\", '<div class=\"actions clear vertically-spaced\">', '<div class=\"other-options pull-left\">', '<button class=\"cancel-create btn\" tabindex=\"-1\">', (0, _localization2.default)(\"Cancel\"), \"</button>\", '<div class=\"create-other btn-group dropup\">', '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">', (0, _localization2.default)(\"Create a different kind of collection\"), ' <span class=\"caret\"></span>', \"</button>\", '<ul class=\"dropdown-menu\" role=\"menu\">', '<li><a href=\"#\">', (0, _localization2.default)(\"Create a <i>single</i> pair\"), \"</a></li>\", '<li><a href=\"#\">', (0, _localization2.default)(\"Create a list of <i>unpaired</i> datasets\"), \"</a></li>\", \"</ul>\", \"</div>\", \"</div>\", '<div class=\"main-options pull-right\">', '<button class=\"create-collection btn btn-primary\">', (0, _localization2.default)(\"Create list\"), \"</button>\", \"</div>\", \"</div>\"].join(\"\")),\n\n        /** help content */\n        helpContent: _.template([\"<p>\", (0, _localization2.default)([\"Collections of paired datasets are ordered lists of dataset pairs (often forward and reverse reads). \", \"These collections can be passed to tools and workflows in order to have analyses done on each member of \", \"the entire group. This interface allows you to create a collection, choose which datasets are paired, \", \"and re-order the final collection.\"].join(\"\")), \"</p>\", \"<p>\", (0, _localization2.default)(['Unpaired datasets are shown in the <i data-target=\".unpaired-columns\">unpaired section</i> ', \"(hover over the underlined words to highlight below). \", 'Paired datasets are shown in the <i data-target=\".paired-columns\">paired section</i>.', \"<ul>To pair datasets, you can:\", \"<li>Click a dataset in the \", '<i data-target=\".unpaired-columns .forward-column .column-datasets,', '.unpaired-columns .forward-column\">forward column</i> ', \"to select it then click a dataset in the \", '<i data-target=\".unpaired-columns .reverse-column .column-datasets,', '.unpaired-columns .reverse-column\">reverse column</i>.', \"</li>\", '<li>Click one of the \"Pair these datasets\" buttons in the ', '<i data-target=\".unpaired-columns .paired-column .column-datasets,', '.unpaired-columns .paired-column\">middle column</i> ', \"to pair the datasets in a particular row.\", \"</li>\", '<li>Click <i data-target=\".autopair-link\">\"Auto-pair\"</i> ', \"to have your datasets automatically paired based on name.\", \"</li>\", \"</ul>\"].join(\"\")), \"</p>\", \"<p>\", (0, _localization2.default)([\"<ul>You can filter what is shown in the unpaired sections by:\", \"<li>Entering partial dataset names in either the \", '<i data-target=\".forward-unpaired-filter input\">forward filter</i> or ', '<i data-target=\".reverse-unpaired-filter input\">reverse filter</i>.', \"</li>\", \"<li>Choosing from a list of preset filters by clicking the \", '<i data-target=\".choose-filters-link\">\"Choose filters\" link</i>.', \"</li>\", \"<li>Entering regular expressions to match dataset names. See: \", '<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\"', ' target=\"_blank\">MDN\\'s JavaScript Regular Expression Tutorial</a>. ', \"Note: forward slashes (\\\\) are not needed.\", \"</li>\", \"<li>Clearing the filters by clicking the \", '<i data-target=\".clear-filters-link\">\"Clear filters\" link</i>.', \"</li>\", \"</ul>\"].join(\"\")), \"</p>\", \"<p>\", (0, _localization2.default)([\"To unpair individual dataset pairs, click the \", '<i data-target=\".unpair-btn\">unpair buttons ( <span class=\"fa fa-unlink\"></span> )</i>. ', 'Click the <i data-target=\".unpair-all-link\">\"Unpair all\" link</i> to unpair all pairs.'].join(\"\")), \"</p>\", \"<p>\", (0, _localization2.default)(['You can include or remove the file extensions (e.g. \".fastq\") from your pair names by toggling the ', '<i data-target=\".remove-extensions-prompt\">\"Remove file extensions from pair names?\"</i> control.'].join(\"\")), \"</p>\", \"<p>\", (0, _localization2.default)(['Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ', 'click <i data-target=\".create-collection\">\"Create list\"</i>. ', \"(Note: you do not have to pair all unpaired datasets to finish.)\"].join(\"\")), \"</p>\"].join(\"\"))\n    })\n});\n\n//=============================================================================\n/** a modal version of the paired collection creator */\nvar pairedCollectionCreatorModal = function _pairedCollectionCreatorModal(datasets, options) {\n    var deferred = jQuery.Deferred(),\n        creator;\n\n    options = _.defaults(options || {}, {\n        datasets: datasets,\n        oncancel: function oncancel() {\n            Galaxy.modal.hide();\n            deferred.reject(\"cancelled\");\n        },\n        oncreate: function oncreate(creator, response) {\n            Galaxy.modal.hide();\n            deferred.resolve(response);\n        }\n    });\n\n    if (!window.Galaxy || !Galaxy.modal) {\n        throw new Error(\"Galaxy or Galaxy.modal not found\");\n    }\n\n    creator = new PairedCollectionCreator(options);\n    Galaxy.modal.show({\n        title: \"Create a collection of paired datasets\",\n        body: creator.$el,\n        width: \"80%\",\n        height: \"800px\",\n        closing_events: true\n    });\n    creator.render();\n    window.creator = creator;\n\n    //TODO: remove modal header\n    return deferred;\n};\n\n//=============================================================================\nfunction createListOfPairsCollection(collection, defaultHideSourceItems) {\n    var elements = collection.toJSON();\n    //TODO: validate elements\n    return pairedCollectionCreatorModal(elements, {\n        historyId: collection.historyId,\n        defaultHideSourceItems: defaultHideSourceItems\n    });\n}\n\n//=============================================================================\nexports.default = {\n    PairedCollectionCreator: PairedCollectionCreator,\n    pairedCollectionCreatorModal: pairedCollectionCreatorModal,\n    createListOfPairsCollection: createListOfPairsCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n    //=============================================================================\n    /**\n    (Imported for edit distance algorith. From: https://gist.github.com/andrei-m/982927)\n    Copyright (c) 2011 Andrei Mackenzie\n    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\n    rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\n    persons to whom the Software is furnished to do so, subject to the following conditions:\n    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the\n    Software.\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n    WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n    OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n    */\n    // Compute the edit distance between the two given strings\n    //exports.getEditDistance = function(a, b){\n    function levenshteinDistance(a, b) {\n        if (a.length === 0) {\n            return b.length;\n        }\n        if (b.length === 0) {\n            return a.length;\n        }\n\n        var matrix = [];\n\n        // increment along the first column of each row\n        var i;\n        for (i = 0; i <= b.length; i++) {\n            matrix[i] = [i];\n        }\n\n        // increment each column in the first row\n        var j;\n        for (j = 0; j <= a.length; j++) {\n            matrix[0][j] = j;\n        }\n\n        // Fill in the rest of the matrix\n        for (i = 1; i <= b.length; i++) {\n            for (j = 1; j <= a.length; j++) {\n                if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                    matrix[i][j] = matrix[i - 1][j - 1];\n                } else {\n                    matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution\n                    Math.min(matrix[i][j - 1] + 1, // insertion\n                    matrix[i - 1][j] + 1)); // deletion\n                }\n            }\n        }\n\n        //console.debug( '\\t\\t levenshteinDistance', a, b, matrix[b.length][a.length] );\n        return matrix[b.length][a.length];\n    }\n\n    //=============================================================================\n    return levenshteinDistance;\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _formView = __webpack_require__(9);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _queryStringParsing = __webpack_require__(8);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Contains descriptive dictionaries describing user forms */\nvar Model = Backbone.Model.extend({\n    initialize: function initialize(options) {\n        options = options || {};\n        options.user_id = options.user_id || Galaxy.user.id;\n        this.set({\n            user_id: options.user_id,\n            information: {\n                title: \"Manage information\",\n                description: \"Edit your email, addresses and custom parameters or change your username.\",\n                url: \"api/users/\" + options.user_id + \"/information/inputs\",\n                icon: \"fa-user\",\n                redirect: \"user\"\n            },\n            password: {\n                title: \"Change password\",\n                description: \"Allows you to change your login credentials.\",\n                icon: \"fa-unlock-alt\",\n                url: \"api/users/\" + options.user_id + \"/password/inputs\",\n                submit_title: \"Save password\",\n                redirect: \"user\"\n            },\n            communication: {\n                title: \"Change communication settings\",\n                description: \"Enable or disable the communication feature to chat with other users.\",\n                url: \"api/users/\" + options.user_id + \"/communication/inputs\",\n                icon: \"fa-comments-o\",\n                redirect: \"user\"\n            },\n            permissions: {\n                title: \"Set dataset permissions for new histories\",\n                description: \"Grant others default access to newly created histories. Changes made here will only affect histories created after these settings have been stored.\",\n                url: \"api/users/\" + options.user_id + \"/permissions/inputs\",\n                icon: \"fa-users\",\n                submit_title: \"Save permissions\",\n                redirect: \"user\"\n            },\n            api_key: {\n                title: \"Manage API key\",\n                description: \"Access your current API key or create a new one.\",\n                url: \"api/users/\" + options.user_id + \"/api_key/inputs\",\n                icon: \"fa-key\",\n                submit_title: \"Create a new key\",\n                submit_icon: \"fa-check\"\n            },\n            toolbox_filters: {\n                title: \"Manage Toolbox filters\",\n                description: \"Customize your Toolbox by displaying or omitting sets of Tools.\",\n                url: \"api/users/\" + options.user_id + \"/toolbox_filters/inputs\",\n                icon: \"fa-filter\",\n                submit_title: \"Save filters\",\n                redirect: \"user\"\n            },\n            openids: {\n                title: \"Manage OpenIDs\",\n                description: \"Associate OpenIDs with your account.\",\n                icon: \"fa-openid\",\n                onclick: function onclick() {\n                    window.location.href = Galaxy.root + \"user/openid_manage?cntrller=user&use_panels=True\";\n                }\n            },\n            custom_builds: {\n                title: \"Manage custom builds\",\n                description: \"Add or remove custom builds using history datasets.\",\n                icon: \"fa-cubes\",\n                onclick: function onclick() {\n                    window.location.href = Galaxy.root + \"custom_builds\";\n                }\n            },\n            logout: {\n                title: \"Sign out\",\n                description: \"Click here to sign out of all sessions.\",\n                icon: \"fa-sign-out\",\n                onclick: function onclick() {\n                    Galaxy.modal.show({\n                        title: \"Sign out\",\n                        body: \"Do you want to continue and sign out of all active sessions?\",\n                        buttons: {\n                            Cancel: function Cancel() {\n                                Galaxy.modal.hide();\n                            },\n                            \"Sign out\": function SignOut() {\n                                window.location.href = Galaxy.root + \"user/logout?session_csrf_token=\" + Galaxy.session_csrf_token;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n});\n\n/** View of the main user preference panel with links to individual user forms */\n/** User Preferences view */\nvar View = Backbone.View.extend({\n    title: \"User Preferences\",\n    initialize: function initialize() {\n        this.model = new Model();\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        var config = Galaxy.config;\n        $.getJSON(Galaxy.root + \"api/users/\" + Galaxy.user.id, function (data) {\n            self.$preferences = $(\"<div/>\").addClass(\"ui-panel\").append($(\"<h2/>\").append(\"User preferences\")).append($(\"<p/>\").append(\"You are logged in as <strong>\" + _.escape(data.email) + \"</strong>.\")).append(self.$table = $(\"<table/>\").addClass(\"ui-panel-table\"));\n            var message = _queryStringParsing2.default.get(\"message\");\n            var status = _queryStringParsing2.default.get(\"status\");\n            if (message && status) {\n                self.$preferences.prepend(new _uiMisc2.default.Message({ message: message, status: status }).$el);\n            }\n            if (!config.use_remote_user) {\n                self._addLink(\"information\");\n                self._addLink(\"password\");\n            }\n            if (config.enable_communication_server) {\n                self._addLink(\"communication\");\n            }\n            self._addLink(\"custom_builds\");\n            self._addLink(\"permissions\");\n            self._addLink(\"api_key\");\n            if (config.has_user_tool_filters) {\n                self._addLink(\"toolbox_filters\");\n            }\n            if (config.enable_openid && !config.use_remote_user) {\n                self._addLink(\"openids\");\n            }\n            if (Galaxy.session_csrf_token) {\n                self._addLink(\"logout\");\n            }\n            self.$preferences.append(self._templateFooter(data));\n            self.$el.empty().append(self.$preferences);\n        });\n    },\n\n    _addLink: function _addLink(action) {\n        var options = this.model.get(action);\n        var $row = $(this._templateLink(options));\n        var $a = $row.find(\"a\");\n        if (options.onclick) {\n            $a.on(\"click\", function () {\n                options.onclick();\n            });\n        } else {\n            $a.attr(\"href\", Galaxy.root + \"user/\" + action);\n        }\n        this.$table.append($row);\n    },\n\n    _templateLink: function _templateLink(options) {\n        return \"<tr>\" + \"<td>\" + '<div class=\"ui-panel-icon fa ' + options.icon + '\">' + \"</td>\" + \"<td>\" + '<a class=\"ui-panel-anchor\" href=\"javascript:void(0)\">' + options.title + \"</a>\" + '<div class=\"ui-form-info\">' + options.description + \"</div>\" + \"</td>\" + \"</tr>\";\n    },\n\n    _templateFooter: function _templateFooter(options) {\n        return '<p class=\"ui-panel-footer\">' + \"You are using <strong>\" + options.nice_total_disk_usage + \"</strong> of disk space in this Galaxy instance. \" + (Galaxy.config.enable_quotas ? \"Your disk quota is: <strong>\" + options.quota + \"</strong>. \" : \"\") + 'Is your usage more than expected? See the <a href=\"https://galaxyproject.org/learn/managing-datasets/\" target=\"_blank\">documentation</a> for tips on how to find all of the data in your account.' + \"</p>\";\n    }\n});\n\nexports.default = {\n    View: View,\n    Model: Model\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _formView = __webpack_require__(9);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _uiTable = __webpack_require__(68);\n\nvar _uiTable2 = _interopRequireDefault(_uiTable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** This class renders the chart configuration form. */\nvar Collection = Backbone.Collection.extend({\n    comparator: function comparator(a, b) {\n        a = a.get(\"name\");\n        b = b.get(\"name\");\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n});\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        var history_id = Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n        this.model = new Backbone.Model();\n        this.model.url = Galaxy.root + \"api/histories/\" + history_id + \"/custom_builds_metadata\";\n        this.collection = new Collection();\n        this.collection.url = Galaxy.root + \"api/users/\" + Galaxy.user.id + \"/custom_builds\";\n        this.message = new _uiMisc2.default.Message({});\n        this.installed_builds = new _uiMisc2.default.Select.View({\n            optional: true,\n            onchange: function onchange() {\n                self.installed_builds.value(null);\n            },\n            empty_text: \"List of available builds:\",\n            error_text: \"No system installed builds available.\"\n        });\n        this.table = new _uiTable2.default.View({ cls: \"grid\", selectable: false });\n        this.table.addHeader(\"Name\");\n        this.table.addHeader(\"Key\");\n        this.table.addHeader(\"Number of chroms/contigs\");\n        this.table.addHeader(\"\");\n        this.table.appendHeader();\n        this.setElement($(\"<div/>\").append($(\"<h4/>\").text(\"Current Custom Builds\")).append(this.table.$el).append(this.$installed = $(\"<div/>\").append($(\"<h4/>\").text(\"System Installed Builds\").addClass(\"ui-margin-top\")).append(this.installed_builds.$el)).append($(\"<h4/>\").text(\"Add a Custom Build\").addClass(\"ui-margin-top\")).append($(\"<span/>\").addClass(\"ui-column\").append($(\"<div/>\").addClass(\"ui-column-left\").append(this.message.$el).append(this.$form = $(\"<div/>\").addClass(\"ui-margin-top\"))).append(this.$help = $(\"<div/>\").addClass(\"ui-column-right\"))));\n        this.listenTo(this.collection, \"add remove reset\", function () {\n            self._renderTable();\n        });\n        this.listenTo(this.model, \"change\", function () {\n            self._renderForm();\n        });\n        this.collection.fetch();\n        this.model.fetch();\n    },\n\n    render: function render() {\n        this._renderTable();\n        this._renderForm();\n    },\n\n    _renderTable: function _renderTable() {\n        var self = this;\n        this.table.delAll();\n        this.collection.sort();\n        this.collection.each(function (model) {\n            self.table.add(model.get(\"name\"));\n            self.table.add(model.id);\n            self.table.add(model.get(\"count\") !== undefined ? model.get(\"count\") : \"Processing...\");\n            self.table.add(new _uiMisc2.default.ButtonIcon({\n                icon: \"fa-trash-o\",\n                cls: \"ui-button-icon-plain\",\n                tooltip: \"Delete custom build.\",\n                onclick: function onclick() {\n                    model.destroy();\n                }\n            }).$el);\n            self.table.append(model.id);\n        });\n    },\n\n    _renderForm: function _renderForm() {\n        var self = this;\n        var initial_type = \"fasta\";\n        var form = new _formView2.default({\n            inputs: [{\n                type: \"text\",\n                name: \"name\",\n                label: \"Name\",\n                help: \"Specify a build name e.g. Hamster.\"\n            }, {\n                type: \"text\",\n                name: \"id\",\n                label: \"Key\",\n                help: \"Specify a build key e.g. hamster_v1.\"\n            }, {\n                name: \"len\",\n                type: \"conditional\",\n                test_param: {\n                    name: \"type\",\n                    label: \"Definition\",\n                    help: \"Provide the data source.\",\n                    type: \"select\",\n                    value: initial_type,\n                    data: [{\n                        value: \"fasta\",\n                        label: \"FASTA-file from history\"\n                    }, {\n                        value: \"file\",\n                        label: \"Len-file from disk\"\n                    }, {\n                        value: \"text\",\n                        label: \"Len-file by copy/paste\"\n                    }]\n                },\n                cases: [{\n                    value: \"fasta\",\n                    inputs: [{\n                        type: \"select\",\n                        name: \"value\",\n                        label: \"FASTA-file\",\n                        data: this.model.get(\"fasta_hdas\")\n                    }]\n                }, {\n                    value: \"file\",\n                    inputs: [{\n                        type: \"upload\",\n                        name: \"value\",\n                        label: \"Len-file\",\n                        data: this.model.get(\"len_hdas\")\n                    }]\n                }, {\n                    value: \"text\",\n                    inputs: [{\n                        type: \"text\",\n                        area: true,\n                        name: \"value\",\n                        label: \"Edit/Paste\"\n                    }]\n                }]\n            }],\n            buttons: {\n                save: new _uiMisc2.default.Button({\n                    icon: \"fa-save\",\n                    tooltip: \"Create new Build\",\n                    title: \"Save\",\n                    cls: \"btn btn-primary ui-clear-float\",\n                    onclick: function onclick() {\n                        var data = form.data.create();\n                        if (!data.id || !data.name) {\n                            self.message.update({\n                                message: \"All inputs are required.\",\n                                status: \"danger\"\n                            });\n                        } else {\n                            self.collection.create(data, {\n                                wait: true,\n                                success: function success(response) {\n                                    if (response.get(\"message\")) {\n                                        self.message.update({\n                                            message: response.get(\"message\"),\n                                            status: \"warning\"\n                                        });\n                                    } else {\n                                        self.message.update({\n                                            message: \"Successfully added a new custom build.\",\n                                            status: \"success\"\n                                        });\n                                    }\n                                },\n                                error: function error(response, err) {\n                                    var message = err && err.responseJSON && err.responseJSON.err_msg;\n                                    self.message.update({\n                                        message: message || \"Failed to create custom build.\",\n                                        status: \"danger\"\n                                    });\n                                }\n                            });\n                        }\n                    }\n                })\n            },\n            onchange: function onchange() {\n                var input_id = form.data.match(\"len|type\");\n                if (input_id) {\n                    var input_field = form.field_list[input_id];\n                    self._renderHelp(input_field.value());\n                }\n            }\n        });\n        this.$form.empty().append(form.$el);\n        var installed_builds = this.model.get(\"installed_builds\");\n        if (installed_builds && installed_builds.length) {\n            this.$installed.show();\n            this.installed_builds.update(this.model.get(\"installed_builds\"));\n        } else {\n            this.$installed.hide();\n        }\n        this._renderHelp(initial_type);\n    },\n\n    _renderHelp: function _renderHelp(len_type) {\n        this.$help.empty().addClass(\"alert alert-info\").html(len_type == \"fasta\" ? this._templateFasta() : this._templateLen());\n    },\n\n    _templateLen: function _templateLen() {\n        return \"<h4>Length Format</h4>\" + \"<p>\" + \"The length format is two-column, separated by whitespace, of the form:\" + \"<pre>chrom/contig   length of chrom/contig</pre>\" + \"</p>\" + \"<p>\" + \"For example, the first few entries of <em>mm9.len</em> are as follows:\" + \"<pre>\" + \"chr1    197195432\\n\" + \"chr2    181748087\\n\" + \"chr3    159599783\\n\" + \"chr4    155630120\\n\" + \"chr5    152537259\" + \"</pre>\" + \"</p>\" + \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" + \"to set the maximum basepair of the track browser. You may either upload a .len file\" + \"of this format (Len File option), or directly enter the information into the box \" + \"(Len Entry option).</p>\";\n    },\n\n    _templateFasta: function _templateFasta() {\n        return \"<h4>FASTA format</h4>\" + \"<p>\" + \"This is a multi-fasta file from your current history that provides the genome\" + \"sequences for each chromosome/contig in your build.\" + \"</p>\" + \"<p>\" + \"Here is a snippet from an example multi-fasta file:\" + \"<pre>\" + \">chr1\\n\" + \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" + \">chr2\\n\" + \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" + \"...\" + \"</pre>\" + \"</p>\";\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _gridView = __webpack_require__(12);\n\nvar _gridView2 = _interopRequireDefault(_gridView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model(options);\n        this.item = this.model.get(\"item\");\n        this.title = this.model.get(\"plural\");\n        $.ajax({\n            url: Galaxy.root + this.item + \"/\" + this.model.get(\"action_id\") + \"?\" + $.param(Galaxy.params),\n            success: function success(response) {\n                response[\"dict_format\"] = true;\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function render() {\n        var grid = new _gridView2.default(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n        this.$el.append(this._templateShared());\n    },\n\n    _templateShared: function _templateShared() {\n        var self = this;\n        var $tmpl = $(\"<div>\" + \"<h2>\" + this.model.get(\"plural\") + \" shared with you by others</h2>\" + \"</div>\");\n        var options = this.model.attributes;\n        if (options.shared_by_others && options.shared_by_others.length > 0) {\n            var $table = $('<table class=\"colored\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">' + '<tr class=\"header\">' + \"<th>Title</th>\" + \"<th>Owner</th>\" + \"</tr>\" + \"</table>\");\n            _.each(options.shared_by_others, function (it, index) {\n                var display_url = Galaxy.root + self.item + \"/display_by_username_and_slug?username=\" + it.username + \"&slug=\" + it.slug;\n                $table.append(\"<tr>\" + \"<td>\" + '<a href=\"' + display_url + '\">' + _.escape(it.title) + \"</a>\" + \"</td>\" + \"<td>\" + _.escape(it.username) + \"</td>\" + \"</tr>\");\n            });\n            $tmpl.append($table);\n        } else {\n            $tmpl.append(\"No \" + this.model.get(\"plural\").toLowerCase() + \" have been shared with you.\");\n        }\n        return $tmpl;\n    }\n}); /** This class renders the grid list with shared section. */\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/** Workflow view */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(54), __webpack_require__(22), __webpack_require__(167), __webpack_require__(8)], __WEBPACK_AMD_DEFINE_RESULT__ = function (mod_toastr, TAGS, WORKFLOWS, QueryStringParsing) {\n    /** View of the individual workflows */\n    var WorkflowItemView = Backbone.View.extend({\n        tagName: \"tr\", // name of (orphan) root tag in this.el\n        initialize: function initialize() {\n            _.bindAll(this, \"render\", \"_rowTemplate\", \"renderTagEditor\", \"_templateActions\", \"removeWorkflow\", \"copyWorkflow\"); // every function that uses 'this' as the current object should be in here\n            mod_toastr.options.timeOut = 1500;\n        },\n\n        events: {\n            \"click #show-in-tool-panel\": \"showInToolPanel\",\n            \"click #delete-workflow\": \"removeWorkflow\",\n            \"click #rename-workflow\": \"renameWorkflow\",\n            \"click #copy-workflow\": \"copyWorkflow\"\n        },\n\n        render: function render() {\n            $(this.el).html(this._rowTemplate());\n            return this;\n        },\n\n        showInToolPanel: function showInToolPanel() {\n            this.model.set(\"show_in_tool_panel\", !this.model.get(\"show_in_tool_panel\"));\n            this.model.save();\n            // This reloads the whole page, so that the workflow appears in the tool panel.\n            // Ideally we would notify only the tool panel of a change\n            window.location = Galaxy.root + \"workflow\";\n        },\n\n        removeWorkflow: function removeWorkflow() {\n            var wfName = this.model.get(\"name\");\n            if (window.confirm(\"Are you sure you want to delete workflow '\" + wfName + \"'?\")) {\n                this.model.destroy({\n                    success: function success() {\n                        mod_toastr.success(\"Successfully deleted workflow '\" + wfName + \"'\");\n                    }\n                });\n                this.remove();\n            }\n        },\n\n        renameWorkflow: function renameWorkflow() {\n            var oldName = this.model.get(\"name\");\n            var newName = window.prompt(\"Enter a new Name for workflow '\" + oldName + \"'\", oldName);\n            if (newName) {\n                this.model.save({ name: newName }, {\n                    success: function success() {\n                        mod_toastr.success(\"Successfully renamed workflow '\" + oldName + \"' to '\" + newName + \"'\");\n                    }\n                });\n                this.render();\n            }\n        },\n\n        copyWorkflow: function copyWorkflow() {\n            var self = this;\n            var oldName = this.model.get(\"name\");\n            $.getJSON(this.model.urlRoot + \"/\" + this.model.id + \"/download\", function (wfJson) {\n                var newName = \"Copy of \" + oldName;\n                var currentOwner = self.model.get(\"owner\");\n                if (currentOwner != Galaxy.user.attributes.username) {\n                    newName += \" shared by user \" + currentOwner;\n                }\n                wfJson.name = newName;\n                self.collection.create(wfJson, {\n                    at: 0,\n                    wait: true,\n                    success: function success() {\n                        mod_toastr.success(\"Successfully copied workflow '\" + oldName + \"' to '\" + newName + \"'\");\n                    },\n                    error: function error(model, resp, options) {\n                        // signature seems to have changed over the course of backbone dev\n                        // see https://github.com/jashkenas/backbone/issues/2606#issuecomment-19289483\n                        mod_toastr.error(options.errorThrown);\n                    }\n                });\n            }).error(function (jqXHR, textStatus, errorThrown) {\n                mod_toastr.error(jqXHR.responseJSON.err_msg);\n            });\n        },\n\n        _rowTemplate: function _rowTemplate() {\n            var show = this.model.get(\"show_in_tool_panel\");\n            var wfId = this.model.id;\n            var checkboxHtml = '<input id=\"show-in-tool-panel\" type=\"checkbox\" class=\"show-in-tool-panel\" ' + (show ? 'checked=\"' + show + '\"' : \"\") + ' value=\"' + wfId + '\">';\n            var trHtml = \"<td>\" + '<div class=\"dropdown\">' + '<button class=\"menubutton\" type=\"button\" data-toggle=\"dropdown\">' + _.escape(this.model.get(\"name\")) + '<span class=\"caret\"></span>' + \"</button>\" + this._templateActions() + \"</div>\" + \"</td>\" + \"<td><span>\" + '<div class=\"' + wfId + ' tags-display\"></div>' + \"</td>\" + \"<td>\" + (this.model.get(\"owner\") === Galaxy.user.attributes.username ? \"You\" : this.model.get(\"owner\")) + \"</span></td>\" + \"<td>\" + this.model.get(\"number_of_steps\") + \"</td>\" + \"<td>\" + (this.model.get(\"published\") ? \"Yes\" : \"No\") + \"</td>\" + \"<td>\" + checkboxHtml + \"</td>\";\n            return trHtml;\n        },\n\n        renderTagEditor: function renderTagEditor() {\n            var TagEditor = new TAGS.TagsEditor({\n                model: this.model,\n                el: $.find(\".\" + this.model.id + \".tags-display\"),\n                workflow_mode: true\n            });\n            TagEditor.toggle(true);\n            TagEditor.render();\n        },\n\n        /** Template for user actions for workflows */\n        _templateActions: function _templateActions() {\n            if (this.model.get(\"owner\") === Galaxy.user.attributes.username) {\n                return '<ul class=\"dropdown-menu action-dpd\">' + '<li><a href=\"' + Galaxy.root + \"workflow/editor?id=\" + this.model.id + '\">Edit</a></li>' + '<li><a href=\"' + Galaxy.root + \"workflow/run?id=\" + this.model.id + '\">Run</a></li>' + '<li><a href=\"' + Galaxy.root + \"workflow/sharing?id=\" + this.model.id + '\">Share</a></li>' + '<li><a href=\"' + Galaxy.root + \"api/workflows/\" + this.model.id + '/download?format=json-download\">Download</a></li>' + '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' + '<li><a id=\"rename-workflow\" style=\"cursor: pointer;\">Rename</a></li>' + '<li><a href=\"' + Galaxy.root + \"workflow/display_by_id?id=\" + this.model.id + '\">View</a></li>' + '<li><a id=\"delete-workflow\" style=\"cursor: pointer;\">Delete</a></li>' + \"</ul>\";\n            } else {\n                return '<ul class=\"dropdown-menu action-dpd\">' + '<li><a href=\"' + Galaxy.root + \"workflow/display_by_username_and_slug?username=\" + this.model.get(\"owner\") + \"&slug=\" + this.model.get(\"slug\") + '\">View</a></li>' + '<li><a href=\"' + Galaxy.root + \"workflow/run?id=\" + this.model.id + '\">Run</a></li>' + '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' + '<li><a class=\"link-confirm-shared-' + this.model.id + '\" href=\"' + Galaxy.root + \"workflow/sharing?unshare_me=True&id=\" + this.model.id + '\">Remove</a></li>' + \"</ul>\";\n            }\n        }\n    });\n\n    /** View of the main workflow list page */\n    var WorkflowListView = Backbone.View.extend({\n        title: \"Workflows\",\n        initialize: function initialize() {\n            this.setElement(\"<div/>\");\n            _.bindAll(this, \"adjustActiondropdown\");\n            this.collection = new WORKFLOWS.WorkflowCollection();\n            this.collection.fetch().done(this.render());\n            this.collection.bind(\"add\", this.appendItem);\n            this.collection.on(\"sync\", this.render, this);\n        },\n\n        events: {\n            dragleave: \"unhighlightDropZone\",\n            drop: \"drop\",\n            dragover: function dragover(ev) {\n                $(\".hidden_description_layer\").addClass(\"dragover\");\n                $(\".menubutton\").addClass(\"background-none\");\n                ev.preventDefault();\n            }\n        },\n\n        unhighlightDropZone: function unhighlightDropZone() {\n            $(\".hidden_description_layer\").removeClass(\"dragover\");\n            $(\".menubutton\").removeClass(\"background-none\");\n        },\n\n        drop: function drop(e) {\n            // TODO: check that file is valid galaxy workflow\n            this.unhighlightDropZone();\n            e.preventDefault();\n            var files = e.dataTransfer.files;\n            var self = this;\n            for (var i = 0, f; f = files[i]; i++) {\n                self.readWorkflowFiles(f);\n            }\n        },\n\n        readWorkflowFiles: function readWorkflowFiles(f) {\n            var self = this;\n            var reader = new FileReader();\n            reader.onload = function (theFile) {\n                var wf_json;\n                try {\n                    wf_json = JSON.parse(reader.result);\n                } catch (e) {\n                    mod_toastr.error(\"Could not read file '\" + f.name + \"'. Verify it is a valid Galaxy workflow\");\n                    wf_json = null;\n                }\n                if (wf_json) {\n                    self.collection.create(wf_json, {\n                        at: 0,\n                        wait: true,\n                        success: function success() {\n                            mod_toastr.success(\"Successfully imported workflow '\" + wf_json.name + \"'\");\n                        },\n                        error: function error(model, resp, options) {\n                            mod_toastr.error(options.errorThrown);\n                        }\n                    });\n                }\n            };\n            reader.readAsText(f, \"utf-8\");\n        },\n\n        _showArgErrors: _.once(function () {\n            // Parse args out of params, display if there's a message.\n            var msg_text = QueryStringParsing.get(\"message\");\n            var msg_status = QueryStringParsing.get(\"status\");\n            if (msg_status === \"error\") {\n                mod_toastr.error(_.escape(msg_text || \"Unknown Error, please report this to an administrator.\"));\n            } else if (msg_text) {\n                mod_toastr.info(_.escape(msg_text));\n            }\n        }),\n\n        render: function render() {\n            // Add workflow header\n            var header = this._templateHeader();\n            // Add the actions buttons\n            var templateActions = this._templateActionButtons();\n            var tableTemplate = this._templateWorkflowTable();\n            this.$el.html(header + templateActions + tableTemplate);\n            var self = this;\n            _(this.collection.models).each(function (item) {\n                // in case collection is not empty\n                self.appendItem(item);\n                self.confirmDelete(item);\n            }, this);\n            var minQueryLength = 3;\n            this.searchWorkflow(this.$(\".search-wf\"), this.$(\".workflow-search tr\"), minQueryLength);\n            this.adjustActiondropdown();\n            this._showArgErrors();\n            return this;\n        },\n\n        appendItem: function appendItem(item) {\n            var workflowItemView = new WorkflowItemView({\n                model: item,\n                collection: this.collection\n            });\n            $(\".workflow-search\").append(workflowItemView.render().el);\n            workflowItemView.renderTagEditor();\n        },\n\n        /** Add confirm box before removing/unsharing workflow */\n        confirmDelete: function confirmDelete(workflow) {\n            var $el_shared_wf_link = this.$(\".link-confirm-shared-\" + workflow.id);\n            $el_shared_wf_link.click(function () {\n                return window.confirm(\"Are you sure you want to remove the shared workflow '\" + workflow.attributes.name + \"'?\");\n            });\n        },\n\n        /** Implement client side workflow search/filtering */\n        searchWorkflow: function searchWorkflow($el_searchinput, $el_tabletr, min_querylen) {\n            $el_searchinput.on(\"keyup\", function () {\n                var query = $(this).val();\n                // Filter when query is at least 3 characters\n                // otherwise show all rows\n                if (query.length >= min_querylen) {\n                    // Ignore the query's case using 'i'\n                    var regular_expression = new RegExp(query, \"i\");\n                    $el_tabletr.hide();\n                    $el_tabletr.filter(function () {\n                        // Apply regular expression on each row's text\n                        // and show when there is a match\n                        return regular_expression.test($(this).text());\n                    }).show();\n                } else {\n                    $el_tabletr.show();\n                }\n            });\n        },\n\n        /** Ajust the position of dropdown with respect to table */\n        adjustActiondropdown: function adjustActiondropdown() {\n            $(this.el).on(\"show.bs.dropdown\", function () {\n                $(this.el).css(\"overflow\", \"inherit\");\n            });\n            $(this.el).on(\"hide.bs.dropdown\", function () {\n                $(this.el).css(\"overflow\", \"auto\");\n            });\n        },\n\n        /** Template for no workflow */\n        _templateNoWorkflow: function _templateNoWorkflow() {\n            return '<div class=\"wf-nodata\"> You have no workflows. </div>';\n        },\n\n        /** Template for actions buttons */\n        _templateActionButtons: function _templateActionButtons() {\n            return '<ul class=\"manage-table-actions\">' + \"<li>\" + '<input class=\"search-wf form-control\" type=\"text\" autocomplete=\"off\" placeholder=\"search for workflow...\">' + \"</li>\" + \"<li>\" + '<a class=\"action-button fa fa-plus wf-action\" id=\"new-workflow\" title=\"Create new workflow\" href=\"' + Galaxy.root + 'workflow/create\">' + \"</a>\" + \"</li>\" + \"<li>\" + '<a class=\"action-button fa fa-upload wf-action\" id=\"import-workflow\" title=\"Upload or import workflow\" href=\"' + Galaxy.root + 'workflow/import_workflow\">' + \"</a>\" + \"</li>\" + \"</ul>\";\n        },\n\n        /** Template for workflow table */\n        _templateWorkflowTable: function _templateWorkflowTable() {\n            var tableHtml = '<table class=\"table colored\"><thead>' + '<tr class=\"header\">' + \"<th>Name</th>\" + \"<th>Tags</th>\" + \"<th>Owner</th>\" + \"<th># of Steps</th>\" + \"<th>Published</th>\" + \"<th>Show in tools panel</th>\" + \"</tr></thead>\";\n            return tableHtml + '<tbody class=\"workflow-search \"><div class=\"hidden_description_layer\"><p>Drop workflow files here to import</p>' + \"</tbody></table></div>\";\n        },\n\n        /** Main template */\n        _templateHeader: function _templateHeader() {\n            return '<div class=\"page-container\">' + '<div class=\"user-workflows wf\">' + '<div class=\"response-message\"></div>' + \"<h2>Your workflows</h2>\" + \"</div>\" + \"</div>\";\n        }\n    });\n\n    var ImportWorkflowView = Backbone.View.extend({\n        initialize: function initialize() {\n            this.setElement(\"<div/>\");\n            this.render();\n        },\n\n        /** Open page to import workflow */\n        render: function render() {\n            var self = this;\n            $.getJSON(Galaxy.root + \"workflow/upload_import_workflow\", function (options) {\n                self.$el.empty().append(self._mainTemplate(options));\n            });\n        },\n\n        /** Template for the import workflow page */\n        _mainTemplate: function _mainTemplate(options) {\n            return \"<div class='toolForm'>\" + \"<div class='toolFormTitle'>Import Galaxy workflow</div>\" + \"<div class='toolFormBody'>\" + \"<form name='import_workflow' id='import_workflow' action='\" + Galaxy.root + \"workflow/upload_import_workflow\" + \"' enctype='multipart/form-data' method='POST'>\" + \"<div class='form-row'>\" + \"<label>Galaxy workflow URL:</label>\" + \"<input type='text' name='url' class='input-url' value='\" + options.url + \"' size='40'>\" + \"<div class='toolParamHelp' style='clear: both;'>\" + \"If the workflow is accessible via a URL, enter the URL above and click <b>Import</b>.\" + \"</div>\" + \"<div style='clear: both'></div>\" + \"</div>\" + \"<div class='form-row'>\" + \"<label>Galaxy workflow file:</label>\" + \"<div class='form-row-input'>\" + \"<input type='file' name='file_data' class='input-file'/>\" + \"</div>\" + \"<div class='toolParamHelp' style='clear: both;'>\" + \"If the workflow is in a file on your computer, choose it and then click <b>Import</b>.\" + \"</div>\" + \"<div style='clear: both'></div>\" + \"</div>\" + \"<div class='form-row'>\" + \"<input type='submit' class='primary-button wf-import' name='import_button' value='Import'>\" + \"</div>\" + \"</form>\" + \"<hr/>\" + \"<div class='form-row'>\" + \"<label>Import a Galaxy workflow from myExperiment:</label>\" + \"<div class='form-row-input'>\" + \"<a href='\" + options.myexperiment_target_url + \"'> Visit myExperiment</a>\" + \"</div>\" + \"<div class='toolParamHelp' style='clear: both;'>\" + \"Click the link above to visit myExperiment and browse for Galaxy workflows.\" + \"</div>\" + \"<div style='clear: both'></div>\" + \"</div>\" + \"</div>\" + \"</div>\";\n        }\n    });\n\n    return {\n        View: WorkflowListView,\n        ImportWorkflowView: ImportWorkflowView\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(5)], __WEBPACK_AMD_DEFINE_RESULT__ = function (baseMVC) {\n    /* global Backbone */\n    // workflow model\n\n    var logNamespace = \"workflow\";\n    //==============================================================================\n    /** @class model for a single workflow.\n    *  @name WorkflowItem\n    *  @augments Backbone.Model\n    */\n    var WorkflowItem = Backbone.Model.extend(baseMVC.LoggableMixin).extend({\n        _logNamespace: logNamespace,\n\n        urlRoot: Galaxy.root + \"api/workflows\",\n\n        toJSON: function toJSON() {\n            // need to overwrite this as endpoint expects the 'workflow' key in payload\n            return { workflow: this.attributes };\n        }\n    });\n\n    //==============================================================================\n    /** @class collection for workflows.\n    *  @name WorkflowCollection\n    *  @augments Backbone.Collection\n    */\n    var WorkflowCollection = Backbone.Collection.extend({\n        model: WorkflowItem,\n        url: Galaxy.root + \"api/workflows\"\n    });\n\n    //==============================================================================\n\n    return {\n        WorkflowItem: WorkflowItem,\n        WorkflowCollection: WorkflowCollection\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _gridView = __webpack_require__(12);\n\nvar _gridView2 = _interopRequireDefault(_gridView);\n\nvar _historyModel = __webpack_require__(38);\n\nvar _historyModel2 = _interopRequireDefault(_historyModel);\n\nvar _copyDialog = __webpack_require__(78);\n\nvar _copyDialog2 = _interopRequireDefault(_copyDialog);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** This class renders the grid list. */\nvar View = Backbone.View.extend({\n    title: \"Histories\",\n    initialize: function initialize(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model();\n        _utils2.default.get({\n            url: Galaxy.root + \"history/\" + options.action_id + \"?\" + $.param(Galaxy.params),\n            success: function success(response) {\n                response[\"dict_format\"] = true;\n                _.each(response[\"operations\"], function (operation) {\n                    if (operation.label == \"Copy\") {\n                        operation.onclick = function (id) {\n                            self._showCopyDialog(id);\n                        };\n                    }\n                });\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function render() {\n        var grid = new _gridView2.default(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n    },\n\n    _showCopyDialog: function _showCopyDialog(id) {\n        var history = new _historyModel2.default.History({ id: id });\n        history.fetch().fail(function () {\n            alert(\"History could not be fetched. Please contact an administrator\");\n        }).done(function () {\n            (0, _copyDialog2.default)(history, {}).done(function () {\n                if (window.parent && window.parent.Galaxy && window.parent.Galaxy.currHistoryPanel) {\n                    window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                }\n                window.location.reload(true);\n            });\n        });\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _formView = __webpack_require__(9);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Dataset edit attributes view */\nvar View = Backbone.View.extend({\n    initialize: function initialize() {\n        this.setElement(\"<div/>\");\n        this.model = new Backbone.Model({\n            dataset_id: Galaxy.params.dataset_id\n        });\n        this.render();\n    },\n\n    // Fetch data for the selected dataset and\n    render: function render() {\n        var data_url = Galaxy.root + \"api/datasets/\" + this.model.get(\"dataset_id\"),\n            self = this;\n\n        _utils2.default.get({\n            url: data_url,\n            success: function success(dataset) {\n                var job_url = Galaxy.root + \"api/jobs/\" + dataset.creating_job + \"?full=True\";\n                _utils2.default.get({\n                    url: job_url,\n                    success: function success(job) {\n                        var job_url = Galaxy.root + \"api/jobs/\" + dataset.creating_job + \"?full=True\";\n                        self.render_error_page(self, dataset, job);\n                    },\n                    error: function error(response) {\n                        var error_response = {\n                            status: \"error\",\n                            message: \"Error occured while loading the job.\",\n                            persistent: true,\n                            cls: \"errormessage\"\n                        };\n                        self.display_message(error_response, self.$(\".response-message\"));\n                    }\n                });\n            },\n            error: function error(response) {\n                var error_response = {\n                    status: \"error\",\n                    message: \"Error occured while loading the dataset.\",\n                    persistent: true,\n                    cls: \"errormessage\"\n                };\n                self.display_message(error_response, self.$(\".response-message\"));\n            }\n        });\n    },\n\n    /** Render the view */\n    render_error_page: function render_error_page(self, dataset, job) {\n        self.$el.empty().append(self._templateHeader());\n        self.$el.append(\"<h2>Dataset Error</h2>\");\n        self.$el.append(\"<p>An error occured while running the tool <b>\" + job.tool_id + \"</b>.</p>\");\n        self.$el.append(\"<p>Tool execution generated the following messages:</p>\");\n        self.$el.append('<pre class=\"code\">' + job.stderr + \"</pre>\");\n        self.$el.append(\"<h2>Report This Error</pre>\");\n        self.$el.append(\"<p>Usually the local Galaxy administrators regularly review errors that occur on the server. However, if you would like to provide additional information (such as what you were trying to do when the error occurred) and a contact e-mail address, we will be better able to investigate your problem and get back to you.</p>\");\n        self.$el.append(self._getBugFormTemplate(dataset, job));\n    },\n\n    /** Display actions messages */\n    display_message: function display_message(response, $el, doNotClear, safe) {\n        if (!safe) {\n            if (doNotClear) {\n                $el.append(new _uiMisc2.default.Message(response).$el);\n            } else {\n                $el.empty().html(new _uiMisc2.default.Message(response).$el);\n            }\n        } else {\n            if (doNotClear) {\n                $el.append(new _uiMisc2.default.UnescapedMessage(response).$el);\n            } else {\n                $el.empty().html(new _uiMisc2.default.UnescapedMessage(response).$el);\n            }\n        }\n    },\n\n    /** Main template */\n    _templateHeader: function _templateHeader() {\n        return '<div class=\"page-container edit-attr\">' + '<div class=\"response-message\"></div>' + \"</div>\";\n    },\n\n    /** Convert tab template */\n    _getBugFormTemplate: function _getBugFormTemplate(dataset, job) {\n        var self = this;\n        var inputs = [{\n            help: \"Your email address\",\n            options: [],\n            type: \"text\",\n            name: \"email\",\n            label: \"Your email\",\n            value: Galaxy.user.get(\"email\")\n        }, {\n            help: \"Any additional comments you can provide regarding what you were doing at the time of the bug.\",\n            options: [],\n            type: \"text\",\n            area: true,\n            name: \"message\",\n            label: \"Message\"\n        }];\n\n        // TODO\n        if (false) {\n            inputs.push({\n                name: \"public_consent\",\n                label: \"Public Disclosure Consent\",\n                help: \"This Galaxy is configured to report to one or more error reporting backends that public to the world. By selecting 'yes', you acknowledge that this bug report will be made public.\",\n                value: String(Boolean(false)),\n                options: [],\n                type: \"boolean\"\n            });\n        }\n\n        var form = new _formView2.default({\n            title: \"Error Report\",\n            inputs: inputs,\n            buttons: {\n                save: new _uiMisc2.default.Button({\n                    icon: \"fa-bug\",\n                    title: \"Report\",\n                    cls: \"ui-button btn btn-primary\",\n                    floating: \"clear\",\n                    onclick: function onclick() {\n                        var form_data = form.data.create();\n                        var url = Galaxy.root + \"api/jobs/\" + job.id + \"/error\";\n                        form_data.dataset_id = dataset.id;\n                        self.submit(form_data, url);\n                    }\n                })\n            }\n        });\n        return form.$el;\n    },\n\n    /** Make ajax request */\n    submit: function submit(form_data, url) {\n        var self = this;\n        // Some required metadata\n        $.ajax({\n            type: \"POST\",\n            url: url,\n            data: form_data,\n            success: function success(response) {\n                // Clear out the div\n                self.$el.empty().append(self._templateHeader());\n                // And display the messages.\n                response.messages.forEach(function (message) {\n                    self.display_message({\n                        status: message[1],\n                        message: message[0],\n                        persistent: true\n                    }, self.$(\".response-message\"), true, true);\n                });\n            },\n            error: function error(response) {\n                var error_response = {\n                    status: \"error\",\n                    message: \"Error occured while saving. Please fill all the required fields and try again.\",\n                    persistent: true,\n                    cls: \"errormessage\"\n                };\n                self.display_message(error_response, self.$(\".response-message\"));\n            }\n        });\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiTabs = __webpack_require__(28);\n\nvar _uiTabs2 = _interopRequireDefault(_uiTabs);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _formView = __webpack_require__(9);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Dataset edit attributes view */\nvar View = Backbone.View.extend({\n    initialize: function initialize() {\n        this.setElement(\"<div/>\");\n        this.model = new Backbone.Model({\n            dataset_id: Galaxy.params.dataset_id\n        });\n        this.message = new _uiMisc2.default.Message({ persistent: true });\n        this.tabs = this._createTabs();\n        this.$el.append($(\"<h4/>\").append(\"Edit dataset attributes\")).append(this.message.$el).append(\"<p/>\").append(this.tabs.$el).hide();\n        this.render();\n    },\n\n    /** fetch data for the selected dataset and build forms */\n    render: function render() {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + \"dataset/get_edit?dataset_id=\" + self.model.get(\"dataset_id\"),\n            success: function success(response) {\n                !self.initial_message && self.message.update(response);\n                self.initial_message = true;\n                _.each(self.forms, function (form, key) {\n                    form.model.set(\"inputs\", response[key + \"_inputs\"]);\n                    form.model.set(\"hide_operations\", response[key + \"_disable\"]);\n                    form.render();\n                });\n                self.$el.show();\n            },\n            error: function error(response) {\n                var err_msg = response.responseJSON && response.responseJSON.err_msg;\n                self.message.update({\n                    status: \"danger\",\n                    message: err_msg || \"Error occured while loading the dataset.\"\n                });\n            }\n        });\n    },\n\n    /** submit data to backend to update attributes */\n    _submit: function _submit(operation, form) {\n        var self = this;\n        var data = form.data.create();\n        data.dataset_id = this.model.get(\"dataset_id\");\n        data.operation = operation;\n        $.ajax({\n            type: \"PUT\",\n            url: Galaxy.root + \"dataset/set_edit\",\n            data: data,\n            success: function success(response) {\n                self.message.update(response);\n                self.render();\n                self._reloadHistory();\n            },\n            error: function error(response) {\n                var err_msg = response.responseJSON && response.responseJSON.err_msg;\n                self.message.update({\n                    status: \"danger\",\n                    message: err_msg || \"Error occured while editing the dataset attributes.\"\n                });\n            }\n        });\n    },\n\n    /** create tabs for different dataset attribute categories*/\n    _createTabs: function _createTabs() {\n        this.forms = {\n            attribute: this._getAttribute(),\n            conversion: this._getConversion(),\n            datatype: this._getDatatype(),\n            permission: this._getPermission()\n        };\n        var tabs = new _uiTabs2.default.View();\n        tabs.add({\n            id: \"attribute\",\n            title: \"Attributes\",\n            icon: \"fa fa-bars\",\n            tooltip: \"Edit dataset attributes\",\n            $el: this.forms.attribute.$el\n        });\n        tabs.add({\n            id: \"convert\",\n            title: \"Convert\",\n            icon: \"fa-gear\",\n            tooltip: \"Convert to new format\",\n            $el: this.forms.conversion.$el\n        });\n        tabs.add({\n            id: \"datatype\",\n            title: \"Datatypes\",\n            icon: \"fa-database\",\n            tooltip: \"Change data type\",\n            $el: this.forms.datatype.$el\n        });\n        tabs.add({\n            id: \"permissions\",\n            title: \"Permissions\",\n            icon: \"fa-user\",\n            tooltip: \"Permissions\",\n            $el: this.forms.permission.$el\n        });\n        return tabs;\n    },\n\n    /** edit main attributes form */\n    _getAttribute: function _getAttribute() {\n        var self = this;\n        var form = new _formView2.default({\n            title: \"Edit attributes\",\n            operations: {\n                submit_attributes: new _uiMisc2.default.ButtonIcon({\n                    tooltip: \"Save attributes of the dataset.\",\n                    icon: \"fa-floppy-o\",\n                    title: \"Save\",\n                    onclick: function onclick() {\n                        self._submit(\"attributes\", form);\n                    }\n                }),\n                submit_autodetect: new _uiMisc2.default.ButtonIcon({\n                    tooltip: \"This will inspect the dataset and attempt to correct the values of fields if they are not accurate.\",\n                    icon: \"fa-undo\",\n                    title: \"Auto-detect\",\n                    onclick: function onclick() {\n                        self._submit(\"autodetect\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** datatype conversion form */\n    _getConversion: function _getConversion() {\n        var self = this;\n        var form = new _formView2.default({\n            title: \"Convert to new format\",\n            operations: {\n                submit_conversion: new _uiMisc2.default.ButtonIcon({\n                    tooltip: \"Convert the datatype to a new format.\",\n                    title: \"Convert datatype\",\n                    icon: \"fa-exchange\",\n                    onclick: function onclick() {\n                        self._submit(\"conversion\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** change datatype form */\n    _getDatatype: function _getDatatype() {\n        var self = this;\n        var form = new _formView2.default({\n            title: \"Change datatype\",\n            operations: {\n                submit_datatype: new _uiMisc2.default.ButtonIcon({\n                    tooltip: \"Change the datatype to a new type.\",\n                    title: \"Change datatype\",\n                    icon: \"fa-exchange\",\n                    onclick: function onclick() {\n                        self._submit(\"datatype\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** dataset permissions form */\n    _getPermission: function _getPermission() {\n        var self = this;\n        var form = new _formView2.default({\n            title: \"Manage dataset permissions\",\n            operations: {\n                submit_permission: new _uiMisc2.default.ButtonIcon({\n                    tooltip: \"Save permissions.\",\n                    title: \"Save permissions\",\n                    icon: \"fa-floppy-o \",\n                    onclick: function onclick() {\n                        self._submit(\"permission\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** reload Galaxy's history after updating dataset's attributes */\n    _reloadHistory: function _reloadHistory() {\n        if (window.Galaxy) {\n            window.Galaxy.currHistoryPanel.loadCurrentHistory();\n        }\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ })\n],[137]);\n\n\n// WEBPACK FOOTER //\n// analysis.bundled.js","/**\n * Popover wrapper\n*/\ndefine([\"utils/utils\"], function(Utils) {\n    var View = Backbone.View.extend({\n        optionsDefault: {\n            with_close: true,\n            title: null,\n            placement: \"top\",\n            container: \"body\",\n            body: null\n        },\n\n        initialize: function(options) {\n            this.setElement(this._template());\n            this.uid = Utils.uid();\n            this.options = _.defaults(options || {}, this.optionsDefault);\n            this.options.container.parent().append(this.el);\n            this.$title = this.$(\".popover-title-label\");\n            this.$close = this.$(\".popover-close\");\n            this.$body = this.$(\".popover-content\");\n\n            // add initial content\n            this.options.body && this.append(this.options.body);\n\n            // add event to hide if click is outside of popup and not on container\n            var self = this;\n            $(\"body\").on(\"mousedown.\" + this.uid, function(e) {\n                // the 'is' for buttons that trigger popups\n                // the 'has' for icons within a button that triggers a popup\n                self.visible &&\n                    !$(self.options.container).is(e.target) &&\n                    !$(self.el).is(e.target) &&\n                    $(self.el).has(e.target).length === 0 &&\n                    self.hide();\n            });\n        },\n\n        /**\n     * Render popover\n    */\n        render: function() {\n            this.$title.html(this.options.title);\n            this.$el\n                .removeClass()\n                .addClass(\"ui-popover popover fade in\")\n                .addClass(this.options.placement);\n            this.$el.css(this._get_placement(this.options.placement));\n\n            // configure close option\n            var self = this;\n            if (this.options.with_close) {\n                this.$close\n                    .on(\"click\", function() {\n                        self.hide();\n                    })\n                    .show();\n            } else {\n                this.$close.off().hide();\n            }\n        },\n\n        /**\n     * Set the popover title\n     * @params{ String }    newTitle    - New popover title\n    */\n        title: function(newTitle) {\n            if (newTitle !== undefined) {\n                this.options.title = newTitle;\n                this.$title.html(newTitle);\n            }\n        },\n\n        /**\n     * Show popover\n    */\n        show: function() {\n            this.render();\n            this.$el.show();\n            this.visible = true;\n        },\n\n        /**\n     * Hide popover\n    */\n        hide: function() {\n            this.$el.hide();\n            this.visible = false;\n        },\n\n        /**\n     * Append new content to the popover\n     * @params{ Object }  $el - Dom element\n    */\n        append: function($el) {\n            this.$body.append($el);\n        },\n\n        /**\n     * Remove all content\n    */\n        empty: function() {\n            this.$body.empty();\n        },\n\n        /**\n     * Remove popover\n    */\n        remove: function() {\n            $(\"body\").off(\"mousedown.\" + this.uid);\n            this.$el.remove();\n        },\n\n        /**\n     * Improve popover location/placement\n    */\n        _get_placement: function(placement) {\n            // get popover dimensions\n            var width = this._get_width(this.$el);\n            var height = this.$el.height();\n\n            // get container details\n            var $container = this.options.container;\n            var container_width = this._get_width($container);\n            var container_height = this._get_height($container);\n            var container_position = $container.position();\n\n            // get position\n            var top, left;\n            top = left = 0;\n            if ([\"top\", \"bottom\"].indexOf(placement) != -1) {\n                left =\n                    container_position.left -\n                    width +\n                    (container_width + width) / 2;\n                switch (placement) {\n                    case \"top\":\n                        top = container_position.top - height - 5;\n                        break;\n                    case \"bottom\":\n                        top = container_position.top + container_height + 5;\n                        break;\n                }\n            } else {\n                top =\n                    container_position.top -\n                    height +\n                    (container_height + height) / 2;\n                switch (placement) {\n                    case \"right\":\n                        left = container_position.left + container_width;\n                        break;\n                }\n            }\n            return { top: top, left: left };\n        },\n\n        /**\n     * Returns padding/margin corrected width\n    */\n        _get_width: function($el) {\n            return (\n                $el.width() +\n                parseInt($el.css(\"padding-left\")) +\n                parseInt($el.css(\"margin-left\")) +\n                parseInt($el.css(\"padding-right\")) +\n                parseInt($el.css(\"margin-right\"))\n            );\n        },\n\n        /**\n     * Returns padding corrected height\n    */\n        _get_height: function($el) {\n            return (\n                $el.height() +\n                parseInt($el.css(\"padding-top\")) +\n                parseInt($el.css(\"padding-bottom\"))\n            );\n        },\n\n        /**\n     * Return the popover template\n    */\n        _template: function(options) {\n            return (\n                '<div class=\"ui-popover popover fade in\">' +\n                '<div class=\"arrow\"/>' +\n                '<div class=\"popover-title\">' +\n                '<div class=\"popover-title-label\"/>' +\n                '<div class=\"popover-close fa fa-times-circle\"/>' +\n                \"</div>\" +\n                '<div class=\"popover-content\"/>' +\n                \"</div>\"\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-popover.js","//==============================================================================\n/** Map of possible HDA/collection/job states to their string equivalents.\n *      A port of galaxy.model.Dataset.states.\n */\nvar STATES = {\n    // NOT ready states\n    /** is uploading and not ready */\n    UPLOAD: \"upload\",\n    /** the job that will produce the dataset queued in the runner */\n    QUEUED: \"queued\",\n    /** the job that will produce the dataset is running */\n    RUNNING: \"running\",\n    /** metadata for the dataset is being discovered/set */\n    SETTING_METADATA: \"setting_metadata\",\n\n    // ready states\n    /** was created without a tool */\n    NEW: \"new\",\n    /** has no data */\n    EMPTY: \"empty\",\n    /** has successfully completed running */\n    OK: \"ok\",\n\n    /** the job that will produce the dataset paused */\n    PAUSED: \"paused\",\n    /** metadata discovery/setting failed or errored (but otherwise ok) */\n    FAILED_METADATA: \"failed_metadata\",\n    //TODO: not in trans.app.model.Dataset.states - is in database\n    /** not accessible to the current user (i.e. due to permissions) */\n    NOT_VIEWABLE: \"noPermission\",\n    /** deleted while uploading */\n    DISCARDED: \"discarded\",\n    /** the tool producing this dataset failed */\n    ERROR: \"error\"\n};\n\nSTATES.READY_STATES = [\n    STATES.OK,\n    STATES.EMPTY,\n    STATES.PAUSED,\n    STATES.FAILED_METADATA,\n    STATES.NOT_VIEWABLE,\n    STATES.DISCARDED,\n    STATES.ERROR\n];\n\nSTATES.NOT_READY_STATES = [\n    STATES.UPLOAD,\n    STATES.QUEUED,\n    STATES.RUNNING,\n    STATES.SETTING_METADATA,\n    STATES.NEW\n];\n\n//==============================================================================\nexport default STATES;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/states.js","// dependencies\ndefine([\"utils/utils\"], function(Utils) {\n    /**\n * A plugin for initializing select2 input items.\n * Make sure the select2 library itself is loaded beforehand.\n * Also the element to which select2 will be appended has to \n * be created before select2 initialization (and passed as option).\n */\n    var View = Backbone.View.extend({\n        // options\n        optionsDefault: {\n            css: \"\",\n            placeholder: \"No data available\",\n            data: [],\n            value: null,\n            multiple: false,\n            minimumInputLength: 0,\n            // example format of initial data: \"id:name,55:anotherrole@role.com,27:role@role.com\"\n            initialData: \"\"\n        },\n\n        // initialize\n        initialize: function(options) {\n            // configure options\n            this.options = Utils.merge(options, this.optionsDefault);\n\n            // create new element\n            this.setElement(this._template(this.options));\n\n            // check if container exists\n            if (!this.options.container) {\n                console.log(\n                    \"ui-select::initialize() : container not specified.\"\n                );\n                return;\n            }\n\n            // add to dom\n            this.options.container.append(this.$el);\n\n            // link selection dictionary\n            this.select_data = this.options.data;\n\n            // refresh\n            this._refresh();\n\n            if (!this.options.multiple) {\n                // initial value\n                if (this.options.value) {\n                    this._setValue(this.options.value);\n                }\n\n                // add change event\n                var self = this;\n                if (this.options.onchange) {\n                    this.$el.on(\"change\", function() {\n                        self.options.onchange(self.value());\n                    });\n                }\n            }\n        },\n\n        // value\n        value: function(new_value) {\n            // get current id/value\n            var before = this._getValue();\n\n            // check if new_value is defined\n            if (new_value !== undefined) {\n                this._setValue(new_value);\n            }\n\n            // get current id/value\n            var after = this._getValue();\n\n            // fire onchange\n            if (after != before && this.options.onchange) {\n                this.options.onchange(after);\n            }\n\n            // return current value\n            return after;\n        },\n\n        // label\n        text: function() {\n            return this.$el.select2(\"data\").text;\n        },\n\n        // disabled\n        disabled: function() {\n            return !this.$el.select2(\"enable\");\n        },\n\n        // enable\n        enable: function() {\n            this.$el.select2(\"enable\", true);\n        },\n\n        // disable\n        disable: function() {\n            this.$el.select2(\"enable\", false);\n        },\n\n        // add\n        add: function(options) {\n            // add options\n            this.select_data.push({\n                id: options.id,\n                text: options.text\n            });\n\n            // refresh\n            this._refresh();\n        },\n\n        // remove\n        del: function(id) {\n            // search option\n            var index = this._getIndex(id);\n\n            // check if found\n            if (index != -1) {\n                // remove options\n                this.select_data.splice(index, 1);\n\n                // refresh\n                this._refresh();\n            }\n        },\n\n        // remove\n        remove: function() {\n            this.$el.select2(\"destroy\");\n        },\n\n        // update\n        update: function(options) {\n            // copy options\n            this.select_data = [];\n            for (var key in options.data) {\n                this.select_data.push(options.data[key]);\n            }\n\n            // refresh\n            this._refresh();\n        },\n\n        // refresh\n        _refresh: function() {\n            // add select2 data based on type of input\n            if (!this.options.multiple) {\n                var selected = this._getValue();\n                var select_opt = {\n                    data: this.select_data,\n                    containerCssClass: this.options.css,\n                    placeholder: this.options.placeholder,\n                    dropdownAutoWidth: true\n                };\n                this.$el.select2(select_opt);\n                // select previous value (if exists)\n                this._setValue(selected);\n            } else {\n                var select_opt = {\n                    multiple: this.options.multiple,\n                    containerCssClass: this.options.css,\n                    placeholder: this.options.placeholder,\n                    minimumInputLength: this.options.minimumInputLength,\n                    ajax: this.options.ajax,\n                    dropdownCssClass: this.options.dropdownCssClass,\n                    escapeMarkup: this.options.escapeMarkup,\n                    formatResult: this.options.formatResult,\n                    formatSelection: this.options.formatSelection,\n                    initSelection: this.options.initSelection,\n                    initialData: this.options.initialData\n                };\n                this.$el.select2(select_opt);\n            }\n        },\n\n        // get index\n        _getIndex: function(value) {\n            // returns the index of the searched value\n            _.findIndex(this.select_data, { id: value });\n        },\n\n        // get value\n        _getValue: function() {\n            return this.$el.select2(\"val\");\n        },\n\n        // set value\n        _setValue: function(new_value) {\n            var index = this._getIndex(new_value);\n            if (index == -1) {\n                if (this.select_data.length > 0) {\n                    new_value = this.select_data[0].id;\n                }\n            }\n            this.$el.select2(\"val\", new_value);\n        },\n\n        // element\n        _template: function(options) {\n            return (\n                '<input type=\"hidden\" value=\"' +\n                this.options.initialData +\n                '\"/>'\n            );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select.js","(function(root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else {\n        root.faIconButton = factory();\n    }\n})(this, function() {\n    //============================================================================\n    /** Returns a jQuery object containing a clickable font-awesome button.\n     *      options:\n     *          tooltipConfig   : option map for bootstrap tool tip\n     *          classes         : array of class names (will always be classed as icon-btn)\n     *          disabled        : T/F - add the 'disabled' class?\n     *          title           : tooltip/title string\n     *          target          : optional href target\n     *          href            : optional href\n     *          faIcon          : which font awesome icon to use\n     *          onclick         : function to call when the button is clicked\n     */\n    var faIconButton = function(options) {\n        options = options || {};\n        options.tooltipConfig = options.tooltipConfig || {\n            placement: \"bottom\"\n        };\n\n        options.classes = [\"icon-btn\"].concat(options.classes || []);\n        if (options.disabled) {\n            options.classes.push(\"disabled\");\n        }\n\n        var html = [\n            '<a class=\"',\n            options.classes.join(\" \"),\n            '\"',\n            options.title ? ' title=\"' + options.title + '\"' : \"\",\n            !options.disabled && options.target\n                ? ' target=\"' + options.target + '\"'\n                : \"\",\n            ' href=\"',\n            !options.disabled && options.href\n                ? options.href\n                : \"javascript:void(0);\",\n            '\">',\n            // could go with something less specific here - like 'html'\n            '<span class=\"fa ',\n            options.faIcon,\n            '\"></span>',\n            \"</a>\"\n        ].join(\"\");\n        var $button = $(html).tooltip(options.tooltipConfig);\n        if (_.isFunction(options.onclick)) {\n            $button.click(options.onclick);\n        }\n        return $button;\n    };\n\n    //============================================================================\n    return faIconButton;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/ui/fa-icon-button.js","var Model = Backbone.Model.extend({\n    defaults: {\n        extension: \"auto\",\n        genome: \"?\",\n        url_paste: \"\",\n        status: \"init\",\n        info: null,\n        file_name: \"\",\n        file_mode: \"\",\n        file_size: 0,\n        file_type: null,\n        file_path: \"\",\n        file_data: null,\n        percentage: 0,\n        space_to_tab: false,\n        to_posix_lines: true,\n        enabled: true\n    },\n    reset: function(attr) {\n        this.clear()\n            .set(this.defaults)\n            .set(attr);\n    }\n});\nvar Collection = Backbone.Collection.extend({ model: Model });\nexport default { Model: Model, Collection: Collection };\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-model.js","import baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n// =============================================================================\n/** A view on any model that has a 'tags' attribute (a list of tag strings)\n *      Incorporates the select2 jQuery plugin for tags display/editing:\n *      http://ivaynberg.github.io/select2/\n */\nvar TagsEditor = Backbone.View\n    .extend(baseMVC.LoggableMixin)\n    .extend(baseMVC.HiddenUntilActivatedViewMixin)\n    .extend({\n        tagName: \"div\",\n        className: \"tags-display\",\n        select_width: \"100%\",\n        events: {},\n\n        /** Set up listeners, parse options */\n        initialize: function(options) {\n            //console.debug( this, options );\n            // only listen to the model only for changes to tags - re-render\n            this.show_editor = false;\n            if (options.usePrompt === false) {\n                this.label = \"\";\n            } else {\n                this.label = '<label class=\"prompt\">' + _l(\"Tags\") + \"</label>\";\n            }\n            this.workflow_mode = options.workflow_mode || false;\n            if (this.workflow_mode) {\n                this.events.click = \"showEditor\";\n                this.events.keydown = \"keydownHandler\";\n            }\n            this.hiddenUntilActivated(options.$activator, options);\n        },\n\n        /** Build the DOM elements, call select to on the created input, and set up behaviors */\n        render: function() {\n            var self = this;\n            if (this.workflow_mode) {\n                this.$el.html(this._workflowTemplate());\n            } else {\n                this.$el.html(this._defaultTemplate());\n            }\n            this.$input().select2({\n                placeholder: \"Add tags\",\n                width: this.workflow_mode ? this.width : this.select_width,\n                tags: function() {\n                    // initialize possible tags in the dropdown based on all the tags the user has used so far\n                    return self._getTagsUsed();\n                }\n            });\n\n            this._setUpBehaviors();\n            return this;\n        },\n\n        _hashToName: function(tag) {\n            if (tag.startsWith(\"#\")) {\n                return \"name:\" + tag.slice(1);\n            }\n            return tag;\n        },\n\n        _nameToHash: function(tag) {\n            if (tag.startsWith(\"name:\")) {\n                tag = \"#\" + tag.slice(5);\n            }\n            return tag;\n        },\n\n        /** @returns {String} the html text used to build the view's DOM */\n        _defaultTemplate: function() {\n            return [this.label, this._renderEditor()].join(\"\");\n        },\n\n        _workflowTemplate: function() {\n            // Shows labels by default, event handler controls whether we show tags or editor\n            return [\n                this.show_editor ? this._renderEditor() : this._renderTags()\n            ].join(\" \");\n        },\n\n        keydownHandler: function(e) {\n            switch (e.which) {\n                // esc\n                case 27:\n                    // hide the tag editor when pressing escape\n                    this.hideEditor();\n                    break;\n            }\n        },\n\n        showEditor: function() {\n            this.show_editor = true;\n            this.render();\n        },\n\n        hideEditor: function() {\n            this.show_editor = false;\n            this.render();\n        },\n\n        _renderEditor: function() {\n            // set up initial tags by adding as CSV to input vals (necc. to init select2)\n            return (\n                '<input class=\"tags-input\" value=\"' + this.tagsToCSV() + '\"/>'\n            );\n        },\n\n        _renderTags: function() {\n            var tags = this.model.get(\"tags\");\n            var addButton = \"static/images/fugue/tag--plus.png\";\n            var renderedArray = [];\n            _.each(tags, function(tag) {\n                tag = tag.indexOf(\"name:\") == 0 ? tag.slice(5) : tag;\n                var renderString =\n                    '<span class=\"label label-info\">' + tag + \"</span>\";\n                renderedArray.push(renderString);\n            });\n            if (renderedArray.length === 0) {\n                // If there are no tags to render we just show the add-tag-button\n                renderedArray.push(\n                    \"<img src=\" +\n                        addButton +\n                        ' class=\"add-tag-button\" title=\"Add tags\"/>'\n                );\n            }\n            return renderedArray.join(\" \");\n        },\n\n        /** @returns {String} the sorted, comma-separated tags from the model */\n        tagsToCSV: function() {\n            var self = this;\n            var tagsArray = this.model.get(\"tags\");\n            if (!_.isArray(tagsArray) || _.isEmpty(tagsArray)) {\n                return \"\";\n            }\n            return tagsArray\n                .map(function(tag) {\n                    return _.escape(self._nameToHash(tag));\n                })\n                .sort()\n                .join(\",\");\n        },\n\n        /** @returns {jQuery} the input for this view */\n        $input: function() {\n            return this.$el.find(\"input.tags-input\");\n        },\n\n        /** @returns {String[]} all tags used by the current user */\n        _getTagsUsed: function() {\n            //TODO: global\n            var self = this;\n            return _.map(Galaxy.user.get(\"tags_used\"), self._nameToHash);\n        },\n\n        /** set up any event listeners on the view's DOM (mostly handled by select2) */\n        _setUpBehaviors: function() {\n            var self = this;\n            this.$input().on(\"change\", function(event) {\n                // Modify any 'hashtag' 'nametags'\n                event.val = _.map(event.val, self._hashToName);\n                // save the model's tags in either remove or added event\n                self.model.save({ tags: event.val });\n                // if it's new, add the tag to the users tags\n                if (event.added) {\n                    //??: solve weird behavior in FF on test.galaxyproject.org where\n                    //  event.added.text is string object: 'String{ 0=\"o\", 1=\"n\", 2=\"e\" }'\n                    self._addNewTagToTagsUsed(event.added.text + \"\");\n                }\n            });\n        },\n\n        /** add a new tag (if not already there) to the list of all tags used by the user\n     *  @param {String} newTag  the tag to add to the list of used\n     */\n        _addNewTagToTagsUsed: function(newTag) {\n            //TODO: global\n            var tagsUsed = Galaxy.user.get(\"tags_used\");\n            if (!_.contains(tagsUsed, newTag)) {\n                tagsUsed.push(newTag);\n                tagsUsed.sort();\n                Galaxy.user.set(\"tags_used\", tagsUsed);\n            }\n        },\n\n        /** shut down event listeners and remove this view's DOM */\n        remove: function() {\n            this.$input.off();\n            this.stopListening(this.model);\n            Backbone.View.prototype.remove.call(this);\n        },\n\n        /** string rep */\n        toString: function() {\n            return [\"TagsEditor(\", this.model + \"\", \")\"].join(\"\");\n        }\n    });\n\nexport default {\n    TagsEditor: TagsEditor\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/tag.js","import jQuery from \"jquery\";\nvar $ = jQuery;\nimport QUERY_STRING from \"utils/query-string-parsing\";\nimport Ui from \"mvc/ui/ui-misc\";\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function(url, data) {\n        data = data || {};\n        data.__identifer = Math.random()\n            .toString(36)\n            .substr(2);\n        if (!$.isEmptyObject(data)) {\n            url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            url += $.param(data, true);\n        }\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = QUERY_STRING.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function(args, name) {\n        return true;\n    },\n\n    access_denied: function() {\n        this.page.display(\n            new Ui.Message({\n                status: \"danger\",\n                message:\n                    \"You must be logged in with proper credentials to make this request.\",\n                persistent: true\n            })\n        );\n    }\n});\n\nexport default Router;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/layout/router.js","/** This renders the content of the settings popup, allowing users to specify flags i.e. for space-to-tab conversion **/\nimport Utils from \"utils/utils\";\nexport default Backbone.View.extend({\n    options: {\n        class_check: \"fa-check-square-o\",\n        class_uncheck: \"fa-square-o\",\n        parameters: [\n            {\n                id: \"space_to_tab\",\n                title: \"Convert spaces to tabs\"\n            },\n            {\n                id: \"to_posix_lines\",\n                title: \"Use POSIX standard\"\n            }\n        ]\n    },\n\n    initialize: function(options) {\n        var self = this;\n        this.model = options.model;\n        this.setElement($(\"<div/>\").addClass(\"upload-settings\"));\n        this.$el.append($(\"<div/>\").addClass(\"upload-settings-cover\"));\n        this.$el.append(\n            $(\"<table/>\")\n                .addClass(\"upload-settings-table ui-table-striped\")\n                .append(\"<tbody/>\")\n        );\n        this.$cover = this.$(\".upload-settings-cover\");\n        this.$table = this.$(\".upload-settings-table > tbody\");\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.model.trigger(\"change\");\n    },\n\n    render: function() {\n        var self = this;\n        this.$table.empty();\n        _.each(this.options.parameters, function(parameter) {\n            var $checkbox = $(\"<div/>\")\n                .addClass(\"upload-\" + parameter.id + \" upload-icon-button fa\")\n                .addClass(\n                    (self.model.get(parameter.id) &&\n                        self.options.class_check) ||\n                        self.options.class_uncheck\n                )\n                .on(\"click\", function() {\n                    self.model.get(\"enabled\") &&\n                        self.model.set(\n                            parameter.id,\n                            !self.model.get(parameter.id)\n                        );\n                });\n            self.$table.append(\n                $(\"<tr/>\")\n                    .append($(\"<td/>\").append($checkbox))\n                    .append($(\"<td/>\").append(parameter.title))\n            );\n        });\n        this.$cover[(this.model.get(\"enabled\") && \"hide\") || \"show\"]();\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-settings.js","/** This renders the content of the ftp popup **/\nimport Utils from \"utils/utils\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model = new Backbone.Model({\n            cls: \"upload-ftp\",\n            class_add: \"upload-icon-button fa fa-square-o\",\n            class_remove: \"upload-icon-button fa fa-check-square-o\",\n            class_partial: \"upload-icon-button fa fa-minus-square-o\",\n            help_enabled: true,\n            help_text:\n                \"This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>\" +\n                options.ftp_upload_site +\n                \"</strong> using your Galaxy credentials.\",\n            collection: null,\n            onchange: function() {},\n            onadd: function() {},\n            onremove: function() {}\n        }).set(options);\n        this.collection = this.model.get(\"collection\");\n        this.setElement(this._template());\n        this.$content = this.$(\".upload-ftp-content\");\n        this.$wait = this.$(\".upload-ftp-wait\");\n        this.$help = this.$(\".upload-ftp-help\");\n        this.$number = this.$(\".upload-ftp-number\");\n        this.$disk = this.$(\".upload-ftp-disk\");\n        this.$body = this.$(\".upload-ftp-body\");\n        this.$warning = this.$(\".upload-ftp-warning\");\n        this.$select = this.$(\".upload-ftp-select-all\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.$wait.show();\n        this.$content.hide();\n        this.$warning.hide();\n        this.$help.hide();\n        $.ajax({\n            url: Galaxy.root + \"api/remote_files\",\n            method: \"GET\",\n            success: function(ftp_files) {\n                self.model.set(\"ftp_files\", ftp_files);\n                self._index();\n                self._renderTable();\n            },\n            error: function() {\n                self._renderTable();\n            }\n        });\n    },\n\n    /** Fill table with ftp entries */\n    _renderTable: function() {\n        var self = this;\n        var ftp_files = this.model.get(\"ftp_files\");\n        this.rows = [];\n        if (ftp_files && ftp_files.length > 0) {\n            this.$body.empty();\n            var size = 0;\n            _.each(ftp_files, function(ftp_file) {\n                self.rows.push(self._renderRow(ftp_file));\n                size += ftp_file.size;\n            });\n            this.$number.html(ftp_files.length + \" files\");\n            this.$disk.html(Utils.bytesToString(size, true));\n            if (this.collection) {\n                this.$(\"._has_collection\").show();\n                this.$select\n                    .addClass(this.model.get(\"class_add\"))\n                    .off()\n                    .on(\"click\", function() {\n                        self._all();\n                    });\n                this._refresh();\n            }\n            this.$content.show();\n        } else {\n            this.$warning.show();\n        }\n        this.model.get(\"help_enabled\") && this.$help.show();\n        this.$wait.hide();\n    },\n\n    /** Add row */\n    _renderRow: function(ftp_file) {\n        var self = this;\n        var options = this.model.attributes;\n        var $it = $(this._templateRow(ftp_file));\n        var $icon = $it.find(\".icon\");\n        this.$body.append($it);\n        if (this.collection) {\n            var model_index = this.ftp_index[ftp_file.path];\n            $icon.addClass(\n                model_index === undefined\n                    ? options.class_add\n                    : options.class_remove\n            );\n            $it.on(\"click\", function() {\n                self._switch($icon, ftp_file);\n                self._refresh();\n            });\n        } else {\n            $it.on(\"click\", function() {\n                options.onchange(ftp_file);\n            });\n        }\n        return $icon;\n    },\n\n    /** Create ftp index */\n    _index: function() {\n        var self = this;\n        this.ftp_index = {};\n        this.collection &&\n            this.collection.each(function(model) {\n                if (model.get(\"file_mode\") == \"ftp\") {\n                    self.ftp_index[model.get(\"file_path\")] = model.id;\n                }\n            });\n    },\n\n    /** Select all event handler */\n    _all: function() {\n        var options = this.model.attributes;\n        var ftp_files = this.model.get(\"ftp_files\");\n        var add = this.$select.hasClass(options.class_add);\n        for (var index in ftp_files) {\n            var ftp_file = ftp_files[index];\n            var model_index = this.ftp_index[ftp_file.path];\n            if (\n                (model_index === undefined && add) ||\n                (model_index !== undefined && !add)\n            ) {\n                this._switch(this.rows[index], ftp_file);\n            }\n        }\n        this._refresh();\n    },\n\n    /** Handle collection changes */\n    _switch: function($icon, ftp_file) {\n        $icon.removeClass();\n        var options = this.model.attributes;\n        var model_index = this.ftp_index[ftp_file.path];\n        if (model_index === undefined) {\n            var new_index = options.onadd(ftp_file);\n            $icon.addClass(options.class_remove);\n            this.ftp_index[ftp_file.path] = new_index;\n        } else {\n            options.onremove(model_index);\n            $icon.addClass(options.class_add);\n            this.ftp_index[ftp_file.path] = undefined;\n        }\n    },\n\n    /** Refresh select all button state */\n    _refresh: function() {\n        var counts = _.reduce(\n            this.ftp_index,\n            function(memo, element) {\n                element !== undefined && memo++;\n                return memo;\n            },\n            0\n        );\n        this.$select.removeClass();\n        if (counts == 0) {\n            this.$select.addClass(this.model.get(\"class_add\"));\n        } else {\n            this.$select.addClass(\n                counts == this.rows.length\n                    ? this.model.get(\"class_remove\")\n                    : this.model.get(\"class_partial\")\n            );\n        }\n    },\n\n    /** Template of row */\n    _templateRow: function(options) {\n        return (\n            '<tr class=\"upload-ftp-row\">' +\n            '<td class=\"_has_collection\" style=\"display: none;\"><div class=\"icon\"/></td>' +\n            '<td class=\"ftp-name\">' +\n            _.escape(options.path) +\n            \"</td>\" +\n            '<td class=\"ftp-size\">' +\n            Utils.bytesToString(options.size) +\n            \"</td>\" +\n            '<td class=\"ftp-time\">' +\n            options.ctime +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    },\n\n    /** Template of main view */\n    _template: function() {\n        return (\n            '<div class=\"' +\n            this.model.get(\"cls\") +\n            '\">' +\n            '<div class=\"upload-ftp-wait fa fa-spinner fa-spin\"/>' +\n            '<div class=\"upload-ftp-help\">' +\n            this.model.get(\"help_text\") +\n            \"</div>\" +\n            '<div class=\"upload-ftp-content\">' +\n            '<span style=\"whitespace: nowrap; float: left;\">Available files: </span>' +\n            '<span style=\"whitespace: nowrap; float: right;\">' +\n            '<span class=\"upload-icon fa fa-file-text-o\"/>' +\n            '<span class=\"upload-ftp-number\"/>&nbsp;&nbsp;' +\n            '<span class=\"upload-icon fa fa-hdd-o\"/>' +\n            '<span class=\"upload-ftp-disk\"/>' +\n            \"</span>\" +\n            '<table class=\"grid\" style=\"float: left;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            '<th class=\"_has_collection\" style=\"display: none;\"><div class=\"upload-ftp-select-all\"></th>' +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Created</th>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            '<tbody class=\"upload-ftp-body\"/>' +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-ftp-warning warningmessage\">' +\n            \"Your FTP directory does not contain any files.\" +\n            \"</div>\"\n        );\n        (\"<div>\");\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-ftp.js","/** This renders a popover with extension details **/\nimport Utils from \"utils/utils\";\nimport Popover from \"mvc/ui/ui-popover\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        this.model = new Backbone.Model(options);\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        var description = _.findWhere(options.list, {\n            id: options.extension\n        });\n        this.extension_popup && this.extension_popup.remove();\n        this.extension_popup = new Popover.View({\n            placement: options.placement || \"bottom\",\n            container: options.$el\n        });\n        this.extension_popup.title(options.title);\n        this.extension_popup.empty();\n        this.extension_popup.append(this._templateDescription(description));\n        this.extension_popup.show();\n    },\n\n    /** Template for extensions description */\n    _templateDescription: function(options) {\n        if (options.description) {\n            var tmpl = options.description;\n            if (options.description_url) {\n                tmpl +=\n                    '&nbsp;(<a href=\"' +\n                    options.description_url +\n                    '\" target=\"_blank\">read more</a>)';\n            }\n            return tmpl;\n        } else {\n            return \"There is no description available for this file extension.\";\n        }\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-extension.js","/*\n    galaxy upload plugins - requires FormData and XMLHttpRequest\n*/\n(function($) {\n    // add event properties\n    jQuery.event.props.push(\"dataTransfer\");\n\n    /**\n        Posts file data to the API\n    */\n    $.uploadpost = function(config) {\n        // parse options\n        var cnf = $.extend(\n            {},\n            {\n                data: {},\n                success: function() {},\n                error: function() {},\n                progress: function() {},\n                url: null,\n                maxfilesize: 2048,\n                error_filesize: \"File exceeds 2GB. Please use a FTP client.\",\n                error_default: \"Please make sure the file is available.\",\n                error_server: \"Upload request failed.\",\n                error_login: \"Uploads require you to log in.\"\n            },\n            config\n        );\n\n        // link data\n        var data = cnf.data;\n\n        // check errors\n        if (data.error_message) {\n            cnf.error(data.error_message);\n            return;\n        }\n\n        // construct form data\n        var form = new FormData();\n        for (var key in data.payload) {\n            form.append(key, data.payload[key]);\n        }\n\n        // add files to submission\n        var sizes = 0;\n        for (var key in data.files) {\n            var d = data.files[key];\n            form.append(d.name, d.file, d.file.name);\n            sizes += d.file.size;\n        }\n\n        // check file size, unless it's an ftp file\n        if (sizes > 1048576 * cnf.maxfilesize) {\n            cnf.error(cnf.error_filesize);\n            return;\n        }\n\n        // prepare request\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", cnf.url, true);\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        // captures state changes\n        xhr.onreadystatechange = function() {\n            // check for request completed, server connection closed\n            if (xhr.readyState == xhr.DONE) {\n                // parse response\n                var response = null;\n                var extra_info = \"\";\n                if (xhr.responseText) {\n                    try {\n                        response = jQuery.parseJSON(xhr.responseText);\n                        extra_info = response.err_msg;\n                    } catch (e) {\n                        response = xhr.responseText;\n                        extra_info = response;\n                    }\n                }\n                // pass any error to the error option\n                if (xhr.status < 200 || xhr.status > 299) {\n                    var text = xhr.statusText;\n                    if (xhr.status == 403) {\n                        text = cnf.error_login;\n                    } else if (xhr.status == 0) {\n                        text = cnf.error_server;\n                    } else if (!text) {\n                        text = cnf.error_default;\n                    }\n                    cnf.error(text + \" (\" + xhr.status + \"). \" + extra_info);\n                } else {\n                    cnf.success(response);\n                }\n            }\n        };\n\n        // prepare upload progress\n        xhr.upload.addEventListener(\n            \"progress\",\n            function(e) {\n                if (e.lengthComputable) {\n                    cnf.progress(Math.round(e.loaded * 100 / e.total));\n                }\n            },\n            false\n        );\n\n        // send request\n        Galaxy.emit.debug(\n            \"uploadbox::uploadpost()\",\n            \"Posting following data.\",\n            cnf\n        );\n        xhr.send(form);\n    };\n\n    /**\n        Handles the upload events drag/drop etc.\n    */\n    $.fn.uploadinput = function(options) {\n        // initialize\n        var el = this;\n        var opts = $.extend(\n            {},\n            {\n                ondragover: function() {},\n                ondragleave: function() {},\n                onchange: function() {},\n                multiple: false\n            },\n            options\n        );\n\n        // append hidden upload field\n        var $input = $(\n            '<input type=\"file\" style=\"display: none\" ' +\n                ((opts.multiple && \"multiple\") || \"\") +\n                \"/>\"\n        );\n        el.append(\n            $input.change(function(e) {\n                opts.onchange(e.target.files);\n                $(this).val(\"\");\n            })\n        );\n\n        // drag/drop events\n        el.on(\"drop\", function(e) {\n            opts.ondragleave(e);\n            if (e.dataTransfer) {\n                opts.onchange(e.dataTransfer.files);\n                e.preventDefault();\n            }\n        });\n        el.on(\"dragover\", function(e) {\n            e.preventDefault();\n            opts.ondragover(e);\n        });\n        el.on(\"dragleave\", function(e) {\n            e.stopPropagation();\n            opts.ondragleave(e);\n        });\n\n        // exports\n        return {\n            dialog: function() {\n                $input.trigger(\"click\");\n            }\n        };\n    };\n\n    /**\n        Handles the upload queue and events such as drag/drop etc.\n    */\n    $.fn.uploadbox = function(options) {\n        // parse options\n        var opts = $.extend(\n            {},\n            {\n                dragover: function() {},\n                dragleave: function() {},\n                announce: function(d) {},\n                initialize: function(d) {},\n                progress: function(d, m) {},\n                success: function(d, m) {},\n                error: function(d, m) {\n                    alert(m);\n                },\n                complete: function() {}\n            },\n            options\n        );\n\n        // file queue\n        var queue = {};\n\n        // queue index/length counter\n        var queue_index = 0;\n        var queue_length = 0;\n\n        // indicates if queue is currently running\n        var queue_running = false;\n        var queue_stop = false;\n\n        // element\n        var uploadinput = $(this).uploadinput({\n            multiple: true,\n            onchange: function(files) {\n                add(files);\n            },\n            ondragover: options.ondragover,\n            ondragleave: options.ondragleave\n        });\n\n        // add new files to upload queue\n        function add(files) {\n            if (files && files.length && !queue_running) {\n                var index = undefined;\n                _.each(files, function(file, key) {\n                    if (\n                        file.mode !== \"new\" &&\n                        _.filter(queue, function(f) {\n                            return f.name === file.name && f.size === file.size;\n                        }).length\n                    ) {\n                        file.duplicate = true;\n                    }\n                });\n                _.each(files, function(file) {\n                    if (!file.duplicate) {\n                        index = String(queue_index++);\n                        queue[index] = file;\n                        opts.announce(index, queue[index]);\n                        queue_length++;\n                    }\n                });\n                return index;\n            }\n        }\n\n        // remove file from queue\n        function remove(index) {\n            if (queue[index]) {\n                delete queue[index];\n                queue_length--;\n            }\n        }\n\n        // process an upload, recursive\n        function process() {\n            // validate\n            if (queue_length == 0 || queue_stop) {\n                queue_stop = false;\n                queue_running = false;\n                opts.complete();\n                return;\n            } else {\n                queue_running = true;\n            }\n\n            // get an identifier from the queue\n            var index = -1;\n            for (var key in queue) {\n                index = key;\n                break;\n            }\n\n            // get current file from queue\n            var file = queue[index];\n\n            // remove from queue\n            remove(index);\n\n            // create and submit data\n            $.uploadpost({\n                url: opts.url,\n                data: opts.initialize(index),\n                success: function(message) {\n                    opts.success(index, message);\n                    process();\n                },\n                error: function(message) {\n                    opts.error(index, message);\n                    process();\n                },\n                progress: function(percentage) {\n                    opts.progress(index, percentage);\n                }\n            });\n        }\n\n        /*\n            public interface\n        */\n\n        // open file browser for selection\n        function select() {\n            uploadinput.dialog();\n        }\n\n        // remove all entries from queue\n        function reset(index) {\n            for (index in queue) {\n                remove(index);\n            }\n        }\n\n        // initiate upload process\n        function start() {\n            if (!queue_running) {\n                queue_running = true;\n                process();\n            }\n        }\n\n        // stop upload process\n        function stop() {\n            queue_stop = true;\n        }\n\n        // set options\n        function configure(options) {\n            opts = $.extend({}, opts, options);\n            return opts;\n        }\n\n        // verify browser compatibility\n        function compatible() {\n            return (\n                window.File &&\n                window.FormData &&\n                window.XMLHttpRequest &&\n                window.FileList\n            );\n        }\n\n        // export functions\n        return {\n            select: select,\n            add: add,\n            remove: remove,\n            start: start,\n            stop: stop,\n            reset: reset,\n            configure: configure,\n            compatible: compatible\n        };\n    };\n})(jQuery);\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/uploadbox.js","import HDCA from \"mvc/history/hdca-model\";\nimport STATES from \"mvc/dataset/states\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport baseCreator from \"mvc/collection/base-creator\";\nimport UI_MODAL from \"mvc/ui/ui-modal\";\nimport naturalSort from \"utils/natural-sort\";\nimport _l from \"utils/localization\";\nimport \"ui/hoverhighlight\";\n\nvar logNamespace = \"collections\";\n\n/*==============================================================================\nTODO:\n    use proper Element model and not just json\n    straighten out createFn, collection.createHDCA\n    possibly stop using modals for this\n    It would be neat to do a drag and drop\n\n==============================================================================*/\n/** A view for both DatasetDCEs and NestedDCDCEs\n *  (things that implement collection-model:DatasetCollectionElementMixin)\n */\nvar DatasetCollectionElementView = Backbone.View\n    .extend(BASE_MVC.LoggableMixin)\n    .extend({\n        _logNamespace: logNamespace,\n\n        //TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n        tagName: \"li\",\n        className: \"collection-element\",\n\n        initialize: function(attributes) {\n            this.element = attributes.element || {};\n            this.selected = attributes.selected || false;\n        },\n\n        render: function() {\n            this.$el\n                .attr(\"data-element-id\", this.element.id)\n                .attr(\"draggable\", true)\n                .html(this.template({ element: this.element }));\n            if (this.selected) {\n                this.$el.addClass(\"selected\");\n            }\n            return this;\n        },\n\n        //TODO: lots of unused space in the element - possibly load details and display them horiz.\n        template: _.template(\n            [\n                '<a class=\"name\" title=\"',\n                _l(\"Click to rename\"),\n                '\" href=\"javascript:void(0)\">',\n                \"<%- element.name %>\",\n                \"</a>\",\n                '<button class=\"discard btn btn-sm\" title=\"',\n                _l(\"Remove this dataset from the list\"),\n                '\">',\n                _l(\"Discard\"),\n                \"</button>\"\n            ].join(\"\")\n        ),\n\n        /** select this element and pub */\n        select: function(toggle) {\n            this.$el.toggleClass(\"selected\", toggle);\n            this.trigger(\"select\", {\n                source: this,\n                selected: this.$el.hasClass(\"selected\")\n            });\n        },\n\n        /** animate the removal of this element and pub */\n        discard: function() {\n            var view = this,\n                parentWidth = this.$el.parent().width();\n            this.$el.animate(\n                { \"margin-right\": parentWidth },\n                \"fast\",\n                function() {\n                    view.trigger(\"discard\", {\n                        source: view\n                    });\n                    view.destroy();\n                }\n            );\n        },\n\n        /** remove the DOM and any listeners */\n        destroy: function() {\n            this.off();\n            this.$el.remove();\n        },\n\n        events: {\n            click: \"_click\",\n            \"click .name\": \"_clickName\",\n            \"click .discard\": \"_clickDiscard\",\n\n            dragstart: \"_dragstart\",\n            dragend: \"_dragend\",\n            dragover: \"_sendToParent\",\n            drop: \"_sendToParent\"\n        },\n\n        /** select when the li is clicked */\n        _click: function(ev) {\n            ev.stopPropagation();\n            this.select(ev);\n        },\n\n        /** rename a pair when the name is clicked */\n        _clickName: function(ev) {\n            ev.stopPropagation();\n            ev.preventDefault();\n            var promptString = [\n                    _l(\"Enter a new name for the element\"),\n                    \":\\n(\",\n                    _l(\n                        \"Note that changing the name here will not rename the dataset\"\n                    ),\n                    \")\"\n                ].join(\"\"),\n                response = prompt(\n                    _l(\"Enter a new name for the element\") + \":\",\n                    this.element.name\n                );\n            if (response) {\n                this.element.name = response;\n                this.render();\n            }\n            //TODO: cancelling with ESC leads to closure of the creator...\n        },\n\n        /** discard when the discard button is clicked */\n        _clickDiscard: function(ev) {\n            ev.stopPropagation();\n            this.discard();\n        },\n\n        /** dragging pairs for re-ordering */\n        _dragstart: function(ev) {\n            if (ev.originalEvent) {\n                ev = ev.originalEvent;\n            }\n            ev.dataTransfer.effectAllowed = \"move\";\n            ev.dataTransfer.setData(\"text/plain\", JSON.stringify(this.element));\n\n            this.$el.addClass(\"dragging\");\n            this.$el.parent().trigger(\"collection-element.dragstart\", [this]);\n        },\n\n        /** dragging for re-ordering */\n        _dragend: function(ev) {\n            this.$el.removeClass(\"dragging\");\n            this.$el.parent().trigger(\"collection-element.dragend\", [this]);\n        },\n\n        /** manually bubble up an event to the parent/container */\n        _sendToParent: function(ev) {\n            this.$el.parent().trigger(ev);\n        },\n\n        /** string rep */\n        toString: function() {\n            return \"DatasetCollectionElementView()\";\n        }\n    });\n\n// ============================================================================\n/** An interface for building collections.\n */\nvar ListCollectionCreator = Backbone.View\n    .extend(BASE_MVC.LoggableMixin)\n    .extend(baseCreator.CollectionCreatorMixin)\n    .extend({\n        _logNamespace: logNamespace,\n\n        /** the class used to display individual elements */\n        elementViewClass: DatasetCollectionElementView,\n        /** the class this creator will create and save */\n        collectionClass: HDCA.HistoryListDatasetCollection,\n        className:\n            \"list-collection-creator collection-creator flex-row-container\",\n\n        /** minimum number of valid elements to start with in order to build a collection of this type */\n        minElements: 1,\n\n        defaultAttributes: {\n            //TODO: remove - use new collectionClass().save()\n            /** takes elements and creates the proper collection - returns a promise */\n            creationFn: function() {\n                throw new TypeError(\"no creation fn for creator\");\n            },\n            /** fn to call when the collection is created (scoped to this) */\n            oncreate: function() {},\n            /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n            oncancel: function() {},\n            /** distance from list edge to begin autoscrolling list */\n            autoscrollDist: 24,\n            /** Color passed to hoverhighlight */\n            highlightClr: \"rgba( 64, 255, 255, 1.0 )\"\n        },\n\n        footerSettings: {\n            \".hide-originals\": \"hideOriginals\"\n        },\n\n        /** set up initial options, instance vars, behaviors */\n        initialize: function(attributes) {\n            this.metric(\"ListCollectionCreator.initialize\", attributes);\n            var creator = this;\n            _.each(this.defaultAttributes, function(value, key) {\n                value = attributes[key] || value;\n                creator[key] = value;\n            });\n\n            /** unordered, original list - cache to allow reversal */\n            creator.initialElements = attributes.elements || [];\n\n            this._setUpCommonSettings(attributes);\n            this._instanceSetUp();\n            this._elementsSetUp();\n            this._setUpBehaviors();\n        },\n\n        /** set up instance vars */\n        _instanceSetUp: function() {\n            /** Ids of elements that have been selected by the user - to preserve over renders */\n            this.selectedIds = {};\n            /** DOM elements currently being dragged */\n            this.$dragging = null;\n            /** Used for blocking UI events during ajax/operations (don't post twice) */\n            this.blocking = false;\n        },\n\n        // ------------------------------------------------------------------------ process raw list\n        /** set up main data */\n        _elementsSetUp: function() {\n            //this.debug( '-- _dataSetUp' );\n            /** a list of invalid elements and the reasons they aren't valid */\n            this.invalidElements = [];\n            //TODO: handle fundamental problem of syncing DOM, views, and list here\n            /** data for list in progress */\n            this.workingElements = [];\n            /** views for workingElements */\n            this.elementViews = [];\n\n            // copy initial list, sort, add ids if needed\n            this.workingElements = this.initialElements.slice(0);\n            this._ensureElementIds();\n            this._validateElements();\n            this._mangleDuplicateNames();\n            this._sortElements();\n        },\n\n        /** add ids to dataset objs in initial list if none */\n        _ensureElementIds: function() {\n            this.workingElements.forEach(function(element) {\n                if (!element.hasOwnProperty(\"id\")) {\n                    element.id = _.uniqueId();\n                }\n            });\n            return this.workingElements;\n        },\n\n        /** separate working list into valid and invalid elements for this collection */\n        _validateElements: function() {\n            var creator = this,\n                existingNames = {};\n            creator.invalidElements = [];\n\n            this.workingElements = this.workingElements.filter(function(\n                element\n            ) {\n                var problem = creator._isElementInvalid(element);\n                if (problem) {\n                    creator.invalidElements.push({\n                        element: element,\n                        text: problem\n                    });\n                }\n                return !problem;\n            });\n            return this.workingElements;\n        },\n\n        /** describe what is wrong with a particular element if anything */\n        _isElementInvalid: function(element) {\n            if (element.history_content_type !== \"dataset\") {\n                return _l(\"is not a dataset\");\n            }\n            var validState =\n                element.state === STATES.OK ||\n                _.contains(STATES.NOT_READY_STATES, element.state);\n            if (!validState) {\n                return _l(\"has errored, is paused, or is not accessible\");\n            }\n            if (element.deleted || element.purged) {\n                return _l(\"has been deleted or purged\");\n            }\n            return null;\n        },\n\n        /** mangle duplicate names using a mac-like '(counter)' addition to any duplicates */\n        _mangleDuplicateNames: function() {\n            var SAFETY = 900,\n                counter = 1,\n                existingNames = {};\n            this.workingElements.forEach(function(element) {\n                var currName = element.name;\n                while (existingNames.hasOwnProperty(currName)) {\n                    currName = element.name + \" (\" + counter + \")\";\n                    counter += 1;\n                    if (counter >= SAFETY) {\n                        throw new Error(\n                            \"Safety hit in while loop - thats impressive\"\n                        );\n                    }\n                }\n                element.name = currName;\n                existingNames[element.name] = true;\n            });\n        },\n\n        /** sort a list of elements */\n        _sortElements: function(list) {\n            // // currently only natural sort by name\n            // this.workingElements.sort( function( a, b ){ return naturalSort( a.name, b.name ); });\n            // return this.workingElements;\n        },\n\n        // ------------------------------------------------------------------------ rendering\n        // templates : ListCollectionCreator.templates,\n        /** render the entire interface */\n        render: function(speed, callback) {\n            //this.debug( '-- _render' );\n            if (this.workingElements.length < this.minElements) {\n                return this._renderInvalid(speed, callback);\n            }\n\n            this.$el.empty().html(this.templates.main());\n            this._renderHeader(speed);\n            this._renderMiddle(speed);\n            this._renderFooter(speed);\n            this._addPluginComponents();\n            this.$(\".collection-name\").focus();\n            this.trigger(\"rendered\", this);\n            return this;\n        },\n\n        /** render a simplified interface aimed at telling the user why they can't move forward */\n        _renderInvalid: function(speed, callback) {\n            //this.debug( '-- _render' );\n            this.$el.empty().html(\n                this.templates.invalidInitial({\n                    problems: this.invalidElements,\n                    elements: this.workingElements\n                })\n            );\n            if (typeof this.oncancel === \"function\") {\n                this.$(\".cancel-create.btn\").show();\n            }\n            this.trigger(\"rendered\", this);\n            return this;\n        },\n\n        /** render the header section */\n        _renderHeader: function(speed, callback) {\n            var $header = this.$(\".header\")\n                .empty()\n                .html(this.templates.header())\n                .find(\".help-content\")\n                .prepend($(this.templates.helpContent()));\n            //TODO: should only show once despite calling _renderHeader again\n            if (this.invalidElements.length) {\n                this._invalidElementsAlert();\n            }\n            return $header;\n        },\n\n        /** render the middle including the elements */\n        _renderMiddle: function(speed, callback) {\n            var $middle = this.$(\".middle\")\n                .empty()\n                .html(this.templates.middle());\n            this._renderList(speed);\n            return $middle;\n        },\n\n        /** add any jQuery/bootstrap/custom plugins to elements rendered */\n        _addPluginComponents: function() {\n            this.$(\".help-content i\").hoverhighlight(\n                \".collection-creator\",\n                this.highlightClr\n            );\n        },\n\n        /** build and show an alert describing any elements that could not be included due to problems */\n        _invalidElementsAlert: function() {\n            this._showAlert(\n                this.templates.invalidElements({\n                    problems: this.invalidElements\n                }),\n                \"alert-warning\"\n            );\n        },\n\n        _disableNameAndCreate: function(disable) {\n            disable = !_.isUndefined(disable) ? disable : true;\n            if (disable) {\n                this.$(\".collection-name\").prop(\"disabled\", true);\n                this.$(\".create-collection\").toggleClass(\"disabled\", true);\n                // } else {\n                //     this.$( '.collection-name' ).prop( 'disabled', false );\n                //     this.$( '.create-collection' ).removeClass( 'disable' );\n            }\n        },\n\n        // ------------------------------------------------------------------------ rendering elements\n        /** conv. to the main list display DOM */\n        $list: function() {\n            return this.$(\".collection-elements\");\n        },\n\n        /** show or hide the clear selected control based on the num of selected elements */\n        _renderClearSelected: function() {\n            if (_.size(this.selectedIds)) {\n                this.$(\n                    \".collection-elements-controls > .clear-selected\"\n                ).show();\n            } else {\n                this.$(\n                    \".collection-elements-controls > .clear-selected\"\n                ).hide();\n            }\n        },\n\n        /** render the elements in order (or a warning if no elements found) */\n        _renderList: function(speed, callback) {\n            //this.debug( '-- _renderList' );\n            var creator = this,\n                $tmp = jQuery(\"<div/>\"),\n                $list = creator.$list();\n\n            _.each(this.elementViews, function(view) {\n                view.destroy();\n                creator.removeElementView(view);\n            });\n\n            // if( !this.workingElements.length ){\n            //     this._renderNoValidElements();\n            //     return;\n            // }\n\n            creator.workingElements.forEach(function(element) {\n                var elementView = creator._createElementView(element);\n                $tmp.append(elementView.$el);\n            });\n\n            creator._renderClearSelected();\n            $list.empty().append($tmp.children());\n            _.invoke(creator.elementViews, \"render\");\n\n            if ($list.height() > $list.css(\"max-height\")) {\n                $list.css(\"border-width\", \"1px 0px 1px 0px\");\n            } else {\n                $list.css(\"border-width\", \"0px\");\n            }\n        },\n\n        /** create an element view, cache in elementViews, set up listeners, and return */\n        _createElementView: function(element) {\n            var elementView = new this.elementViewClass({\n                //TODO: use non-generic class or not all\n                // model : COLLECTION.DatasetDCE( element )\n                element: element,\n                selected: _.has(this.selectedIds, element.id)\n            });\n            this.elementViews.push(elementView);\n            this._listenToElementView(elementView);\n            return elementView;\n        },\n\n        /** listen to any element events */\n        _listenToElementView: function(view) {\n            var creator = this;\n            creator.listenTo(view, {\n                select: function(data) {\n                    var element = data.source.element;\n                    if (data.selected) {\n                        creator.selectedIds[element.id] = true;\n                    } else {\n                        delete creator.selectedIds[element.id];\n                    }\n                    creator.trigger(\"elements:select\", data);\n                },\n                discard: function(data) {\n                    creator.trigger(\"elements:discard\", data);\n                }\n            });\n        },\n\n        /** add a new element view based on the json in element */\n        addElementView: function(element) {\n            //TODO: workingElements is sorted, add element in appropo index\n            // add element, sort elements, find element index\n            // var view = this._createElementView( element );\n            // return view;\n        },\n\n        /** stop listening to view and remove from caches */\n        removeElementView: function(view) {\n            delete this.selectedIds[view.element.id];\n            this._renderClearSelected();\n\n            this.elementViews = _.without(this.elementViews, view);\n            this.stopListening(view);\n        },\n\n        /** render a message in the list that no elements remain to create a collection */\n        _renderNoElementsLeft: function() {\n            this._disableNameAndCreate(true);\n            this.$(\".collection-elements\").append(\n                this.templates.noElementsLeft()\n            );\n        },\n\n        // /** render a message in the list that no valid elements were found to create a collection */\n        // _renderNoValidElements : function(){\n        //     this._disableNameAndCreate( true );\n        //     this.$( '.collection-elements' ).append( this.templates.noValidElements() );\n        // },\n\n        // ------------------------------------------------------------------------ API\n        /** convert element into JSON compatible with the collections API */\n        _elementToJSON: function(element) {\n            // return element.toJSON();\n            return element;\n        },\n\n        /** create the collection via the API\n     *  @returns {jQuery.xhr Object} the jquery ajax request\n     */\n        createList: function(name) {\n            if (!this.workingElements.length) {\n                var message = _l(\"No valid elements for final list\") + \". \";\n                message +=\n                    '<a class=\"cancel-create\" href=\"javascript:void(0);\">' +\n                    _l(\"Cancel\") +\n                    \"</a> \";\n                message += _l(\"or\");\n                message +=\n                    ' <a class=\"reset\" href=\"javascript:void(0);\">' +\n                    _l(\"start over\") +\n                    \"</a>.\";\n                this._showAlert(message);\n                return;\n            }\n\n            var creator = this,\n                elements = this.workingElements.map(function(element) {\n                    return creator._elementToJSON(element);\n                });\n\n            creator.blocking = true;\n            return creator\n                .creationFn(elements, name, creator.hideOriginals)\n                .always(function() {\n                    creator.blocking = false;\n                })\n                .fail(function(xhr, status, message) {\n                    creator.trigger(\"error\", {\n                        xhr: xhr,\n                        status: status,\n                        message: _l(\n                            \"An error occurred while creating this collection\"\n                        )\n                    });\n                })\n                .done(function(response, message, xhr) {\n                    creator.trigger(\n                        \"collection:created\",\n                        response,\n                        message,\n                        xhr\n                    );\n                    creator.metric(\"collection:created\", response);\n                    if (typeof creator.oncreate === \"function\") {\n                        creator.oncreate.call(this, response, message, xhr);\n                    }\n                });\n        },\n\n        // ------------------------------------------------------------------------ events\n        /** set up event handlers on self */\n        _setUpBehaviors: function() {\n            this.on(\"error\", this._errorHandler);\n\n            this.once(\"rendered\", function() {\n                this.trigger(\"rendered:initial\", this);\n            });\n\n            this.on(\"elements:select\", function(data) {\n                this._renderClearSelected();\n            });\n\n            this.on(\"elements:discard\", function(data) {\n                var element = data.source.element;\n                this.removeElementView(data.source);\n\n                this.workingElements = _.without(this.workingElements, element);\n                if (!this.workingElements.length) {\n                    this._renderNoElementsLeft();\n                }\n            });\n\n            //this.on( 'all', function(){\n            //    this.info( arguments );\n            //});\n            return this;\n        },\n\n        /** handle errors with feedback and details to the user (if available) */\n        _errorHandler: function(data) {\n            this.error(data);\n\n            var creator = this,\n                content = data.message || _l(\"An error occurred\");\n            if (data.xhr) {\n                var xhr = data.xhr,\n                    message = data.message;\n                if (xhr.readyState === 0 && xhr.status === 0) {\n                    content +=\n                        \": \" +\n                        _l(\"Galaxy could not be reached and may be updating.\") +\n                        _l(\" Try again in a few minutes.\");\n                } else if (xhr.responseJSON) {\n                    content +=\n                        \":<br /><pre>\" +\n                        JSON.stringify(xhr.responseJSON) +\n                        \"</pre>\";\n                } else {\n                    content += \": \" + message;\n                }\n            }\n            creator._showAlert(content, \"alert-danger\");\n        },\n\n        events: {\n            // header\n            \"click .more-help\": \"_clickMoreHelp\",\n            \"click .less-help\": \"_clickLessHelp\",\n            \"click .main-help\": \"_toggleHelp\",\n            \"click .header .alert button\": \"_hideAlert\",\n\n            \"click .reset\": \"reset\",\n            \"click .clear-selected\": \"clearSelectedElements\",\n\n            // elements - selection\n            \"click .collection-elements\": \"clearSelectedElements\",\n\n            // elements - drop target\n            // 'dragenter .collection-elements': '_dragenterElements',\n            // 'dragleave .collection-elements': '_dragleaveElements',\n            \"dragover .collection-elements\": \"_dragoverElements\",\n            \"drop .collection-elements\": \"_dropElements\",\n\n            // these bubble up from the elements as custom events\n            \"collection-element.dragstart .collection-elements\":\n                \"_elementDragstart\",\n            \"collection-element.dragend   .collection-elements\":\n                \"_elementDragend\",\n\n            // footer\n            \"change .collection-name\": \"_changeName\",\n            \"keydown .collection-name\": \"_nameCheckForEnter\",\n            \"change .hide-originals\": \"_changeHideOriginals\",\n            \"click .cancel-create\": \"_cancelCreate\",\n            \"click .create-collection\": \"_clickCreate\" //,\n        },\n\n        // ........................................................................ elements\n        /** reset all data to the initial state */\n        reset: function() {\n            this._instanceSetUp();\n            this._elementsSetUp();\n            this.render();\n        },\n\n        /** deselect all elements */\n        clearSelectedElements: function(ev) {\n            this.$(\".collection-elements .collection-element\").removeClass(\n                \"selected\"\n            );\n            this.$(\".collection-elements-controls > .clear-selected\").hide();\n        },\n\n        //_dragenterElements : function( ev ){\n        //    //this.debug( '_dragenterElements:', ev );\n        //},\n        //TODO: if selected are dragged out of the list area - remove the placeholder - cuz it won't work anyway\n        // _dragleaveElements : function( ev ){\n        //    //this.debug( '_dragleaveElements:', ev );\n        // },\n\n        /** track the mouse drag over the list adding a placeholder to show where the drop would occur */\n        _dragoverElements: function(ev) {\n            //this.debug( '_dragoverElements:', ev );\n            ev.preventDefault();\n\n            var $list = this.$list();\n            this._checkForAutoscroll($list, ev.originalEvent.clientY);\n            var $nearest = this._getNearestElement(ev.originalEvent.clientY);\n\n            //TODO: no need to re-create - move instead\n            this.$(\".element-drop-placeholder\").remove();\n            var $placeholder = $(\n                '<div class=\"element-drop-placeholder\"></div>'\n            );\n            if (!$nearest.length) {\n                $list.append($placeholder);\n            } else {\n                $nearest.before($placeholder);\n            }\n        },\n\n        /** If the mouse is near enough to the list's top or bottom, scroll the list */\n        _checkForAutoscroll: function($element, y) {\n            var AUTOSCROLL_SPEED = 2,\n                offset = $element.offset(),\n                scrollTop = $element.scrollTop(),\n                upperDist = y - offset.top,\n                lowerDist = offset.top + $element.outerHeight() - y;\n            if (upperDist >= 0 && upperDist < this.autoscrollDist) {\n                $element.scrollTop(scrollTop - AUTOSCROLL_SPEED);\n            } else if (lowerDist >= 0 && lowerDist < this.autoscrollDist) {\n                $element.scrollTop(scrollTop + AUTOSCROLL_SPEED);\n            }\n        },\n\n        /** get the nearest element based on the mouse's Y coordinate.\n     *  If the y is at the end of the list, return an empty jQuery object.\n     */\n        _getNearestElement: function(y) {\n            var WIGGLE = 4,\n                lis = this.$(\n                    \".collection-elements li.collection-element\"\n                ).toArray();\n            for (var i = 0; i < lis.length; i++) {\n                var $li = $(lis[i]),\n                    top = $li.offset().top,\n                    halfHeight = Math.floor($li.outerHeight() / 2) + WIGGLE;\n                if (top + halfHeight > y && top - halfHeight < y) {\n                    return $li;\n                }\n            }\n            return $();\n        },\n\n        /** drop (dragged/selected elements) onto the list, re-ordering the internal list */\n        _dropElements: function(ev) {\n            if (ev.originalEvent) {\n                ev = ev.originalEvent;\n            }\n            // both required for firefox\n            ev.preventDefault();\n            ev.dataTransfer.dropEffect = \"move\";\n\n            // insert before the nearest element or after the last.\n            var $nearest = this._getNearestElement(ev.clientY);\n            if ($nearest.length) {\n                this.$dragging.insertBefore($nearest);\n            } else {\n                // no nearest before - insert after last element\n                this.$dragging.insertAfter(\n                    this.$(\".collection-elements .collection-element\").last()\n                );\n            }\n            // resync the creator's list based on the new DOM order\n            this._syncOrderToDom();\n            return false;\n        },\n\n        /** resync the creator's list of elements based on the DOM order */\n        _syncOrderToDom: function() {\n            var creator = this,\n                newElements = [];\n            //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n            this.$(\".collection-elements .collection-element\").each(function() {\n                var id = $(this).attr(\"data-element-id\"),\n                    element = _.findWhere(creator.workingElements, {\n                        id: id\n                    });\n                if (element) {\n                    newElements.push(element);\n                } else {\n                    console.error(\"missing element: \", id);\n                }\n            });\n            this.workingElements = newElements;\n            this._renderList();\n        },\n\n        /** drag communication with element sub-views: dragstart */\n        _elementDragstart: function(ev, element) {\n            // auto select the element causing the event and move all selected\n            element.select(true);\n            this.$dragging = this.$(\n                \".collection-elements .collection-element.selected\"\n            );\n        },\n\n        /** drag communication with element sub-views: dragend - remove the placeholder */\n        _elementDragend: function(ev, element) {\n            $(\".element-drop-placeholder\").remove();\n            this.$dragging = null;\n        },\n\n        // ------------------------------------------------------------------------ templates\n        //TODO: move to require text plugin and load these as text\n        //TODO: underscore currently unnecc. bc no vars are used\n        //TODO: better way of localizing text-nodes in long strings\n        /** underscore template fns attached to class */\n        templates: _.extend(\n            {},\n            baseCreator.CollectionCreatorMixin._creatorTemplates,\n            {\n                /** the header (not including help text) */\n                header: _.template(\n                    [\n                        '<div class=\"main-help well clear\">',\n                        '<a class=\"more-help\" href=\"javascript:void(0);\">',\n                        _l(\"More help\"),\n                        \"</a>\",\n                        '<div class=\"help-content\">',\n                        '<a class=\"less-help\" href=\"javascript:void(0);\">',\n                        _l(\"Less\"),\n                        \"</a>\",\n                        \"</div>\",\n                        \"</div>\",\n                        '<div class=\"alert alert-dismissable\">',\n                        '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" ',\n                        'title=\"',\n                        _l(\"Close and show more help\"),\n                        '\" aria-hidden=\"true\">&times;</button>',\n                        '<span class=\"alert-message\"></span>',\n                        \"</div>\"\n                    ].join(\"\")\n                ),\n\n                /** the middle: element list */\n                middle: _.template(\n                    [\n                        '<div class=\"collection-elements-controls\">',\n                        '<a class=\"reset\" href=\"javascript:void(0);\" ',\n                        'title=\"',\n                        _l(\"Undo all reordering and discards\"),\n                        '\">',\n                        _l(\"Start over\"),\n                        \"</a>\",\n                        '<a class=\"clear-selected\" href=\"javascript:void(0);\" ',\n                        'title=\"',\n                        _l(\"De-select all selected datasets\"),\n                        '\">',\n                        _l(\"Clear selected\"),\n                        \"</a>\",\n                        \"</div>\",\n                        '<div class=\"collection-elements scroll-container flex-row\">',\n                        \"</div>\"\n                    ].join(\"\")\n                ),\n\n                /** creation and cancel controls */\n                footer: _.template(\n                    [\n                        '<div class=\"attributes clear\">',\n                        '<div class=\"clear\">',\n                        '<label class=\"setting-prompt pull-right\">',\n                        _l(\"Hide original elements\"),\n                        \"?\",\n                        '<input class=\"hide-originals pull-right\" type=\"checkbox\" />',\n                        \"</label>\",\n                        \"</div>\",\n                        '<div class=\"clear\">',\n                        '<input class=\"collection-name form-control pull-right\" ',\n                        'placeholder=\"',\n                        _l(\"Enter a name for your new collection\"),\n                        '\" />',\n                        '<div class=\"collection-name-prompt pull-right\">',\n                        _l(\"Name\"),\n                        \":</div>\",\n                        \"</div>\",\n                        \"</div>\",\n\n                        '<div class=\"actions clear vertically-spaced\">',\n                        '<div class=\"other-options pull-left\">',\n                        '<button class=\"cancel-create btn\" tabindex=\"-1\">',\n                        _l(\"Cancel\"),\n                        \"</button>\",\n                        '<div class=\"create-other btn-group dropup\">',\n                        '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                        _l(\"Create a different kind of collection\"),\n                        ' <span class=\"caret\"></span>',\n                        \"</button>\",\n                        '<ul class=\"dropdown-menu\" role=\"menu\">',\n                        '<li><a href=\"#\">',\n                        _l(\"Create a <i>single</i> pair\"),\n                        \"</a></li>\",\n                        '<li><a href=\"#\">',\n                        _l(\"Create a list of <i>unpaired</i> datasets\"),\n                        \"</a></li>\",\n                        \"</ul>\",\n                        \"</div>\",\n                        \"</div>\",\n\n                        '<div class=\"main-options pull-right\">',\n                        '<button class=\"create-collection btn btn-primary\">',\n                        _l(\"Create list\"),\n                        \"</button>\",\n                        \"</div>\",\n                        \"</div>\"\n                    ].join(\"\")\n                ),\n\n                /** help content */\n                helpContent: _.template(\n                    [\n                        \"<p>\",\n                        _l(\n                            [\n                                \"Collections of datasets are permanent, ordered lists of datasets that can be passed to tools and \",\n                                \"workflows in order to have analyses done on each member of the entire group. This interface allows \",\n                                \"you to create a collection and re-order the final collection.\"\n                            ].join(\"\")\n                        ),\n                        \"</p>\",\n                        \"<ul>\",\n                        \"<li>\",\n                        _l(\n                            [\n                                \"Rename elements in the list by clicking on \",\n                                '<i data-target=\".collection-element .name\">the existing name</i>.'\n                            ].join(\"\")\n                        ),\n                        \"</li>\",\n                        \"<li>\",\n                        _l(\n                            [\n                                \"Discard elements from the final created list by clicking on the \",\n                                '<i data-target=\".collection-element .discard\">\"Discard\"</i> button.'\n                            ].join(\"\")\n                        ),\n                        \"</li>\",\n                        \"<li>\",\n                        _l(\n                            [\n                                \"Reorder the list by clicking and dragging elements. Select multiple elements by clicking on \",\n                                '<i data-target=\".collection-element\">them</i> and you can then move those selected by dragging the ',\n                                \"entire group. Deselect them by clicking them again or by clicking the \",\n                                'the <i data-target=\".clear-selected\">\"Clear selected\"</i> link.'\n                            ].join(\"\")\n                        ),\n                        \"</li>\",\n                        \"<li>\",\n                        _l(\n                            [\n                                'Click the <i data-target=\".reset\">\"Start over\"</i> link to begin again as if you had just opened ',\n                                \"the interface.\"\n                            ].join(\"\")\n                        ),\n                        \"</li>\",\n                        \"<li>\",\n                        _l(\n                            [\n                                'Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'\n                            ].join(\"\")\n                        ),\n                        \"</li>\",\n                        \"</ul><br />\",\n                        \"<p>\",\n                        _l(\n                            [\n                                'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n                                'click <i data-target=\".create-collection\">\"Create list\"</i>.'\n                            ].join(\"\")\n                        ),\n                        \"</p>\"\n                    ].join(\"\")\n                ),\n\n                /** shown in list when all elements are discarded */\n                invalidElements: _.template(\n                    [\n                        _l(\n                            \"The following selections could not be included due to problems:\"\n                        ),\n                        \"<ul><% _.each( problems, function( problem ){ %>\",\n                        \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\",\n                        \"<% }); %></ul>\"\n                    ].join(\"\")\n                ),\n\n                /** shown in list when all elements are discarded */\n                noElementsLeft: _.template(\n                    [\n                        '<li class=\"no-elements-left-message\">',\n                        _l(\"No elements left! \"),\n                        _l(\"Would you like to \"),\n                        '<a class=\"reset\" href=\"javascript:void(0)\">',\n                        _l(\"start over\"),\n                        \"</a>?\",\n                        \"</li>\"\n                    ].join(\"\")\n                ),\n\n                /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n                invalidInitial: _.template(\n                    [\n                        '<div class=\"header flex-row no-flex\">',\n                        '<div class=\"alert alert-warning\" style=\"display: block\">',\n                        '<span class=\"alert-message\">',\n                        \"<% if( _.size( problems ) ){ %>\",\n                        _l(\n                            \"The following selections could not be included due to problems\"\n                        ),\n                        \":\",\n                        \"<ul><% _.each( problems, function( problem ){ %>\",\n                        \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\",\n                        \"<% }); %></ul>\",\n                        \"<% } else if( _.size( elements ) < 1 ){ %>\",\n                        _l(\"No datasets were selected\"),\n                        \".\",\n                        \"<% } %>\",\n                        \"<br />\",\n                        _l(\"At least one element is needed for the collection\"),\n                        \". \",\n                        _l(\"You may need to \"),\n                        '<a class=\"cancel-create\" href=\"javascript:void(0)\">',\n                        _l(\"cancel\"),\n                        \"</a> \",\n                        _l(\"and reselect new elements\"),\n                        \".\",\n                        \"</span>\",\n                        \"</div>\",\n                        \"</div>\",\n                        '<div class=\"footer flex-row no-flex\">',\n                        '<div class=\"actions clear vertically-spaced\">',\n                        '<div class=\"other-options pull-left\">',\n                        '<button class=\"cancel-create btn\" tabindex=\"-1\">',\n                        _l(\"Cancel\"),\n                        \"</button>\",\n                        // _l( 'Create a different kind of collection' ),\n                        \"</div>\",\n                        \"</div>\",\n                        \"</div>\"\n                    ].join(\"\")\n                )\n            }\n        ),\n\n        // ------------------------------------------------------------------------ misc\n        /** string rep */\n        toString: function() {\n            return \"ListCollectionCreator\";\n        }\n    });\n\n//=============================================================================\n/** Create a modal and load its body with the given CreatorClass creator type\n *  @returns {Deferred} resolved when creator has built a collection.\n */\nvar collectionCreatorModal = function _collectionCreatorModal(\n    elements,\n    options,\n    CreatorClass\n) {\n    var deferred = jQuery.Deferred(),\n        modal = Galaxy.modal || new UI_MODAL.View(),\n        creator;\n\n    options = _.defaults(options || {}, {\n        elements: elements,\n        oncancel: function() {\n            modal.hide();\n            deferred.reject(\"cancelled\");\n        },\n        oncreate: function(creator, response) {\n            modal.hide();\n            deferred.resolve(response);\n        }\n    });\n\n    creator = new CreatorClass(options);\n    modal.show({\n        title: options.title || _l(\"Create a collection\"),\n        body: creator.$el,\n        width: \"80%\",\n        height: \"100%\",\n        closing_events: true\n    });\n    creator.render();\n    window._collectionCreator = creator;\n\n    //TODO: remove modal header\n    return deferred;\n};\n\n/** List collection flavor of collectionCreatorModal. */\nvar listCollectionCreatorModal = function _listCollectionCreatorModal(\n    elements,\n    options\n) {\n    options = options || {};\n    options.title = _l(\"Create a collection from a list of datasets\");\n    return collectionCreatorModal(elements, options, ListCollectionCreator);\n};\n\n//==============================================================================\n/** Use a modal to create a list collection, then add it to the given history contents.\n *  @returns {Deferred} resolved when the collection is added to the history.\n */\nfunction createListCollection(contents, defaultHideSourceItems) {\n    var elements = contents.toJSON(),\n        promise = listCollectionCreatorModal(elements, {\n            defaultHideSourceItems: defaultHideSourceItems,\n            creationFn: function(elements, name, hideSourceItems) {\n                elements = elements.map(function(element) {\n                    return {\n                        id: element.id,\n                        name: element.name,\n                        //TODO: this allows for list:list even if the filter above does not - reconcile\n                        src:\n                            element.history_content_type === \"dataset\"\n                                ? \"hda\"\n                                : \"hdca\"\n                    };\n                });\n                return contents.createHDCA(\n                    elements,\n                    \"list\",\n                    name,\n                    hideSourceItems\n                );\n            }\n        });\n    return promise;\n}\n\n//==============================================================================\nexport default {\n    DatasetCollectionElementView: DatasetCollectionElementView,\n    ListCollectionCreator: ListCollectionCreator,\n\n    collectionCreatorModal: collectionCreatorModal,\n    listCollectionCreatorModal: listCollectionCreatorModal,\n    createListCollection: createListCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/list-collection-creator.js","import DC_MODEL from \"mvc/collection/collection-model\";\nimport HISTORY_CONTENT from \"mvc/history/history-content-model\";\nimport _l from \"utils/localization\";\n\n/*==============================================================================\n\nModels for DatasetCollections contained within a history.\n\nTODO:\n    these might be compactable to one class if some duplication with\n    collection-model is used.\n\n==============================================================================*/\nvar hcontentMixin = HISTORY_CONTENT.HistoryContentMixin,\n    ListDC = DC_MODEL.ListDatasetCollection,\n    PairDC = DC_MODEL.PairDatasetCollection,\n    ListPairedDC = DC_MODEL.ListPairedDatasetCollection,\n    ListOfListsDC = DC_MODEL.ListOfListsDatasetCollection;\n\n//==============================================================================\n/** Override to post to contents route w/o id. */\nfunction buildHDCASave(_super) {\n    return function _save(attributes, options) {\n        if (this.isNew()) {\n            options = options || {};\n            options.url = this.urlRoot + this.get(\"history_id\") + \"/contents\";\n            attributes = attributes || {};\n            attributes.type = \"dataset_collection\";\n        }\n        return _super.call(this, attributes, options);\n    };\n}\n\n//==============================================================================\n/** @class Backbone model for List Dataset Collection within a History.\n */\nvar HistoryListDatasetCollection = ListDC.extend(hcontentMixin).extend(\n    /** @lends HistoryListDatasetCollection.prototype */ {\n        defaults: _.extend(_.clone(ListDC.prototype.defaults), {\n            history_content_type: \"dataset_collection\",\n            collection_type: \"list\",\n            model_class: \"HistoryDatasetCollectionAssociation\"\n        }),\n\n        /** Override to post to contents route w/o id. */\n        save: buildHDCASave(ListDC.prototype.save),\n\n        /** String representation. */\n        toString: function() {\n            return \"History\" + ListDC.prototype.toString.call(this);\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone model for Pair Dataset Collection within a History.\n *  @constructs\n */\nvar HistoryPairDatasetCollection = PairDC.extend(hcontentMixin).extend(\n    /** @lends HistoryPairDatasetCollection.prototype */ {\n        defaults: _.extend(_.clone(PairDC.prototype.defaults), {\n            history_content_type: \"dataset_collection\",\n            collection_type: \"paired\",\n            model_class: \"HistoryDatasetCollectionAssociation\"\n        }),\n\n        /** Override to post to contents route w/o id. */\n        save: buildHDCASave(PairDC.prototype.save),\n\n        /** String representation. */\n        toString: function() {\n            return \"History\" + PairDC.prototype.toString.call(this);\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone model for List of Pairs Dataset Collection within a History. */\nvar HistoryListPairedDatasetCollection = ListPairedDC.extend(\n    hcontentMixin\n).extend({\n    defaults: _.extend(_.clone(ListPairedDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"list:paired\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(ListPairedDC.prototype.save),\n\n    /** String representation. */\n    toString: function() {\n        return \"History\" + ListPairedDC.prototype.toString.call(this);\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for List of Lists Dataset Collection within a History. */\nvar HistoryListOfListsDatasetCollection = ListOfListsDC.extend(\n    hcontentMixin\n).extend({\n    defaults: _.extend(_.clone(ListOfListsDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"list:list\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(ListOfListsDC.prototype.save),\n\n    /** String representation. */\n    toString: function() {\n        return [\n            \"HistoryListOfListsDatasetCollection(\",\n            this.get(\"name\"),\n            \")\"\n        ].join(\"\");\n    }\n});\n\n//==============================================================================\nexport default {\n    HistoryListDatasetCollection: HistoryListDatasetCollection,\n    HistoryPairDatasetCollection: HistoryPairDatasetCollection,\n    HistoryListPairedDatasetCollection: HistoryListPairedDatasetCollection,\n    HistoryListOfListsDatasetCollection: HistoryListOfListsDatasetCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hdca-model.js","import DATASET_MODEL from \"mvc/dataset/dataset-model\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/*\nNotes:\n\nTerminology:\n    DatasetCollection/DC : a container of datasets or nested DatasetCollections\n    Element/DatasetCollectionElement/DCE : an item contained in a DatasetCollection\n    HistoryDatasetCollectionAssociation/HDCA: a DatasetCollection contained in a history\n\n\nThis all seems too complex unfortunately:\n\n- Terminology collision between DatasetCollections (DCs) and Backbone Collections.\n- In the DatasetCollections API JSON, DC Elements use a 'Has A' stucture to *contain*\n    either a dataset or a nested DC. This would make the hierarchy much taller. I've\n    decided to merge the contained JSON with the DC element json - making the 'has a'\n    relation into an 'is a' relation. This seems simpler to me and allowed a lot of\n    DRY in both models and views, but may make tracking or tracing within these models\n    more difficult (since DatasetCollectionElements are now *also* DatasetAssociations\n    or DatasetCollections (nested)). This also violates the rule of thumb about\n    favoring aggregation over inheritance.\n- Currently, there are three DatasetCollection subclasses: List, Pair, and ListPaired.\n    These each should a) be usable on their own, b) be usable in the context of\n    nesting within a collection model (at least in the case of ListPaired), and\n    c) be usable within the context of other container models (like History or\n    LibraryFolder, etc.). I've tried to separate/extract classes in order to\n    handle those three situations, but it's proven difficult to do in a simple,\n    readable manner.\n- Ideally, histories and libraries would inherit from the same server models as\n    dataset collections do since they are (in essence) dataset collections themselves -\n    making the whole nested structure simpler. This would be a large, error-prone\n    refactoring and migration.\n\nMany of the classes and heirarchy are meant as extension points so, while the\nrelations and flow may be difficult to understand initially, they'll allow us to\nhandle the growth or flux dataset collection in the future (w/o actually implementing\nany YAGNI).\n\n*/\n//_________________________________________________________________________________________________ ELEMENTS\n/** @class mixin for Dataset collection elements.\n *      When collection elements are passed from the API, the underlying element is\n *          in a sub-object 'object' (IOW, a DCE representing an HDA will have HDA json in element.object).\n *      This mixin uses the constructor and parse methods to merge that JSON with the DCE attribtues\n *          effectively changing a DCE from a container to a subclass (has a --> is a).\n */\nvar DatasetCollectionElementMixin = {\n    /** default attributes used by elements in a dataset collection */\n    defaults: {\n        model_class: \"DatasetCollectionElement\",\n        element_identifier: null,\n        element_index: null,\n        element_type: null\n    },\n\n    /** merge the attributes of the sub-object 'object' into this model */\n    _mergeObject: function(attributes) {\n        // if we don't preserve and correct ids here, the element id becomes the object id\n        // and collision in backbone's _byId will occur and only\n        _.extend(attributes, attributes.object, {\n            element_id: attributes.id\n        });\n        delete attributes.object;\n        return attributes;\n    },\n\n    /** override to merge this.object into this */\n    constructor: function(attributes, options) {\n        // console.debug( '\\t DatasetCollectionElement.constructor:', attributes, options );\n        attributes = this._mergeObject(attributes);\n        this.idAttribute = \"element_id\";\n        Backbone.Model.apply(this, arguments);\n    },\n\n    /** when the model is fetched, merge this.object into this */\n    parse: function(response, options) {\n        var attributes = response;\n        attributes = this._mergeObject(attributes);\n        return attributes;\n    }\n};\n\n/** @class Concrete class of Generic DatasetCollectionElement */\nvar DatasetCollectionElement = Backbone.Model\n    .extend(BASE_MVC.LoggableMixin)\n    .extend(DatasetCollectionElementMixin)\n    .extend({ _logNamespace: \"collections\" });\n\n//==============================================================================\n/** @class Base/Abstract Backbone collection for Generic DCEs. */\nvar DCECollection = Backbone.Collection.extend(BASE_MVC.LoggableMixin).extend(\n    /** @lends DCECollection.prototype */ {\n        _logNamespace: \"collections\",\n\n        model: DatasetCollectionElement,\n\n        /** String representation. */\n        toString: function() {\n            return [\n                \"DatasetCollectionElementCollection(\",\n                this.length,\n                \")\"\n            ].join(\"\");\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone model for a dataset collection element that is a dataset (HDA).\n */\nvar DatasetDCE = DATASET_MODEL.DatasetAssociation.extend(\n    BASE_MVC.mixin(\n        DatasetCollectionElementMixin,\n        /** @lends DatasetDCE.prototype */ {\n            /** url fn */\n            url: function() {\n                // won't always be an hda\n                if (!this.has(\"history_id\")) {\n                    console.warn(\n                        \"no endpoint for non-hdas within a collection yet\"\n                    );\n                    // (a little silly since this api endpoint *also* points at hdas)\n                    return Galaxy.root + \"api/datasets\";\n                }\n                return (\n                    Galaxy.root +\n                    \"api/histories/\" +\n                    this.get(\"history_id\") +\n                    \"/contents/\" +\n                    this.get(\"id\")\n                );\n            },\n\n            defaults: _.extend(\n                {},\n                DATASET_MODEL.DatasetAssociation.prototype.defaults,\n                DatasetCollectionElementMixin.defaults\n            ),\n\n            _downloadQueryParameters: function() {\n                return (\n                    \"?to_ext=\" +\n                    this.get(\"file_ext\") +\n                    \"&hdca_id=\" +\n                    this.get(\"parent_hdca_id\") +\n                    \"&element_identifier=\" +\n                    this.get(\"element_identifier\")\n                );\n            },\n\n            // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n            //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n            //  - re-apply manually for now\n            /** call the mixin constructor */\n            constructor: function(attributes, options) {\n                this.debug(\"\\t DatasetDCE.constructor:\", attributes, options);\n                //DATASET_MODEL.DatasetAssociation.prototype.constructor.call( this, attributes, options );\n                DatasetCollectionElementMixin.constructor.call(\n                    this,\n                    attributes,\n                    options\n                );\n            },\n\n            /** Does this model already contain detailed data (as opposed to just summary level data)? */\n            hasDetails: function() {\n                return this.elements && this.elements.length;\n            },\n\n            /** String representation. */\n            toString: function() {\n                var objStr = this.get(\"element_identifier\");\n                return [\"DatasetDCE(\", objStr, \")\"].join(\"\");\n            }\n        }\n    )\n);\n\n//==============================================================================\n/** @class DCECollection of DatasetDCE's (a list of datasets, a pair of datasets).\n */\nvar DatasetDCECollection = DCECollection.extend(\n    /** @lends DatasetDCECollection.prototype */ {\n        model: DatasetDCE,\n\n        /** String representation. */\n        toString: function() {\n            return [\"DatasetDCECollection(\", this.length, \")\"].join(\"\");\n        }\n    }\n);\n\n//_________________________________________________________________________________________________ COLLECTIONS\n/** @class Backbone model for Dataset Collections.\n *      The DC API returns an array of JSON objects under the attribute elements.\n *      This model:\n *          - removes that array/attribute ('elements') from the model,\n *          - creates a bbone collection (of the class defined in the 'collectionClass' attribute),\n *          - passes that json onto the bbone collection\n *          - caches the bbone collection in this.elements\n */\nvar DatasetCollection = Backbone.Model\n    .extend(BASE_MVC.LoggableMixin)\n    .extend(BASE_MVC.SearchableModelMixin)\n    .extend(\n        /** @lends DatasetCollection.prototype */ {\n            _logNamespace: \"collections\",\n\n            /** default attributes for a model */\n            defaults: {\n                /* 'list', 'paired', or 'list:paired' */\n                collection_type: null,\n                //??\n                deleted: false\n            },\n\n            /** Which class to use for elements */\n            collectionClass: DCECollection,\n\n            /** set up: create elements instance var and (on changes to elements) update them  */\n            initialize: function(model, options) {\n                this.debug(\n                    this + \"(DatasetCollection).initialize:\",\n                    model,\n                    options,\n                    this\n                );\n                this.elements = this._createElementsModel();\n                this.on(\"change:elements\", function() {\n                    this.log(\"change:elements\");\n                    //TODO: prob. better to update the collection instead of re-creating it\n                    this.elements = this._createElementsModel();\n                });\n            },\n\n            /** move elements model attribute to full collection */\n            _createElementsModel: function() {\n                this.debug(\n                    this + \"._createElementsModel\",\n                    this.collectionClass,\n                    this.get(\"elements\"),\n                    this.elements\n                );\n                //TODO: same patterns as DatasetCollectionElement _createObjectModel - refactor to BASE_MVC.hasSubModel?\n                var elements = this.get(\"elements\") || [];\n                this.unset(\"elements\", { silent: true });\n                var self = this;\n                _.each(elements, function(element, index) {\n                    _.extend(element, {\n                        parent_hdca_id: self.get(\"id\")\n                    });\n                });\n                this.elements = new this.collectionClass(elements);\n                //this.debug( 'collectionClass:', this.collectionClass + '', this.elements );\n                return this.elements;\n            },\n\n            // ........................................................................ common queries\n            /** pass the elements back within the model json when this is serialized */\n            toJSON: function() {\n                var json = Backbone.Model.prototype.toJSON.call(this);\n                if (this.elements) {\n                    json.elements = this.elements.toJSON();\n                }\n                return json;\n            },\n\n            /** Is this collection in a 'ready' state no processing (for the collection) is left\n     *  to do on the server.\n     */\n            inReadyState: function() {\n                var populated = this.get(\"populated\");\n                return this.isDeletedOrPurged() || populated;\n            },\n\n            //TODO:?? the following are the same interface as DatasetAssociation - can we combine?\n            /** Does the DC contain any elements yet? Is a fetch() required? */\n            hasDetails: function() {\n                return this.elements.length !== 0;\n            },\n\n            /** Given the filters, what models in this.elements would be returned? */\n            getVisibleContents: function(filters) {\n                // filters unused for now\n                return this.elements;\n            },\n\n            // ........................................................................ ajax\n            /** override to use actual Dates objects for create/update times */\n            parse: function(response, options) {\n                var parsed = Backbone.Model.prototype.parse.call(\n                    this,\n                    response,\n                    options\n                );\n                if (parsed.create_time) {\n                    parsed.create_time = new Date(parsed.create_time);\n                }\n                if (parsed.update_time) {\n                    parsed.update_time = new Date(parsed.update_time);\n                }\n                return parsed;\n            },\n\n            /** save this dataset, _Mark_ing it as deleted (just a flag) */\n            delete: function(options) {\n                if (this.get(\"deleted\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: true }, options);\n            },\n            /** save this dataset, _Mark_ing it as undeleted */\n            undelete: function(options) {\n                if (!this.get(\"deleted\") || this.get(\"purged\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: false }, options);\n            },\n\n            /** Is this collection deleted or purged? */\n            isDeletedOrPurged: function() {\n                return this.get(\"deleted\") || this.get(\"purged\");\n            },\n\n            // ........................................................................ searchable\n            /** searchable attributes for collections */\n            searchAttributes: [\"name\", \"tags\"],\n\n            // ........................................................................ misc\n            /** String representation */\n            toString: function() {\n                var idAndName = [\n                    this.get(\"id\"),\n                    this.get(\"name\") || this.get(\"element_identifier\")\n                ];\n                return \"DatasetCollection(\" + idAndName.join(\",\") + \")\";\n            }\n        }\n    );\n\n//==============================================================================\n/** Model for a DatasetCollection containing datasets (non-nested).\n */\nvar ListDatasetCollection = DatasetCollection.extend(\n    /** @lends ListDatasetCollection.prototype */ {\n        /** override since we know the collection will only contain datasets */\n        collectionClass: DatasetDCECollection,\n\n        /** String representation. */\n        toString: function() {\n            return \"List\" + DatasetCollection.prototype.toString.call(this);\n        }\n    }\n);\n\n//==============================================================================\n/** Model for a DatasetCollection containing fwd/rev datasets (a list of 2).\n */\nvar PairDatasetCollection = ListDatasetCollection.extend(\n    /** @lends PairDatasetCollection.prototype */ {\n        /** String representation. */\n        toString: function() {\n            return \"Pair\" + DatasetCollection.prototype.toString.call(this);\n        }\n    }\n);\n\n//_________________________________________________________________________________________________ NESTED COLLECTIONS\n// this is where things get weird, man. Weird.\n//TODO: it might be possible to compact all the following...I think.\n//==============================================================================\n/** @class Backbone model for a Generic DatasetCollectionElement that is also a DatasetCollection\n *      (a nested collection). Currently only list:paired.\n */\nvar NestedDCDCE = DatasetCollection.extend(\n    BASE_MVC.mixin(\n        DatasetCollectionElementMixin,\n        /** @lends NestedDCDCE.prototype */ {\n            // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n            //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n            //  - re-apply manually it now\n            /** call the mixin constructor */\n            constructor: function(attributes, options) {\n                this.debug(\"\\t NestedDCDCE.constructor:\", attributes, options);\n                DatasetCollectionElementMixin.constructor.call(\n                    this,\n                    attributes,\n                    options\n                );\n            },\n\n            /** String representation. */\n            toString: function() {\n                var objStr = this.object\n                    ? \"\" + this.object\n                    : this.get(\"element_identifier\");\n                return [\"NestedDCDCE(\", objStr, \")\"].join(\"\");\n            }\n        }\n    )\n);\n\n//==============================================================================\n/** @class Backbone collection containing Generic NestedDCDCE's (nested dataset collections).\n */\nvar NestedDCDCECollection = DCECollection.extend(\n    /** @lends NestedDCDCECollection.prototype */ {\n        /** This is a collection of nested collections */\n        model: NestedDCDCE,\n\n        /** String representation. */\n        toString: function() {\n            return [\"NestedDCDCECollection(\", this.length, \")\"].join(\"\");\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone model for a paired dataset collection within a list:paired dataset collection.\n */\nvar NestedPairDCDCE = PairDatasetCollection.extend(\n    BASE_MVC.mixin(\n        DatasetCollectionElementMixin,\n        /** @lends NestedPairDCDCE.prototype */ {\n            //TODO:?? possibly rename to NestedDatasetCollection?\n\n            // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n            //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n            //  - re-apply manually it now\n            /** This is both a collection and a collection element - call the constructor */\n            constructor: function(attributes, options) {\n                this.debug(\n                    \"\\t NestedPairDCDCE.constructor:\",\n                    attributes,\n                    options\n                );\n                //DatasetCollection.constructor.call( this, attributes, options );\n                DatasetCollectionElementMixin.constructor.call(\n                    this,\n                    attributes,\n                    options\n                );\n            },\n\n            /** String representation. */\n            toString: function() {\n                var objStr = this.object\n                    ? \"\" + this.object\n                    : this.get(\"element_identifier\");\n                return [\"NestedPairDCDCE(\", objStr, \")\"].join(\"\");\n            }\n        }\n    )\n);\n\n//==============================================================================\n/** @class Backbone collection for a backbone collection containing paired dataset collections.\n */\nvar NestedPairDCDCECollection = NestedDCDCECollection.extend(\n    /** @lends PairDCDCECollection.prototype */ {\n        /** We know this collection is composed of only nested pair collections */\n        model: NestedPairDCDCE,\n\n        /** String representation. */\n        toString: function() {\n            return [\"NestedPairDCDCECollection(\", this.length, \")\"].join(\"\");\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone Model for a DatasetCollection (list) that contains DatasetCollections (pairs).\n */\nvar ListPairedDatasetCollection = DatasetCollection.extend(\n    /** @lends ListPairedDatasetCollection.prototype */ {\n        /** list:paired is the only collection that itself contains collections */\n        collectionClass: NestedPairDCDCECollection,\n\n        /** String representation. */\n        toString: function() {\n            return [\"ListPairedDatasetCollection(\", this.get(\"name\"), \")\"].join(\n                \"\"\n            );\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone model for a list dataset collection within a list:list dataset collection. */\nvar NestedListDCDCE = ListDatasetCollection.extend(\n    BASE_MVC.mixin(\n        DatasetCollectionElementMixin,\n        /** @lends NestedListDCDCE.prototype */ {\n            /** This is both a collection and a collection element - call the constructor */\n            constructor: function(attributes, options) {\n                this.debug(\n                    \"\\t NestedListDCDCE.constructor:\",\n                    attributes,\n                    options\n                );\n                DatasetCollectionElementMixin.constructor.call(\n                    this,\n                    attributes,\n                    options\n                );\n            },\n\n            /** String representation. */\n            toString: function() {\n                var objStr = this.object\n                    ? \"\" + this.object\n                    : this.get(\"element_identifier\");\n                return [\"NestedListDCDCE(\", objStr, \")\"].join(\"\");\n            }\n        }\n    )\n);\n\n//==============================================================================\n/** @class Backbone collection containing list dataset collections. */\nvar NestedListDCDCECollection = NestedDCDCECollection.extend({\n    /** We know this collection is composed of only nested pair collections */\n    model: NestedListDCDCE,\n\n    /** String representation. */\n    toString: function() {\n        return [\"NestedListDCDCECollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone Model for a DatasetCollection (list) that contains other lists. */\nvar ListOfListsDatasetCollection = DatasetCollection.extend({\n    /** list:paired is the only collection that itself contains collections */\n    collectionClass: NestedListDCDCECollection,\n\n    /** String representation. */\n    toString: function() {\n        return [\"ListOfListsDatasetCollection(\", this.get(\"name\"), \")\"].join(\n            \"\"\n        );\n    }\n});\n\n//==============================================================================\nexport default {\n    ListDatasetCollection: ListDatasetCollection,\n    PairDatasetCollection: PairDatasetCollection,\n    ListPairedDatasetCollection: ListPairedDatasetCollection,\n    ListOfListsDatasetCollection: ListOfListsDatasetCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/collection-model.js","import HISTORY_CONTENTS from \"mvc/history/history-contents\";\nimport HISTORY_PREFS from \"mvc/history/history-preferences\";\nimport CONTROLLED_FETCH_COLLECTION from \"mvc/base/controlled-fetch-collection\";\nimport UTILS from \"utils/utils\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/** @class Model for a Galaxy history resource - both a record of user\n *      tool use and a collection of the datasets those tools produced.\n *  @name History\n *  @augments Backbone.Model\n */\nvar History = Backbone.Model.extend(BASE_MVC.LoggableMixin).extend(\n    BASE_MVC.mixin(\n        BASE_MVC.SearchableModelMixin,\n        /** @lends History.prototype */ {\n            _logNamespace: \"history\",\n\n            /** ms between fetches when checking running jobs/datasets for updates */\n            UPDATE_DELAY: 4000,\n\n            // values from api (may need more)\n            defaults: {\n                model_class: \"History\",\n                id: null,\n                name: \"Unnamed History\",\n                state: \"new\",\n\n                deleted: false,\n                contents_active: {},\n                contents_states: {}\n            },\n\n            urlRoot: Galaxy.root + \"api/histories\",\n\n            contentsClass: HISTORY_CONTENTS.HistoryContents,\n\n            /** What model fields to search with */\n            searchAttributes: [\"name\", \"annotation\", \"tags\"],\n\n            /** Adding title and singular tag */\n            searchAliases: {\n                title: \"name\",\n                tag: \"tags\"\n            },\n\n            // ........................................................................ set up/tear down\n            /** Set up the model\n     *  @param {Object} historyJSON model data for this History\n     *  @param {Object} options     any extra settings including logger\n     */\n            initialize: function(historyJSON, options) {\n                options = options || {};\n                this.logger = options.logger || null;\n                this.log(this + \".initialize:\", historyJSON, options);\n\n                /** HistoryContents collection of the HDAs contained in this history. */\n                this.contents = new this.contentsClass([], {\n                    history: this,\n                    historyId: this.get(\"id\"),\n                    order: options.order\n                });\n\n                this._setUpListeners();\n                this._setUpCollectionListeners();\n\n                /** cached timeout id for the dataset updater */\n                this.updateTimeoutId = null;\n            },\n\n            /** set up any event listeners for this history including those to the contained HDAs\n     *  events: error:contents  if an error occurred with the contents collection\n     */\n            _setUpListeners: function() {\n                // if the model's id changes ('current' or null -> an actual id), update the contents history_id\n                return this.on({\n                    error: function(model, xhr, options, msg, details) {\n                        this.clearUpdateTimeout();\n                    },\n                    \"change:id\": function(model, newId) {\n                        if (this.contents) {\n                            this.contents.historyId = newId;\n                        }\n                    }\n                });\n            },\n\n            /** event handlers for the contents submodels */\n            _setUpCollectionListeners: function() {\n                if (!this.contents) {\n                    return this;\n                }\n                // bubble up errors\n                return this.listenTo(this.contents, {\n                    error: function() {\n                        this.trigger.apply(this, jQuery.makeArray(arguments));\n                    }\n                });\n            },\n\n            // ........................................................................ derived attributes\n            /**  */\n            contentsShown: function() {\n                var contentsActive = this.get(\"contents_active\");\n                var shown = contentsActive.active || 0;\n                shown += this.contents.includeDeleted\n                    ? contentsActive.deleted\n                    : 0;\n                shown += this.contents.includeHidden\n                    ? contentsActive.hidden\n                    : 0;\n                return shown;\n            },\n\n            /** convert size in bytes to a more human readable version */\n            nice_size: function() {\n                var size = this.get(\"size\");\n                return size\n                    ? UTILS.bytesToString(size, true, 2)\n                    : _l(\"(empty)\");\n            },\n\n            /** override to add nice_size */\n            toJSON: function() {\n                return _.extend(Backbone.Model.prototype.toJSON.call(this), {\n                    nice_size: this.nice_size()\n                });\n            },\n\n            /** override to allow getting nice_size */\n            get: function(key) {\n                if (key === \"nice_size\") {\n                    return this.nice_size();\n                }\n                return Backbone.Model.prototype.get.apply(this, arguments);\n            },\n\n            // ........................................................................ common queries\n            /** T/F is this history owned by the current user (Galaxy.user)\n     *      Note: that this will return false for an anon user even if the history is theirs.\n     */\n            ownedByCurrUser: function() {\n                // no currUser\n                if (!Galaxy || !Galaxy.user) {\n                    return false;\n                }\n                // user is anon or history isn't owned\n                if (\n                    Galaxy.user.isAnonymous() ||\n                    Galaxy.user.id !== this.get(\"user_id\")\n                ) {\n                    return false;\n                }\n                return true;\n            },\n\n            /** Return the number of running jobs assoc with this history (note: unknown === 0) */\n            numOfUnfinishedJobs: function() {\n                var unfinishedJobIds = this.get(\"non_ready_jobs\");\n                return unfinishedJobIds ? unfinishedJobIds.length : 0;\n            },\n\n            /** Return the number of running hda/hdcas in this history (note: unknown === 0) */\n            numOfUnfinishedShownContents: function() {\n                return this.contents.runningAndActive().length || 0;\n            },\n\n            // ........................................................................ updates\n            _fetchContentRelatedAttributes: function() {\n                var contentRelatedAttrs = [\n                    \"size\",\n                    \"non_ready_jobs\",\n                    \"contents_active\",\n                    \"hid_counter\"\n                ];\n                return this.fetch({\n                    data: $.param({\n                        keys: contentRelatedAttrs.join(\",\")\n                    })\n                });\n            },\n\n            /** check for any changes since the last time we updated (or fetch all if ) */\n            refresh: function(options) {\n                // console.log( this + '.refresh' );\n                options = options || {};\n                var self = this;\n\n                // note if there was no previous update time, all summary contents will be fetched\n                var lastUpdateTime = self.lastUpdateTime;\n                // if we don't flip this, then a fully-fetched list will not be re-checked via fetch\n                this.contents.allFetched = false;\n                var fetchFn =\n                    self.contents.currentPage !== 0\n                        ? function() {\n                              return self.contents.fetchPage(\n                                  self.contents.currentPage\n                              );\n                          }\n                        : function() {\n                              return self.contents.fetchUpdated(lastUpdateTime);\n                          };\n                // note: if there was no previous update time, all summary contents will be fetched\n                return fetchFn().done(function(response, status, xhr) {\n                    var serverResponseDatetime;\n                    try {\n                        serverResponseDatetime = new Date(\n                            xhr.getResponseHeader(\"Date\")\n                        );\n                    } catch (err) {}\n                    self.lastUpdateTime = serverResponseDatetime || new Date();\n                    self.checkForUpdates(options);\n                });\n            },\n\n            /** continuously fetch updated contents every UPDATE_DELAY ms if this history's datasets or jobs are unfinished */\n            checkForUpdates: function(options) {\n                // console.log( this + '.checkForUpdates' );\n                options = options || {};\n                var delay = this.UPDATE_DELAY;\n                var self = this;\n                if (!self.id) {\n                    return;\n                }\n\n                function _delayThenUpdate() {\n                    // prevent buildup of updater timeouts by clearing previous if any, then set new and cache id\n                    self.clearUpdateTimeout();\n                    self.updateTimeoutId = setTimeout(function() {\n                        self.refresh(options);\n                    }, delay);\n                }\n\n                // if there are still datasets in the non-ready state, recurse into this function with the new time\n                var nonReadyContentCount = this.numOfUnfinishedShownContents();\n                // console.log( 'nonReadyContentCount:', nonReadyContentCount );\n                if (nonReadyContentCount > 0) {\n                    _delayThenUpdate();\n                } else {\n                    // no datasets are running, but currently runnning jobs may still produce new datasets\n                    // see if the history has any running jobs and continue to update if so\n                    // (also update the size for the user in either case)\n                    self\n                        ._fetchContentRelatedAttributes()\n                        .done(function(historyData) {\n                            // console.log( 'non_ready_jobs:', historyData.non_ready_jobs );\n                            if (self.numOfUnfinishedJobs() > 0) {\n                                _delayThenUpdate();\n                            } else {\n                                // otherwise, let listeners know that all updates have stopped\n                                self.trigger(\"ready\");\n                            }\n                        });\n                }\n            },\n\n            /** clear the timeout and the cached timeout id */\n            clearUpdateTimeout: function() {\n                if (this.updateTimeoutId) {\n                    clearTimeout(this.updateTimeoutId);\n                    this.updateTimeoutId = null;\n                }\n            },\n\n            // ........................................................................ ajax\n            /** override to use actual Dates objects for create/update times */\n            parse: function(response, options) {\n                var parsed = Backbone.Model.prototype.parse.call(\n                    this,\n                    response,\n                    options\n                );\n                if (parsed.create_time) {\n                    parsed.create_time = new Date(parsed.create_time);\n                }\n                if (parsed.update_time) {\n                    parsed.update_time = new Date(parsed.update_time);\n                }\n                return parsed;\n            },\n\n            /** fetch this histories data (using options) then it's contents (using contentsOptions) */\n            fetchWithContents: function(options, contentsOptions) {\n                options = options || {};\n                var self = this;\n\n                // console.log( this + '.fetchWithContents' );\n                // TODO: push down to a base class\n                options.view = \"dev-detailed\";\n\n                // fetch history then use history data to fetch (paginated) contents\n                return this.fetch(options).then(function getContents(history) {\n                    self.contents.history = self;\n                    self.contents.setHistoryId(history.id);\n                    return self.fetchContents(contentsOptions);\n                });\n            },\n\n            /** fetch this histories contents, adjusting options based on the stored history preferences */\n            fetchContents: function(options) {\n                options = options || {};\n                var self = this;\n\n                // we're updating, reset the update time\n                self.lastUpdateTime = new Date();\n                return self.contents.fetchCurrentPage(options);\n            },\n\n            /** save this history, _Mark_ing it as deleted (just a flag) */\n            _delete: function(options) {\n                if (this.get(\"deleted\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: true }, options);\n            },\n            /** purge this history, _Mark_ing it as purged and removing all dataset data from the server */\n            purge: function(options) {\n                if (this.get(\"purged\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: true, purged: true }, options);\n            },\n            /** save this history, _Mark_ing it as undeleted */\n            undelete: function(options) {\n                if (!this.get(\"deleted\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: false }, options);\n            },\n\n            /** Make a copy of this history on the server\n     *  @param {Boolean} current    if true, set the copy as the new current history (default: true)\n     *  @param {String} name        name of new history (default: none - server sets to: Copy of <current name>)\n     *  @fires copied               passed this history and the response JSON from the copy\n     *  @returns {xhr}\n     */\n            copy: function(current, name, allDatasets) {\n                current = current !== undefined ? current : true;\n                if (!this.id) {\n                    throw new Error(\n                        \"You must set the history ID before copying it.\"\n                    );\n                }\n\n                var postData = { history_id: this.id };\n                if (current) {\n                    postData.current = true;\n                }\n                if (name) {\n                    postData.name = name;\n                }\n                if (!allDatasets) {\n                    postData.all_datasets = false;\n                }\n                postData.view = \"dev-detailed\";\n\n                var history = this;\n                var copy = jQuery.post(this.urlRoot, postData);\n                // if current - queue to setAsCurrent before firing 'copied'\n                if (current) {\n                    return copy.then(function(response) {\n                        var newHistory = new History(response);\n                        return newHistory.setAsCurrent().done(function() {\n                            history.trigger(\"copied\", history, response);\n                        });\n                    });\n                }\n                return copy.done(function(response) {\n                    history.trigger(\"copied\", history, response);\n                });\n            },\n\n            setAsCurrent: function() {\n                var history = this,\n                    xhr = jQuery.getJSON(\n                        Galaxy.root + \"history/set_as_current?id=\" + this.id\n                    );\n\n                xhr.done(function() {\n                    history.trigger(\"set-as-current\", history);\n                });\n                return xhr;\n            },\n\n            // ........................................................................ misc\n            toString: function() {\n                return (\n                    \"History(\" + this.get(\"id\") + \",\" + this.get(\"name\") + \")\"\n                );\n            }\n        }\n    )\n);\n\n//==============================================================================\nvar _collectionSuper =\n    CONTROLLED_FETCH_COLLECTION.InfinitelyScrollingCollection;\n/** @class A collection of histories (per user)\n *      that maintains the current history as the first in the collection.\n *  New or copied histories become the current history.\n */\nvar HistoryCollection = _collectionSuper.extend(BASE_MVC.LoggableMixin).extend({\n    _logNamespace: \"history\",\n\n    model: History,\n    /** @type {String} initial order used by collection */\n    order: \"update_time\",\n    /** @type {Number} limit used for the first fetch (or a reset) */\n    limitOnFirstFetch: 10,\n    /** @type {Number} limit used for each subsequent fetch */\n    limitPerFetch: 10,\n\n    initialize: function(models, options) {\n        options = options || {};\n        this.log(\"HistoryCollection.initialize\", models, options);\n        _collectionSuper.prototype.initialize.call(this, models, options);\n\n        /** @type {boolean} should deleted histories be included */\n        this.includeDeleted = options.includeDeleted || false;\n\n        /** @type {String} encoded id of the history that's current */\n        this.currentHistoryId = options.currentHistoryId;\n\n        this.setUpListeners();\n        // note: models are sent to reset *after* this fn ends; up to this point\n        // the collection *is empty*\n    },\n\n    urlRoot: Galaxy.root + \"api/histories\",\n    url: function() {\n        return this.urlRoot;\n    },\n\n    /** set up reflexive event handlers */\n    setUpListeners: function setUpListeners() {\n        return this.on({\n            // when a history is deleted, remove it from the collection (if optionally set to do so)\n            \"change:deleted\": function(history) {\n                // TODO: this becomes complicated when more filters are used\n                this.debug(\n                    \"change:deleted\",\n                    this.includeDeleted,\n                    history.get(\"deleted\")\n                );\n                if (!this.includeDeleted && history.get(\"deleted\")) {\n                    this.remove(history);\n                }\n            },\n            // listen for a history copy, setting it to current\n            copied: function(original, newData) {\n                this.setCurrent(new History(newData, []));\n            },\n            // when a history is made current, track the id in the collection\n            \"set-as-current\": function(history) {\n                var oldCurrentId = this.currentHistoryId;\n                this.trigger(\"no-longer-current\", oldCurrentId);\n                this.currentHistoryId = history.id;\n            }\n        });\n    },\n\n    /** override to change view */\n    _buildFetchData: function(options) {\n        return _.extend(\n            _collectionSuper.prototype._buildFetchData.call(this, options),\n            {\n                view: \"dev-detailed\"\n            }\n        );\n    },\n\n    /** override to filter out deleted and purged */\n    _buildFetchFilters: function(options) {\n        var superFilters =\n            _collectionSuper.prototype._buildFetchFilters.call(this, options) ||\n            {};\n        var filters = {};\n        if (!this.includeDeleted) {\n            filters.deleted = false;\n            filters.purged = false;\n        } else {\n            // force API to return both deleted and non\n            //TODO: when the API is updated, remove this\n            filters.deleted = null;\n        }\n        return _.defaults(superFilters, filters);\n    },\n\n    /** override to fetch current as well (as it may be outside the first 10, etc.) */\n    fetchFirst: function(options) {\n        var self = this;\n        // TODO: batch?\n        var xhr = $.when();\n        if (this.currentHistoryId) {\n            xhr = _collectionSuper.prototype.fetchFirst.call(self, {\n                silent: true,\n                limit: 1,\n                filters: {\n                    // without these a deleted current history will return [] here and block the other xhr\n                    purged: \"\",\n                    deleted: \"\",\n                    \"encoded_id-in\": this.currentHistoryId\n                }\n            });\n        }\n        return xhr.then(function() {\n            options = options || {};\n            options.offset = 0;\n            return self.fetchMore(options);\n        });\n    },\n\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: _.extend(_.clone(_collectionSuper.prototype.comparators), {\n        name: BASE_MVC.buildComparator(\"name\", {\n            ascending: true\n        }),\n        \"name-dsc\": BASE_MVC.buildComparator(\"name\", {\n            ascending: false\n        }),\n        size: BASE_MVC.buildComparator(\"size\", {\n            ascending: false\n        }),\n        \"size-asc\": BASE_MVC.buildComparator(\"size\", {\n            ascending: true\n        })\n    }),\n\n    /** override to always have the current history first */\n    sort: function(options) {\n        options = options || {};\n        var silent = options.silent;\n        var currentHistory = this.remove(this.get(this.currentHistoryId));\n        _collectionSuper.prototype.sort.call(\n            this,\n            _.defaults({ silent: true }, options)\n        );\n        this.unshift(currentHistory, { silent: true });\n        if (!silent) {\n            this.trigger(\"sort\", this, options);\n        }\n        return this;\n    },\n\n    /** create a new history and by default set it to be the current history */\n    create: function create(data, hdas, historyOptions, xhrOptions) {\n        //TODO: .create is actually a collection function that's overridden here\n        var collection = this,\n            xhr = jQuery.getJSON(Galaxy.root + \"history/create_new_current\");\n        return xhr.done(function(newData) {\n            collection.setCurrent(\n                new History(newData, [], historyOptions || {})\n            );\n        });\n    },\n\n    /** set the current history to the given history, placing it first in the collection.\n     *  Pass standard bbone options for use in unshift.\n     *  @triggers new-current passed history and this collection\n     */\n    setCurrent: function(history, options) {\n        options = options || {};\n        // new histories go in the front\n        this.unshift(history, options);\n        this.currentHistoryId = history.get(\"id\");\n        if (!options.silent) {\n            this.trigger(\"new-current\", history, this);\n        }\n        return this;\n    },\n\n    toString: function toString() {\n        return (\n            \"HistoryCollection(\" +\n            this.length +\n            \",current:\" +\n            this.currentHistoryId +\n            \")\"\n        );\n    }\n});\n\n//==============================================================================\nexport default {\n    History: History,\n    HistoryCollection: HistoryCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-model.js","import CONTROLLED_FETCH_COLLECTION from \"mvc/base/controlled-fetch-collection\";\nimport HDA_MODEL from \"mvc/history/hda-model\";\nimport HDCA_MODEL from \"mvc/history/hdca-model\";\nimport HISTORY_PREFS from \"mvc/history/history-preferences\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport AJAX_QUEUE from \"utils/ajax-queue\";\n\n//==============================================================================\nvar _super = CONTROLLED_FETCH_COLLECTION.PaginatedCollection;\n/** @class Backbone collection for history content.\n *      NOTE: history content seems like a dataset collection, but differs in that it is mixed:\n *          each element can be either an HDA (dataset) or a DatasetCollection and co-exist on\n *          the same level.\n *      Dataset collections on the other hand are not mixed and (so far) can only contain either\n *          HDAs or child dataset collections on one level.\n *      This is why this does not inherit from any of the DatasetCollections (currently).\n */\nvar HistoryContents = _super.extend(BASE_MVC.LoggableMixin).extend({\n    _logNamespace: \"history\",\n\n    // ........................................................................ composite collection\n    /** since history content is a mix, override model fn into a factory, creating based on history_content_type */\n    model: function(attrs, options) {\n        if (attrs.history_content_type === \"dataset\") {\n            return new HDA_MODEL.HistoryDatasetAssociation(attrs, options);\n        } else if (attrs.history_content_type === \"dataset_collection\") {\n            switch (attrs.collection_type) {\n                case \"list\":\n                    return new HDCA_MODEL.HistoryListDatasetCollection(\n                        attrs,\n                        options\n                    );\n                case \"paired\":\n                    return new HDCA_MODEL.HistoryPairDatasetCollection(\n                        attrs,\n                        options\n                    );\n                case \"list:paired\":\n                    return new HDCA_MODEL.HistoryListPairedDatasetCollection(\n                        attrs,\n                        options\n                    );\n                case \"list:list\":\n                    return new HDCA_MODEL.HistoryListOfListsDatasetCollection(\n                        attrs,\n                        options\n                    );\n            }\n            // This is a hack inside a hack:\n            // Raise a plain object with validationError to fake a model.validationError\n            // (since we don't have a model to use validate with)\n            // (the outer hack being the mixed content/model function in this collection)\n            var msg = \"Unknown collection_type: \" + attrs.collection_type;\n            console.warn(msg, attrs);\n            return { validationError: msg };\n        }\n        return {\n            validationError:\n                \"Unknown history_content_type: \" + attrs.history_content_type\n        };\n    },\n\n    // ........................................................................ set up\n    limitPerPage: 500,\n\n    /** @type {Integer} how many contents per call to fetch when using progressivelyFetchDetails */\n    limitPerProgressiveFetch: 500,\n\n    /** @type {String} order used here and when fetching from server */\n    order: \"hid\",\n\n    /** root api url */\n    urlRoot: Galaxy.root + \"api/histories\",\n\n    /** complete api url */\n    url: function() {\n        return this.urlRoot + \"/\" + this.historyId + \"/contents\";\n    },\n\n    /** Set up */\n    initialize: function(models, options) {\n        options = options || {};\n        _super.prototype.initialize.call(this, models, options);\n\n        this.history = options.history || null;\n        this.setHistoryId(options.historyId || null);\n        /** @type {Boolean} does this collection contain and fetch deleted elements */\n        this.includeDeleted = options.includeDeleted || this.includeDeleted;\n        /** @type {Boolean} does this collection contain and fetch non-visible elements */\n        this.includeHidden = options.includeHidden || this.includeHidden;\n\n        // backbonejs uses collection.model.prototype.idAttribute to determine if a model is *already* in a collection\n        //  and either merged or replaced. In this case, our 'model' is a function so we need to add idAttribute\n        //  manually here - if we don't, contents will not merge but be replaced/swapped.\n        this.model.prototype.idAttribute = \"type_id\";\n    },\n\n    setHistoryId: function(newId) {\n        this.historyId = newId;\n        this._setUpWebStorage();\n    },\n\n    /** Set up client side storage. Currently PersistanStorage keyed under 'history:<id>' */\n    _setUpWebStorage: function(initialSettings) {\n        // TODO: use initialSettings\n        if (!this.historyId) {\n            return;\n        }\n        this.storage = new HISTORY_PREFS.HistoryPrefs({\n            id: HISTORY_PREFS.HistoryPrefs.historyStorageKey(this.historyId)\n        });\n        this.trigger(\"new-storage\", this.storage, this);\n\n        this.on({\n            \"include-deleted\": function(newVal) {\n                this.storage.includeDeleted(newVal);\n            },\n            \"include-hidden\": function(newVal) {\n                this.storage.includeHidden(newVal);\n            }\n        });\n\n        this.includeDeleted = this.storage.includeDeleted() || false;\n        this.includeHidden = this.storage.includeHidden() || false;\n        return this;\n    },\n\n    // ........................................................................ common queries\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: _.extend(_.clone(_super.prototype.comparators), {\n        name: BASE_MVC.buildComparator(\"name\", { ascending: true }),\n        \"name-dsc\": BASE_MVC.buildComparator(\"name\", {\n            ascending: false\n        }),\n        hid: BASE_MVC.buildComparator(\"hid\", { ascending: false }),\n        \"hid-asc\": BASE_MVC.buildComparator(\"hid\", { ascending: true })\n    }),\n\n    /** Get every model in this collection not in a 'ready' state (running). */\n    running: function() {\n        return this.filter(function(c) {\n            return !c.inReadyState();\n        });\n    },\n\n    /** return contents that are not ready and not deleted/hidden */\n    runningAndActive: function() {\n        return this.filter(function(c) {\n            return (\n                !c.inReadyState() &&\n                c.get(\"visible\") &&\n                // TODO: deletedOrPurged?\n                !c.get(\"deleted\")\n            );\n        });\n    },\n\n    /** Get the model with the given hid\n     *  @param {Int} hid the hid to search for\n     *  @returns {HistoryDatasetAssociation} the model with the given hid or undefined if not found\n     */\n    getByHid: function(hid) {\n        // note: there *can* be more than one content with a given hid, this finds the first based on order\n        return this.findWhere({ hid: hid });\n    },\n\n    /** return true if all contents have details */\n    haveDetails: function() {\n        return this.all(function(c) {\n            return c.hasDetails();\n        });\n    },\n\n    // ........................................................................ hidden / deleted\n    /** return a new contents collection of only hidden items */\n    hidden: function() {\n        return this.filter(function(c) {\n            return c.hidden();\n        });\n    },\n\n    /** return a new contents collection of only hidden items */\n    deleted: function() {\n        return this.filter(function(c) {\n            return c.get(\"deleted\");\n        });\n    },\n\n    /** return a new contents collection of only hidden items */\n    visibleAndUndeleted: function() {\n        return this.filter(function(c) {\n            return (\n                c.get(\"visible\") &&\n                // TODO: deletedOrPurged?\n                !c.get(\"deleted\")\n            );\n        });\n    },\n\n    /** create a setter in order to publish the change */\n    setIncludeDeleted: function(setting, options) {\n        if (_.isBoolean(setting) && setting !== this.includeDeleted) {\n            this.includeDeleted = setting;\n            if (_.result(options, \"silent\")) {\n                return;\n            }\n            this.trigger(\"include-deleted\", setting, this);\n        }\n    },\n\n    /** create a setter in order to publish the change */\n    setIncludeHidden: function(setting, options) {\n        if (_.isBoolean(setting) && setting !== this.includeHidden) {\n            this.includeHidden = setting;\n            options = options || {};\n            if (_.result(options, \"silent\")) {\n                return;\n            }\n            this.trigger(\"include-hidden\", setting, this);\n        }\n    },\n\n    // ........................................................................ ajax\n    // ............ controlled fetch collection\n    /** override to get expanded ids from sessionStorage and pass to API as details */\n    fetch: function(options) {\n        options = options || {};\n        if (this.historyId && !options.details) {\n            var prefs = HISTORY_PREFS.HistoryPrefs.get(this.historyId).toJSON();\n            if (!_.isEmpty(prefs.expandedIds)) {\n                options.details = _.values(prefs.expandedIds).join(\",\");\n            }\n        }\n        return _super.prototype.fetch.call(this, options);\n    },\n\n    // ............. ControlledFetch stuff\n    /** override to include the API versioning flag */\n    _buildFetchData: function(options) {\n        return _.extend(_super.prototype._buildFetchData.call(this, options), {\n            v: \"dev\"\n        });\n    },\n\n    /** Extend to include details and version */\n    _fetchParams: _super.prototype._fetchParams.concat([\n        // TODO: remove (the need for) both\n        /** version */\n        \"v\",\n        /** dataset ids to get full details of */\n        \"details\"\n    ]),\n\n    /** override to add deleted/hidden filters */\n    _buildFetchFilters: function(options) {\n        var superFilters =\n            _super.prototype._buildFetchFilters.call(this, options) || {};\n        var filters = {};\n        if (!this.includeDeleted) {\n            filters.deleted = false;\n            filters.purged = false;\n        }\n        if (!this.includeHidden) {\n            filters.visible = true;\n        }\n        return _.defaults(superFilters, filters);\n    },\n\n    // ............ paginated collection\n    getTotalItemCount: function() {\n        return this.history.contentsShown();\n    },\n\n    // ............ history contents specific ajax\n    /** override to filter requested contents to those updated after the Date 'since' */\n    fetchUpdated: function(since, options) {\n        if (since) {\n            options = options || { filters: {} };\n            options.remove = false;\n            options.filters = {\n                \"update_time-ge\": since.toISOString(),\n                // workflows will produce hidden datasets (non-output datasets) that still\n                // need to be updated in the collection or they'll update forever\n                // we can remove the default visible filter by using an 'empty' value\n                visible: \"\"\n            };\n        }\n        return this.fetch(options);\n    },\n\n    /** fetch all the deleted==true contents of this collection */\n    fetchDeleted: function(options) {\n        options = options || {};\n        var self = this;\n        options.filters = _.extend(options.filters, {\n            // all deleted, purged or not\n            deleted: true,\n            purged: undefined\n        });\n        options.remove = false;\n\n        self.trigger(\"fetching-deleted\", self);\n        return self.fetch(options).always(function() {\n            self.trigger(\"fetching-deleted-done\", self);\n        });\n    },\n\n    /** fetch all the visible==false contents of this collection */\n    fetchHidden: function(options) {\n        options = options || {};\n        var self = this;\n        options.filters = _.extend(options.filters, {\n            visible: false\n        });\n        options.remove = false;\n\n        self.trigger(\"fetching-hidden\", self);\n        return self.fetch(options).always(function() {\n            self.trigger(\"fetching-hidden-done\", self);\n        });\n    },\n\n    /** fetch detailed model data for all contents in this collection */\n    fetchAllDetails: function(options) {\n        options = options || {};\n        var detailsFlag = { details: \"all\" };\n        options.data = _.extend(options.data || {}, detailsFlag);\n        return this.fetch(options);\n    },\n\n    /** specialty fetch method for retrieving the element_counts of all hdcas in the history */\n    fetchCollectionCounts: function(options) {\n        options = options || {};\n        options.keys = [\"type_id\", \"element_count\"].join(\",\");\n        options.filters = _.extend(options.filters || {}, {\n            history_content_type: \"dataset_collection\"\n        });\n        options.remove = false;\n        return this.fetch(options);\n    },\n\n    // ............. quasi-batch ops\n    // TODO: to batch\n    /** helper that fetches using filterParams then calls save on each fetched using updateWhat as the save params */\n    _filterAndUpdate: function(filterParams, updateWhat) {\n        var self = this;\n        var idAttribute = self.model.prototype.idAttribute;\n        var updateArgs = [updateWhat];\n\n        return self\n            .fetch({ filters: filterParams, remove: false })\n            .then(function(fetched) {\n                // convert filtered json array to model array\n                fetched = fetched.reduce(function(modelArray, currJson, i) {\n                    var model = self.get(currJson[idAttribute]);\n                    return model ? modelArray.concat(model) : modelArray;\n                }, []);\n                return self.ajaxQueue(\"save\", updateArgs, fetched);\n            });\n    },\n\n    /** using a queue, perform ajaxFn on each of the models in this collection */\n    ajaxQueue: function(ajaxFn, args, collection) {\n        collection = collection || this.models;\n        return new AJAX_QUEUE.AjaxQueue(\n            collection\n                .slice()\n                .reverse()\n                .map(function(content, i) {\n                    var fn = _.isString(ajaxFn) ? content[ajaxFn] : ajaxFn;\n                    return function() {\n                        return fn.apply(content, args);\n                    };\n                })\n        ).deferred;\n    },\n\n    /** fetch contents' details in batches of limitPerCall - note: only get searchable details here */\n    progressivelyFetchDetails: function(options) {\n        options = options || {};\n        var deferred = jQuery.Deferred();\n        var self = this;\n        var limit = options.limitPerCall || self.limitPerProgressiveFetch;\n        // TODO: only fetch tags and annotations if specifically requested\n        var searchAttributes =\n            HDA_MODEL.HistoryDatasetAssociation.prototype.searchAttributes;\n        var detailKeys = searchAttributes.join(\",\");\n\n        function _recursivelyFetch(offset) {\n            offset = offset || 0;\n            var _options = _.extend(_.clone(options), {\n                view: \"summary\",\n                keys: detailKeys,\n                limit: limit,\n                offset: offset,\n                reset: offset === 0,\n                remove: false\n            });\n\n            _.defer(function() {\n                self.fetch\n                    .call(self, _options)\n                    .fail(deferred.reject)\n                    .done(function(response) {\n                        deferred.notify(response, limit, offset);\n                        if (response.length !== limit) {\n                            self.allFetched = true;\n                            deferred.resolve(response, limit, offset);\n                        } else {\n                            _recursivelyFetch(offset + limit);\n                        }\n                    });\n            });\n        }\n        _recursivelyFetch();\n        return deferred;\n    },\n\n    /** does some bit of JSON represent something that can be copied into this contents collection */\n    isCopyable: function(contentsJSON) {\n        var copyableModelClasses = [\n            \"HistoryDatasetAssociation\",\n            \"HistoryDatasetCollectionAssociation\"\n        ];\n        return (\n            _.isObject(contentsJSON) &&\n            contentsJSON.id &&\n            _.contains(copyableModelClasses, contentsJSON.model_class)\n        );\n    },\n\n    /** copy an existing, accessible hda into this collection */\n    copy: function(json) {\n        // TODO: somehow showhorn all this into 'save'\n        var id, type, contentType;\n        if (_.isString(json)) {\n            id = json;\n            contentType = \"hda\";\n            type = \"dataset\";\n        } else {\n            id = json.id;\n            contentType =\n                {\n                    HistoryDatasetAssociation: \"hda\",\n                    LibraryDatasetDatasetAssociation: \"ldda\",\n                    HistoryDatasetCollectionAssociation: \"hdca\"\n                }[json.model_class] || \"hda\";\n            type = contentType === \"hdca\" ? \"dataset_collection\" : \"dataset\";\n        }\n        var collection = this,\n            xhr = jQuery\n                .ajax(this.url(), {\n                    method: \"POST\",\n                    contentType: \"application/json\",\n                    data: JSON.stringify({\n                        content: id,\n                        source: contentType,\n                        type: type\n                    })\n                })\n                .done(function(response) {\n                    collection.add([response], { parse: true });\n                })\n                .fail(function(error, status, message) {\n                    collection.trigger(\n                        \"error\",\n                        collection,\n                        xhr,\n                        {},\n                        \"Error copying contents\",\n                        { type: type, id: id, source: contentType }\n                    );\n                });\n        return xhr;\n    },\n\n    /** create a new HDCA in this collection */\n    createHDCA: function(\n        elementIdentifiers,\n        collectionType,\n        name,\n        hideSourceItems,\n        options\n    ) {\n        // normally collection.create returns the new model, but we need the promise from the ajax, so we fake create\n        //precondition: elementIdentifiers is an array of plain js objects\n        //  in the proper form to create the collectionType\n        var hdca = this.model({\n            history_content_type: \"dataset_collection\",\n            collection_type: collectionType,\n            history_id: this.historyId,\n            name: name,\n            hide_source_items: hideSourceItems || false,\n            // should probably be able to just send in a bunch of json here and restruct per class\n            // note: element_identifiers is now (incorrectly) an attribute\n            element_identifiers: elementIdentifiers\n            // do not create the model on the client until the ajax returns\n        });\n        return hdca.save(options);\n    },\n\n    // ........................................................................ searching\n    /** return true if all contents have the searchable attributes */\n    haveSearchDetails: function() {\n        return (\n            this.allFetched &&\n            this.all(function(content) {\n                // null (which is a valid returned annotation value)\n                // will return false when using content.has( 'annotation' )\n                //TODO: a bit hacky - formalize\n                return _.has(content.attributes, \"annotation\");\n            })\n        );\n    },\n\n    /** return a new collection of contents whose attributes contain the substring matchesWhat */\n    matches: function(matchesWhat) {\n        return this.filter(function(content) {\n            return content.matches(matchesWhat);\n        });\n    },\n\n    // ........................................................................ misc\n    /** In this override, copy the historyId to the clone */\n    clone: function() {\n        var clone = Backbone.Collection.prototype.clone.call(this);\n        clone.historyId = this.historyId;\n        return clone;\n    },\n\n    /** String representation. */\n    toString: function() {\n        return [\n            \"HistoryContents(\",\n            [this.historyId, this.length].join(),\n            \")\"\n        ].join(\"\");\n    }\n});\n\n//==============================================================================\nexport default {\n    HistoryContents: HistoryContents\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-contents.js","import BASE_MVC from \"mvc/base-mvc\";\n\nvar logNamespace = \"history\";\n\n// ============================================================================\n/** session storage for individual history preferences */\nvar HistoryPrefs = BASE_MVC.SessionStorageModel.extend(\n    /** @lends HistoryPrefs.prototype */ {\n        //TODO:?? move to user prefs?\n        defaults: {\n            //TODO:?? expandedIds to array?\n            expandedIds: {},\n            show_deleted: false,\n            show_hidden: false\n        },\n\n        /** add an hda id to the hash of expanded hdas */\n        addExpanded: function(model) {\n            //TODO: use type_id and not model\n            var current = this.get(\"expandedIds\");\n            current[model.id] = model.get(\"id\");\n            this.save(\"expandedIds\", current);\n        },\n\n        /** remove an hda id from the hash of expanded hdas */\n        removeExpanded: function(model) {\n            var current = this.get(\"expandedIds\");\n            delete current[model.id];\n            this.save(\"expandedIds\", current);\n        },\n\n        isExpanded: function(contentId) {\n            return _.result(this.get(\"expandedIds\"), contentId, false);\n        },\n\n        allExpanded: function() {\n            return _.values(this.get(\"expandedIds\"));\n        },\n\n        clearExpanded: function() {\n            this.set(\"expandedIds\", {});\n        },\n\n        includeDeleted: function(val) {\n            // moving the invocation here so other components don't need to know the key\n            // TODO: change this key later\n            if (!_.isUndefined(val)) {\n                this.set(\"show_deleted\", val);\n            }\n            return this.get(\"show_deleted\");\n        },\n\n        includeHidden: function(val) {\n            // TODO: change this key later\n            if (!_.isUndefined(val)) {\n                this.set(\"show_hidden\", val);\n            }\n            return this.get(\"show_hidden\");\n        },\n\n        toString: function() {\n            return \"HistoryPrefs(\" + this.id + \")\";\n        }\n    },\n    {\n        // ........................................................................ class vars\n        // class lvl for access w/o instantiation\n        storageKeyPrefix: \"history:\",\n\n        /** key string to store each histories settings under */\n        historyStorageKey: function historyStorageKey(historyId) {\n            if (!historyId) {\n                throw new Error(\n                    \"HistoryPrefs.historyStorageKey needs valid id: \" +\n                        historyId\n                );\n            }\n            // single point of change\n            return HistoryPrefs.storageKeyPrefix + historyId;\n        },\n\n        /** return the existing storage for the history with the given id (or create one if it doesn't exist) */\n        get: function get(historyId) {\n            return new HistoryPrefs({\n                id: HistoryPrefs.historyStorageKey(historyId)\n            });\n        },\n\n        /** clear all history related items in sessionStorage */\n        clearAll: function clearAll(historyId) {\n            for (var key in sessionStorage) {\n                if (key.indexOf(HistoryPrefs.storageKeyPrefix) === 0) {\n                    sessionStorage.removeItem(key);\n                }\n            }\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    HistoryPrefs: HistoryPrefs\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-preferences.js","import BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"list\";\n//==============================================================================\n/** A view which, when first rendered, shows only summary data/attributes, but\n *      can be expanded to show further details (and optionally fetch those\n *      details from the server).\n */\nvar ExpandableView = Backbone.View.extend(BASE_MVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: Although the reasoning behind them is different, this shares a lot with HiddenUntilActivated above: combine them\n    //PRECONDITION: model must have method hasDetails\n    //PRECONDITION: subclasses must have templates.el and templates.details\n\n    initialize: function(attributes) {\n        /** are the details of this view expanded/shown or not? */\n        this.expanded = attributes.expanded || false;\n        this.log(\"\\t expanded:\", this.expanded);\n        this.fxSpeed =\n            attributes.fxSpeed !== undefined\n                ? attributes.fxSpeed\n                : this.fxSpeed;\n    },\n\n    // ........................................................................ render main\n    /** jq fx speed */\n    fxSpeed: \"fast\",\n\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render: function(speed) {\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors($newRender);\n        this._queueNewRender($newRender, speed);\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     *      If the view is already expanded, build the details as well.\n     */\n    _buildNewRender: function() {\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = $(this.templates.el(this.model.toJSON(), this));\n        if (this.expanded) {\n            this.$details($newRender).replaceWith(this._renderDetails().show());\n        }\n        return $newRender;\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender: function($newRender, speed) {\n        speed = speed === undefined ? this.fxSpeed : speed;\n        var view = this;\n\n        if (speed === 0) {\n            view._swapNewRender($newRender);\n            view.trigger(\"rendered\", view);\n        } else {\n            $(view).queue(\"fx\", [\n                function(next) {\n                    view.$el.fadeOut(speed, next);\n                },\n                function(next) {\n                    view._swapNewRender($newRender);\n                    next();\n                },\n                function(next) {\n                    view.$el.fadeIn(speed, next);\n                },\n                function(next) {\n                    view.trigger(\"rendered\", view);\n                    next();\n                }\n            ]);\n        }\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender: function($newRender) {\n        return this.$el\n            .empty()\n            .attr(\n                \"class\",\n                _.isFunction(this.className) ? this.className() : this.className\n            )\n            .append($newRender.children());\n    },\n\n    /** set up js behaviors, event handlers for elements within the given container\n     *  @param {jQuery} $container jq object that contains the elements to process (defaults to this.$el)\n     */\n    _setUpBehaviors: function($where) {\n        $where = $where || this.$el;\n        // set up canned behavior on children (bootstrap, popupmenus, editable_text, etc.)\n        //make_popup_menus( $where );\n        $where.find(\"[title]\").tooltip({ placement: \"bottom\" });\n    },\n\n    // ......................................................................... details\n    /** shortcut to details DOM (as jQ) */\n    $details: function($where) {\n        $where = $where || this.$el;\n        return $where.find(\"> .details\");\n    },\n\n    /** build the DOM for the details and set up behaviors on it */\n    _renderDetails: function() {\n        var $newDetails = $(this.templates.details(this.model.toJSON(), this));\n        this._setUpBehaviors($newDetails);\n        return $newDetails;\n    },\n\n    // ......................................................................... expansion/details\n    /** Show or hide the details\n     *  @param {Boolean} expand if true, expand; if false, collapse\n     */\n    toggleExpanded: function(expand) {\n        expand = expand === undefined ? !this.expanded : expand;\n        if (expand) {\n            this.expand();\n        } else {\n            this.collapse();\n        }\n        return this;\n    },\n\n    /** Render and show the full, detailed body of this view including extra data and controls.\n     *      note: if the model does not have detailed data, fetch that data before showing the body\n     *  @fires expanded when a body has been expanded\n     */\n    expand: function() {\n        var view = this;\n        return view._fetchModelDetails().always(function() {\n            view._expand();\n        });\n    },\n\n    /** Check for model details and, if none, fetch them.\n     *  @returns {jQuery.promise} the model.fetch.xhr if details are being fetched, an empty promise if not\n     */\n    _fetchModelDetails: function() {\n        if (!this.model.hasDetails()) {\n            return this.model.fetch();\n        }\n        return jQuery.when();\n    },\n\n    /** Inner fn called when expand (public) has fetched the details */\n    _expand: function() {\n        var view = this,\n            $newDetails = view._renderDetails();\n        view.$details().replaceWith($newDetails);\n        // needs to be set after the above or the slide will not show\n        view.expanded = true;\n        view.$details().slideDown(view.fxSpeed, function() {\n            view.trigger(\"expanded\", view);\n        });\n    },\n\n    /** Hide the body/details of an HDA.\n     *  @fires collapsed when a body has been collapsed\n     */\n    collapse: function() {\n        this.debug(this + \"(ExpandableView).collapse\");\n        var view = this;\n        view.expanded = false;\n        this.$details().slideUp(view.fxSpeed, function() {\n            view.trigger(\"collapsed\", view);\n        });\n    }\n});\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *      Inherits from Expandable, Selectable, Draggable.\n *  The DOM contains warnings, a title bar, and a series of primary action controls.\n *      Primary actions are meant to be easily accessible item functions (such as delete)\n *      that are rendered in the title bar.\n *\n *  Details are rendered when the user clicks the title bar or presses enter/space when\n *      the title bar is in focus.\n *\n *  Designed as a base class for history panel contents - but usable elsewhere (I hope).\n */\nvar ListItemView = ExpandableView.extend(\n    BASE_MVC.mixin(BASE_MVC.SelectableViewMixin, BASE_MVC.DraggableViewMixin, {\n        tagName: \"div\",\n        className: \"list-item\",\n\n        /** Set up the base class and all mixins */\n        initialize: function(attributes) {\n            ExpandableView.prototype.initialize.call(this, attributes);\n            BASE_MVC.SelectableViewMixin.initialize.call(this, attributes);\n            BASE_MVC.DraggableViewMixin.initialize.call(this, attributes);\n            this._setUpListeners();\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            // hide the primary actions in the title bar when selectable and narrow\n            this.on(\n                \"selectable\",\n                function(isSelectable) {\n                    if (isSelectable) {\n                        this.$(\".primary-actions\").hide();\n                    } else {\n                        this.$(\".primary-actions\").show();\n                    }\n                },\n                this\n            );\n            return this;\n        },\n\n        // ........................................................................ rendering\n        /** In this override, call methods to build warnings, titlebar and primary actions */\n        _buildNewRender: function() {\n            var $newRender = ExpandableView.prototype._buildNewRender.call(\n                this\n            );\n            $newRender\n                .children(\".warnings\")\n                .replaceWith(this._renderWarnings());\n            $newRender\n                .children(\".title-bar\")\n                .replaceWith(this._renderTitleBar());\n            $newRender\n                .children(\".primary-actions\")\n                .append(this._renderPrimaryActions());\n            $newRender\n                .find(\"> .title-bar .subtitle\")\n                .replaceWith(this._renderSubtitle());\n            return $newRender;\n        },\n\n        /** In this override, render the selector controls and set up dragging before the swap */\n        _swapNewRender: function($newRender) {\n            ExpandableView.prototype._swapNewRender.call(this, $newRender);\n            if (this.selectable) {\n                this.showSelector(0);\n            }\n            if (this.draggable) {\n                this.draggableOn();\n            }\n            return this.$el;\n        },\n\n        /** Render any warnings the item may need to show (e.g. \"I'm deleted\") */\n        _renderWarnings: function() {\n            var view = this,\n                $warnings = $('<div class=\"warnings\"></div>'),\n                json = view.model.toJSON();\n            //TODO:! unordered (map)\n            _.each(view.templates.warnings, function(templateFn) {\n                $warnings.append($(templateFn(json, view)));\n            });\n            return $warnings;\n        },\n\n        /** Render the title bar (the main/exposed SUMMARY dom element) */\n        _renderTitleBar: function() {\n            return $(this.templates.titleBar(this.model.toJSON(), this));\n        },\n\n        /** Return an array of jQ objects containing common/easily-accessible item controls */\n        _renderPrimaryActions: function() {\n            // override this\n            return [];\n        },\n\n        /** Render the title bar (the main/exposed SUMMARY dom element) */\n        _renderSubtitle: function() {\n            return $(this.templates.subtitle(this.model.toJSON(), this));\n        },\n\n        // ......................................................................... events\n        /** event map */\n        events: {\n            // expand the body when the title is clicked or when in focus and space or enter is pressed\n            \"click .title-bar\": \"_clickTitleBar\",\n            \"keydown .title-bar\": \"_keyDownTitleBar\",\n            \"click .selector\": \"toggleSelect\"\n        },\n\n        /** expand when the title bar is clicked */\n        _clickTitleBar: function(event) {\n            event.stopPropagation();\n            if (event.altKey) {\n                this.toggleSelect(event);\n                if (!this.selectable) {\n                    this.showSelector();\n                }\n            } else {\n                this.toggleExpanded();\n            }\n        },\n\n        /** expand when the title bar is in focus and enter or space is pressed */\n        _keyDownTitleBar: function(event) {\n            // bail (with propagation) if keydown and not space or enter\n            var KEYCODE_SPACE = 32,\n                KEYCODE_RETURN = 13;\n            if (\n                event &&\n                event.type === \"keydown\" &&\n                (event.keyCode === KEYCODE_SPACE ||\n                    event.keyCode === KEYCODE_RETURN)\n            ) {\n                this.toggleExpanded();\n                event.stopPropagation();\n                return false;\n            }\n            return true;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"ListItemView(\" + modelString + \")\";\n        }\n    })\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListItemView.prototype.templates = (function() {\n    var elTemplato = BASE_MVC.wrapTemplate([\n        '<div class=\"list-element\">',\n        // errors, messages, etc.\n        '<div class=\"warnings\"></div>',\n\n        // multi-select checkbox\n        '<div class=\"selector\">',\n        '<span class=\"fa fa-2x fa-square-o\"></span>',\n        \"</div>\",\n        // space for title bar buttons - gen. floated to the right\n        '<div class=\"primary-actions\"></div>',\n        '<div class=\"title-bar\"></div>',\n\n        // expandable area for more details\n        '<div class=\"details\"></div>',\n        \"</div>\"\n    ]);\n\n    var warnings = {};\n\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            // adding a tabindex here allows focusing the title bar and the use of keydown to expand the dataset display\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            //TODO: prob. belongs in dataset-list-item\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    var subtitleTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"subtitle\"></div>'\n    ]);\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"details\"></div>'\n    ]);\n\n    return {\n        el: elTemplato,\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate,\n        details: detailsTemplate\n    };\n})();\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *  *AND* can display some sub-list of it's own when expanded (e.g. dataset collections).\n *  This list will 'foldout' when the item is expanded depending on this.foldoutStyle:\n *      If 'foldout': will expand vertically to show the nested list\n *      If 'drilldown': will overlay the parent list\n *\n *  Inherits from ListItemView.\n *\n *  _renderDetails does the work of creating this.details: a sub-view that shows the nested list\n */\nvar FoldoutListItemView = ListItemView.extend({\n    /** If 'foldout': show the sub-panel inside the expanded item\n     *  If 'drilldown': only fire events and handle by pub-sub\n     *      (allow the panel containing this item to attach it, hide itself, etc.)\n     */\n    foldoutStyle: \"foldout\",\n    /** Panel view class to instantiate for the sub-panel */\n    foldoutPanelClass: null,\n\n    /** override to:\n     *      add attributes foldoutStyle and foldoutPanelClass for config poly\n     *      disrespect attributes.expanded if drilldown\n     */\n    initialize: function(attributes) {\n        if (this.foldoutStyle === \"drilldown\") {\n            this.expanded = false;\n        }\n        this.foldoutStyle = attributes.foldoutStyle || this.foldoutStyle;\n        this.foldoutPanelClass =\n            attributes.foldoutPanelClass || this.foldoutPanelClass;\n\n        ListItemView.prototype.initialize.call(this, attributes);\n        this.foldout = this._createFoldoutPanel();\n    },\n\n    /** in this override, attach the foldout panel when rendering details */\n    _renderDetails: function() {\n        if (this.foldoutStyle === \"drilldown\") {\n            return $();\n        }\n        var $newDetails = ListItemView.prototype._renderDetails.call(this);\n        return this._attachFoldout(this.foldout, $newDetails);\n    },\n\n    /** In this override, handle collection expansion. */\n    _createFoldoutPanel: function() {\n        var model = this.model;\n        var FoldoutClass = this._getFoldoutPanelClass(model),\n            options = this._getFoldoutPanelOptions(model),\n            foldout = new FoldoutClass(\n                _.extend(options, {\n                    model: model\n                })\n            );\n        return foldout;\n    },\n\n    /** Stub to return proper foldout panel class */\n    _getFoldoutPanelClass: function() {\n        // override\n        return this.foldoutPanelClass;\n    },\n\n    /** Stub to return proper foldout panel options */\n    _getFoldoutPanelOptions: function() {\n        return {\n            // propagate foldout style down\n            foldoutStyle: this.foldoutStyle,\n            fxSpeed: this.fxSpeed\n        };\n    },\n\n    /** Render the foldout panel inside the view, hiding controls */\n    _attachFoldout: function(foldout, $whereTo) {\n        $whereTo = $whereTo || this.$(\"> .details\");\n        this.foldout = foldout.render(0);\n        foldout.$(\"> .controls\").hide();\n        return $whereTo.append(foldout.$el);\n    },\n\n    /** In this override, branch on foldoutStyle to show expanded */\n    expand: function() {\n        var view = this;\n        return view._fetchModelDetails().always(function() {\n            if (view.foldoutStyle === \"foldout\") {\n                view._expand();\n            } else if (view.foldoutStyle === \"drilldown\") {\n                view._expandByDrilldown();\n            }\n        });\n    },\n\n    /** For drilldown, set up close handler and fire expanded:drilldown\n     *      containing views can listen to this and handle other things\n     *      (like hiding themselves) by listening for expanded/collapsed:drilldown\n     */\n    _expandByDrilldown: function() {\n        var view = this;\n        // attachment and rendering done by listener\n        view.listenTo(view.foldout, \"close\", function() {\n            view.trigger(\"collapsed:drilldown\", view, view.foldout);\n        });\n        view.trigger(\"expanded:drilldown\", view, view.foldout);\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nFoldoutListItemView.prototype.templates = (function() {\n    var detailsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"details\">',\n            // override with more info (that goes above the panel)\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        details: detailsTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    ExpandableView: ExpandableView,\n    ListItemView: ListItemView,\n    FoldoutListItemView: FoldoutListItemView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/list/list-item.js","import LIST_ITEM from \"mvc/list/list-item\";\nimport STATES from \"mvc/dataset/states\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"dataset\";\n/*==============================================================================\nTODO:\n    straighten out state rendering and templates used\n    inaccessible/STATES.NOT_VIEWABLE is a special case\n    simplify button rendering\n\n==============================================================================*/\nvar _super = LIST_ITEM.ListItemView;\n/** @class Read only list view for either LDDAs, HDAs, or HDADCEs.\n *      Roughly, any DatasetInstance (and not a raw Dataset).\n */\nvar DatasetListItemView = _super.extend(\n    /** @lends DatasetListItemView.prototype */ {\n        _logNamespace: logNamespace,\n\n        className: _super.prototype.className + \" dataset\",\n        //TODO:?? doesn't exactly match an hda's type_id\n        id: function() {\n            return [\"dataset\", this.model.get(\"id\")].join(\"-\");\n        },\n\n        /** Set up: instance vars, options, and event handlers */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(this + \".initialize:\", attributes);\n            _super.prototype.initialize.call(this, attributes);\n\n            /** where should pages from links be displayed? (default to new tab/window) */\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            var self = this;\n\n            // re-rendering on any model changes\n            return self.listenTo(self.model, {\n                change: function(model) {\n                    // if the model moved into the ready state and is expanded without details, fetch those details now\n                    if (\n                        self.model.changedAttributes().state &&\n                        self.model.inReadyState() &&\n                        self.expanded &&\n                        !self.model.hasDetails()\n                    ) {\n                        // normally, will render automatically (due to fetch -> change),\n                        // but! setting_metadata sometimes doesn't cause any other changes besides state\n                        // so, not rendering causes it to seem frozen in setting_metadata state\n                        self.model.fetch({ silent: true }).done(function() {\n                            self.render();\n                        });\n                    } else {\n                        if (\n                            _.has(model.changed, \"tags\") &&\n                            _.keys(model.changed).length === 1\n                        ) {\n                            // If only the tags have changed, rerender specifically\n                            // the titlebar region.  Otherwise default to the full\n                            // render.\n                            self.$(\".nametags\").html(self._renderNametags());\n                        } else {\n                            self.render();\n                        }\n                    }\n                }\n            });\n        },\n\n        // ......................................................................... expandable\n        /** In this override, only get details if in the ready state, get rerunnable if in other states.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        // ......................................................................... removal\n        /** Remove this view's html from the DOM and remove all event listeners.\n     *  @param {Number or String} speed jq effect speed\n     *  @param {Function} callback      an optional function called when removal is done (scoped to this view)\n     */\n        remove: function(speed, callback) {\n            var view = this;\n            speed = speed || this.fxSpeed;\n            this.$el.fadeOut(speed, function() {\n                Backbone.View.prototype.remove.call(view);\n                if (callback) {\n                    callback.call(view);\n                }\n            });\n        },\n\n        // ......................................................................... rendering\n        /* TODO:\n        dataset states are the issue primarily making dataset rendering complex\n            each state should have it's own way of displaying/set of details\n            often with different actions that can be applied\n        throw in deleted/purged/visible and things get complicated easily\n        I've considered (a couple of times) - creating a view for each state\n            - but recreating the view during an update...seems wrong\n    */\n        /** In this override, add the dataset state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            if (this.model.has(\"state\")) {\n                this.$el.addClass(\"state-\" + this.model.get(\"state\"));\n            }\n            return this.$el;\n        },\n\n        // ................................................................................ titlebar\n        /** In this override, add the dataset display button. */\n        _renderPrimaryActions: function() {\n            // render just the display for read-only\n            return [this._renderDisplayButton()];\n        },\n\n        /** Render icon-button to display dataset data */\n        _renderDisplayButton: function() {\n            // don't show display if not viewable or not accessible\n            var state = this.model.get(\"state\");\n            if (\n                state === STATES.NOT_VIEWABLE ||\n                state === STATES.DISCARDED ||\n                !this.model.get(\"accessible\")\n            ) {\n                return null;\n            }\n\n            var displayBtnData = {\n                target: this.linkTarget,\n                classes: \"display-btn\"\n            };\n\n            // show a disabled display if the data's been purged\n            if (this.model.get(\"purged\")) {\n                displayBtnData.disabled = true;\n                displayBtnData.title = _l(\n                    \"Cannot display datasets removed from disk\"\n                );\n\n                // disable if still uploading\n            } else if (state === STATES.UPLOAD) {\n                displayBtnData.disabled = true;\n                displayBtnData.title = _l(\n                    \"This dataset must finish uploading before it can be viewed\"\n                );\n\n                // disable if still new\n            } else if (state === STATES.NEW) {\n                displayBtnData.disabled = true;\n                displayBtnData.title = _l(\"This dataset is not yet viewable\");\n            } else {\n                displayBtnData.title = _l(\"View data\");\n\n                // default link for dataset\n                displayBtnData.href = this.model.urls.display;\n\n                // add frame manager option onclick event\n                var self = this;\n                displayBtnData.onclick = function(ev) {\n                    if (Galaxy.frame && Galaxy.frame.active) {\n                        // Add dataset to frames.\n                        Galaxy.frame.addDataset(self.model.get(\"id\"));\n                        ev.preventDefault();\n                    }\n                };\n            }\n            displayBtnData.faIcon = \"fa-eye\";\n            return faIconButton(displayBtnData);\n        },\n\n        // ......................................................................... rendering details\n        /** Render the enclosing div of the hda body and, if expanded, the html in the body\n     *  @returns {jQuery} rendered DOM\n     */\n        _renderDetails: function() {\n            //TODO: generalize to be allow different details for each state\n\n            // no access - render nothing but a message\n            if (this.model.get(\"state\") === STATES.NOT_VIEWABLE) {\n                return $(this.templates.noAccess(this.model.toJSON(), this));\n            }\n\n            var $details = _super.prototype._renderDetails.call(this);\n            $details\n                .find(\".actions .left\")\n                .empty()\n                .append(this._renderSecondaryActions());\n            $details\n                .find(\".summary\")\n                .html(this._renderSummary())\n                .prepend(this._renderDetailMessages());\n            $details\n                .find(\".display-applications\")\n                .html(this._renderDisplayApplications());\n\n            this._setUpBehaviors($details);\n            return $details;\n        },\n\n        /** Defer to the appropo summary rendering fn based on state */\n        _renderSummary: function() {\n            var json = this.model.toJSON(),\n                summaryRenderFn = this.templates.summaries[json.state];\n            summaryRenderFn =\n                summaryRenderFn || this.templates.summaries.unknown;\n            return summaryRenderFn(json, this);\n        },\n\n        /** Render messages to be displayed only when the details are shown */\n        _renderDetailMessages: function() {\n            var view = this,\n                $warnings = $('<div class=\"detail-messages\"></div>'),\n                json = view.model.toJSON();\n            //TODO:! unordered (map)\n            _.each(view.templates.detailMessages, function(templateFn) {\n                $warnings.append($(templateFn(json, view)));\n            });\n            return $warnings;\n        },\n\n        /** Render the external display application links */\n        _renderDisplayApplications: function() {\n            if (this.model.isDeletedOrPurged()) {\n                return \"\";\n            }\n            // render both old and new display apps using the same template\n            return [\n                this.templates.displayApplications(\n                    this.model.get(\"display_apps\"),\n                    this\n                ),\n                this.templates.displayApplications(\n                    this.model.get(\"display_types\"),\n                    this\n                )\n            ].join(\"\");\n        },\n\n        // ......................................................................... secondary/details actions\n        /** A series of links/buttons for less commonly used actions: re-run, info, etc. */\n        _renderSecondaryActions: function() {\n            this.debug(\"_renderSecondaryActions\");\n            switch (this.model.get(\"state\")) {\n                case STATES.NOT_VIEWABLE:\n                    return [];\n                case STATES.OK:\n                case STATES.FAILED_METADATA:\n                case STATES.ERROR:\n                    return [\n                        this._renderDownloadButton(),\n                        this._renderShowParamsButton()\n                    ];\n            }\n            return [this._renderShowParamsButton()];\n        },\n\n        /** Render icon-button to show the input and output (stdout/err) for the job that created this.\n     *  @returns {jQuery} rendered DOM\n     */\n        _renderShowParamsButton: function() {\n            // gen. safe to show in all cases\n            return faIconButton({\n                title: _l(\"View details\"),\n                classes: \"params-btn\",\n                href: this.model.urls.show_params,\n                target: this.linkTarget,\n                faIcon: \"fa-info-circle\",\n                onclick: function(ev) {\n                    if (Galaxy.frame && Galaxy.frame.active) {\n                        Galaxy.frame.add({\n                            title: \"Dataset details\",\n                            url: this.href\n                        });\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                    }\n                }\n            });\n        },\n\n        /** Render icon-button/popupmenu to download the data (and/or the associated meta files (bai, etc.)) for this.\n     *  @returns {jQuery} rendered DOM\n     */\n        _renderDownloadButton: function() {\n            // don't show anything if the data's been purged\n            if (this.model.get(\"purged\") || !this.model.hasData()) {\n                return null;\n            }\n\n            // return either: a popupmenu with links to download assoc. meta files (if there are meta files)\n            //  or a single download icon-button (if there are no meta files)\n            if (!_.isEmpty(this.model.get(\"meta_files\"))) {\n                return this._renderMetaFileDownloadButton();\n            }\n\n            return $(\n                [\n                    '<a class=\"download-btn icon-btn\" ',\n                    'href=\"',\n                    this.model.urls.download,\n                    '\" title=\"' + _l(\"Download\") + '\" download>',\n                    '<span class=\"fa fa-floppy-o\"></span>',\n                    \"</a>\"\n                ].join(\"\")\n            );\n        },\n\n        /** Render the download button which opens a dropdown with links to download assoc. meta files (indeces, etc.) */\n        _renderMetaFileDownloadButton: function() {\n            var urls = this.model.urls;\n            return $(\n                [\n                    '<div class=\"metafile-dropdown dropdown\">',\n                    '<a class=\"download-btn icon-btn\" href=\"javascript:void(0)\" data-toggle=\"dropdown\"',\n                    ' title=\"' + _l(\"Download\") + '\">',\n                    '<span class=\"fa fa-floppy-o\"></span>',\n                    \"</a>\",\n                    '<ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dLabel\">',\n                    '<li><a href=\"' + urls.download + '\" download>',\n                    _l(\"Download dataset\"),\n                    \"</a></li>\",\n                    _.map(this.model.get(\"meta_files\"), function(meta_file) {\n                        return [\n                            '<li><a href=\"',\n                            urls.meta_download + meta_file.file_type,\n                            '\">',\n                            _l(\"Download\"),\n                            \" \",\n                            meta_file.file_type,\n                            \"</a></li>\"\n                        ].join(\"\");\n                    }).join(\"\\n\"),\n                    \"</ul>\",\n                    \"</div>\"\n                ].join(\"\\n\")\n            );\n        },\n\n        _renderNametags: function() {\n            var tpl = _.template(\n                [\n                    \"<% _.each(_.sortBy(_.uniq(tags), function(x) { return x }), function(tag){ %>\",\n                    '<% if (tag.indexOf(\"name:\") == 0){ %>',\n                    '<span class=\"label label-info\"><%- tag.slice(5) %></span>',\n                    \"<% } %>\",\n                    \"<% }); %>\"\n                ].join(\"\")\n            );\n            return tpl({ tags: this.model.get(\"tags\") });\n        },\n\n        // ......................................................................... misc\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .display-btn\": function(ev) {\n                this.trigger(\"display\", this, ev);\n            },\n            \"click .params-btn\": function(ev) {\n                this.trigger(\"params\", this, ev);\n            },\n            \"click .download-btn\": function(ev) {\n                this.trigger(\"download\", this, ev);\n            }\n        }),\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DatasetListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemView.prototype.templates = (function() {\n    //TODO: move to require text! plugin\n\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        failed_metadata: BASE_MVC.wrapTemplate([\n            // failed metadata is rendered as a warning on an otherwise ok dataset view\n            '<% if( model.state === \"failed_metadata\" ){ %>',\n            '<div class=\"warningmessagesmall\">',\n            _l(\"An error occurred setting the metadata for this dataset\"),\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        error: BASE_MVC.wrapTemplate([\n            // error during index fetch - show error on dataset\n            \"<% if( model.error ){ %>\",\n            '<div class=\"errormessagesmall\">',\n            _l(\"There was an error getting the data for this dataset\"),\n            \": <%- model.error %>\",\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        purged: BASE_MVC.wrapTemplate([\n            \"<% if( model.purged ){ %>\",\n            '<div class=\"purged-msg warningmessagesmall\">',\n            _l(\"This dataset has been deleted and removed from disk\"),\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        deleted: BASE_MVC.wrapTemplate([\n            // deleted not purged\n            \"<% if( model.deleted && !model.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This dataset has been deleted\"),\n            \"</div>\",\n            \"<% } %>\"\n        ])\n\n        //NOTE: hidden warning is only needed for HDAs\n    });\n\n    var detailsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"details\">',\n            '<div class=\"summary\"></div>',\n\n            '<div class=\"actions clear\">',\n            '<div class=\"left\"></div>',\n            '<div class=\"right\"></div>',\n            \"</div>\",\n\n            // do not display tags, annotation, display apps, or peek when deleted\n            \"<% if( !dataset.deleted && !dataset.purged ){ %>\",\n            '<div class=\"tags-display\"></div>',\n            '<div class=\"annotation-display\"></div>',\n\n            '<div class=\"display-applications\"></div>',\n\n            \"<% if( dataset.peek ){ %>\",\n            '<pre class=\"dataset-peek\"><%= dataset.peek %></pre>',\n            \"<% } %>\",\n            \"<% } %>\",\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n\n    var noAccessTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"details\">',\n            '<div class=\"summary\">',\n            _l(\"You do not have permission to view this dataset\"),\n            \"</div>\",\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n\n    //TODO: still toooooooooooooo complex - rework\n    var summaryTemplates = {};\n    summaryTemplates[STATES.OK] = summaryTemplates[\n        STATES.FAILED_METADATA\n    ] = BASE_MVC.wrapTemplate(\n        [\n            \"<% if( dataset.misc_blurb ){ %>\",\n            '<div class=\"blurb\">',\n            '<span class=\"value\"><%- dataset.misc_blurb %></span>',\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( dataset.file_ext ){ %>\",\n            '<div class=\"datatype\">',\n            '<label class=\"prompt\">',\n            _l(\"format\"),\n            \"</label>\",\n            '<span class=\"value\"><%- dataset.file_ext %></span>',\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( dataset.metadata_dbkey ){ %>\",\n            '<div class=\"dbkey\">',\n            '<label class=\"prompt\">',\n            _l(\"database\"),\n            \"</label>\",\n            '<span class=\"value\">',\n            \"<%- dataset.metadata_dbkey %>\",\n            \"</span>\",\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( dataset.misc_info ){ %>\",\n            '<div class=\"info\">',\n            '<span class=\"value\"><%- dataset.misc_info %></span>',\n            \"</div>\",\n            \"<% } %>\"\n        ],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.NEW] = BASE_MVC.wrapTemplate(\n        [\n            \"<div>\",\n            _l(\n                \"This is a new dataset and not all of its data are available yet\"\n            ),\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.NOT_VIEWABLE] = BASE_MVC.wrapTemplate(\n        [\n            \"<div>\",\n            _l(\"You do not have permission to view this dataset\"),\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.DISCARDED] = BASE_MVC.wrapTemplate(\n        [\n            \"<div>\",\n            _l(\"The job creating this dataset was cancelled before completion\"),\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.QUEUED] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This job is waiting to run\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.RUNNING] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This job is currently running\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.UPLOAD] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This dataset is currently uploading\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.SETTING_METADATA] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"Metadata is being auto-detected\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.PAUSED] = BASE_MVC.wrapTemplate(\n        [\n            \"<div>\",\n            _l(\n                'This job is paused. Use the \"Resume Paused Jobs\" in the history menu to resume'\n            ),\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.ERROR] = BASE_MVC.wrapTemplate(\n        [\n            \"<% if( !dataset.purged ){ %>\",\n            \"<div><%- dataset.misc_blurb %></div>\",\n            \"<% } %>\",\n            '<span class=\"help-text\">',\n            _l(\"An error occurred with this dataset\"),\n            \":</span>\",\n            '<div class=\"job-error-text\"><%- dataset.misc_info %></div>'\n        ],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.EMPTY] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"No data\"), \": <i><%- dataset.misc_blurb %></i></div>\"],\n        \"dataset\"\n    );\n    summaryTemplates.unknown = BASE_MVC.wrapTemplate(\n        ['<div>Error: unknown dataset state: \"<%- dataset.state %>\"</div>'],\n        \"dataset\"\n    );\n\n    // messages to be displayed only within the details section ('below the fold')\n    var detailMessageTemplates = {\n        resubmitted: BASE_MVC.wrapTemplate([\n            // deleted not purged\n            \"<% if( model.resubmitted ){ %>\",\n            '<div class=\"resubmitted-msg infomessagesmall\">',\n            _l(\"The job creating this dataset has been resubmitted\"),\n            \"</div>\",\n            \"<% } %>\"\n        ])\n    };\n\n    // this is applied to both old and new style display apps\n    var displayApplicationsTemplate = BASE_MVC.wrapTemplate(\n        [\n            \"<% _.each( apps, function( app ){ %>\",\n            '<div class=\"display-application\">',\n            '<span class=\"display-application-location\"><%- app.label %></span> ',\n            '<span class=\"display-application-links\">',\n            \"<% _.each( app.links, function( link ){ %>\",\n            '<a target=\"<%- link.target %>\" href=\"<%- link.href %>\">',\n            \"<% print( _l( link.text ) ); %>\",\n            \"</a> \",\n            \"<% }); %>\",\n            \"</span>\",\n            \"</div>\",\n            \"<% }); %>\"\n        ],\n        \"apps\"\n    );\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        details: detailsTemplate,\n        noAccess: noAccessTemplate,\n        summaries: summaryTemplates,\n        detailMessages: detailMessageTemplates,\n        displayApplications: displayApplicationsTemplate\n    });\n})();\n\n// ============================================================================\nexport default {\n    DatasetListItemView: DatasetListItemView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/dataset-li.js","import LIST_ITEM from \"mvc/list/list-item\";\nimport DATASET_LI from \"mvc/dataset/dataset-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar FoldoutListItemView = LIST_ITEM.FoldoutListItemView,\n    ListItemView = LIST_ITEM.ListItemView;\n/** @class Read only view for DatasetCollection.\n */\nvar DCListItemView = FoldoutListItemView.extend(\n    /** @lends DCListItemView.prototype */ {\n        className:\n            FoldoutListItemView.prototype.className + \" dataset-collection\",\n        id: function() {\n            return [\"dataset_collection\", this.model.get(\"id\")].join(\"-\");\n        },\n\n        /** override to add linkTarget */\n        initialize: function(attributes) {\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n            this.hasUser = attributes.hasUser;\n            FoldoutListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            FoldoutListItemView.prototype._setUpListeners.call(this);\n            this.listenTo(this.model, \"change\", function(model, options) {\n                // if the model has changed deletion status render it entirely\n                if (_.has(model.changed, \"deleted\")) {\n                    this.render();\n\n                    // if the model has been decorated after the fact with the element count,\n                    // render the subtitle where the count is displayed\n                } else if (_.has(model.changed, \"element_count\")) {\n                    this.$(\"> .title-bar .subtitle\").replaceWith(\n                        this._renderSubtitle()\n                    );\n                }\n            });\n        },\n\n        // ......................................................................... rendering\n        /** render a subtitle to show the user what sort of collection this is */\n        _renderSubtitle: function() {\n            return $(this.templates.subtitle(this.model.toJSON(), this));\n        },\n\n        // ......................................................................... foldout\n        /** override to add linktarget to sub-panel */\n        _getFoldoutPanelOptions: function() {\n            var options = FoldoutListItemView.prototype._getFoldoutPanelOptions.call(\n                this\n            );\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                hasUser: this.hasUser\n            });\n        },\n\n        /** override to not catch sub-panel selectors */\n        $selector: function() {\n            return this.$(\"> .selector\");\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DCListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCListItemView.prototype.templates = (function() {\n    var warnings = _.extend(\n        {},\n        FoldoutListItemView.prototype.templates.warnings,\n        {\n            error: BASE_MVC.wrapTemplate([\n                // error during index fetch - show error on dataset\n                \"<% if( model.error ){ %>\",\n                '<div class=\"errormessagesmall\">',\n                _l(\"There was an error getting the data for this collection\"),\n                \": <%- model.error %>\",\n                \"</div>\",\n                \"<% } %>\"\n            ]),\n            purged: BASE_MVC.wrapTemplate([\n                \"<% if( model.purged ){ %>\",\n                '<div class=\"purged-msg warningmessagesmall\">',\n                _l(\"This collection has been deleted and removed from disk\"),\n                \"</div>\",\n                \"<% } %>\"\n            ]),\n            deleted: BASE_MVC.wrapTemplate([\n                // deleted not purged\n                \"<% if( model.deleted && !model.purged ){ %>\",\n                '<div class=\"deleted-msg warningmessagesmall\">',\n                _l(\"This collection has been deleted\"),\n                \"</div>\",\n                \"<% } %>\"\n            ])\n        }\n    );\n\n    // use element identifier\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- collection.element_identifier || collection.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    // use element identifier\n    var subtitleTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"subtitle\">',\n            '<% var countText = collection.element_count? ( collection.element_count + \" \" ) : \"\"; %>',\n            '<%        if( collection.collection_type === \"list\" ){ %>',\n            _l(\"a list of <%- countText %>datasets\"),\n            '<% } else if( collection.collection_type === \"paired\" ){ %>',\n            _l(\"a pair of datasets\"),\n            '<% } else if( collection.collection_type === \"list:paired\" ){ %>',\n            _l(\"a list of <%- countText %>dataset pairs\"),\n            '<% } else if( collection.collection_type === \"list:list\" ){ %>',\n            _l(\"a list of <%- countText %>dataset lists\"),\n            \"<% } %>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, FoldoutListItemView.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemView = ListItemView.extend(\n    /** @lends DCEListItemView.prototype */ {\n        /** add the DCE class to the list item */\n        className:\n            ListItemView.prototype.className + \" dataset-collection-element\",\n\n        /** set up */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(\"DCEListItemView.initialize:\", attributes);\n            ListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DCEListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCEListItemView.prototype.templates = (function() {\n    // use the element identifier here - since that will persist and the user will need it\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.element_identifier %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemView = DATASET_LI.DatasetListItemView.extend(\n    /** @lends DatasetDCEListItemView.prototype */ {\n        className:\n            DATASET_LI.DatasetListItemView.prototype.className +\n            \" dataset-collection-element\",\n\n        /** set up */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(\"DatasetDCEListItemView.initialize:\", attributes);\n            DATASET_LI.DatasetListItemView.prototype.initialize.call(\n                this,\n                attributes\n            );\n        },\n\n        /** In this override, only get details if in the ready state.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DatasetDCEListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemView.prototype.templates = (function() {\n    // use the element identifier here and not the dataset name\n    //TODO:?? can we steal the DCE titlebar?\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.element_identifier %></span>',\n            \"</div>\",\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    return _.extend({}, DATASET_LI.DatasetListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemView = DCListItemView.extend(\n    /** @lends NestedDCDCEListItemView.prototype */ {\n        className:\n            DCListItemView.prototype.className + \" dataset-collection-element\",\n\n        /** In this override, add the state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            DCListItemView.prototype._swapNewRender.call(this, $newRender);\n            var state = this.model.get(\"state\") || \"ok\";\n            this.$el.addClass(\"state-\" + state);\n            return this.$el;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"NestedDCDCEListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    DCListItemView: DCListItemView,\n    DCEListItemView: DCEListItemView,\n    DatasetDCEListItemView: DatasetDCEListItemView,\n    NestedDCDCEListItemView: NestedDCDCEListItemView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/collection-li.js","/** Generic form view */\nimport Form from \"mvc/form/form-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        this.model = new Backbone.Model(options);\n        this.url = this.model.get(\"url\");\n        this.redirect = this.model.get(\"redirect\");\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + this.url,\n            type: \"GET\"\n        })\n            .done(function(response) {\n                var options = $.extend({}, self.model.attributes, response);\n                var form = new Form({\n                    title: options.title,\n                    message: options.message,\n                    status: options.status || \"warning\",\n                    icon: options.icon,\n                    inputs: options.inputs,\n                    buttons: {\n                        submit: new Ui.Button({\n                            tooltip: options.submit_tooltip,\n                            title: options.submit_title || \"Save\",\n                            icon: options.submit_icon || \"fa-save\",\n                            cls: \"btn btn-primary ui-clear-float\",\n                            onclick: function() {\n                                self._submit(form);\n                            }\n                        })\n                    }\n                });\n                self.$el.empty().append(form.$el);\n            })\n            .fail(function(response) {\n                self.$el.empty().append(\n                    new Ui.Message({\n                        message: \"Failed to load resource \" + self.url + \".\",\n                        status: \"danger\",\n                        persistent: true\n                    }).$el\n                );\n            });\n    },\n\n    _submit: function(form) {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + self.url,\n            data: JSON.stringify(form.data.create()),\n            type: \"PUT\",\n            contentType: \"application/json\"\n        })\n            .done(function(response) {\n                var success_message = {\n                    message: response.message,\n                    status: \"success\",\n                    persistent: false\n                };\n                if (self.redirect) {\n                    window.location =\n                        Galaxy.root +\n                        self.redirect +\n                        \"?\" +\n                        $.param(success_message);\n                } else {\n                    form.data.matchModel(response, function(input, input_id) {\n                        form.field_list[input_id].value(input.value);\n                    });\n                    self._showMessage(form, success_message);\n                }\n            })\n            .fail(function(response) {\n                self._showMessage(form, {\n                    message: response.responseJSON.err_msg,\n                    status: \"danger\",\n                    persistent: false\n                });\n            });\n    },\n\n    _showMessage: function(form, options) {\n        var $panel = form.$el\n            .parents()\n            .filter(function() {\n                return (\n                    [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1\n                );\n            })\n            .first();\n        $panel.animate({ scrollTop: 0 }, 500);\n        form.message.update(options);\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-wrapper.js","import STATES from \"mvc/dataset/states\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"dataset\";\n//==============================================================================\nvar searchableMixin = BASE_MVC.SearchableModelMixin;\n/** @class base model for any DatasetAssociation (HDAs, LDDAs, DatasetCollectionDAs).\n *      No knowledge of what type (HDA/LDDA/DCDA) should be needed here.\n *  The DA's are made searchable (by attribute) by mixing in SearchableModelMixin.\n */\nvar DatasetAssociation = Backbone.Model.extend(BASE_MVC.LoggableMixin).extend(\n    BASE_MVC.mixin(\n        searchableMixin,\n        /** @lends DatasetAssociation.prototype */ {\n            _logNamespace: logNamespace,\n\n            /** default attributes for a model */\n            defaults: {\n                state: STATES.NEW,\n                deleted: false,\n                purged: false,\n                name: \"(unnamed dataset)\",\n                accessible: true,\n                // sniffed datatype (sam, tabular, bed, etc.)\n                data_type: \"\",\n                file_ext: \"\",\n                file_size: 0,\n\n                // array of associated file types (eg. [ 'bam_index', ... ])\n                meta_files: [],\n\n                misc_blurb: \"\",\n                misc_info: \"\",\n\n                tags: []\n                // do NOT default on annotation, as this default is valid and will be passed on 'save'\n                //  which is incorrect behavior when the model is only partially fetched (annos are not passed in summary data)\n                //annotation          : ''\n            },\n\n            /** instance vars and listeners */\n            initialize: function(attributes, options) {\n                this.debug(this + \"(Dataset).initialize\", attributes, options);\n\n                //!! this state is not in trans.app.model.Dataset.states - set it here -\n                if (!this.get(\"accessible\")) {\n                    this.set(\"state\", STATES.NOT_VIEWABLE);\n                }\n\n                /** Datasets rely/use some web controllers - have the model generate those URLs on startup */\n                this.urls = this._generateUrls();\n\n                this._setUpListeners();\n            },\n\n            /** returns misc. web urls for rendering things like re-run, display, etc. */\n            _generateUrls: function() {\n                var id = this.get(\"id\");\n                if (!id) {\n                    return {};\n                }\n                var urls = {\n                    purge: \"datasets/\" + id + \"/purge_async\",\n                    display: \"datasets/\" + id + \"/display/?preview=True\",\n                    edit: \"datasets/edit?dataset_id=\" + id,\n                    download:\n                        \"datasets/\" +\n                        id +\n                        \"/display\" +\n                        this._downloadQueryParameters(),\n                    report_error: \"dataset/errors?id=\" + id,\n                    rerun: \"tool_runner/rerun?id=\" + id,\n                    show_params: \"datasets/\" + id + \"/show_params\",\n                    visualization: \"visualization\",\n                    meta_download:\n                        \"dataset/get_metadata_file?hda_id=\" +\n                        id +\n                        \"&metadata_name=\"\n                };\n                _.each(urls, function(value, key) {\n                    urls[key] = Galaxy.root + value;\n                });\n                this.urls = urls;\n                return urls;\n            },\n\n            _downloadQueryParameters: function() {\n                return \"?to_ext=\" + this.get(\"file_ext\");\n            },\n\n            /** set up any event listeners\n     *  event: state:ready  fired when this DA moves into/is already in a ready state\n     */\n            _setUpListeners: function() {\n                // if the state has changed and the new state is a ready state, fire an event\n                this.on(\"change:state\", function(currModel, newState) {\n                    this.log(this + \" has changed state:\", currModel, newState);\n                    if (this.inReadyState()) {\n                        this.trigger(\n                            \"state:ready\",\n                            currModel,\n                            newState,\n                            this.previous(\"state\")\n                        );\n                    }\n                });\n                // the download url (currently) relies on having a correct file extension\n                this.on(\"change:id change:file_ext\", function(currModel) {\n                    this._generateUrls();\n                });\n            },\n\n            // ........................................................................ common queries\n            /** override to add urls */\n            toJSON: function() {\n                var json = Backbone.Model.prototype.toJSON.call(this);\n                //console.warn( 'returning json?' );\n                //return json;\n                return _.extend(json, {\n                    urls: this.urls\n                });\n            },\n\n            /** Is this dataset deleted or purged? */\n            isDeletedOrPurged: function() {\n                return this.get(\"deleted\") || this.get(\"purged\");\n            },\n\n            /** Is this dataset in a 'ready' state; where 'Ready' states are states where no\n     *      processing (for the ds) is left to do on the server.\n     */\n            inReadyState: function() {\n                var ready = _.contains(STATES.READY_STATES, this.get(\"state\"));\n                return this.isDeletedOrPurged() || ready;\n            },\n\n            /** Does this model already contain detailed data (as opposed to just summary level data)? */\n            hasDetails: function() {\n                // if it's inaccessible assume it has everything it needs\n                if (!this.get(\"accessible\")) {\n                    return true;\n                }\n                return this.has(\"annotation\");\n            },\n\n            /** Convenience function to match dataset.has_data. */\n            hasData: function() {\n                return this.get(\"file_size\") > 0;\n            },\n\n            // ........................................................................ ajax\n            fetch: function(options) {\n                var dataset = this;\n                return Backbone.Model.prototype.fetch\n                    .call(this, options)\n                    .always(function() {\n                        dataset._generateUrls();\n                    });\n            },\n\n            /** override to use actual Dates objects for create/update times */\n            parse: function(response, options) {\n                var parsed = Backbone.Model.prototype.parse.call(\n                    this,\n                    response,\n                    options\n                );\n                if (parsed.create_time) {\n                    parsed.create_time = new Date(parsed.create_time);\n                }\n                if (parsed.update_time) {\n                    parsed.update_time = new Date(parsed.update_time);\n                }\n                return parsed;\n            },\n\n            /** override to wait by default */\n            save: function(attrs, options) {\n                options = options || {};\n                options.wait = _.isUndefined(options.wait)\n                    ? true\n                    : options.wait;\n                return Backbone.Model.prototype.save.call(this, attrs, options);\n            },\n\n            //NOTE: subclasses of DA's will need to implement url and urlRoot in order to have these work properly\n            /** save this dataset, _Mark_ing it as deleted (just a flag) */\n            delete: function(options) {\n                if (this.get(\"deleted\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: true }, options);\n            },\n            /** save this dataset, _Mark_ing it as undeleted */\n            undelete: function(options) {\n                if (!this.get(\"deleted\") || this.get(\"purged\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: false }, options);\n            },\n\n            /** remove the file behind this dataset from the filesystem (if permitted) */\n            purge: function _purge(options) {\n                //TODO: use, override model.destroy, HDA.delete({ purge: true })\n                if (this.get(\"purged\")) {\n                    return jQuery.when();\n                }\n                options = options || {};\n                options.url = this.urls.purge;\n\n                //TODO: ideally this would be a DELETE call to the api\n                //  using purge async for now\n                var hda = this,\n                    xhr = jQuery.ajax(options);\n                xhr.done(function(message, status, responseObj) {\n                    hda.set({ deleted: true, purged: true });\n                });\n                xhr.fail(function(xhr, status, message) {\n                    // Exception messages are hidden within error page including:  '...not allowed in this Galaxy instance.'\n                    // unbury and re-add to xhr\n                    var error = _l(\"Unable to purge dataset\");\n                    var messageBuriedInUnfortunatelyFormattedError =\n                        \"Removal of datasets by users \" +\n                        \"is not allowed in this Galaxy instance\";\n                    if (xhr.responseJSON && xhr.responseJSON.error) {\n                        error = xhr.responseJSON.error;\n                    } else if (\n                        xhr.responseText.indexOf(\n                            messageBuriedInUnfortunatelyFormattedError\n                        ) !== -1\n                    ) {\n                        error = messageBuriedInUnfortunatelyFormattedError;\n                    }\n                    xhr.responseText = error;\n                    hda.trigger(\"error\", hda, xhr, options, _l(error), {\n                        error: error\n                    });\n                });\n                return xhr;\n            },\n\n            // ........................................................................ searching\n            /** what attributes of an HDA will be used in a text search */\n            searchAttributes: [\n                \"name\",\n                \"file_ext\",\n                \"genome_build\",\n                \"misc_blurb\",\n                \"misc_info\",\n                \"annotation\",\n                \"tags\"\n            ],\n\n            /** our attr keys don't often match the labels we display to the user - so, when using\n     *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n     *      following attr keys.\n     */\n            searchAliases: {\n                title: \"name\",\n                format: \"file_ext\",\n                database: \"genome_build\",\n                blurb: \"misc_blurb\",\n                description: \"misc_blurb\",\n                info: \"misc_info\",\n                tag: \"tags\"\n            },\n\n            // ........................................................................ misc\n            /** String representation */\n            toString: function() {\n                var nameAndId = this.get(\"id\") || \"\";\n                if (this.get(\"name\")) {\n                    nameAndId = '\"' + this.get(\"name\") + '\",' + nameAndId;\n                }\n                return \"Dataset(\" + nameAndId + \")\";\n            }\n        }\n    )\n);\n\n//==============================================================================\n/** @class Backbone collection for dataset associations.\n */\nvar DatasetAssociationCollection = Backbone.Collection\n    .extend(BASE_MVC.LoggableMixin)\n    .extend(\n        /** @lends HistoryContents.prototype */ {\n            _logNamespace: logNamespace,\n\n            model: DatasetAssociation,\n\n            /** root api url */\n            urlRoot: Galaxy.root + \"api/datasets\",\n\n            /** url fn */\n            url: function() {\n                return this.urlRoot;\n            },\n\n            // ........................................................................ common queries\n            /** Get the ids of every item in this collection\n     *  @returns array of encoded ids\n     */\n            ids: function() {\n                return this.map(function(item) {\n                    return item.get(\"id\");\n                });\n            },\n\n            /** Get contents that are not ready\n     *  @returns array of content models\n     */\n            notReady: function() {\n                return this.filter(function(content) {\n                    return !content.inReadyState();\n                });\n            },\n\n            /** return true if any datasets don't have details */\n            haveDetails: function() {\n                return this.all(function(dataset) {\n                    return dataset.hasDetails();\n                });\n            },\n\n            // ........................................................................ ajax\n            /** using a queue, perform ajaxFn on each of the models in this collection */\n            ajaxQueue: function(ajaxFn, options) {\n                var deferred = jQuery.Deferred(),\n                    startingLength = this.length,\n                    responses = [];\n\n                if (!startingLength) {\n                    deferred.resolve([]);\n                    return deferred;\n                }\n\n                // use reverse order (stylistic choice)\n                var ajaxFns = this.chain()\n                    .reverse()\n                    .map(function(dataset, i) {\n                        return function() {\n                            var xhr = ajaxFn.call(dataset, options);\n                            // if successful, notify using the deferred to allow tracking progress\n                            xhr.done(function(response) {\n                                deferred.notify({\n                                    curr: i,\n                                    total: startingLength,\n                                    response: response,\n                                    model: dataset\n                                });\n                            });\n                            // (regardless of previous error or success) if not last ajax call, shift and call the next\n                            //  if last fn, resolve deferred\n                            xhr.always(function(response) {\n                                responses.push(response);\n                                if (ajaxFns.length) {\n                                    ajaxFns.shift()();\n                                } else {\n                                    deferred.resolve(responses);\n                                }\n                            });\n                        };\n                    })\n                    .value();\n                // start the queue\n                ajaxFns.shift()();\n\n                return deferred;\n            },\n\n            // ........................................................................ sorting/filtering\n            /** return a new collection of datasets whose attributes contain the substring matchesWhat */\n            matches: function(matchesWhat) {\n                return this.filter(function(dataset) {\n                    return dataset.matches(matchesWhat);\n                });\n            },\n\n            /** String representation. */\n            toString: function() {\n                return [\"DatasetAssociationCollection(\", this.length, \")\"].join(\n                    \"\"\n                );\n            }\n        }\n    );\n\n//==============================================================================\nexport default {\n    DatasetAssociation: DatasetAssociation,\n    DatasetAssociationCollection: DatasetAssociationCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/dataset-model.js","import STATES from \"mvc/dataset/states\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/** @class Mixin for HistoryContents content (HDAs, HDCAs).\n */\nvar HistoryContentMixin = {\n    /** default attributes for a model */\n    defaults: {\n        /** parent (containing) history */\n        history_id: null,\n        /** some content_type (HistoryContents can contain mixed model classes) */\n        history_content_type: null,\n        /** indicating when/what order the content was generated in the context of the history */\n        hid: null,\n        /** whether the user wants the content shown (visible) */\n        visible: true\n    },\n\n    // ........................................................................ mixed content element\n    // In order to be part of a MIXED bbone collection, we can't rely on the id\n    //  (which may collide btwn models of different classes)\n    // Instead, use type_id which prefixes the history_content_type so the bbone collection can differentiate\n    idAttribute: \"type_id\",\n\n    // ........................................................................ common queries\n    /** the more common alias of visible */\n    hidden: function() {\n        return !this.get(\"visible\");\n    },\n\n    //TODO: remove\n    /** based on includeDeleted, includeHidden (gen. from the container control),\n     *      would this ds show in the list of ds's?\n     *  @param {Boolean} includeDeleted are we showing deleted hdas?\n     *  @param {Boolean} includeHidden are we showing hidden hdas?\n     */\n    isVisible: function(includeDeleted, includeHidden) {\n        var isVisible = true;\n        if (!includeDeleted && (this.get(\"deleted\") || this.get(\"purged\"))) {\n            isVisible = false;\n        }\n        if (!includeHidden && !this.get(\"visible\")) {\n            isVisible = false;\n        }\n        return isVisible;\n    },\n\n    // ........................................................................ ajax\n    //TODO?: these are probably better done on the leaf classes\n    /** history content goes through the 'api/histories' API */\n    urlRoot: Galaxy.root + \"api/histories/\",\n\n    /** full url spec. for this content */\n    url: function() {\n        var url =\n            this.urlRoot +\n            this.get(\"history_id\") +\n            \"/contents/\" +\n            this.get(\"history_content_type\") +\n            \"s/\" +\n            this.get(\"id\");\n        return url;\n    },\n\n    /** save this content as not visible */\n    hide: function(options) {\n        if (!this.get(\"visible\")) {\n            return jQuery.when();\n        }\n        return this.save({ visible: false }, options);\n    },\n    /** save this content as visible */\n    unhide: function(options) {\n        if (this.get(\"visible\")) {\n            return jQuery.when();\n        }\n        return this.save({ visible: true }, options);\n    },\n\n    // ........................................................................ misc\n    toString: function() {\n        return [this.get(\"type_id\"), this.get(\"hid\"), this.get(\"name\")].join(\n            \":\"\n        );\n    }\n};\n\n//==============================================================================\nexport default {\n    HistoryContentMixin: HistoryContentMixin\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-content-model.js","/* For presentation-related functionality shared across collection creators.\n   Particularily overlapping functionality related to name processing and help.\n*/\nvar CollectionCreatorMixin = {\n    /** add (or clear if clear is truthy) a validation warning to the DOM element described in what */\n    _validationWarning: function(what, clear) {\n        var VALIDATION_CLASS = \"validation-warning\";\n        if (what === \"name\") {\n            what = this.$(\".collection-name\").add(\n                this.$(\".collection-name-prompt\")\n            );\n            this.$(\".collection-name\")\n                .focus()\n                .select();\n        }\n        if (clear) {\n            what = what || this.$(\".\" + VALIDATION_CLASS);\n            what.removeClass(VALIDATION_CLASS);\n        } else {\n            what.addClass(VALIDATION_CLASS);\n        }\n    },\n\n    _changeHideOriginals: function(ev) {\n        this.hideOriginals = this.$(\".hide-originals\").prop(\"checked\");\n    },\n\n    // ........................................................................ footer\n    /** handle a collection name change */\n    _changeName: function(ev) {\n        this._validationWarning(\"name\", !!this._getName());\n    },\n\n    /** check for enter key press when in the collection name and submit */\n    _nameCheckForEnter: function(ev) {\n        if (ev.keyCode === 13 && !this.blocking) {\n            this._clickCreate();\n        }\n    },\n\n    /** get the current collection name */\n    _getName: function() {\n        return _.escape(this.$(\".collection-name\").val());\n    },\n\n    // ........................................................................ header\n    /** expand help */\n    _clickMoreHelp: function(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").addClass(\"expanded\");\n        this.$(\".more-help\").hide();\n    },\n    /** collapse help */\n    _clickLessHelp: function(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").removeClass(\"expanded\");\n        this.$(\".more-help\").show();\n    },\n    /** toggle help */\n    _toggleHelp: function(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").toggleClass(\"expanded\");\n        this.$(\".more-help\").toggle();\n    },\n\n    /** show an alert on the top of the interface containing message (alertClass is bootstrap's alert-*) */\n    _showAlert: function(message, alertClass) {\n        alertClass = alertClass || \"alert-danger\";\n        this.$(\".main-help\").hide();\n        this.$(\".header .alert\")\n            .attr(\"class\", \"alert alert-dismissable\")\n            .addClass(alertClass)\n            .show()\n            .find(\".alert-message\")\n            .html(message);\n    },\n    /** hide the alerts at the top */\n    _hideAlert: function(message) {\n        this.$(\".main-help\").show();\n        this.$(\".header .alert\").hide();\n    },\n\n    _cancelCreate: function(ev) {\n        if (typeof this.oncancel === \"function\") {\n            this.oncancel.call(this);\n        }\n    },\n\n    /** attempt to create the current collection */\n    _clickCreate: function(ev) {\n        var name = this._getName();\n        if (!name) {\n            this._validationWarning(\"name\");\n        } else if (!this.blocking) {\n            this.createList(name);\n        }\n    },\n\n    _setUpCommonSettings: function(attributes) {\n        this.hideOriginals = attributes.defaultHideSourceItems || false;\n    },\n\n    /** render the footer, completion controls, and cancel controls */\n    _renderFooter: function(speed, callback) {\n        var self = this;\n        var $footer = this.$(\".footer\")\n            .empty()\n            .html(this.templates.footer());\n        _.each(this.footerSettings, function(property, selector) {\n            self.$(selector).prop(\"checked\", self[property]);\n        });\n        if (typeof this.oncancel === \"function\") {\n            this.$(\".cancel-create.btn\").show();\n        }\n        return $footer;\n    },\n\n    _creatorTemplates: {\n        main: _.template(\n            [\n                '<div class=\"header flex-row no-flex\"></div>',\n                '<div class=\"middle flex-row flex-row-container\"></div>',\n                '<div class=\"footer flex-row no-flex\"></div>'\n            ].join(\"\")\n        )\n    }\n};\n\n//==============================================================================\nexport default {\n    CollectionCreatorMixin: CollectionCreatorMixin\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/base-creator.js","define([], function() {\n    // Alphanumeric/natural sort fn\n    function naturalSort(a, b) {\n        // setup temp-scope variables for comparison evauluation\n        var re = /(-?[0-9\\.]+)/g,\n            x = a.toString().toLowerCase() || \"\",\n            y = b.toString().toLowerCase() || \"\",\n            nC = String.fromCharCode(0),\n            xN = x.replace(re, nC + \"$1\" + nC).split(nC),\n            yN = y.replace(re, nC + \"$1\" + nC).split(nC),\n            xD = new Date(x).getTime(),\n            yD = xD ? new Date(y).getTime() : null;\n        // natural sorting of dates\n        if (yD) {\n            if (xD < yD) {\n                return -1;\n            } else if (xD > yD) {\n                return 1;\n            }\n        }\n        // natural sorting through split numeric strings and default strings\n        var oFxNcL, oFyNcL;\n        for (\n            var cLoc = 0, numS = Math.max(xN.length, yN.length);\n            cLoc < numS;\n            cLoc++\n        ) {\n            oFxNcL = parseFloat(xN[cLoc]) || xN[cLoc];\n            oFyNcL = parseFloat(yN[cLoc]) || yN[cLoc];\n            if (oFxNcL < oFyNcL) {\n                return -1;\n            } else if (oFxNcL > oFyNcL) {\n                return 1;\n            }\n        }\n        return 0;\n    }\n\n    return naturalSort;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/natural-sort.js","(function(factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n})(function() {\n    //=============================================================================\n\n    jQuery.fn.extend({\n        hoverhighlight: function $hoverhighlight(scope, color) {\n            scope = scope || \"body\";\n            if (!this.length) {\n                return this;\n            }\n\n            $(this).each(function() {\n                var $this = $(this),\n                    targetSelector = $this.data(\"target\");\n\n                if (targetSelector) {\n                    $this\n                        .mouseover(function(ev) {\n                            $(targetSelector, scope).css({\n                                background: color\n                            });\n                        })\n                        .mouseout(function(ev) {\n                            $(targetSelector).css({\n                                background: \"\"\n                            });\n                        });\n                }\n            });\n            return this;\n        }\n    });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/ui/hoverhighlight.js","/** This is the run workflow tool form view. */\nimport Utils from \"utils/utils\";\nimport Deferred from \"utils/deferred\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport FormData from \"mvc/form/form-data\";\nimport ToolFormBase from \"mvc/tool/tool-form-base\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport Webhooks from \"mvc/webhooks\";\nimport WorkflowIcons from \"mvc/workflow/workflow-icons\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.modal = parent.Galaxy.modal || new Modal.View();\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.deferred = new Deferred();\n        this.setElement(\n            $(\"<div/>\")\n                .addClass(\"ui-form-composite\")\n                .append((this.$message = $(\"<div/>\")))\n                .append((this.$header = $(\"<div/>\")))\n                .append((this.$steps = $(\"<div/>\")))\n        );\n        $(\"body\").append(this.$el);\n        this._configure();\n        this.render();\n        $(window).resize(function() {\n            self._refresh();\n        });\n    },\n\n    /** Refresh height of scrollable div below header, handle scrolling by lazy loading steps */\n    _refresh: function(step_index) {\n        var margin =\n            _.reduce(\n                this.$el.children(),\n                function(memo, child) {\n                    return memo + $(child).outerHeight();\n                },\n                0\n            ) -\n            this.$steps.height() +\n            90;\n        this.$steps.css(\"height\", $(window).height() - margin);\n    },\n\n    /** Configures form/step options for each workflow step */\n    _configure: function() {\n        var self = this;\n        this.forms = [];\n        this.steps = [];\n        this.links = [];\n        this.parms = [];\n        _.each(this.model.get(\"steps\"), function(step, i) {\n            Galaxy.emit.debug(\n                \"tool-form-composite::initialize()\",\n                i + \" : Preparing workflow step.\"\n            );\n            var icon = WorkflowIcons[step.step_type];\n            var title =\n                parseInt(i + 1) + \": \" + (step.step_label || step.step_name);\n            if (step.annotation) {\n                title += \" - \" + step.annotation;\n            }\n            if (step.step_version) {\n                title += \" (Galaxy Version \" + step.step_version + \")\";\n            }\n            step = Utils.merge(\n                {\n                    index: i,\n                    fixed_title: _.escape(title),\n                    icon: icon || \"\",\n                    help: null,\n                    citations: null,\n                    collapsible: true,\n                    collapsed: i > 0 && !self._isDataStep(step),\n                    sustain_version: true,\n                    sustain_repeats: true,\n                    sustain_conditionals: true,\n                    narrow: true,\n                    text_enable: \"Edit\",\n                    text_disable: \"Undo\",\n                    cls_enable: \"fa fa-edit\",\n                    cls_disable: \"fa fa-undo\",\n                    errors: step.messages,\n                    initial_errors: true,\n                    cls: \"ui-portlet-narrow\",\n                    hide_operations: true,\n                    needs_refresh: false,\n                    always_refresh: step.step_type != \"tool\"\n                },\n                step\n            );\n            self.steps[i] = step;\n            self.links[i] = [];\n            self.parms[i] = {};\n        });\n\n        // build linear index of step input pairs\n        _.each(this.steps, function(step, i) {\n            FormData.visitInputs(step.inputs, function(input, name) {\n                self.parms[i][name] = input;\n            });\n        });\n\n        // iterate through data input modules and collect linked sub steps\n        _.each(this.steps, function(step, i) {\n            _.each(step.output_connections, function(output_connection) {\n                _.each(self.steps, function(sub_step, j) {\n                    sub_step.step_index ===\n                        output_connection.input_step_index &&\n                        self.links[i].push(sub_step);\n                });\n            });\n        });\n\n        // convert all connected data inputs to hidden fields with proper labels,\n        // and track the linked source step\n        _.each(this.steps, function(step, i) {\n            _.each(self.steps, function(sub_step, j) {\n                var connections_by_name = {};\n                _.each(step.output_connections, function(connection) {\n                    sub_step.step_index === connection.input_step_index &&\n                        (connections_by_name[\n                            connection.input_name\n                        ] = connection);\n                });\n                _.each(self.parms[j], function(input, name) {\n                    var connection = connections_by_name[name];\n                    if (connection) {\n                        input.type = \"hidden\";\n                        input.help = input.step_linked ? input.help + \", \" : \"\";\n                        input.help +=\n                            \"Output dataset '\" +\n                            connection.output_name +\n                            \"' from step \" +\n                            (parseInt(i) + 1);\n                        input.step_linked = input.step_linked || [];\n                        input.step_linked.push(step);\n                    }\n                });\n            });\n        });\n\n        // identify and configure workflow parameters\n        var wp_count = 0;\n        this.wp_inputs = {};\n        function _handleWorkflowParameter(value, callback) {\n            var re = /\\$\\{(.+?)\\}/g,\n                match;\n            while ((match = re.exec(String(value)))) {\n                var wp_name = match[1];\n                callback(\n                    (self.wp_inputs[wp_name] = self.wp_inputs[wp_name] || {\n                        label: wp_name,\n                        name: wp_name,\n                        type: \"text\",\n                        color: \"hsl( \" + ++wp_count * 100 + \", 70%, 30% )\",\n                        style: \"ui-form-wp-source\",\n                        links: []\n                    })\n                );\n            }\n        }\n        _.each(this.steps, function(step, i) {\n            _.each(self.parms[i], function(input, name) {\n                _handleWorkflowParameter(input.value, function(wp_input) {\n                    wp_input.links.push(step);\n                    input.wp_linked = true;\n                    input.type = \"text\";\n                    input.backdrop = true;\n                    input.style = \"ui-form-wp-target\";\n                });\n            });\n            _.each(step.post_job_actions, function(pja) {\n                _.each(pja.action_arguments, function(arg) {\n                    _handleWorkflowParameter(arg, function() {});\n                });\n            });\n        });\n\n        // select fields are shown for dynamic fields if all putative data inputs are available,\n        // or if an explicit reference is specified as data_ref and available\n        _.each(this.steps, function(step, i) {\n            if (step.step_type == \"tool\") {\n                var data_resolved = true;\n                FormData.visitInputs(step.inputs, function(\n                    input,\n                    name,\n                    context\n                ) {\n                    var is_runtime_value =\n                        input.value && input.value.__class__ == \"RuntimeValue\";\n                    var is_data_input =\n                        [\"data\", \"data_collection\"].indexOf(input.type) != -1;\n                    var data_ref = context[input.data_ref];\n                    input.step_linked &&\n                        !self._isDataStep(input.step_linked) &&\n                        (data_resolved = false);\n                    input.options &&\n                        ((input.options.length == 0 && !data_resolved) ||\n                            input.wp_linked) &&\n                        (input.is_workflow = true);\n                    data_ref &&\n                        (input.is_workflow =\n                            (data_ref.step_linked &&\n                                !self._isDataStep(data_ref.step_linked)) ||\n                            input.wp_linked);\n                    (is_data_input ||\n                        (input.value &&\n                            input.value.__class__ == \"RuntimeValue\" &&\n                            !input.step_linked)) &&\n                        (step.collapsed = false);\n                    is_runtime_value && (input.value = input.default_value);\n                    input.flavor = \"workflow\";\n                    if (\n                        !is_runtime_value &&\n                        !is_data_input &&\n                        input.type !== \"hidden\" &&\n                        !input.wp_linked\n                    ) {\n                        if (\n                            input.optional ||\n                            (!Utils.isEmpty(input.value) && input.value !== \"\")\n                        ) {\n                            input.collapsible_value = input.value;\n                            input.collapsible_preview = true;\n                        }\n                    }\n                });\n            }\n        });\n    },\n\n    render: function() {\n        var self = this;\n        this.deferred.reset();\n        this._renderHeader();\n        this._renderMessage();\n        this._renderParameters();\n        this._renderHistory();\n        _.each(this.steps, function(step) {\n            self._renderStep(step);\n        });\n    },\n\n    /** Render header */\n    _renderHeader: function() {\n        var self = this;\n        this.execute_btn = new Ui.Button({\n            icon: \"fa-check\",\n            title: \"Run workflow\",\n            cls: \"btn btn-primary\",\n            onclick: function() {\n                self._execute();\n            }\n        });\n        this.$header\n            .addClass(\"ui-form-header\")\n            .empty()\n            .append(\n                new Ui.Label({\n                    title: \"Workflow: \" + this.model.get(\"name\")\n                }).$el\n            )\n            .append(this.execute_btn.$el);\n    },\n\n    /** Render message */\n    _renderMessage: function() {\n        this.$message.empty();\n        if (this.model.get(\"has_upgrade_messages\")) {\n            this.$message.append(\n                new Ui.Message({\n                    message:\n                        \"Some tools in this workflow may have changed since it was last saved or some errors were found. The workflow may still run, but any new options will have default values. Please review the messages below to make a decision about whether the changes will affect your analysis.\",\n                    status: \"warning\",\n                    persistent: true,\n                    fade: false\n                }).$el\n            );\n        }\n        var step_version_changes = this.model.get(\"step_version_changes\");\n        if (step_version_changes && step_version_changes.length > 0) {\n            this.$message.append(\n                new Ui.Message({\n                    message:\n                        \"Some tools are being executed with different versions compared to those available when this workflow was last saved because the other versions are not or no longer available on this Galaxy instance. To upgrade your workflow and dismiss this message simply edit the workflow and re-save it.\",\n                    status: \"warning\",\n                    persistent: true,\n                    fade: false\n                }).$el\n            );\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderParameters: function() {\n        var self = this;\n        this.wp_form = null;\n        if (!_.isEmpty(this.wp_inputs)) {\n            this.wp_form = new Form({\n                title: \"<b>Workflow Parameters</b>\",\n                inputs: this.wp_inputs,\n                cls: \"ui-portlet-narrow\",\n                onchange: function() {\n                    _.each(self.wp_form.input_list, function(input_def, i) {\n                        _.each(input_def.links, function(step) {\n                            self._refreshStep(step);\n                        });\n                    });\n                }\n            });\n            this._append(this.$steps.empty(), this.wp_form.$el);\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderHistory: function() {\n        this.history_form = new Form({\n            cls: \"ui-portlet-narrow\",\n            title: \"<b>History Options</b>\",\n            inputs: [\n                {\n                    type: \"conditional\",\n                    name: \"new_history\",\n                    test_param: {\n                        name: \"check\",\n                        label: \"Send results to a new history\",\n                        type: \"boolean\",\n                        value: \"false\",\n                        help: \"\"\n                    },\n                    cases: [\n                        {\n                            value: \"true\",\n                            inputs: [\n                                {\n                                    name: \"name\",\n                                    label: \"History name\",\n                                    type: \"text\",\n                                    value: this.model.get(\"name\")\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        });\n        this._append(this.$steps, this.history_form.$el);\n    },\n\n    /** Render step */\n    _renderStep: function(step) {\n        var self = this;\n        var form = null;\n        this.deferred.execute(function(promise) {\n            self.$steps.addClass(\"ui-steps\");\n            if (step.step_type == \"tool\") {\n                step.postchange = function(process, form) {\n                    var self = this;\n                    var current_state = {\n                        tool_id: step.id,\n                        tool_version: step.version,\n                        inputs: $.extend(true, {}, form.data.create())\n                    };\n                    form.wait(true);\n                    Galaxy.emit.debug(\n                        \"tool-form-composite::postchange()\",\n                        \"Sending current state.\",\n                        current_state\n                    );\n                    Utils.request({\n                        type: \"POST\",\n                        url: Galaxy.root + \"api/tools/\" + step.id + \"/build\",\n                        data: current_state,\n                        success: function(data) {\n                            form.update(data);\n                            form.wait(false);\n                            Galaxy.emit.debug(\n                                \"tool-form-composite::postchange()\",\n                                \"Received new model.\",\n                                data\n                            );\n                            process.resolve();\n                        },\n                        error: function(response) {\n                            Galaxy.emit.debug(\n                                \"tool-form-composite::postchange()\",\n                                \"Refresh request failed.\",\n                                response\n                            );\n                            process.reject();\n                        }\n                    });\n                };\n                form = new ToolFormBase(step);\n                if (step.post_job_actions && step.post_job_actions.length) {\n                    form.portlet.append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-form-element-disabled\")\n                            .append(\n                                $(\"<div/>\")\n                                    .addClass(\"ui-form-title\")\n                                    .html(\"<b>Job Post Actions</b>\")\n                            )\n                            .append(\n                                $(\"<div/>\")\n                                    .addClass(\"ui-form-preview\")\n                                    .html(\n                                        _.reduce(\n                                            step.post_job_actions,\n                                            function(memo, value) {\n                                                return (\n                                                    memo + \" \" + value.short_str\n                                                );\n                                            },\n                                            \"\"\n                                        )\n                                    )\n                            )\n                    );\n                }\n            } else {\n                var is_simple_input =\n                    [\"data_input\", \"data_collection_input\"].indexOf(\n                        step.step_type\n                    ) != -1;\n                _.each(step.inputs, function(input) {\n                    input.flavor = \"module\";\n                    input.hide_label = is_simple_input;\n                });\n                form = new Form(\n                    Utils.merge(\n                        {\n                            title: step.fixed_title,\n                            onchange: function() {\n                                _.each(self.links[step.index], function(link) {\n                                    self._refreshStep(link);\n                                });\n                            },\n                            inputs:\n                                step.inputs && step.inputs.length > 0\n                                    ? step.inputs\n                                    : [\n                                          {\n                                              type: \"hidden\",\n                                              name: \"No options available.\",\n                                              ignore: null\n                                          }\n                                      ]\n                        },\n                        step\n                    )\n                );\n            }\n            self.forms[step.index] = form;\n            self._append(self.$steps, form.$el);\n            self._refresh();\n            step.needs_refresh && self._refreshStep(step);\n            form.portlet[!self.show_progress ? \"enable\" : \"disable\"]();\n            self.show_progress &&\n                self.execute_btn.model.set({\n                    wait: true,\n                    wait_text: \"Preparing...\",\n                    percentage: (step.index + 1) * 100.0 / self.steps.length\n                });\n            Galaxy.emit.debug(\n                \"tool-form-composite::initialize()\",\n                step.index + \" : Workflow step state ready.\",\n                step\n            );\n            setTimeout(function() {\n                promise.resolve();\n            }, 0);\n        });\n    },\n\n    /** Refreshes step values from source step values */\n    _refreshStep: function(step) {\n        var self = this;\n        var form = this.forms[step.index];\n        if (form) {\n            _.each(self.parms[step.index], function(input, name) {\n                if (input.step_linked || input.wp_linked) {\n                    var field = form.field_list[form.data.match(name)];\n                    if (field) {\n                        var new_value = undefined;\n                        if (input.step_linked) {\n                            new_value = { values: [] };\n                            _.each(input.step_linked, function(source_step) {\n                                if (self._isDataStep(source_step)) {\n                                    var value = self.forms[\n                                        source_step.index\n                                    ].data.create().input;\n                                    value &&\n                                        _.each(value.values, function(v) {\n                                            new_value.values.push(v);\n                                        });\n                                }\n                            });\n                            if (\n                                !input.multiple &&\n                                new_value.values.length > 0\n                            ) {\n                                new_value = {\n                                    values: [new_value.values[0]]\n                                };\n                            }\n                        } else if (input.wp_linked) {\n                            new_value = input.value;\n                            var re = /\\$\\{(.+?)\\}/g,\n                                match;\n                            while ((match = re.exec(input.value))) {\n                                var wp_field =\n                                    self.wp_form.field_list[\n                                        self.wp_form.data.match(match[1])\n                                    ];\n                                var wp_value = wp_field && wp_field.value();\n                                if (wp_value) {\n                                    new_value = new_value\n                                        .split(match[0])\n                                        .join(wp_value);\n                                }\n                            }\n                        }\n                        if (new_value !== undefined) {\n                            field.value(new_value);\n                        }\n                    }\n                }\n            });\n            form.trigger(\"change\");\n        } else {\n            step.needs_refresh = true;\n        }\n    },\n\n    /** Refresh the history after job submission while form is shown */\n    _refreshHistory: function() {\n        var self = this;\n        var history =\n            parent.Galaxy &&\n            parent.Galaxy.currHistoryPanel &&\n            parent.Galaxy.currHistoryPanel.model;\n        this._refresh_history && clearTimeout(this._refresh_history);\n        if (history) {\n            history.refresh().success(function() {\n                if (history.numOfUnfinishedShownContents() === 0) {\n                    self._refresh_history = setTimeout(function() {\n                        self._refreshHistory();\n                    }, history.UPDATE_DELAY);\n                }\n            });\n        }\n    },\n\n    /** Build remaining steps */\n    _execute: function() {\n        var self = this;\n        this.show_progress = true;\n        this._enabled(false);\n        this.deferred.execute(function(promise) {\n            setTimeout(function() {\n                promise.resolve();\n                self._submit();\n            }, 0);\n        });\n    },\n\n    /** Validate and submit workflow */\n    _submit: function() {\n        var self = this;\n        var history_form_data = this.history_form.data.create();\n        var job_def = {\n            new_history_name: history_form_data[\"new_history|name\"]\n                ? history_form_data[\"new_history|name\"]\n                : null,\n            history_id: !history_form_data[\"new_history|name\"]\n                ? this.model.get(\"history_id\")\n                : null,\n            replacement_params: this.wp_form ? this.wp_form.data.create() : {},\n            parameters: {},\n            // Tool form will submit flat maps for each parameter\n            // (e.g. \"repeat_0|cond|param\": \"foo\" instead of nested\n            // data structures).\n            parameters_normalized: true,\n            // Tool form always wants a list of invocations back\n            // so that inputs can be batched.\n            batch: true\n        };\n        var validated = true;\n        for (var i in this.forms) {\n            var form = this.forms[i];\n            var job_inputs = form.data.create();\n            var step = self.steps[i];\n            var step_index = step.step_index;\n            form.trigger(\"reset\");\n            for (var job_input_id in job_inputs) {\n                var input_value = job_inputs[job_input_id];\n                var input_id = form.data.match(job_input_id);\n                var input_field = form.field_list[input_id];\n                var input_def = form.input_list[input_id];\n                if (!input_def.step_linked) {\n                    if (this._isDataStep(step)) {\n                        validated =\n                            input_value &&\n                            input_value.values &&\n                            input_value.values.length > 0;\n                    } else {\n                        validated =\n                            input_def.optional ||\n                            (input_def.is_workflow && input_value !== \"\") ||\n                            (!input_def.is_workflow && input_value !== null);\n                    }\n                    if (!validated) {\n                        form.highlight(input_id);\n                        break;\n                    }\n                    job_def.parameters[step_index] =\n                        job_def.parameters[step_index] || {};\n                    job_def.parameters[step_index][job_input_id] =\n                        job_inputs[job_input_id];\n                }\n            }\n            if (!validated) {\n                break;\n            }\n        }\n        if (!validated) {\n            self._enabled(true);\n            Galaxy.emit.debug(\n                \"tool-form-composite::submit()\",\n                \"Validation failed.\",\n                job_def\n            );\n        } else {\n            Galaxy.emit.debug(\n                \"tool-form-composite::submit()\",\n                \"Validation complete.\",\n                job_def\n            );\n            Utils.request({\n                type: \"POST\",\n                url:\n                    Galaxy.root +\n                    \"api/workflows/\" +\n                    this.model.id +\n                    \"/invocations\",\n                data: job_def,\n                success: function(response) {\n                    Galaxy.emit.debug(\n                        \"tool-form-composite::submit\",\n                        \"Submission successful.\",\n                        response\n                    );\n                    self.$el.children().hide();\n                    self.$el.append(self._templateSuccess(response));\n\n                    // Show Webhook if job is running\n                    if ($.isArray(response) && response.length > 0) {\n                        self.$el.append($(\"<div/>\", { id: \"webhook-view\" }));\n                        var WebhookApp = new Webhooks.WebhookView({\n                            urlRoot: Galaxy.root + \"api/webhooks/workflow\",\n                            toolId: job_def.tool_id,\n                            toolVersion: job_def.tool_version\n                        });\n                    }\n\n                    self._refreshHistory();\n                },\n                error: function(response) {\n                    Galaxy.emit.debug(\n                        \"tool-form-composite::submit\",\n                        \"Submission failed.\",\n                        response\n                    );\n                    var input_found = false;\n                    if (response && response.err_data) {\n                        for (var i in self.forms) {\n                            var form = self.forms[i];\n                            var step_related_errors =\n                                response.err_data[form.model.get(\"step_index\")];\n                            if (step_related_errors) {\n                                var error_messages = form.data.matchResponse(\n                                    step_related_errors\n                                );\n                                for (var input_id in error_messages) {\n                                    form.highlight(\n                                        input_id,\n                                        error_messages[input_id]\n                                    );\n                                    input_found = true;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (!input_found) {\n                        self.modal.show({\n                            title: \"Workflow submission failed\",\n                            body: self._templateError(\n                                job_def,\n                                response && response.err_msg\n                            ),\n                            buttons: {\n                                Close: function() {\n                                    self.modal.hide();\n                                }\n                            }\n                        });\n                    }\n                },\n                complete: function() {\n                    self._enabled(true);\n                }\n            });\n        }\n    },\n\n    /** Append new dom to body */\n    _append: function($container, $el) {\n        $container.append(\"<p/>\").append($el);\n    },\n\n    /** Set enabled/disabled state */\n    _enabled: function(enabled) {\n        this.execute_btn.model.set({\n            wait: !enabled,\n            wait_text: \"Sending...\",\n            percentage: -1\n        });\n        this.wp_form && this.wp_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        this.history_form &&\n            this.history_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        _.each(this.forms, function(form) {\n            form && form.portlet[enabled ? \"enable\" : \"disable\"]();\n        });\n    },\n\n    /** Is data input module/step */\n    _isDataStep: function(steps) {\n        var lst = $.isArray(steps) ? steps : [steps];\n        for (var i = 0; i < lst.length; i++) {\n            var step = lst[i];\n            if (\n                !step ||\n                !step.step_type ||\n                !step.step_type.startsWith(\"data\")\n            ) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    /** Templates */\n    _templateSuccess: function(response) {\n        if ($.isArray(response) && response.length > 0) {\n            return $(\"<div/>\")\n                .addClass(\"donemessagelarge\")\n                .append(\n                    $(\"<p/>\").html(\n                        \"Successfully invoked workflow <b>\" +\n                            Utils.sanitize(this.model.get(\"name\")) +\n                            \"</b>\" +\n                            (response.length > 1\n                                ? \" <b>\" + response.length + \" times</b>\"\n                                : \"\") +\n                            \".\"\n                    )\n                )\n                .append(\n                    $(\"<p/>\")\n                        .append(\"<b/>\")\n                        .text(\n                            \"You can check the status of queued jobs and view the resulting data by refreshing the History pane. When the job has been run the status will change from 'running' to 'finished' if completed successfully or 'error' if problems were encountered.\"\n                        )\n                );\n        } else {\n            return this._templateError(\n                response,\n                \"Invalid success response. No invocations found.\"\n            );\n        }\n    },\n\n    _templateError: function(response, err_msg) {\n        return $(\"<div/>\")\n            .addClass(\"errormessagelarge\")\n            .append(\n                $(\"<p/>\").text(\n                    \"The server could not complete the request. Please contact the Galaxy Team if this error persists. \" +\n                        (JSON.stringify(err_msg) || \"\")\n                )\n            )\n            .append($(\"<pre/>\").text(JSON.stringify(response, null, 4)));\n    }\n});\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/tool/tool-form-composite.js","import MODAL from \"mvc/ui/ui-modal\";\nimport ERROR_MODAL from \"mvc/ui/error-modal\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/**\n * A dialog/modal that allows copying a user history or 'importing' from user\n * another. Generally called via historyCopyDialog below.\n * @type {Object}\n */\nvar CopyDialog = {\n    // language related strings/fns\n    defaultName: _.template(\"Copy of '<%- name %>'\"),\n    title: _.template(_l(\"Copying history\") + ' \"<%- name %>\"'),\n    submitLabel: _l(\"Copy\"),\n    errorMessage: _l(\"History could not be copied.\"),\n    progressive: _l(\"Copying history\"),\n    activeLabel: _l(\"Copy only the active, non-deleted datasets\"),\n    allLabel: _l(\"Copy all datasets including deleted ones\"),\n    anonWarning:\n        _l(\n            \"As an anonymous user, unless you login or register, you will lose your current history \"\n        ) + _l(\"after copying this history. \"),\n\n    // template for modal body\n    _template: _.template(\n        [\n            //TODO: remove inline styles\n            // show a warning message for losing current to anon users\n            \"<% if( isAnon ){ %>\",\n            '<div class=\"warningmessage\">',\n            \"<%- anonWarning %>\",\n            _l(\"You can\"),\n            ' <a href=\"/user/login\">',\n            _l(\"login here\"),\n            \"</a> \",\n            _l(\"or\"),\n            \" \",\n            ' <a href=\"/user/create\">',\n            _l(\"register here\"),\n            \"</a>.\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<form>\",\n            '<label for=\"copy-modal-title\">',\n            _l(\"Enter a title for the new history\"),\n            \":\",\n            \"</label><br />\",\n            // TODO: could use required here and the form validators\n            // NOTE: use unescaped here if escaped in the modal function below\n            '<input id=\"copy-modal-title\" class=\"form-control\" style=\"width: 100%\" value=\"<%= name %>\" />',\n            '<p class=\"invalid-title bg-danger\" style=\"color: red; margin: 8px 0px 8px 0px; display: none\">',\n            _l(\"Please enter a valid history title\"),\n            \"</p>\",\n            // if allowAll, add the option to copy deleted datasets, too\n            \"<% if( allowAll ){ %>\",\n            \"<br />\",\n            \"<p>\",\n            _l(\"Choose which datasets from the original history to include:\"),\n            \"</p>\",\n            // copy non-deleted is the default\n            '<input name=\"copy-what\" type=\"radio\" id=\"copy-non-deleted\" value=\"copy-non-deleted\" ',\n            '<% if( copyWhat === \"copy-non-deleted\" ){ print( \"checked\" ); } %>/>',\n            '<label for=\"copy-non-deleted\"> <%- activeLabel %></label>',\n            \"<br />\",\n            '<input name=\"copy-what\" type=\"radio\" id=\"copy-all\" value=\"copy-all\" ',\n            '<% if( copyWhat === \"copy-all\" ){ print( \"checked\" ); } %>/>',\n            '<label for=\"copy-all\"> <%- allLabel %></label>',\n            \"<% } %>\",\n            \"</form>\"\n        ].join(\"\")\n    ),\n\n    // empty modal body and let the user know the copy is happening\n    _showAjaxIndicator: function _showAjaxIndicator() {\n        var indicator =\n            '<p><span class=\"fa fa-spinner fa-spin\"></span> ' +\n            this.progressive +\n            \"...</p>\";\n        this.modal\n            .$(\".modal-body\")\n            .empty()\n            .append(indicator)\n            .css({ \"margin-top\": \"8px\" });\n    },\n\n    // (sorta) public interface - display the modal, render the form, and potentially copy the history\n    // returns a jQuery.Deferred done->history copied, fail->user cancelled\n    dialog: function _dialog(modal, history, options) {\n        options = options || {};\n\n        var dialog = this,\n            deferred = jQuery.Deferred(),\n            // TODO: getting a little byzantine here\n            defaultCopyNameFn = options.nameFn || this.defaultName,\n            defaultCopyName = defaultCopyNameFn({\n                name: history.get(\"name\")\n            }),\n            // TODO: these two might be simpler as one 3 state option (all,active,no-choice)\n            defaultCopyWhat = options.allDatasets\n                ? \"copy-all\"\n                : \"copy-non-deleted\",\n            allowAll = !_.isUndefined(options.allowAll)\n                ? options.allowAll\n                : true,\n            autoClose = !_.isUndefined(options.autoClose)\n                ? options.autoClose\n                : true;\n\n        this.modal = modal;\n\n        // validate the name and copy if good\n        function checkNameAndCopy() {\n            var name = modal.$(\"#copy-modal-title\").val();\n            if (!name) {\n                modal.$(\".invalid-title\").show();\n                return;\n            }\n            // get further settings, shut down and indicate the ajax call, then hide and resolve/reject\n            var copyAllDatasets =\n                modal.$('input[name=\"copy-what\"]:checked').val() === \"copy-all\";\n            modal.$(\"button\").prop(\"disabled\", true);\n            dialog._showAjaxIndicator();\n            history\n                .copy(true, name, copyAllDatasets)\n                .done(function(response) {\n                    deferred.resolve(response);\n                })\n                .fail(function(xhr, status, message) {\n                    var options = {\n                        name: name,\n                        copyAllDatasets: copyAllDatasets\n                    };\n                    ERROR_MODAL.ajaxErrorModal(\n                        history,\n                        xhr,\n                        options,\n                        dialog.errorMessage\n                    );\n                    deferred.rejectWith(deferred, arguments);\n                })\n                .done(function() {\n                    if (autoClose) {\n                        modal.hide();\n                    }\n                });\n        }\n\n        var originalClosingCallback = options.closing_callback;\n        modal.show(\n            _.extend(options, {\n                title: this.title({ name: history.get(\"name\") }),\n                body: $(\n                    dialog._template({\n                        name: defaultCopyName,\n                        isAnon: Galaxy.user.isAnonymous(),\n                        allowAll: allowAll,\n                        copyWhat: defaultCopyWhat,\n                        activeLabel: this.activeLabel,\n                        allLabel: this.allLabel,\n                        anonWarning: this.anonWarning\n                    })\n                ),\n                buttons: _.object([\n                    [\n                        _l(\"Cancel\"),\n                        function() {\n                            modal.hide();\n                        }\n                    ],\n                    [this.submitLabel, checkNameAndCopy]\n                ]),\n                height: \"auto\",\n                closing_events: true,\n                closing_callback: function _historyCopyClose(cancelled) {\n                    if (cancelled) {\n                        deferred.reject({ cancelled: true });\n                    }\n                    if (originalClosingCallback) {\n                        originalClosingCallback(cancelled);\n                    }\n                }\n            })\n        );\n\n        // set the default dataset copy, autofocus the title, and set up for a simple return\n        modal\n            .$(\"#copy-modal-title\")\n            .focus()\n            .select();\n        modal.$(\"#copy-modal-title\").on(\"keydown\", function(ev) {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                checkNameAndCopy();\n            }\n        });\n\n        return deferred;\n    }\n};\n\n//==============================================================================\n// maintain the (slight) distinction between copy and import\n/**\n * Subclass CopyDialog to use the import language.\n */\nvar ImportDialog = _.extend({}, CopyDialog, {\n    defaultName: _.template(\"imported: <%- name %>\"),\n    title: _.template(_l(\"Importing history\") + ' \"<%- name %>\"'),\n    submitLabel: _l(\"Import\"),\n    errorMessage: _l(\"History could not be imported.\"),\n    progressive: _l(\"Importing history\"),\n    activeLabel: _l(\"Import only the active, non-deleted datasets\"),\n    allLabel: _l(\"Import all datasets including deleted ones\"),\n    anonWarning:\n        _l(\n            \"As an anonymous user, unless you login or register, you will lose your current history \"\n        ) + _l(\"after importing this history. \")\n});\n\n//==============================================================================\n/**\n * Main interface for both history import and history copy dialogs.\n * @param  {Backbone.Model} history     the history to copy\n * @param  {Object}         options     a hash\n * @return {jQuery.Deferred}            promise that fails on close and succeeds on copy\n *\n * options:\n *     (this object is also passed to the modal used to display the dialog and accepts modal options)\n *     {Function} nameFn    if defined, use this to build the default name shown to the user\n *                          (the fn is passed: {name: <original history's name>})\n *     {bool} useImport     if true, use the 'import' language (instead of Copy)\n *     {bool} allowAll      if true, allow the user to choose between copying all datasets and\n *                          only non-deleted datasets\n *     {String} allDatasets default initial checked radio button: 'copy-all' or 'copy-non-deleted',\n */\nvar historyCopyDialog = function(history, options) {\n    options = options || {};\n    // create our own modal if Galaxy doesn't have one (mako tab without use_panels)\n    var modal = window.parent.Galaxy.modal || new MODAL.View({});\n    return options.useImport\n        ? ImportDialog.dialog(modal, history, options)\n        : CopyDialog.dialog(modal, history, options);\n};\n\n//==============================================================================\nexport default historyCopyDialog;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/copy-dialog.js","define([\"utils/localization\"], function(_l) {\n    \"use strict\";\n\n    //TODO: toastr is another possibility - I didn't see where I might add details, tho\n\n    /* ============================================================================\nError modals meant to replace the o-so-easy alerts.\n\nThese are currently styled as errormessages but use the Galaxy.modal\ninfrastructure to be shown/closed. They're capable of showing details in a\ntogglable dropdown and the details are formatted in a pre.\n\nExample:\n    errorModal( 'Heres a message', 'A Title', { some_details: 'here' });\n    errorModal( 'Heres a message' ); // no details, title is 'Error'\n\nThere are three specialized forms:\n    offlineErrorModal       a canned response for when there's no connection\n    badGatewayErrorModal    canned response for when Galaxy is restarting\n    ajaxErrorModal          plugable into any Backbone class as an\n        error event handler by accepting the error args: model, xhr, options\n\nExamples:\n    if( navigator.offLine ){ offlineErrorModal(); }\n    if( xhr.status === 502 ){ badGatewayErrorModal(); }\n    this.listenTo( this.model, 'error', ajaxErrorModal );\n\n============================================================================ */\n\n    var CONTACT_MSG = _l(\n        \"Please contact a Galaxy administrator if the problem persists.\"\n    );\n    var DEFAULT_AJAX_ERR_MSG = _l(\n        \"An error occurred while updating information with the server.\"\n    );\n    var DETAILS_MSG = _l(\n        \"The following information can assist the developers in finding the source of the error:\"\n    );\n\n    /** private helper that builds the modal and handles adding details */\n    function _errorModal(message, title, details) {\n        // create and return the modal, adding details button only if needed\n        Galaxy.modal.show({\n            title: title,\n            body: message,\n            closing_events: true,\n            buttons: {\n                Ok: function() {\n                    Galaxy.modal.hide();\n                }\n            }\n        });\n        Galaxy.modal.$el.addClass(\"error-modal\");\n\n        if (details) {\n            Galaxy.modal\n                .$(\".error-details\")\n                .add(Galaxy.modal.$('button:contains(\"Details\")'))\n                .remove();\n            $(\"<div/>\")\n                .addClass(\"error-details\")\n                .hide()\n                .appendTo(Galaxy.modal.$(\".modal-content\"))\n                .append([\n                    $(\"<p/>\").text(DETAILS_MSG),\n                    $(\"<pre/>\").text(JSON.stringify(details, null, \"  \"))\n                ]);\n\n            $(\n                '<button id=\"button-1\" class=\"pull-left\">' +\n                    _l(\"Details\") +\n                    \"</button>\"\n            )\n                .appendTo(Galaxy.modal.$(\".buttons\"))\n                .click(function() {\n                    Galaxy.modal.$(\".error-details\").toggle();\n                });\n        }\n        return Galaxy.modal;\n    }\n\n    /** Display a modal showing an error message but fallback to alert if there's no modal */\n    function errorModal(message, title, details) {\n        if (!message) {\n            return;\n        }\n\n        message = _l(message);\n        title = _l(title) || _l(\"Error:\");\n        if (window.Galaxy && Galaxy.modal) {\n            return _errorModal(message, title, details);\n        }\n\n        alert(title + \"\\n\\n\" + message);\n        console.log(\"error details:\", JSON.stringify(details));\n    }\n\n    // ----------------------------------------------------------------------------\n    /** display a modal when the user may be offline */\n    function offlineErrorModal() {\n        return errorModal(\n            _l(\n                \"You appear to be offline. Please check your connection and try again.\"\n            ),\n            _l(\"Offline?\")\n        );\n    }\n\n    // ----------------------------------------------------------------------------\n    /** 502 messages that should be displayed when galaxy is restarting */\n    function badGatewayErrorModal() {\n        return errorModal(\n            _l(\n                \"Galaxy is currently unreachable. Please try again in a few minutes.\"\n            ) +\n                \" \" +\n                CONTACT_MSG,\n            _l(\"Cannot connect to Galaxy\")\n        );\n    }\n\n    // ----------------------------------------------------------------------------\n    /** display a modal (with details) about a failed Backbone ajax operation */\n    function ajaxErrorModal(model, xhr, options, message, title) {\n        message = message || DEFAULT_AJAX_ERR_MSG;\n        message += \" \" + CONTACT_MSG;\n        title = title || _l(\"An error occurred\");\n        var details = _ajaxDetails(model, xhr, options);\n        return errorModal(message, title, details);\n    }\n\n    /** build details which may help debugging the ajax call */\n    function _ajaxDetails(model, xhr, options) {\n        return {\n            //TODO: still can't manage Raven id\n            raven: _.result(window.Raven, \"lastEventId\"),\n            userAgent: navigator.userAgent,\n            onLine: navigator.onLine,\n            version: _.result(Galaxy.config, \"version_major\"),\n            xhr: _.omit(xhr, _.functions(xhr)),\n            options: _.omit(options, \"xhr\"),\n            // add ajax data from Galaxy object cache\n            url: _.result(Galaxy.lastAjax, \"url\"),\n            data: _.result(Galaxy.lastAjax, \"data\"),\n            // backbone stuff (auto-redacting email for user)\n            model: _.result(model, \"toJSON\", model + \"\"),\n            user: _.omit(_.result(Galaxy.user, \"toJSON\"), \"email\")\n        };\n    }\n\n    //=============================================================================\n    return {\n        errorModal: errorModal,\n        offlineErrorModal: offlineErrorModal,\n        badGatewayErrorModal: badGatewayErrorModal,\n        ajaxErrorModal: ajaxErrorModal\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/error-modal.js","import _ from \"libs/underscore\";\nimport Backbone from \"libs/backbone\";\nimport BASE_MVC from \"mvc/base-mvc\";\n\n//=============================================================================\n/**\n * A Collection that can be limited/offset/re-ordered/filtered.\n * @type {Backbone.Collection}\n */\nvar ControlledFetchCollection = Backbone.Collection.extend({\n    /** call setOrder on initialization to build the comparator based on options */\n    initialize: function(models, options) {\n        Backbone.Collection.prototype.initialize.call(this, models, options);\n        this.setOrder(options.order || this.order, { silent: true });\n    },\n\n    /** set up to track order changes and re-sort when changed */\n    _setUpListeners: function() {\n        return this.on({\n            \"changed-order\": this.sort\n        });\n    },\n\n    /** override to provide order and offsets based on instance vars, set limit if passed,\n     *  and set allFetched/fire 'all-fetched' when xhr returns\n     */\n    fetch: function(options) {\n        options = this._buildFetchOptions(options);\n        Galaxy.debug(\"fetch options:\", options);\n        return Backbone.Collection.prototype.fetch.call(this, options);\n    },\n\n    /** build ajax data/parameters from options */\n    _buildFetchOptions: function(options) {\n        // note: we normally want options passed in to override the defaults built here\n        // so most of these fns will generate defaults\n        options = _.clone(options) || {};\n        var self = this;\n\n        // jquery ajax option; allows multiple q/qv for filters (instead of 'q[]')\n        options.traditional = true;\n\n        // options.data\n        // we keep limit, offset, etc. in options *as well as move it into data* because:\n        // - it makes fetch calling convenient to add it to a single options map (instead of as mult. args)\n        // - it allows the std. event handlers (for fetch, etc.) to have access\n        //   to the pagination options too\n        //      (i.e. this.on( 'sync', function( options ){ if( options.limit ){ ... } }))\n        // however, when we send to xhr/jquery we copy them to data also so that they become API query params\n        options.data = options.data || self._buildFetchData(options);\n        Galaxy.debug(\"data:\", options.data);\n\n        // options.data.filters --> options.data.q, options.data.qv\n        var filters = this._buildFetchFilters(options);\n        Galaxy.debug(\"filters:\", filters);\n        if (!_.isEmpty(filters)) {\n            _.extend(options.data, this._fetchFiltersToAjaxData(filters));\n        }\n        Galaxy.debug(\"data:\", options.data);\n        return options;\n    },\n\n    /** Build the dictionary to send to fetch's XHR as data */\n    _buildFetchData: function(options) {\n        var defaults = {};\n        if (this.order) {\n            defaults.order = this.order;\n        }\n        return _.defaults(_.pick(options, this._fetchParams), defaults);\n    },\n\n    /** These attribute keys are valid params to fetch/API-index */\n    _fetchParams: [\n        /** model dependent string to control the order of models returned */\n        \"order\",\n        /** limit the number of models returned from a fetch */\n        \"limit\",\n        /** skip this number of models when fetching */\n        \"offset\",\n        /** what series of attributes to return (model dependent) */\n        \"view\",\n        /** individual keys to return for the models (see api/histories.index) */\n        \"keys\"\n    ],\n\n    /** add any needed filters here based on collection state */\n    _buildFetchFilters: function(options) {\n        // override\n        return _.clone(options.filters || {});\n    },\n\n    /** Convert dictionary filters to qqv style arrays */\n    _fetchFiltersToAjaxData: function(filters) {\n        // return as a map so ajax.data can extend from it\n        var filterMap = {\n            q: [],\n            qv: []\n        };\n        _.each(filters, function(v, k) {\n            // don't send if filter value is empty\n            if (v === undefined || v === \"\") {\n                return;\n            }\n            // json to python\n            if (v === true) {\n                v = \"True\";\n            }\n            if (v === false) {\n                v = \"False\";\n            }\n            if (v === null) {\n                v = \"None\";\n            }\n            // map to k/v arrays (q/qv)\n            filterMap.q.push(k);\n            filterMap.qv.push(v);\n        });\n        return filterMap;\n    },\n\n    /** override to reset allFetched flag to false */\n    reset: function(models, options) {\n        this.allFetched = false;\n        return Backbone.Collection.prototype.reset.call(this, models, options);\n    },\n\n    // ........................................................................ order\n    order: null,\n\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: {\n        update_time: BASE_MVC.buildComparator(\"update_time\", {\n            ascending: false\n        }),\n        \"update_time-asc\": BASE_MVC.buildComparator(\"update_time\", {\n            ascending: true\n        }),\n        create_time: BASE_MVC.buildComparator(\"create_time\", {\n            ascending: false\n        }),\n        \"create_time-asc\": BASE_MVC.buildComparator(\"create_time\", {\n            ascending: true\n        })\n    },\n\n    /** set the order and comparator for this collection then sort with the new order\n     *  @event 'changed-order' passed the new order and the collection\n     */\n    setOrder: function(order, options) {\n        options = options || {};\n        var collection = this;\n        var comparator = collection.comparators[order];\n        if (_.isUndefined(comparator)) {\n            throw new Error(\"unknown order: \" + order);\n        }\n        // if( _.isUndefined( comparator ) ){ return; }\n        if (comparator === collection.comparator) {\n            return;\n        }\n\n        collection.order = order;\n        collection.comparator = comparator;\n\n        if (!options.silent) {\n            collection.trigger(\"changed-order\", options);\n        }\n        return collection;\n    }\n});\n\n//=============================================================================\n/**\n *\n */\nvar PaginatedCollection = ControlledFetchCollection.extend({\n    /** @type {Number} limit used for each page's fetch */\n    limitPerPage: 500,\n\n    initialize: function(models, options) {\n        ControlledFetchCollection.prototype.initialize.call(\n            this,\n            models,\n            options\n        );\n        this.currentPage = options.currentPage || 0;\n    },\n\n    getTotalItemCount: function() {\n        return this.length;\n    },\n\n    shouldPaginate: function() {\n        return this.getTotalItemCount() >= this.limitPerPage;\n    },\n\n    getLastPage: function() {\n        return Math.floor(this.getTotalItemCount() / this.limitPerPage);\n    },\n\n    getPageCount: function() {\n        return this.getLastPage() + 1;\n    },\n\n    getPageLimitOffset: function(pageNum) {\n        pageNum = this.constrainPageNum(pageNum);\n        return {\n            limit: this.limitPerPage,\n            offset: pageNum * this.limitPerPage\n        };\n    },\n\n    constrainPageNum: function(pageNum) {\n        return Math.max(0, Math.min(pageNum, this.getLastPage()));\n    },\n\n    /** fetch the next page of data */\n    fetchPage: function(pageNum, options) {\n        var self = this;\n        pageNum = self.constrainPageNum(pageNum);\n        self.currentPage = pageNum;\n        options = _.defaults(options || {}, self.getPageLimitOffset(pageNum));\n\n        self.trigger(\"fetching-more\");\n        return self.fetch(options).always(function() {\n            self.trigger(\"fetching-more-done\");\n        });\n    },\n\n    fetchCurrentPage: function(options) {\n        return this.fetchPage(this.currentPage, options);\n    },\n\n    fetchPrevPage: function(options) {\n        return this.fetchPage(this.currentPage - 1, options);\n    },\n\n    fetchNextPage: function(options) {\n        return this.fetchPage(this.currentPage + 1, options);\n    }\n});\n\n//=============================================================================\n/**\n * A Collection that will load more elements without reseting.\n */\nvar InfinitelyScrollingCollection = ControlledFetchCollection.extend({\n    /** @type {Number} limit used for the first fetch (or a reset) */\n    limitOnFirstFetch: null,\n    /** @type {Number} limit used for each subsequent fetch */\n    limitPerFetch: 100,\n\n    initialize: function(models, options) {\n        ControlledFetchCollection.prototype.initialize.call(\n            this,\n            models,\n            options\n        );\n        /** @type {Integer} number of contents to return from the first fetch */\n        this.limitOnFirstFetch =\n            options.limitOnFirstFetch || this.limitOnFirstFetch;\n        /** @type {Integer} limit for every fetch after the first */\n        this.limitPerFetch = options.limitPerFetch || this.limitPerFetch;\n        /** @type {Boolean} are all contents fetched? */\n        this.allFetched = false;\n        /** @type {Integer} what was the offset of the last content returned */\n        this.lastFetched = options.lastFetched || 0;\n    },\n\n    /** build ajax data/parameters from options */\n    _buildFetchOptions: function(options) {\n        // options (options for backbone.fetch and jquery.ajax generally)\n        // backbone option; false here to make fetching an addititive process\n        options.remove = options.remove || false;\n        return ControlledFetchCollection.prototype._buildFetchOptions.call(\n            this,\n            options\n        );\n    },\n\n    /** fetch the first 'page' of data */\n    fetchFirst: function(options) {\n        Galaxy.debug(\"ControlledFetchCollection.fetchFirst:\", options);\n        options = options ? _.clone(options) : {};\n        this.allFetched = false;\n        this.lastFetched = 0;\n        return this.fetchMore(\n            _.defaults(options, {\n                reset: true,\n                limit: this.limitOnFirstFetch\n            })\n        );\n    },\n\n    /** fetch the next page of data */\n    fetchMore: function(options) {\n        Galaxy.debug(\"ControlledFetchCollection.fetchMore:\", options);\n        options = _.clone(options || {});\n        var collection = this;\n\n        Galaxy.debug(\"fetchMore, options.reset:\", options.reset);\n        if (!options.reset && collection.allFetched) {\n            return jQuery.when();\n        }\n\n        // TODO: this fails in the edge case where\n        //  the first fetch offset === limit (limit 4, offset 4, collection.length 4)\n        if (options.reset) {\n            options.offset = 0;\n        } else if (options.offset === undefined) {\n            options.offset = collection.lastFetched;\n        }\n        var limit = (options.limit =\n            options.limit || collection.limitPerFetch || null);\n        Galaxy.debug(\"fetchMore, limit:\", limit, \"offset:\", options.offset);\n\n        collection.trigger(\"fetching-more\");\n        return (\n            collection\n                .fetch(options)\n                .always(function() {\n                    collection.trigger(\"fetching-more-done\");\n                })\n                // maintain allFetched flag and trigger if all were fetched this time\n                .done(function _postFetchMore(fetchedData) {\n                    var numFetched = _.isArray(fetchedData)\n                        ? fetchedData.length\n                        : 0;\n                    collection.lastFetched += numFetched;\n                    Galaxy.debug(\n                        \"fetchMore, lastFetched:\",\n                        collection.lastFetched\n                    );\n                    // anything less than a full page means we got all there is to get\n                    if (!limit || numFetched < limit) {\n                        collection.allFetched = true;\n                        collection.trigger(\"all-fetched\", this);\n                    }\n                })\n        );\n    },\n\n    /** fetch all the collection */\n    fetchAll: function(options) {\n        // whitelist options to prevent allowing limit/offset/filters\n        // (use vanilla fetch instead)\n        options = options || {};\n        var self = this;\n        options = _.pick(options, \"silent\");\n        options.filters = {};\n        return self.fetch(options).done(function() {\n            self.allFetched = true;\n            self.trigger(\"all-fetched\", self);\n        });\n    }\n});\n\n//==============================================================================\nexport default {\n    ControlledFetchCollection: ControlledFetchCollection,\n    PaginatedCollection: PaginatedCollection,\n    InfinitelyScrollingCollection: InfinitelyScrollingCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/base/controlled-fetch-collection.js","import DATASET from \"mvc/dataset/dataset-model\";\nimport HISTORY_CONTENT from \"mvc/history/history-content-model\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET.DatasetAssociation,\n    hcontentMixin = HISTORY_CONTENT.HistoryContentMixin;\n/** @class (HDA) model for a Galaxy dataset contained in and related to a history.\n */\nvar HistoryDatasetAssociation = _super.extend(\n    BASE_MVC.mixin(\n        hcontentMixin,\n        /** @lends HistoryDatasetAssociation.prototype */ {\n            /** default attributes for a model */\n            defaults: _.extend(\n                {},\n                _super.prototype.defaults,\n                hcontentMixin.defaults,\n                {\n                    history_content_type: \"dataset\",\n                    model_class: \"HistoryDatasetAssociation\"\n                }\n            )\n        }\n    )\n);\n\n//==============================================================================\nexport default {\n    HistoryDatasetAssociation: HistoryDatasetAssociation\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hda-model.js","import LIST_ITEM from \"mvc/list/list-item\";\nimport LoadingIndicator from \"ui/loading-indicator\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/search-input\";\n\nvar logNamespace = \"list\";\n/* ============================================================================\nTODO:\n\n============================================================================ */\n/** @class View for a list/collection of models and the sub-views of those models.\n *      Sub-views must (at least have the interface if not) inherit from ListItemView.\n *      (For a list panel that also includes some 'container' model (History->HistoryContents)\n *      use ModelWithListPanel)\n *\n *  Allows for:\n *      searching collection/sub-views\n *      selecting/multi-selecting sub-views\n *\n *  Currently used:\n *      for dataset/dataset-choice\n *      as superclass of ModelListPanel\n */\nvar ListPanel = Backbone.View.extend(BASE_MVC.LoggableMixin).extend(\n    /** @lends ListPanel.prototype */ {\n        _logNamespace: logNamespace,\n\n        /** class to use for constructing the sub-views */\n        viewClass: LIST_ITEM.ListItemView,\n        /** class to used for constructing collection of sub-view models */\n        collectionClass: Backbone.Collection,\n\n        tagName: \"div\",\n        className: \"list-panel\",\n\n        /** (in ms) that jquery effects will use */\n        fxSpeed: \"fast\",\n\n        /** string to display when the collection has no contents */\n        emptyMsg: _l(\"This list is empty\"),\n        /** displayed when no items match the search terms */\n        noneFoundMsg: _l(\"No matching items found\"),\n        /** string used for search placeholder */\n        searchPlaceholder: _l(\"search\"),\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the list\n     */\n        initialize: function(attributes, options) {\n            attributes = attributes || {};\n            // set the logger if requested\n            if (attributes.logger) {\n                this.logger = attributes.logger;\n            }\n            this.log(this + \".initialize:\", attributes);\n\n            // ---- instance vars\n            /** how quickly should jquery fx run? */\n            this.fxSpeed = _.has(attributes, \"fxSpeed\")\n                ? attributes.fxSpeed\n                : this.fxSpeed;\n\n            /** filters for displaying subviews */\n            this.filters = [];\n            /** current search terms */\n            this.searchFor = attributes.searchFor || \"\";\n\n            /** loading indicator */\n            // this.indicator = new LoadingIndicator( this.$el );\n\n            /** currently showing selectors on items? */\n            this.selecting =\n                attributes.selecting !== undefined\n                    ? attributes.selecting\n                    : true;\n            //this.selecting = false;\n\n            /** cached selected item.model.ids to persist btwn renders */\n            this.selected = attributes.selected || [];\n            /** the last selected item.model.id */\n            this.lastSelected = null;\n\n            /** are sub-views draggable */\n            this.dragItems = attributes.dragItems || false;\n\n            /** list item view class (when passed models) */\n            this.viewClass = attributes.viewClass || this.viewClass;\n\n            /** list item views */\n            this.views = [];\n            /** list item models */\n            this.collection =\n                attributes.collection || this._createDefaultCollection();\n\n            /** filter fns run over collection items to see if they should show in the list */\n            this.filters = attributes.filters || [];\n\n            /** override $scrollContainer fn via attributes - fn should return jq for elem to call scrollTo on */\n            this.$scrollContainer =\n                attributes.$scrollContainer || this.$scrollContainer;\n\n            /** @type {String} generic title */\n            this.title = attributes.title || \"\";\n            /** @type {String} generic subtitle */\n            this.subtitle = attributes.subtitle || \"\";\n\n            this._setUpListeners();\n        },\n\n        // ------------------------------------------------------------------------ listeners\n        /** create any event listeners for the list */\n        _setUpListeners: function() {\n            this.off();\n\n            //TODO: move errorHandler down into list-view from history-view or\n            //  pass to global error handler (Galaxy)\n            this.on({\n                error: function(model, xhr, options, msg, details) {\n                    //this.errorHandler( model, xhr, options, msg, details );\n                    console.error(model, xhr, options, msg, details);\n                },\n                // show hide the loading indicator\n                loading: function() {\n                    this._showLoadingIndicator(\"loading...\", 40);\n                },\n                \"loading-done\": function() {\n                    this._hideLoadingIndicator(40);\n                }\n            });\n\n            // throw the first render up as a diff namespace using once (for outside consumption)\n            this.once(\"rendered\", function() {\n                this.trigger(\"rendered:initial\", this);\n            });\n\n            this._setUpCollectionListeners();\n            this._setUpViewListeners();\n            return this;\n        },\n\n        /** create and return a collection for when none is initially passed */\n        _createDefaultCollection: function() {\n            // override\n            return new this.collectionClass([]);\n        },\n\n        /** listening for collection events */\n        _setUpCollectionListeners: function() {\n            this.log(this + \"._setUpCollectionListeners\", this.collection);\n            this.stopListening(this.collection);\n\n            // bubble up error events\n            this.listenTo(this.collection, {\n                error: function(model, xhr, options, msg, details) {\n                    this.trigger(\"error\", model, xhr, options, msg, details);\n                },\n                update: function(collection, options) {\n                    var changes = options.changes;\n                    // console.info( collection + ', update:', changes, '\\noptions:', options );\n                    // more than one: render everything\n                    if (\n                        options.renderAll ||\n                        changes.added.length + changes.removed.length > 1\n                    ) {\n                        return this.renderItems();\n                    }\n                    // otherwise, let the single add/remove handlers do it\n                    if (changes.added.length === 1) {\n                        return this.addItemView(\n                            _.first(changes.added),\n                            collection,\n                            options\n                        );\n                    }\n                    if (changes.removed.length === 1) {\n                        return this.removeItemView(\n                            _.first(changes.removed),\n                            collection,\n                            options\n                        );\n                    }\n                }\n            });\n            return this;\n        },\n\n        /** listening for sub-view events that bubble up with the 'view:' prefix */\n        _setUpViewListeners: function() {\n            this.log(this + \"._setUpViewListeners\");\n\n            // shift to select a range\n            this.on({\n                \"view:selected\": function(view, ev) {\n                    if (ev && ev.shiftKey && this.lastSelected) {\n                        var lastSelectedView = this.viewFromModelId(\n                            this.lastSelected\n                        );\n                        if (lastSelectedView) {\n                            this.selectRange(view, lastSelectedView);\n                        }\n                    } else if (ev && ev.altKey && !this.selecting) {\n                        this.showSelectors();\n                    }\n                    this.selected.push(view.model.id);\n                    this.lastSelected = view.model.id;\n                },\n\n                \"view:de-selected\": function(view, ev) {\n                    this.selected = _.without(this.selected, view.model.id);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ rendering\n        /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n        render: function(speed) {\n            this.log(this + \".render\", speed);\n            var $newRender = this._buildNewRender();\n            this._setUpBehaviors($newRender);\n            this._queueNewRender($newRender, speed);\n            return this;\n        },\n\n        /** Build a temp div containing the new children for the view's $el. */\n        _buildNewRender: function() {\n            this.debug(this + \"(ListPanel)._buildNewRender\");\n            var $newRender = $(this.templates.el({}, this));\n            this._renderControls($newRender);\n            this._renderTitle($newRender);\n            this._renderSubtitle($newRender);\n            this._renderSearch($newRender);\n            this.renderItems($newRender);\n            return $newRender;\n        },\n\n        /** Build a temp div containing the new children for the view's $el. */\n        _renderControls: function($newRender) {\n            this.debug(this + \"(ListPanel)._renderControls\");\n            var $controls = $(this.templates.controls({}, this));\n            $newRender.find(\".controls\").replaceWith($controls);\n            return $controls;\n        },\n\n        /** return a jQuery object containing the title DOM */\n        _renderTitle: function($where) {\n            //$where = $where || this.$el;\n            //$where.find( '.title' ).replaceWith( ... )\n        },\n\n        /** return a jQuery object containing the subtitle DOM (if any) */\n        _renderSubtitle: function($where) {\n            //$where = $where || this.$el;\n            //$where.find( '.title' ).replaceWith( ... )\n        },\n\n        /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n        _queueNewRender: function($newRender, speed) {\n            speed = speed === undefined ? this.fxSpeed : speed;\n            var panel = this;\n            panel.log(\"_queueNewRender:\", $newRender, speed);\n\n            $(panel).queue(\"fx\", [\n                function(next) {\n                    panel.$el.fadeOut(speed, next);\n                },\n                function(next) {\n                    panel._swapNewRender($newRender);\n                    next();\n                },\n                function(next) {\n                    panel.$el.fadeIn(speed, next);\n                },\n                function(next) {\n                    panel.trigger(\"rendered\", panel);\n                    next();\n                }\n            ]);\n        },\n\n        /** empty out the current el, move the $newRender's children in */\n        _swapNewRender: function($newRender) {\n            this.$el\n                .empty()\n                .attr(\"class\", this.className)\n                .append($newRender.children());\n            if (this.selecting) {\n                this.showSelectors(0);\n            }\n            return this;\n        },\n\n        /** Set up any behaviors, handlers (ep. plugins) that need to be called when the entire view has been built but\n     *  not attached to the page yet.\n     */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            this.$controls($where)\n                .find(\"[title]\")\n                .tooltip();\n            // set up the pupup for actions available when multi selecting\n            this._renderMultiselectActionMenu($where);\n            return this;\n        },\n\n        /** render a menu containing the actions available to sets of selected items */\n        _renderMultiselectActionMenu: function($where) {\n            $where = $where || this.$el;\n            var $menu = $where.find(\".list-action-menu\"),\n                actions = this.multiselectActions();\n            if (!actions.length) {\n                return $menu.empty();\n            }\n\n            var $newMenu = $(\n                [\n                    '<div class=\"list-action-menu btn-group\">',\n                    '<button class=\"list-action-menu-btn btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                    _l(\"For all selected\"),\n                    \"...\",\n                    \"</button>\",\n                    '<ul class=\"dropdown-menu pull-right\" role=\"menu\">',\n                    \"</ul>\",\n                    \"</div>\"\n                ].join(\"\")\n            );\n            var $actions = actions.map(function(action) {\n                var html = [\n                    '<li><a href=\"javascript:void(0);\">',\n                    action.html,\n                    \"</a></li>\"\n                ].join(\"\");\n                return $(html).click(function(ev) {\n                    ev.preventDefault();\n                    return action.func(ev);\n                });\n            });\n            $newMenu.find(\"ul\").append($actions);\n            $menu.replaceWith($newMenu);\n            return $newMenu;\n        },\n\n        /** return a list of plain objects used to render multiselect actions menu. Each object should have:\n     *      html: an html string used as the anchor contents\n     *      func: a function called when the anchor is clicked (passed the click event)\n     */\n        multiselectActions: function() {\n            return [];\n        },\n\n        // ------------------------------------------------------------------------ sub-$element shortcuts\n        /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n        $scrollContainer: function($where) {\n            // override or set via attributes.$scrollContainer\n            return ($where || this.$el).parent().parent();\n        },\n        /** convenience selector for the section that displays the list controls */\n        $controls: function($where) {\n            return ($where || this.$el).find(\"> .controls\");\n        },\n        /** list-items: where the subviews are contained in the view's dom */\n        $list: function($where) {\n            return ($where || this.$el).find(\"> .list-items\");\n        },\n        /** container where list messages are attached */\n        $messages: function($where) {\n            //TODO: controls isn't really correct here (only for ModelListPanel)\n            return ($where || this.$el).find(\"> .controls .messages\");\n        },\n        /** the message displayed when no views can be shown (no views, none matching search) */\n        $emptyMessage: function($where) {\n            return ($where || this.$el).find(\"> .empty-message\");\n        },\n\n        // ------------------------------------------------------------------------ hda sub-views\n        /** render the subviews for the list's collection */\n        renderItems: function($whereTo) {\n            $whereTo = $whereTo || this.$el;\n            var panel = this;\n            panel.log(this + \".renderItems\", $whereTo);\n\n            var $list = panel.$list($whereTo);\n            panel.freeViews();\n            // console.log( 'views freed' );\n            //TODO:? cache and re-use views?\n            var shownModels = panel._filterCollection();\n            // console.log( 'models filtered:', shownModels );\n\n            panel.views = shownModels.map(function(itemModel) {\n                var view = panel._createItemView(itemModel);\n                return view;\n            });\n\n            $list.empty();\n            // console.log( 'list emptied' );\n            if (panel.views.length) {\n                panel._attachItems($whereTo);\n                // console.log( 'items attached' );\n            }\n            panel._renderEmptyMessage($whereTo).toggle(!panel.views.length);\n            panel.trigger(\"views:ready\", panel.views);\n\n            // console.log( '------------------------------------------- rendering items' );\n            return panel.views;\n        },\n\n        /** Filter the collection to only those models that should be currently viewed */\n        _filterCollection: function() {\n            // override this\n            var panel = this;\n            return panel.collection.filter(_.bind(panel._filterItem, panel));\n        },\n\n        /** Should the model be viewable in the current state?\n     *     Checks against this.filters and this.searchFor\n     */\n        _filterItem: function(model) {\n            // override this\n            var panel = this;\n            return (\n                _.every(\n                    panel.filters.map(function(fn) {\n                        return fn.call(model);\n                    })\n                ) &&\n                (!panel.searchFor || model.matchesAll(panel.searchFor))\n            );\n        },\n\n        /** Create a view for a model and set up it's listeners */\n        _createItemView: function(model) {\n            var ViewClass = this._getItemViewClass(model);\n            var options = _.extend(this._getItemViewOptions(model), {\n                model: model\n            });\n            var view = new ViewClass(options);\n            this._setUpItemViewListeners(view);\n            return view;\n        },\n\n        /** Free a view for a model. Note: does not remove it from the DOM */\n        _destroyItemView: function(view) {\n            this.stopListening(view);\n            this.views = _.without(this.views, view);\n        },\n\n        _destroyItemViews: function(view) {\n            var self = this;\n            self.views.forEach(function(v) {\n                self.stopListening(v);\n            });\n            self.views = [];\n            return self;\n        },\n\n        /** free any sub-views the list has */\n        freeViews: function() {\n            return this._destroyItemViews();\n        },\n\n        /** Get the bbone view class based on the model */\n        _getItemViewClass: function(model) {\n            // override this\n            return this.viewClass;\n        },\n\n        /** Get the options passed to the new view based on the model */\n        _getItemViewOptions: function(model) {\n            // override this\n            return {\n                //logger      : this.logger,\n                fxSpeed: this.fxSpeed,\n                expanded: false,\n                selectable: this.selecting,\n                selected: _.contains(this.selected, model.id),\n                draggable: this.dragItems\n            };\n        },\n\n        /** Set up listeners for new models */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            // send all events to the panel, re-namspaceing them with the view prefix\n            this.listenTo(view, \"all\", function() {\n                var args = Array.prototype.slice.call(arguments, 0);\n                args[0] = \"view:\" + args[0];\n                panel.trigger.apply(panel, args);\n            });\n\n            // drag multiple - hijack ev.setData to add all selected items\n            this.listenTo(\n                view,\n                \"draggable:dragstart\",\n                function(ev, v) {\n                    //TODO: set multiple drag data here\n                    var json = {},\n                        selected = this.getSelectedModels();\n                    if (selected.length) {\n                        json = selected.toJSON();\n                    } else {\n                        json = [v.model.toJSON()];\n                    }\n                    ev.dataTransfer.setData(\"text\", JSON.stringify(json));\n                    //ev.dataTransfer.setDragImage( v.el, 60, 60 );\n                },\n                this\n            );\n\n            return panel;\n        },\n\n        /** Attach views in this.views to the model based on $whereTo */\n        _attachItems: function($whereTo) {\n            var self = this;\n            // console.log( '_attachItems:', $whereTo, this.$list( $whereTo ) );\n            //ASSUMES: $list has been emptied\n            this.$list($whereTo).append(\n                this.views.map(function(view) {\n                    return self._renderItemView$el(view);\n                })\n            );\n            return this;\n        },\n\n        /** get a given subview's $el (or whatever may wrap it) and return it */\n        _renderItemView$el: function(view) {\n            // useful to wrap and override\n            return view.render(0).$el;\n        },\n\n        /** render the empty/none-found message */\n        _renderEmptyMessage: function($whereTo) {\n            this.debug(\"_renderEmptyMessage\", $whereTo, this.searchFor);\n            var text = this.searchFor ? this.noneFoundMsg : this.emptyMsg;\n            return this.$emptyMessage($whereTo).text(text);\n        },\n\n        /** expand all item views */\n        expandAll: function() {\n            _.each(this.views, function(view) {\n                view.expand();\n            });\n        },\n\n        /** collapse all item views */\n        collapseAll: function() {\n            _.each(this.views, function(view) {\n                view.collapse();\n            });\n        },\n\n        // ------------------------------------------------------------------------ collection/views syncing\n        /** Add a view (if the model should be viewable) to the panel */\n        addItemView: function(model, collection, options) {\n            // console.log( this + '.addItemView:', model );\n            var panel = this;\n            // get the index of the model in the list of filtered models shown by this list\n            // in order to insert the view in the proper place\n            //TODO:? potentially expensive\n            var modelIndex = panel._filterCollection().indexOf(model);\n            if (modelIndex === -1) {\n                return undefined;\n            }\n            var view = panel._createItemView(model);\n            // console.log( 'adding and rendering:', modelIndex, view.toString() );\n\n            $(view).queue(\"fx\", [\n                function(next) {\n                    // hide the empty message first if only view\n                    if (panel.$emptyMessage().is(\":visible\")) {\n                        panel.$emptyMessage().fadeOut(panel.fxSpeed, next);\n                    } else {\n                        next();\n                    }\n                },\n                function(next) {\n                    panel._attachView(view, modelIndex);\n                    next();\n                }\n            ]);\n            return view;\n        },\n\n        /** internal fn to add view (to both panel.views and panel.$list) */\n        _attachView: function(view, modelIndex, useFx) {\n            // console.log( this + '._attachView:', view, modelIndex, useFx );\n            useFx = _.isUndefined(useFx) ? true : useFx;\n            modelIndex = modelIndex || 0;\n            var panel = this;\n\n            // use the modelIndex to splice into views and insert at the proper index in the DOM\n            panel.views.splice(modelIndex, 0, view);\n            panel._insertIntoListAt(\n                modelIndex,\n                panel._renderItemView$el(view).hide()\n            );\n\n            panel.trigger(\"view:attached\", view);\n            if (useFx) {\n                view.$el.slideDown(panel.fxSpeed, function() {\n                    panel.trigger(\"view:attached:rendered\");\n                });\n            } else {\n                view.$el.show();\n                panel.trigger(\"view:attached:rendered\");\n            }\n            return view;\n        },\n\n        /** insert a jq object as a child of list-items at the specified *DOM index* */\n        _insertIntoListAt: function(index, $what) {\n            // console.log( this + '._insertIntoListAt:', index, $what );\n            var $list = this.$list();\n            if (index === 0) {\n                $list.prepend($what);\n            } else {\n                $list\n                    .children()\n                    .eq(index - 1)\n                    .after($what);\n            }\n            return $what;\n        },\n\n        /** Remove a view from the panel (if found) */\n        removeItemView: function(model, collection, options) {\n            var panel = this;\n            var view = _.find(panel.views, function(v) {\n                return v.model === model;\n            });\n            if (!view) {\n                return undefined;\n            }\n            panel.views = _.without(panel.views, view);\n            panel.trigger(\"view:removed\", view);\n\n            // potentially show the empty message if no views left\n            // use anonymous queue here - since remove can happen multiple times\n            $({}).queue(\"fx\", [\n                function(next) {\n                    view.$el.fadeOut(panel.fxSpeed, next);\n                },\n                function(next) {\n                    view.remove();\n                    panel.trigger(\"view:removed:rendered\");\n                    if (!panel.views.length) {\n                        panel._renderEmptyMessage().fadeIn(panel.fxSpeed, next);\n                    } else {\n                        next();\n                    }\n                }\n            ]);\n            return view;\n        },\n\n        /** get views based on model.id */\n        viewFromModelId: function(id) {\n            return _.find(this.views, function(v) {\n                return v.model.id === id;\n            });\n        },\n\n        /** get views based on model */\n        viewFromModel: function(model) {\n            return model ? this.viewFromModelId(model.id) : undefined;\n        },\n\n        /** get views based on model properties */\n        viewsWhereModel: function(properties) {\n            return this.views.filter(function(view) {\n                return _.isMatch(view.model.attributes, properties);\n            });\n        },\n\n        /** A range of views between (and including) viewA and viewB */\n        viewRange: function(viewA, viewB) {\n            if (viewA === viewB) {\n                return viewA ? [viewA] : [];\n            }\n\n            var indexA = this.views.indexOf(viewA),\n                indexB = this.views.indexOf(viewB);\n\n            // handle not found\n            if (indexA === -1 || indexB === -1) {\n                if (indexA === indexB) {\n                    return [];\n                }\n                return indexA === -1 ? [viewB] : [viewA];\n            }\n            // reverse if indeces are\n            //note: end inclusive\n            return indexA < indexB\n                ? this.views.slice(indexA, indexB + 1)\n                : this.views.slice(indexB, indexA + 1);\n        },\n\n        // ------------------------------------------------------------------------ searching\n        /** render a search input for filtering datasets shown\n     *      (see SearchableMixin in base-mvc for implementation of the actual searching)\n     *      return will start the search\n     *      esc will clear the search\n     *      clicking the clear button will clear the search\n     *      uses searchInput in ui.js\n     */\n        _renderSearch: function($where) {\n            $where.find(\".controls .search-input\").searchInput({\n                placeholder: this.searchPlaceholder,\n                initialVal: this.searchFor,\n                onfirstsearch: _.bind(this._firstSearch, this),\n                onsearch: _.bind(this.searchItems, this),\n                onclear: _.bind(this.clearSearch, this)\n            });\n            return $where;\n        },\n\n        /** What to do on the first search entered */\n        _firstSearch: function(searchFor) {\n            // override to load model details if necc.\n            this.log(\"onFirstSearch\", searchFor);\n            return this.searchItems(searchFor);\n        },\n\n        /** filter view list to those that contain the searchFor terms */\n        searchItems: function(searchFor, force) {\n            this.log(\"searchItems\", searchFor, this.searchFor, force);\n            if (!force && this.searchFor === searchFor) {\n                return this;\n            }\n            this.searchFor = searchFor;\n            this.renderItems();\n            this.trigger(\"search:searching\", searchFor, this);\n            var $search = this.$(\"> .controls .search-query\");\n            if ($search.val() !== searchFor) {\n                $search.val(searchFor);\n            }\n            return this;\n        },\n\n        /** clear the search filters and show all views that are normally shown */\n        clearSearch: function(searchFor) {\n            //this.log( 'onSearchClear', this );\n            this.searchFor = \"\";\n            this.trigger(\"search:clear\", this);\n            this.$(\"> .controls .search-query\").val(\"\");\n            this.renderItems();\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ selection\n        /** @type Integer when the number of list item views is >= to this, don't animate selectors */\n        THROTTLE_SELECTOR_FX_AT: 20,\n\n        /** show selectors on all visible itemViews and associated controls */\n        showSelectors: function(speed) {\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            this.selecting = true;\n            this.$(\".list-actions\").slideDown(speed);\n            speed =\n                this.views.length >= this.THROTTLE_SELECTOR_FX_AT ? 0 : speed;\n            _.each(this.views, function(view) {\n                view.showSelector(speed);\n            });\n            //this.selected = [];\n            //this.lastSelected = null;\n        },\n\n        /** hide selectors on all visible itemViews and associated controls */\n        hideSelectors: function(speed) {\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            this.selecting = false;\n            this.$(\".list-actions\").slideUp(speed);\n            speed =\n                this.views.length >= this.THROTTLE_SELECTOR_FX_AT ? 0 : speed;\n            _.each(this.views, function(view) {\n                view.hideSelector(speed);\n            });\n            this.selected = [];\n            this.lastSelected = null;\n        },\n\n        /** show or hide selectors on all visible itemViews and associated controls */\n        toggleSelectors: function() {\n            if (!this.selecting) {\n                this.showSelectors();\n            } else {\n                this.hideSelectors();\n            }\n        },\n\n        /** select all visible items */\n        selectAll: function(event) {\n            _.each(this.views, function(view) {\n                view.select(event);\n            });\n        },\n\n        /** deselect all visible items */\n        deselectAll: function(event) {\n            this.lastSelected = null;\n            _.each(this.views, function(view) {\n                view.deselect(event);\n            });\n        },\n\n        /** select a range of datasets between A and B */\n        selectRange: function(viewA, viewB) {\n            var range = this.viewRange(viewA, viewB);\n            _.each(range, function(view) {\n                view.select();\n            });\n            return range;\n        },\n\n        /** return an array of all currently selected itemViews */\n        getSelectedViews: function() {\n            return _.filter(this.views, function(v) {\n                return v.selected;\n            });\n        },\n\n        /** return a collection of the models of all currenly selected items */\n        getSelectedModels: function() {\n            // console.log( '(getSelectedModels)' );\n            return new this.collection.constructor(\n                _.map(this.getSelectedViews(), function(view) {\n                    return view.model;\n                })\n            );\n        },\n\n        // ------------------------------------------------------------------------ loading indicator\n        /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n        _showLoadingIndicator: function(msg, speed, callback) {\n            this.debug(\n                \"_showLoadingIndicator\",\n                this.indicator,\n                msg,\n                speed,\n                callback\n            );\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            if (!this.indicator) {\n                this.indicator = new LoadingIndicator(this.$el);\n                this.debug(\"\\t created\", this.indicator);\n            }\n            if (!this.$el.is(\":visible\")) {\n                this.indicator.show(0, callback);\n            } else {\n                this.$el.fadeOut(speed);\n                this.indicator.show(msg, speed, callback);\n            }\n        },\n\n        /** hide the loading indicator */\n        _hideLoadingIndicator: function(speed, callback) {\n            this.debug(\n                \"_hideLoadingIndicator\",\n                this.indicator,\n                speed,\n                callback\n            );\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            if (this.indicator) {\n                this.indicator.hide(speed, callback);\n            }\n        },\n\n        // ------------------------------------------------------------------------ scrolling\n        /** get the current scroll position of the panel in its parent */\n        scrollPosition: function() {\n            return this.$scrollContainer().scrollTop();\n        },\n\n        /** set the current scroll position of the panel in its parent */\n        scrollTo: function(pos, speed) {\n            speed = speed || 0;\n            this.$scrollContainer().animate({ scrollTop: pos }, speed);\n            return this;\n        },\n\n        /** Scrolls the panel to the top. */\n        scrollToTop: function(speed) {\n            return this.scrollTo(0, speed);\n        },\n\n        /** scroll to the given view in list-items */\n        scrollToItem: function(view, speed) {\n            if (!view) {\n                return this;\n            }\n            return this;\n        },\n\n        /** Scrolls the panel to show the content with the given id. */\n        scrollToId: function(id, speed) {\n            return this.scrollToItem(this.viewFromModelId(id), speed);\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: {\n            \"click .select-all\": \"selectAll\",\n            \"click .deselect-all\": \"deselectAll\"\n        },\n\n        // ------------------------------------------------------------------------ misc\n        /** Return a string rep of the panel */\n        toString: function() {\n            return \"ListPanel(\" + this.collection + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListPanel.prototype.templates = (function() {\n    var elTemplate = BASE_MVC.wrapTemplate([\n        // temp container\n        \"<div>\",\n        '<div class=\"controls\"></div>',\n        '<div class=\"list-items\"></div>',\n        '<div class=\"empty-message infomessagesmall\"></div>',\n        \"</div>\"\n    ]);\n\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n        '<div class=\"title\">',\n        '<div class=\"name\"><%- view.title %></div>',\n        \"</div>\",\n        '<div class=\"subtitle\"><%- view.subtitle %></div>',\n        // buttons, controls go here\n        '<div class=\"actions\"></div>',\n        // deleted msg, etc.\n        '<div class=\"messages\"></div>',\n\n        '<div class=\"search\">',\n        '<div class=\"search-input\"></div>',\n        \"</div>\",\n\n        // show when selectors are shown\n        '<div class=\"list-actions\">',\n        '<div class=\"btn-group\">',\n        '<button class=\"select-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"All\"),\n        \"</button>\",\n        '<button class=\"deselect-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"None\"),\n        \"</button>\",\n        \"</div>\",\n        '<div class=\"list-action-menu btn-group\">',\n        \"</div>\",\n        \"</div>\",\n        \"</div>\"\n    ]);\n\n    return {\n        el: elTemplate,\n        controls: controlsTemplate\n    };\n})();\n\n//=============================================================================\n/** View for a model that has a sub-collection (e.g. History, DatasetCollection)\n *  Allows:\n *      the model to be reset\n *      auto assign panel.collection to panel.model[ panel.modelCollectionKey ]\n *\n */\nvar ModelListPanel = ListPanel.extend({\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey: \"contents\",\n\n    initialize: function(attributes) {\n        ListPanel.prototype.initialize.call(this, attributes);\n        this.selecting =\n            attributes.selecting !== undefined ? attributes.selecting : false;\n\n        this.setModel(this.model, attributes);\n    },\n\n    /** release/free/shutdown old models and set up panel for new models\n     *  @fires new-model with the panel as parameter\n     */\n    setModel: function(model, attributes) {\n        attributes = attributes || {};\n        this.debug(this + \".setModel:\", model, attributes);\n\n        this.freeModel();\n        this.freeViews();\n\n        if (model) {\n            var oldModelId = this.model ? this.model.get(\"id\") : null;\n\n            // set up the new model with user, logger, storage, events\n            this.model = model;\n            if (this.logger) {\n                this.model.logger = this.logger;\n            }\n            this._setUpModelListeners();\n\n            //TODO: relation btwn model, collection becoming tangled here\n            // free the collection, and assign the new collection to either\n            //  the model[ modelCollectionKey ], attributes.collection, or an empty vanilla collection\n            this.stopListening(this.collection);\n            this.collection =\n                this.model[this.modelCollectionKey] ||\n                attributes.collection ||\n                this._createDefaultCollection();\n            this._setUpCollectionListeners();\n\n            if (oldModelId && model.get(\"id\") !== oldModelId) {\n                this.trigger(\"new-model\", this);\n            }\n        }\n        return this;\n    },\n\n    /** free the current model and all listeners for it, free any views for the model */\n    freeModel: function() {\n        // stop/release the previous model, and clear cache to sub-views\n        if (this.model) {\n            this.stopListening(this.model);\n            //TODO: see base-mvc\n            //this.model.free();\n            //this.model = null;\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ listening\n    /** listening for model events */\n    _setUpModelListeners: function() {\n        // override\n        this.log(this + \"._setUpModelListeners\", this.model);\n        // bounce model errors up to the panel\n        this.listenTo(\n            this.model,\n            \"error\",\n            function() {\n                var args = Array.prototype.slice.call(arguments, 0);\n                //args.unshift( 'model:error' );\n                args.unshift(\"error\");\n                this.trigger.apply(this, args);\n            },\n            this\n        );\n\n        // debugging\n        if (this.logger) {\n            this.listenTo(this.model, \"all\", function(event) {\n                this.info(this + \"(model)\", event, arguments);\n            });\n        }\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     */\n    _renderControls: function($newRender) {\n        this.debug(this + \"(ModelListPanel)._renderControls\");\n        var json = this.model ? this.model.toJSON() : {},\n            $controls = $(this.templates.controls(json, this));\n        $newRender.find(\".controls\").replaceWith($controls);\n        return $controls;\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString: function() {\n        return \"ModelListPanel(\" + this.model + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nModelListPanel.prototype.templates = (function() {\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n        '<div class=\"title\">',\n        //TODO: this is really the only difference - consider factoring titlebar out\n        '<div class=\"name\"><%- model.name %></div>',\n        \"</div>\",\n        '<div class=\"subtitle\"><%- view.subtitle %></div>',\n        '<div class=\"actions\"></div>',\n        '<div class=\"messages\"></div>',\n\n        '<div class=\"search\">',\n        '<div class=\"search-input\"></div>',\n        \"</div>\",\n\n        '<div class=\"list-actions\">',\n        '<div class=\"btn-group\">',\n        '<button class=\"select-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"All\"),\n        \"</button>\",\n        '<button class=\"deselect-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"None\"),\n        \"</button>\",\n        \"</div>\",\n        '<div class=\"list-action-menu btn-group\">',\n        \"</div>\",\n        \"</div>\",\n        \"</div>\"\n    ]);\n\n    return _.extend(_.clone(ListPanel.prototype.templates), {\n        controls: controlsTemplate\n    });\n})();\n\n//=============================================================================\nexport default {\n    ListPanel: ListPanel,\n    ModelListPanel: ModelListPanel\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/list/list-view.js","// from: https://raw.githubusercontent.com/umdjs/umd/master/jqueryPlugin.js\n// Uses AMD or browser globals to create a jQuery plugin.\n(function(factory) {\n    if (typeof define === \"function\" && define.amd) {\n        //TODO: So...this turns out to be an all or nothing thing. If I load jQuery in the define below, it will\n        //  (of course) wipe the old jquery *and all the plugins loaded into it*. So the define below *is still\n        //  relying on jquery being loaded globally* in order to preserve plugins.\n        define([], factory);\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n})(function() {\n    var _l =\n        window._l ||\n        function(s) {\n            return s;\n        };\n\n    //TODO: consolidate with tool menu functionality, use there\n\n    /** searchInput: (jQuery plugin)\n     *      Creates a search input, a clear button, and loading indicator\n     *      within the selected node.\n     *\n     *      When the user either presses return or enters some minimal number\n     *      of characters, a callback is called. Pressing ESC when the input\n     *      is focused will clear the input and call a separate callback.\n     */\n    function searchInput(parentNode, options) {\n        var KEYCODE_ESC = 27,\n            KEYCODE_RETURN = 13,\n            $parentNode = $(parentNode),\n            firstSearch = true,\n            defaults = {\n                initialVal: \"\",\n                name: \"search\",\n                placeholder: \"search\",\n                classes: \"\",\n                onclear: function() {},\n                onfirstsearch: null,\n                onsearch: function(inputVal) {},\n                minSearchLen: 0,\n                escWillClear: true,\n                oninit: function() {}\n            };\n\n        // .................................................................... input rendering and events\n        // visually clear the search, trigger an event, and call the callback\n        function clearSearchInput(event) {\n            var $input = $(this)\n                .parent()\n                .children(\"input\");\n            $input\n                .val(\"\")\n                .trigger(\"searchInput.clear\")\n                .blur();\n            options.onclear();\n        }\n\n        // search for searchTerms, trigger an event, call the appropo callback (based on whether this is the first)\n        function search(event, searchTerms) {\n            if (!searchTerms) {\n                return clearSearchInput();\n            }\n            $(this).trigger(\"search.search\", searchTerms);\n            if (typeof options.onfirstsearch === \"function\" && firstSearch) {\n                firstSearch = false;\n                options.onfirstsearch(searchTerms);\n            } else {\n                options.onsearch(searchTerms);\n            }\n        }\n\n        // .................................................................... input rendering and events\n        function inputTemplate() {\n            // class search-query is bootstrap 2.3 style that now lives in base.less\n            return [\n                '<input type=\"text\" name=\"',\n                options.name,\n                '\" placeholder=\"',\n                options.placeholder,\n                '\" ',\n                'class=\"search-query ',\n                options.classes,\n                '\" ',\n                \"/>\"\n            ].join(\"\");\n        }\n\n        // the search input that responds to keyboard events and displays the search value\n        function $input() {\n            return ($(inputTemplate())\n                    // select all text on a focus\n                    .focus(function(event) {\n                        $(this).select();\n                    })\n                    // attach behaviors to esc, return if desired, search on some min len string\n                    .keyup(function(event) {\n                        event.preventDefault();\n                        event.stopPropagation();\n\n                        // esc key will clear if desired\n                        if (\n                            event.which === KEYCODE_ESC &&\n                            options.escWillClear\n                        ) {\n                            clearSearchInput.call(this, event);\n                        } else {\n                            var searchTerms = $(this).val();\n                            // return key or the search string len > minSearchLen (if not 0) triggers search\n                            if (\n                                event.which === KEYCODE_RETURN ||\n                                (options.minSearchLen &&\n                                    searchTerms.length >= options.minSearchLen)\n                            ) {\n                                search.call(this, event, searchTerms);\n                            }\n                        }\n                    })\n                    .val(options.initialVal) );\n        }\n\n        // .................................................................... clear button rendering and events\n        // a button for clearing the search bar, placed on the right hand side\n        function $clearBtn() {\n            return $(\n                [\n                    '<span class=\"search-clear fa fa-times-circle\" ',\n                    'title=\"',\n                    _l(\"clear search (esc)\"),\n                    '\"></span>'\n                ].join(\"\")\n            )\n                .tooltip({ placement: \"bottom\" })\n                .click(function(event) {\n                    clearSearchInput.call(this, event);\n                });\n        }\n\n        // .................................................................... loadingIndicator rendering\n        // a button for clearing the search bar, placed on the right hand side\n        function $loadingIndicator() {\n            return $(\n                [\n                    '<span class=\"search-loading fa fa-spinner fa-spin\" ',\n                    'title=\"',\n                    _l(\"loading...\"),\n                    '\"></span>'\n                ].join(\"\")\n            )\n                .hide()\n                .tooltip({ placement: \"bottom\" });\n        }\n\n        // .................................................................... commands\n        // visually swap the load, clear buttons\n        function toggleLoadingIndicator() {\n            $parentNode.find(\".search-loading\").toggle();\n            $parentNode.find(\".search-clear\").toggle();\n        }\n\n        // .................................................................... init\n        // string command (not constructor)\n        if (jQuery.type(options) === \"string\") {\n            if (options === \"toggle-loading\") {\n                toggleLoadingIndicator();\n            }\n            return $parentNode;\n        }\n\n        // initial render\n        if (jQuery.type(options) === \"object\") {\n            options = jQuery.extend(true, {}, defaults, options);\n        }\n        //NOTE: prepended\n        return $parentNode\n            .addClass(\"search-input\")\n            .prepend([$input(), $clearBtn(), $loadingIndicator()]);\n    }\n\n    // as jq plugin\n    jQuery.fn.extend({\n        searchInput: function $searchInput(options) {\n            return this.each(function() {\n                return searchInput(this, options);\n            });\n        }\n    });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/ui/search-input.js","import DATASET_LI from \"mvc/dataset/dataset-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET_LI.DatasetListItemView;\n/** @class Read only view for HistoryDatasetAssociation.\n *      Since there are no controls on the HDAView to hide the dataset,\n *      the primary thing this class does (currently) is override templates\n *      to render the HID.\n */\nvar HDAListItemView = _super.extend(\n    /** @lends HDAListItemView.prototype */ {\n        className: _super.prototype.className + \" history-content\",\n\n        initialize: function(attributes, options) {\n            _super.prototype.initialize.call(this, attributes, options);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"HDAListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemView.prototype.templates = (function() {\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            // adding the hid display to the title\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            //TODO: remove whitespace and use margin-right\n            '<span class=\"hid\"><%- dataset.hid %></span> ',\n            '<span class=\"name\"><%- dataset.name %></span>',\n            \"</div>\",\n            \"</br>\",\n            '<span class=\"nametags\">',\n            \"<% _.each(_.sortBy(_.uniq(dataset.tags), function(x) { return x }), function(tag){ %>\",\n            '<% if (tag.indexOf(\"name:\") == 0){ %>',\n            '<span class=\"label label-info\"><%- tag.slice(5) %></span>',\n            \"<% } %>\",\n            \"<% }); %>\",\n            \"</span>\",\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: BASE_MVC.wrapTemplate(\n            [\n                // add a warning when hidden\n                \"<% if( !dataset.visible ){ %>\",\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                _l(\"This dataset has been hidden\"),\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        )\n    });\n\n    return _.extend({}, _super.prototype.templates, {\n        titleBar: titleBarTemplate,\n        warnings: warnings\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDAListItemView: HDAListItemView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hda-li.js","import STATES from \"mvc/dataset/states\";\nimport DC_LI from \"mvc/collection/collection-li\";\nimport DC_VIEW from \"mvc/collection/collection-view\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DC_LI.DCListItemView;\n/** @class Read only view for HistoryDatasetCollectionAssociation (a dataset collection inside a history).\n */\nvar HDCAListItemView = _super.extend(\n    /** @lends HDCAListItemView.prototype */ {\n        className: _super.prototype.className + \" history-content\",\n\n        /** event listeners */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            this.listenTo(this.model, {\n                \"change:tags change:populated change:visible\": function(\n                    model,\n                    options\n                ) {\n                    this.render();\n                }\n            });\n        },\n\n        /** Override to provide the proper collections panels as the foldout */\n        _getFoldoutPanelClass: function() {\n            switch (this.model.get(\"collection_type\")) {\n                case \"list\":\n                    return DC_VIEW.ListCollectionView;\n                case \"paired\":\n                    return DC_VIEW.PairCollectionView;\n                case \"list:paired\":\n                    return DC_VIEW.ListOfPairsCollectionView;\n                case \"list:list\":\n                    return DC_VIEW.ListOfListsCollectionView;\n            }\n            throw new TypeError(\n                \"Uknown collection_type: \" + this.model.get(\"collection_type\")\n            );\n        },\n\n        /** In this override, add the state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            //TODO: model currently has no state\n            var state = !this.model.get(\"populated\")\n                ? STATES.RUNNING\n                : STATES.OK;\n            //if( this.model.has( 'state' ) ){\n            this.$el.addClass(\"state-\" + state);\n            //}\n            return this.$el;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"HDCAListItemView(\" + modelString + \")\";\n        }\n    }\n);\n\n/** underscore templates */\nHDCAListItemView.prototype.templates = (function() {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: BASE_MVC.wrapTemplate(\n            [\n                // add a warning when hidden\n                \"<% if( !collection.visible ){ %>\",\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                _l(\"This collection has been hidden\"),\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"collection\"\n        )\n    });\n\n    // could steal this from hda-base (or use mixed content)\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            // adding the hid display to the title\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            //TODO: remove whitespace and use margin-right\n            '<span class=\"hid\"><%- collection.hid %></span> ',\n            '<span class=\"name\"><%- collection.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            '<span class=\"nametags\">',\n            \"<% _.each(_.sortBy(_.uniq(collection.tags), function(x) { return x }), function(tag){ %>\",\n            '<% if (tag.indexOf(\"name:\") == 0){ %>',\n            '<span class=\"label label-info\"><%- tag.slice(5) %></span>',\n            \"<% } %>\",\n            \"<% }); %>\",\n            \"</span>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDCAListItemView: HDCAListItemView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hdca-li.js","import LIST_VIEW from \"mvc/list/list-view\";\nimport DC_MODEL from \"mvc/collection/collection-model\";\nimport DC_LI from \"mvc/collection/collection-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"collections\";\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class non-editable, read-only View/Controller for a dataset collection.\n */\nvar _super = LIST_VIEW.ModelListPanel;\nvar CollectionView = _super.extend(\n    /** @lends CollectionView.prototype */ {\n        //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n        _logNamespace: logNamespace,\n\n        className: _super.prototype.className + \" dataset-collection-panel\",\n\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_LI.DatasetDCEListItemView,\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView,\n        /** key of attribute in model to assign to this.collection */\n        modelCollectionKey: \"elements\",\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the panel\n     */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n\n            this.hasUser = attributes.hasUser;\n            /** A stack of panels that currently cover or hide this panel */\n            this.panelStack = [];\n            /** The text of the link to go back to the panel containing this one */\n            this.parentName = attributes.parentName;\n            /** foldout or drilldown */\n            this.foldoutStyle = attributes.foldoutStyle || \"foldout\";\n            this.downloadUrl = this.model.attributes.url + \"/download\";\n        },\n\n        _queueNewRender: function($newRender, speed) {\n            speed = speed === undefined ? this.fxSpeed : speed;\n            var panel = this;\n            panel.log(\"_queueNewRender:\", $newRender, speed);\n\n            // TODO: jquery@1.12 doesn't change display when the elem has display: flex\n            // this causes display: block for those elems after the use of show/hide animations\n            // animations are removed from this view for now until fixed\n            panel._swapNewRender($newRender);\n            panel.trigger(\"rendered\", panel);\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** In this override, use model.getVisibleContents */\n        _filterCollection: function() {\n            //TODO: should *not* be model.getVisibleContents - visibility is not model related\n            return this.model.getVisibleContents();\n        },\n\n        /** override to return proper view class based on element_type */\n        _getItemViewClass: function(model) {\n            //this.debug( this + '._getItemViewClass:', model );\n            //TODO: subclasses use DCEViewClass - but are currently unused - decide\n            switch (model.get(\"element_type\")) {\n                case \"hda\":\n                    return this.DatasetDCEViewClass;\n                case \"dataset_collection\":\n                    return this.NestedDCDCEViewClass;\n            }\n            throw new TypeError(\n                \"Unknown element type:\",\n                model.get(\"element_type\")\n            );\n        },\n\n        /** override to add link target and anon */\n        _getItemViewOptions: function(model) {\n            var options = _super.prototype._getItemViewOptions.call(\n                this,\n                model\n            );\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                hasUser: this.hasUser,\n                //TODO: could move to only nested: list:paired\n                foldoutStyle: this.foldoutStyle\n            });\n        },\n\n        // ------------------------------------------------------------------------ collection sub-views\n        /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            _super.prototype._setUpItemViewListeners.call(panel, view);\n\n            // use pub-sub to: handle drilldown expansion and collapse\n            panel.listenTo(view, {\n                \"expanded:drilldown\": function(v, drilldown) {\n                    this._expandDrilldownPanel(drilldown);\n                },\n                \"collapsed:drilldown\": function(v, drilldown) {\n                    this._collapseDrilldownPanel(drilldown);\n                }\n            });\n            return this;\n        },\n\n        /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n        _expandDrilldownPanel: function(drilldown) {\n            this.panelStack.push(drilldown);\n            // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n            this.$(\"> .controls\")\n                .add(this.$list())\n                .hide();\n            drilldown.parentName = this.model.get(\"name\");\n            this.$el.append(drilldown.render().$el);\n        },\n\n        /** Handle drilldown close by freeing the panel and re-rendering this panel */\n        _collapseDrilldownPanel: function(drilldown) {\n            this.panelStack.pop();\n            this.render();\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: {\n            \"click .navigation .back\": \"close\"\n        },\n\n        /** close/remove this collection panel */\n        close: function(event) {\n            this.remove();\n            this.trigger(\"close\");\n        },\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"CollectionView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nCollectionView.prototype.templates = (function() {\n    var controlsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"controls\">',\n            '<div class=\"navigation\">',\n            '<a class=\"back\" href=\"javascript:void(0)\">',\n            '<span class=\"fa fa-icon fa-angle-left\"></span>',\n            _l(\"Back to \"),\n            \"<%- view.parentName %>\",\n            \"</a>\",\n            \"</div>\",\n\n            '<div class=\"title\">',\n            '<div class=\"name\"><%- collection.name || collection.element_identifier %></div>',\n            '<div class=\"subtitle\">',\n            '<% if( collection.collection_type === \"list\" ){ %>',\n            _l(\"a list of datasets\"),\n            '<% } else if( collection.collection_type === \"paired\" ){ %>',\n            _l(\"a pair of datasets\"),\n            '<% } else if( collection.collection_type === \"list:paired\" ){ %>',\n            _l(\"a list of paired datasets\"),\n            '<% } else if( collection.collection_type === \"list:list\" ){ %>',\n            _l(\"a list of dataset lists\"),\n            \"<% } %>\",\n            \"</div>\",\n            \"</div>\",\n\n            '<div class=\"tags-display\"></div>',\n\n            '<div class=\"actions\">',\n            '<a class=\"download-btn icon-btn\" ',\n            'href=\"<%- view.downloadUrl %>',\n            '\" title=\"\" download=\"\" data-original-title=\"Download Collection\">',\n            '<span class=\"fa fa-floppy-o\"></span>',\n            \"</a>\",\n            \"</div>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        controls: controlsTemplate\n    });\n})();\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionView = CollectionView.extend(\n    /** @lends ListCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_LI.DatasetDCEListItemView,\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"ListCollectionView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionView = ListCollectionView.extend(\n    /** @lends PairCollectionView.prototype */ {\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"PairCollectionView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListOfPairsCollectionView = CollectionView.extend(\n    /** @lends ListOfPairsCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView.extend({\n            foldoutPanelClass: PairCollectionView\n        }),\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"ListOfPairsCollectionView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a list of lists dataset collection. */\nvar ListOfListsCollectionView = CollectionView.extend({\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView.extend({\n        foldoutPanelClass: PairCollectionView\n    }),\n\n    /** string rep */\n    toString: function() {\n        return (\n            \"ListOfListsCollectionView(\" +\n            (this.model ? this.model.get(\"name\") : \"\") +\n            \")\"\n        );\n    }\n});\n\n//==============================================================================\nexport default {\n    CollectionView: CollectionView,\n    ListCollectionView: ListCollectionView,\n    PairCollectionView: PairCollectionView,\n    ListOfPairsCollectionView: ListOfPairsCollectionView,\n    ListOfListsCollectionView: ListOfListsCollectionView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/collection-view.js","import STATES from \"mvc/dataset/states\";\nimport DATASET_LI from \"mvc/dataset/dataset-li\";\nimport TAGS from \"mvc/tag\";\nimport ANNOTATIONS from \"mvc/annotation\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET_LI.DatasetListItemView;\n/** @class Editing view for DatasetAssociation.\n */\nvar DatasetListItemEdit = _super.extend(\n    /** @lends DatasetListItemEdit.prototype */ {\n        /** set up: options */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n            this.hasUser = attributes.hasUser;\n\n            /** allow user purge of dataset files? */\n            this.purgeAllowed = attributes.purgeAllowed || false;\n\n            //TODO: move to HiddenUntilActivatedViewMixin\n            /** should the tags editor be shown or hidden initially? */\n            this.tagsEditorShown = attributes.tagsEditorShown || false;\n            /** should the tags editor be shown or hidden initially? */\n            this.annotationEditorShown =\n                attributes.annotationEditorShown || false;\n        },\n\n        // ......................................................................... titlebar actions\n        /** In this override, add the other two primary actions: edit and delete */\n        _renderPrimaryActions: function() {\n            var actions = _super.prototype._renderPrimaryActions.call(this);\n            if (this.model.get(\"state\") === STATES.NOT_VIEWABLE) {\n                return actions;\n            }\n            // render the display, edit attr and delete icon-buttons\n            return _super.prototype._renderPrimaryActions\n                .call(this)\n                .concat([this._renderEditButton(), this._renderDeleteButton()]);\n        },\n\n        //TODO: move titleButtons into state renderers, remove state checks in the buttons\n\n        /** Render icon-button to edit the attributes (format, permissions, etc.) this dataset. */\n        _renderEditButton: function() {\n            var self = this;\n            // don't show edit while uploading, in-accessible\n            // DO show if in error (ala previous history panel)\n            if (\n                this.model.get(\"state\") === STATES.DISCARDED ||\n                !this.model.get(\"accessible\")\n            ) {\n                return null;\n            }\n            var purged = this.model.get(\"purged\"),\n                deleted = this.model.get(\"deleted\"),\n                editBtnData = {\n                    title: _l(\"Edit attributes\"),\n                    href:\n                        Galaxy.root +\n                        \"datasets/edit?dataset_id=\" +\n                        this.model.attributes.id,\n                    faIcon: \"fa-pencil\",\n                    classes: \"edit-btn\",\n                    onclick: function(ev) {\n                        if (Galaxy.router) {\n                            ev.preventDefault();\n                            Galaxy.router.push(\"datasets/edit\", {\n                                dataset_id: self.model.attributes.id\n                            });\n                        }\n                    }\n                };\n            // disable if purged or deleted and explain why in the tooltip\n            if (deleted || purged) {\n                editBtnData.disabled = true;\n                if (purged) {\n                    editBtnData.title = _l(\n                        \"Cannot edit attributes of datasets removed from disk\"\n                    );\n                } else if (deleted) {\n                    editBtnData.title = _l(\n                        \"Undelete dataset to edit attributes\"\n                    );\n                }\n\n                // disable if still uploading or new\n            } else if (\n                _.contains([STATES.UPLOAD, STATES.NEW], this.model.get(\"state\"))\n            ) {\n                editBtnData.disabled = true;\n                editBtnData.title = _l(\"This dataset is not yet editable\");\n            }\n            return faIconButton(editBtnData);\n        },\n\n        /** Render icon-button to delete this hda. */\n        _renderDeleteButton: function() {\n            // don't show delete if...\n            if (!this.model.get(\"accessible\")) {\n                return null;\n            }\n\n            var self = this,\n                deletedAlready = this.model.isDeletedOrPurged();\n            return faIconButton({\n                title: !deletedAlready\n                    ? _l(\"Delete\")\n                    : _l(\"Dataset is already deleted\"),\n                disabled: deletedAlready,\n                faIcon: \"fa-times\",\n                classes: \"delete-btn\",\n                onclick: function() {\n                    // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                    self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                    self.model[\"delete\"]();\n                }\n            });\n        },\n\n        // ......................................................................... details\n        /** In this override, add tags and annotations controls, make the ? dbkey a link to editing page */\n        _renderDetails: function() {\n            //TODO: generalize to be allow different details for each state\n            var $details = _super.prototype._renderDetails.call(this),\n                state = this.model.get(\"state\");\n\n            if (\n                !this.model.isDeletedOrPurged() &&\n                _.contains([STATES.OK, STATES.FAILED_METADATA], state)\n            ) {\n                this._renderTags($details);\n                this._renderAnnotation($details);\n                this._makeDbkeyEditLink($details);\n            }\n\n            this._setUpBehaviors($details);\n            return $details;\n        },\n\n        /**************************************************************************\n     * Render help button to show tool help text without rerunning the tool.\n     * Issue #2100\n     */\n        _renderToolHelpButton: function() {\n            var datasetID = this.model.attributes.dataset_id;\n            var jobID = this.model.attributes.creating_job;\n            var self = this;\n\n            var parseToolBuild = function(data) {\n                var helpString =\n                    '<div id=\"thdiv-' + datasetID + '\" class=\"toolhelp\">';\n                if (data.name && data.help) {\n                    helpString +=\n                        \"<strong>Tool help for \" + data.name + \"</strong><hr/>\";\n                    helpString += data.help;\n                } else {\n                    helpString +=\n                        \"<strong>Tool help is unavailable for this dataset.</strong><hr/>\";\n                }\n                helpString += \"</div>\";\n                self.$el.find(\".details\").append($.parseHTML(helpString));\n            };\n            var parseToolID = function(data) {\n                $.ajax({\n                    url: Galaxy.root + \"api/tools/\" + data.tool_id + \"/build\"\n                })\n                    .done(function(data) {\n                        parseToolBuild(data);\n                    })\n                    .fail(function() {\n                        parseToolBuild({});\n                    });\n            };\n            if (Galaxy.user.id === null) {\n                return null;\n            }\n            return faIconButton({\n                title: _l(\"Tool Help\"),\n                classes: \"icon-btn\",\n                href: \"#\",\n                faIcon: \"fa-question\",\n                onclick: function() {\n                    var divString = \"thdiv-\" + datasetID;\n                    if (self.$el.find(\".toolhelp\").length > 0) {\n                        self.$el.find(\".toolhelp\").toggle();\n                    } else {\n                        $.ajax({\n                            url: Galaxy.root + \"api/jobs/\" + jobID\n                        })\n                            .done(function(data) {\n                                parseToolID(data);\n                            })\n                            .fail(function() {\n                                console.log(\n                                    'Failed at recovering job information from the  Galaxy API for job id \"' +\n                                        jobID +\n                                        '\".'\n                                );\n                            });\n                    }\n                }\n            });\n        },\n        //*************************************************************************\n\n        /** Add less commonly used actions in the details section based on state */\n        _renderSecondaryActions: function() {\n            var actions = _super.prototype._renderSecondaryActions.call(this);\n            switch (this.model.get(\"state\")) {\n                case STATES.UPLOAD:\n                case STATES.NOT_VIEWABLE:\n                    return actions;\n                case STATES.ERROR:\n                    // error button comes first\n                    actions.unshift(this._renderErrButton());\n                    return actions.concat([\n                        this._renderRerunButton(),\n                        this._renderToolHelpButton()\n                    ]);\n                case STATES.OK:\n                case STATES.FAILED_METADATA:\n                    return actions.concat([\n                        this._renderRerunButton(),\n                        this._renderVisualizationsButton(),\n                        this._renderToolHelpButton()\n                    ]);\n            }\n            return actions.concat([\n                this._renderRerunButton(),\n                this._renderToolHelpButton()\n            ]);\n        },\n\n        /** Render icon-button to report an error on this dataset to the galaxy admin. */\n        _renderErrButton: function() {\n            var self = this;\n            return faIconButton({\n                title: _l(\"View or report this error\"),\n                href:\n                    Galaxy.root +\n                    \"datasets/error?dataset_id=\" +\n                    this.model.attributes.id,\n                classes: \"report-error-btn\",\n                faIcon: \"fa-bug\",\n                onclick: function(ev) {\n                    if (Galaxy.router) {\n                        ev.preventDefault();\n                        Galaxy.router.push(\"datasets/error\", {\n                            dataset_id: self.model.attributes.id\n                        });\n                    }\n                }\n            });\n        },\n\n        /** Render icon-button to re-run the job that created this dataset. */\n        _renderRerunButton: function() {\n            var creating_job = this.model.get(\"creating_job\");\n            if (this.model.get(\"rerunnable\")) {\n                return faIconButton({\n                    title: _l(\"Run this job again\"),\n                    href: this.model.urls.rerun,\n                    classes: \"rerun-btn\",\n                    target: this.linkTarget,\n                    faIcon: \"fa-refresh\",\n                    onclick: function(ev) {\n                        if (Galaxy.router) {\n                            ev.preventDefault();\n                            Galaxy.router.push(\"/\", {\n                                job_id: creating_job\n                            });\n                        }\n                    }\n                });\n            }\n        },\n\n        /** Render an icon-button or popupmenu of links based on the applicable visualizations */\n        _renderVisualizationsButton: function() {\n            //TODO: someday - lazyload visualizations\n            var visualizations = this.model.get(\"visualizations\");\n            if (\n                this.model.isDeletedOrPurged() ||\n                !this.hasUser ||\n                !this.model.hasData() ||\n                _.isEmpty(visualizations)\n            ) {\n                return null;\n            }\n            if (!_.isObject(visualizations[0])) {\n                this.warn(\"Visualizations have been switched off\");\n                return null;\n            }\n\n            var $visualizations = $(\n                this.templates.visualizations(visualizations, this)\n            );\n            //HACK: need to re-write those directed at galaxy_main with linkTarget\n            $visualizations\n                .find('[target=\"galaxy_main\"]')\n                .attr(\"target\", this.linkTarget);\n            // use addBack here to include the root $visualizations elem (for the case of 1 visualization)\n            this._addScratchBookFn(\n                $visualizations\n                    .find(\".visualization-link\")\n                    .addBack(\".visualization-link\")\n            );\n            return $visualizations;\n        },\n\n        /** add scratchbook functionality to visualization links */\n        _addScratchBookFn: function($links) {\n            var li = this;\n            $links.click(function(ev) {\n                if (Galaxy.frame && Galaxy.frame.active) {\n                    Galaxy.frame.add({\n                        title: \"Visualization\",\n                        url: $(this).attr(\"href\")\n                    });\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n            });\n        },\n\n        //TODO: if possible move these to readonly view - but display the owner's tags/annotation (no edit)\n        /** Render the tags list/control */\n        _renderTags: function($where) {\n            if (!this.hasUser) {\n                return;\n            }\n            var view = this;\n            this.tagsEditor = new TAGS.TagsEditor({\n                model: this.model,\n                el: $where.find(\".tags-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // persist state on the hda view (and not the editor) since these are currently re-created each time\n                onshow: function() {\n                    view.tagsEditorShown = true;\n                },\n                onhide: function() {\n                    view.tagsEditorShown = false;\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit dataset tags\"),\n                    classes: \"tag-btn\",\n                    faIcon: \"fa-tags\"\n                }).appendTo($where.find(\".actions .right\"))\n            });\n            if (this.tagsEditorShown) {\n                this.tagsEditor.toggle(true);\n            }\n        },\n\n        /** Render the annotation display/control */\n        _renderAnnotation: function($where) {\n            if (!this.hasUser) {\n                return;\n            }\n            var view = this;\n            this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n                model: this.model,\n                el: $where.find(\".annotation-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // persist state on the hda view (and not the editor) since these are currently re-created each time\n                onshow: function() {\n                    view.annotationEditorShown = true;\n                },\n                onhide: function() {\n                    view.annotationEditorShown = false;\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit dataset annotation\"),\n                    classes: \"annotate-btn\",\n                    faIcon: \"fa-comment\"\n                }).appendTo($where.find(\".actions .right\"))\n            });\n            if (this.annotationEditorShown) {\n                this.annotationEditor.toggle(true);\n            }\n        },\n\n        /** If the format/dbkey/genome_build isn't set, make the display a link to the edit page */\n        _makeDbkeyEditLink: function($details) {\n            // make the dbkey a link to editing\n            if (\n                this.model.get(\"metadata_dbkey\") === \"?\" &&\n                !this.model.isDeletedOrPurged()\n            ) {\n                var editableDbkey = $('<a class=\"value\">?</a>')\n                    .attr(\"href\", this.model.urls.edit)\n                    .attr(\"target\", \"_top\");\n                $details.find(\".dbkey .value\").replaceWith(editableDbkey);\n            }\n        },\n\n        // ......................................................................... events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .undelete-link\": \"_clickUndeleteLink\",\n            \"click .purge-link\": \"_clickPurgeLink\",\n\n            \"click .edit-btn\": function(ev) {\n                this.trigger(\"edit\", this, ev);\n            },\n            \"click .delete-btn\": function(ev) {\n                this.trigger(\"delete\", this, ev);\n            },\n            \"click .rerun-btn\": function(ev) {\n                this.trigger(\"rerun\", this, ev);\n            },\n            \"click .report-err-btn\": function(ev) {\n                this.trigger(\"report-err\", this, ev);\n            },\n            \"click .visualization-btn\": function(ev) {\n                this.trigger(\"visualize\", this, ev);\n            },\n            \"click .dbkey a\": function(ev) {\n                this.trigger(\"edit\", this, ev);\n            }\n        }),\n\n        /** listener for item undelete (in the messages section) */\n        _clickUndeleteLink: function(ev) {\n            this.model.undelete();\n            return false;\n        },\n\n        /** listener for item purge (in the messages section) */\n        _clickPurgeLink: function(ev) {\n            if (\n                confirm(\n                    _l(\n                        \"This will permanently remove the data in your dataset. Are you sure?\"\n                    )\n                )\n            ) {\n                this.model.purge();\n            }\n            return false;\n        },\n\n        // ......................................................................... misc\n        /** string rep */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"HDAEditView(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemEdit.prototype.templates = (function() {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        failed_metadata: BASE_MVC.wrapTemplate(\n            [\n                // in this override, provide a link to the edit page\n                '<% if( dataset.state === \"failed_metadata\" ){ %>',\n                '<div class=\"failed_metadata-warning warningmessagesmall\">',\n                _l(\"An error occurred setting the metadata for this dataset\"),\n                '<br /><a href=\"<%- dataset.urls.edit %>\" target=\"_top\">',\n                _l(\"Set it manually or retry auto-detection\"),\n                \"</a>\",\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        ),\n\n        deleted: BASE_MVC.wrapTemplate(\n            [\n                // in this override, provide links to undelete or purge the dataset\n                \"<% if( dataset.deleted && !dataset.purged ){ %>\",\n                // deleted not purged\n                '<div class=\"deleted-msg warningmessagesmall\">',\n                _l(\"This dataset has been deleted\"),\n                '<br /><a class=\"undelete-link\" href=\"javascript:void(0);\">',\n                _l(\"Undelete it\"),\n                \"</a>\",\n                \"<% if( view.purgeAllowed ){ %>\",\n                '<br /><a class=\"purge-link\" href=\"javascript:void(0);\">',\n                _l(\"Permanently remove it from disk\"),\n                \"</a>\",\n                \"<% } %>\",\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        )\n    });\n\n    var visualizationsTemplate = BASE_MVC.wrapTemplate(\n        [\n            \"<% if( visualizations.length === 1 ){ %>\",\n            '<a class=\"visualization-link icon-btn\" href=\"<%- visualizations[0].href %>\"',\n            ' target=\"<%- visualizations[0].target %>\" title=\"',\n            _l(\"Visualize in\"),\n            ' <%- visualizations[0].html %>\">',\n            '<span class=\"fa fa-bar-chart-o\"></span>',\n            \"</a>\",\n\n            \"<% } else { %>\",\n            '<div class=\"visualizations-dropdown dropdown icon-btn\">',\n            '<a data-toggle=\"dropdown\" title=\"',\n            _l(\"Visualize\"),\n            '\">',\n            '<span class=\"fa fa-bar-chart-o\"></span>',\n            \"</a>\",\n            '<ul class=\"dropdown-menu\" role=\"menu\">',\n            \"<% _.each( visualizations, function( visualization ){ %>\",\n            '<li><a class=\"visualization-link\" href=\"<%- visualization.href %>\"',\n            ' target=\"<%- visualization.target %>\">',\n            \"<%- visualization.html %>\",\n            \"</a></li>\",\n            \"<% }); %>\",\n            \"</ul>\",\n            \"</div>\",\n            \"<% } %>\"\n        ],\n        \"visualizations\"\n    );\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        visualizations: visualizationsTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    DatasetListItemEdit: DatasetListItemEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/dataset-li-edit.js","import baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/editable-text\";\n// =============================================================================\n/** A view on any model that has a 'annotation' attribute\n */\nvar AnnotationEditor = Backbone.View\n    .extend(baseMVC.LoggableMixin)\n    .extend(baseMVC.HiddenUntilActivatedViewMixin)\n    .extend({\n        tagName: \"div\",\n        className: \"annotation-display\",\n\n        /** Set up listeners, parse options */\n        initialize: function(options) {\n            options = options || {};\n            this.tooltipConfig = options.tooltipConfig || {\n                placement: \"bottom\"\n            };\n            //console.debug( this, options );\n            // only listen to the model only for changes to annotations\n            this.listenTo(this.model, \"change:annotation\", function() {\n                this.render();\n            });\n            this.hiddenUntilActivated(options.$activator, options);\n        },\n\n        /** Build the DOM elements, call select to on the created input, and set up behaviors */\n        render: function() {\n            var view = this;\n            this.$el.html(this._template());\n\n            //TODO: handle empties better\n            this.$annotation().make_text_editable({\n                use_textarea: true,\n                on_finish: function(newAnnotation) {\n                    view.$annotation().text(newAnnotation);\n                    view.model\n                        .save({ annotation: newAnnotation }, { silent: true })\n                        .fail(function() {\n                            view\n                                .$annotation()\n                                .text(view.model.previous(\"annotation\"));\n                        });\n                }\n            });\n            return this;\n        },\n\n        /** @returns {String} the html text used to build the view's DOM */\n        _template: function() {\n            var annotation = this.model.get(\"annotation\");\n            return [\n                //TODO: make prompt optional\n                '<label class=\"prompt\">',\n                _l(\"Annotation\"),\n                \"</label>\",\n                // set up initial tags by adding as CSV to input vals (necc. to init select2)\n                '<div class=\"annotation\">',\n                _.escape(annotation),\n                \"</div>\"\n            ].join(\"\");\n        },\n\n        /** @returns {jQuery} the main element for this view */\n        $annotation: function() {\n            return this.$el.find(\".annotation\");\n        },\n\n        /** shut down event listeners and remove this view's DOM */\n        remove: function() {\n            this.$annotation.off();\n            this.stopListening(this.model);\n            Backbone.View.prototype.remove.call(this);\n        },\n\n        /** string rep */\n        toString: function() {\n            return [\"AnnotationEditor(\", this.model + \"\", \")\"].join(\"\");\n        }\n    });\n// =============================================================================\nexport default {\n    AnnotationEditor: AnnotationEditor\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/annotation.js","import jQuery from \"jquery\";\nvar $ = jQuery;\nimport GalaxyApp from \"galaxy\";\nimport Router from \"layout/router\";\nimport ToolPanel from \"./panels/tool-panel\";\nimport HistoryPanel from \"./panels/history-panel\";\nimport Page from \"layout/page\";\nimport ToolForm from \"mvc/tool/tool-form\";\nimport FormWrapper from \"mvc/form/form-wrapper\";\nimport UserPreferences from \"mvc/user/user-preferences\";\nimport CustomBuilds from \"mvc/user/user-custom-builds\";\nimport Tours from \"mvc/tours\";\nimport GridView from \"mvc/grid/grid-view\";\nimport GridShared from \"mvc/grid/grid-shared\";\nimport Workflows from \"mvc/workflow/workflow\";\nimport HistoryList from \"mvc/history/history-list\";\nimport ToolFormComposite from \"mvc/tool/tool-form-composite\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport DatasetError from \"mvc/dataset/dataset-error\";\nimport DatasetEditAttributes from \"mvc/dataset/dataset-edit-attributes\";\n\n/** define the 'Analyze Data'/analysis/main/home page for Galaxy\n *  * has a masthead\n *  * a left tool menu to allow the user to load tools in the center panel\n *  * a right history menu that shows the user's current data\n *  * a center panel\n *  Both panels (generally) persist while the center panel shows any\n *  UI needed for the current step of an analysis, like:\n *      * tool forms to set tool parameters,\n *      * tables showing the contents of datasets\n *      * etc.\n */\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new GalaxyApp.GalaxyApp(options, bootstrapped);\n    Galaxy.debug(\"analysis app\");\n\n    /** Routes */\n    var AnalysisRouter = Router.extend({\n        routes: {\n            \"(/)\": \"home\",\n            \"(/)root*\": \"home\",\n            \"(/)tours(/)(:tour_id)\": \"show_tours\",\n            \"(/)user(/)\": \"show_user\",\n            \"(/)user(/)(:form_id)\": \"show_user_form\",\n            \"(/)workflow(/)\": \"show_workflows\",\n            \"(/)workflow/run(/)\": \"show_run\",\n            \"(/)pages(/)create(/)\": \"show_pages_create\",\n            \"(/)pages(/)edit(/)\": \"show_pages_edit\",\n            \"(/)pages(/)(:action_id)\": \"show_pages\",\n            \"(/)visualizations(/)edit(/)\": \"show_visualizations_edit\",\n            \"(/)visualizations/(:action_id)\": \"show_visualizations\",\n            \"(/)workflows/list_published(/)\": \"show_workflows_published\",\n            \"(/)histories(/)rename(/)\": \"show_histories_rename\",\n            \"(/)histories(/)permissions(/)\": \"show_histories_permissions\",\n            \"(/)histories(/)(:action_id)\": \"show_histories\",\n            \"(/)datasets(/)list(/)\": \"show_datasets\",\n            \"(/)workflow/import_workflow\": \"show_import_workflow\",\n            \"(/)custom_builds\": \"show_custom_builds\",\n            \"(/)datasets/edit\": \"show_dataset_edit_attributes\",\n            \"(/)datasets/error\": \"show_dataset_error\"\n        },\n\n        require_login: [\"show_user\", \"show_user_form\", \"show_workflows\"],\n\n        authenticate: function(args, name) {\n            return (\n                (Galaxy.user && Galaxy.user.id) ||\n                this.require_login.indexOf(name) == -1\n            );\n        },\n\n        show_tours: function(tour_id) {\n            if (tour_id) {\n                Tours.giveTour(tour_id);\n            } else {\n                this.page.display(new Tours.ToursView());\n            }\n        },\n\n        show_user: function() {\n            this.page.display(new UserPreferences.View());\n        },\n\n        show_user_form: function(form_id) {\n            var model = new UserPreferences.Model({\n                user_id: Galaxy.params.id\n            });\n            this.page.display(new FormWrapper.View(model.get(form_id)));\n        },\n\n        show_visualizations: function(action_id) {\n            this.page.display(\n                new GridShared.View({\n                    action_id: action_id,\n                    plural: \"Visualizations\",\n                    item: \"visualization\"\n                })\n            );\n        },\n\n        show_visualizations_edit: function() {\n            this.page.display(\n                new FormWrapper.View({\n                    url:\n                        \"visualization/edit?id=\" + QueryStringParsing.get(\"id\"),\n                    redirect: \"visualizations/list\"\n                })\n            );\n        },\n\n        show_workflows_published: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"workflow/list_published\",\n                    dict_format: true\n                })\n            );\n        },\n\n        show_histories: function(action_id) {\n            this.page.display(new HistoryList.View({ action_id: action_id }));\n        },\n\n        show_histories_rename: function() {\n            this.page.display(\n                new FormWrapper.View({\n                    url: \"history/rename?id=\" + QueryStringParsing.get(\"id\"),\n                    redirect: \"histories/list\"\n                })\n            );\n        },\n\n        show_histories_permissions: function() {\n            this.page.display(\n                new FormWrapper.View({\n                    url:\n                        \"history/permissions?id=\" +\n                        QueryStringParsing.get(\"id\"),\n                    redirect: \"histories/list\"\n                })\n            );\n        },\n\n        show_datasets: function() {\n            this.page.display(\n                new GridView({\n                    url_base: Galaxy.root + \"dataset/list\",\n                    dict_format: true\n                })\n            );\n        },\n\n        show_pages: function(action_id) {\n            this.page.display(\n                new GridShared.View({\n                    action_id: action_id,\n                    plural: \"Pages\",\n                    item: \"page\"\n                })\n            );\n        },\n\n        show_pages_create: function() {\n            this.page.display(\n                new FormWrapper.View({\n                    url: \"page/create\",\n                    redirect: \"pages/list\"\n                })\n            );\n        },\n\n        show_pages_edit: function() {\n            this.page.display(\n                new FormWrapper.View({\n                    url: \"page/edit?id=\" + QueryStringParsing.get(\"id\"),\n                    redirect: \"pages/list\"\n                })\n            );\n        },\n\n        show_workflows: function() {\n            this.page.display(new Workflows.View());\n        },\n\n        show_run: function() {\n            this._loadWorkflow();\n        },\n\n        show_import_workflow: function() {\n            this.page.display(new Workflows.ImportWorkflowView());\n        },\n\n        show_custom_builds: function() {\n            var self = this;\n            var historyPanel = this.page.historyPanel.historyView;\n            if (\n                !historyPanel ||\n                !historyPanel.model ||\n                !historyPanel.model.id\n            ) {\n                window.setTimeout(function() {\n                    self.show_custom_builds();\n                }, 500);\n                return;\n            }\n            this.page.display(new CustomBuilds.View());\n        },\n\n        show_dataset_edit_attributes: function() {\n            this.page.display(new DatasetEditAttributes.View());\n        },\n\n        show_dataset_error: function() {\n            this.page.display(new DatasetError.View());\n        },\n\n        /**  */\n        home: function(params) {\n            // TODO: to router, remove Globals\n            // load a tool by id (tool_id) or rerun a previous tool execution (job_id)\n            if (params.tool_id || params.job_id) {\n                if (params.tool_id === \"upload1\") {\n                    this.page.toolPanel.upload.show();\n                    this._loadCenterIframe(\"welcome\");\n                } else {\n                    this._loadToolForm(params);\n                }\n            } else {\n                // show the workflow run form\n                if (params.workflow_id) {\n                    this._loadWorkflow();\n                    // load the center iframe with controller.action: galaxy.org/?m_c=history&m_a=list -> history/list\n                } else if (params.m_c) {\n                    this._loadCenterIframe(params.m_c + \"/\" + params.m_a);\n                    // show the workflow run form\n                } else {\n                    this._loadCenterIframe(\"welcome\");\n                }\n            }\n        },\n\n        /** load the center panel with a tool form described by the given params obj */\n        _loadToolForm: function(params) {\n            //TODO: load tool form code async\n            params.id = decodeURIComponent(params.tool_id);\n            this.page.display(new ToolForm.View(params));\n        },\n\n        /** load the center panel iframe using the given url */\n        _loadCenterIframe: function(url, root) {\n            root = root || Galaxy.root;\n            url = root + url;\n            this.page.$(\"#galaxy_main\").prop(\"src\", url);\n        },\n\n        /** load workflow by its url in run mode */\n        _loadWorkflow: function() {\n            var self = this;\n            Utils.get({\n                url:\n                    Galaxy.root +\n                    \"api/workflows/\" +\n                    Utils.getQueryString(\"id\") +\n                    \"/download?style=run\",\n                success: function(response) {\n                    self.page.display(new ToolFormComposite.View(response));\n                },\n                error: function(response) {\n                    var error_msg =\n                        response.err_msg ||\n                        \"Error occurred while loading the resource.\";\n                    var options = {\n                        message: error_msg,\n                        status: \"danger\",\n                        persistent: true\n                    };\n                    self.page.display(new Ui.Message(options));\n                }\n            });\n        }\n    });\n\n    // render and start the router\n    $(function() {\n        Galaxy.page = new Page.View(\n            _.extend(options, {\n                Left: ToolPanel,\n                Right: HistoryPanel,\n                Router: AnalysisRouter\n            })\n        );\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/analysis.js","import Tools from \"mvc/tool/tools\";\nimport Upload from \"mvc/upload/upload-view\";\nimport _l from \"utils/localization\";\nimport ToolForm from \"mvc/tool/tool-form-composite\";\n\nvar ToolPanel = Backbone.View.extend({\n    initialize: function(page, options) {\n        // access configuration options\n        var config = options.config;\n        this.root = options.root;\n\n        /** @type {Object[]} descriptions of user's workflows to be shown in the tool menu */\n        this.stored_workflow_menu_entries =\n            config.stored_workflow_menu_entries || [];\n\n        // create tool search, tool panel, and tool panel view.\n        var tool_search = new Tools.ToolSearch({\n            hidden: false\n        });\n        var tools = new Tools.ToolCollection(config.toolbox);\n        this.tool_panel = new Tools.ToolPanel({\n            tool_search: tool_search,\n            tools: tools,\n            layout: config.toolbox_in_panel\n        });\n        this.tool_panel_view = new Tools.ToolPanelView({\n            model: this.tool_panel\n        });\n\n        // add upload modal\n        this.upload_button = new Upload({\n            nginx_upload_path: config.nginx_upload_path,\n            ftp_upload_site: config.ftp_upload_site,\n            default_genome: config.default_genome,\n            default_extension: config.default_extension\n        });\n\n        // add uploader button to Galaxy object\n        Galaxy.upload = this.upload_button;\n\n        // components for panel definition\n        this.model = new Backbone.Model({\n            title: _l(\"Tools\"),\n            buttons: [this.upload_button]\n        });\n\n        // build body template\n        this.setElement(this._template());\n    },\n\n    render: function() {\n        // if there are tools, render panel and display everything\n        var self = this;\n        if (this.tool_panel.get(\"layout\").size() > 0) {\n            this.$el.prepend(this.tool_panel_view.$el);\n            this.tool_panel_view.render();\n        }\n        // build the dom for the workflow portion of the tool menu\n        // add internal workflow list\n        self.$(\"#internal-workflows\").append(\n            self._templateAllWorkflow({\n                title: _l(\"All workflows\"),\n                href: \"workflow\"\n            })\n        );\n        _.each(this.stored_workflow_menu_entries, function(menu_entry) {\n            self.$(\"#internal-workflows\").append(\n                self._templateWorkflowLink({\n                    title: menu_entry.stored_workflow.name,\n                    href:\n                        \"workflow/run?id=\" +\n                        menu_entry.encoded_stored_workflow_id\n                })\n            );\n        });\n    },\n\n    /** build a link to one tool */\n    _templateTool: function(tool) {\n        return [\n            '<div class=\"toolTitle\">',\n            '<a href=\"',\n            this.root,\n            tool.href,\n            '\" target=\"galaxy_main\">',\n            tool.title,\n            \"</a>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    /** build a link to 'All Workflows' */\n    _templateAllWorkflow: function(tool) {\n        return [\n            '<div class=\"toolTitle\">',\n            // global\n            '<a href=\"',\n            Galaxy.root,\n            tool.href,\n            '\">',\n            tool.title,\n            \"</a>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    /** build links to workflows in toolpanel */\n    _templateWorkflowLink: function(wf) {\n        return [\n            '<div class=\"toolTitle\">',\n            '<a class=\"' + wf.cls + ' \" href=\"',\n            Galaxy.root,\n            wf.href,\n            '\">',\n            wf.title,\n            \"</a>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    /** override to include inital menu dom and workflow section */\n    _template: function() {\n        return [\n            '<div class=\"toolMenuContainer\">',\n            '<div class=\"toolMenu\" style=\"display: none\">',\n            '<div id=\"search-no-results\" style=\"display: none; padding-top: 5px\">',\n            \"<em><strong>\",\n            _l(\"Search did not match any tools.\"),\n            \"</strong></em>\",\n            \"</div>\",\n            \"</div>\",\n            '<div class=\"toolSectionPad\"/>',\n            '<div class=\"toolSectionPad\"/>',\n            '<div class=\"toolSectionTitle\" id=\"title_XXinternalXXworkflow\">',\n            \"<span>\",\n            _l(\"Workflows\"),\n            \"</span>\",\n            \"</div>\",\n            '<div id=\"internal-workflows\" class=\"toolSectionBody\">',\n            '<div class=\"toolSectionBg\"/>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    toString: function() {\n        return \"toolPanel\";\n    }\n});\n\nexport default ToolPanel;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/panels/tool-panel.js","/** Upload app contains the upload progress button and upload modal, compiles model data for API request **/\nimport Utils from \"utils/utils\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport Tabs from \"mvc/ui/ui-tabs\";\nimport UploadButton from \"mvc/upload/upload-button\";\nimport UploadViewDefault from \"mvc/upload/default/default-view\";\nimport UploadViewComposite from \"mvc/upload/composite/composite-view\";\nimport UploadViewCollection from \"mvc/upload/collection/collection-view\";\nexport default Backbone.View.extend({\n    options: {\n        nginx_upload_path: \"\",\n        ftp_upload_site: \"n/a\",\n        default_genome: \"?\",\n        default_extension: \"auto\",\n        height: 500,\n        width: 900,\n        auto: {\n            id: \"auto\",\n            text: \"Auto-detect\",\n            description:\n                \"This system will try to detect the file type automatically. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be.  You can also upload compressed files, which will automatically be decompressed.\"\n        }\n    },\n\n    // contains all available dataset extensions/types\n    list_extensions: [],\n\n    // contains all available genomes\n    list_genomes: [],\n\n    initialize: function(options) {\n        var self = this;\n        this.options = Utils.merge(options, this.options);\n\n        // create view for upload/progress button\n        this.ui_button = new UploadButton.View({\n            onclick: function(e) {\n                e.preventDefault();\n                self.show();\n            },\n            onunload: function() {\n                var percentage = self.ui_button.model.get(\"percentage\", 0);\n                if (percentage > 0 && percentage < 100) {\n                    return \"Several uploads are queued.\";\n                }\n            }\n        });\n\n        // set element to button view\n        this.setElement(this.ui_button.$el);\n\n        // load extensions\n        var self = this;\n        Utils.get({\n            url: Galaxy.root + \"api/datatypes?extension_only=False\",\n            success: function(datatypes) {\n                for (var key in datatypes) {\n                    self.list_extensions.push({\n                        id: datatypes[key].extension,\n                        text: datatypes[key].extension,\n                        description: datatypes[key].description,\n                        description_url: datatypes[key].description_url,\n                        composite_files: datatypes[key].composite_files\n                    });\n                }\n                self.list_extensions.sort(function(a, b) {\n                    var a_text = a.text && a.text.toLowerCase();\n                    var b_text = b.text && b.text.toLowerCase();\n                    return a_text > b_text ? 1 : a_text < b_text ? -1 : 0;\n                });\n                if (!self.options.datatypes_disable_auto) {\n                    self.list_extensions.unshift(self.options.auto);\n                }\n            }\n        });\n\n        // load genomes\n        Utils.get({\n            url: Galaxy.root + \"api/genomes\",\n            success: function(genomes) {\n                for (var key in genomes) {\n                    self.list_genomes.push({\n                        id: genomes[key][1],\n                        text: genomes[key][0]\n                    });\n                }\n                self.list_genomes.sort(function(a, b) {\n                    if (a.id == self.options.default_genome) {\n                        return -1;\n                    }\n                    if (b.id == self.options.default_genome) {\n                        return 1;\n                    }\n                    return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\n                });\n            }\n        });\n    },\n\n    /** Show/hide upload dialog */\n    show: function() {\n        var self = this;\n        if (!Galaxy.currHistoryPanel || !Galaxy.currHistoryPanel.model) {\n            window.setTimeout(function() {\n                self.show();\n            }, 500);\n            return;\n        }\n        this.current_user = Galaxy.user.id;\n        if (!this.modal) {\n            this.tabs = new Tabs.View();\n            this.default_view = new UploadViewDefault(this);\n            this.tabs.add({\n                id: \"regular\",\n                title: \"Regular\",\n                $el: this.default_view.$el\n            });\n            this.composite_view = new UploadViewComposite(this);\n            this.tabs.add({\n                id: \"composite\",\n                title: \"Composite\",\n                $el: this.composite_view.$el\n            });\n            this.collection_view = new UploadViewCollection(this);\n            this.tabs.add({\n                id: \"collection\",\n                title: \"Collection\",\n                $el: this.collection_view.$el\n            });\n            this.modal = new Modal.View({\n                title: \"Download from web or upload from disk\",\n                body: this.tabs.$el,\n                height: this.options.height,\n                width: this.options.width,\n                closing_events: true,\n                title_separator: false\n            });\n        }\n        this.modal.show();\n    },\n\n    /** Refresh user and current history */\n    currentHistory: function() {\n        return this.current_user && Galaxy.currHistoryPanel.model.get(\"id\");\n    },\n\n    /** Get ftp configuration */\n    currentFtp: function() {\n        return this.current_user && this.options.ftp_upload_site;\n    },\n\n    /**\n          * Package API data from array of models\n          * @param{Array} items - Upload items/rows filtered from a collection\n        */\n    toData: function(items, history_id) {\n        // create dictionary for data submission\n        var data = {\n            payload: {\n                tool_id: \"upload1\",\n                history_id: history_id || this.currentHistory(),\n                inputs: {}\n            },\n            files: [],\n            error_message: null\n        };\n        // add upload tools input data\n        if (items && items.length > 0) {\n            var inputs = {\n                file_count: items.length,\n                dbkey: items[0].get(\"genome\", \"?\"),\n                file_type: items[0].get(\"extension\", \"auto\")\n            };\n            for (var index in items) {\n                var it = items[index];\n                it.set(\"status\", \"running\");\n                if (it.get(\"file_size\") > 0) {\n                    var prefix = \"files_\" + index + \"|\";\n                    inputs[prefix + \"type\"] = \"upload_dataset\";\n                    inputs[prefix + \"space_to_tab\"] =\n                        (it.get(\"space_to_tab\") && \"Yes\") || null;\n                    inputs[prefix + \"to_posix_lines\"] =\n                        (it.get(\"to_posix_lines\") && \"Yes\") || null;\n                    inputs[prefix + \"dbkey\"] = it.get(\"genome\", null);\n                    inputs[prefix + \"file_type\"] = it.get(\"extension\", null);\n                    switch (it.get(\"file_mode\")) {\n                        case \"new\":\n                            inputs[prefix + \"url_paste\"] = it.get(\"url_paste\");\n                            break;\n                        case \"ftp\":\n                            inputs[prefix + \"ftp_files\"] = it.get(\"file_path\");\n                            break;\n                        case \"local\":\n                            data.files.push({\n                                name: prefix + \"file_data\",\n                                file: it.get(\"file_data\")\n                            });\n                    }\n                } else {\n                    data.error_message = \"Upload content incomplete.\";\n                    it.set(\"status\", \"error\");\n                    it.set(\"info\", data.error_message);\n                    break;\n                }\n            }\n            data.payload.inputs = JSON.stringify(inputs);\n        }\n        return data;\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-view.js","/** View for upload/progress bar button */\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                icon: \"fa-upload\",\n                tooltip: \"Download from URL or upload files from disk\",\n                label: \"Load Data\",\n                percentage: 0,\n                status: \"\",\n                onunload: function() {},\n                onclick: function() {}\n            }).set(options);\n        this.setElement(this._template());\n        this.$progress = this.$(\".progress-bar\");\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n        $(window).on(\"beforeunload\", function() {\n            return self.model.get(\"onunload\")();\n        });\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .off(\"click\")\n            .on(\"click\", function(e) {\n                options.onclick(e);\n            })\n            .tooltip({\n                title: this.model.get(\"tooltip\"),\n                placement: \"bottom\"\n            });\n        this.$progress\n            .removeClass()\n            .addClass(\"progress-bar\")\n            .addClass(\"progress-bar-notransition\")\n            .addClass(options.status != \"\" && \"progress-bar-\" + options.status)\n            .css({ width: options.percentage + \"%\" });\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-button\">' +\n            '<div class=\"progress\">' +\n            '<div class=\"progress-bar\"/>' +\n            '<a class=\"panel-header-button\" href=\"javascript:void(0)\" id=\"tool-panel-upload-button\">' +\n            '<span class=\"fa fa-upload\"/>' +\n            \"</a>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\nexport default { View: View };\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-button.js","/** Renders contents of the default uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/default/default-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LazyLimited from \"mvc/lazy/lazy-limited\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n\n        // build template\n        this.setElement(this._template());\n        this.$uploadbox = this.$(\".upload-box\");\n        this.$uploadtable = this.$(\".upload-table\");\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local file\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP file\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnClose\n            ],\n            function(button) {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$uploadbox.uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData(\n                    [self.collection.get(index)],\n                    self.history_id\n                );\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$uploadbox.addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$uploadbox.removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function(ext) {\n                return !ext.composite_files;\n            }),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self._changeExtension(extension);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", function(e) {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self._changeGenome(genome);\n            }\n        });\n\n        // Lazy load helper\n        this.loader = new LazyLimited({\n            $container: this.$uploadbox,\n            collection: this.collection,\n            new_content: function(model) {\n                var upload_row = new UploadRow(self, { model: model });\n                self.$uploadtable.find(\"> tbody:first\").append(upload_row.$el);\n                upload_row.render();\n                return upload_row;\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", function(model) {\n            self._eventRemove(model);\n        });\n        this.render();\n    },\n\n    render: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message =\n                    \"You added \" +\n                    this.counter.announce +\n                    \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n            } else {\n                message =\n                    \"Please wait...\" +\n                    this.counter.announce +\n                    \" out of \" +\n                    this.counter.running +\n                    \" remaining.\";\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 &&\n            this.counter.announce + this.counter.success + this.counter.error >\n                0;\n        var enable_start =\n            this.counter.running == 0 && this.counter.announce > 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table =\n            this.counter.announce + this.counter.success + this.counter.error >\n            0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file\n        });\n        this.render();\n        this.collection.add(new_model);\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(percentage, it.get(\"file_size\"))\n        );\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\" });\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(100, it.get(\"file_size\"))\n        );\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this.render();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this.render();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(function(model) {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this.render();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this.render();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce != 0 && this.counter.running == 0) {\n            // prepare upload process\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each(function(model) {\n                if (model.get(\"status\") == \"init\") {\n                    model.set(\"status\", \"queued\");\n                    self.upload_size += model.get(\"file_size\");\n                }\n            });\n            this.ui_button.model.set({\n                percentage: 0,\n                status: \"success\"\n            });\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n\n            // package ftp files separately, and remove them from queue\n            this._uploadFtp();\n\n            // queue remaining files\n            this.uploadbox.start();\n            this.render();\n        }\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\n                \"Queue will pause after completing the current file...\"\n            );\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            var self = this;\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this.render();\n        }\n    },\n\n    /** Update extension for all models */\n    _changeExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension ||\n                    !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update genome for all models */\n    _changeGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome ||\n                    !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Package and upload ftp files in a single request */\n    _uploadFtp: function() {\n        var self = this;\n        var list = [];\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"queued\" &&\n                model.get(\"file_mode\") == \"ftp\"\n            ) {\n                self.uploadbox.remove(model.id);\n                list.push(model);\n            }\n        });\n        if (list.length > 0) {\n            $.uploadpost({\n                data: this.app.toData(list),\n                url: this.app.options.nginx_upload_path,\n                success: function(message) {\n                    _.each(list, function(model) {\n                        self._eventSuccess(model.id);\n                    });\n                },\n                error: function(message) {\n                    _.each(list, function(model) {\n                        self._eventError(model.id, message);\n                    });\n                }\n            });\n        }\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Type</th>\" +\n            \"<th>Genome</th>\" +\n            \"<th>Settings</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title\">Type (set all):</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/default/default-view.js","/** Renders the default uploader rows */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: \"Upload configuration\",\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // create select genomes\n        this.select_genome = new Select.View({\n            css: \"upload-genome\",\n            data: self.app.list_genomes,\n            container: this.$(\".upload-genome\"),\n            value: default_genome,\n            onchange: function(genome) {\n                self.model.set(\"genome\", genome);\n            }\n        });\n\n        // create select extension\n        this.select_extension = new Select.View({\n            css: \"upload-extension\",\n            data: self.app.list_extensions,\n            container: this.$(\".upload-extension\"),\n            value: default_extension,\n            onchange: function(extension) {\n                self.model.set(\"extension\", extension);\n            }\n        });\n\n        // initialize genome and extension values\n        this.model.set({\n            genome: default_genome,\n            extension: default_extension\n        });\n\n        // handle click event\n        this.$symbol.on(\"click\", function() {\n            self._removeRow();\n        });\n\n        // handle extension info popover\n        this.$(\".upload-extension-info\")\n            .on(\"click\", function(e) {\n                self.app.showExtensionInfo({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value()\n                });\n            })\n            .on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n        // handle settings popover\n        this.$settings\n            .on(\"click\", function(e) {\n                self._showSettings();\n            })\n            .on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", function(e) {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", function() {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", function() {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", function() {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:genome\", function() {\n            self._refreshGenome();\n        });\n        this.listenTo(this.model, \"change:extension\", function() {\n            self._refreshExtension();\n        });\n        this.listenTo(this.model, \"change:file_size\", function() {\n            self._refreshFileSize();\n        });\n    },\n\n    render: function() {\n        this._refreshType();\n        this._refreshPercentage();\n        this._refreshStatus();\n        this._refreshInfo();\n        this._refreshGenome();\n        this._refreshExtension();\n        this._refreshFileSize();\n    },\n\n    /** Remove view */\n    remove: function() {\n        this.select_genome.remove();\n        this.select_extension.remove();\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    /** Render type */\n    _refreshType: function() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(Utils.bytesToString(options.file_size));\n        this.$mode\n            .removeClass()\n            .addClass(\"upload-mode\")\n            .addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text\n                .css({\n                    width: this.$el.width() - 16 + \"px\",\n                    top: this.$el.height() - 8 + \"px\"\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Update extension */\n    _refreshExtension: function() {\n        this.select_extension.value(this.model.get(\"extension\"));\n    },\n\n    /** Update genome */\n    _refreshGenome: function() {\n        this.select_genome.value(this.model.get(\"genome\"));\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: percentage + \"%\" });\n        this.$percentage.html(\n            percentage != 100 ? percentage + \"%\" : \"Adding to history...\"\n        );\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$symbol\n            .removeClass()\n            .addClass(\"upload-symbol\")\n            .addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (enabled) {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        } else {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        }\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function() {\n        this.$size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function() {\n        if (\n            [\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !==\n            -1\n        ) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function(options) {\n        return (\n            '<tr id=\"upload-row-' +\n            options.id +\n            '\" class=\"upload-row\">' +\n            \"<td>\" +\n            '<div class=\"upload-text-column\">' +\n            '<div class=\"upload-mode\"/>' +\n            '<div class=\"upload-title\"/>' +\n            '<div class=\"upload-text\">' +\n            '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n            '<textarea class=\"upload-text-content form-control\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-size\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-extension\" style=\"float: left;\"/>&nbsp;&nbsp' +\n            '<div class=\"upload-extension-info upload-icon-button fa fa-search\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-genome\"/>' +\n            \"</td>\" +\n            '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' +\n            \"<td>\" +\n            '<div class=\"upload-info\">' +\n            '<div class=\"upload-info-text\"/>' +\n            '<div class=\"upload-info-progress progress\">' +\n            '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n            '<div class=\"upload-percentage\">0%</div>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-symbol ' +\n            this.status_classes.init +\n            '\"/>' +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/default/default-row.js","/** Contains helpers to limit/lazy load views for backbone views */\n\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.$container = options.$container;\n        this.collection = options.collection;\n        this.new_content = options.new_content;\n        this.max = options.max || 50;\n        this.content_list = {};\n        this.$message = $(\"<div/>\")\n            .addClass(\"ui-limitloader\")\n            .append(\"...only the first \" + this.max + \" entries are visible.\");\n        this.$container.append(this.$message);\n        this.listenTo(this.collection, \"reset\", this._reset, this);\n        this.listenTo(this.collection, \"add\", this._refresh, this);\n        this.listenTo(this.collection, \"remove\", this._remove, this);\n    },\n\n    /** Checks if the limit has been reached */\n    _done: function() {\n        var done = _.size(this.content_list) > this.max;\n        this.$message[done ? \"show\" : \"hide\"]();\n        return done;\n    },\n\n    /** Remove all content */\n    _reset: function() {\n        _.each(this.content_list, function(content) {\n            content.remove();\n        });\n        this.content_list = {};\n        this.$message.hide();\n    },\n\n    /** Remove content */\n    _remove: function(model) {\n        var model_id = model.id;\n        var content = this.content_list[model_id];\n        if (content) {\n            content.remove();\n            delete this.content_list[model_id];\n        }\n        this._refresh();\n    },\n\n    /** Refreshes container content by adding new views if visible */\n    _refresh: function() {\n        if (!this._done()) {\n            for (var i in this.collection.models) {\n                var model = this.collection.models[i];\n                var view = this.content_list[model.id];\n                if (!this.content_list[model.id]) {\n                    var content = this.new_content(model);\n                    this.content_list[model.id] = content;\n                    if (this._done()) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/lazy/lazy-limited.js","/** Renders contents of the composite uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/composite/composite-row\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nexport default Backbone.View.extend({\n    collection: new UploadModel.Collection(),\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // create button section\n        this.btnStart = new Ui.Button({\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n\n        // append buttons to dom\n        _.each([this.btnStart, this.btnClose], function(button) {\n            self.$(\".upload-buttons\").prepend(button.$el);\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function(ext) {\n                return ext.composite_files;\n            }),\n            onchange: function(extension) {\n                self.collection.reset();\n                var details = _.findWhere(self.list_extensions, {\n                    id: extension\n                });\n                if (details && details.composite_files) {\n                    _.each(details.composite_files, function(item) {\n                        self.collection.add({\n                            id: self.collection.size(),\n                            file_desc: item.description || item.name\n                        });\n                    });\n                }\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", function(e) {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome\n        });\n\n        // listener for collection triggers on change in composite datatype and extension selection\n        this.listenTo(this.collection, \"add\", function(model) {\n            self._eventAnnounce(model);\n        });\n        this.listenTo(this.collection, \"change add\", function() {\n            self.render();\n        });\n        this.select_extension.options.onchange(this.select_extension.value());\n        this.render();\n    },\n\n    render: function() {\n        var model = this.collection.first();\n        if (model && model.get(\"status\") == \"running\") {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        } else {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        }\n        if (\n            this.collection.where({ status: \"ready\" }).length ==\n                this.collection.length &&\n            this.collection.length > 0\n        ) {\n            this.btnStart.enable();\n            this.btnStart.$el.addClass(\"btn-primary\");\n        } else {\n            this.btnStart.disable();\n            this.btnStart.$el.removeClass(\"btn-primary\");\n        }\n        this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n    },\n\n    //\n    // upload events / process pipeline\n    //\n\n    /** Builds the basic ui with placeholder rows for each composite data type file */\n    _eventAnnounce: function(model) {\n        var upload_row = new UploadRow(this, { model: model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n        upload_row.render();\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        var self = this;\n        this.collection.each(function(model) {\n            model.set({\n                genome: self.select_genome.value(),\n                extension: self.select_extension.value()\n            });\n        });\n        $.uploadpost({\n            url: this.app.options.nginx_upload_path,\n            data: this.app.toData(this.collection.filter()),\n            success: function(message) {\n                self._eventSuccess(message);\n            },\n            error: function(message) {\n                self._eventError(message);\n            },\n            progress: function(percentage) {\n                self._eventProgress(percentage);\n            }\n        });\n    },\n\n    /** Refresh progress state */\n    _eventProgress: function(percentage) {\n        this.collection.each(function(it) {\n            it.set(\"percentage\", percentage);\n        });\n    },\n\n    /** Refresh success state */\n    _eventSuccess: function(message) {\n        this.collection.each(function(it) {\n            it.set(\"status\", \"success\");\n        });\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Refresh error state */\n    _eventError: function(message) {\n        this.collection.each(function(it) {\n            it.set({ status: \"error\", info: message });\n        });\n    },\n\n    /** Load html template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-composite\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th/>\" +\n            \"<th/>\" +\n            \"<th>Description</th>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Settings</th>\" +\n            \"<th>Status</th>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title\">Composite Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title\">Genome/Build:</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/composite/composite-view.js","/** Renders the composite upload row view */\nimport Utils from \"utils/utils\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Select from \"mvc/ui/ui-select\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-mode fa fa-exclamation text-primary\",\n        ready: \"upload-mode fa fa-check text-success\",\n        running: \"upload-mode fa fa-spinner fa-spin\",\n        success: \"upload-mode fa fa-check\",\n        error: \"upload-mode fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template());\n        this.$source = this.$(\".upload-source\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$status = this.$(\".upload-status\");\n        this.$text = this.$(\".upload-text\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$file_name = this.$(\".upload-file-name\");\n        this.$file_desc = this.$(\".upload-file-desc\");\n        this.$file_size = this.$(\".upload-file-size\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // build upload functions\n        this.uploadinput = this.$el.uploadinput({\n            ondragover: function() {\n                self.model.get(\"enabled\") && self.$el.addClass(\"warning\");\n            },\n            ondragleave: function() {\n                self.$el.removeClass(\"warning\");\n            },\n            onchange: function(files) {\n                if (\n                    self.model.get(\"status\") != \"running\" &&\n                    files &&\n                    files.length > 0\n                ) {\n                    self.model.reset({\n                        file_data: files[0],\n                        file_name: files[0].name,\n                        file_size: files[0].size,\n                        file_mode: files[0].mode || \"local\"\n                    });\n                    self._refreshReady();\n                }\n            }\n        });\n\n        // source selection popup\n        this.button_menu = new Ui.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: \"Select\",\n            pull: \"left\"\n        });\n        this.$source.append(this.button_menu.$el);\n        this.button_menu.addMenu({\n            icon: \"fa-laptop\",\n            title: \"Choose local file\",\n            onclick: function() {\n                self.uploadinput.dialog();\n            }\n        });\n        if (this.app.ftp_upload_site) {\n            this.button_menu.addMenu({\n                icon: \"fa-folder-open-o\",\n                title: \"Choose FTP file\",\n                onclick: function() {\n                    self._showFtp();\n                }\n            });\n        }\n        this.button_menu.addMenu({\n            icon: \"fa-edit\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self.model.reset({\n                    file_mode: \"new\",\n                    file_name: \"New File\"\n                });\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"Choose FTP file:\",\n            container: this.$source.find(\".ui-button-menu\"),\n            placement: \"right\"\n        });\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: \"Upload configuration\",\n            container: this.$settings,\n            placement: \"bottom\"\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", function(e) {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n            self._refreshReady();\n        });\n\n        // handle settings popover\n        this.$settings\n            .on(\"click\", function(e) {\n                self._showSettings();\n            })\n            .on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", function() {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", function() {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", function() {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_name\", function() {\n            self._refreshFileName();\n        });\n        this.listenTo(this.model, \"change:file_mode\", function() {\n            self._refreshMode();\n        });\n        this.listenTo(this.model, \"change:file_size\", function() {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", function() {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", function() {\n            self.remove();\n        });\n    },\n\n    render: function() {\n        this.$el.attr(\"id\", \"upload-row-\" + this.model.id);\n        this.$file_name.html(_.escape(this.model.get(\"file_name\") || \"-\"));\n        this.$file_desc.html(this.model.get(\"file_desc\") || \"Unavailable\");\n        this.$file_size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n        this.$status.removeClass().addClass(this.status_classes.init);\n    },\n\n    /** Remove view */\n    remove: function() {\n        // call the base class remove method\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    //\n    // handle model events\n    //\n\n    /** Refresh ready or not states */\n    _refreshReady: function() {\n        this.app.collection.each(function(model) {\n            model.set(\n                \"status\",\n                (model.get(\"file_size\") > 0 && \"ready\") || \"init\"\n            );\n        });\n    },\n\n    /** Refresh mode and e.g. show/hide textarea field */\n    _refreshMode: function() {\n        var file_mode = this.model.get(\"file_mode\");\n        if (file_mode == \"new\") {\n            this.height = this.$el.height();\n            this.$text\n                .css({\n                    width: this.$el.width() - 16 + \"px\",\n                    top: this.$el.height() - 8 + \"px\"\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$text_content.val(\"\").trigger(\"keyup\");\n        } else {\n            this.$el.height(this.height);\n            this.$text.hide();\n        }\n    },\n\n    /** Refresh information */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        if (percentage != 0) {\n            this.$progress_bar.css({ width: percentage + \"%\" });\n        } else {\n            this.$progress_bar.addClass(\"no-transition\");\n            this.$progress_bar.css({ width: \"0%\" });\n            this.$progress_bar[0].offsetHeight;\n            this.$progress_bar.removeClass(\"no-transition\");\n        }\n        this.$percentage.html(\n            percentage != 100 ? percentage + \"%\" : \"Adding to history...\"\n        );\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$status.removeClass().addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status != \"running\");\n        this.$text_content.attr(\"disabled\", !this.model.get(\"enabled\"));\n        this.$el.removeClass(\"success danger warning\");\n        if (status == \"running\" || status == \"ready\") {\n            this.model.set(\"percentage\", 0);\n        }\n        this.$source\n            .find(\".button\")\n            [status == \"running\" ? \"addClass\" : \"removeClass\"](\"disabled\");\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.model.set(\"percentage\", 100);\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.model.set(\"percentage\", 0);\n            this.$info_progress.hide();\n            this.$info_text.show();\n        } else {\n            this.$info_progress.show();\n            this.$info_text.hide();\n        }\n    },\n\n    /** File name */\n    _refreshFileName: function() {\n        this.$file_name.html(this.model.get(\"file_name\") || \"-\");\n    },\n\n    /** File size */\n    _refreshFileSize: function() {\n        this.$file_size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Show/hide ftp popup */\n    _showFtp: function() {\n        if (!this.ftp.visible) {\n            var self = this;\n            this.ftp.empty();\n            this.ftp.append(\n                new UploadFtp({\n                    ftp_upload_site: this.app.ftp_upload_site,\n                    onchange: function(ftp_file) {\n                        self.ftp.hide();\n                        if (self.model.get(\"status\") != \"running\" && ftp_file) {\n                            self.model.reset({\n                                file_mode: \"ftp\",\n                                file_name: ftp_file.path,\n                                file_size: ftp_file.size,\n                                file_path: ftp_file.path\n                            });\n                            self._refreshReady();\n                        }\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Show/hide settings popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<tr class=\"upload-row\">' +\n            \"<td>\" +\n            '<div class=\"upload-source\"/>' +\n            '<div class=\"upload-text-column\">' +\n            '<div class=\"upload-text\">' +\n            '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n            '<textarea class=\"upload-text-content form-control\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-status\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-desc upload-title\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-name upload-title\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-size upload-size\"/>' +\n            \"</td>\" +\n            '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' +\n            \"<td>\" +\n            '<div class=\"upload-info\">' +\n            '<div class=\"upload-info-text\"/>' +\n            '<div class=\"upload-info-progress progress\">' +\n            '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n            '<div class=\"upload-percentage\">0%</div>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/composite/composite-row.js","/** Renders contents of the collection uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/collection/collection-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local files\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP files\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnBuild = new Ui.Button({\n            id: \"btn-build\",\n            title: \"Build\",\n            onclick: function() {\n                self._eventBuild();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnBuild,\n                this.btnClose\n            ],\n            function(button) {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$(\".upload-box\").uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData(\n                    [self.collection.get(index)],\n                    self.history_id\n                );\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$(\".upload-box\").addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$(\".upload-box\").removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function(ext) {\n                return !ext.composite_files;\n            }),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        this.collectionType = \"list\";\n        this.select_collection = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-collection-type\"),\n            data: [\n                { id: \"list\", text: \"List\" },\n                { id: \"paired\", text: \"Paired\" },\n                { id: \"list:paired\", text: \"List of Pairs\" }\n            ],\n            value: \"list\",\n            onchange: function(collectionType) {\n                self.updateCollectionType(collectionType);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", function(e) {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", function(e) {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", function(model) {\n            self._eventRemove(model);\n        });\n        this._updateScreen();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file,\n            extension: this.select_extension.value(),\n            genome: this.select_genome.value()\n        });\n        this.collection.add(new_model);\n        var upload_row = new UploadRow(this, { model: new_model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this._updateScreen();\n        upload_row.render();\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(percentage, it.get(\"file_size\"))\n        );\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        // var hdaId = message[\"outputs\"][0][\"id\"];\n        var hids = _.pluck(message[\"outputs\"], \"hid\");\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\", hids: hids });\n        this.ui_button.model.set(\n            \"percentage\",\n            this._uploadPercentage(100, it.get(\"file_size\"))\n        );\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this._updateScreen();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this._updateScreen();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(function(model) {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this._updateScreen();\n    },\n\n    _eventBuild: function() {\n        var allHids = [];\n        _.forEach(this.collection.models, function(upload) {\n            allHids.push.apply(allHids, upload.get(\"hids\"));\n        });\n        var models = _.map(allHids, function(hid) {\n            return Galaxy.currHistoryPanel.collection.getByHid(hid);\n        });\n        var selection = new Galaxy.currHistoryPanel.collection.constructor(\n            models\n        );\n        // I'm building the selection wrong because I need to set this historyId directly.\n        selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n        Galaxy.currHistoryPanel.buildCollection(\n            this.collectionType,\n            selection,\n            true\n        );\n        this.counter.running = 0;\n        this._updateScreen();\n        this._eventReset();\n        this.app.modal.hide();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        this.collection.each(function(model) {\n            if (model.get(\"status\") == \"init\") {\n                model.set(\"status\", \"queued\");\n                self.upload_size += model.get(\"file_size\");\n            }\n        });\n        this.ui_button.model.set({ percentage: 0, status: \"success\" });\n        this.counter.running = this.counter.announce;\n        this.history_id = this.app.currentHistory();\n        this.uploadbox.start();\n        this._updateScreen();\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\n                \"Queue will pause after completing the current file...\"\n            );\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this._updateScreen();\n        }\n    },\n\n    /** Update extension for all models */\n    updateExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension ||\n                    !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function(collectionType) {\n        var self = this;\n        this.collectionType = collectionType;\n    },\n\n    /** Update genome for all models */\n    updateGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome ||\n                    !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Set screen */\n    _updateScreen: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message =\n                    \"You added \" +\n                    this.counter.announce +\n                    \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n            } else {\n                message =\n                    \"Please wait...\" +\n                    this.counter.announce +\n                    \" out of \" +\n                    this.counter.running +\n                    \" remaining.\";\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 &&\n            this.counter.announce + this.counter.success + this.counter.error >\n                0;\n        var enable_start =\n            this.counter.running == 0 && this.counter.announce > 0;\n        var enable_build =\n            this.counter.running == 0 &&\n            this.counter.announce == 0 &&\n            this.counter.success > 0 &&\n            this.counter.error == 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table =\n            this.counter.announce + this.counter.success + this.counter.error >\n            0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\n            \"btn-primary\"\n        );\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n            '<span class=\"upload-footer-collection-type\"/>' +\n            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/collection/collection-view.js","/** Renders the collection uploader rows */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title-extended\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: \"Upload configuration\",\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // handle click event\n        this.$symbol.on(\"click\", function() {\n            self._removeRow();\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", function(e) {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", function() {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", function() {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", function() {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_size\", function() {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", function() {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", function() {\n            self.remove();\n        });\n    },\n\n    render: function() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(Utils.bytesToString(options.file_size));\n        this.$mode\n            .removeClass()\n            .addClass(\"upload-mode\")\n            .addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text\n                .css({\n                    width: this.$el.width() - 16 + \"px\",\n                    top: this.$el.height() - 8 + \"px\"\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: percentage + \"%\" });\n        this.$percentage.html(\n            percentage != 100 ? percentage + \"%\" : \"Adding to history...\"\n        );\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$symbol\n            .removeClass()\n            .addClass(\"upload-symbol\")\n            .addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function() {\n        this.$size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function() {\n        if (\n            [\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !==\n            -1\n        ) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function(options) {\n        return (\n            '<tr id=\"upload-row-' +\n            options.id +\n            '\" class=\"upload-row\">' +\n            \"<td>\" +\n            '<div class=\"upload-text-column\">' +\n            '<div class=\"upload-mode\"/>' +\n            '<div class=\"upload-title-extended\"/>' +\n            '<div class=\"upload-text\">' +\n            '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n            '<textarea class=\"upload-text-content form-control\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-size\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-info\">' +\n            '<div class=\"upload-info-text\"/>' +\n            '<div class=\"upload-info-progress progress\">' +\n            '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n            '<div class=\"upload-percentage\">0%</div>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-symbol ' +\n            this.status_classes.init +\n            '\"/>' +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/collection/collection-row.js","define([], function() {\n    return {\n        tool: \"fa-wrench\",\n        data_input: \"fa-file-o\",\n        data_collection_input: \"fa-folder-o\",\n        subworkflow: \"fa-sitemap fa-rotate-270\",\n        pause: \"fa-pause\"\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/workflow/workflow-icons.js","import Ui from \"mvc/ui/ui-misc\";\nimport historyOptionsMenu from \"mvc/history/options-menu\";\nimport CurrentHistoryView from \"mvc/history/history-view-edit-current\";\nimport _l from \"utils/localization\";\n\n/** the right hand panel in the analysis page that shows the current history */\nvar HistoryPanel = Backbone.View.extend({\n    initialize: function(page, options) {\n        var self = this;\n        this.userIsAnonymous = Galaxy.user.isAnonymous();\n        this.allow_user_dataset_purge = options.config.allow_user_dataset_purge;\n        this.root = options.root;\n\n        // view of the current history\n        this.historyView = new CurrentHistoryView.CurrentHistoryView({\n            className:\n                CurrentHistoryView.CurrentHistoryView.prototype.className +\n                \" middle\",\n            purgeAllowed: this.allow_user_dataset_purge,\n            linkTarget: \"galaxy_main\"\n        });\n\n        // add history panel to Galaxy object\n        Galaxy.currHistoryPanel = this.historyView;\n        Galaxy.currHistoryPanel.listenToGalaxy(Galaxy);\n\n        // build buttons\n        this.buttonRefresh = new Ui.ButtonLink({\n            id: \"history-refresh-button\",\n            title: \"Refresh history\",\n            cls: \"panel-header-button\",\n            icon: \"fa fa-refresh\",\n            onclick: function() {\n                self.historyView.loadCurrentHistory();\n            }\n        });\n        this.buttonOptions = new Ui.ButtonLink({\n            id: \"history-options-button\",\n            title: \"History options\",\n            cls: \"panel-header-button\",\n            target: \"galaxy_main\",\n            icon: \"fa fa-cog\",\n            href: this.root + \"root/history_options\"\n        });\n        this.buttonViewMulti = new Ui.ButtonLink({\n            id: \"history-view-multi-button\",\n            title: \"View all histories\",\n            cls: \"panel-header-button\",\n            icon: \"fa fa-columns\",\n            href: this.root + \"history/view_multiple\"\n        });\n\n        // define components\n        this.model = new Backbone.Model({\n            cls: \"history-right-panel\",\n            title: _l(\"History\"),\n            buttons: [\n                this.buttonRefresh,\n                this.buttonOptions,\n                this.buttonViewMulti\n            ]\n        });\n\n        // build body template and connect history view\n        this.setElement(this._template());\n        this.historyView.setElement(this.$el);\n        this.historyView.connectToQuotaMeter(Galaxy.quotaMeter);\n        this.historyView.loadCurrentHistory();\n\n        // fetch to update the quota meter adding 'current' for any anon-user's id\n        Galaxy.listenTo(this.historyView, \"history-size-change\", function() {\n            Galaxy.user.fetch({\n                url: Galaxy.user.urlRoot() + \"/\" + (Galaxy.user.id || \"current\")\n            });\n        });\n    },\n\n    render: function() {\n        this.optionsMenu = historyOptionsMenu(this.buttonOptions.$el, {\n            anonymous: this.userIsAnonymous,\n            purgeAllowed: this.allow_user_dataset_purge,\n            root: this.root\n        });\n        this.buttonViewMulti.$el[!this.userIsAnonymous ? \"show\" : \"hide\"]();\n    },\n\n    /** add history view div */\n    _template: function(data) {\n        return [\n            '<div id=\"current-history-panel\" class=\"history-panel middle\"/>'\n        ].join(\"\");\n    },\n\n    toString: function() {\n        return \"historyPanel\";\n    }\n});\n\nexport default HistoryPanel;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/panels/history-panel.js","import PopupMenu from \"mvc/ui/popup-menu\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport Webhooks from \"mvc/webhooks\";\n\n// ============================================================================\nvar menu = [\n    {\n        html: _l(\"History Lists\"),\n        header: true\n    },\n    {\n        html: _l(\"Saved Histories\"),\n        href: \"histories/list\",\n        target: \"_top\"\n    },\n    {\n        html: _l(\"Histories Shared with Me\"),\n        href: \"histories/list_shared\",\n        target: \"_top\"\n    },\n    {\n        html: _l(\"Current History\"),\n        header: true,\n        anon: true\n    },\n    {\n        html: _l(\"Create New\"),\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel) {\n                Galaxy.currHistoryPanel.createNewHistory();\n            }\n        }\n    },\n    {\n        html: _l(\"Copy History\"),\n        func: function() {\n            historyCopyDialog(Galaxy.currHistoryPanel.model).done(function() {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    },\n    {\n        html: _l(\"Share or Publish\"),\n        href: \"history/sharing\"\n    },\n    {\n        html: _l(\"Show Structure\"),\n        href: \"history/display_structured\",\n        anon: true\n    },\n    {\n        html: _l(\"Extract Workflow\"),\n        href: \"workflow/build_from_current_history\"\n    },\n    {\n        html: _l(\"Delete\"),\n        anon: true,\n        func: function() {\n            if (\n                Galaxy &&\n                Galaxy.currHistoryPanel &&\n                confirm(_l(\"Really delete the current history?\"))\n            ) {\n                Galaxy.currHistoryPanel.model._delete().done(function() {\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n            }\n        }\n    },\n    {\n        html: _l(\"Delete Permanently\"),\n        purge: true,\n        anon: true,\n        func: function() {\n            if (\n                Galaxy &&\n                Galaxy.currHistoryPanel &&\n                confirm(\n                    _l(\n                        \"Really delete the current history permanently? This cannot be undone.\"\n                    )\n                )\n            ) {\n                Galaxy.currHistoryPanel.model.purge().done(function() {\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n            }\n        }\n    },\n\n    {\n        html: _l(\"Dataset Actions\"),\n        header: true,\n        anon: true\n    },\n    {\n        html: _l(\"Copy Datasets\"),\n        href: \"dataset/copy_datasets\"\n    },\n    {\n        html: _l(\"Dataset Security\"),\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel && Galaxy.router) {\n                Galaxy.router.push(\n                    \"/histories/permissions?id=\" +\n                        Galaxy.currHistoryPanel.model.id\n                );\n            }\n        }\n    },\n    {\n        html: _l(\"Resume Paused Jobs\"),\n        href: \"history/resume_paused_jobs?current=True\",\n        anon: true\n    },\n    {\n        html: _l(\"Collapse Expanded Datasets\"),\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel) {\n                Galaxy.currHistoryPanel.collapseAll();\n            }\n        }\n    },\n    {\n        html: _l(\"Unhide Hidden Datasets\"),\n        anon: true,\n        func: function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if (\n                Galaxy &&\n                Galaxy.currHistoryPanel &&\n                confirm(_l(\"Really unhide all hidden datasets?\"))\n            ) {\n                $.post(\n                    Galaxy.root + \"history/adjust_hidden\",\n                    { user_action: \"unhide\" },\n                    function() {\n                        Galaxy.currHistoryPanel.loadCurrentHistory();\n                    }\n                );\n            }\n        }\n    },\n    {\n        html: _l(\"Delete Hidden Datasets\"),\n        anon: true,\n        func: function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if (\n                Galaxy &&\n                Galaxy.currHistoryPanel &&\n                confirm(_l(\"Really delete all hidden datasets?\"))\n            ) {\n                $.post(\n                    Galaxy.root + \"history/adjust_hidden\",\n                    { user_action: \"delete\" },\n                    function() {\n                        Galaxy.currHistoryPanel.loadCurrentHistory();\n                    }\n                );\n            }\n        }\n    },\n    {\n        html: _l(\"Purge Deleted Datasets\"),\n        confirm: _l(\n            \"Really delete all deleted datasets permanently? This cannot be undone.\"\n        ),\n        href: \"history/purge_deleted_datasets\",\n        purge: true,\n        anon: true\n    },\n\n    {\n        html: _l(\"Downloads\"),\n        header: true\n    },\n    {\n        html: _l(\"Export Tool Citations\"),\n        href: \"history/citations\",\n        anon: true\n    },\n    {\n        html: _l(\"Export History to File\"),\n        href: \"history/export_archive?preview=True\",\n        anon: true\n    },\n\n    {\n        html: _l(\"Other Actions\"),\n        header: true\n    },\n    {\n        html: _l(\"Import from File\"),\n        href: \"history/import_archive\"\n    }\n];\n\n// Webhooks\nWebhooks.add({\n    url: \"api/webhooks/history-menu/all\",\n    async: false, // (hypothetically) slows down the performance\n    callback: function(webhooks) {\n        var webhooks_menu = [];\n\n        $.each(webhooks.models, function(index, model) {\n            var webhook = model.toJSON();\n            if (webhook.activate) {\n                webhooks_menu.push({\n                    html: _l(webhook.config.title),\n                    // func: function() {},\n                    anon: true\n                });\n            }\n        });\n\n        if (webhooks_menu.length > 0) {\n            webhooks_menu.unshift({\n                html: _l(\"Webhooks\"),\n                header: true\n            });\n            $.merge(menu, webhooks_menu);\n        }\n    }\n});\n\nfunction buildMenu(isAnon, purgeAllowed, urlRoot) {\n    return _.clone(menu).filter(function(menuOption) {\n        if (isAnon && !menuOption.anon) {\n            return false;\n        }\n        if (!purgeAllowed && menuOption.purge) {\n            return false;\n        }\n\n        //TODO:?? hard-coded galaxy_main\n        if (menuOption.href) {\n            menuOption.href = urlRoot + menuOption.href;\n            menuOption.target = menuOption.target || \"galaxy_main\";\n        }\n\n        if (menuOption.confirm) {\n            menuOption.func = function() {\n                if (confirm(menuOption.confirm)) {\n                    galaxy_main.location = menuOption.href;\n                }\n            };\n        }\n        return true;\n    });\n}\n\nvar create = function($button, options) {\n    options = options || {};\n    var isAnon = options.anonymous === undefined ? true : options.anonymous,\n        purgeAllowed = options.purgeAllowed || false,\n        menu = buildMenu(isAnon, purgeAllowed, Galaxy.root);\n    //console.debug( 'menu:', menu );\n    return new PopupMenu($button, menu);\n};\n\n// ============================================================================\nexport default create;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/options-menu.js","import HISTORY_MODEL from \"mvc/history/history-model\";\nimport HISTORY_VIEW_EDIT from \"mvc/history/history-view-edit\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n// ============================================================================\n/** session storage for history panel preferences (and to maintain state)\n */\nvar HistoryViewPrefs = BASE_MVC.SessionStorageModel.extend(\n    /** @lends HistoryViewPrefs.prototype */ {\n        defaults: {\n            /** should the tags editor be shown or hidden initially? */\n            tagsEditorShown: false,\n            /** should the annotation editor be shown or hidden initially? */\n            annotationEditorShown: false,\n            ///** what is the currently focused content (dataset or collection) in the current history?\n            // *      (the history panel will highlight and scroll to the focused content view)\n            // */\n            //focusedContentId : null\n            /** Current scroll position */\n            scrollPosition: 0\n        },\n        toString: function() {\n            return \"HistoryViewPrefs(\" + JSON.stringify(this.toJSON()) + \")\";\n        }\n    }\n);\n\n/** key string to store panel prefs (made accessible on class so you can access sessionStorage directly) */\nHistoryViewPrefs.storageKey = function storageKey() {\n    return \"history-panel\";\n};\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HISTORY_VIEW_EDIT.HistoryViewEdit;\n// used in root/index.mako\n/** @class View/Controller for the user's current history model as used in the history\n *      panel (current right hand panel) of the analysis page.\n *\n *  The only history panel that:\n *      will poll for updates.\n *      displays datasets in reverse hid order.\n */\nvar CurrentHistoryView = _super.extend(\n    /** @lends CurrentHistoryView.prototype */ {\n        className: _super.prototype.className + \" current-history-panel\",\n\n        /** override to use drilldown (and not foldout) for how collections are displayed */\n        HDCAViewClass: _super.prototype.HDCAViewClass.extend({\n            foldoutStyle: \"drilldown\"\n        }),\n\n        emptyMsg: [\n            _l(\"This history is empty\"),\n            \". \",\n            _l(\"You can \"),\n            '<a class=\"uploader-link\" href=\"javascript:void(0)\">',\n            _l(\"load your own data\"),\n            \"</a>\",\n            _l(\" or \"),\n            '<a class=\"get-data-link\" href=\"javascript:void(0)\">',\n            _l(\"get data from an external source\"),\n            \"</a>\"\n        ].join(\"\"),\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events */\n        initialize: function(attributes) {\n            attributes = attributes || {};\n\n            // ---- persistent preferences\n            /** maintain state / preferences over page loads */\n            this.preferences = new HistoryViewPrefs(\n                _.extend(\n                    {\n                        id: HistoryViewPrefs.storageKey()\n                    },\n                    _.pick(\n                        attributes,\n                        _.keys(HistoryViewPrefs.prototype.defaults)\n                    )\n                )\n            );\n\n            _super.prototype.initialize.call(this, attributes);\n\n            /** sub-views that will overlay this panel (collections) */\n            this.panelStack = [];\n\n            /** id of currently focused content */\n            this.currentContentId = attributes.currentContentId || null;\n            //NOTE: purposely not sent to localstorage since panel recreation roughly lines up with a reset of this value\n        },\n\n        /** Override to cache the current scroll position with a listener */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n\n            var panel = this;\n            // reset scroll position when there's a new history\n            this.on(\"new-model\", function() {\n                panel.preferences.set(\"scrollPosition\", 0);\n            });\n        },\n\n        // ------------------------------------------------------------------------ loading history/item models\n        // TODO: next three more appropriate moved to the app level\n        /** (re-)loads the user's current history & contents w/ details */\n        loadCurrentHistory: function() {\n            return this.loadHistory(null, {\n                url: Galaxy.root + \"history/current_history_json\"\n            });\n        },\n\n        /** loads a history & contents w/ details and makes them the current history */\n        switchToHistory: function(historyId, attributes) {\n            if (Galaxy.user.isAnonymous()) {\n                this.trigger(\n                    \"error\",\n                    _l(\"You must be logged in to switch histories\"),\n                    _l(\"Anonymous user\")\n                );\n                return $.when();\n            }\n            return this.loadHistory(historyId, {\n                url: Galaxy.root + \"history/set_as_current?id=\" + historyId\n            });\n        },\n\n        /** creates a new history on the server and sets it as the user's current history */\n        createNewHistory: function(attributes) {\n            if (Galaxy.user.isAnonymous()) {\n                this.trigger(\n                    \"error\",\n                    _l(\"You must be logged in to create histories\"),\n                    _l(\"Anonymous user\")\n                );\n                return $.when();\n            }\n            return this.loadHistory(null, {\n                url: Galaxy.root + \"history/create_new_current\"\n            });\n        },\n\n        /** release/free/shutdown old models and set up panel for new models */\n        setModel: function(model, attributes, render) {\n            _super.prototype.setModel.call(this, model, attributes, render);\n            if (this.model && this.model.id) {\n                this.log(\"checking for updates\");\n                this.model.checkForUpdates();\n            }\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ history/content event listening\n        /** listening for history events */\n        _setUpModelListeners: function() {\n            _super.prototype._setUpModelListeners.call(this);\n            // re-broadcast any model change events so that listeners don't have to re-bind to each history\n            return this.listenTo(this.model, {\n                \"change:nice_size change:size\": function() {\n                    this.trigger(\n                        \"history-size-change\",\n                        this,\n                        this.model,\n                        arguments\n                    );\n                },\n                \"change:id\": function() {\n                    this.once(\"loading-done\", function() {\n                        this.model.checkForUpdates();\n                    });\n                }\n            });\n        },\n\n        /** listening for collection events */\n        _setUpCollectionListeners: function() {\n            _super.prototype._setUpCollectionListeners.call(this);\n            // if a hidden item is created (gen. by a workflow), moves thru the updater to the ready state,\n            //  then: remove it from the collection if the panel is set to NOT show hidden datasets\n            this.listenTo(this.collection, \"state:ready\", function(\n                model,\n                newState,\n                oldState\n            ) {\n                if (\n                    !model.get(\"visible\") &&\n                    !this.collection.storage.includeHidden()\n                ) {\n                    this.removeItemView(model);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ panel rendering\n        /** override to add a handler to capture the scroll position when the parent scrolls */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            // console.log( '_setUpBehaviors', this.$scrollContainer( $where ).get(0), this.$list( $where ) );\n            // we need to call this in _setUpBehaviors which is called after render since the $el\n            // may not be attached to $el.parent and $scrollContainer() may not work\n            var panel = this;\n            _super.prototype._setUpBehaviors.call(panel, $where);\n\n            // cache the handler to remove and re-add so we don't pile up the handlers\n            if (!this._debouncedScrollCaptureHandler) {\n                this._debouncedScrollCaptureHandler = _.debounce(\n                    function scrollCapture() {\n                        // cache the scroll position (only if visible)\n                        if (panel.$el.is(\":visible\")) {\n                            panel.preferences.set(\n                                \"scrollPosition\",\n                                $(this).scrollTop()\n                            );\n                        }\n                    },\n                    40\n                );\n            }\n\n            panel\n                .$scrollContainer($where)\n                .off(\"scroll\", this._debouncedScrollCaptureHandler)\n                .on(\"scroll\", this._debouncedScrollCaptureHandler);\n            return panel;\n        },\n\n        /** In this override, handle null models and move the search input to the top */\n        _buildNewRender: function() {\n            if (!this.model) {\n                return $();\n            }\n            var $newRender = _super.prototype._buildNewRender.call(this);\n            $newRender\n                .find(\".search\")\n                .prependTo($newRender.find(\"> .controls\"));\n            this._renderQuotaMessage($newRender);\n            return $newRender;\n        },\n\n        /** render the message displayed when a user is over quota and can't run jobs */\n        _renderQuotaMessage: function($whereTo) {\n            $whereTo = $whereTo || this.$el;\n            return $(this.templates.quotaMsg({}, this)).prependTo(\n                $whereTo.find(\".messages\")\n            );\n        },\n\n        /** In this override, get and set current panel preferences when editor is used */\n        _renderTags: function($where) {\n            var panel = this;\n            // render tags and show/hide based on preferences\n            _super.prototype._renderTags.call(panel, $where);\n            if (panel.preferences.get(\"tagsEditorShown\")) {\n                panel.tagsEditor.toggle(true);\n            }\n            // store preference when shown or hidden\n            panel.listenTo(\n                panel.tagsEditor,\n                \"hiddenUntilActivated:shown hiddenUntilActivated:hidden\",\n                function(tagsEditor) {\n                    panel.preferences.set(\"tagsEditorShown\", tagsEditor.hidden);\n                }\n            );\n        },\n\n        /** In this override, get and set current panel preferences when editor is used */\n        _renderAnnotation: function($where) {\n            var panel = this;\n            // render annotation and show/hide based on preferences\n            _super.prototype._renderAnnotation.call(panel, $where);\n            if (panel.preferences.get(\"annotationEditorShown\")) {\n                panel.annotationEditor.toggle(true);\n            }\n            // store preference when shown or hidden\n            panel.listenTo(\n                panel.annotationEditor,\n                \"hiddenUntilActivated:shown hiddenUntilActivated:hidden\",\n                function(annotationEditor) {\n                    panel.preferences.set(\n                        \"annotationEditorShown\",\n                        annotationEditor.hidden\n                    );\n                }\n            );\n        },\n\n        /** Override to scroll to cached position (in prefs) after swapping */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            var panel = this;\n            _.delay(function() {\n                var pos = panel.preferences.get(\"scrollPosition\");\n                if (pos) {\n                    panel.scrollTo(pos, 0);\n                }\n            }, 10);\n            //TODO: is this enough of a delay on larger histories?\n\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** Override to add the current-content highlight class to currentContentId's view */\n        _attachItems: function($whereTo) {\n            _super.prototype._attachItems.call(this, $whereTo);\n            var panel = this;\n            if (panel.currentContentId) {\n                panel._setCurrentContentById(panel.currentContentId);\n            }\n            return this;\n        },\n\n        /** Override to remove any drill down panels */\n        addItemView: function(model, collection, options) {\n            var view = _super.prototype.addItemView.call(\n                this,\n                model,\n                collection,\n                options\n            );\n            if (!view) {\n                return view;\n            }\n            if (this.panelStack.length) {\n                return this._collapseDrilldownPanel();\n            }\n            return view;\n        },\n\n        // ------------------------------------------------------------------------ collection sub-views\n        /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            _super.prototype._setUpItemViewListeners.call(panel, view);\n            // use pub-sub to: handle drilldown expansion and collapse\n            return panel.listenTo(view, {\n                \"expanded:drilldown\": function(v, drilldown) {\n                    this._expandDrilldownPanel(drilldown);\n                },\n                \"collapsed:drilldown\": function(v, drilldown) {\n                    this._collapseDrilldownPanel(drilldown);\n                }\n            });\n        },\n\n        /** display 'current content': add a visible highlight and store the id of a content item */\n        setCurrentContent: function(view) {\n            this.$(\".history-content.current-content\").removeClass(\n                \"current-content\"\n            );\n            if (view) {\n                view.$el.addClass(\"current-content\");\n                this.currentContentId = view.model.id;\n            } else {\n                this.currentContentId = null;\n            }\n        },\n\n        /** find the view with the id and then call setCurrentContent on it */\n        _setCurrentContentById: function(id) {\n            var view = this.viewFromModelId(id) || null;\n            this.setCurrentContent(view);\n        },\n\n        /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n        _expandDrilldownPanel: function(drilldown) {\n            this.panelStack.push(drilldown);\n            // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n            this.$controls()\n                .add(this.$list())\n                .hide();\n            drilldown.parentName = this.model.get(\"name\");\n            drilldown\n                .delegateEvents()\n                .render()\n                .$el.appendTo(this.$el);\n        },\n\n        /** Handle drilldown close by freeing the panel and re-rendering this panel */\n        _collapseDrilldownPanel: function(drilldown) {\n            this.panelStack.pop();\n            //TODO: MEM: free the panel\n            this.$controls()\n                .add(this.$list())\n                .show();\n        },\n\n        // ........................................................................ panel events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            // the two links in the empty message\n            \"click .uploader-link\": function(ev) {\n                Galaxy.upload.show(ev);\n            },\n            \"click .get-data-link\": function(ev) {\n                var $toolMenu = $(\".toolMenuContainer\");\n                $toolMenu.parent().scrollTop(0);\n                $toolMenu.find('span:contains(\"Get Data\")').click();\n            }\n        }),\n\n        // ........................................................................ external objects/MVC\n        listenToGalaxy: function(galaxy) {\n            this.listenTo(galaxy, {\n                // when the galaxy_main iframe is loaded with a new page,\n                // compare the url to the following list and if there's a match\n                // pull the id from url and indicate in the history view that\n                // the dataset with that id is the 'current'ly active dataset\n                \"center-frame:load\": function(data) {\n                    var pathToMatch = data.fullpath;\n                    var hdaId = null;\n                    var useToURLRegexMap = {\n                        display: /datasets\\/([a-f0-9]+)\\/display/,\n                        edit: /datasets\\/([a-f0-9]+)\\/edit/,\n                        report_error: /dataset\\/errors\\?id=([a-f0-9]+)/,\n                        rerun: /tool_runner\\/rerun\\?id=([a-f0-9]+)/,\n                        show_params: /datasets\\/([a-f0-9]+)\\/show_params/\n                        // no great way to do this here? (leave it in the dataset event handlers above?)\n                        // 'visualization' : 'visualization',\n                    };\n                    _.find(useToURLRegexMap, function(regex, use) {\n                        // grab the more specific match result (1), save, and use it as the find flag\n                        hdaId = _.result(pathToMatch.match(regex), 1);\n                        return hdaId;\n                    });\n                    // need to type mangle to go from web route to history contents\n                    this._setCurrentContentById(\n                        hdaId ? \"dataset-\" + hdaId : null\n                    );\n                },\n                // when the center panel is given a new view, clear the current indicator\n                \"center-panel:load\": function(view) {\n                    this._setCurrentContentById();\n                }\n            });\n        },\n\n        //TODO: remove quota meter from panel and remove this\n        /** add listeners to an external quota meter (mvc/user/user-quotameter.js) */\n        connectToQuotaMeter: function(quotaMeter) {\n            if (!quotaMeter) {\n                return this;\n            }\n            // show/hide the 'over quota message' in the history when the meter tells it to\n            this.listenTo(quotaMeter, \"quota:over\", this.showQuotaMessage);\n            this.listenTo(quotaMeter, \"quota:under\", this.hideQuotaMessage);\n\n            // having to add this to handle re-render of hview while overquota (the above do not fire)\n            this.on(\"rendered rendered:initial\", function() {\n                if (quotaMeter && quotaMeter.isOverQuota()) {\n                    this.showQuotaMessage();\n                }\n            });\n            return this;\n        },\n\n        /** Override to preserve the quota message */\n        clearMessages: function(ev) {\n            var $target = !_.isUndefined(ev)\n                ? $(ev.currentTarget)\n                : this.$messages().children('[class$=\"message\"]');\n            $target = $target.not(\".quota-message\");\n            $target.fadeOut(this.fxSpeed, function() {\n                $(this).remove();\n            });\n            return this;\n        },\n\n        /** Show the over quota message (which happens to be in the history panel).\n     */\n        showQuotaMessage: function() {\n            var $msg = this.$(\".quota-message\");\n            if ($msg.is(\":hidden\")) {\n                $msg.slideDown(this.fxSpeed);\n            }\n        },\n\n        /** Hide the over quota message (which happens to be in the history panel).\n     */\n        hideQuotaMessage: function() {\n            var $msg = this.$(\".quota-message\");\n            if (!$msg.is(\":hidden\")) {\n                $msg.slideUp(this.fxSpeed);\n            }\n        },\n\n        // ........................................................................ options menu\n        //TODO: remove to batch\n        /** unhide any hidden datasets */\n        unhideHidden: function() {\n            var self = this;\n            if (confirm(_l(\"Really unhide all hidden datasets?\"))) {\n                // get all hidden, regardless of deleted/purged\n                return self.model.contents\n                    ._filterAndUpdate(\n                        { visible: false, deleted: \"\", purged: \"\" },\n                        { visible: true }\n                    )\n                    .done(function() {\n                        // TODO: would be better to render these as they're unhidden instead of all at once\n                        if (!self.model.contents.includeHidden) {\n                            self.renderItems();\n                        }\n                    });\n            }\n            return jQuery.when();\n        },\n\n        /** delete any hidden datasets */\n        deleteHidden: function() {\n            var self = this;\n            if (confirm(_l(\"Really delete all hidden datasets?\"))) {\n                return self.model.contents._filterAndUpdate(\n                    // get all hidden, regardless of deleted/purged\n                    { visible: false, deleted: \"\", purged: \"\" },\n                    // both delete *and* unhide them\n                    { deleted: true, visible: true }\n                );\n            }\n            return jQuery.when();\n        },\n\n        /** Return a string rep of the history */\n        toString: function() {\n            return (\n                \"CurrentHistoryView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nCurrentHistoryView.prototype.templates = (function() {\n    var quotaMsgTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"quota-message errormessage\">',\n            _l(\"You are over your disk quota\"),\n            \". \",\n            _l(\n                \"Tool execution is on hold until your disk usage drops below your allocated quota\"\n            ),\n            \".\",\n            \"</div>\"\n        ],\n        \"history\"\n    );\n    return _.extend(_.clone(_super.prototype.templates), {\n        quotaMsg: quotaMsgTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    CurrentHistoryView: CurrentHistoryView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-view-edit-current.js","define([], function() {\n    //ASSUMES: jquery\n    //=============================================================================\n    /** @class AjaxQueue\n *  Class that allows queueing functions that return jQuery promises (such\n *  as ajax calls). Each function waits for the previous to complete before\n *  being called\n *\n *  @constructor accepts a list of functions and automatically begins\n *      processing them\n */\n    function AjaxQueue(initialFunctions) {\n        //TODO: possibly rename to DeferredQueue\n        var self = this;\n        /** the main deferred for the entire queue - note: also sends notifications of progress */\n        self.deferred = jQuery.Deferred();\n        /** the queue array of functions */\n        self.queue = [];\n        /** cache the response from each deferred call - error or success */\n        self.responses = [];\n        /** total number of fn's to process */\n        self.numToProcess = 0;\n        /** is the queue processing/waiting for any calls to return? */\n        self.running = false;\n\n        self.init(initialFunctions || []);\n        self.start();\n\n        return self;\n    }\n\n    /** add all fns in initialFunctions (if any) to the queue */\n    AjaxQueue.prototype.init = function init(initialFunctions) {\n        var self = this;\n        initialFunctions.forEach(function(fn) {\n            self.add(fn);\n        });\n    };\n\n    /** add a fn to the queue */\n    AjaxQueue.prototype.add = function add(fn) {\n        //console.debug( 'AjaxQueue.prototype.add:', fn );\n        var self = this,\n            index = this.queue.length;\n        this.numToProcess += 1;\n\n        this.queue.push(function() {\n            var fnIndex = index,\n                xhr = fn();\n            // if successful, notify using the deferred to allow tracking progress\n            xhr.done(function(response) {\n                self.deferred.notify({\n                    curr: fnIndex,\n                    total: self.numToProcess,\n                    response: response\n                });\n            });\n            // (regardless of previous error or success) if not last ajax call, shift and call the next\n            //  if last fn, resolve deferred\n            xhr.always(function(response) {\n                self.responses.push(response);\n                if (self.queue.length) {\n                    self.queue.shift()();\n                } else {\n                    self.stop();\n                }\n            });\n        });\n        return this;\n    };\n\n    /** start processing the queue */\n    AjaxQueue.prototype.start = function start() {\n        if (this.queue.length) {\n            this.running = true;\n            this.queue.shift()();\n        }\n        return this;\n    };\n\n    /** stop the queue\n *  @param {boolean} causeFail  cause an error/fail on the main deferred\n *  @param {String} msg         message to send when rejecting the main deferred\n */\n    AjaxQueue.prototype.stop = function stop(causeFail, msg) {\n        //TODO: doesn't abort current call\n        this.running = false;\n        this.queue = [];\n        if (causeFail) {\n            //TODO: spliced args instead\n            this.deferred.reject(msg);\n        } else {\n            this.deferred.resolve(this.responses);\n        }\n        this.numToProcess = 0;\n        this.deferred = jQuery.Deferred();\n        return this;\n    };\n\n    // only a handful of the deferred interface for now - possible YAGNI\n    /** implement done from the jq deferred interface */\n    AjaxQueue.prototype.done = function done(fn) {\n        return this.deferred.done(fn);\n    };\n    /** implement fail from the jq deferred interface */\n    AjaxQueue.prototype.fail = function fail(fn) {\n        return this.deferred.fail(fn);\n    };\n    /** implement always from the jq deferred interface */\n    AjaxQueue.prototype.always = function always(fn) {\n        return this.deferred.always(fn);\n    };\n    /** implement progress from the jq deferred interface */\n    AjaxQueue.prototype.progress = function progress(fn) {\n        return this.deferred.progress(fn);\n    };\n\n    /** shortcut constructor / fire and forget\n *  @returns {Deferred} the queue's main deferred\n */\n    AjaxQueue.create = function create(initialFunctions) {\n        return new AjaxQueue(initialFunctions).deferred;\n    };\n\n    //=============================================================================\n    /** @class NamedAjaxQueue\n *  @augments AjaxQueue\n *  Allows associating a name with a deferring fn and prevents adding deferring\n *  fns if the name has already been used. Useful to prevent build up of duplicate\n *  async calls.\n *  Both the array initialFunctions sent to constructor and any added later with\n *  add() should be objects (NOT functions) of the form:\n *  { name: some unique id,\n *    fn:   the deferring fn or ajax call }\n */\n    function NamedAjaxQueue(initialFunctions) {\n        var self = this;\n        self.names = {};\n        AjaxQueue.call(this, initialFunctions);\n        return self;\n    }\n    NamedAjaxQueue.prototype = new AjaxQueue();\n    NamedAjaxQueue.prototype.constructor = NamedAjaxQueue;\n\n    /** add the obj.fn to the queue if obj.name hasn't been used before */\n    NamedAjaxQueue.prototype.add = function add(obj) {\n        //console.debug( 'NamedAjaxQueue.adding:', obj )\n        //console.debug( 'NamedAjaxQueue.prototype.add:', obj );\n        if (!(obj.hasOwnProperty(\"name\") && obj.hasOwnProperty(\"fn\"))) {\n            throw new Error(\n                'NamedAjaxQueue.add requires an object with both \"name\" and \"fn\": ' +\n                    JSON.stringify(obj)\n            );\n        }\n        if (this.names.hasOwnProperty(obj.name)) {\n            //console.warn( 'name has been used:', obj.name );\n            return;\n        }\n        this.names[obj.name] = true;\n        //console.debug( '\\t names: ', this.names )\n        return AjaxQueue.prototype.add.call(this, obj.fn);\n        //console.debug( '\\t queue: ', this.queue.length );\n    };\n\n    /** override to remove names */\n    NamedAjaxQueue.prototype.clear = function clear() {\n        this.names = {};\n        return this;\n    };\n\n    /** shortcut constructor / fire and forget\n *  @returns {Deferred} the queue's main deferred\n */\n    NamedAjaxQueue.create = function create(initialFunctions) {\n        return new NamedAjaxQueue(initialFunctions).deferred;\n    };\n\n    //=============================================================================\n    return {\n        AjaxQueue: AjaxQueue,\n        NamedAjaxQueue: NamedAjaxQueue\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/ajax-queue.js","import HISTORY_VIEW from \"mvc/history/history-view\";\nimport HISTORY_CONTENTS from \"mvc/history/history-contents\";\nimport STATES from \"mvc/dataset/states\";\nimport HDA_MODEL from \"mvc/history/hda-model\";\nimport HDA_LI_EDIT from \"mvc/history/hda-li-edit\";\nimport HDCA_LI_EDIT from \"mvc/history/hdca-li-edit\";\nimport TAGS from \"mvc/tag\";\nimport ANNOTATIONS from \"mvc/annotation\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport PAIR_COLLECTION_CREATOR from \"mvc/collection/pair-collection-creator\";\nimport LIST_OF_PAIRS_COLLECTION_CREATOR from \"mvc/collection/list-of-pairs-collection-creator\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport PopupMenu from \"mvc/ui/popup-menu\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/editable-text\";\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HISTORY_VIEW.HistoryView;\n// base class for history-view-edit-current and used as-is in history/view.mako\n/** @class Editable View/Controller for the history model.\n *\n *  Allows:\n *      (everything HistoryView allows)\n *      changing the name\n *      displaying and editing tags and annotations\n *      multi-selection and operations on mulitple content items\n */\nvar HistoryViewEdit = _super.extend(\n    /** @lends HistoryViewEdit.prototype */ {\n        /** class to use for constructing the HistoryDatasetAssociation views */\n        HDAViewClass: HDA_LI_EDIT.HDAListItemEdit,\n        /** class to use for constructing the HistoryDatasetCollectionAssociation views */\n        HDCAViewClass: HDCA_LI_EDIT.HDCAListItemEdit,\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes\n     */\n        initialize: function(attributes) {\n            attributes = attributes || {};\n            _super.prototype.initialize.call(this, attributes);\n\n            // ---- set up instance vars\n            /** editor for tags - sub-view */\n            this.tagsEditor = null;\n\n            /** enable drag and drop - sub-view */\n            this.dragItems = true;\n\n            /** editor for annotations - sub-view */\n            this.annotationEditor = null;\n\n            /** allow user purge of dataset files? */\n            this.purgeAllowed = attributes.purgeAllowed || false;\n\n            // states/modes the panel can be in\n            /** is the panel currently showing the dataset selection controls? */\n            this.annotationEditorShown =\n                attributes.annotationEditorShown || false;\n            this.tagsEditorShown = attributes.tagsEditorShown || false;\n        },\n\n        /** Override to handle history as drag-drop target */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            return this.on({\n                \"droptarget:drop\": function(ev, data) {\n                    // process whatever was dropped and re-hide the drop target\n                    this.dataDropped(data);\n                    this.dropTargetOff();\n                },\n                \"view:attached view:removed\": function() {\n                    this._renderCounts();\n                },\n                \"search:loading-progress\": this._renderSearchProgress,\n                \"search:searching\": this._renderSearchFindings\n            });\n        },\n\n        // ------------------------------------------------------------------------ listeners\n        /** listening for history and HDA events */\n        _setUpModelListeners: function() {\n            _super.prototype._setUpModelListeners.call(this);\n            this.listenTo(\n                this.model,\n                \"change:size\",\n                this.updateHistoryDiskSize\n            );\n            return this;\n        },\n\n        /** listening for collection events */\n        _setUpCollectionListeners: function() {\n            _super.prototype._setUpCollectionListeners.call(this);\n            this.listenTo(this.collection, {\n                \"change:deleted\": this._handleItemDeletedChange,\n                \"change:visible\": this._handleItemVisibleChange,\n                \"change:purged\": function(model) {\n                    // hafta get the new nice-size w/o the purged model\n                    this.model.fetch();\n                },\n                // loading indicators for deleted/hidden\n                \"fetching-deleted\": function(collection) {\n                    this.$(\"> .controls .deleted-count\").html(\n                        \"<i>\" + _l(\"loading...\") + \"</i>\"\n                    );\n                },\n                \"fetching-hidden\": function(collection) {\n                    this.$(\"> .controls .hidden-count\").html(\n                        \"<i>\" + _l(\"loading...\") + \"</i>\"\n                    );\n                },\n                \"fetching-deleted-done fetching-hidden-done\": this._renderCounts\n            });\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ panel rendering\n        /** In this override, add tag and annotation editors and a btn to toggle the selectors */\n        _buildNewRender: function() {\n            // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n            var $newRender = _super.prototype._buildNewRender.call(this);\n            if (!this.model) {\n                return $newRender;\n            }\n\n            if (\n                Galaxy &&\n                Galaxy.user &&\n                Galaxy.user.id &&\n                Galaxy.user.id === this.model.get(\"user_id\")\n            ) {\n                this._renderTags($newRender);\n                this._renderAnnotation($newRender);\n            }\n            return $newRender;\n        },\n\n        /** Update the history size display (curr. upper right of panel). */\n        updateHistoryDiskSize: function() {\n            this.$(\".history-size\").text(this.model.get(\"nice_size\"));\n        },\n\n        /** override to render counts when the items are rendered */\n        renderItems: function($whereTo) {\n            var views = _super.prototype.renderItems.call(this, $whereTo);\n            if (!this.searchFor) {\n                this._renderCounts($whereTo);\n            } else {\n                this._renderSearchFindings($whereTo);\n            }\n            return views;\n        },\n\n        /** override to show counts, what's deleted/hidden, and links to toggle those */\n        _renderCounts: function($whereTo) {\n            $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n            var html = this.templates.counts(this.model.toJSON(), this);\n            return $whereTo.find(\"> .controls .subtitle\").html(html);\n        },\n\n        /** render the tags sub-view controller */\n        _renderTags: function($where) {\n            var panel = this;\n            this.tagsEditor = new TAGS.TagsEditor({\n                model: this.model,\n                el: $where.find(\".controls .tags-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // show hide sub-view tag editors when this is shown/hidden\n                onshow: function() {\n                    panel.toggleHDATagEditors(true, panel.fxSpeed);\n                },\n                onhide: function() {\n                    panel.toggleHDATagEditors(false, panel.fxSpeed);\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit history tags\"),\n                    classes: \"history-tag-btn\",\n                    faIcon: \"fa-tags\"\n                }).appendTo($where.find(\".controls .actions\"))\n            });\n        },\n        /** render the annotation sub-view controller */\n        _renderAnnotation: function($where) {\n            var panel = this;\n            this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n                model: this.model,\n                el: $where.find(\".controls .annotation-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // show hide sub-view view annotation editors when this is shown/hidden\n                onshow: function() {\n                    panel.toggleHDAAnnotationEditors(true, panel.fxSpeed);\n                },\n                onhide: function() {\n                    panel.toggleHDAAnnotationEditors(false, panel.fxSpeed);\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit history annotation\"),\n                    classes: \"history-annotate-btn\",\n                    faIcon: \"fa-comment\"\n                }).appendTo($where.find(\".controls .actions\"))\n            });\n        },\n\n        /** Set up HistoryViewEdit js/widget behaviours\n     *  In this override, make the name editable\n     */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            _super.prototype._setUpBehaviors.call(this, $where);\n            if (!this.model) {\n                return;\n            }\n\n            // anon users shouldn't have access to any of the following\n            if (\n                !Galaxy.user ||\n                Galaxy.user.isAnonymous() ||\n                Galaxy.user.id !== this.model.get(\"user_id\")\n            ) {\n                return;\n            }\n\n            var panel = this,\n                nameSelector = \"> .controls .name\";\n            $where\n                .find(nameSelector)\n                .attr(\"title\", _l(\"Click to rename history\"))\n                .tooltip({ placement: \"bottom\" })\n                .make_text_editable({\n                    on_finish: function(newName) {\n                        var previousName = panel.model.get(\"name\");\n                        if (newName && newName !== previousName) {\n                            panel.$el.find(nameSelector).text(newName);\n                            panel.model\n                                .save({ name: newName })\n                                .fail(function() {\n                                    panel.$el\n                                        .find(nameSelector)\n                                        .text(panel.model.previous(\"name\"));\n                                });\n                        } else {\n                            panel.$el.find(nameSelector).text(previousName);\n                        }\n                    }\n                });\n        },\n\n        /** return a new popup menu for choosing a multi selection action\n     *  ajax calls made for multiple datasets are queued\n     */\n        multiselectActions: function() {\n            var panel = this,\n                actions = [\n                    {\n                        html: _l(\"Hide datasets\"),\n                        func: function() {\n                            var action =\n                                HDA_MODEL.HistoryDatasetAssociation.prototype\n                                    .hide;\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    },\n                    {\n                        html: _l(\"Unhide datasets\"),\n                        func: function() {\n                            var action =\n                                HDA_MODEL.HistoryDatasetAssociation.prototype\n                                    .unhide;\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    },\n                    {\n                        html: _l(\"Delete datasets\"),\n                        func: function() {\n                            var action =\n                                HDA_MODEL.HistoryDatasetAssociation.prototype[\n                                    \"delete\"\n                                ];\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    },\n                    {\n                        html: _l(\"Undelete datasets\"),\n                        func: function() {\n                            var action =\n                                HDA_MODEL.HistoryDatasetAssociation.prototype\n                                    .undelete;\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    }\n                ];\n            if (panel.purgeAllowed) {\n                actions.push({\n                    html: _l(\"Permanently delete datasets\"),\n                    func: function() {\n                        if (\n                            confirm(\n                                _l(\n                                    \"This will permanently remove the data in your datasets. Are you sure?\"\n                                )\n                            )\n                        ) {\n                            var action =\n                                HDA_MODEL.HistoryDatasetAssociation.prototype\n                                    .purge;\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    }\n                });\n            }\n            actions = actions.concat(panel._collectionActions());\n            return actions;\n        },\n\n        /**   */\n        _collectionActions: function() {\n            var panel = this;\n            return [\n                {\n                    html: _l(\"Build Dataset List\"),\n                    func: function() {\n                        panel.buildCollection(\"list\");\n                    }\n                },\n                // TODO: Only show quick pair if two things selected.\n                {\n                    html: _l(\"Build Dataset Pair\"),\n                    func: function() {\n                        panel.buildCollection(\"paired\");\n                    }\n                },\n                {\n                    html: _l(\"Build List of Dataset Pairs\"),\n                    func: function() {\n                        panel.buildCollection(\"list:paired\");\n                    }\n                }\n            ];\n        },\n\n        buildCollection: function(collectionType, selection, hideSourceItems) {\n            var panel = this;\n            var selection = selection || panel.getSelectedModels();\n            var hideSourceItems = hideSourceItems || false;\n            var createFunc;\n            if (collectionType == \"list\") {\n                createFunc = LIST_COLLECTION_CREATOR.createListCollection;\n            } else if (collectionType == \"paired\") {\n                createFunc = PAIR_COLLECTION_CREATOR.createPairCollection;\n            } else if (collectionType == \"list:paired\") {\n                createFunc =\n                    LIST_OF_PAIRS_COLLECTION_CREATOR.createListOfPairsCollection;\n            } else {\n                console.warn(\n                    \"Unknown collectionType encountered \" + collectionType\n                );\n            }\n            createFunc(selection, hideSourceItems).done(function() {\n                panel.model.refresh();\n            });\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** In this override, add purgeAllowed and whether tags/annotation editors should be shown */\n        _getItemViewOptions: function(model) {\n            var options = _super.prototype._getItemViewOptions.call(\n                this,\n                model\n            );\n            _.extend(options, {\n                purgeAllowed: this.purgeAllowed,\n                tagsEditorShown: this.tagsEditor && !this.tagsEditor.hidden,\n                annotationEditorShown:\n                    this.annotationEditor && !this.annotationEditor.hidden\n            });\n            return options;\n        },\n\n        /** If this item is deleted and we're not showing deleted items, remove the view\n     *  @param {Model} the item model to check\n     */\n        _handleItemDeletedChange: function(itemModel) {\n            if (itemModel.get(\"deleted\")) {\n                this._handleItemDeletion(itemModel);\n            } else {\n                this._handleItemUndeletion(itemModel);\n            }\n            this._renderCounts();\n        },\n\n        _handleItemDeletion: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.deleted += 1;\n            contentsShown.active -= 1;\n            if (!this.model.contents.includeDeleted) {\n                this.removeItemView(itemModel);\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        _handleItemUndeletion: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.deleted -= 1;\n            if (!this.model.contents.includeDeleted) {\n                contentsShown.active -= 1;\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        /** If this item is hidden and we're not showing hidden items, remove the view\n     *  @param {Model} the item model to check\n     */\n        _handleItemVisibleChange: function(itemModel) {\n            if (itemModel.hidden()) {\n                this._handleItemHidden(itemModel);\n            } else {\n                this._handleItemUnhidden(itemModel);\n            }\n            this._renderCounts();\n        },\n\n        _handleItemHidden: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.hidden += 1;\n            contentsShown.active -= 1;\n            if (!this.model.contents.includeHidden) {\n                this.removeItemView(itemModel);\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        _handleItemUnhidden: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.hidden -= 1;\n            if (!this.model.contents.includeHidden) {\n                contentsShown.active -= 1;\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        /** toggle the visibility of each content's tagsEditor applying all the args sent to this function */\n        toggleHDATagEditors: function(showOrHide, speed) {\n            _.each(this.views, function(view) {\n                if (view.tagsEditor) {\n                    view.tagsEditor.toggle(showOrHide, speed);\n                }\n            });\n        },\n\n        /** toggle the visibility of each content's annotationEditor applying all the args sent to this function */\n        toggleHDAAnnotationEditors: function(showOrHide, speed) {\n            _.each(this.views, function(view) {\n                if (view.annotationEditor) {\n                    view.annotationEditor.toggle(showOrHide, speed);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .show-selectors-btn\": \"toggleSelectors\",\n            \"click .toggle-deleted-link\": function(ev) {\n                this.toggleShowDeleted();\n            },\n            \"click .toggle-hidden-link\": function(ev) {\n                this.toggleShowHidden();\n            }\n        }),\n\n        // ------------------------------------------------------------------------ search\n        _renderSearchProgress: function(limit, offset) {\n            var stop = limit + offset;\n            return this.$(\"> .controls .subtitle\").html(\n                [\n                    \"<i>\",\n                    _l(\"Searching \"),\n                    stop,\n                    \"/\",\n                    this.model.contentsShown(),\n                    \"</i>\"\n                ].join(\"\")\n            );\n        },\n\n        /** override to display number found in subtitle */\n        _renderSearchFindings: function($whereTo) {\n            $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n            var html = this.templates.found(this.model.toJSON(), this);\n            $whereTo.find(\"> .controls .subtitle\").html(html);\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ as drop target\n        /** turn all the drag and drop handlers on and add some help text above the drop area */\n        dropTargetOn: function() {\n            if (this.dropTarget) {\n                return this;\n            }\n            this.dropTarget = true;\n\n            //TODO: to init\n            var dropHandlers = {\n                dragenter: _.bind(this.dragenter, this),\n                dragover: _.bind(this.dragover, this),\n                dragleave: _.bind(this.dragleave, this),\n                drop: _.bind(this.drop, this)\n            };\n\n            var $dropTarget = this._renderDropTarget();\n            this.$list().before([this._renderDropTargetHelp(), $dropTarget]);\n            for (var evName in dropHandlers) {\n                if (dropHandlers.hasOwnProperty(evName)) {\n                    //console.debug( evName, dropHandlers[ evName ] );\n                    $dropTarget.on(evName, dropHandlers[evName]);\n                }\n            }\n            return this;\n        },\n\n        /** render a box to serve as a 'drop here' area on the history */\n        _renderDropTarget: function() {\n            this.$(\".history-drop-target\").remove();\n            return $(\"<div/>\").addClass(\"history-drop-target\");\n        },\n\n        /** tell the user how it works  */\n        _renderDropTargetHelp: function() {\n            this.$(\".history-drop-target-help\").remove();\n            return $(\"<div/>\")\n                .addClass(\"history-drop-target-help\")\n                .text(\n                    _l(\"Drag datasets here to copy them to the current history\")\n                );\n        },\n\n        /** shut down drag and drop event handlers and remove drop target */\n        dropTargetOff: function() {\n            if (!this.dropTarget) {\n                return this;\n            }\n            //this.log( 'dropTargetOff' );\n            this.dropTarget = false;\n            var dropTarget = this.$(\".history-drop-target\").get(0);\n            for (var evName in this._dropHandlers) {\n                if (this._dropHandlers.hasOwnProperty(evName)) {\n                    dropTarget.off(evName, this._dropHandlers[evName]);\n                }\n            }\n            this.$(\".history-drop-target\").remove();\n            this.$(\".history-drop-target-help\").remove();\n            return this;\n        },\n        /** toggle the target on/off */\n        dropTargetToggle: function() {\n            if (this.dropTarget) {\n                this.dropTargetOff();\n            } else {\n                this.dropTargetOn();\n            }\n            return this;\n        },\n\n        dragenter: function(ev) {\n            //console.debug( 'dragenter:', this, ev );\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.$(\".history-drop-target\").css(\"border\", \"2px solid black\");\n        },\n        dragover: function(ev) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        },\n        dragleave: function(ev) {\n            //console.debug( 'dragleave:', this, ev );\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.$(\".history-drop-target\").css(\"border\", \"1px dashed black\");\n        },\n        /** when (text) is dropped try to parse as json and trigger an event */\n        drop: function(ev) {\n            ev.preventDefault();\n            //ev.stopPropagation();\n\n            var self = this;\n            var dataTransfer = ev.originalEvent.dataTransfer;\n            var data = dataTransfer.getData(\"text\");\n\n            dataTransfer.dropEffect = \"move\";\n            try {\n                data = JSON.parse(data);\n            } catch (err) {\n                self.warn(\"error parsing JSON from drop:\", data);\n            }\n\n            self.trigger(\"droptarget:drop\", ev, data, self);\n            return false;\n        },\n\n        /** handler that copies data into the contents */\n        dataDropped: function(data) {\n            var self = this;\n            // HDA: dropping will copy it to the history\n            if (\n                _.isObject(data) &&\n                data.model_class === \"HistoryDatasetAssociation\" &&\n                data.id\n            ) {\n                if (self.contents.currentPage !== 0) {\n                    return self.contents.fetchPage(0).then(function() {\n                        return self.model.contents.copy(data.id);\n                    });\n                }\n                return self.model.contents.copy(data.id);\n            }\n            return jQuery.when();\n        },\n\n        // ........................................................................ misc\n        /** Return a string rep of the history */\n        toString: function() {\n            return (\n                \"HistoryViewEdit(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryViewEdit.prototype.templates = (function() {\n    var countsTemplate = BASE_MVC.wrapTemplate(\n        [\n            \"<% var shown = Math.max( view.views.length, history.contents_active.active ) %>\",\n            \"<% if( shown ){ %>\",\n            '<span class=\"shown-count\">',\n            \"<%- shown %> \",\n            _l(\"shown\"),\n            \"</span>\",\n            \"<% } %>\",\n\n            \"<% if( history.contents_active.deleted ){ %>\",\n            '<span class=\"deleted-count\">',\n            \"<% if( view.model.contents.includeDeleted ){ %>\",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"hide deleted\"),\n            \"</a>\",\n            \"<% } else { %>\",\n            \"<%- history.contents_active.deleted %> \",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"deleted\"),\n            \"</a>\",\n            \"<% } %>\",\n            \"</span>\",\n            \"<% } %>\",\n\n            \"<% if( history.contents_active.hidden ){ %>\",\n            '<span class=\"hidden-count\">',\n            \"<% if( view.model.contents.includeHidden ){ %>\",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"hide hidden\"),\n            \"</a>\",\n            \"<% } else { %>\",\n            \"<%- history.contents_active.hidden %> \",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"hidden\"),\n            \"</a>\",\n            \"<% } %>\",\n            \"</span>\",\n            \"<% } %>\"\n        ],\n        \"history\"\n    );\n\n    var foundTemplate = BASE_MVC.wrapTemplate(\n        [\n            _l(\"Found\"),\n            \" <%- view.views.length %>, \",\n\n            \"<% if( history.contents_active.deleted ){ %>\",\n            \"<% if( view.model.contents.includeDeleted ){ %>\",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"hide deleted\"),\n            \"</a>, \",\n            \"<% } else { %>\",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"show deleted\"),\n            \"</a>, \",\n            \"<% } %>\",\n            \"<% } %>\",\n\n            \"<% if( history.contents_active.hidden ){ %>\",\n            \"<% if( view.model.contents.includeHidden ){ %>\",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"hide hidden\"),\n            \"</a>\",\n            \"<% } else { %>\",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"show hidden\"),\n            \"</a>\",\n            \"<% } %>\",\n            \"<% } %>\"\n        ],\n        \"history\"\n    );\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        counts: countsTemplate,\n        found: foundTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HistoryViewEdit: HistoryViewEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-view-edit.js","import LIST_VIEW from \"mvc/list/list-view\";\nimport HISTORY_MODEL from \"mvc/history/history-model\";\nimport HISTORY_CONTENTS from \"mvc/history/history-contents\";\nimport HISTORY_PREFS from \"mvc/history/history-preferences\";\nimport HDA_LI from \"mvc/history/hda-li\";\nimport HDCA_LI from \"mvc/history/hdca-li\";\nimport USER from \"mvc/user/user-model\";\nimport ERROR_MODAL from \"mvc/ui/error-modal\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/search-input\";\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class  non-editable, read-only View/Controller for a history model.\n *  Allows:\n *      changing the loaded history\n *      displaying data, info, and download\n *      tracking history attrs: size, tags, annotations, name, etc.\n *  Does not allow:\n *      changing the name\n */\nvar _super = LIST_VIEW.ModelListPanel;\nvar HistoryView = _super.extend(\n    /** @lends HistoryView.prototype */ {\n        _logNamespace: \"history\",\n\n        /** class to use for constructing the HDA views */\n        HDAViewClass: HDA_LI.HDAListItemView,\n        /** class to use for constructing the HDCA views */\n        HDCAViewClass: HDCA_LI.HDCAListItemView,\n        /** class to used for constructing collection of sub-view models */\n        collectionClass: HISTORY_CONTENTS.HistoryContents,\n        /** key of attribute in model to assign to this.collection */\n        modelCollectionKey: \"contents\",\n\n        tagName: \"div\",\n        className: _super.prototype.className + \" history-panel\",\n\n        /** string to display when the collection is empty */\n        emptyMsg: _l(\"This history is empty\"),\n        /** displayed when no items match the search terms */\n        noneFoundMsg: _l(\"No matching datasets found\"),\n        /** string used for search placeholder */\n        searchPlaceholder: _l(\"search datasets\"),\n\n        /** @type {Number} ms to wait after history load to fetch/decorate hdcas with element_count */\n        FETCH_COLLECTION_COUNTS_DELAY: 2000,\n\n        // ......................................................................... SET UP\n        /** Set up the view, bind listeners.\n     *  @param {Object} attributes optional settings for the panel\n     */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n            // ---- instance vars\n            // control contents/behavior based on where (and in what context) the panel is being used\n            /** where should pages from links be displayed? (default to new tab/window) */\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n\n            /** timeout id for detailed fetch of collection counts, etc... */\n            this.detailedFetchTimeoutId = null;\n        },\n\n        /** create and return a collection for when none is initially passed */\n        _createDefaultCollection: function() {\n            // override\n            return new this.collectionClass([], {\n                history: this.model\n            });\n        },\n\n        /** In this override, clear the update timer on the model */\n        freeModel: function() {\n            _super.prototype.freeModel.call(this);\n            if (this.model) {\n                this.model.clearUpdateTimeout();\n            }\n            this._clearDetailedFetchTimeout();\n            return this;\n        },\n\n        /** clear the timeout and the cached timeout id */\n        _clearDetailedFetchTimeout: function() {\n            if (this.detailedFetchTimeoutId) {\n                clearTimeout(this.detailedFetchTimeoutId);\n                this.detailedFetchTimeoutId = null;\n            }\n        },\n\n        /** create any event listeners for the panel\n     *  @fires: rendered:initial    on the first render\n     *  @fires: empty-history       when switching to a history with no contents or creating a new history\n     */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            this.on({\n                error: function(model, xhr, options, msg, details) {\n                    this.errorHandler(model, xhr, options, msg, details);\n                },\n                \"loading-done\": function() {\n                    var self = this;\n                    // after the initial load, decorate with more time consuming fields (like HDCA element_counts)\n                    self.detailedFetchTimeoutId = _.delay(function() {\n                        self.detailedFetchTimeoutId = null;\n                        self.model.contents.fetchCollectionCounts();\n                    }, self.FETCH_COLLECTION_COUNTS_DELAY);\n                },\n                \"views:ready view:attached view:removed\": function(view) {\n                    this._renderSelectButton();\n                },\n                \"view:attached\": function(view) {\n                    this.scrollTo(0);\n                }\n            });\n            // this.on( 'all', function(){ console.debug( arguments ); });\n        },\n\n        // ------------------------------------------------------------------------ loading history/hda models\n        /** load the history with the given id then it's contents, sending ajax options to both */\n        loadHistory: function(historyId, options, contentsOptions) {\n            contentsOptions = _.extend(contentsOptions || { silent: true });\n            this.info(\"loadHistory:\", historyId, options, contentsOptions);\n            var self = this;\n            self.setModel(new HISTORY_MODEL.History({ id: historyId }));\n\n            contentsOptions.silent = true;\n            self.trigger(\"loading\");\n            return self.model\n                .fetchWithContents(options, contentsOptions)\n                .always(function() {\n                    self.render();\n                    self.trigger(\"loading-done\");\n                });\n        },\n\n        /** convenience alias to the model. Updates the item list only (not the history) */\n        refreshContents: function(options) {\n            if (this.model) {\n                return this.model.refresh(options);\n            }\n            // may have callbacks - so return an empty promise\n            return $.when();\n        },\n\n        /** Override to reset web storage when the id changes (since it needs the id) */\n        _setUpCollectionListeners: function() {\n            _super.prototype._setUpCollectionListeners.call(this);\n            return this.listenTo(this.collection, {\n                // 'all' : function(){ console.log( this.collection + ':', arguments ); },\n                \"fetching-more\": function() {\n                    this._toggleContentsLoadingIndicator(true);\n                    this.$emptyMessage().hide();\n                },\n                \"fetching-more-done\": function() {\n                    this._toggleContentsLoadingIndicator(false);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ panel rendering\n        /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n        _showLoadingIndicator: function(msg, speed, callback) {\n            var $indicator = $('<div class=\"loading-indicator\"/>');\n            this.$el.html(\n                $indicator\n                    .text(msg)\n                    .slideDown(!_.isUndefined(speed) ? speed : this.fxSpeed)\n            );\n        },\n\n        /** hide the loading indicator */\n        _hideLoadingIndicator: function(speed) {\n            // make speed a bit slower to compensate for slow rendering of up to 500 contents\n            this.$(\".loading-indicator\").slideUp(\n                !_.isUndefined(speed) ? speed : this.fxSpeed + 200,\n                function() {\n                    $(this).remove();\n                }\n            );\n        },\n\n        /** In this override, add a btn to toggle the selectors */\n        _buildNewRender: function() {\n            var $newRender = _super.prototype._buildNewRender.call(this);\n            this._renderSelectButton($newRender);\n            return $newRender;\n        },\n\n        /** button for starting select mode */\n        _renderSelectButton: function($where) {\n            $where = $where || this.$el;\n            // do not render selector option if no actions\n            if (!this.multiselectActions().length) {\n                return null;\n            }\n            // do not render (and remove even) if nothing to select\n            if (!this.views.length) {\n                this.hideSelectors();\n                $where.find(\".controls .actions .show-selectors-btn\").remove();\n                return null;\n            }\n            // don't bother rendering if there's one already\n            var $existing = $where.find(\n                \".controls .actions .show-selectors-btn\"\n            );\n            if ($existing.length) {\n                return $existing;\n            }\n\n            return faIconButton({\n                title: _l(\"Operations on multiple datasets\"),\n                classes: \"show-selectors-btn\",\n                faIcon: \"fa-check-square-o\"\n            }).prependTo($where.find(\".controls .actions\"));\n        },\n\n        /** override to avoid showing intial empty message using contents_active */\n        _renderEmptyMessage: function($whereTo) {\n            var self = this;\n            var $emptyMsg = self.$emptyMessage($whereTo);\n\n            var empty = self.model.get(\"contents_active\").active <= 0;\n            if (empty) {\n                return $emptyMsg\n                    .empty()\n                    .append(self.emptyMsg)\n                    .show();\n            } else if (\n                self.searchFor &&\n                self.model.contents.haveSearchDetails() &&\n                !self.views.length\n            ) {\n                return $emptyMsg\n                    .empty()\n                    .append(self.noneFoundMsg)\n                    .show();\n            }\n            $emptyMsg.hide();\n            return $();\n        },\n\n        /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n        $scrollContainer: function($where) {\n            // override or set via attributes.$scrollContainer\n            return this.$list($where);\n        },\n\n        // ------------------------------------------------------------------------ subviews\n        _toggleContentsLoadingIndicator: function(show) {\n            if (!show) {\n                this.$list()\n                    .find(\".contents-loading-indicator\")\n                    .remove();\n            } else {\n                this.$list().html(\n                    '<div class=\"contents-loading-indicator\">' +\n                        '<span class=\"fa fa-2x fa-spinner fa-spin\"/></div>'\n                );\n            }\n        },\n\n        /** override to render pagination also */\n        renderItems: function($whereTo) {\n            // console.log( this + '.renderItems-----------------', new Date() );\n            $whereTo = $whereTo || this.$el;\n            var self = this;\n            var $list = self.$list($whereTo);\n\n            // TODO: bootstrap hack to remove orphaned tooltips\n            $(\".tooltip\").remove();\n\n            $list.empty();\n            self.views = [];\n\n            var models = self._filterCollection();\n            if (models.length) {\n                self._renderPagination($whereTo);\n                self.views = self._renderSomeItems(models, $list);\n            } else {\n                // TODO: consolidate with _renderPagination above by (???) passing in models/length?\n                $whereTo.find(\"> .controls .list-pagination\").empty();\n            }\n            self._renderEmptyMessage($whereTo).toggle(!models.length);\n\n            self.trigger(\"views:ready\", self.views);\n            return self.views;\n        },\n\n        /** render pagination controls if not searching and contents says we're paginating */\n        _renderPagination: function($whereTo) {\n            var $paginationControls = $whereTo.find(\n                \"> .controls .list-pagination\"\n            );\n            if (this.searchFor || !this.model.contents.shouldPaginate())\n                return $paginationControls.empty();\n\n            $paginationControls.html(\n                this.templates.pagination(\n                    {\n                        // pagination is 1-based for the user\n                        current: this.model.contents.currentPage + 1,\n                        last: this.model.contents.getLastPage() + 1\n                    },\n                    this\n                )\n            );\n            $paginationControls.find(\"select.pages\").tooltip();\n            return $paginationControls;\n        },\n\n        /** render a subset of the entire collection (client-side pagination) */\n        _renderSomeItems: function(models, $list) {\n            var self = this;\n            var views = [];\n            $list.append(\n                models.map(function(m) {\n                    var view = self._createItemView(m);\n                    views.push(view);\n                    return self._renderItemView$el(view);\n                })\n            );\n            return views;\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** in this override, check if the contents would also display based on includeDeleted/hidden */\n        _filterItem: function(model) {\n            var self = this;\n            var contents = self.model.contents;\n            return (\n                (contents.includeHidden || !model.hidden()) &&\n                (contents.includeDeleted || !model.isDeletedOrPurged()) &&\n                _super.prototype._filterItem.call(self, model)\n            );\n        },\n\n        /** In this override, since history contents are mixed,\n     *      get the appropo view class based on history_content_type\n     */\n        _getItemViewClass: function(model) {\n            var contentType = model.get(\"history_content_type\");\n            switch (contentType) {\n                case \"dataset\":\n                    return this.HDAViewClass;\n                case \"dataset_collection\":\n                    return this.HDCAViewClass;\n            }\n            throw new TypeError(\"Unknown history_content_type: \" + contentType);\n        },\n\n        /** in this override, add a linktarget, and expand if id is in web storage */\n        _getItemViewOptions: function(model) {\n            var options = _super.prototype._getItemViewOptions.call(\n                this,\n                model\n            );\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                expanded: this.model.contents.storage.isExpanded(model.id),\n                hasUser: this.model.ownedByCurrUser()\n            });\n        },\n\n        /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            _super.prototype._setUpItemViewListeners.call(panel, view);\n            //TODO: send from content view: this.model.collection.storage.addExpanded\n            // maintain a list of items whose bodies are expanded\n            return panel.listenTo(view, {\n                expanded: function(v) {\n                    panel.model.contents.storage.addExpanded(v.model);\n                },\n                collapsed: function(v) {\n                    panel.model.contents.storage.removeExpanded(v.model);\n                }\n            });\n        },\n\n        /** override to remove expandedIds from webstorage */\n        collapseAll: function() {\n            this.model.contents.storage.clearExpanded();\n            _super.prototype.collapseAll.call(this);\n        },\n\n        // ------------------------------------------------------------------------ selection\n        /** Override to correctly set the historyId of the new collection */\n        getSelectedModels: function() {\n            var collection = _super.prototype.getSelectedModels.call(this);\n            collection.historyId = this.collection.historyId;\n            return collection;\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .show-selectors-btn\": \"toggleSelectors\",\n            \"click > .controls .prev\": \"_clickPrevPage\",\n            \"click > .controls .next\": \"_clickNextPage\",\n            \"change > .controls .pages\": \"_changePageSelect\",\n            // allow (error) messages to be clicked away\n            \"click .messages [class$=message]\": \"clearMessages\"\n        }),\n\n        _clickPrevPage: function(ev) {\n            this.model.clearUpdateTimeout();\n            this.model.contents.fetchPrevPage();\n        },\n\n        _clickNextPage: function(ev) {\n            this.model.clearUpdateTimeout();\n            this.model.contents.fetchNextPage();\n        },\n\n        _changePageSelect: function(ev) {\n            this.model.clearUpdateTimeout();\n            var page = $(ev.currentTarget).val();\n            this.model.contents.fetchPage(page);\n        },\n\n        /** Toggle and store the deleted visibility and re-render items\n     * @returns {Boolean} new setting\n     */\n        toggleShowDeleted: function(show, options) {\n            show =\n                show !== undefined ? show : !this.model.contents.includeDeleted;\n            var self = this;\n            var contents = self.model.contents;\n            contents.setIncludeDeleted(show, options);\n            self.trigger(\"show-deleted\", show);\n\n            contents.fetchCurrentPage({ renderAll: true });\n            return show;\n        },\n\n        /** Toggle and store whether to render explicity hidden contents\n     * @returns {Boolean} new setting\n     */\n        toggleShowHidden: function(show, store, options) {\n            // console.log( 'toggleShowHidden', show, store );\n            show =\n                show !== undefined ? show : !this.model.contents.includeHidden;\n            var self = this;\n            var contents = self.model.contents;\n            contents.setIncludeHidden(show, options);\n            self.trigger(\"show-hidden\", show);\n\n            contents.fetchCurrentPage({ renderAll: true });\n            return show;\n        },\n\n        /** On the first search, if there are no details - load them, then search */\n        _firstSearch: function(searchFor) {\n            var self = this;\n            var inputSelector = \"> .controls .search-input\";\n            this.log(\"onFirstSearch\", searchFor);\n\n            // if the contents already have enough details to search, search and return now\n            if (self.model.contents.haveSearchDetails()) {\n                self.searchItems(searchFor);\n                return;\n            }\n\n            // otherwise, load the details progressively here\n            self.$(inputSelector).searchInput(\"toggle-loading\");\n            // set this now so that only results will show during progress\n            self.searchFor = searchFor;\n            var xhr = self.model.contents\n                .progressivelyFetchDetails({ silent: true })\n                .progress(function(response, limit, offset) {\n                    self.renderItems();\n                    self.trigger(\"search:loading-progress\", limit, offset);\n                })\n                .always(function() {\n                    self.$el.find(inputSelector).searchInput(\"toggle-loading\");\n                })\n                .done(function() {\n                    self.searchItems(searchFor, \"force\");\n                });\n        },\n\n        /** clear the search filters and show all views that are normally shown */\n        clearSearch: function(searchFor) {\n            var self = this;\n            if (!self.searchFor) return self;\n            //self.log( 'onSearchClear', self );\n            self.searchFor = \"\";\n            self.trigger(\"search:clear\", self);\n            self.$(\"> .controls .search-query\").val(\"\");\n            // NOTE: silent + render prevents collection update event with merge only\n            // - which causes an empty page due to event handler above\n            self.model.contents\n                .fetchCurrentPage({ silent: true })\n                .done(function() {\n                    self.renderItems();\n                });\n            return self;\n        },\n\n        // ........................................................................ error handling\n        /** Event handler for errors (from the panel, the history, or the history's contents)\n     *  Alternately use two strings for model and xhr to use custom message and title (respectively)\n     *  @param {Model or View} model    the (Backbone) source of the error\n     *  @param {XMLHTTPRequest} xhr     any ajax obj. assoc. with the error\n     *  @param {Object} options         the options map commonly used with bbone ajax\n     */\n        errorHandler: function(model, xhr, options) {\n            //TODO: to mixin or base model\n            // interrupted ajax or no connection\n            if (xhr && xhr.status === 0 && xhr.readyState === 0) {\n                // return ERROR_MODAL.offlineErrorModal();\n                // fail silently\n                return;\n            }\n            // otherwise, leave something to report in the console\n            this.error(model, xhr, options);\n            // and feedback to a modal\n            // if sent two strings (and possibly details as 'options'), use those as message and title\n            if (_.isString(model) && _.isString(xhr)) {\n                var message = model;\n                var title = xhr;\n                return ERROR_MODAL.errorModal(message, title, options);\n            }\n            // bad gateway\n            // TODO: possibly to global handler\n            if (xhr && xhr.status === 502) {\n                return ERROR_MODAL.badGatewayErrorModal();\n            }\n            return ERROR_MODAL.ajaxErrorModal(model, xhr, options);\n        },\n\n        /** Remove all messages from the panel. */\n        clearMessages: function(ev) {\n            var $target = !_.isUndefined(ev)\n                ? $(ev.currentTarget)\n                : this.$messages().children('[class$=\"message\"]');\n            $target.fadeOut(this.fxSpeed, function() {\n                $(this).remove();\n            });\n            return this;\n        },\n\n        // ........................................................................ scrolling\n        /** Scrolls the panel to show the content sub-view with the given hid.\n     *  @param {Integer} hid    the hid of item to scroll into view\n     *  @returns {HistoryView} the panel\n     */\n        scrollToHid: function(hid) {\n            return this.scrollToItem(\n                _.first(this.viewsWhereModel({ hid: hid }))\n            );\n        },\n\n        // ........................................................................ misc\n        /** utility for adding -st, -nd, -rd, -th to numbers */\n        ordinalIndicator: function(number) {\n            var numStr = number + \"\";\n            switch (numStr.charAt(numStr.length - 1)) {\n                case \"1\":\n                    return numStr + \"st\";\n                case \"2\":\n                    return numStr + \"nd\";\n                case \"3\":\n                    return numStr + \"rd\";\n                default:\n                    return numStr + \"th\";\n            }\n        },\n\n        /** Return a string rep of the history */\n        toString: function() {\n            return (\n                \"HistoryView(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryView.prototype.templates = (function() {\n    var mainTemplate = BASE_MVC.wrapTemplate([\n        // temp container\n        \"<div>\",\n        '<div class=\"controls\"></div>',\n        '<ul class=\"list-items\"></ul>',\n        '<div class=\"empty-message infomessagesmall\"></div>',\n        \"</div>\"\n    ]);\n\n    var controlsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"controls\">',\n            '<div class=\"title\">',\n            '<div class=\"name\"><%- history.name %></div>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            '<div class=\"history-size\"><%- history.nice_size %></div>',\n\n            '<div class=\"actions\"></div>',\n\n            '<div class=\"messages\">',\n            \"<% if( history.deleted && history.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This history has been purged and deleted\"),\n            \"</div>\",\n            \"<% } else if( history.deleted ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This history has been deleted\"),\n            \"</div>\",\n            \"<% } else if( history.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This history has been purged\"),\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( history.message ){ %>\",\n            // should already be localized\n            '<div class=\"<%= history.message.level || \"info\" %>messagesmall\">',\n            \"<%= history.message.text %>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"</div>\",\n\n            // add tags and annotations\n            '<div class=\"tags-display\"></div>',\n            '<div class=\"annotation-display\"></div>',\n\n            '<div class=\"search\">',\n            '<div class=\"search-input\"></div>',\n            \"</div>\",\n\n            '<div class=\"list-actions\">',\n            '<div class=\"btn-group\">',\n            '<button class=\"select-all btn btn-default\"',\n            'data-mode=\"select\">',\n            _l(\"All\"),\n            \"</button>\",\n            '<button class=\"deselect-all btn btn-default\"',\n            'data-mode=\"select\">',\n            _l(\"None\"),\n            \"</button>\",\n            \"</div>\",\n            '<div class=\"list-action-menu btn-group\">',\n            \"</div>\",\n            \"</div>\",\n            '<div class=\"list-pagination form-inline\"></div>',\n            \"</div>\"\n        ],\n        \"history\"\n    );\n\n    var paginationTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<button class=\"prev\" <%- pages.current === 1 ? \"disabled\" : \"\" %>>previous</button>',\n            '<select class=\"pages form-control\" ',\n            'title=\"',\n            _l(\n                \"Click to open and select a page. Begin typing a page number to select it\"\n            ),\n            '\">',\n            \"<% _.range( 1, pages.last + 1 ).forEach( function( i ){ %>\",\n            '<option value=\"<%- i - 1 %>\" <%- i === pages.current ? \"selected\" : \"\" %>>',\n            \"<%- view.ordinalIndicator( i ) %> of <%- pages.last %> pages\",\n            \"</option>\",\n            \"<% }); %>\",\n            \"</select>\",\n            '<button class=\"next\" <%- pages.current === pages.last ? \"disabled\" : \"\" %>>next</button>'\n        ],\n        \"pages\"\n    );\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        el: mainTemplate,\n        controls: controlsTemplate,\n        pagination: paginationTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HistoryView: HistoryView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-view.js","(function(root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else {\n        // Browser globals\n        root.LoadingIndicator = factory();\n    }\n\n    //============================================================================\n})(this, function() {\n    //TODO: too specific to history panel\n    function LoadingIndicator($where, options) {\n        var self = this;\n        // defaults\n        options = jQuery.extend(\n            {\n                cover: false\n            },\n            options || {}\n        );\n\n        function render() {\n            var html = [\n                '<div class=\"loading-indicator\">',\n                '<div class=\"loading-indicator-text\">',\n                '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>',\n                '<span class=\"loading-indicator-message\">loading...</span>',\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\\n\");\n\n            var $indicator = $(html)\n                    .hide()\n                    .css(\n                        options.css || {\n                            position: \"fixed\"\n                        }\n                    ),\n                $text = $indicator.children(\".loading-indicator-text\");\n\n            if (options.cover) {\n                $indicator.css({\n                    \"z-index\": 2,\n                    top: $where.css(\"top\"),\n                    bottom: $where.css(\"bottom\"),\n                    left: $where.css(\"left\"),\n                    right: $where.css(\"right\"),\n                    opacity: 0.5,\n                    \"background-color\": \"white\",\n                    \"text-align\": \"center\"\n                });\n                $text = $indicator.children(\".loading-indicator-text\").css({\n                    \"margin-top\": \"20px\"\n                });\n            } else {\n                $text = $indicator.children(\".loading-indicator-text\").css({\n                    margin: \"12px 0px 0px 10px\",\n                    opacity: \"0.85\",\n                    color: \"grey\"\n                });\n                $text.children(\".loading-indicator-message\").css({\n                    margin: \"0px 8px 0px 0px\",\n                    \"font-style\": \"italic\"\n                });\n            }\n            return $indicator;\n        }\n\n        self.show = function(msg, speed, callback) {\n            msg = msg || \"loading...\";\n            speed = speed || \"fast\";\n            // remove previous\n            $where\n                .parent()\n                .find(\".loading-indicator\")\n                .remove();\n            // since position is fixed - we insert as sibling\n            self.$indicator = render().insertBefore($where);\n            self.message(msg);\n            self.$indicator.fadeIn(speed, callback);\n            return self;\n        };\n\n        self.message = function(msg) {\n            self.$indicator.find(\"i\").text(msg);\n        };\n\n        self.hide = function(speed, callback) {\n            speed = speed || \"fast\";\n            if (self.$indicator && self.$indicator.length) {\n                self.$indicator.fadeOut(speed, function() {\n                    self.$indicator.remove();\n                    if (callback) {\n                        callback();\n                    }\n                });\n            } else {\n                if (callback) {\n                    callback();\n                }\n            }\n            return self;\n        };\n        return self;\n    }\n\n    //============================================================================\n    return LoadingIndicator;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/ui/loading-indicator.js","import DATASET_LI_EDIT from \"mvc/dataset/dataset-li-edit\";\nimport HDA_LI from \"mvc/history/hda-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET_LI_EDIT.DatasetListItemEdit;\n/** @class Editing view for HistoryDatasetAssociation.\n */\nvar HDAListItemEdit = _super.extend(\n    /** @lends HDAListItemEdit.prototype */ {\n        className: _super.prototype.className + \" history-content\",\n\n        /** In this override, only get details if in the ready state, get rerunnable if in other states.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n\n                // special case the need for the rerunnable and creating_job attributes\n                // needed for rendering re-run button on queued, running datasets\n            } else if (!view.model.has(\"rerunnable\")) {\n                return view.model.fetch({\n                    silent: true,\n                    data: {\n                        // only fetch rerunnable and creating_job to keep overhead down\n                        keys: [\"rerunnable\", \"creating_job\"].join(\",\")\n                    }\n                });\n            }\n            return jQuery.when();\n        },\n\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .unhide-link\": function(ev) {\n                this.model.unhide();\n                return false;\n            }\n        }),\n\n        /** string rep */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"HDAListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemEdit.prototype.templates = (function() {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: BASE_MVC.wrapTemplate(\n            [\n                \"<% if( !dataset.visible ){ %>\",\n                // add a link to unhide a dataset\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                _l(\"This dataset has been hidden\"),\n                '<br /><a class=\"unhide-link\" a href=\"javascript:void(0);\">',\n                _l(\"Unhide it\"),\n                \"</a>\",\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        )\n    });\n\n    return _.extend({}, _super.prototype.templates, {\n        //NOTE: *steal* the HDAListItemView titleBar\n        titleBar: HDA_LI.HDAListItemView.prototype.templates.titleBar,\n        warnings: warnings\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDAListItemEdit: HDAListItemEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hda-li-edit.js","import HDCA_LI from \"mvc/history/hdca-li\";\nimport DC_VIEW_EDIT from \"mvc/collection/collection-view-edit\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = HDCA_LI.HDCAListItemView;\n/** @class Editing view for HistoryDatasetCollectionAssociation.\n */\nvar HDCAListItemEdit = _super.extend(\n    /** @lends HDCAListItemEdit.prototype */ {\n        /** logger used to record this.log messages, commonly set to console */\n        //logger              : console,\n\n        /** Override to return editable versions of the collection panels */\n        _getFoldoutPanelClass: function() {\n            switch (this.model.get(\"collection_type\")) {\n                case \"list\":\n                    return DC_VIEW_EDIT.ListCollectionViewEdit;\n                case \"paired\":\n                    return DC_VIEW_EDIT.PairCollectionViewEdit;\n                case \"list:paired\":\n                    return DC_VIEW_EDIT.ListOfPairsCollectionViewEdit;\n                case \"list:list\":\n                    return DC_VIEW_EDIT.ListOfListsCollectionViewEdit;\n            }\n            throw new TypeError(\n                \"Uknown collection_type: \" + this.model.get(\"collection_type\")\n            );\n        },\n\n        // ......................................................................... delete\n        /** In this override, add the delete button. */\n        _renderPrimaryActions: function() {\n            this.log(this + \"._renderPrimaryActions\");\n            // render the display, edit attr and delete icon-buttons\n            return _super.prototype._renderPrimaryActions\n                .call(this)\n                .concat([this._renderDeleteButton()]);\n        },\n\n        /** Render icon-button to delete this collection. */\n        _renderDeleteButton: function() {\n            var self = this,\n                deleted = this.model.get(\"deleted\");\n            return faIconButton({\n                title: deleted\n                    ? _l(\"Dataset collection is already deleted\")\n                    : _l(\"Delete\"),\n                classes: \"delete-btn\",\n                faIcon: \"fa-times\",\n                disabled: deleted,\n                onclick: function() {\n                    // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                    self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                    self.model[\"delete\"]();\n                }\n            });\n        },\n\n        // ......................................................................... misc\n        /** string rep */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"HDCAListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    HDCAListItemEdit: HDCAListItemEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hdca-li-edit.js","import DC_VIEW from \"mvc/collection/collection-view\";\nimport DC_MODEL from \"mvc/collection/collection-model\";\nimport DC_EDIT from \"mvc/collection/collection-li-edit\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport TAGS from \"mvc/tag\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport _l from \"utils/localization\";\nimport \"ui/editable-text\";\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class editable View/Controller for a dataset collection.\n */\nvar _super = DC_VIEW.CollectionView;\nvar CollectionViewEdit = _super.extend(\n    /** @lends CollectionView.prototype */ {\n        //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n\n        /** logger used to record this.log messages, commonly set to console */\n        //logger              : console,\n\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_EDIT.DatasetDCEListItemEdit,\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_EDIT.NestedDCDCEListItemEdit,\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the panel\n     */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n        },\n\n        /** In this override, make the collection name editable\n     */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            _super.prototype._setUpBehaviors.call(this, $where);\n            if (!this.model) {\n                return;\n            }\n\n            // anon users shouldn't have access to any of the following\n            if (!Galaxy.user || Galaxy.user.isAnonymous()) {\n                return;\n            }\n\n            this.tagsEditorShown = true;\n\n            //TODO: extract\n            var panel = this,\n                nameSelector = \"> .controls .name\";\n            $where\n                .find(nameSelector)\n                .attr(\"title\", _l(\"Click to rename collection\"))\n                .tooltip({ placement: \"bottom\" })\n                .make_text_editable({\n                    on_finish: function(newName) {\n                        var previousName = panel.model.get(\"name\");\n                        if (newName && newName !== previousName) {\n                            panel.$el.find(nameSelector).text(newName);\n                            panel.model\n                                .save({ name: newName })\n                                .fail(function() {\n                                    panel.$el\n                                        .find(nameSelector)\n                                        .text(panel.model.previous(\"name\"));\n                                });\n                        } else {\n                            panel.$el.find(nameSelector).text(previousName);\n                        }\n                    }\n                });\n            this.tagsEditor = new TAGS.TagsEditor({\n                model: this.model,\n                el: $where.find(\".tags-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                usePrompt: false\n            });\n            this.tagsEditor.toggle(true);\n        },\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"CollectionViewEdit(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionViewEdit = CollectionViewEdit.extend(\n    /** @lends ListCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_EDIT.DatasetDCEListItemEdit,\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"ListCollectionViewEdit(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class Editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionViewEdit = ListCollectionViewEdit.extend(\n    /** @lends PairCollectionViewEdit.prototype */ {\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"PairCollectionViewEdit(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class Editable (roughly since these collections are immutable),\n *  View/Controller for a dataset collection.\n */\nvar NestedPairCollectionViewEdit = PairCollectionViewEdit.extend(\n    /** @lends NestedPairCollectionViewEdit.prototype */ {\n        /** Override to remove the editable text from the name/identifier - these collections are considered immutable */\n        _setUpBehaviors: function($where) {\n            _super.prototype._setUpBehaviors.call(this, $where);\n        },\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"NestedPairCollectionViewEdit(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class editable, View/Controller for a list of pairs dataset collection. */\nvar ListOfPairsCollectionViewEdit = CollectionViewEdit.extend(\n    /** @lends ListOfPairsCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_EDIT.NestedDCDCEListItemEdit.extend({\n            foldoutPanelClass: NestedPairCollectionViewEdit\n        }),\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"ListOfPairsCollectionViewEdit(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n// =============================================================================\n/** @class View/Controller for a list of lists dataset collection. */\nvar ListOfListsCollectionViewEdit = CollectionViewEdit.extend(\n    /** @lends ListOfListsCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_EDIT.NestedDCDCEListItemEdit.extend({\n            foldoutPanelClass: NestedPairCollectionViewEdit\n        }),\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return (\n                \"ListOfListsCollectionViewEdit(\" +\n                (this.model ? this.model.get(\"name\") : \"\") +\n                \")\"\n            );\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    CollectionViewEdit: CollectionViewEdit,\n    ListCollectionViewEdit: ListCollectionViewEdit,\n    PairCollectionViewEdit: PairCollectionViewEdit,\n    ListOfPairsCollectionViewEdit: ListOfPairsCollectionViewEdit,\n    ListOfListsCollectionViewEdit: ListOfListsCollectionViewEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/collection-view-edit.js","import DC_LI from \"mvc/collection/collection-li\";\nimport DATASET_LI_EDIT from \"mvc/dataset/dataset-li-edit\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar DCListItemView = DC_LI.DCListItemView;\n/** @class Edit view for DatasetCollection.\n */\nvar DCListItemEdit = DCListItemView.extend(\n    /** @lends DCListItemEdit.prototype */ {\n        /** override to add linkTarget */\n        initialize: function(attributes) {\n            DCListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DCListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\nvar DCEListItemView = DC_LI.DCEListItemView;\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemEdit = DCEListItemView.extend(\n    /** @lends DCEListItemEdit.prototype */ {\n        //TODO: this might be expendable - compacted with HDAListItemView\n\n        /** set up */\n        initialize: function(attributes) {\n            DCEListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DCEListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\n// NOTE: this does not inherit from DatasetDCEListItemView as you would expect\n//TODO: but should - if we can find something simpler than using diamond\n/** @class Editable view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemEdit = DATASET_LI_EDIT.DatasetListItemEdit.extend(\n    /** @lends DatasetDCEListItemEdit.prototype */ {\n        /** set up */\n        initialize: function(attributes) {\n            DATASET_LI_EDIT.DatasetListItemEdit.prototype.initialize.call(\n                this,\n                attributes\n            );\n        },\n\n        // NOTE: this does not inherit from DatasetDCEListItemView - so we duplicate this here\n        //TODO: fix\n        /** In this override, only get details if in the ready state.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        /** Override to remove delete button */\n        _renderDeleteButton: function() {\n            return null;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"DatasetDCEListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemEdit.prototype.templates = (function() {\n    return _.extend(\n        {},\n        DATASET_LI_EDIT.DatasetListItemEdit.prototype.templates,\n        {\n            titleBar: DC_LI.DatasetDCEListItemView.prototype.templates.titleBar\n        }\n    );\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemEdit = DC_LI.NestedDCDCEListItemView.extend(\n    /** @lends NestedDCDCEListItemEdit.prototype */ {\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? this.model + \"\" : \"(no model)\";\n            return \"NestedDCDCEListItemEdit(\" + modelString + \")\";\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    DCListItemEdit: DCListItemEdit,\n    DCEListItemEdit: DCEListItemEdit,\n    DatasetDCEListItemEdit: DatasetDCEListItemEdit,\n    NestedDCDCEListItemEdit: NestedDCDCEListItemEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/collection-li-edit.js","import LIST_CREATOR from \"mvc/collection/list-collection-creator\";\nimport HDCA from \"mvc/history/hdca-model\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"collections\";\n/*==============================================================================\nTODO:\n    the paired creator doesn't really mesh with the list creator as parent\n        it may be better to make an abstract super class for both\n    composites may inherit from this (or vis-versa)\n    PairedDatasetCollectionElementView doesn't make a lot of sense\n\n==============================================================================*/\n/**  */\nvar PairedDatasetCollectionElementView = Backbone.View\n    .extend(BASE_MVC.LoggableMixin)\n    .extend({\n        _logNamespace: logNamespace,\n\n        //TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n        tagName: \"li\",\n        className: \"collection-element\",\n\n        initialize: function(attributes) {\n            this.element = attributes.element || {};\n            this.identifier = attributes.identifier;\n        },\n\n        render: function() {\n            this.$el.attr(\"data-element-id\", this.element.id).html(\n                this.template({\n                    identifier: this.identifier,\n                    element: this.element\n                })\n            );\n            return this;\n        },\n\n        //TODO: lots of unused space in the element - possibly load details and display them horiz.\n        template: _.template(\n            [\n                '<span class=\"identifier\"><%- identifier %></span>',\n                '<span class=\"name\"><%- element.name %></span>'\n            ].join(\"\")\n        ),\n\n        /** remove the DOM and any listeners */\n        destroy: function() {\n            this.off();\n            this.$el.remove();\n        },\n\n        /** string rep */\n        toString: function() {\n            return \"DatasetCollectionElementView()\";\n        }\n    });\n\n// ============================================================================\nvar _super = LIST_CREATOR.ListCollectionCreator;\n\n/** An interface for building collections.\n */\nvar PairCollectionCreator = _super.extend({\n    /** the class used to display individual elements */\n    elementViewClass: PairedDatasetCollectionElementView,\n    /** the class this creator will create and save */\n    collectionClass: HDCA.HistoryPairDatasetCollection,\n    className: \"pair-collection-creator collection-creator flex-row-container\",\n\n    /** override to no-op */\n    _mangleDuplicateNames: function() {},\n\n    // TODO: this whole pattern sucks. There needs to be two classes of problem area:\n    //      bad inital choices and\n    //      when the user has painted his/her self into a corner during creation/use-of-the-creator\n    /** render the entire interface */\n    render: function(speed, callback) {\n        if (this.workingElements.length === 2) {\n            return _super.prototype.render.call(this, speed, callback);\n        }\n        return this._renderInvalid(speed, callback);\n    },\n\n    // ------------------------------------------------------------------------ rendering elements\n    /** render forward/reverse */\n    _renderList: function(speed, callback) {\n        //this.debug( '-- _renderList' );\n        //precondition: there are two valid elements in workingElements\n        var creator = this,\n            $tmp = jQuery(\"<div/>\"),\n            $list = creator.$list();\n\n        // lose the original views, create the new, append all at once, then call their renders\n        _.each(this.elementViews, function(view) {\n            view.destroy();\n            creator.removeElementView(view);\n        });\n        $tmp.append(creator._createForwardElementView().$el);\n        $tmp.append(creator._createReverseElementView().$el);\n        $list.empty().append($tmp.children());\n        _.invoke(creator.elementViews, \"render\");\n    },\n\n    /** create the forward element view */\n    _createForwardElementView: function() {\n        return this._createElementView(this.workingElements[0], {\n            identifier: \"forward\"\n        });\n    },\n\n    /** create the forward element view */\n    _createReverseElementView: function() {\n        return this._createElementView(this.workingElements[1], {\n            identifier: \"reverse\"\n        });\n    },\n\n    /** create an element view, cache in elementViews, and return */\n    _createElementView: function(element, options) {\n        var elementView = new this.elementViewClass(\n            _.extend(options, {\n                element: element\n            })\n        );\n        this.elementViews.push(elementView);\n        return elementView;\n    },\n\n    /** swap the forward, reverse elements and re-render */\n    swap: function() {\n        this.workingElements = [\n            this.workingElements[1],\n            this.workingElements[0]\n        ];\n        this._renderList();\n    },\n\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .swap\": \"swap\"\n    }),\n\n    // ------------------------------------------------------------------------ templates\n    //TODO: move to require text plugin and load these as text\n    //TODO: underscore currently unnecc. bc no vars are used\n    //TODO: better way of localizing text-nodes in long strings\n    /** underscore template fns attached to class */\n    templates: _.extend(_.clone(_super.prototype.templates), {\n        /** the middle: element list */\n        middle: _.template(\n            [\n                '<div class=\"collection-elements-controls\">',\n                '<a class=\"swap\" href=\"javascript:void(0);\" title=\"',\n                _l(\"Swap forward and reverse datasets\"),\n                '\">',\n                _l(\"Swap\"),\n                \"</a>\",\n                \"</div>\",\n                '<div class=\"collection-elements scroll-container flex-row\">',\n                \"</div>\"\n            ].join(\"\")\n        ),\n\n        /** help content */\n        helpContent: _.template(\n            [\n                \"<p>\",\n                _l(\n                    [\n                        \"Pair collections are permanent collections containing two datasets: one forward and one reverse. \",\n                        \"Often these are forward and reverse reads. The pair collections can be passed to tools and \",\n                        \"workflows in order to have analyses done on both datasets. This interface allows \",\n                        \"you to create a pair, name it, and swap which is forward and which reverse.\"\n                    ].join(\"\")\n                ),\n                \"</p>\",\n                \"<ul>\",\n                \"<li>\",\n                _l(\n                    [\n                        'Click the <i data-target=\".swap\">\"Swap\"</i> link to make your forward dataset the reverse ',\n                        \"and the reverse dataset forward.\"\n                    ].join(\"\")\n                ),\n                \"</li>\",\n                \"<li>\",\n                _l(\n                    [\n                        'Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'\n                    ].join(\"\")\n                ),\n                \"</li>\",\n                \"</ul><br />\",\n                \"<p>\",\n                _l(\n                    [\n                        'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n                        'click <i data-target=\".create-collection\">\"Create list\"</i>.'\n                    ].join(\"\")\n                ),\n                \"</p>\"\n            ].join(\"\")\n        ),\n\n        /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n        invalidInitial: _.template(\n            [\n                '<div class=\"header flex-row no-flex\">',\n                '<div class=\"alert alert-warning\" style=\"display: block\">',\n                '<span class=\"alert-message\">',\n                \"<% if( _.size( problems ) ){ %>\",\n                _l(\n                    \"The following selections could not be included due to problems\"\n                ),\n                \"<ul><% _.each( problems, function( problem ){ %>\",\n                \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\",\n                \"<% }); %></ul>\",\n                \"<% } else if( _.size( elements ) === 0 ){ %>\",\n                _l(\"No datasets were selected\"),\n                \".\",\n                \"<% } else if( _.size( elements ) === 1 ){ %>\",\n                _l(\"Only one dataset was selected\"),\n                \": <%- elements[0].name %>\",\n                \"<% } else if( _.size( elements ) > 2 ){ %>\",\n                _l(\"Too many datasets were selected\"),\n                ': <%- _.pluck( elements, \"name\" ).join( \", \") %>',\n                \"<% } %>\",\n                \"<br />\",\n                _l(\"Two (and only two) elements are needed for the pair\"),\n                \". \",\n                _l(\"You may need to \"),\n                '<a class=\"cancel-create\" href=\"javascript:void(0)\">',\n                _l(\"cancel\"),\n                \"</a> \",\n                _l(\"and reselect new elements\"),\n                \".\",\n                \"</span>\",\n                \"</div>\",\n                \"</div>\",\n                '<div class=\"footer flex-row no-flex\">',\n                '<div class=\"actions clear vertically-spaced\">',\n                '<div class=\"other-options pull-left\">',\n                '<button class=\"cancel-create btn\" tabindex=\"-1\">',\n                _l(\"Cancel\"),\n                \"</button>\",\n                // _l( 'Create a different kind of collection' ),\n                \"</div>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        )\n    }),\n\n    // ------------------------------------------------------------------------ misc\n    /** string rep */\n    toString: function() {\n        return \"PairCollectionCreator\";\n    }\n});\n\n//==============================================================================\n/** List collection flavor of collectionCreatorModal. */\nvar pairCollectionCreatorModal = function _pairCollectionCreatorModal(\n    elements,\n    options\n) {\n    options = options || {};\n    options.title = _l(\"Create a collection from a pair of datasets\");\n    return LIST_CREATOR.collectionCreatorModal(\n        elements,\n        options,\n        PairCollectionCreator\n    );\n};\n\n//==============================================================================\n/** Use a modal to create a pair collection, then add it to the given history contents.\n *  @returns {Deferred} resolved when the collection is added to the history.\n */\nfunction createPairCollection(contents, defaultHideSourceItems) {\n    var elements = contents.toJSON(),\n        promise = pairCollectionCreatorModal(elements, {\n            defaultHideSourceItems: defaultHideSourceItems,\n            creationFn: function(elements, name, hideSourceItems) {\n                elements = [\n                    { name: \"forward\", src: \"hda\", id: elements[0].id },\n                    { name: \"reverse\", src: \"hda\", id: elements[1].id }\n                ];\n                return contents.createHDCA(\n                    elements,\n                    \"paired\",\n                    name,\n                    hideSourceItems\n                );\n            }\n        });\n    return promise;\n}\n\n//==============================================================================\nexport default {\n    PairCollectionCreator: PairCollectionCreator,\n    pairCollectionCreatorModal: pairCollectionCreatorModal,\n    createPairCollection: createPairCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/pair-collection-creator.js","import levenshteinDistance from \"utils/levenshtein\";\nimport naturalSort from \"utils/natural-sort\";\nimport baseCreator from \"mvc/collection/base-creator\";\nimport baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/hoverhighlight\";\n\nvar logNamespace = \"collections\";\n/* ============================================================================\nTODO:\n\n\nPROGRAMMATICALLY:\ncurrPanel.once( 'rendered', function(){\n    currPanel.showSelectors();\n    currPanel.selectAll();\n    _.last( currPanel.actionsPopup.options ).func();\n});\n\n============================================================================ */\n/** A view for paired datasets in the collections creator.\n */\nvar PairView = Backbone.View.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    tagName: \"li\",\n    className: \"dataset paired\",\n\n    initialize: function(attributes) {\n        this.pair = attributes.pair || {};\n    },\n\n    template: _.template(\n        [\n            '<span class=\"forward-dataset-name flex-column\"><%- pair.forward.name %></span>',\n            '<span class=\"pair-name-column flex-column\">',\n            '<span class=\"pair-name\"><%- pair.name %></span>',\n            \"</span>\",\n            '<span class=\"reverse-dataset-name flex-column\"><%- pair.reverse.name %></span>'\n        ].join(\"\")\n    ),\n\n    render: function() {\n        this.$el\n            .attr(\"draggable\", true)\n            .data(\"pair\", this.pair)\n            .html(this.template({ pair: this.pair }))\n            .addClass(\"flex-column-container\");\n        return this;\n    },\n\n    events: {\n        dragstart: \"_dragstart\",\n        dragend: \"_dragend\",\n        dragover: \"_sendToParent\",\n        drop: \"_sendToParent\"\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragstart: function(ev) {\n        ev.currentTarget.style.opacity = \"0.4\";\n        if (ev.originalEvent) {\n            ev = ev.originalEvent;\n        }\n\n        ev.dataTransfer.effectAllowed = \"move\";\n        ev.dataTransfer.setData(\"text/plain\", JSON.stringify(this.pair));\n\n        this.$el.parent().trigger(\"pair.dragstart\", [this]);\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragend: function(ev) {\n        ev.currentTarget.style.opacity = \"1.0\";\n        this.$el.parent().trigger(\"pair.dragend\", [this]);\n    },\n\n    /** manually bubble up an event to the parent/container */\n    _sendToParent: function(ev) {\n        this.$el.parent().trigger(ev);\n    },\n\n    /** string rep */\n    toString: function() {\n        return \"PairView(\" + this.pair.name + \")\";\n    }\n});\n\n// ============================================================================\n/** returns an autopair function that uses the provided options.match function */\nfunction autoPairFnBuilder(options) {\n    options = options || {};\n    options.createPair =\n        options.createPair ||\n        function _defaultCreatePair(params) {\n            params = params || {};\n            var a = params.listA.splice(params.indexA, 1)[0],\n                b = params.listB.splice(params.indexB, 1)[0],\n                aInBIndex = params.listB.indexOf(a),\n                bInAIndex = params.listA.indexOf(b);\n            if (aInBIndex !== -1) {\n                params.listB.splice(aInBIndex, 1);\n            }\n            if (bInAIndex !== -1) {\n                params.listA.splice(bInAIndex, 1);\n            }\n            return this._pair(a, b, { silent: true });\n        };\n    // compile these here outside of the loop\n    var _regexps = [];\n    function getRegExps() {\n        if (!_regexps.length) {\n            _regexps = [\n                new RegExp(this.filters[0]),\n                new RegExp(this.filters[1])\n            ];\n        }\n        return _regexps;\n    }\n    // mangle params as needed\n    options.preprocessMatch =\n        options.preprocessMatch ||\n        function _defaultPreprocessMatch(params) {\n            var regexps = getRegExps.call(this);\n            return _.extend(params, {\n                matchTo: params.matchTo.name.replace(regexps[0], \"\"),\n                possible: params.possible.name.replace(regexps[1], \"\")\n            });\n        };\n\n    return function _strategy(params) {\n        this.debug(\"autopair _strategy ---------------------------\");\n        params = params || {};\n        var listA = params.listA,\n            listB = params.listB,\n            indexA = 0,\n            indexB,\n            bestMatch = {\n                score: 0.0,\n                index: null\n            },\n            paired = [];\n        //console.debug( 'params:', JSON.stringify( params, null, '  ' ) );\n        this.debug(\"starting list lens:\", listA.length, listB.length);\n        this.debug(\n            \"bestMatch (starting):\",\n            JSON.stringify(bestMatch, null, \"  \")\n        );\n\n        while (indexA < listA.length) {\n            var matchTo = listA[indexA];\n            bestMatch.score = 0.0;\n\n            for (indexB = 0; indexB < listB.length; indexB++) {\n                var possible = listB[indexB];\n                this.debug(indexA + \":\" + matchTo.name);\n                this.debug(indexB + \":\" + possible.name);\n\n                // no matching with self\n                if (listA[indexA] !== listB[indexB]) {\n                    bestMatch = options.match.call(\n                        this,\n                        options.preprocessMatch.call(this, {\n                            matchTo: matchTo,\n                            possible: possible,\n                            index: indexB,\n                            bestMatch: bestMatch\n                        })\n                    );\n                    this.debug(\n                        \"bestMatch:\",\n                        JSON.stringify(bestMatch, null, \"  \")\n                    );\n                    if (bestMatch.score === 1.0) {\n                        this.debug(\"breaking early due to perfect match\");\n                        break;\n                    }\n                }\n            }\n            var scoreThreshold = options.scoreThreshold.call(this);\n            this.debug(\"scoreThreshold:\", scoreThreshold);\n            this.debug(\"bestMatch.score:\", bestMatch.score);\n\n            if (bestMatch.score >= scoreThreshold) {\n                //console.debug( 'autoPairFnBuilder.strategy', listA[ indexA ].name, listB[ bestMatch.index ].name );\n                paired.push(\n                    options.createPair.call(this, {\n                        listA: listA,\n                        indexA: indexA,\n                        listB: listB,\n                        indexB: bestMatch.index\n                    })\n                );\n                //console.debug( 'list lens now:', listA.length, listB.length );\n            } else {\n                indexA += 1;\n            }\n            if (!listA.length || !listB.length) {\n                return paired;\n            }\n        }\n        this.debug(\"paired:\", JSON.stringify(paired, null, \"  \"));\n        this.debug(\"autopair _strategy ---------------------------\");\n        return paired;\n    };\n}\n\n// ============================================================================\n/** An interface for building collections of paired datasets.\n */\nvar PairedCollectionCreator = Backbone.View\n    .extend(baseMVC.LoggableMixin)\n    .extend(baseCreator.CollectionCreatorMixin)\n    .extend({\n        _logNamespace: logNamespace,\n\n        className:\n            \"list-of-pairs-collection-creator collection-creator flex-row-container\",\n\n        /** set up initial options, instance vars, behaviors, and autopair (if set to do so) */\n        initialize: function(attributes) {\n            this.metric(\"PairedCollectionCreator.initialize\", attributes);\n            //this.debug( '-- PairedCollectionCreator:', attributes );\n\n            attributes = _.defaults(attributes, {\n                datasets: [],\n                filters: this.DEFAULT_FILTERS,\n                automaticallyPair: true,\n                strategy: \"lcs\",\n                matchPercentage: 0.9,\n                twoPassAutopairing: true\n            });\n\n            /** unordered, original list */\n            this.initialList = attributes.datasets;\n\n            /** is this from a history? if so, what's its id? */\n            this.historyId = attributes.historyId;\n\n            /** which filters should be used initially? (String[2] or name in commonFilters) */\n            this.filters =\n                this.commonFilters[attributes.filters] ||\n                this.commonFilters[this.DEFAULT_FILTERS];\n            if (_.isArray(attributes.filters)) {\n                this.filters = attributes.filters;\n            }\n\n            /** try to auto pair the unpaired datasets on load? */\n            this.automaticallyPair = attributes.automaticallyPair;\n\n            /** what method to use for auto pairing (will be passed aggression level) */\n            this.strategy =\n                this.strategies[attributes.strategy] ||\n                this.strategies[this.DEFAULT_STRATEGY];\n            if (_.isFunction(attributes.strategy)) {\n                this.strategy = attributes.strategy;\n            }\n\n            /** distance/mismatch level allowed for autopairing */\n            this.matchPercentage = attributes.matchPercentage;\n\n            /** try to autopair using simple first, then this.strategy on the remainder */\n            this.twoPassAutopairing = attributes.twoPassAutopairing;\n\n            /** remove file extensions (\\.*) from created pair names? */\n            this.removeExtensions = true;\n            //this.removeExtensions = false;\n\n            /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n            this.oncancel = attributes.oncancel;\n            /** fn to call when the collection is created (scoped to this) */\n            this.oncreate = attributes.oncreate;\n\n            /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n            this.autoscrollDist = attributes.autoscrollDist || 24;\n\n            /** is the unpaired panel shown? */\n            this.unpairedPanelHidden = false;\n            /** is the paired panel shown? */\n            this.pairedPanelHidden = false;\n\n            /** DOM elements currently being dragged */\n            this.$dragging = null;\n\n            /** Used for blocking UI events during ajax/operations (don't post twice) */\n            this.blocking = false;\n\n            this._setUpCommonSettings(attributes);\n            this._setUpBehaviors();\n            this._dataSetUp();\n        },\n\n        /** map of common filter pairs by name */\n        commonFilters: {\n            illumina: [\"_1\", \"_2\"],\n            Rs: [\"_R1\", \"_R2\"]\n        },\n        /** which commonFilter to use by default */\n        DEFAULT_FILTERS: \"illumina\",\n\n        /** map of name->fn for autopairing */\n        strategies: {\n            simple: \"autopairSimple\",\n            lcs: \"autopairLCS\",\n            levenshtein: \"autopairLevenshtein\"\n        },\n        /** default autopair strategy name */\n        DEFAULT_STRATEGY: \"lcs\",\n\n        // ------------------------------------------------------------------------ process raw list\n        /** set up main data: cache initialList, sort, and autopair */\n        _dataSetUp: function() {\n            //this.debug( '-- _dataSetUp' );\n\n            this.paired = [];\n            this.unpaired = [];\n\n            this.selectedIds = [];\n\n            // sort initial list, add ids if needed, and save new working copy to unpaired\n            this._sortInitialList();\n            this._ensureIds();\n            this.unpaired = this.initialList.slice(0);\n\n            if (this.automaticallyPair) {\n                this.autoPair();\n                this.once(\"rendered:initial\", function() {\n                    this.trigger(\"autopair\");\n                });\n            }\n        },\n\n        /** sort initial list */\n        _sortInitialList: function() {\n            //this.debug( '-- _sortInitialList' );\n            this._sortDatasetList(this.initialList);\n        },\n\n        /** sort a list of datasets */\n        _sortDatasetList: function(list) {\n            // currently only natural sort by name\n            list.sort(function(a, b) {\n                return naturalSort(a.name, b.name);\n            });\n            return list;\n        },\n\n        /** add ids to dataset objs in initial list if none */\n        _ensureIds: function() {\n            this.initialList.forEach(function(dataset) {\n                if (!dataset.hasOwnProperty(\"id\")) {\n                    dataset.id = _.uniqueId();\n                }\n            });\n            return this.initialList;\n        },\n\n        /** split initial list into two lists, those that pass forward filters & those passing reverse */\n        _splitByFilters: function() {\n            var regexFilters = this.filters.map(function(stringFilter) {\n                    return new RegExp(stringFilter);\n                }),\n                split = [[], []];\n\n            function _filter(unpaired, filter) {\n                return filter.test(unpaired.name);\n                //return dataset.name.indexOf( filter ) >= 0;\n            }\n            this.unpaired.forEach(function _filterEach(unpaired) {\n                // 90% of the time this seems to work, but:\n                //TODO: this treats *all* strings as regex which may confuse people - possibly check for // surrounding?\n                //  would need explanation in help as well\n                regexFilters.forEach(function(filter, i) {\n                    if (_filter(unpaired, filter)) {\n                        split[i].push(unpaired);\n                    }\n                });\n            });\n            return split;\n        },\n\n        /** add a dataset to the unpaired list in it's proper order */\n        _addToUnpaired: function(dataset) {\n            // currently, unpaired is natural sorted by name, use binary search to find insertion point\n            var binSearchSortedIndex = function(low, hi) {\n                if (low === hi) {\n                    return low;\n                }\n\n                var mid = Math.floor((hi - low) / 2) + low,\n                    compared = naturalSort(\n                        dataset.name,\n                        this.unpaired[mid].name\n                    );\n\n                if (compared < 0) {\n                    return binSearchSortedIndex(low, mid);\n                } else if (compared > 0) {\n                    return binSearchSortedIndex(mid + 1, hi);\n                }\n                // walk the equal to find the last\n                while (\n                    this.unpaired[mid] &&\n                    this.unpaired[mid].name === dataset.name\n                ) {\n                    mid++;\n                }\n                return mid;\n            }.bind(this);\n\n            this.unpaired.splice(\n                binSearchSortedIndex(0, this.unpaired.length),\n                0,\n                dataset\n            );\n        },\n\n        // ------------------------------------------------------------------------ auto pairing\n        /** two passes to automatically create pairs:\n     *  use both simpleAutoPair, then the fn mentioned in strategy\n     */\n        autoPair: function(strategy) {\n            // split first using exact matching\n            var split = this._splitByFilters(),\n                paired = [];\n            if (this.twoPassAutopairing) {\n                paired = this.autopairSimple({\n                    listA: split[0],\n                    listB: split[1]\n                });\n                split = this._splitByFilters();\n            }\n\n            // uncomment to see printlns while running tests\n            //this.debug = function(){ console.log.apply( console, arguments ); };\n\n            // then try the remainder with something less strict\n            strategy = strategy || this.strategy;\n            split = this._splitByFilters();\n            paired = paired.concat(\n                this[strategy].call(this, {\n                    listA: split[0],\n                    listB: split[1]\n                })\n            );\n            return paired;\n        },\n\n        /** autopair by exact match */\n        autopairSimple: autoPairFnBuilder({\n            scoreThreshold: function() {\n                return 0.6;\n            },\n            match: function _match(params) {\n                params = params || {};\n                if (params.matchTo === params.possible) {\n                    return {\n                        index: params.index,\n                        score: 1.0\n                    };\n                }\n                return params.bestMatch;\n            }\n        }),\n\n        /** autopair by levenshtein edit distance scoring */\n        autopairLevenshtein: autoPairFnBuilder({\n            scoreThreshold: function() {\n                return this.matchPercentage;\n            },\n            match: function _matches(params) {\n                params = params || {};\n                var distance = levenshteinDistance(\n                        params.matchTo,\n                        params.possible\n                    ),\n                    score =\n                        1.0 -\n                        distance /\n                            Math.max(\n                                params.matchTo.length,\n                                params.possible.length\n                            );\n                if (score > params.bestMatch.score) {\n                    return {\n                        index: params.index,\n                        score: score\n                    };\n                }\n                return params.bestMatch;\n            }\n        }),\n\n        /** autopair by longest common substrings scoring */\n        autopairLCS: autoPairFnBuilder({\n            scoreThreshold: function() {\n                return this.matchPercentage;\n            },\n            match: function _matches(params) {\n                params = params || {};\n                var match = this._naiveStartingAndEndingLCS(\n                        params.matchTo,\n                        params.possible\n                    ).length,\n                    score =\n                        match /\n                        Math.max(params.matchTo.length, params.possible.length);\n                if (score > params.bestMatch.score) {\n                    return {\n                        index: params.index,\n                        score: score\n                    };\n                }\n                return params.bestMatch;\n            }\n        }),\n\n        /** return the concat'd longest common prefix and suffix from two strings */\n        _naiveStartingAndEndingLCS: function(s1, s2) {\n            var fwdLCS = \"\",\n                revLCS = \"\",\n                i = 0,\n                j = 0;\n            while (i < s1.length && i < s2.length) {\n                if (s1[i] !== s2[i]) {\n                    break;\n                }\n                fwdLCS += s1[i];\n                i += 1;\n            }\n            if (i === s1.length) {\n                return s1;\n            }\n            if (i === s2.length) {\n                return s2;\n            }\n\n            i = s1.length - 1;\n            j = s2.length - 1;\n            while (i >= 0 && j >= 0) {\n                if (s1[i] !== s2[j]) {\n                    break;\n                }\n                revLCS = [s1[i], revLCS].join(\"\");\n                i -= 1;\n                j -= 1;\n            }\n            return fwdLCS + revLCS;\n        },\n\n        // ------------------------------------------------------------------------ pairing / unpairing\n        /** create a pair from fwd and rev, removing them from unpaired, and placing the new pair in paired */\n        _pair: function(fwd, rev, options) {\n            options = options || {};\n            this.debug(\"_pair:\", fwd, rev);\n            var pair = this._createPair(fwd, rev, options.name);\n            this.paired.push(pair);\n            this.unpaired = _.without(this.unpaired, fwd, rev);\n            if (!options.silent) {\n                this.trigger(\"pair:new\", pair);\n            }\n            return pair;\n        },\n\n        /** create a pair Object from fwd and rev, adding the name attribute (will guess if not given) */\n        _createPair: function(fwd, rev, name) {\n            // ensure existance and don't pair something with itself\n            if (!(fwd && rev) || fwd === rev) {\n                throw new Error(\n                    \"Bad pairing: \" + [JSON.stringify(fwd), JSON.stringify(rev)]\n                );\n            }\n            name = name || this._guessNameForPair(fwd, rev);\n            return { forward: fwd, name: name, reverse: rev };\n        },\n\n        /** try to find a good pair name for the given fwd and rev datasets */\n        _guessNameForPair: function(fwd, rev, removeExtensions) {\n            removeExtensions =\n                removeExtensions !== undefined\n                    ? removeExtensions\n                    : this.removeExtensions;\n            var fwdName = fwd.name,\n                revName = rev.name,\n                lcs = this._naiveStartingAndEndingLCS(\n                    fwdName.replace(new RegExp(this.filters[0]), \"\"),\n                    revName.replace(new RegExp(this.filters[1]), \"\")\n                );\n            if (removeExtensions) {\n                var lastDotIndex = lcs.lastIndexOf(\".\");\n                if (lastDotIndex > 0) {\n                    var extension = lcs.slice(lastDotIndex, lcs.length);\n                    lcs = lcs.replace(extension, \"\");\n                    fwdName = fwdName.replace(extension, \"\");\n                    revName = revName.replace(extension, \"\");\n                }\n            }\n            return lcs || fwdName + \" & \" + revName;\n        },\n\n        /** unpair a pair, removing it from paired, and adding the fwd,rev datasets back into unpaired */\n        _unpair: function(pair, options) {\n            options = options || {};\n            if (!pair) {\n                throw new Error(\"Bad pair: \" + JSON.stringify(pair));\n            }\n            this.paired = _.without(this.paired, pair);\n            this._addToUnpaired(pair.forward);\n            this._addToUnpaired(pair.reverse);\n\n            if (!options.silent) {\n                this.trigger(\"pair:unpair\", [pair]);\n            }\n            return pair;\n        },\n\n        /** unpair all paired datasets */\n        unpairAll: function() {\n            var pairs = [];\n            while (this.paired.length) {\n                pairs.push(this._unpair(this.paired[0], { silent: true }));\n            }\n            this.trigger(\"pair:unpair\", pairs);\n        },\n\n        // ------------------------------------------------------------------------ API\n        /** convert a pair into JSON compatible with the collections API */\n        _pairToJSON: function(pair, src) {\n            src = src || \"hda\";\n            //TODO: consider making this the pair structure when created instead\n            return {\n                collection_type: \"paired\",\n                src: \"new_collection\",\n                name: pair.name,\n                element_identifiers: [\n                    {\n                        name: \"forward\",\n                        id: pair.forward.id,\n                        src: src\n                    },\n                    {\n                        name: \"reverse\",\n                        id: pair.reverse.id,\n                        src: src\n                    }\n                ]\n            };\n        },\n\n        /** create the collection via the API\n     *  @returns {jQuery.xhr Object}    the jquery ajax request\n     */\n        createList: function(name) {\n            var creator = this,\n                url =\n                    Galaxy.root +\n                    \"api/histories/\" +\n                    this.historyId +\n                    \"/contents/dataset_collections\";\n\n            //TODO: use ListPairedCollection.create()\n            var ajaxData = {\n                type: \"dataset_collection\",\n                collection_type: \"list:paired\",\n                hide_source_items: creator.hideOriginals || false,\n                name: _.escape(name || creator.$(\".collection-name\").val()),\n                element_identifiers: creator.paired.map(function(pair) {\n                    return creator._pairToJSON(pair);\n                })\n            };\n            //this.debug( JSON.stringify( ajaxData ) );\n            creator.blocking = true;\n            return jQuery\n                .ajax(url, {\n                    type: \"POST\",\n                    contentType: \"application/json\",\n                    dataType: \"json\",\n                    data: JSON.stringify(ajaxData)\n                })\n                .always(function() {\n                    creator.blocking = false;\n                })\n                .fail(function(xhr, status, message) {\n                    creator._ajaxErrHandler(xhr, status, message);\n                })\n                .done(function(response, message, xhr) {\n                    //this.info( 'ok', response, message, xhr );\n                    creator.trigger(\n                        \"collection:created\",\n                        response,\n                        message,\n                        xhr\n                    );\n                    creator.metric(\"collection:created\", response);\n                    if (typeof creator.oncreate === \"function\") {\n                        creator.oncreate.call(this, response, message, xhr);\n                    }\n                });\n        },\n\n        /** handle ajax errors with feedback and details to the user (if available) */\n        _ajaxErrHandler: function(xhr, status, message) {\n            this.error(xhr, status, message);\n            var content = _l(\n                \"An error occurred while creating this collection\"\n            );\n            if (xhr) {\n                if (xhr.readyState === 0 && xhr.status === 0) {\n                    content +=\n                        \": \" +\n                        _l(\"Galaxy could not be reached and may be updating.\") +\n                        _l(\" Try again in a few minutes.\");\n                } else if (xhr.responseJSON) {\n                    content +=\n                        \"<br /><pre>\" +\n                        JSON.stringify(xhr.responseJSON) +\n                        \"</pre>\";\n                } else {\n                    content += \": \" + message;\n                }\n            }\n            creator._showAlert(content, \"alert-danger\");\n        },\n\n        // ------------------------------------------------------------------------ rendering\n        /** render the entire interface */\n        render: function(speed, callback) {\n            //this.debug( '-- _render' );\n            //this.$el.empty().html( this.templates.main() );\n            this.$el.empty().html(this.templates.main());\n            this._renderHeader(speed);\n            this._renderMiddle(speed);\n            this._renderFooter(speed);\n            this._addPluginComponents();\n            this.trigger(\"rendered\", this);\n            return this;\n        },\n\n        /** render the header section */\n        _renderHeader: function(speed, callback) {\n            //this.debug( '-- _renderHeader' );\n            var $header = this.$(\".header\")\n                .empty()\n                .html(this.templates.header())\n                .find(\".help-content\")\n                .prepend($(this.templates.helpContent()));\n\n            this._renderFilters();\n            return $header;\n        },\n        /** fill the filter inputs with the filter values */\n        _renderFilters: function() {\n            return this.$(\".forward-column .column-header input\")\n                .val(this.filters[0])\n                .add(\n                    this.$(\".reverse-column .column-header input\").val(\n                        this.filters[1]\n                    )\n                );\n        },\n\n        /** render the middle including unpaired and paired sections (which may be hidden) */\n        _renderMiddle: function(speed, callback) {\n            var $middle = this.$(\".middle\")\n                .empty()\n                .html(this.templates.middle());\n\n            // (re-) hide the un/paired panels based on instance vars\n            if (this.unpairedPanelHidden) {\n                this.$(\".unpaired-columns\").hide();\n            } else if (this.pairedPanelHidden) {\n                this.$(\".paired-columns\").hide();\n            }\n\n            this._renderUnpaired();\n            this._renderPaired();\n            return $middle;\n        },\n        /** render the unpaired section, showing datasets accrd. to filters, update the unpaired counts */\n        _renderUnpaired: function(speed, callback) {\n            //this.debug( '-- _renderUnpaired' );\n            var creator = this,\n                $fwd,\n                $rev,\n                $prd = [],\n                split = this._splitByFilters();\n            // update unpaired counts\n            this.$(\".forward-column .title\").text(\n                [split[0].length, _l(\"unpaired forward\")].join(\" \")\n            );\n            this.$(\".forward-column .unpaired-info\").text(\n                this._renderUnpairedDisplayStr(\n                    this.unpaired.length - split[0].length\n                )\n            );\n            this.$(\".reverse-column .title\").text(\n                [split[1].length, _l(\"unpaired reverse\")].join(\" \")\n            );\n            this.$(\".reverse-column .unpaired-info\").text(\n                this._renderUnpairedDisplayStr(\n                    this.unpaired.length - split[1].length\n                )\n            );\n\n            this.$(\".unpaired-columns .column-datasets\").empty();\n\n            // show/hide the auto pair button if any unpaired are left\n            this.$(\".autopair-link\").toggle(this.unpaired.length !== 0);\n            if (this.unpaired.length === 0) {\n                this._renderUnpairedEmpty();\n                return;\n            }\n\n            // create the dataset dom arrays\n            $rev = split[1].map(function(dataset, i) {\n                // if there'll be a fwd dataset across the way, add a button to pair the row\n                if (split[0][i] !== undefined && split[0][i] !== dataset) {\n                    $prd.push(creator._renderPairButton());\n                }\n                return creator._renderUnpairedDataset(dataset);\n            });\n            $fwd = split[0].map(function(dataset) {\n                return creator._renderUnpairedDataset(dataset);\n            });\n\n            if (!$fwd.length && !$rev.length) {\n                this._renderUnpairedNotShown();\n                return;\n            }\n            // add to appropo cols\n            //TODO: not the best way to render - consider rendering the entire unpaired-columns section in a fragment\n            //  and swapping out that\n            this.$(\".unpaired-columns .forward-column .column-datasets\")\n                .append($fwd)\n                .add(\n                    this.$(\n                        \".unpaired-columns .paired-column .column-datasets\"\n                    ).append($prd)\n                )\n                .add(\n                    this.$(\n                        \".unpaired-columns .reverse-column .column-datasets\"\n                    ).append($rev)\n                );\n            this._adjUnpairedOnScrollbar();\n        },\n        /** return a string to display the count of filtered out datasets */\n        _renderUnpairedDisplayStr: function(numFiltered) {\n            return [\"(\", numFiltered, \" \", _l(\"filtered out\"), \")\"].join(\"\");\n        },\n        /** return an unattached jQuery DOM element to represent an unpaired dataset */\n        _renderUnpairedDataset: function(dataset) {\n            //TODO: to underscore template\n            return (\n                $(\"<li/>\")\n                    .attr(\"id\", \"dataset-\" + dataset.id)\n                    .addClass(\"dataset unpaired\")\n                    .attr(\"draggable\", true)\n                    .addClass(dataset.selected ? \"selected\" : \"\")\n                    .append(\n                        $(\"<span/>\")\n                            .addClass(\"dataset-name\")\n                            .text(dataset.name)\n                    )\n                    //??\n                    .data(\"dataset\", dataset)\n            );\n        },\n        /** render the button that may go between unpaired datasets, allowing the user to pair a row */\n        _renderPairButton: function() {\n            //TODO: *not* a dataset - don't pretend like it is\n            return $(\"<li/>\")\n                .addClass(\"dataset unpaired\")\n                .append(\n                    $(\"<span/>\")\n                        .addClass(\"dataset-name\")\n                        .text(_l(\"Pair these datasets\"))\n                );\n        },\n        /** a message to display when no unpaired left */\n        _renderUnpairedEmpty: function() {\n            //this.debug( '-- renderUnpairedEmpty' );\n            var $msg = $('<div class=\"empty-message\"></div>').text(\n                \"(\" + _l(\"no remaining unpaired datasets\") + \")\"\n            );\n            this.$(\".unpaired-columns .paired-column .column-datasets\")\n                .empty()\n                .prepend($msg);\n            return $msg;\n        },\n        /** a message to display when no unpaired can be shown with the current filters */\n        _renderUnpairedNotShown: function() {\n            //this.debug( '-- renderUnpairedEmpty' );\n            var $msg = $('<div class=\"empty-message\"></div>').text(\n                \"(\" +\n                    _l(\"no datasets were found matching the current filters\") +\n                    \")\"\n            );\n            this.$(\".unpaired-columns .paired-column .column-datasets\")\n                .empty()\n                .prepend($msg);\n            return $msg;\n        },\n        /** try to detect if the unpaired section has a scrollbar and adjust left column for better centering of all */\n        _adjUnpairedOnScrollbar: function() {\n            var $unpairedColumns = this.$(\".unpaired-columns\").last(),\n                $firstDataset = this.$(\n                    \".unpaired-columns .reverse-column .dataset\"\n                ).first();\n            if (!$firstDataset.length) {\n                return;\n            }\n            var ucRight =\n                    $unpairedColumns.offset().left +\n                    $unpairedColumns.outerWidth(),\n                dsRight =\n                    $firstDataset.offset().left + $firstDataset.outerWidth(),\n                rightDiff = Math.floor(ucRight) - Math.floor(dsRight);\n            //this.debug( 'rightDiff:', ucRight, '-', dsRight, '=', rightDiff );\n            this.$(\".unpaired-columns .forward-column\").css(\n                \"margin-left\",\n                rightDiff > 0 ? rightDiff : 0\n            );\n        },\n\n        /** render the paired section and update counts of paired datasets */\n        _renderPaired: function(speed, callback) {\n            //this.debug( '-- _renderPaired' );\n            this.$(\".paired-column-title .title\").text(\n                [this.paired.length, _l(\"paired\")].join(\" \")\n            );\n            // show/hide the unpair all link\n            this.$(\".unpair-all-link\").toggle(this.paired.length !== 0);\n            if (this.paired.length === 0) {\n                this._renderPairedEmpty();\n                return;\n                //TODO: would be best to return here (the $columns)\n            } else {\n                // show/hide 'remove extensions link' when any paired and they seem to have extensions\n                this.$(\".remove-extensions-link\").show();\n            }\n\n            this.$(\".paired-columns .column-datasets\").empty();\n            var creator = this;\n            this.paired.forEach(function(pair, i) {\n                //TODO: cache these?\n                var pairView = new PairView({ pair: pair });\n                creator\n                    .$(\".paired-columns .column-datasets\")\n                    .append(pairView.render().$el)\n                    .append(\n                        [\n                            '<button class=\"unpair-btn\">',\n                            '<span class=\"fa fa-unlink\" title=\"',\n                            _l(\"Unpair\"),\n                            '\"></span>',\n                            \"</button>\"\n                        ].join(\"\")\n                    );\n            });\n        },\n        /** a message to display when none paired */\n        _renderPairedEmpty: function() {\n            var $msg = $('<div class=\"empty-message\"></div>').text(\n                \"(\" + _l(\"no paired datasets yet\") + \")\"\n            );\n            this.$(\".paired-columns .column-datasets\")\n                .empty()\n                .prepend($msg);\n            return $msg;\n        },\n\n        footerSettings: {\n            \".hide-originals\": \"hideOriginals\",\n            \".remove-extensions\": \"removeExtensions\"\n        },\n\n        /** add any jQuery/bootstrap/custom plugins to elements rendered */\n        _addPluginComponents: function() {\n            this._chooseFiltersPopover(\".choose-filters-link\");\n            this.$(\".help-content i\").hoverhighlight(\n                \".collection-creator\",\n                \"rgba( 64, 255, 255, 1.0 )\"\n            );\n        },\n\n        /** build a filter selection popover allowing selection of common filter pairs */\n        _chooseFiltersPopover: function(selector) {\n            function filterChoice(val1, val2) {\n                return [\n                    '<button class=\"filter-choice btn\" ',\n                    'data-forward=\"',\n                    val1,\n                    '\" data-reverse=\"',\n                    val2,\n                    '\">',\n                    _l(\"Forward\"),\n                    \": \",\n                    val1,\n                    \", \",\n                    _l(\"Reverse\"),\n                    \": \",\n                    val2,\n                    \"</button>\"\n                ].join(\"\");\n            }\n            var $popoverContent = $(\n                _.template(\n                    [\n                        '<div class=\"choose-filters\">',\n                        '<div class=\"help\">',\n                        _l(\n                            \"Choose from the following filters to change which unpaired reads are shown in the display\"\n                        ),\n                        \":</div>\",\n                        _.values(this.commonFilters)\n                            .map(function(filterSet) {\n                                return filterChoice(filterSet[0], filterSet[1]);\n                            })\n                            .join(\"\"),\n                        \"</div>\"\n                    ].join(\"\")\n                )({})\n            );\n\n            return this.$(selector).popover({\n                container: \".collection-creator\",\n                placement: \"bottom\",\n                html: true,\n                //animation   : false,\n                content: $popoverContent\n            });\n        },\n\n        /** add (or clear if clear is truthy) a validation warning to what */\n        _validationWarning: function(what, clear) {\n            var VALIDATION_CLASS = \"validation-warning\";\n            if (what === \"name\") {\n                what = this.$(\".collection-name\").add(\n                    this.$(\".collection-name-prompt\")\n                );\n                this.$(\".collection-name\")\n                    .focus()\n                    .select();\n            }\n            if (clear) {\n                what = what || this.$(\".\" + VALIDATION_CLASS);\n                what.removeClass(VALIDATION_CLASS);\n            } else {\n                what.addClass(VALIDATION_CLASS);\n            }\n        },\n\n        // ------------------------------------------------------------------------ events\n        /** set up event handlers on self */\n        _setUpBehaviors: function() {\n            this.once(\"rendered\", function() {\n                this.trigger(\"rendered:initial\", this);\n            });\n\n            this.on(\"pair:new\", function() {\n                //TODO: ideally only re-render the columns (or even elements) involved\n                this._renderUnpaired();\n                this._renderPaired();\n\n                // scroll to bottom where new pairs are added\n                //TODO: this doesn't seem to work - innerHeight sticks at 133...\n                //  may have to do with improper flex columns\n                //var $pairedView = this.$( '.paired-columns' );\n                //$pairedView.scrollTop( $pairedView.innerHeight() );\n                //this.debug( $pairedView.height() )\n                this.$(\".paired-columns\").scrollTop(8000000);\n            });\n            this.on(\"pair:unpair\", function(pairs) {\n                //TODO: ideally only re-render the columns (or even elements) involved\n                this._renderUnpaired();\n                this._renderPaired();\n                this.splitView();\n            });\n\n            this.on(\"filter-change\", function() {\n                this.filters = [\n                    this.$(\".forward-unpaired-filter input\").val(),\n                    this.$(\".reverse-unpaired-filter input\").val()\n                ];\n                this.metric(\"filter-change\", this.filters);\n                this._renderFilters();\n                this._renderUnpaired();\n            });\n\n            this.on(\"autopair\", function() {\n                this._renderUnpaired();\n                this._renderPaired();\n\n                var message,\n                    msgClass = null;\n                if (this.paired.length) {\n                    msgClass = \"alert-success\";\n                    message = this.paired.length + \" \" + _l(\"pairs created\");\n                    if (!this.unpaired.length) {\n                        message +=\n                            \": \" +\n                            _l(\"all datasets have been successfully paired\");\n                        this.hideUnpaired();\n                        this.$(\".collection-name\").focus();\n                    }\n                } else {\n                    message = _l(\n                        [\n                            \"Could not automatically create any pairs from the given dataset names.\",\n                            \"You may want to choose or enter different filters and try auto-pairing again.\",\n                            \"Close this message using the X on the right to view more help.\"\n                        ].join(\" \")\n                    );\n                }\n                this._showAlert(message, msgClass);\n            });\n\n            //this.on( 'all', function(){\n            //    this.info( arguments );\n            //});\n            return this;\n        },\n\n        events: {\n            // header\n            \"click .more-help\": \"_clickMoreHelp\",\n            \"click .less-help\": \"_clickLessHelp\",\n            \"click .main-help\": \"_toggleHelp\",\n            \"click .header .alert button\": \"_hideAlert\",\n            \"click .forward-column .column-title\": \"_clickShowOnlyUnpaired\",\n            \"click .reverse-column .column-title\": \"_clickShowOnlyUnpaired\",\n            \"click .unpair-all-link\": \"_clickUnpairAll\",\n            //TODO: this seems kinda backasswards - re-sending jq event as a backbone event, can we listen directly?\n            \"change .forward-unpaired-filter input\": function(ev) {\n                this.trigger(\"filter-change\");\n            },\n            \"focus .forward-unpaired-filter input\": function(ev) {\n                $(ev.currentTarget).select();\n            },\n            \"click .autopair-link\": \"_clickAutopair\",\n            \"click .choose-filters .filter-choice\": \"_clickFilterChoice\",\n            \"click .clear-filters-link\": \"_clearFilters\",\n            \"change .reverse-unpaired-filter input\": function(ev) {\n                this.trigger(\"filter-change\");\n            },\n            \"focus .reverse-unpaired-filter input\": function(ev) {\n                $(ev.currentTarget).select();\n            },\n            // unpaired\n            \"click .forward-column .dataset.unpaired\": \"_clickUnpairedDataset\",\n            \"click .reverse-column .dataset.unpaired\": \"_clickUnpairedDataset\",\n            \"click .paired-column .dataset.unpaired\": \"_clickPairRow\",\n            \"click .unpaired-columns\": \"clearSelectedUnpaired\",\n            \"mousedown .unpaired-columns .dataset\": \"_mousedownUnpaired\",\n            // divider\n            \"click .paired-column-title\": \"_clickShowOnlyPaired\",\n            \"mousedown .flexible-partition-drag\": \"_startPartitionDrag\",\n            // paired\n            \"click .paired-columns .dataset.paired\": \"selectPair\",\n            \"click .paired-columns\": \"clearSelectedPaired\",\n            \"click .paired-columns .pair-name\": \"_clickPairName\",\n            \"click .unpair-btn\": \"_clickUnpair\",\n            // paired - drop target\n            //'dragenter .paired-columns'                 : '_dragenterPairedColumns',\n            //'dragleave .paired-columns .column-datasets': '_dragleavePairedColumns',\n            \"dragover .paired-columns .column-datasets\":\n                \"_dragoverPairedColumns\",\n            \"drop .paired-columns .column-datasets\": \"_dropPairedColumns\",\n\n            \"pair.dragstart .paired-columns .column-datasets\": \"_pairDragstart\",\n            \"pair.dragend   .paired-columns .column-datasets\": \"_pairDragend\",\n\n            // footer\n            \"change .remove-extensions\": function(ev) {\n                this.toggleExtensions();\n            },\n            \"change .collection-name\": \"_changeName\",\n            \"keydown .collection-name\": \"_nameCheckForEnter\",\n            \"change .hide-originals\": \"_changeHideOriginals\",\n            \"click .cancel-create\": \"_cancelCreate\",\n            \"click .create-collection\": \"_clickCreate\" //,\n        },\n\n        /** toggle between showing only unpaired and split view */\n        _clickShowOnlyUnpaired: function(ev) {\n            //this.debug( 'click unpaired', ev.currentTarget );\n            if (this.$(\".paired-columns\").is(\":visible\")) {\n                this.hidePaired();\n            } else {\n                this.splitView();\n            }\n        },\n        /** toggle between showing only paired and split view */\n        _clickShowOnlyPaired: function(ev) {\n            //this.debug( 'click paired' );\n            if (this.$(\".unpaired-columns\").is(\":visible\")) {\n                this.hideUnpaired();\n            } else {\n                this.splitView();\n            }\n        },\n\n        /** hide unpaired, show paired */\n        hideUnpaired: function(speed, callback) {\n            this.unpairedPanelHidden = true;\n            this.pairedPanelHidden = false;\n            this._renderMiddle(speed, callback);\n        },\n        /** hide paired, show unpaired */\n        hidePaired: function(speed, callback) {\n            this.unpairedPanelHidden = false;\n            this.pairedPanelHidden = true;\n            this._renderMiddle(speed, callback);\n        },\n        /** show both paired and unpaired (splitting evenly) */\n        splitView: function(speed, callback) {\n            this.unpairedPanelHidden = this.pairedPanelHidden = false;\n            this._renderMiddle(speed, callback);\n            return this;\n        },\n\n        /** unpair all paired and do other super neat stuff which I'm not really sure about yet... */\n        _clickUnpairAll: function(ev) {\n            this.metric(\"unpairAll\");\n            this.unpairAll();\n        },\n\n        /** attempt to autopair */\n        _clickAutopair: function(ev) {\n            var paired = this.autoPair();\n            this.metric(\"autopair\", paired.length, this.unpaired.length);\n            this.trigger(\"autopair\");\n        },\n\n        /** set the filters based on the data attributes of the button click target */\n        _clickFilterChoice: function(ev) {\n            var $selected = $(ev.currentTarget);\n            this.$(\".forward-unpaired-filter input\").val(\n                $selected.data(\"forward\")\n            );\n            this.$(\".reverse-unpaired-filter input\").val(\n                $selected.data(\"reverse\")\n            );\n            this._hideChooseFilters();\n            this.trigger(\"filter-change\");\n        },\n\n        /** hide the choose filters popover */\n        _hideChooseFilters: function() {\n            //TODO: update bootstrap and remove the following hack\n            //  see also: https://github.com/twbs/bootstrap/issues/10260\n            this.$(\".choose-filters-link\").popover(\"hide\");\n            this.$(\".popover\").css(\"display\", \"none\");\n        },\n\n        /** clear both filters */\n        _clearFilters: function(ev) {\n            this.$(\".forward-unpaired-filter input\").val(\"\");\n            this.$(\".reverse-unpaired-filter input\").val(\"\");\n            this.trigger(\"filter-change\");\n        },\n\n        // ........................................................................ unpaired\n        /** select an unpaired dataset */\n        _clickUnpairedDataset: function(ev) {\n            ev.stopPropagation();\n            return this.toggleSelectUnpaired($(ev.currentTarget));\n        },\n\n        /** Toggle the selection of an unpaired dataset representation.\n     *  @param [jQuery] $dataset        the unpaired dataset dom rep to select\n     *  @param [Boolean] options.force  if defined, force selection based on T/F; otherwise, toggle\n     */\n        toggleSelectUnpaired: function($dataset, options) {\n            options = options || {};\n            var dataset = $dataset.data(\"dataset\"),\n                select =\n                    options.force !== undefined\n                        ? options.force\n                        : !$dataset.hasClass(\"selected\");\n            //this.debug( id, options.force, $dataset, dataset );\n            if (!$dataset.length || dataset === undefined) {\n                return $dataset;\n            }\n\n            if (select) {\n                $dataset.addClass(\"selected\");\n                if (!options.waitToPair) {\n                    this.pairAllSelected();\n                }\n            } else {\n                $dataset.removeClass(\"selected\");\n                //delete dataset.selected;\n            }\n            return $dataset;\n        },\n\n        /** pair all the currently selected unpaired datasets */\n        pairAllSelected: function(options) {\n            options = options || {};\n            var creator = this,\n                fwds = [],\n                revs = [],\n                pairs = [];\n            creator\n                .$(\".unpaired-columns .forward-column .dataset.selected\")\n                .each(function() {\n                    fwds.push($(this).data(\"dataset\"));\n                });\n            creator\n                .$(\".unpaired-columns .reverse-column .dataset.selected\")\n                .each(function() {\n                    revs.push($(this).data(\"dataset\"));\n                });\n            fwds.length = revs.length = Math.min(fwds.length, revs.length);\n            //this.debug( fwds );\n            //this.debug( revs );\n            fwds.forEach(function(fwd, i) {\n                try {\n                    pairs.push(creator._pair(fwd, revs[i], { silent: true }));\n                } catch (err) {\n                    //TODO: preserve selected state of those that couldn't be paired\n                    //TODO: warn that some could not be paired\n                    creator.error(err);\n                }\n            });\n            if (pairs.length && !options.silent) {\n                this.trigger(\"pair:new\", pairs);\n            }\n            return pairs;\n        },\n\n        /** clear the selection on all unpaired datasets */\n        clearSelectedUnpaired: function() {\n            this.$(\".unpaired-columns .dataset.selected\").removeClass(\n                \"selected\"\n            );\n        },\n\n        /** when holding down the shift key on a click, 'paint' the moused over datasets as selected */\n        _mousedownUnpaired: function(ev) {\n            if (ev.shiftKey) {\n                var creator = this,\n                    $startTarget = $(ev.target).addClass(\"selected\"),\n                    moveListener = function(ev) {\n                        creator\n                            .$(ev.target)\n                            .filter(\".dataset\")\n                            .addClass(\"selected\");\n                    };\n                $startTarget.parent().on(\"mousemove\", moveListener);\n\n                // on any mouseup, stop listening to the move and try to pair any selected\n                $(document).one(\"mouseup\", function(ev) {\n                    $startTarget.parent().off(\"mousemove\", moveListener);\n                    creator.pairAllSelected();\n                });\n            }\n        },\n\n        /** attempt to pair two datasets directly across from one another */\n        _clickPairRow: function(ev) {\n            //if( !ev.currentTarget ){ return true; }\n            var rowIndex = $(ev.currentTarget).index(),\n                fwd = $(\".unpaired-columns .forward-column .dataset\")\n                    .eq(rowIndex)\n                    .data(\"dataset\"),\n                rev = $(\".unpaired-columns .reverse-column .dataset\")\n                    .eq(rowIndex)\n                    .data(\"dataset\");\n            //this.debug( 'row:', rowIndex, fwd, rev );\n            this._pair(fwd, rev);\n        },\n\n        // ........................................................................ divider/partition\n        /** start dragging the visible divider/partition between unpaired and paired panes */\n        _startPartitionDrag: function(ev) {\n            var creator = this,\n                startingY = ev.pageY;\n            //this.debug( 'partition drag START:', ev );\n            $(\"body\").css(\"cursor\", \"ns-resize\");\n            creator.$(\".flexible-partition-drag\").css(\"color\", \"black\");\n\n            function endDrag(ev) {\n                //creator.debug( 'partition drag STOP:', ev );\n                // doing this by an added class didn't really work well - kept flashing still\n                creator.$(\".flexible-partition-drag\").css(\"color\", \"\");\n                $(\"body\")\n                    .css(\"cursor\", \"\")\n                    .unbind(\"mousemove\", trackMouse);\n            }\n            function trackMouse(ev) {\n                var offset = ev.pageY - startingY;\n                //creator.debug( 'partition:', startingY, offset );\n                if (!creator.adjPartition(offset)) {\n                    //creator.debug( 'mouseup triggered' );\n                    $(\"body\").trigger(\"mouseup\");\n                }\n                creator._adjUnpairedOnScrollbar();\n                startingY += offset;\n            }\n            $(\"body\").mousemove(trackMouse);\n            $(\"body\").one(\"mouseup\", endDrag);\n        },\n\n        /** adjust the parition up/down +/-adj pixels */\n        adjPartition: function(adj) {\n            var $unpaired = this.$(\".unpaired-columns\"),\n                $paired = this.$(\".paired-columns\"),\n                unpairedHi = parseInt($unpaired.css(\"height\"), 10),\n                pairedHi = parseInt($paired.css(\"height\"), 10);\n            //this.debug( adj, 'hi\\'s:', unpairedHi, pairedHi, unpairedHi + adj, pairedHi - adj );\n\n            unpairedHi = Math.max(10, unpairedHi + adj);\n            pairedHi = pairedHi - adj;\n\n            var movingUpwards = adj < 0;\n            // when the divider gets close to the top - lock into hiding the unpaired section\n            if (movingUpwards) {\n                if (this.unpairedPanelHidden) {\n                    return false;\n                } else if (unpairedHi <= 10) {\n                    this.hideUnpaired();\n                    return false;\n                }\n            } else {\n                if (this.unpairedPanelHidden) {\n                    $unpaired.show();\n                    this.unpairedPanelHidden = false;\n                }\n            }\n\n            // when the divider gets close to the bottom - lock into hiding the paired section\n            if (!movingUpwards) {\n                if (this.pairedPanelHidden) {\n                    return false;\n                } else if (pairedHi <= 15) {\n                    this.hidePaired();\n                    return false;\n                }\n            } else {\n                if (this.pairedPanelHidden) {\n                    $paired.show();\n                    this.pairedPanelHidden = false;\n                }\n            }\n\n            $unpaired.css({\n                height: unpairedHi + \"px\",\n                flex: \"0 0 auto\"\n            });\n            return true;\n        },\n\n        // ........................................................................ paired\n        /** select a pair when clicked */\n        selectPair: function(ev) {\n            ev.stopPropagation();\n            $(ev.currentTarget).toggleClass(\"selected\");\n        },\n\n        /** deselect all pairs */\n        clearSelectedPaired: function(ev) {\n            this.$(\".paired-columns .dataset.selected\").removeClass(\"selected\");\n        },\n\n        /** rename a pair when the pair name is clicked */\n        _clickPairName: function(ev) {\n            ev.stopPropagation();\n            var $name = $(ev.currentTarget),\n                $pair = $name.parent().parent(),\n                index = $pair.index(\".dataset.paired\"),\n                pair = this.paired[index],\n                response = prompt(\"Enter a new name for the pair:\", pair.name);\n            if (response) {\n                pair.name = response;\n                // set a flag (which won't be passed in json creation) for manual naming so we don't overwrite these\n                //  when adding/removing extensions\n                //hackish\n                pair.customizedName = true;\n                $name.text(pair.name);\n            }\n        },\n\n        /** unpair this pair */\n        _clickUnpair: function(ev) {\n            //if( !ev.currentTarget ){ return true; }\n            var pairIndex = Math.floor(\n                $(ev.currentTarget).index(\".unpair-btn\")\n            );\n            //this.debug( 'pair:', pairIndex );\n            this._unpair(this.paired[pairIndex]);\n        },\n\n        // ........................................................................ paired - drag and drop re-ordering\n        //_dragenterPairedColumns : function( ev ){\n        //    this.debug( '_dragenterPairedColumns:', ev );\n        //},\n        //_dragleavePairedColumns : function( ev ){\n        //    //this.debug( '_dragleavePairedColumns:', ev );\n        //},\n        /** track the mouse drag over the paired list adding a placeholder to show where the drop would occur */\n        _dragoverPairedColumns: function(ev) {\n            //this.debug( '_dragoverPairedColumns:', ev );\n            ev.preventDefault();\n\n            var $list = this.$(\".paired-columns .column-datasets\");\n            this._checkForAutoscroll($list, ev.originalEvent.clientY);\n            //this.debug( ev.originalEvent.clientX, ev.originalEvent.clientY );\n            var $nearest = this._getNearestPairedDatasetLi(\n                ev.originalEvent.clientY\n            );\n\n            $(\".element-drop-placeholder\").remove();\n            var $placeholder = $(\n                '<div class=\"element-drop-placeholder\"></div>'\n            );\n            if (!$nearest.length) {\n                $list.append($placeholder);\n            } else {\n                $nearest.before($placeholder);\n            }\n        },\n\n        /** If the mouse is near enough to the list's top or bottom, scroll the list */\n        _checkForAutoscroll: function($element, y) {\n            var AUTOSCROLL_SPEED = 2;\n            var offset = $element.offset(),\n                scrollTop = $element.scrollTop(),\n                upperDist = y - offset.top,\n                lowerDist = offset.top + $element.outerHeight() - y;\n            //this.debug( '_checkForAutoscroll:', scrollTop, upperDist, lowerDist );\n            if (upperDist >= 0 && upperDist < this.autoscrollDist) {\n                $element.scrollTop(scrollTop - AUTOSCROLL_SPEED);\n            } else if (lowerDist >= 0 && lowerDist < this.autoscrollDist) {\n                $element.scrollTop(scrollTop + AUTOSCROLL_SPEED);\n            }\n        },\n\n        /** get the nearest *previous* paired dataset PairView based on the mouse's Y coordinate.\n     *      If the y is at the end of the list, return an empty jQuery object.\n     */\n        _getNearestPairedDatasetLi: function(y) {\n            var WIGGLE = 4,\n                lis = this.$(\".paired-columns .column-datasets li\").toArray();\n            for (var i = 0; i < lis.length; i++) {\n                var $li = $(lis[i]),\n                    top = $li.offset().top,\n                    halfHeight = Math.floor($li.outerHeight() / 2) + WIGGLE;\n                if (top + halfHeight > y && top - halfHeight < y) {\n                    //this.debug( y, top + halfHeight, top - halfHeight )\n                    return $li;\n                }\n            }\n            return $();\n        },\n        /** drop (dragged/selected PairViews) onto the list, re-ordering both the DOM and the internal array of pairs */\n        _dropPairedColumns: function(ev) {\n            // both required for firefox\n            ev.preventDefault();\n            ev.dataTransfer.dropEffect = \"move\";\n\n            var $nearest = this._getNearestPairedDatasetLi(\n                ev.originalEvent.clientY\n            );\n            if ($nearest.length) {\n                this.$dragging.insertBefore($nearest);\n            } else {\n                // no nearest before - insert after last element (unpair button)\n                this.$dragging.insertAfter(\n                    this.$(\".paired-columns .unpair-btn\").last()\n                );\n            }\n            // resync the creator's list of paired based on the new DOM order\n            this._syncPairsToDom();\n            return false;\n        },\n        /** resync the creator's list of paired based on the DOM order of pairs */\n        _syncPairsToDom: function() {\n            var newPaired = [];\n            //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n            this.$(\".paired-columns .dataset.paired\").each(function() {\n                newPaired.push($(this).data(\"pair\"));\n            });\n            //this.debug( newPaired );\n            this.paired = newPaired;\n            this._renderPaired();\n        },\n        /** drag communication with pair sub-views: dragstart */\n        _pairDragstart: function(ev, pair) {\n            //this.debug( '_pairDragstart', ev, pair )\n            // auto select the pair causing the event and move all selected\n            pair.$el.addClass(\"selected\");\n            var $selected = this.$(\".paired-columns .dataset.selected\");\n            this.$dragging = $selected;\n        },\n        /** drag communication with pair sub-views: dragend - remove the placeholder */\n        _pairDragend: function(ev, pair) {\n            //this.debug( '_pairDragend', ev, pair )\n            $(\".element-drop-placeholder\").remove();\n            this.$dragging = null;\n        },\n\n        // ........................................................................ footer\n        toggleExtensions: function(force) {\n            var creator = this;\n            creator.removeExtensions =\n                force !== undefined ? force : !creator.removeExtensions;\n\n            _.each(creator.paired, function(pair) {\n                // don't overwrite custom names\n                if (pair.customizedName) {\n                    return;\n                }\n                pair.name = creator._guessNameForPair(\n                    pair.forward,\n                    pair.reverse\n                );\n            });\n\n            creator._renderPaired();\n            creator._renderFooter();\n        },\n\n        // ------------------------------------------------------------------------ misc\n        /** debug a dataset list */\n        _printList: function(list) {\n            var creator = this;\n            _.each(list, function(e) {\n                if (list === creator.paired) {\n                    creator._printPair(e);\n                } else {\n                    //creator.debug( e );\n                }\n            });\n        },\n\n        /** print a pair Object */\n        _printPair: function(pair) {\n            this.debug(pair.forward.name, pair.reverse.name, \": ->\", pair.name);\n        },\n\n        /** string rep */\n        toString: function() {\n            return \"PairedCollectionCreator\";\n        },\n\n        templates: _.extend(\n            {},\n            baseCreator.CollectionCreatorMixin._creatorTemplates,\n            {\n                /** the header (not including help text) */\n                header: _.template(\n                    [\n                        '<div class=\"main-help well clear\">',\n                        '<a class=\"more-help\" href=\"javascript:void(0);\">',\n                        _l(\"More help\"),\n                        \"</a>\",\n                        '<div class=\"help-content\">',\n                        '<a class=\"less-help\" href=\"javascript:void(0);\">',\n                        _l(\"Less\"),\n                        \"</a>\",\n                        \"</div>\",\n                        \"</div>\",\n                        '<div class=\"alert alert-dismissable\">',\n                        '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>',\n                        '<span class=\"alert-message\"></span>',\n                        \"</div>\",\n\n                        '<div class=\"column-headers vertically-spaced flex-column-container\">',\n                        '<div class=\"forward-column flex-column column\">',\n                        '<div class=\"column-header\">',\n                        '<div class=\"column-title\">',\n                        '<span class=\"title\">',\n                        _l(\"Unpaired forward\"),\n                        \"</span>\",\n                        '<span class=\"title-info unpaired-info\"></span>',\n                        \"</div>\",\n                        '<div class=\"unpaired-filter forward-unpaired-filter pull-left\">',\n                        '<input class=\"search-query\" placeholder=\"',\n                        _l(\"Filter this list\"),\n                        '\" />',\n                        \"</div>\",\n                        \"</div>\",\n                        \"</div>\",\n                        '<div class=\"paired-column flex-column no-flex column\">',\n                        '<div class=\"column-header\">',\n                        '<a class=\"choose-filters-link\" href=\"javascript:void(0)\">',\n                        _l(\"Choose filters\"),\n                        \"</a>\",\n                        '<a class=\"clear-filters-link\" href=\"javascript:void(0);\">',\n                        _l(\"Clear filters\"),\n                        \"</a><br />\",\n                        '<a class=\"autopair-link\" href=\"javascript:void(0);\">',\n                        _l(\"Auto-pair\"),\n                        \"</a>\",\n                        \"</div>\",\n                        \"</div>\",\n                        '<div class=\"reverse-column flex-column column\">',\n                        '<div class=\"column-header\">',\n                        '<div class=\"column-title\">',\n                        '<span class=\"title\">',\n                        _l(\"Unpaired reverse\"),\n                        \"</span>\",\n                        '<span class=\"title-info unpaired-info\"></span>',\n                        \"</div>\",\n                        '<div class=\"unpaired-filter reverse-unpaired-filter pull-left\">',\n                        '<input class=\"search-query\" placeholder=\"',\n                        _l(\"Filter this list\"),\n                        '\" />',\n                        \"</div>\",\n                        \"</div>\",\n                        \"</div>\",\n                        \"</div>\"\n                    ].join(\"\")\n                ),\n\n                /** the middle: unpaired, divider, and paired */\n                middle: _.template(\n                    [\n                        // contains two flex rows (rows that fill available space) and a divider btwn\n                        '<div class=\"unpaired-columns flex-column-container scroll-container flex-row\">',\n                        '<div class=\"forward-column flex-column column\">',\n                        '<ol class=\"column-datasets\"></ol>',\n                        \"</div>\",\n                        '<div class=\"paired-column flex-column no-flex column\">',\n                        '<ol class=\"column-datasets\"></ol>',\n                        \"</div>\",\n                        '<div class=\"reverse-column flex-column column\">',\n                        '<ol class=\"column-datasets\"></ol>',\n                        \"</div>\",\n                        \"</div>\",\n                        '<div class=\"flexible-partition\">',\n                        '<div class=\"flexible-partition-drag\" title=\"',\n                        _l(\"Drag to change\"),\n                        '\"></div>',\n                        '<div class=\"column-header\">',\n                        '<div class=\"column-title paired-column-title\">',\n                        '<span class=\"title\"></span>',\n                        \"</div>\",\n                        '<a class=\"unpair-all-link\" href=\"javascript:void(0);\">',\n                        _l(\"Unpair all\"),\n                        \"</a>\",\n                        \"</div>\",\n                        \"</div>\",\n                        '<div class=\"paired-columns flex-column-container scroll-container flex-row\">',\n                        '<ol class=\"column-datasets\"></ol>',\n                        \"</div>\"\n                    ].join(\"\")\n                ),\n\n                /** creation and cancel controls */\n                footer: _.template(\n                    [\n                        '<div class=\"attributes clear\">',\n                        '<div class=\"clear\">',\n                        '<label class=\"setting-prompt pull-right\">',\n                        _l(\"Hide original elements\"),\n                        \"?\",\n                        '<input class=\"hide-originals pull-right\" type=\"checkbox\" />',\n                        \"</label>\",\n                        '<label class=\"setting-prompt pull-right\">',\n                        _l(\"Remove file extensions from pair names\"),\n                        \"?\",\n                        '<input class=\"remove-extensions pull-right\" type=\"checkbox\" />',\n                        \"</label>\",\n                        \"</div>\",\n                        '<div class=\"clear\">',\n                        '<input class=\"collection-name form-control pull-right\" ',\n                        'placeholder=\"',\n                        _l(\"Enter a name for your new list\"),\n                        '\" />',\n                        '<div class=\"collection-name-prompt pull-right\">',\n                        _l(\"Name\"),\n                        \":</div>\",\n                        \"</div>\",\n                        \"</div>\",\n\n                        '<div class=\"actions clear vertically-spaced\">',\n                        '<div class=\"other-options pull-left\">',\n                        '<button class=\"cancel-create btn\" tabindex=\"-1\">',\n                        _l(\"Cancel\"),\n                        \"</button>\",\n                        '<div class=\"create-other btn-group dropup\">',\n                        '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                        _l(\"Create a different kind of collection\"),\n                        ' <span class=\"caret\"></span>',\n                        \"</button>\",\n                        '<ul class=\"dropdown-menu\" role=\"menu\">',\n                        '<li><a href=\"#\">',\n                        _l(\"Create a <i>single</i> pair\"),\n                        \"</a></li>\",\n                        '<li><a href=\"#\">',\n                        _l(\"Create a list of <i>unpaired</i> datasets\"),\n                        \"</a></li>\",\n                        \"</ul>\",\n                        \"</div>\",\n                        \"</div>\",\n\n                        '<div class=\"main-options pull-right\">',\n                        '<button class=\"create-collection btn btn-primary\">',\n                        _l(\"Create list\"),\n                        \"</button>\",\n                        \"</div>\",\n                        \"</div>\"\n                    ].join(\"\")\n                ),\n\n                /** help content */\n                helpContent: _.template(\n                    [\n                        \"<p>\",\n                        _l(\n                            [\n                                \"Collections of paired datasets are ordered lists of dataset pairs (often forward and reverse reads). \",\n                                \"These collections can be passed to tools and workflows in order to have analyses done on each member of \",\n                                \"the entire group. This interface allows you to create a collection, choose which datasets are paired, \",\n                                \"and re-order the final collection.\"\n                            ].join(\"\")\n                        ),\n                        \"</p>\",\n                        \"<p>\",\n                        _l(\n                            [\n                                'Unpaired datasets are shown in the <i data-target=\".unpaired-columns\">unpaired section</i> ',\n                                \"(hover over the underlined words to highlight below). \",\n                                'Paired datasets are shown in the <i data-target=\".paired-columns\">paired section</i>.',\n                                \"<ul>To pair datasets, you can:\",\n                                \"<li>Click a dataset in the \",\n                                '<i data-target=\".unpaired-columns .forward-column .column-datasets,',\n                                '.unpaired-columns .forward-column\">forward column</i> ',\n                                \"to select it then click a dataset in the \",\n                                '<i data-target=\".unpaired-columns .reverse-column .column-datasets,',\n                                '.unpaired-columns .reverse-column\">reverse column</i>.',\n                                \"</li>\",\n                                '<li>Click one of the \"Pair these datasets\" buttons in the ',\n                                '<i data-target=\".unpaired-columns .paired-column .column-datasets,',\n                                '.unpaired-columns .paired-column\">middle column</i> ',\n                                \"to pair the datasets in a particular row.\",\n                                \"</li>\",\n                                '<li>Click <i data-target=\".autopair-link\">\"Auto-pair\"</i> ',\n                                \"to have your datasets automatically paired based on name.\",\n                                \"</li>\",\n                                \"</ul>\"\n                            ].join(\"\")\n                        ),\n                        \"</p>\",\n                        \"<p>\",\n                        _l(\n                            [\n                                \"<ul>You can filter what is shown in the unpaired sections by:\",\n                                \"<li>Entering partial dataset names in either the \",\n                                '<i data-target=\".forward-unpaired-filter input\">forward filter</i> or ',\n                                '<i data-target=\".reverse-unpaired-filter input\">reverse filter</i>.',\n                                \"</li>\",\n                                \"<li>Choosing from a list of preset filters by clicking the \",\n                                '<i data-target=\".choose-filters-link\">\"Choose filters\" link</i>.',\n                                \"</li>\",\n                                \"<li>Entering regular expressions to match dataset names. See: \",\n                                '<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\"',\n                                ' target=\"_blank\">MDN\\'s JavaScript Regular Expression Tutorial</a>. ',\n                                \"Note: forward slashes (\\\\) are not needed.\",\n                                \"</li>\",\n                                \"<li>Clearing the filters by clicking the \",\n                                '<i data-target=\".clear-filters-link\">\"Clear filters\" link</i>.',\n                                \"</li>\",\n                                \"</ul>\"\n                            ].join(\"\")\n                        ),\n                        \"</p>\",\n                        \"<p>\",\n                        _l(\n                            [\n                                \"To unpair individual dataset pairs, click the \",\n                                '<i data-target=\".unpair-btn\">unpair buttons ( <span class=\"fa fa-unlink\"></span> )</i>. ',\n                                'Click the <i data-target=\".unpair-all-link\">\"Unpair all\" link</i> to unpair all pairs.'\n                            ].join(\"\")\n                        ),\n                        \"</p>\",\n                        \"<p>\",\n                        _l(\n                            [\n                                'You can include or remove the file extensions (e.g. \".fastq\") from your pair names by toggling the ',\n                                '<i data-target=\".remove-extensions-prompt\">\"Remove file extensions from pair names?\"</i> control.'\n                            ].join(\"\")\n                        ),\n                        \"</p>\",\n                        \"<p>\",\n                        _l(\n                            [\n                                'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n                                'click <i data-target=\".create-collection\">\"Create list\"</i>. ',\n                                \"(Note: you do not have to pair all unpaired datasets to finish.)\"\n                            ].join(\"\")\n                        ),\n                        \"</p>\"\n                    ].join(\"\")\n                )\n            }\n        )\n    });\n\n//=============================================================================\n/** a modal version of the paired collection creator */\nvar pairedCollectionCreatorModal = function _pairedCollectionCreatorModal(\n    datasets,\n    options\n) {\n    var deferred = jQuery.Deferred(),\n        creator;\n\n    options = _.defaults(options || {}, {\n        datasets: datasets,\n        oncancel: function() {\n            Galaxy.modal.hide();\n            deferred.reject(\"cancelled\");\n        },\n        oncreate: function(creator, response) {\n            Galaxy.modal.hide();\n            deferred.resolve(response);\n        }\n    });\n\n    if (!window.Galaxy || !Galaxy.modal) {\n        throw new Error(\"Galaxy or Galaxy.modal not found\");\n    }\n\n    creator = new PairedCollectionCreator(options);\n    Galaxy.modal.show({\n        title: \"Create a collection of paired datasets\",\n        body: creator.$el,\n        width: \"80%\",\n        height: \"800px\",\n        closing_events: true\n    });\n    creator.render();\n    window.creator = creator;\n\n    //TODO: remove modal header\n    return deferred;\n};\n\n//=============================================================================\nfunction createListOfPairsCollection(collection, defaultHideSourceItems) {\n    var elements = collection.toJSON();\n    //TODO: validate elements\n    return pairedCollectionCreatorModal(elements, {\n        historyId: collection.historyId,\n        defaultHideSourceItems: defaultHideSourceItems\n    });\n}\n\n//=============================================================================\nexport default {\n    PairedCollectionCreator: PairedCollectionCreator,\n    pairedCollectionCreatorModal: pairedCollectionCreatorModal,\n    createListOfPairsCollection: createListOfPairsCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/list-of-pairs-collection-creator.js","define([], function() {\n    //=============================================================================\n    /**\n(Imported for edit distance algorith. From: https://gist.github.com/andrei-m/982927)\nCopyright (c) 2011 Andrei Mackenzie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n    // Compute the edit distance between the two given strings\n    //exports.getEditDistance = function(a, b){\n    function levenshteinDistance(a, b) {\n        if (a.length === 0) {\n            return b.length;\n        }\n        if (b.length === 0) {\n            return a.length;\n        }\n\n        var matrix = [];\n\n        // increment along the first column of each row\n        var i;\n        for (i = 0; i <= b.length; i++) {\n            matrix[i] = [i];\n        }\n\n        // increment each column in the first row\n        var j;\n        for (j = 0; j <= a.length; j++) {\n            matrix[0][j] = j;\n        }\n\n        // Fill in the rest of the matrix\n        for (i = 1; i <= b.length; i++) {\n            for (j = 1; j <= a.length; j++) {\n                if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                    matrix[i][j] = matrix[i - 1][j - 1];\n                } else {\n                    matrix[i][j] = Math.min(\n                        matrix[i - 1][j - 1] + 1, // substitution\n                        Math.min(\n                            matrix[i][j - 1] + 1, // insertion\n                            matrix[i - 1][j] + 1\n                        )\n                    ); // deletion\n                }\n            }\n        }\n\n        //console.debug( '\\t\\t levenshteinDistance', a, b, matrix[b.length][a.length] );\n        return matrix[b.length][a.length];\n    }\n\n    //=============================================================================\n    return levenshteinDistance;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/levenshtein.js","/** User Preferences view */\nimport Form from \"mvc/form/form-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\n/** Contains descriptive dictionaries describing user forms */\nvar Model = Backbone.Model.extend({\n    initialize: function(options) {\n        options = options || {};\n        options.user_id = options.user_id || Galaxy.user.id;\n        this.set({\n            user_id: options.user_id,\n            information: {\n                title: \"Manage information\",\n                description:\n                    \"Edit your email, addresses and custom parameters or change your username.\",\n                url: \"api/users/\" + options.user_id + \"/information/inputs\",\n                icon: \"fa-user\",\n                redirect: \"user\"\n            },\n            password: {\n                title: \"Change password\",\n                description: \"Allows you to change your login credentials.\",\n                icon: \"fa-unlock-alt\",\n                url: \"api/users/\" + options.user_id + \"/password/inputs\",\n                submit_title: \"Save password\",\n                redirect: \"user\"\n            },\n            communication: {\n                title: \"Change communication settings\",\n                description:\n                    \"Enable or disable the communication feature to chat with other users.\",\n                url: \"api/users/\" + options.user_id + \"/communication/inputs\",\n                icon: \"fa-comments-o\",\n                redirect: \"user\"\n            },\n            permissions: {\n                title: \"Set dataset permissions for new histories\",\n                description:\n                    \"Grant others default access to newly created histories. Changes made here will only affect histories created after these settings have been stored.\",\n                url: \"api/users/\" + options.user_id + \"/permissions/inputs\",\n                icon: \"fa-users\",\n                submit_title: \"Save permissions\",\n                redirect: \"user\"\n            },\n            api_key: {\n                title: \"Manage API key\",\n                description: \"Access your current API key or create a new one.\",\n                url: \"api/users/\" + options.user_id + \"/api_key/inputs\",\n                icon: \"fa-key\",\n                submit_title: \"Create a new key\",\n                submit_icon: \"fa-check\"\n            },\n            toolbox_filters: {\n                title: \"Manage Toolbox filters\",\n                description:\n                    \"Customize your Toolbox by displaying or omitting sets of Tools.\",\n                url: \"api/users/\" + options.user_id + \"/toolbox_filters/inputs\",\n                icon: \"fa-filter\",\n                submit_title: \"Save filters\",\n                redirect: \"user\"\n            },\n            openids: {\n                title: \"Manage OpenIDs\",\n                description: \"Associate OpenIDs with your account.\",\n                icon: \"fa-openid\",\n                onclick: function() {\n                    window.location.href =\n                        Galaxy.root +\n                        \"user/openid_manage?cntrller=user&use_panels=True\";\n                }\n            },\n            custom_builds: {\n                title: \"Manage custom builds\",\n                description:\n                    \"Add or remove custom builds using history datasets.\",\n                icon: \"fa-cubes\",\n                onclick: function() {\n                    window.location.href = Galaxy.root + \"custom_builds\";\n                }\n            },\n            logout: {\n                title: \"Sign out\",\n                description: \"Click here to sign out of all sessions.\",\n                icon: \"fa-sign-out\",\n                onclick: function() {\n                    Galaxy.modal.show({\n                        title: \"Sign out\",\n                        body:\n                            \"Do you want to continue and sign out of all active sessions?\",\n                        buttons: {\n                            Cancel: function() {\n                                Galaxy.modal.hide();\n                            },\n                            \"Sign out\": function() {\n                                window.location.href =\n                                    Galaxy.root +\n                                    \"user/logout?session_csrf_token=\" +\n                                    Galaxy.session_csrf_token;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n});\n\n/** View of the main user preference panel with links to individual user forms */\nvar View = Backbone.View.extend({\n    title: \"User Preferences\",\n    initialize: function() {\n        this.model = new Model();\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var config = Galaxy.config;\n        $.getJSON(Galaxy.root + \"api/users/\" + Galaxy.user.id, function(data) {\n            self.$preferences = $(\"<div/>\")\n                .addClass(\"ui-panel\")\n                .append($(\"<h2/>\").append(\"User preferences\"))\n                .append(\n                    $(\"<p/>\").append(\n                        \"You are logged in as <strong>\" +\n                            _.escape(data.email) +\n                            \"</strong>.\"\n                    )\n                )\n                .append(\n                    (self.$table = $(\"<table/>\").addClass(\"ui-panel-table\"))\n                );\n            var message = QueryStringParsing.get(\"message\");\n            var status = QueryStringParsing.get(\"status\");\n            if (message && status) {\n                self.$preferences.prepend(\n                    new Ui.Message({ message: message, status: status }).$el\n                );\n            }\n            if (!config.use_remote_user) {\n                self._addLink(\"information\");\n                self._addLink(\"password\");\n            }\n            if (config.enable_communication_server) {\n                self._addLink(\"communication\");\n            }\n            self._addLink(\"custom_builds\");\n            self._addLink(\"permissions\");\n            self._addLink(\"api_key\");\n            if (config.has_user_tool_filters) {\n                self._addLink(\"toolbox_filters\");\n            }\n            if (config.enable_openid && !config.use_remote_user) {\n                self._addLink(\"openids\");\n            }\n            if (Galaxy.session_csrf_token) {\n                self._addLink(\"logout\");\n            }\n            self.$preferences.append(self._templateFooter(data));\n            self.$el.empty().append(self.$preferences);\n        });\n    },\n\n    _addLink: function(action) {\n        var options = this.model.get(action);\n        var $row = $(this._templateLink(options));\n        var $a = $row.find(\"a\");\n        if (options.onclick) {\n            $a.on(\"click\", function() {\n                options.onclick();\n            });\n        } else {\n            $a.attr(\"href\", Galaxy.root + \"user/\" + action);\n        }\n        this.$table.append($row);\n    },\n\n    _templateLink: function(options) {\n        return (\n            \"<tr>\" +\n            \"<td>\" +\n            '<div class=\"ui-panel-icon fa ' +\n            options.icon +\n            '\">' +\n            \"</td>\" +\n            \"<td>\" +\n            '<a class=\"ui-panel-anchor\" href=\"javascript:void(0)\">' +\n            options.title +\n            \"</a>\" +\n            '<div class=\"ui-form-info\">' +\n            options.description +\n            \"</div>\" +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    },\n\n    _templateFooter: function(options) {\n        return (\n            '<p class=\"ui-panel-footer\">' +\n            \"You are using <strong>\" +\n            options.nice_total_disk_usage +\n            \"</strong> of disk space in this Galaxy instance. \" +\n            (Galaxy.config.enable_quotas\n                ? \"Your disk quota is: <strong>\" + options.quota + \"</strong>. \"\n                : \"\") +\n            'Is your usage more than expected? See the <a href=\"https://galaxyproject.org/learn/managing-datasets/\" target=\"_blank\">documentation</a> for tips on how to find all of the data in your account.' +\n            \"</p>\"\n        );\n    }\n});\n\nexport default {\n    View: View,\n    Model: Model\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/user/user-preferences.js","/** This class renders the chart configuration form. */\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport Table from \"mvc/ui/ui-table\";\nvar Collection = Backbone.Collection.extend({\n    comparator: function(a, b) {\n        a = a.get(\"name\");\n        b = b.get(\"name\");\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n});\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        var history_id =\n            Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n        this.model = new Backbone.Model();\n        this.model.url =\n            Galaxy.root +\n            \"api/histories/\" +\n            history_id +\n            \"/custom_builds_metadata\";\n        this.collection = new Collection();\n        this.collection.url =\n            Galaxy.root + \"api/users/\" + Galaxy.user.id + \"/custom_builds\";\n        this.message = new Ui.Message({});\n        this.installed_builds = new Ui.Select.View({\n            optional: true,\n            onchange: function() {\n                self.installed_builds.value(null);\n            },\n            empty_text: \"List of available builds:\",\n            error_text: \"No system installed builds available.\"\n        });\n        this.table = new Table.View({ cls: \"grid\", selectable: false });\n        this.table.addHeader(\"Name\");\n        this.table.addHeader(\"Key\");\n        this.table.addHeader(\"Number of chroms/contigs\");\n        this.table.addHeader(\"\");\n        this.table.appendHeader();\n        this.setElement(\n            $(\"<div/>\")\n                .append($(\"<h4/>\").text(\"Current Custom Builds\"))\n                .append(this.table.$el)\n                .append(\n                    (this.$installed = $(\"<div/>\")\n                        .append(\n                            $(\"<h4/>\")\n                                .text(\"System Installed Builds\")\n                                .addClass(\"ui-margin-top\")\n                        )\n                        .append(this.installed_builds.$el))\n                )\n                .append(\n                    $(\"<h4/>\")\n                        .text(\"Add a Custom Build\")\n                        .addClass(\"ui-margin-top\")\n                )\n                .append(\n                    $(\"<span/>\")\n                        .addClass(\"ui-column\")\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"ui-column-left\")\n                                .append(this.message.$el)\n                                .append(\n                                    (this.$form = $(\"<div/>\").addClass(\n                                        \"ui-margin-top\"\n                                    ))\n                                )\n                        )\n                        .append(\n                            (this.$help = $(\"<div/>\").addClass(\n                                \"ui-column-right\"\n                            ))\n                        )\n                )\n        );\n        this.listenTo(this.collection, \"add remove reset\", function() {\n            self._renderTable();\n        });\n        this.listenTo(this.model, \"change\", function() {\n            self._renderForm();\n        });\n        this.collection.fetch();\n        this.model.fetch();\n    },\n\n    render: function() {\n        this._renderTable();\n        this._renderForm();\n    },\n\n    _renderTable: function() {\n        var self = this;\n        this.table.delAll();\n        this.collection.sort();\n        this.collection.each(function(model) {\n            self.table.add(model.get(\"name\"));\n            self.table.add(model.id);\n            self.table.add(\n                model.get(\"count\") !== undefined\n                    ? model.get(\"count\")\n                    : \"Processing...\"\n            );\n            self.table.add(\n                new Ui.ButtonIcon({\n                    icon: \"fa-trash-o\",\n                    cls: \"ui-button-icon-plain\",\n                    tooltip: \"Delete custom build.\",\n                    onclick: function() {\n                        model.destroy();\n                    }\n                }).$el\n            );\n            self.table.append(model.id);\n        });\n    },\n\n    _renderForm: function() {\n        var self = this;\n        var initial_type = \"fasta\";\n        var form = new Form({\n            inputs: [\n                {\n                    type: \"text\",\n                    name: \"name\",\n                    label: \"Name\",\n                    help: \"Specify a build name e.g. Hamster.\"\n                },\n                {\n                    type: \"text\",\n                    name: \"id\",\n                    label: \"Key\",\n                    help: \"Specify a build key e.g. hamster_v1.\"\n                },\n                {\n                    name: \"len\",\n                    type: \"conditional\",\n                    test_param: {\n                        name: \"type\",\n                        label: \"Definition\",\n                        help: \"Provide the data source.\",\n                        type: \"select\",\n                        value: initial_type,\n                        data: [\n                            {\n                                value: \"fasta\",\n                                label: \"FASTA-file from history\"\n                            },\n                            {\n                                value: \"file\",\n                                label: \"Len-file from disk\"\n                            },\n                            {\n                                value: \"text\",\n                                label: \"Len-file by copy/paste\"\n                            }\n                        ]\n                    },\n                    cases: [\n                        {\n                            value: \"fasta\",\n                            inputs: [\n                                {\n                                    type: \"select\",\n                                    name: \"value\",\n                                    label: \"FASTA-file\",\n                                    data: this.model.get(\"fasta_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"file\",\n                            inputs: [\n                                {\n                                    type: \"upload\",\n                                    name: \"value\",\n                                    label: \"Len-file\",\n                                    data: this.model.get(\"len_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"text\",\n                            inputs: [\n                                {\n                                    type: \"text\",\n                                    area: true,\n                                    name: \"value\",\n                                    label: \"Edit/Paste\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            buttons: {\n                save: new Ui.Button({\n                    icon: \"fa-save\",\n                    tooltip: \"Create new Build\",\n                    title: \"Save\",\n                    cls: \"btn btn-primary ui-clear-float\",\n                    onclick: function() {\n                        var data = form.data.create();\n                        if (!data.id || !data.name) {\n                            self.message.update({\n                                message: \"All inputs are required.\",\n                                status: \"danger\"\n                            });\n                        } else {\n                            self.collection.create(data, {\n                                wait: true,\n                                success: function(response) {\n                                    if (response.get(\"message\")) {\n                                        self.message.update({\n                                            message: response.get(\"message\"),\n                                            status: \"warning\"\n                                        });\n                                    } else {\n                                        self.message.update({\n                                            message:\n                                                \"Successfully added a new custom build.\",\n                                            status: \"success\"\n                                        });\n                                    }\n                                },\n                                error: function(response, err) {\n                                    var message =\n                                        err &&\n                                        err.responseJSON &&\n                                        err.responseJSON.err_msg;\n                                    self.message.update({\n                                        message:\n                                            message ||\n                                            \"Failed to create custom build.\",\n                                        status: \"danger\"\n                                    });\n                                }\n                            });\n                        }\n                    }\n                })\n            },\n            onchange: function() {\n                var input_id = form.data.match(\"len|type\");\n                if (input_id) {\n                    var input_field = form.field_list[input_id];\n                    self._renderHelp(input_field.value());\n                }\n            }\n        });\n        this.$form.empty().append(form.$el);\n        var installed_builds = this.model.get(\"installed_builds\");\n        if (installed_builds && installed_builds.length) {\n            this.$installed.show();\n            this.installed_builds.update(this.model.get(\"installed_builds\"));\n        } else {\n            this.$installed.hide();\n        }\n        this._renderHelp(initial_type);\n    },\n\n    _renderHelp: function(len_type) {\n        this.$help\n            .empty()\n            .addClass(\"alert alert-info\")\n            .html(\n                len_type == \"fasta\"\n                    ? this._templateFasta()\n                    : this._templateLen()\n            );\n    },\n\n    _templateLen: function() {\n        return (\n            \"<h4>Length Format</h4>\" +\n            \"<p>\" +\n            \"The length format is two-column, separated by whitespace, of the form:\" +\n            \"<pre>chrom/contig   length of chrom/contig</pre>\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"For example, the first few entries of <em>mm9.len</em> are as follows:\" +\n            \"<pre>\" +\n            \"chr1    197195432\\n\" +\n            \"chr2    181748087\\n\" +\n            \"chr3    159599783\\n\" +\n            \"chr4    155630120\\n\" +\n            \"chr5    152537259\" +\n            \"</pre>\" +\n            \"</p>\" +\n            \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" +\n            \"to set the maximum basepair of the track browser. You may either upload a .len file\" +\n            \"of this format (Len File option), or directly enter the information into the box \" +\n            \"(Len Entry option).</p>\"\n        );\n    },\n\n    _templateFasta: function() {\n        return (\n            \"<h4>FASTA format</h4>\" +\n            \"<p>\" +\n            \"This is a multi-fasta file from your current history that provides the genome\" +\n            \"sequences for each chromosome/contig in your build.\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"Here is a snippet from an example multi-fasta file:\" +\n            \"<pre>\" +\n            \">chr1\\n\" +\n            \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" +\n            \">chr2\\n\" +\n            \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" +\n            \"...\" +\n            \"</pre>\" +\n            \"</p>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/user/user-custom-builds.js","/** This class renders the grid list with shared section. */\nimport GridView from \"mvc/grid/grid-view\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model(options);\n        this.item = this.model.get(\"item\");\n        this.title = this.model.get(\"plural\");\n        $.ajax({\n            url:\n                Galaxy.root +\n                this.item +\n                \"/\" +\n                this.model.get(\"action_id\") +\n                \"?\" +\n                $.param(Galaxy.params),\n            success: function(response) {\n                response[\"dict_format\"] = true;\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function() {\n        var grid = new GridView(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n        this.$el.append(this._templateShared());\n    },\n\n    _templateShared: function() {\n        var self = this;\n        var $tmpl = $(\n            \"<div>\" +\n                \"<h2>\" +\n                this.model.get(\"plural\") +\n                \" shared with you by others</h2>\" +\n                \"</div>\"\n        );\n        var options = this.model.attributes;\n        if (options.shared_by_others && options.shared_by_others.length > 0) {\n            var $table = $(\n                '<table class=\"colored\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">' +\n                    '<tr class=\"header\">' +\n                    \"<th>Title</th>\" +\n                    \"<th>Owner</th>\" +\n                    \"</tr>\" +\n                    \"</table>\"\n            );\n            _.each(options.shared_by_others, function(it, index) {\n                var display_url =\n                    Galaxy.root +\n                    self.item +\n                    \"/display_by_username_and_slug?username=\" +\n                    it.username +\n                    \"&slug=\" +\n                    it.slug;\n                $table.append(\n                    \"<tr>\" +\n                        \"<td>\" +\n                        '<a href=\"' +\n                        display_url +\n                        '\">' +\n                        _.escape(it.title) +\n                        \"</a>\" +\n                        \"</td>\" +\n                        \"<td>\" +\n                        _.escape(it.username) +\n                        \"</td>\" +\n                        \"</tr>\"\n                );\n            });\n            $tmpl.append($table);\n        } else {\n            $tmpl.append(\n                \"No \" +\n                    this.model.get(\"plural\").toLowerCase() +\n                    \" have been shared with you.\"\n            );\n        }\n        return $tmpl;\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/grid/grid-shared.js","/** Workflow view */\ndefine(\n    [\n        \"libs/toastr\",\n        \"mvc/tag\",\n        \"mvc/workflow/workflow-model\",\n        \"utils/query-string-parsing\"\n    ],\n    function(mod_toastr, TAGS, WORKFLOWS, QueryStringParsing) {\n        /** View of the individual workflows */\n        var WorkflowItemView = Backbone.View.extend({\n            tagName: \"tr\", // name of (orphan) root tag in this.el\n            initialize: function() {\n                _.bindAll(\n                    this,\n                    \"render\",\n                    \"_rowTemplate\",\n                    \"renderTagEditor\",\n                    \"_templateActions\",\n                    \"removeWorkflow\",\n                    \"copyWorkflow\"\n                ); // every function that uses 'this' as the current object should be in here\n                mod_toastr.options.timeOut = 1500;\n            },\n\n            events: {\n                \"click #show-in-tool-panel\": \"showInToolPanel\",\n                \"click #delete-workflow\": \"removeWorkflow\",\n                \"click #rename-workflow\": \"renameWorkflow\",\n                \"click #copy-workflow\": \"copyWorkflow\"\n            },\n\n            render: function() {\n                $(this.el).html(this._rowTemplate());\n                return this;\n            },\n\n            showInToolPanel: function() {\n                this.model.set(\n                    \"show_in_tool_panel\",\n                    !this.model.get(\"show_in_tool_panel\")\n                );\n                this.model.save();\n                // This reloads the whole page, so that the workflow appears in the tool panel.\n                // Ideally we would notify only the tool panel of a change\n                window.location = Galaxy.root + \"workflow\";\n            },\n\n            removeWorkflow: function() {\n                var wfName = this.model.get(\"name\");\n                if (\n                    window.confirm(\n                        \"Are you sure you want to delete workflow '\" +\n                            wfName +\n                            \"'?\"\n                    )\n                ) {\n                    this.model.destroy({\n                        success: function() {\n                            mod_toastr.success(\n                                \"Successfully deleted workflow '\" + wfName + \"'\"\n                            );\n                        }\n                    });\n                    this.remove();\n                }\n            },\n\n            renameWorkflow: function() {\n                var oldName = this.model.get(\"name\");\n                var newName = window.prompt(\n                    \"Enter a new Name for workflow '\" + oldName + \"'\",\n                    oldName\n                );\n                if (newName) {\n                    this.model.save(\n                        { name: newName },\n                        {\n                            success: function() {\n                                mod_toastr.success(\n                                    \"Successfully renamed workflow '\" +\n                                        oldName +\n                                        \"' to '\" +\n                                        newName +\n                                        \"'\"\n                                );\n                            }\n                        }\n                    );\n                    this.render();\n                }\n            },\n\n            copyWorkflow: function() {\n                var self = this;\n                var oldName = this.model.get(\"name\");\n                $.getJSON(\n                    this.model.urlRoot + \"/\" + this.model.id + \"/download\",\n                    function(wfJson) {\n                        var newName = \"Copy of \" + oldName;\n                        var currentOwner = self.model.get(\"owner\");\n                        if (currentOwner != Galaxy.user.attributes.username) {\n                            newName += \" shared by user \" + currentOwner;\n                        }\n                        wfJson.name = newName;\n                        self.collection.create(wfJson, {\n                            at: 0,\n                            wait: true,\n                            success: function() {\n                                mod_toastr.success(\n                                    \"Successfully copied workflow '\" +\n                                        oldName +\n                                        \"' to '\" +\n                                        newName +\n                                        \"'\"\n                                );\n                            },\n                            error: function(model, resp, options) {\n                                // signature seems to have changed over the course of backbone dev\n                                // see https://github.com/jashkenas/backbone/issues/2606#issuecomment-19289483\n                                mod_toastr.error(options.errorThrown);\n                            }\n                        });\n                    }\n                ).error(function(jqXHR, textStatus, errorThrown) {\n                    mod_toastr.error(jqXHR.responseJSON.err_msg);\n                });\n            },\n\n            _rowTemplate: function() {\n                var show = this.model.get(\"show_in_tool_panel\");\n                var wfId = this.model.id;\n                var checkboxHtml =\n                    '<input id=\"show-in-tool-panel\" type=\"checkbox\" class=\"show-in-tool-panel\" ' +\n                    (show ? 'checked=\"' + show + '\"' : \"\") +\n                    ' value=\"' +\n                    wfId +\n                    '\">';\n                var trHtml =\n                    \"<td>\" +\n                    '<div class=\"dropdown\">' +\n                    '<button class=\"menubutton\" type=\"button\" data-toggle=\"dropdown\">' +\n                    _.escape(this.model.get(\"name\")) +\n                    '<span class=\"caret\"></span>' +\n                    \"</button>\" +\n                    this._templateActions() +\n                    \"</div>\" +\n                    \"</td>\" +\n                    \"<td><span>\" +\n                    '<div class=\"' +\n                    wfId +\n                    ' tags-display\"></div>' +\n                    \"</td>\" +\n                    \"<td>\" +\n                    (this.model.get(\"owner\") === Galaxy.user.attributes.username\n                        ? \"You\"\n                        : this.model.get(\"owner\")) +\n                    \"</span></td>\" +\n                    \"<td>\" +\n                    this.model.get(\"number_of_steps\") +\n                    \"</td>\" +\n                    \"<td>\" +\n                    (this.model.get(\"published\") ? \"Yes\" : \"No\") +\n                    \"</td>\" +\n                    \"<td>\" +\n                    checkboxHtml +\n                    \"</td>\";\n                return trHtml;\n            },\n\n            renderTagEditor: function() {\n                var TagEditor = new TAGS.TagsEditor({\n                    model: this.model,\n                    el: $.find(\".\" + this.model.id + \".tags-display\"),\n                    workflow_mode: true\n                });\n                TagEditor.toggle(true);\n                TagEditor.render();\n            },\n\n            /** Template for user actions for workflows */\n            _templateActions: function() {\n                if (\n                    this.model.get(\"owner\") === Galaxy.user.attributes.username\n                ) {\n                    return (\n                        '<ul class=\"dropdown-menu action-dpd\">' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/editor?id=\" +\n                        this.model.id +\n                        '\">Edit</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/run?id=\" +\n                        this.model.id +\n                        '\">Run</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/sharing?id=\" +\n                        this.model.id +\n                        '\">Share</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"api/workflows/\" +\n                        this.model.id +\n                        '/download?format=json-download\">Download</a></li>' +\n                        '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                        '<li><a id=\"rename-workflow\" style=\"cursor: pointer;\">Rename</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/display_by_id?id=\" +\n                        this.model.id +\n                        '\">View</a></li>' +\n                        '<li><a id=\"delete-workflow\" style=\"cursor: pointer;\">Delete</a></li>' +\n                        \"</ul>\"\n                    );\n                } else {\n                    return (\n                        '<ul class=\"dropdown-menu action-dpd\">' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/display_by_username_and_slug?username=\" +\n                        this.model.get(\"owner\") +\n                        \"&slug=\" +\n                        this.model.get(\"slug\") +\n                        '\">View</a></li>' +\n                        '<li><a href=\"' +\n                        Galaxy.root +\n                        \"workflow/run?id=\" +\n                        this.model.id +\n                        '\">Run</a></li>' +\n                        '<li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li>' +\n                        '<li><a class=\"link-confirm-shared-' +\n                        this.model.id +\n                        '\" href=\"' +\n                        Galaxy.root +\n                        \"workflow/sharing?unshare_me=True&id=\" +\n                        this.model.id +\n                        '\">Remove</a></li>' +\n                        \"</ul>\"\n                    );\n                }\n            }\n        });\n\n        /** View of the main workflow list page */\n        var WorkflowListView = Backbone.View.extend({\n            title: \"Workflows\",\n            initialize: function() {\n                this.setElement(\"<div/>\");\n                _.bindAll(this, \"adjustActiondropdown\");\n                this.collection = new WORKFLOWS.WorkflowCollection();\n                this.collection.fetch().done(this.render());\n                this.collection.bind(\"add\", this.appendItem);\n                this.collection.on(\"sync\", this.render, this);\n            },\n\n            events: {\n                dragleave: \"unhighlightDropZone\",\n                drop: \"drop\",\n                dragover: function(ev) {\n                    $(\".hidden_description_layer\").addClass(\"dragover\");\n                    $(\".menubutton\").addClass(\"background-none\");\n                    ev.preventDefault();\n                }\n            },\n\n            unhighlightDropZone: function() {\n                $(\".hidden_description_layer\").removeClass(\"dragover\");\n                $(\".menubutton\").removeClass(\"background-none\");\n            },\n\n            drop: function(e) {\n                // TODO: check that file is valid galaxy workflow\n                this.unhighlightDropZone();\n                e.preventDefault();\n                var files = e.dataTransfer.files;\n                var self = this;\n                for (var i = 0, f; (f = files[i]); i++) {\n                    self.readWorkflowFiles(f);\n                }\n            },\n\n            readWorkflowFiles: function(f) {\n                var self = this;\n                var reader = new FileReader();\n                reader.onload = function(theFile) {\n                    var wf_json;\n                    try {\n                        wf_json = JSON.parse(reader.result);\n                    } catch (e) {\n                        mod_toastr.error(\n                            \"Could not read file '\" +\n                                f.name +\n                                \"'. Verify it is a valid Galaxy workflow\"\n                        );\n                        wf_json = null;\n                    }\n                    if (wf_json) {\n                        self.collection.create(wf_json, {\n                            at: 0,\n                            wait: true,\n                            success: function() {\n                                mod_toastr.success(\n                                    \"Successfully imported workflow '\" +\n                                        wf_json.name +\n                                        \"'\"\n                                );\n                            },\n                            error: function(model, resp, options) {\n                                mod_toastr.error(options.errorThrown);\n                            }\n                        });\n                    }\n                };\n                reader.readAsText(f, \"utf-8\");\n            },\n\n            _showArgErrors: _.once(function() {\n                // Parse args out of params, display if there's a message.\n                var msg_text = QueryStringParsing.get(\"message\");\n                var msg_status = QueryStringParsing.get(\"status\");\n                if (msg_status === \"error\") {\n                    mod_toastr.error(\n                        _.escape(\n                            msg_text ||\n                                \"Unknown Error, please report this to an administrator.\"\n                        )\n                    );\n                } else if (msg_text) {\n                    mod_toastr.info(_.escape(msg_text));\n                }\n            }),\n\n            render: function() {\n                // Add workflow header\n                var header = this._templateHeader();\n                // Add the actions buttons\n                var templateActions = this._templateActionButtons();\n                var tableTemplate = this._templateWorkflowTable();\n                this.$el.html(header + templateActions + tableTemplate);\n                var self = this;\n                _(this.collection.models).each(function(item) {\n                    // in case collection is not empty\n                    self.appendItem(item);\n                    self.confirmDelete(item);\n                }, this);\n                var minQueryLength = 3;\n                this.searchWorkflow(\n                    this.$(\".search-wf\"),\n                    this.$(\".workflow-search tr\"),\n                    minQueryLength\n                );\n                this.adjustActiondropdown();\n                this._showArgErrors();\n                return this;\n            },\n\n            appendItem: function(item) {\n                var workflowItemView = new WorkflowItemView({\n                    model: item,\n                    collection: this.collection\n                });\n                $(\".workflow-search\").append(workflowItemView.render().el);\n                workflowItemView.renderTagEditor();\n            },\n\n            /** Add confirm box before removing/unsharing workflow */\n            confirmDelete: function(workflow) {\n                var $el_shared_wf_link = this.$(\n                    \".link-confirm-shared-\" + workflow.id\n                );\n                $el_shared_wf_link.click(function() {\n                    return window.confirm(\n                        \"Are you sure you want to remove the shared workflow '\" +\n                            workflow.attributes.name +\n                            \"'?\"\n                    );\n                });\n            },\n\n            /** Implement client side workflow search/filtering */\n            searchWorkflow: function(\n                $el_searchinput,\n                $el_tabletr,\n                min_querylen\n            ) {\n                $el_searchinput.on(\"keyup\", function() {\n                    var query = $(this).val();\n                    // Filter when query is at least 3 characters\n                    // otherwise show all rows\n                    if (query.length >= min_querylen) {\n                        // Ignore the query's case using 'i'\n                        var regular_expression = new RegExp(query, \"i\");\n                        $el_tabletr.hide();\n                        $el_tabletr\n                            .filter(function() {\n                                // Apply regular expression on each row's text\n                                // and show when there is a match\n                                return regular_expression.test($(this).text());\n                            })\n                            .show();\n                    } else {\n                        $el_tabletr.show();\n                    }\n                });\n            },\n\n            /** Ajust the position of dropdown with respect to table */\n            adjustActiondropdown: function() {\n                $(this.el).on(\"show.bs.dropdown\", function() {\n                    $(this.el).css(\"overflow\", \"inherit\");\n                });\n                $(this.el).on(\"hide.bs.dropdown\", function() {\n                    $(this.el).css(\"overflow\", \"auto\");\n                });\n            },\n\n            /** Template for no workflow */\n            _templateNoWorkflow: function() {\n                return '<div class=\"wf-nodata\"> You have no workflows. </div>';\n            },\n\n            /** Template for actions buttons */\n            _templateActionButtons: function() {\n                return (\n                    '<ul class=\"manage-table-actions\">' +\n                    \"<li>\" +\n                    '<input class=\"search-wf form-control\" type=\"text\" autocomplete=\"off\" placeholder=\"search for workflow...\">' +\n                    \"</li>\" +\n                    \"<li>\" +\n                    '<a class=\"action-button fa fa-plus wf-action\" id=\"new-workflow\" title=\"Create new workflow\" href=\"' +\n                    Galaxy.root +\n                    'workflow/create\">' +\n                    \"</a>\" +\n                    \"</li>\" +\n                    \"<li>\" +\n                    '<a class=\"action-button fa fa-upload wf-action\" id=\"import-workflow\" title=\"Upload or import workflow\" href=\"' +\n                    Galaxy.root +\n                    'workflow/import_workflow\">' +\n                    \"</a>\" +\n                    \"</li>\" +\n                    \"</ul>\"\n                );\n            },\n\n            /** Template for workflow table */\n            _templateWorkflowTable: function() {\n                var tableHtml =\n                    '<table class=\"table colored\"><thead>' +\n                    '<tr class=\"header\">' +\n                    \"<th>Name</th>\" +\n                    \"<th>Tags</th>\" +\n                    \"<th>Owner</th>\" +\n                    \"<th># of Steps</th>\" +\n                    \"<th>Published</th>\" +\n                    \"<th>Show in tools panel</th>\" +\n                    \"</tr></thead>\";\n                return (\n                    tableHtml +\n                    '<tbody class=\"workflow-search \"><div class=\"hidden_description_layer\"><p>Drop workflow files here to import</p>' +\n                    \"</tbody></table></div>\"\n                );\n            },\n\n            /** Main template */\n            _templateHeader: function() {\n                return (\n                    '<div class=\"page-container\">' +\n                    '<div class=\"user-workflows wf\">' +\n                    '<div class=\"response-message\"></div>' +\n                    \"<h2>Your workflows</h2>\" +\n                    \"</div>\" +\n                    \"</div>\"\n                );\n            }\n        });\n\n        var ImportWorkflowView = Backbone.View.extend({\n            initialize: function() {\n                this.setElement(\"<div/>\");\n                this.render();\n            },\n\n            /** Open page to import workflow */\n            render: function() {\n                var self = this;\n                $.getJSON(\n                    Galaxy.root + \"workflow/upload_import_workflow\",\n                    function(options) {\n                        self.$el.empty().append(self._mainTemplate(options));\n                    }\n                );\n            },\n\n            /** Template for the import workflow page */\n            _mainTemplate: function(options) {\n                return (\n                    \"<div class='toolForm'>\" +\n                    \"<div class='toolFormTitle'>Import Galaxy workflow</div>\" +\n                    \"<div class='toolFormBody'>\" +\n                    \"<form name='import_workflow' id='import_workflow' action='\" +\n                    Galaxy.root +\n                    \"workflow/upload_import_workflow\" +\n                    \"' enctype='multipart/form-data' method='POST'>\" +\n                    \"<div class='form-row'>\" +\n                    \"<label>Galaxy workflow URL:</label>\" +\n                    \"<input type='text' name='url' class='input-url' value='\" +\n                    options.url +\n                    \"' size='40'>\" +\n                    \"<div class='toolParamHelp' style='clear: both;'>\" +\n                    \"If the workflow is accessible via a URL, enter the URL above and click <b>Import</b>.\" +\n                    \"</div>\" +\n                    \"<div style='clear: both'></div>\" +\n                    \"</div>\" +\n                    \"<div class='form-row'>\" +\n                    \"<label>Galaxy workflow file:</label>\" +\n                    \"<div class='form-row-input'>\" +\n                    \"<input type='file' name='file_data' class='input-file'/>\" +\n                    \"</div>\" +\n                    \"<div class='toolParamHelp' style='clear: both;'>\" +\n                    \"If the workflow is in a file on your computer, choose it and then click <b>Import</b>.\" +\n                    \"</div>\" +\n                    \"<div style='clear: both'></div>\" +\n                    \"</div>\" +\n                    \"<div class='form-row'>\" +\n                    \"<input type='submit' class='primary-button wf-import' name='import_button' value='Import'>\" +\n                    \"</div>\" +\n                    \"</form>\" +\n                    \"<hr/>\" +\n                    \"<div class='form-row'>\" +\n                    \"<label>Import a Galaxy workflow from myExperiment:</label>\" +\n                    \"<div class='form-row-input'>\" +\n                    \"<a href='\" +\n                    options.myexperiment_target_url +\n                    \"'> Visit myExperiment</a>\" +\n                    \"</div>\" +\n                    \"<div class='toolParamHelp' style='clear: both;'>\" +\n                    \"Click the link above to visit myExperiment and browse for Galaxy workflows.\" +\n                    \"</div>\" +\n                    \"<div style='clear: both'></div>\" +\n                    \"</div>\" +\n                    \"</div>\" +\n                    \"</div>\"\n                );\n            }\n        });\n\n        return {\n            View: WorkflowListView,\n            ImportWorkflowView: ImportWorkflowView\n        };\n    }\n);\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/workflow/workflow.js","define([\"mvc/base-mvc\"], function(baseMVC) {\n    /* global Backbone */\n    // workflow model\n\n    var logNamespace = \"workflow\";\n    //==============================================================================\n    /** @class model for a single workflow.\n *  @name WorkflowItem\n *  @augments Backbone.Model\n */\n    var WorkflowItem = Backbone.Model.extend(baseMVC.LoggableMixin).extend({\n        _logNamespace: logNamespace,\n\n        urlRoot: Galaxy.root + \"api/workflows\",\n\n        toJSON: function() {\n            // need to overwrite this as endpoint expects the 'workflow' key in payload\n            return { workflow: this.attributes };\n        }\n    });\n\n    //==============================================================================\n    /** @class collection for workflows.\n *  @name WorkflowCollection\n *  @augments Backbone.Collection\n */\n    var WorkflowCollection = Backbone.Collection.extend({\n        model: WorkflowItem,\n        url: Galaxy.root + \"api/workflows\"\n    });\n\n    //==============================================================================\n\n    return {\n        WorkflowItem: WorkflowItem,\n        WorkflowCollection: WorkflowCollection\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/workflow/workflow-model.js","/** This class renders the grid list. */\nimport Utils from \"utils/utils\";\nimport GridView from \"mvc/grid/grid-view\";\nimport HistoryModel from \"mvc/history/history-model\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\nvar View = Backbone.View.extend({\n    title: \"Histories\",\n    initialize: function(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model();\n        Utils.get({\n            url:\n                Galaxy.root +\n                \"history/\" +\n                options.action_id +\n                \"?\" +\n                $.param(Galaxy.params),\n            success: function(response) {\n                response[\"dict_format\"] = true;\n                _.each(response[\"operations\"], function(operation) {\n                    if (operation.label == \"Copy\") {\n                        operation.onclick = function(id) {\n                            self._showCopyDialog(id);\n                        };\n                    }\n                });\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function() {\n        var grid = new GridView(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n    },\n\n    _showCopyDialog: function(id) {\n        var history = new HistoryModel.History({ id: id });\n        history\n            .fetch()\n            .fail(function() {\n                alert(\n                    \"History could not be fetched. Please contact an administrator\"\n                );\n            })\n            .done(function() {\n                historyCopyDialog(history, {}).done(function() {\n                    if (\n                        window.parent &&\n                        window.parent.Galaxy &&\n                        window.parent.Galaxy.currHistoryPanel\n                    ) {\n                        window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                    }\n                    window.location.reload(true);\n                });\n            });\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-list.js","import Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\n/** Dataset edit attributes view */\nvar View = Backbone.View.extend({\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.model = new Backbone.Model({\n            dataset_id: Galaxy.params.dataset_id\n        });\n        this.render();\n    },\n\n    // Fetch data for the selected dataset and\n    render: function() {\n        var data_url =\n                Galaxy.root + \"api/datasets/\" + this.model.get(\"dataset_id\"),\n            self = this;\n\n        Utils.get({\n            url: data_url,\n            success: function(dataset) {\n                var job_url =\n                    Galaxy.root +\n                    \"api/jobs/\" +\n                    dataset.creating_job +\n                    \"?full=True\";\n                Utils.get({\n                    url: job_url,\n                    success: function(job) {\n                        var job_url =\n                            Galaxy.root +\n                            \"api/jobs/\" +\n                            dataset.creating_job +\n                            \"?full=True\";\n                        self.render_error_page(self, dataset, job);\n                    },\n                    error: function(response) {\n                        var error_response = {\n                            status: \"error\",\n                            message: \"Error occured while loading the job.\",\n                            persistent: true,\n                            cls: \"errormessage\"\n                        };\n                        self.display_message(\n                            error_response,\n                            self.$(\".response-message\")\n                        );\n                    }\n                });\n            },\n            error: function(response) {\n                var error_response = {\n                    status: \"error\",\n                    message: \"Error occured while loading the dataset.\",\n                    persistent: true,\n                    cls: \"errormessage\"\n                };\n                self.display_message(\n                    error_response,\n                    self.$(\".response-message\")\n                );\n            }\n        });\n    },\n\n    /** Render the view */\n    render_error_page: function(self, dataset, job) {\n        self.$el.empty().append(self._templateHeader());\n        self.$el.append(\"<h2>Dataset Error</h2>\");\n        self.$el.append(\n            \"<p>An error occured while running the tool <b>\" +\n                job.tool_id +\n                \"</b>.</p>\"\n        );\n        self.$el.append(\n            \"<p>Tool execution generated the following messages:</p>\"\n        );\n        self.$el.append('<pre class=\"code\">' + job.stderr + \"</pre>\");\n        self.$el.append(\"<h2>Report This Error</pre>\");\n        self.$el.append(\n            \"<p>Usually the local Galaxy administrators regularly review errors that occur on the server. However, if you would like to provide additional information (such as what you were trying to do when the error occurred) and a contact e-mail address, we will be better able to investigate your problem and get back to you.</p>\"\n        );\n        self.$el.append(self._getBugFormTemplate(dataset, job));\n    },\n\n    /** Display actions messages */\n    display_message: function(response, $el, doNotClear, safe) {\n        if (!safe) {\n            if (doNotClear) {\n                $el.append(new Ui.Message(response).$el);\n            } else {\n                $el.empty().html(new Ui.Message(response).$el);\n            }\n        } else {\n            if (doNotClear) {\n                $el.append(new Ui.UnescapedMessage(response).$el);\n            } else {\n                $el.empty().html(new Ui.UnescapedMessage(response).$el);\n            }\n        }\n    },\n\n    /** Main template */\n    _templateHeader: function() {\n        return (\n            '<div class=\"page-container edit-attr\">' +\n            '<div class=\"response-message\"></div>' +\n            \"</div>\"\n        );\n    },\n\n    /** Convert tab template */\n    _getBugFormTemplate: function(dataset, job) {\n        var self = this;\n        var inputs = [\n            {\n                help: \"Your email address\",\n                options: [],\n                type: \"text\",\n                name: \"email\",\n                label: \"Your email\",\n                value: Galaxy.user.get(\"email\")\n            },\n            {\n                help:\n                    \"Any additional comments you can provide regarding what you were doing at the time of the bug.\",\n                options: [],\n                type: \"text\",\n                area: true,\n                name: \"message\",\n                label: \"Message\"\n            }\n        ];\n\n        // TODO\n        if (false && response.any_public) {\n            inputs.push({\n                name: \"public_consent\",\n                label: \"Public Disclosure Consent\",\n                help:\n                    \"This Galaxy is configured to report to one or more error reporting backends that public to the world. By selecting 'yes', you acknowledge that this bug report will be made public.\",\n                value: String(Boolean(false)),\n                options: [],\n                type: \"boolean\"\n            });\n        }\n\n        var form = new Form({\n            title: \"Error Report\",\n            inputs: inputs,\n            buttons: {\n                save: new Ui.Button({\n                    icon: \"fa-bug\",\n                    title: \"Report\",\n                    cls: \"ui-button btn btn-primary\",\n                    floating: \"clear\",\n                    onclick: function() {\n                        var form_data = form.data.create();\n                        var url = Galaxy.root + \"api/jobs/\" + job.id + \"/error\";\n                        form_data.dataset_id = dataset.id;\n                        self.submit(form_data, url);\n                    }\n                })\n            }\n        });\n        return form.$el;\n    },\n\n    /** Make ajax request */\n    submit: function(form_data, url) {\n        var self = this;\n        // Some required metadata\n        $.ajax({\n            type: \"POST\",\n            url: url,\n            data: form_data,\n            success: function(response) {\n                // Clear out the div\n                self.$el.empty().append(self._templateHeader());\n                // And display the messages.\n                response.messages.forEach(function(message) {\n                    self.display_message(\n                        {\n                            status: message[1],\n                            message: message[0],\n                            persistent: true\n                        },\n                        self.$(\".response-message\"),\n                        true,\n                        true\n                    );\n                });\n            },\n            error: function(response) {\n                var error_response = {\n                    status: \"error\",\n                    message:\n                        \"Error occured while saving. Please fill all the required fields and try again.\",\n                    persistent: true,\n                    cls: \"errormessage\"\n                };\n                self.display_message(\n                    error_response,\n                    self.$(\".response-message\")\n                );\n            }\n        });\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/dataset-error.js","/** Dataset edit attributes view */\nimport Utils from \"utils/utils\";\nimport Tabs from \"mvc/ui/ui-tabs\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nvar View = Backbone.View.extend({\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.model = new Backbone.Model({\n            dataset_id: Galaxy.params.dataset_id\n        });\n        this.message = new Ui.Message({ persistent: true });\n        this.tabs = this._createTabs();\n        this.$el\n            .append($(\"<h4/>\").append(\"Edit dataset attributes\"))\n            .append(this.message.$el)\n            .append(\"<p/>\")\n            .append(this.tabs.$el)\n            .hide();\n        this.render();\n    },\n\n    /** fetch data for the selected dataset and build forms */\n    render: function() {\n        var self = this;\n        $.ajax({\n            url:\n                Galaxy.root +\n                \"dataset/get_edit?dataset_id=\" +\n                self.model.get(\"dataset_id\"),\n            success: function(response) {\n                !self.initial_message && self.message.update(response);\n                self.initial_message = true;\n                _.each(self.forms, function(form, key) {\n                    form.model.set(\"inputs\", response[key + \"_inputs\"]);\n                    form.model.set(\n                        \"hide_operations\",\n                        response[key + \"_disable\"]\n                    );\n                    form.render();\n                });\n                self.$el.show();\n            },\n            error: function(response) {\n                var err_msg =\n                    response.responseJSON && response.responseJSON.err_msg;\n                self.message.update({\n                    status: \"danger\",\n                    message:\n                        err_msg || \"Error occured while loading the dataset.\"\n                });\n            }\n        });\n    },\n\n    /** submit data to backend to update attributes */\n    _submit: function(operation, form) {\n        var self = this;\n        var data = form.data.create();\n        data.dataset_id = this.model.get(\"dataset_id\");\n        data.operation = operation;\n        $.ajax({\n            type: \"PUT\",\n            url: Galaxy.root + \"dataset/set_edit\",\n            data: data,\n            success: function(response) {\n                self.message.update(response);\n                self.render();\n                self._reloadHistory();\n            },\n            error: function(response) {\n                var err_msg =\n                    response.responseJSON && response.responseJSON.err_msg;\n                self.message.update({\n                    status: \"danger\",\n                    message:\n                        err_msg ||\n                        \"Error occured while editing the dataset attributes.\"\n                });\n            }\n        });\n    },\n\n    /** create tabs for different dataset attribute categories*/\n    _createTabs: function() {\n        this.forms = {\n            attribute: this._getAttribute(),\n            conversion: this._getConversion(),\n            datatype: this._getDatatype(),\n            permission: this._getPermission()\n        };\n        var tabs = new Tabs.View();\n        tabs.add({\n            id: \"attribute\",\n            title: \"Attributes\",\n            icon: \"fa fa-bars\",\n            tooltip: \"Edit dataset attributes\",\n            $el: this.forms.attribute.$el\n        });\n        tabs.add({\n            id: \"convert\",\n            title: \"Convert\",\n            icon: \"fa-gear\",\n            tooltip: \"Convert to new format\",\n            $el: this.forms.conversion.$el\n        });\n        tabs.add({\n            id: \"datatype\",\n            title: \"Datatypes\",\n            icon: \"fa-database\",\n            tooltip: \"Change data type\",\n            $el: this.forms.datatype.$el\n        });\n        tabs.add({\n            id: \"permissions\",\n            title: \"Permissions\",\n            icon: \"fa-user\",\n            tooltip: \"Permissions\",\n            $el: this.forms.permission.$el\n        });\n        return tabs;\n    },\n\n    /** edit main attributes form */\n    _getAttribute: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Edit attributes\",\n            operations: {\n                submit_attributes: new Ui.ButtonIcon({\n                    tooltip: \"Save attributes of the dataset.\",\n                    icon: \"fa-floppy-o\",\n                    title: \"Save\",\n                    onclick: function() {\n                        self._submit(\"attributes\", form);\n                    }\n                }),\n                submit_autodetect: new Ui.ButtonIcon({\n                    tooltip:\n                        \"This will inspect the dataset and attempt to correct the values of fields if they are not accurate.\",\n                    icon: \"fa-undo\",\n                    title: \"Auto-detect\",\n                    onclick: function() {\n                        self._submit(\"autodetect\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** datatype conversion form */\n    _getConversion: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Convert to new format\",\n            operations: {\n                submit_conversion: new Ui.ButtonIcon({\n                    tooltip: \"Convert the datatype to a new format.\",\n                    title: \"Convert datatype\",\n                    icon: \"fa-exchange\",\n                    onclick: function() {\n                        self._submit(\"conversion\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** change datatype form */\n    _getDatatype: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Change datatype\",\n            operations: {\n                submit_datatype: new Ui.ButtonIcon({\n                    tooltip: \"Change the datatype to a new type.\",\n                    title: \"Change datatype\",\n                    icon: \"fa-exchange\",\n                    onclick: function() {\n                        self._submit(\"datatype\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** dataset permissions form */\n    _getPermission: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Manage dataset permissions\",\n            operations: {\n                submit_permission: new Ui.ButtonIcon({\n                    tooltip: \"Save permissions.\",\n                    title: \"Save permissions\",\n                    icon: \"fa-floppy-o \",\n                    onclick: function() {\n                        self._submit(\"permission\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** reload Galaxy's history after updating dataset's attributes */\n    _reloadHistory: function() {\n        if (window.Galaxy) {\n            window.Galaxy.currHistoryPanel.loadCurrentHistory();\n        }\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/dataset-edit-attributes.js"],"sourceRoot":""}