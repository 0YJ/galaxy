{"version":3,"sources":["webpack:///analysis.bundled.js","webpack:///./galaxy/scripts/mvc/base-mvc.js","webpack:///./galaxy/scripts/mvc/dataset/data.js","webpack:///./galaxy/scripts/viz/visualization.js","webpack:///./galaxy/scripts/viz/trackster/util.js","webpack:///./galaxy/scripts/utils/config.js","webpack:///./galaxy/scripts/mvc/grid/grid-view.js","webpack:///./galaxy/scripts/mvc/webhooks.js","webpack:///./galaxy/scripts/mvc/ui/ui-frames.js","webpack:///./galaxy/scripts/mvc/ui/icon-button.js","webpack:///./galaxy/scripts/utils/add-logging.js","webpack:///./galaxy/scripts/mvc/ui/popup-menu.js","webpack:///./galaxy/scripts/mvc/ui/ui-tabs.js","webpack:///./galaxy/scripts/mvc/user/user-model.js","webpack:///./galaxy/scripts/mvc/tool/tools.js","webpack:///./galaxy/scripts/mvc/tool/tool-form.js","webpack:///./galaxy/scripts/layout/masthead.js","webpack:///./galaxy/scripts/layout/menu.js","webpack:///./galaxy/scripts/layout/generic-nav-view.js","webpack:///./galaxy/scripts/layout/scratchbook.js","webpack:///./galaxy/scripts/mvc/grid/grid-model.js","webpack:///./galaxy/scripts/mvc/grid/grid-template.js","webpack:///./galaxy/scripts/viz/trackster.js","webpack:///./galaxy/scripts/viz/trackster/tracks.js","webpack:///./galaxy/scripts/viz/viz_views.js","webpack:///./galaxy/scripts/viz/trackster/slotting.js","webpack:///./galaxy/scripts/viz/trackster/painters.js","webpack:///./galaxy/scripts/viz/trackster/filters.js","webpack:///./galaxy/scripts/viz/bbi-data-manager.js","webpack:///./galaxy/scripts/libs/bbi/bigwig.js","webpack:///./galaxy/scripts/libs/bbi/spans.js","webpack:///./galaxy/scripts/libs/bbi/jszlib.js","webpack:///./galaxy/scripts/libs/bbi/jquery-ajax-native.js","webpack:///./galaxy/scripts/mvc/user/user-quotameter.js","webpack:///./galaxy/scripts/mvc/ui/ui-popover.js","webpack:///./galaxy/scripts/mvc/dataset/states.js","webpack:///./galaxy/scripts/mvc/ui/ui-select.js","webpack:///./galaxy/scripts/ui/fa-icon-button.js","webpack:///./galaxy/scripts/galaxy.js","webpack:///./galaxy/scripts/utils/metrics-logger.js","webpack:///./galaxy/scripts/layout/page.js","webpack:///./galaxy/scripts/mvc/upload/upload-model.js","webpack:///./galaxy/scripts/mvc/tag.js","webpack:///./galaxy/scripts/layout/router.js","webpack:///./galaxy/scripts/mvc/upload/upload-settings.js","webpack:///./galaxy/scripts/mvc/upload/upload-ftp.js","webpack:///./galaxy/scripts/mvc/upload/upload-extension.js","webpack:///./galaxy/scripts/utils/uploadbox.js","webpack:///./galaxy/scripts/mvc/collection/list-collection-creator.js","webpack:///./galaxy/scripts/mvc/history/hdca-model.js","webpack:///./galaxy/scripts/mvc/collection/collection-model.js","webpack:///./galaxy/scripts/mvc/workflow/workflow-icons.js","webpack:///./galaxy/scripts/mvc/history/history-model.js","webpack:///./galaxy/scripts/mvc/history/history-contents.js","webpack:///./galaxy/scripts/mvc/history/history-preferences.js","webpack:///./galaxy/scripts/mvc/list/list-item.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-li.js","webpack:///./galaxy/scripts/mvc/collection/collection-li.js","webpack:///./galaxy/scripts/mvc/form/form-wrapper.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-model.js","webpack:///./galaxy/scripts/mvc/history/history-content-model.js","webpack:///./galaxy/scripts/mvc/collection/base-creator.js","webpack:///./galaxy/scripts/utils/natural-sort.js","webpack:///./galaxy/scripts/ui/hoverhighlight.js","webpack:///./galaxy/scripts/mvc/tool/tool-form-composite.js","webpack:///./galaxy/scripts/mvc/history/copy-dialog.js","webpack:///./galaxy/scripts/mvc/ui/error-modal.js","webpack:///./galaxy/scripts/mvc/base/controlled-fetch-collection.js","webpack:///./galaxy/scripts/mvc/history/hda-model.js","webpack:///./galaxy/scripts/mvc/list/list-view.js","webpack:///./galaxy/scripts/ui/search-input.js","webpack:///./galaxy/scripts/mvc/history/hda-li.js","webpack:///./galaxy/scripts/mvc/history/hdca-li.js","webpack:///./galaxy/scripts/mvc/collection/collection-view.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-li-edit.js","webpack:///./galaxy/scripts/mvc/annotation.js","webpack:///./galaxy/scripts/apps/analysis.js","webpack:///./galaxy/scripts/apps/panels/tool-panel.js","webpack:///./galaxy/scripts/mvc/upload/upload-view.js","webpack:///./galaxy/scripts/mvc/upload/upload-button.js","webpack:///./galaxy/scripts/mvc/upload/default/default-view.js","webpack:///./galaxy/scripts/mvc/upload/default/default-row.js","webpack:///./galaxy/scripts/mvc/lazy/lazy-limited.js","webpack:///./galaxy/scripts/mvc/upload/composite/composite-view.js","webpack:///./galaxy/scripts/mvc/upload/composite/composite-row.js","webpack:///./galaxy/scripts/mvc/upload/collection/collection-view.js","webpack:///./galaxy/scripts/mvc/upload/collection/collection-row.js","webpack:///./galaxy/scripts/apps/panels/history-panel.js","webpack:///./galaxy/scripts/mvc/history/options-menu.js","webpack:///./galaxy/scripts/mvc/history/history-view-edit-current.js","webpack:///./galaxy/scripts/utils/ajax-queue.js","webpack:///./galaxy/scripts/mvc/history/history-view-edit.js","webpack:///./galaxy/scripts/mvc/history/history-view.js","webpack:///./galaxy/scripts/ui/loading-indicator.js","webpack:///./galaxy/scripts/mvc/history/hda-li-edit.js","webpack:///./galaxy/scripts/mvc/history/hdca-li-edit.js","webpack:///./galaxy/scripts/mvc/collection/collection-view-edit.js","webpack:///./galaxy/scripts/mvc/collection/collection-li-edit.js","webpack:///./galaxy/scripts/mvc/collection/pair-collection-creator.js","webpack:///./galaxy/scripts/mvc/collection/list-of-pairs-collection-creator.js","webpack:///./galaxy/scripts/utils/levenshtein.js","webpack:///./galaxy/scripts/mvc/user/user-preferences.js","webpack:///./galaxy/scripts/mvc/user/user-custom-builds.js","webpack:///./galaxy/scripts/mvc/grid/grid-shared.js","webpack:///./galaxy/scripts/mvc/workflow/workflow.js","webpack:///./galaxy/scripts/mvc/workflow/workflow-model.js","webpack:///./galaxy/scripts/mvc/history/history-list.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-error.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-edit-attributes.js"],"names":["webpackJsonp","module","exports","__webpack_require__","jQuery","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","call","mixin","mixinHash1","propsHash","args","Array","slice","arguments","lastArg","pop","unshift","_","defaults","apply","wrapTemplate","template","jsonNamespace","templateFn","join","json","view","templateVars","_l","buildComparator","attribute_name","options","ascending","a","b","get","defineProperty","value","_underscore","_backbone","Backbone","_addLogging","_addLogging2","_localization","_localization2","LoggableMixin","logger","_logNamespace","SessionStorageModel","Model","extend","initialize","initialAttrs","this","_checkEnabledSessionStorage","id","Error","existing","isNew","_read","clear","silent","save","on","window","sessionStorage","length","err","alert","sync","method","model","trigger","returned","_create","_update","_delete","undefined","success","error","toJSON","set","setItem","JSON","stringify","DOMException","navigator","userAgent","indexOf","parse","getItem","removeItem","_log","toString","omit","SearchableModelMixin","searchAttributes","searchAliases","searchAttribute","attrKey","searchFor","attrVal","isArray","_searchArrayAttribute","toLowerCase","array","any","elem","search","filter","matches","term","split","matchesAll","terms","match","s","all","replace","HiddenUntilActivatedViewMixin","hiddenUntilActivated","$activator","HUAVOptions","$elementShown","$el","showFn","toggle","showSpeed","hasBeenShown","is","hidden","isHidden","ev","isFunction","onshowFirstTime","onshow","onhide","DraggableViewMixin","attributes","draggable","$dragHandle","$","toggleDraggable","draggableOff","draggableOn","dragStartHandler","bind","_dragStartHandler","dragEndHandler","_dragEndHandler","handle","attr","addEventListener","removeEventListener","event","dataTransfer","effectAllowed","setData","SelectableViewMixin","selectable","selected","$selector","_renderSelected","find","toggleClass","toggleSelector","hideSelector","showSelector","speed","fxSpeed","show","hide","toggleSelect","deselect","select","_uiModal","_uiFrames","_iconButton","_iconButton2","DatasetMetadata","Dataset","type","name","hda_ldda","metadata","_set_metadata","each","keys","k","new_key","get_metadata","attribute","urlRoot","Galaxy","root","TabularDataset","chunk_url","first_data_chunk","offset","at_eof","url_viz","get_next_chunk","self","next_chunk","Deferred","getJSON","chunk","rval","ck_data","resolve","DatasetCollection","Collection","TabularDatasetChunkedView","View","row_count","loading_chunk","TabularButtonTracksterView","expand_to_container","height","scroll_elt","attempt_to_fetch","func","scrolled_to_bottom","loading_indicator","when","then","result","_renderChunk","render","append","data_table","cellpadding","column_names","header_container","appendTo","header_row","j","first_chunk","scroll","_renderCell","cell_contents","index","colspan","$cell","text","column_types","addClass","_renderRow","line","cells","row","num_columns","range","TopLevelTabularDatasetChunkedView","parents","p","css","scrollTop","EmbeddedTabularDatasetChunkedView","position","overflow","innerHeight","el","scrollHeight","col","chrom","start","end","dataset_id","genome_build","file_ext","parent","modal","frame","console","log","str","btn_viz","IconButtonView","IconButton","title","icon_class","setElement","events","mouseover tr","mouseleave","e","target","children","eq","html","n","isNaN","parseFloat","isFinite","btn_viz_pars","gene_region","left","top","off","click","add","url","param","createTabularDatasetChunkedView","dataset_config","parent_elt","embedded","_data","_data2","_util","_util2","_config","_config2","_gridView","_gridView2","_uiTabs","_uiTabs2","_uiMisc","CustomToJSON","constructor","to_json_keys","val","to_json_mappers","select_datasets","filters","success_fn","history_grid","url_base","dict_format","library_grid","tabs","body","closing_events","buttons","Cancel","Add","requests","ajax","dataType","data","data_type","current","track_defs","map","arg","CanvasManager","default_font","dummy_canvas","new_canvas","dummy_context","getContext","font","char_width_px","measureText","width","patterns","load_pattern","path","image","Image","src","onload","createPattern","get_pattern","canvas","manager","Cache","num_elements","obj_cache","key_ary","get_elt","key_str","stale","splice","move_key_to_end","set_elt","shift","push","size","most_recently_added","GenomeDataManager","dataset","genome","init_data","min_region_size","filters_manager","data_mode_compatible","entry","mode","can_subset","initial_entries","add_data","entries","set_data","region","data_is_ready","ready_deferred","query_type","ss_deferred","ServerStateDeferred","ajax_settings","interval","response","go","search_features","query","params","load_data","resolution","extra_params","low","high","filter_names","i","filter_cols","get_data","is_deferred","entry_region","is_subregion","contains","subset_entry","copy","last_request","trim","DEEP_DATA_REQ","BROAD_DATA_REQ","get_more_data","req_type","cur_data","_mark_stale","query_low","start_val","max_high","query_region","data_manager","new_data_request","new_data_available","concat","max_low","message","can_get_more_detailed_data","dataset_type","get_more_detailed_data","detail_multiplier","num_samples","get_genome_wide_data","all_data_available","gw_data","chrom_info","chrom_data","GenomeRegion","len","deferred","genome_wide_data","subregion","subset_fns","bigwig","data_point","refseq","seq_start","subregion_data","same","GenomeReferenceDataManager","dataset_placeholder","data_url","Genome","chroms_info","dbkey","get_chroms_info","get_chrom_region","chr_name","get_chrom_len","str_val","from_str","pieces","start_end","parseInt","compute_overlap","a_region","first_chrom","second_chrom","first_start","second_start","first_end","second_end","overlap_results","DIF_CHROMS","BEFORE","OVERLAP_START","CONTAINS","AFTER","CONTAINED_BY","OVERLAP_END","chrom_len","overlaps","intersection","GenomeRegionCollection","BrowserBookmark","note","BrowserBookmarkCollection","BackboneTrack","models","default_value","label","ConfigSettingCollection","from_models_and_saved_values","prefs","preloaded_data","color","d","BackboneTrackCollection","Visualization","vis_json","GenomeVisualization","drawables","bookmarks","viewport","tracks","unset","add_tracks","dummy","obj_type","content_visible","TrackBrowserRouter","Router","route","new_loc","navigate","change_location","go_to","commatize","number","rgx","test","_go","setTimeout","get_random_color","colors","new_color","nr","ng","nb","other_color","or","og","ob","n_brightness","o_brightness","diff","brightness","r","g","ok","num_tries","Math","round","random","r1","g1","b1","r2","g2","b2","max","min","abs","substr","ConfigSetting","set_value","to_key_value_dict","setting","get_value","set_default_value","saved_values","m","ConfigSettingCollectionView","className","container","collection","option","container_div","input","removeClass","tip","siblings","stopPropagation","document","unbind","new_color_icon","tooltip","tip_inner","farb_obj","farbtastic","callback","fixed_farb_obj","setColor","help","render_in_modal","cancel_fn","ok_fn","update_from_form","check_enter_esc","keyCode","which","OK","_utils","_utils2","_gridModel","_gridModel2","_gridTemplate","_gridTemplate2","_popupMenu","_popupMenu2","ajaxSettings","traditional","grid","grid_config","add_tag_to_grid_filter","tag_name","tag_value","tag","slideToggle","add_filter_condition","items","url_data","v","init_grid","use_panels","padding","handle_refresh","refresh_frames","inArray","currHistoryPanel","loadCurrentHistory","allow_title_display","setWindowTitle","header","footer","use_hide_message","init_grid_elements","init_grid_controls","init_refresh_on_change","submit_operation","keyup","set_sort_condition","submit","column_key","text_input_obj","text_input","remove","remove_filter_condition","set_categorical_filter","check_all_items","checkboxes","check_count","update_checked","change","rating","set_page","execute","href","item","button","popup","operation","_add_operation","settings","operation_config","allowed","allow_popup","addItem","url_args","confirmation_text","confirm","preventDefault","onclick","encode_id","findItemByHtml","add_filter","t","filter_element","go_page_one","remove_filter","col_key","cur_sort","new_sort","substring","sort_arrow","new_value","category_filter","cur_value","filter_value","empty","new_page","page_num","cur_page","operation_button","operation_name","findWhere","operations","item_ids","check","state","prop","c","href_parts","href_parms_str","href_parms","location","get_url_data","can_async_op","update_grid","async","advanced_search","response_text","insert","parseJSON","complete","WebhookModel","activate","Webhooks","WebhookView","me","toolId","toolVersion","fetch","webhook","styles","script","webhooks","FrameView","placement","$header","$title","$content","listenTo","menu","$option","icon","disabled","content","defaultOptions","cols","rows","cell","margin","top_min","frame_max","visible","top_max","frame_z","frame_counter","frame_uid","frame_list","frame_shadow","_frameInit","_frameResize","_panelRefresh","resize","Close","frame_id","_toPixelCoord","_frameInsert","del","$frame","fadeOut","_panelAnimationComplete","fadeIn","mousemove","mouseup","mousewheel","DOMMouseScroll","mousedown .frame","mousedown .frame-background","mousedown .frame-scroll-up","mousedown .frame-scroll-down","mousedown .f-close","_eventFrameMouseDown","hasClass","_frameIdentify","xy","x","originalEvent","pageX","y","pageY","_frameDragStart","_eventFrameMouseMove","event_xy_new","event_xy_delta","_frameScreen","min_dim","_toGridCoord","_frameOffset","l","_eventFrameMouseUp","_frameDragStop","_eventFrameClose","_eventHide","_eventPanelScroll","srcElement","_panelScroll","detail","wheelDelta","_eventPanelScroll_up","_eventPanelScroll_down","closest","_frameFocus","_frameGrid","grid_location","px","sign","_toGrid","_toPixel","_isCollision","_locationRank","loc","animate","promise","done","delta","top_new","screen_location","grid_rank","place_list","f","sort","place","_framePlace","has_focus","on_click","menu_options","is_menu_button","enabled","tooltip_config","new_elem","replaceWith","buffer","IconButtonCollection","IconButtonMenuView","tagName","elt","make_popupmenu","create_icon_buttons_menu","config","global_config","button_config","addLogging","namespace","addTo","LOGGING_FNS","forEach","logFn","emit","PopupMenu","$button","_renderAndShow","clickEvent","_getShownPosition","_setUpCloseBehavior","li","_templateOptions","divider","checked","menuWidth","scrollLeft","closePopup","contents","one","findIndexByHtml","has","create","button_element","initial_options","convertedOptions","optionVal","optionKey","newOption","convertLinksToOptions","$parent","selector","$link","linkHref","linkTarget","confirmText","fromExistingDom","$buttonElement","$menuElement","menuElementLinkSelector","make_popup_menus","menuSelector","buttonSelectorBuildFn","popupMenusCreated","fromDom","onchange","_template","$nav","_add","_remove","_change","_reset","first","delAll","reset","showTab","hideTab","tab_model","_template_tab","$tmpl","$href","_baseMvc","_baseMvc2","User","username","email","total_disk_usage","nice_total_disk_usage","quota_percent","is_admin","resp","changes","isAnonymous","isAdmin","loadFromApi","idOrCurrent","CURRENT_ID_STR","userFn","newModel","clearSessionStorage","userInfo","getCurrentUserFromApi","currentUser","_toolForm","VisibilityMixin","is_visible","ToolParameter","unescape","ToolParameterCollection","DataToolParameter","IntegerToolParameter","get_samples","d3","scale","linear","domain","ticks","FloatToolParameter","SelectToolParameter","subModelTypes","integer","float","Tool","description","inputs","outputs","remove_inputs","types","tool","incompatible_inputs","only_samplable_inputs","valid_inputs","apply_search_results","results","set_input_value","set_input_values","inputs_dict","input_name","run","_run","rerun","target_dataset","regions","action","target_dataset_id","get_inputs_dict","input_dict","additional_params","payload","tool_id","run_deferred","contentType","ToolCollection","ToolSectionLabel","ToolSection","elems","open","clear_search_results","cur_label","all_hidden","ToolSearch","search_hint_string","min_chars_for_search","clear_btn_url","clear_key","do_search","q","timer","clearTimeout","ga","clear_search","ToolPanel","tool_search","tools","layout","parse_elt","elt_dict","model_class","panel_elt","BaseView","update_visible","ToolLinkView","templates","tool_link","formStyle","upload","router","version","ToolSectionLabelView","ToolSectionView","update_open","panel_section","section_body","tool_view","label_view","click .toolSectionTitle > a","slideDown","slideUp","ToolSearchView","keyup :input","change :input","click #search-clear-btn","focus_and_select","focus","query_changed","evData","ToolPanelView","handle_search_results","search_view","section_title_view","ToolFormView","tool_form","tool_panel_view","tool_form_view","show_tool","variable","_uiMisc2","_uiModal2","_toolFormBase","_toolFormBase2","_webhooks","_webhooks2","form","merge","listen_to_history","always_refresh","buildmodel","process","build_url","build_data","job_id","display","_customize","debug","status","error_message","err_msg","redirect","prepend","Message","persistent","large","reject","postchange","current_state","tool_version","wait","request","update","execute_button","Button","cls","wait_cls","portlet","disable","unwait","enable","job_remap","ignore","job_def","validate","$f","enctype","_templateSuccess","jobs","refreshContents","input_found","err_data","error_messages","matchResponse","input_id","highlight","_templateError","job_inputs","batch_n","batch_src","job_input_id","input_value","input_field","field_list","input_def","input_list","optional","batch","values","njobs","njobs_text","$message","output","hid","_menu","_menu2","_scratchbook","_scratchbook2","_userQuotameter","_userQuotameter2","$navbarBrandLink","$navbarBrandImage","$navbarBrandTitle","$navbarTabs","$quoteMeter","Tab","quotaMeter","UserQuotaMeter","user","$download_link","brand","logo_url","logo_src","_genericNavView","_genericNavView2","extendedNavItem","GenericNavView","ready","function","Function","page","masthead","appendScriptStyle","helpTab","support_url","search_url","mailing_lists","screencasts_url","wiki_url","citation_url","terms_url","biostar_url","biostar_url_redirect","userTab","session_csrf_token","allow_user_creation","noscratchbook","activeView","active_view","$dropdown","$toggle","$menu","$note","click .dropdown-toggle","visibility","_formatUrl","menuItem","_buildMenuItem","_toggleClick","buildLink","popover","charAt","makeModalIframe","host","communication_server_host","port","communication_server_port","escape","persistent_communication_rooms","query_string","$el_chat_modal_header","$el_chat_modal_body","iframe_template","title_separator","removeAttr","frame_width","frame_height","_uiFrames2","_visualization","_visualization2","_trackster","_trackster2","frames","buttonActive","active","show_note","note_cls","onbeforeunload","buttonLoad","history_cache","addDataset","current_dataset","history_id","historyId","dataset_ids","_findDataset","history_details","dataset_list","pos","_loadDatasetOffset","new_dataset_id","_loadDataset","new_dataset","is_tabular","addTrackster","viz_id","viz","ui","TracksterUI","frame_config","view_config","stand_alone","latest_revision","create_visualization","$galaxy_main","async_ops","categorical_filters","sort_key","show_item_checkboxes","num_pages","op","new_val","cur_val","condition","condition_index","pairs","get_url","tmpl","grid_header","grid_table","info_text","global_actions","show_popup","grid_filters","columns","column","extra","num_rows_rendered","encoded_id","current_item_id","nowrap","column_settings","column_config","link","attach_popup","label_id_prefix","use_paging","num_page_links","cur_page_num","page_link_range","min_page","min_offset","max_offset","max_range","max_page","page_index","allow_multiple","found_global","global_operation","legend","default_filter_dict","advanced_search_display","show_advanced_search_link","filterable","f_key","d_key","standard_search_display","grid_column_filter","column_label","is_text","temp_column","column_filter","seperator","cf_label","cf","cf_key","cf_arg","filter_key","sanitize","_tracks","_tracks2","_queryStringParsing","_queryStringParsing2","Base","baseURL","cssLoadFile","save_viz","annotation","overview_track_name","overview_drawable","viz_config","to_dict","overview","vis_id","vis_info","has_changes","history","pushState","hash","createButtonMenu","new_tracks","track","add_drawable","object_from_template","DrawableGroup","force_right_panel","handle_unsaved_changes","buttonMenu","add_bookmark","editable","bookmarks_container","new_bookmark","position_div","annotation_div","delete_icon_container","prependTo","make_text_editable","num_rows","use_textarea","help_text","viewport_config","drawables_config","bookmarks_config","TracksterView","editor","load_chroms_deferred","overview_drawable_name","change_chrom","set_overview","bookmark","set_up_router","init_keyboard_nav","move_fraction","viewport_container","Leave without Saving","Save","resize_window","galaxy_config","app","view_existing","choose_existing_or_new","view_new","listTracksParams","dataset_params","View in saved visualization","view_in_saved","View in new visualization","tracks_grid","Add to visualization","init_editor","template_view_new","Create","create_browser","dbkeys_in_genomes","default_dbkey","select2","add_dataset","track_data","GalaxyApp","num","places","pow","supportsByteRanges","beforeSend","xhr","setRequestHeader","_viz_views","_viz_views2","_slotting","_slotting2","_painters","_painters2","_filters","_filters2","_tools","_tools2","_bbiDataManager","_bbiDataManager2","html_elt_js_obj_dict","is_container","element","moveable","handle_class","container_selector","element_js_obj","relative","child","bottom","this_obj","outerHeight","cur_container","offsetY","insertBefore","remove_drawable","add_drawable_before","insertAfter","move_drawable","deltaY","DATA_NOCONVERTER","CONTINUOUS_DATA_MODES","Drawable","obj_dict","id_counter","drag_handle_class","is_overview","action_icons","config_params","config_onchange","build_container_div","header_div","header_view","TrackHeaderView","icons_div","hover","action_icons_def","css_class","on_click_fn","drawable","toggle_icon","hide_contents","show_contents","init","changed","can_draw","request_draw","_draw","set_name","new_name","old_name","revert_name","update_intro_div","update_icons","get_drawables","DrawableCollection","unpack_drawables","drawables_array","dictified_drawables","other","replace_drawable","old_drawable","new_drawable","update_html","new_position","get_tracks","track_type","queue","content_div","FiltersManager","after","parent_div","saved_filters_managers","old_manager","setup_multitrack_filtering","group","show_composite_track","clear_filters","_restore_filter_managers","clear_tile_cache","tiles_div","num_drawables","composite_icon","filters_icon","CompositeTrack","a_type","get_type","num_feature_tracks","can_composite","FeatureTrack","LineTrack","shared_filters","remove_all","new_filter","filter_name","NumberFilter","init_filters","composite_track","label_tracks","tracks_to_be_redrawn","zoom_factor","min_separation","canvas_manager","ownerDocument","requested_redraw","parent_element","top_container","browser_content_div","bottom_container","top_labeltrack","intro_div","nav_container","nav","overview_viewport","overview_close","overview_highlight","overview_box_background","overview_box","default_overview_height","nav_controls","chrom_select","submit_nav","location_span","nav_input","autocomplete","source","all_features","feature_search_deferreds","dataset_features","feature","minLength","hidden_input","zo_link","zoom_out","zi_link","zoom_in","load_chroms","current_x","offsetX","delta_chrom","move_delta","reset_overview","clientX","original_low","current_height","clientY","new_scroll","proxy","startX","span","update_location","old_low","request_redraw","add_label_track","LabelTrack","resize_timer","redraw","get_base_color","base","trigger_navigate","new_chrom","new_low","new_high","delay","url_parms","reference","ref_track","ReferenceTrack","reference_track","chrom_option","prev_chroms","next_chroms","chrom_start_index","start_index","found","grep","chrom_pos","fraction","current_chrom_span","data_fetch","redraw_on_move_fn","label_track","track_list","track_options","to","requestAnimationFrame","_redraw","floor","ceil","resolution_px_b","left_px","width_px","point","cur_center","new_half","resize_viewport","postdraw_actions","TracksterTool","tool_state","state_dict","ToolParameterView","param_div","update_value","update_event","TracksterToolView","set_visible","keydown","param_view","run_tool_row","run_on_dataset_button","run_on_region","run_on_dataset","update_params","url_params","current_track","track_name","tool_region_and_parameters_str","new_track","init_for_tool_data","change_mode","set_filters_manager","set_dataset","success_callback","FilterScaler","default_val","Scaler","gen_val","feature_data","Number","MAX_VALUE","Tile","w_scale","html_elt","predisplay_actions","LineTrackTile","FeatureTrackTile","all_slotted","feature_mapper","incomplete_features","seq_data","has_icons","other_tiles_features_drawn","Track","dataset_check_type","data_url_extra_params","data_query_wait","data_and_mode_compatible","min_height_px","max_height_px","visible_height_px","add_resize_handle","regions_to_use","view_region","bookmarked_regions","No","Yes","on_resize","in_handle","in_drag","drag_control","original_height","new_height","tile_cache","ReadTrack","VariantTrack","show_message","msg_html","retry","init_deferred","kind","valid_chroms","predraw_init","msg_elt","stats","min_value","max_value","mean","sd","TiledTrack","filters_available","left_offset","dynamic_tool_div","overlay_div","slotters","max_rows","set_min_max","new_mode","mode_icon","tools_icon","param_space_viz_icon","_gen_tile_cache_key","tile_region","before_draw","clear_after","tile_promise","tile_width","tile_index","tile_promises","tiles","draw_helper","tile","_add_yaxis_label","on_change","pref_name","num_cols","on_finish","force","get_mode","update_auto_mode","display_mode","_get_drawables","o","show_tile","get_tile_data","data_mode","tile_data","tile_drawn","tracks_data","drawing_modes","drawing_heights","get_canvas_height","tile_low","tile_high","ctx","translate","globalAlpha","globalCompositeOperation","draw_tile","canvas_width","_draw_line_track_tile","LinePainter","draw","ref_seq","tile_element","track_height","extra_info","tickDistance","new_div","screenPosition","display_modes","build_config_params","union","show_group","visible_height","init_deferreds","update_all_min_max","max_height","new_visible","cur_visible","subset","textAlign","str_len","fillStyle","fillText","BBIDataManager","DiagonalHeatmapTrack","DiagonalHeatmapPainter","summary_draw_height","start_end_dct","set_painter_from_config","painter","ArcLinkedFeaturePainter","LinkedFeaturePainter","all_incomplete_features","pluck","inc_features","tile_incomplete_features","features","new_canvas_ctx","drawImage","new_tile","update_ui_elt","example_feature","applies_to","show_more_rows_icon","incremental_slots","level","slotter","FeatureSlotter","slot_features","rows_required","dummy_painter","get_required_height","cur_tile","filtered","slots","hide_feature","flen","update_attrs","keep","filter_alpha_scaler","alpha_filter","filter_height_scaler","height_filter","draw_results","translation","VariantPainter","deferreds","line_track_tiles","sample_names","font_size","font-size","samples_div_html","line-height","ReadPainter","addable_objects","VcfTrack","drawable_type","update_name","render_action_icons","dblclick","icon_dict","add_action_icon","set_display_modes","new_modes","init_mode","mode_mapping","SlottedInfo","slot","include_label","_get_draw_coords","draw_start","draw_end","f_name","text_len","_find_slot","draw_coords","slot_num","has_overlap","k_len","s_e","feature_uid","undone","highest_slot","slotted_info","old_draw_coords","new_draw_coords","slotted_coords","dc","first_region","second_region","is_overlap","overlap","dashedLine","x1","y1","x2","y2","dashLen","dX","dY","dashes","sqrt","dashX","dashY","fillRect","drawDownwardEquilateralTriangle","down_vertex_x","down_vertex_y","side_len","beginPath","moveTo","lineTo","strokeStyle","fill","stroke","closePath","DrawResults","Painter","view_start","view_end","default_prefs","get_start_draw_pos","_chrom_pos_to_draw_pos","get_end_draw_pos","get_draw_pos","overflow_color","in_path","vertical_range","height_px","y_zero","x_scaled","delta_x_pxs","delta_x_px","painter_color","block_color","pref_color","pref_r","pref_g","pref_b","top_overflow","bot_overflow","saturation","new_r","new_g","new_b","overflow_x","restore","FeaturePositionMapper","slot_height","feature_positions","y_translation","map_feature_data","x_start","x_end","get_feature_data","feature_dict","FeaturePainter","alpha_scaler","height_scaler","max_label_length","connector_color","required_height","get_row_height","y_scale","get_top_padding","x_draw_coords","feature_start","feature_end","draw_element","draw_background_connector","draw_individual_connectors","y_start","feature_name","feature_strand","f_start","f_end","thick_start","thick_end","reverse_strand_color","label_color","feature_ts","feature_te","feature_blocks","full_height","thin_height","thick_height","cur_y_start","cur_height","SQUISH_FEATURE_HEIGHT","last_block_start","last_block_end","block","block_start","block_end","block_thick_start","block_thick_end","draw_connector","hscale_factor","ws_height","base_color_fn","show_insertions","_parse_cigar","cigar_str","cigar_ops","blocks","cur_block","base_pos","parsed_cigar","op_len","op_char","cigar","draw_read","strand","read_seq","get_draw_coord","sequence_coord","s_start","s_end","base_offset","seq_offset","gap","detail_block_color","pack_mode","draw_height","rect_y","paint_utils","ReadPainterUtils","drawing_blocks","draw_last","cig_id","cig","cig_op","cig_len","cur_seq","start_pos","show_differences","c_start","draw_deletion","insert_x_coord","seq","x_center","connector","b1_end","b2_start","line_height","longest_feature_length","calculate_longest_feature_length","view_range","block1_start","block1_end","block2_start","block2_end","radius","PI","arc","Color","rgb","alpha","eval","toCSS","toHSL","h","toARGB","mix","color2","weight","color1","w","w1","w2","LinearRamp","start_color","end_color","start_value","end_value","value_range","map_value","SplitRamp","middle_color","positive_ramp","negative_ramp","Infinity","pos_color","neg_color","s1","e1","s2","e2","invsqrt2","ramp","rotate","row_height","px_per_base","draw_details","delete_details_thickness","thickness","divider_height","summary_height","show_sample_data","locus_data","ref","alt","sample_gts","allele_counts","variant","draw_x_start","draw_y_start","genotype","get_indel_info","ref_len","alt_len","base_px","feature_height","draw_summary","flatten","alt_info","indel_info","allele_frac","snp","Filter","tool_exp_name","create_action_icon","slider","slider_label","filter_label","values_span","values_span_container","slider_div","control_element","step","get_slider_step","slide","input_size","multi_value","slider_row","blur","slider_min","slider_max","invalid","a_val","display_controls_div","transparency_icon","height_icon","_keep_val","to_filter","returnVal","updated","alpha_filter_name","height_filter_name","filters_dict","run_buttons_row","filter_manager","filter_dicts","tool_filter_conditions","get_or_create_dict_item","dict","new_item","active_filters","active_filters_list","run_filter","input_dataset_id","filter_tuple","tool_filters","tool_filter_str","cond","run_tool_url","_bigwig","makeBwg","bb","readWigData","prev","MIN_VALUE","score","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","spans","jszlib","DASFeature","DASGroup","readInt","ba","read","timeout","xhrObj","xhrFields","responseType","bwg_readOffset","M1","M2","M3","M4","BigWig","BigWigView","bwg","cirTreeOffset","cirTreeLength","isSummary","Uint8Array","sa","Int16Array","la","Int32Array","magic","BIG_WIG_MAGIC","BIG_BED_MAGIC","BIG_WIG_MAGIC_BE","BIG_BED_MAGIC_BE","numZoomLevels","chromTreeOffset","unzoomedDataOffset","unzoomedIndexOffset","fieldCount","definedFieldCount","asOffset","totalSummaryOffset","uncompressBufSize","extHeaderOffset","zoomLevels","zl","zlReduction","zlData","zlIndex","reduction","dataOffset","indexOffset","readChromTree","getAutoSQL","as","schema","BBIExtraIndex","bbi","field","Range","jszlib_inflate_buffer","inflateBuffer","arrayCopy","BED_COLOR_REGEXP","RegExp","thisB","chromsToIDs","idsToChroms","maxID","udo","bpt","keySize","bptReadNode","nodeType","cnt","childOffset","ki","charCode","String","fromCharCode","chromId","chrName","chr","readWigDataById","cirHeader","cirBlockSize","blocksToFetch","outstanding","Date","now","fmin","fmax","toks","cirFobRecur","instrument","cachedCirRoot","cirFobRecur2","fetchFeatures","maxCirBlockSpan","blockSpan","fetchRanges","ranges","fr","cirFobStartFetch","attempts","resultBuffer","cirBlockData","isLeaf","lo","startChrom","startBase","endChrom","endBase","blockOffset","blockSize","recurOffsets","b0","createFeature","opts","_chromId","segment","tramp","parseFeatures","fetchStart","fetchSize","bi","fb","tmp","fa","Float32Array","itemCount","byteLength","validCnt","maxVal","sumData","summaryOpts","maxScore","blockStart","itemStep","itemSpan","blockType","dfc","rest","ch","bedColumns","featureOpts","orientation","itemRgb","fields","thickStart","thickEnd","blockCount","blockSizes","blockStarts","exonFrames","grp","notes","groups","geneId","geneName","geneName2","gg","spanList","bmin","bmax","tsList","ts","codingRegion","tl","tlList","readingFrame","tlOffset","readframe","brf","readframeExplicit","getFirstAdjacent","dir","getFirstAdjacentById","blockToFetch","bestBlockChr","bestBlockOffset","chrx","bestFeature","bestChr","bestPos","fi","exec","bestRecur","getUnzoomedView","getZoomedView","unzoomedView","cirLen","z","zh","_tsFetch","zoom","topLevelReductionCache","feats","thresholdSearch","referencePoint","threshold","fbThresholdSearchRecur","candidates","c1","c2","chrOrd","candidate","rp","fromRef","initialChr","chrId","header_re","field_re","headerMatch","declType","comment","getExtraIndices","extraIndexCount","extraIndexListOffset","eil","indices","ii","eiType","eiFieldCount","eiOffset","eiField","lookup","nodeOffset","valSize","node","Uint16Array","Uint32Array","lastChildOffset","localeCompare","_min","_max","_Compound","sorted","_rangeOrder","merged","_ranges","s0","insertRange","r0","l0","l1","i0","i1","lapMin","lapMax","coverage","tot","rl","ri","rangeOrder","isContiguous","_pushRanges","lower_bound","lb","ub","rangeOver","ZStream","Inflate","was","InfBlocks","checkfn","hufts","MANY","IB_TYPE","table","blens","tb","codes","InfCodes","last","bitk","bitb","write","inftree","InfTree","inflate_trees_fixed","bl","bd","td","fixed_bl","fixed_bd","fixed_tl","fixed_td","Z_OK","srcOffset","dest","destOffset","count","arrayCopy_fast","hasSubarray","subarray","BYTES_PER_ELEMENT","byteOffset","arrayCopy_slow","afterUncOffset","inflateInit","DEF_WBITS","next_in","next_in_index","avail_in","oBlockList","totalSize","obuf","next_out","next_out_index","avail_out","inflate","Z_NO_FLUSH","Z_STREAM_END","Z_BUF_ERROR","msg","newob","out","cursor","inflate_mask","cplens","cplext","cpdist","cpdext","istate","inflateEnd","ret","inflateSync","inflateSetDictionary","dictionary","dictLength","inflateReset","total_in","total_out","free","wbits","marker","need","adler","proc","_adler","adler32","set_dictionary","mark","inflateSyncPoint","sync_point","INFBLOCKS_BORDER","inflate_flush","inflate_trees_bits","inflate_trees_dynamic","tl_index","td_index","lbits","dbits","ltree","ltree_index","dtree","dtree_index","tree","tindex","inflate_fast","tree_index","lit","dist","tp","tp_index","ml","md","tp_index_t_3","huft_build","bindex","hp","hn","mask","xp","u","initWorkArea","nl","nd","vsize","BMAX","testArray","__WEBPACK_AMD_DEFINE_FACTORY__","factory","responseFields","native","converters","support","xhrId","xhrSuccessStatus","0","1223","xhrCallbacks","xhrSupported","ActiveXObject","cors","ajaxTransport","crossDomain","send","headers","responses","password","mimeType","overrideMimeType","onerror","abort","statusText","getAllResponseHeaders","hasContent","getNative","warnAtPercent","errorAtPercent","isOverQuota","_render_quota","modelJson","percent","$meter","_templateQuotaMeter","$bar","_render_usage","usage","_templateUsage","meterHtml","optionsDefault","with_close","uid","$close","$body","_get_placement","newTitle","_get_width","$container","container_width","container_height","_get_height","container_position","STATES","UPLOAD","QUEUED","RUNNING","SETTING_METADATA","NEW","EMPTY","PAUSED","FAILED_METADATA","NOT_VIEWABLE","DISCARDED","ERROR","READY_STATES","NOT_READY_STATES","placeholder","multiple","minimumInputLength","initialData","select_data","_refresh","_setValue","before","_getValue","_getIndex","select_opt","containerCssClass","dropdownCssClass","escapeMarkup","formatResult","formatSelection","initSelection","dropdownAutoWidth","findIndex","_jquery","_jquery2","faIconButton","tooltipConfig","classes","faIcon","bootstrapped","_init","_userModel","_userModel2","_metricsLogger","_metricsLogger2","NAMESPACE_KEY","DEBUGGING_KEY","localDebugging","localStorage","storageErr","Events","_processOptions","_initConfig","_patchGalaxy","_initLogger","loggerOptions","_initLocale","localize","_initUser","_setUpListeners","patchExisting","patchWith","consoleLogger","consoleLevel","MetricsLogger","ALL","consoleNamespaceWhitelist","consoleFlattenMessages","userJSON","lastAjax","debugging","debuggingNamespaces","namespaces","csv","newSettings","userId","usefulToString","asStr","LoggingCache","_typeof","Symbol","iterator","LOG","DEBUG","INFO","WARN","METRIC","NONE","logLevel","defaultNamespace","clientPrefix","maxCacheSize","postSize","addTime","cacheKeyPrefix","postUrl","delayPostInMs","getPingData","onServerResponse","_parseLevel","_sending","_waiting","_postSize","_initCache","cache","maxSize","_emitToConsole","upper","toUpperCase","logArguments","_addToCache","_buildEntry","_postCache","time","toISOString","entriesLength","postData","metrics","post","always","fail","readyState","responseJSON","responseText","_delayPost","whitelist","info","warn","metric","_hasStorage","_initStorage","_cache","_fetchAndParse","overage","_unparseAndStore","removed","print","_masthead","_masthead2","_panel","_panel2","_panelids","message_box_visible","message_box_content","message_box_class","show_inactivity_warning","inactivity_box_content","center","CenterPanel","$messagebox","$inactivebox","panels","panel_id","panel_class_name","panel_class","panel_instance","SidePanel","renderMessageBox","renderInactivityBox","renderPanels","_checkCommunicationServerOnline","verificationLink","panel","preferences","$chat_icon_element","communication_server","extension","url_paste","file_name","file_mode","file_size","file_type","file_path","file_data","percentage","space_to_tab","to_posix_lines","TagsEditor","select_width","show_editor","usePrompt","workflow_mode","_workflowTemplate","_defaultTemplate","$input","tags","_getTagsUsed","_setUpBehaviors","_hashToName","startsWith","_nameToHash","_renderEditor","_renderTags","keydownHandler","hideEditor","showEditor","tagsToCSV","renderedArray","renderString","tagsArray","isEmpty","added","_addNewTagToTagsUsed","newTag","tagsUsed","stopListening","__identifer","isEmptyObject","queryObj","authenticate","access_denied","class_check","class_uncheck","parameters","$cover","$table","parameter","$checkbox","class_add","class_remove","class_partial","help_enabled","ftp_upload_site","onadd","onremove","$wait","$help","$number","$disk","$warning","$select","ftp_files","_index","_renderTable","ftp_file","bytesToString","_all","$it","_templateRow","$icon","model_index","ftp_index","_switch","new_index","counts","reduce","memo","ctime","_uiPopover","_uiPopover2","list","extension_popup","_templateDescription","description_url","props","uploadpost","cnf","progress","maxfilesize","error_filesize","error_default","error_server","error_login","FormData","sizes","files","file","XMLHttpRequest","onreadystatechange","DONE","lengthComputable","loaded","total","fn","uploadinput","ondragover","ondragleave","dialog","uploadbox","queue_running","duplicate","queue_index","announce","queue_length","queue_stop","stop","configure","compatible","File","FileList","dragover","dragleave","createListCollection","defaultHideSourceItems","elements","listCollectionCreatorModal","creationFn","hideSourceItems","history_content_type","createHDCA","_hdcaModel","_hdcaModel2","_states","_states2","_baseCreator","_baseCreator2","_naturalSort","DatasetCollectionElementView","_dragstart","_dragend","discard","parentWidth","margin-right","destroy","click .name","click .discard","drop","_click","_clickName","prompt","_clickDiscard","_sendToParent","ListCollectionCreator","CollectionCreatorMixin","elementViewClass","collectionClass","HistoryListDatasetCollection","minElements","defaultAttributes","TypeError","oncreate","oncancel","autoscrollDist","highlightClr","footerSettings",".hide-originals","creator","initialElements","_setUpCommonSettings","_instanceSetUp","_elementsSetUp","selectedIds","$dragging","blocking","invalidElements","workingElements","elementViews","_ensureElementIds","_validateElements","_mangleDuplicateNames","_sortElements","uniqueId","problem","_isElementInvalid","deleted","purged","counter","existingNames","currName","_renderInvalid","main","_renderHeader","_renderMiddle","_renderFooter","_addPluginComponents","invalidInitial","problems","helpContent","_invalidElementsAlert","$middle","middle","_renderList","hoverhighlight","_showAlert","_disableNameAndCreate","isUndefined","$list","_renderClearSelected","$tmp","removeElementView","elementView","_createElementView","invoke","_listenToElementView","addElementView","without","_renderNoElementsLeft","noElementsLeft","_elementToJSON","createList","hideOriginals","_errorHandler","once","click .more-help","click .less-help","click .main-help","click .header .alert button","click .reset","click .clear-selected","click .collection-elements","dragover .collection-elements","drop .collection-elements","collection-element.dragstart .collection-elements","collection-element.dragend   .collection-elements","change .collection-name","keydown .collection-name","change .hide-originals","click .cancel-create","click .create-collection","clearSelectedElements","_dragoverElements","_checkForAutoscroll","$nearest","_getNearestElement","$placeholder","$element","upperDist","lowerDist","lis","toArray","$li","halfHeight","_dropElements","dropEffect","_syncOrderToDom","newElements","_elementDragstart","_elementDragend","_creatorTemplates","collectionCreatorModal","CreatorClass","_collectionCreator","buildHDCASave","_super","_collectionModel","_collectionModel2","_historyContentModel","_historyContentModel2","hcontentMixin","HistoryContentMixin","ListDC","ListDatasetCollection","PairDC","PairDatasetCollection","ListPairedDC","ListPairedDatasetCollection","ListOfListsDC","ListOfListsDatasetCollection","clone","collection_type","HistoryPairDatasetCollection","HistoryListPairedDatasetCollection","HistoryListOfListsDatasetCollection","_datasetModel","_datasetModel2","DatasetCollectionElementMixin","element_identifier","element_index","element_type","_mergeObject","object","element_id","idAttribute","DatasetCollectionElement","DCECollection","DatasetDCE","DatasetAssociation","_downloadQueryParameters","hasDetails","DatasetDCECollection","_createElementsModel","parent_hdca_id","inReadyState","populated","isDeletedOrPurged","getVisibleContents","parsed","create_time","update_time","delete","undelete","NestedDCDCE","NestedDCDCECollection","NestedPairDCDCE","NestedPairDCDCECollection","NestedListDCDCE","NestedListDCDCECollection","data_input","data_collection_input","subworkflow","pause","_historyContents","_historyContents2","_historyPreferences","_controlledFetchCollection","_controlledFetchCollection2","History","UPDATE_DELAY","contents_active","contents_states","contentsClass","HistoryContents","historyJSON","order","_setUpCollectionListeners","updateTimeoutId","details","clearUpdateTimeout","change:id","newId","makeArray","contentsShown","contentsActive","shown","includeDeleted","includeHidden","nice_size","ownedByCurrUser","numOfUnfinishedJobs","unfinishedJobIds","numOfUnfinishedShownContents","runningAndActive","_fetchContentRelatedAttributes","contentRelatedAttrs","refresh","lastUpdateTime","allFetched","currentPage","fetchPage","fetchUpdated","serverResponseDatetime","getResponseHeader","checkForUpdates","_delayThenUpdate","historyData","fetchWithContents","contentsOptions","setHistoryId","fetchContents","fetchCurrentPage","purge","allDatasets","all_datasets","setAsCurrent","_collectionSuper","InfinitelyScrollingCollection","HistoryCollection","limitOnFirstFetch","limitPerFetch","currentHistoryId","setUpListeners","change:deleted","copied","original","newData","setCurrent","set-as-current","oldCurrentId","_buildFetchData","_buildFetchFilters","superFilters","fetchFirst","limit","encoded_id-in","fetchMore","comparators","name-dsc","size-asc","currentHistory","hdas","historyOptions","xhrOptions","_hdaModel","_hdaModel2","_historyPreferences2","_ajaxQueue","_ajaxQueue2","PaginatedCollection","limitPerPage","limitPerProgressiveFetch","attrs","HistoryDatasetAssociation","validationError","_setUpWebStorage","initialSettings","storage","HistoryPrefs","historyStorageKey","include-deleted","newVal","include-hidden","hid-asc","running","getByHid","haveDetails","visibleAndUndeleted","setIncludeDeleted","isBoolean","setIncludeHidden","expandedIds","_fetchParams","getTotalItemCount","since","update_time-ge","fetchDeleted","fetchHidden","fetchAllDetails","detailsFlag","fetchCollectionCounts","_filterAndUpdate","filterParams","updateWhat","updateArgs","fetched","modelArray","currJson","ajaxQueue","ajaxFn","AjaxQueue","reverse","isString","progressivelyFetchDetails","_recursivelyFetch","_options","detailKeys","defer","notify","limitPerCall","isCopyable","contentsJSON","copyableModelClasses","isObject","LibraryDatasetDatasetAssociation","HistoryDatasetCollectionAssociation","elementIdentifiers","collectionType","hide_source_items","element_identifiers","haveSearchDetails","matchesWhat","show_deleted","show_hidden","addExpanded","removeExpanded","isExpanded","contentId","allExpanded","clearExpanded","storageKeyPrefix","clearAll","ExpandableView","expanded","$newRender","_buildNewRender","_queueNewRender","$details","_renderDetails","_swapNewRender","next","$where","$newDetails","toggleExpanded","expand","collapse","_fetchModelDetails","_expand","ListItemView","isSelectable","_renderWarnings","_renderTitleBar","_renderPrimaryActions","_renderSubtitle","$warnings","warnings","titleBar","subtitle","click .title-bar","keydown .title-bar","click .selector","_clickTitleBar","altKey","_keyDownTitleBar","FoldoutListItemView","foldoutStyle","foldoutPanelClass","foldout","_createFoldoutPanel","_attachFoldout","FoldoutClass","_getFoldoutPanelClass","_getFoldoutPanelOptions","$whereTo","_expandByDrilldown","detailsTemplate","_listItem","_listItem2","_faIconButton","_faIconButton2","DatasetListItemView","changedAttributes","_renderNametags","_renderDisplayButton","displayBtnData","urls","noAccess","_renderSecondaryActions","_renderSummary","_renderDetailMessages","_renderDisplayApplications","summaryRenderFn","summaries","unknown","detailMessages","displayApplications","_renderDownloadButton","_renderShowParamsButton","show_params","hasData","download","_renderMetaFileDownloadButton","meta_file","meta_download","click .display-btn","click .params-btn","click .download-btn","failed_metadata","noAccessTemplate","summaryTemplates","detailMessageTemplates","resubmitted","displayApplicationsTemplate","_datasetLi","_datasetLi2","DCListItemView","hasUser","titleBarTemplate","subtitleTemplate","DCEListItemView","DatasetDCEListItemView","NestedDCDCEListItemView","_formView","_formView2","submit_tooltip","submit_title","submit_icon","_submit","success_message","matchModel","_showMessage","searchableMixin","accessible","meta_files","misc_blurb","misc_info","_generateUrls","edit","report_error","visualization","currModel","newState","previous","hda","responseObj","format","database","blurb","nameAndId","DatasetAssociationCollection","ids","notReady","startingLength","ajaxFns","chain","curr","isVisible","unhide","_validationWarning","what","_changeHideOriginals","_changeName","_getName","_nameCheckForEnter","_clickCreate","_clickMoreHelp","_clickLessHelp","_toggleHelp","alertClass","_hideAlert","_cancelCreate","$footer","property","naturalSort","re","nC","xN","yN","xD","getTime","yD","oFxNcL","oFyNcL","cLoc","numS","scope","$this","targetSelector","mouseover","background","mouseout","_deferred","_deferred2","_formData","_formData2","_workflowIcons","_workflowIcons2","$steps","_configure","step_index","_handleWorkflowParameter","wp_name","wp_inputs","wp_count","style","links","forms","steps","parms","step_type","step_label","step_name","step_version","fixed_title","citations","collapsible","collapsed","_isDataStep","sustain_version","sustain_repeats","sustain_conditionals","narrow","text_enable","text_disable","cls_enable","cls_disable","errors","messages","initial_errors","hide_operations","needs_refresh","visitInputs","output_connections","output_connection","sub_step","input_step_index","connections_by_name","connection","step_linked","output_name","wp_input","wp_linked","backdrop","post_job_actions","pja","action_arguments","data_resolved","context","is_runtime_value","__class__","is_data_input","data_ref","is_workflow","flavor","collapsible_value","collapsible_preview","_renderMessage","_renderParameters","_renderHistory","_renderStep","execute_btn","_execute","Label","fade","step_version_changes","wp_form","_refreshStep","_append","history_form","test_param","cases","short_str","is_simple_input","hide_label","show_progress","wait_text","source_step","wp_field","wp_value","_refreshHistory","_refresh_history","_enabled","history_form_data","new_history_name","replacement_params","parameters_normalized","validated","step_related_errors","lst","_errorModal","_errorModal2","CopyDialog","defaultName","submitLabel","errorMessage","progressive","activeLabel","allLabel","anonWarning","_showAjaxIndicator","indicator","margin-top","checkNameAndCopy","copyAllDatasets","ajaxErrorModal","rejectWith","autoClose","defaultCopyNameFn","nameFn","defaultCopyName","defaultCopyWhat","allowAll","originalClosingCallback","closing_callback","isAnon","copyWhat","cancelled","ImportDialog","historyCopyDialog","useImport","Ok","DETAILS_MSG","errorModal","offlineErrorModal","badGatewayErrorModal","CONTACT_MSG","DEFAULT_AJAX_ERR_MSG","_ajaxDetails","raven","Raven","onLine","functions","ControlledFetchCollection","setOrder","changed-order","_buildFetchOptions","_fetchFiltersToAjaxData","pick","filterMap","qv","update_time-asc","create_time-asc","comparator","shouldPaginate","getLastPage","getPageCount","getPageLimitOffset","pageNum","constrainPageNum","fetchPrevPage","fetchNextPage","lastFetched","fetchedData","numFetched","fetchAll","_loadingIndicator","_loadingIndicator2","ListPanel","viewClass","emptyMsg","noneFoundMsg","searchPlaceholder","selecting","lastSelected","dragItems","views","_createDefaultCollection","$scrollContainer","loading","_showLoadingIndicator","loading-done","_hideLoadingIndicator","_setUpViewListeners","renderAll","renderItems","addItemView","removeItemView","view:selected","shiftKey","lastSelectedView","viewFromModelId","selectRange","showSelectors","view:de-selected","_renderControls","_renderTitle","_renderSearch","$controls","controls","_renderMultiselectActionMenu","actions","multiselectActions","$newMenu","$actions","$messages","$emptyMessage","freeViews","shownModels","_filterCollection","itemModel","_createItemView","_attachItems","_renderEmptyMessage","_filterItem","every","ViewClass","_getItemViewClass","_getItemViewOptions","_setUpItemViewListeners","_destroyItemView","_destroyItemViews","getSelectedModels","_renderItemView$el","expandAll","collapseAll","modelIndex","_attachView","useFx","_insertIntoListAt","$what","viewFromModel","viewsWhereModel","properties","isMatch","viewRange","viewA","viewB","indexA","indexB","searchInput","initialVal","onfirstsearch","_firstSearch","onsearch","searchItems","onclear","clearSearch","$search","THROTTLE_SELECTOR_FX_AT","hideSelectors","toggleSelectors","selectAll","deselectAll","getSelectedViews","scrollPosition","scrollTo","scrollToTop","scrollToItem","scrollToId","click .select-all","click .deselect-all","ModelListPanel","modelCollectionKey","setModel","freeModel","oldModelId","_setUpModelListeners","controlsTemplate","parentNode","clearSearchInput","searchTerms","firstSearch","inputTemplate","KEYCODE_ESC","KEYCODE_RETURN","$parentNode","inputVal","minSearchLen","escWillClear","oninit","HDAListItemView","_collectionLi","_collectionLi2","_collectionView","_collectionView2","HDCAListItemView","change:tags change:populated change:visible","ListCollectionView","PairCollectionView","ListOfPairsCollectionView","ListOfListsCollectionView","_listView","_listView2","CollectionView","DatasetDCEViewClass","NestedDCDCEViewClass","panelStack","parentName","downloadUrl","expanded:drilldown","drilldown","_expandDrilldownPanel","collapsed:drilldown","_collapseDrilldownPanel","click .navigation .back","close","_tag","_tag2","_annotation","_annotation2","DatasetListItemEdit","purgeAllowed","tagsEditorShown","annotationEditorShown","_renderEditButton","_renderDeleteButton","editBtnData","deletedAlready","_renderAnnotation","_makeDbkeyEditLink","_renderToolHelpButton","datasetID","jobID","creating_job","parseToolBuild","helpString","parseHTML","parseToolID","_renderErrButton","_renderRerunButton","_renderVisualizationsButton","visualizations","$visualizations","_addScratchBookFn","addBack","$links","tagsEditor","annotationEditor","AnnotationEditor","editableDbkey","click .undelete-link","click .purge-link","click .edit-btn","click .delete-btn","click .rerun-btn","click .report-err-btn","click .visualization-btn","click .dbkey a","_clickUndeleteLink","_clickPurgeLink","visualizationsTemplate","$annotation","newAnnotation","_galaxy","_galaxy2","_router","_router2","_toolPanel","_toolPanel2","_historyPanel","_historyPanel2","_page","_page2","_toolForm2","_formWrapper","_formWrapper2","_userPreferences","_userPreferences2","_userCustomBuilds","_userCustomBuilds2","_tours","_tours2","_gridShared","_gridShared2","_workflow","_workflow2","_historyList","_historyList2","_toolFormComposite","_toolFormComposite2","_datasetError","_datasetError2","_datasetEditAttributes","_datasetEditAttributes2","_citations","_citations2","_vue","_vue2","AnalysisRouter","routes","(/)","(/)root*","(/)tours(/)(:tour_id)","(/)user(/)","(/)user(/)(:form_id)","(/)workflow(/)","(/)workflow/run(/)","(/)pages(/)create(/)","(/)pages(/)edit(/)","(/)pages(/)(:action_id)","(/)visualizations(/)edit(/)","(/)visualizations/(:action_id)","(/)workflows/list_published(/)","(/)histories(/)citations(/)","(/)histories(/)rename(/)","(/)histories(/)permissions(/)","(/)histories(/)(:action_id)","(/)datasets(/)list(/)","(/)workflow/import_workflow","(/)custom_builds","(/)datasets/edit","(/)datasets/error","require_login","show_tours","tour_id","giveTour","ToursView","show_user","show_user_form","form_id","user_id","show_visualizations","action_id","plural","show_visualizations_edit","show_workflows_published","show_histories","show_history_citations","citationInstance","vm","createElement","propsData","$mount","show_histories_rename","show_histories_permissions","show_datasets","show_pages","show_pages_create","show_pages_edit","show_workflows","show_run","_loadWorkflow","show_import_workflow","ImportWorkflowView","show_custom_builds","_this","historyPanel","historyView","show_dataset_edit_attributes","show_dataset_error","home","toolPanel","_loadCenterIframe","_loadToolForm","workflow_id","m_c","m_a","decodeURIComponent","_this2","getQueryString","error_msg","Left","Right","_uploadView","_uploadView2","stored_workflow_menu_entries","toolbox","tool_panel","toolbox_in_panel","upload_button","nginx_upload_path","default_genome","default_extension","_templateAllWorkflow","menu_entry","_templateWorkflowLink","stored_workflow","encoded_stored_workflow_id","_templateTool","wf","_uploadButton","_uploadButton2","_defaultView","_defaultView2","_compositeView","_compositeView2","auto","list_extensions","list_genomes","ui_button","onunload","datatypes","composite_files","a_text","b_text","datatypes_disable_auto","genomes","current_user","default_view","composite_view","collection_view","currentFtp","toData","file_count","it","prefix","$progress","_uploadModel","_uploadModel2","_defaultRow","_defaultRow2","_uploadFtp2","_uploadFtp3","_uploadExtension","_uploadExtension2","_uiSelect","_uiSelect2","_lazyLimited","_lazyLimited2","upload_size","$uploadbox","$uploadtable","btnLocal","btnFtp","_eventFtp","btnCreate","_eventCreate","btnStart","_eventStart","btnStop","_eventStop","btnReset","_eventReset","btnClose","_eventAnnounce","_eventProgress","_eventSuccess","_eventError","_eventComplete","ftp","select_extension","ext","_changeExtension","select_genome","_changeGenome","loader","new_content","upload_row","_eventRemove","enable_reset","enable_start","enable_sources","show_table","new_model","_uploadPercentage","upload_completed","_uploadFtp","defaults_only","_uploadSettings","_uploadSettings2","status_classes","queued","$mode","$text","$size","$info_text","$info_progress","$text_content","$settings","$symbol","$progress_bar","$percentage","_removeRow","showExtensionInfo","_showSettings","_refreshPercentage","_refreshStatus","_refreshInfo","_refreshGenome","_refreshExtension","_refreshFileSize","_refreshType","content_list","_done","model_id","_compositeRow","_compositeRow2","file_desc","where","$source","$status","$file_name","$file_desc","$file_size","_refreshReady","button_menu","ButtonMenu","pull","addMenu","_showFtp","_refreshFileName","_refreshMode","offsetHeight","_collectionRow","_collectionRow2","_listCollectionCreator","btnBuild","_eventBuild","updateExtension","select_collection","updateCollectionType","updateGenome","_updateScreen","hids","allHids","selection","buildCollection","enable_build","_optionsMenu","_optionsMenu2","_historyViewEditCurrent","_historyViewEditCurrent2","HistoryPanel","userIsAnonymous","allow_user_dataset_purge","CurrentHistoryView","listenToGalaxy","buttonRefresh","ButtonLink","buttonOptions","buttonViewMulti","connectToQuotaMeter","optionsMenu","anonymous","buildMenu","menuOption","anon","galaxy_main","_copyDialog","_copyDialog2","createNewHistory","user_action","webhooks_menu","_historyModel","_historyViewEdit","_historyViewEdit2","HistoryViewPrefs","storageKey","HistoryViewEdit","HDCAViewClass","currentContentId","loadHistory","switchToHistory","change:nice_size change:size","oldState","_debouncedScrollCaptureHandler","debounce","_renderQuotaMessage","quotaMsg","_setCurrentContentById","setCurrentContent","delegateEvents","click .uploader-link","click .get-data-link","$toolMenu","galaxy","center-frame:load","pathToMatch","fullpath","hdaId","useToURLRegexMap","regex","use","center-panel:load","showQuotaMessage","hideQuotaMessage","clearMessages","$target","currentTarget","not","$msg","unhideHidden","deleteHidden","quotaMsgTemplate","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_get","receiver","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_createClass","defineProperties","descriptor","protoProps","staticProps","initialFunctions","numToProcess","fnIndex","causeFail","NamedAjaxQueue","_AjaxQueue","_this3","names","_historyView","_historyView2","_hdaLiEdit","_hdaLiEdit2","_hdcaLiEdit","_hdcaLiEdit2","_listCollectionCreator2","_pairCollectionCreator","_pairCollectionCreator2","_listOfPairsCollectionCreator","_listOfPairsCollectionCreator2","HistoryView","HDAViewClass","HDAListItemEdit","HDCAListItemEdit","droptarget:drop","dataDropped","dropTargetOff","view:attached view:removed","_renderCounts","search:loading-progress","_renderSearchProgress","search:searching","_renderSearchFindings","updateHistoryDiskSize","_handleItemDeletedChange","change:visible","_handleItemVisibleChange","change:purged","fetching-deleted","fetching-hidden","fetching-deleted-done fetching-hidden-done","toggleHDATagEditors","toggleHDAAnnotationEditors","newName","previousName","_collectionActions","createFunc","createPairCollection","createListOfPairsCollection","_handleItemDeletion","_handleItemUndeletion","_handleItemHidden","_handleItemUnhidden","showOrHide","click .show-selectors-btn","click .toggle-deleted-link","toggleShowDeleted","click .toggle-hidden-link","toggleShowHidden","dropTargetOn","dropTarget","dropHandlers","dragenter","$dropTarget","_renderDropTarget","_renderDropTargetHelp","evName","_dropHandlers","dropTargetToggle","getData","countsTemplate","foundTemplate","_historyModel2","_hdaLi","_hdaLi2","_hdcaLi","_hdcaLi2","FETCH_COLLECTION_COUNTS_DELAY","detailedFetchTimeoutId","_clearDetailedFetchTimeout","errorHandler","views:ready view:attached view:removed","_renderSelectButton","view:attached","fetching-more","_toggleContentsLoadingIndicator","fetching-more-done","$indicator","$existing","$emptyMsg","_renderPagination","_renderSomeItems","$paginationControls","pagination","click > .controls .prev","click > .controls .next","change > .controls .pages","click .messages [class$=message]","_clickPrevPage","_clickNextPage","_changePageSelect","store","scrollToHid","ordinalIndicator","numStr","mainTemplate","paginationTemplate","LoadingIndicator","cover","z-index","right","opacity","background-color","text-align","font-style","_datasetLiEdit","_datasetLiEdit2","click .unhide-link","_collectionViewEdit","_collectionViewEdit2","ListCollectionViewEdit","PairCollectionViewEdit","ListOfPairsCollectionViewEdit","ListOfListsCollectionViewEdit","_collectionLiEdit","_collectionLiEdit2","CollectionViewEdit","DatasetDCEListItemEdit","NestedDCDCEListItemEdit","NestedPairCollectionViewEdit","DCListItemEdit","DCEListItemEdit","pairCollectionCreatorModal","PairedDatasetCollectionElementView","identifier","PairCollectionCreator","_createForwardElementView","_createReverseElementView","swap","click .swap","autoPairFnBuilder","getRegExps","_regexps","createPair","listA","listB","aInBIndex","bInAIndex","_pair","preprocessMatch","regexps","matchTo","possible","bestMatch","paired","scoreThreshold","pairedCollectionCreatorModal","_levenshtein","_levenshtein2","_naturalSort2","PairView","pair","PairedCollectionCreator","datasets","DEFAULT_FILTERS","automaticallyPair","strategy","matchPercentage","twoPassAutopairing","initialList","commonFilters","strategies","DEFAULT_STRATEGY","removeExtensions","unpairedPanelHidden","pairedPanelHidden","_dataSetUp","illumina","Rs","simple","lcs","levenshtein","unpaired","_sortInitialList","_ensureIds","autoPair","_sortDatasetList","_splitByFilters","_filter","regexFilters","stringFilter","_addToUnpaired","binSearchSortedIndex","hi","mid","compared","autopairSimple","autopairLevenshtein","distance","autopairLCS","_naiveStartingAndEndingLCS","fwdLCS","revLCS","fwd","rev","_createPair","_guessNameForPair","forward","fwdName","revName","lastDotIndex","lastIndexOf","_unpair","unpairAll","_pairToJSON","ajaxData","_ajaxErrHandler","_renderFilters","_renderUnpaired","_renderPaired","$fwd","$rev","$prd","_renderUnpairedDisplayStr","_renderUnpairedEmpty","_renderPairButton","_renderUnpairedDataset","_adjUnpairedOnScrollbar","_renderUnpairedNotShown","numFiltered","$unpairedColumns","$firstDataset","ucRight","outerWidth","dsRight","rightDiff","_renderPairedEmpty","pairView",".remove-extensions","_chooseFiltersPopover","filterChoice","val1","val2","$popoverContent","filterSet","splitView","msgClass","hideUnpaired","click .forward-column .column-title","click .reverse-column .column-title","click .unpair-all-link","change .forward-unpaired-filter input","focus .forward-unpaired-filter input","click .autopair-link","click .choose-filters .filter-choice","click .clear-filters-link","change .reverse-unpaired-filter input","focus .reverse-unpaired-filter input","click .forward-column .dataset.unpaired","click .reverse-column .dataset.unpaired","click .paired-column .dataset.unpaired","click .unpaired-columns","mousedown .unpaired-columns .dataset","click .paired-column-title","mousedown .flexible-partition-drag","click .paired-columns .dataset.paired","click .paired-columns","click .paired-columns .pair-name","click .unpair-btn","dragover .paired-columns .column-datasets","drop .paired-columns .column-datasets","pair.dragstart .paired-columns .column-datasets","pair.dragend   .paired-columns .column-datasets","change .remove-extensions","toggleExtensions","_clickShowOnlyUnpaired","hidePaired","_clickShowOnlyPaired","_clickUnpairAll","_clickAutopair","_clickFilterChoice","$selected","_hideChooseFilters","_clearFilters","_clickUnpairedDataset","toggleSelectUnpaired","$dataset","waitToPair","pairAllSelected","fwds","revs","clearSelectedUnpaired","_mousedownUnpaired","$startTarget","moveListener","_clickPairRow","rowIndex","_startPartitionDrag","endDrag","trackMouse","startingY","adjPartition","adj","$unpaired","$paired","unpairedHi","pairedHi","movingUpwards","flex","selectPair","clearSelectedPaired","_clickPairName","$name","$pair","customizedName","_clickUnpair","pairIndex","_dragoverPairedColumns","_getNearestPairedDatasetLi","_dropPairedColumns","_syncPairsToDom","newPaired","_pairDragstart","_pairDragend","_printList","_printPair","levenshteinDistance","matrix","information","communication","permissions","api_key","toolbox_filters","openids","custom_builds","logout","Sign out","$preferences","use_remote_user","_addLink","enable_communication_server","has_user_tool_filters","enable_openid","_templateFooter","$row","_templateLink","$a","enable_quotas","quota","_uiTable","_uiTable2","installed_builds","Select","empty_text","error_text","addHeader","appendHeader","$installed","$form","_renderForm","ButtonIcon","area","_renderHelp","len_type","_templateFasta","_templateLen","_templateShared","shared_by_others","display_url","slug","_toastr","mod_toastr","_workflowModel","_workflowModel2","WorkflowItemView","bindAll","timeOut","click #show-in-tool-panel","click #delete-workflow","click #rename-workflow","click #copy-workflow","_rowTemplate","showInToolPanel","removeWorkflow","wfName","renameWorkflow","oldName","copyWorkflow","wfJson","currentOwner","at","errorThrown","jqXHR","textStatus","wfId","checkboxHtml","trHtml","_templateActions","renderTagEditor","TagEditor","WorkflowListView","WorkflowCollection","appendItem","unhighlightDropZone","readWorkflowFiles","reader","FileReader","theFile","wf_json","readAsText","_showArgErrors","msg_text","_templateHeader","templateActions","_templateActionButtons","tableTemplate","_templateWorkflowTable","confirmDelete","searchWorkflow","adjustActiondropdown","workflowItemView","workflow","$el_searchinput","$el_tabletr","min_querylen","regular_expression","_templateNoWorkflow","tableHtml","_mainTemplate","myexperiment_target_url","WorkflowItem","_showCopyDialog","reload","job_url","job","render_error_page","error_response","display_message","stderr","_getBugFormTemplate","doNotClear","safe","UnescapedMessage","floating","form_data","_createTabs","initial_message","_reloadHistory","_getAttribute","conversion","_getConversion","datatype","_getDatatype","permission","_getPermission","submit_attributes","submit_autodetect","submit_conversion","submit_datatype","submit_permission"],"mappings":"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EAAA,EAQAxB,EAAA,EACAyB,EAAA,EAMAC,GAAA,EAkBAK,GAAA,oEAEAnD,EAAA,EAWAgB,EAAA,EACAC,EAAA,EAEAC,GACA,gCACA,+BACA,8BACA,6BACA,6BACA,+BACA,+BACA,6BACA,8BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,8BACA,+BACA,8BACA,6BACA,6BACA,+BACA,+BACA,8BACA,6BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,gCACA,+BACA,8BACA,6BACA,6BACA,+BACA,+BACA,6BACA,8BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,8BACA,+BACA,8BACA,6BACA,6BACA,+BACA,+BACA,8BACA,6BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,gCACA,+BAEA,8BACA,6BACA,6BACA,+BACA,+BACA,6BACA,8BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,8BACA,+BACA,8BACA,6BACA,6BACA,+BACA,+BACA,8BACA,6BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,gCACA,+BACA,8BACA,6BACA,6BACA,+BACA,+BACA,6BACA,8BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,8BACA,+BACA,8BACA,6BACA,6BACA,+BACA,+BACA,8BACA,6BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,+BAEAC,GACA,kCACA,oCACA,kCACA,sCACA,kCACA,oCACA,mCACA,wCAIAiC,GACA,yCACA,kDAIAC,GACA,gCACA,mCAGAC,GACA,2CACA,8CACA,wBAGAC,GACA,gCACA,wBACA,YAUA9D,GAAAv0E,UAAA82E,YAAA,SAAAtZ,EAAApvB,GAQA,MAPAovB,KACAA,EAAAuZ,GAEA3oC,IACAA,GAAA,GAEAnrC,KAAAq1E,OAAA,GAAA9D,GACAvxE,KAAAq1E,OAAAxB,YAAA7zE,KAAAmrC,GAAAovB,MAGA+W,EAAAv0E,UAAAy3E,QAAA,SAAAnkD,G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EAAA6C,EAAA7C,SAAG,oBACH,UACA,iDACA,SACA,kEACA,6CACA,EAAA6C,EAAA7C,SAAG,oBACH,OACA,SACA,SACA,SACA,yDACA,8BACA,6DACA,EAAA6C,EAAA7C,SAAG,kBACH,OACA,6DACA,EAAA6C,EAAA7C,SAAG,iBACH,aACA,wDACA,EAAA6C,EAAA7C,SAAG,aACH,OACA,SACA,SACA,kDACA,8BACA,6BACA,wBACA,EAAA6C,EAAA7C,SAAG,oBACH,UACA,iDACA,SACA,kEACA,6CACA,EAAA6C,EAAA7C,SAAG,oBACH,OACA,SACA,SACA,SACA,UACFyB,KAAK,KAIXo1F,OAAQ31F,EAAEI,UAGF,iFACA,kDACA,oCACA,SACA,yDACA,oCACA,SACA,kDACA,oCACA,SACA,SACA,mCACA,gDACA,EAAAuB,EAAA7C,SAAG,kBACH,WACA,8BACA,iDACA,8BACA,SACA,0DACA,EAAA6C,EAAA7C,SAAG,cACH,OACA,SACA,SACA,+EACA,oCACA,UACFyB,KAAK,KAIXsmB,OAAQ7mB,EAAEI,UAEF,iCACA,sBACA,6CACA,EAAAuB,EAAA7C,SAAG,0BACH,IACA,8DACA,WACA,6CACA,EAAA6C,EAAA7C,SAAG,0CACH,IACA,iEACA,WACA,SACA,sBACA,0DACA,iBACA,EAAA6C,EAAA7C,SAAG,kCACH,OACA,mDACA,EAAA6C,EAAA7C,SAAG,QACH,UACA,SACA,SAEA,gDACA,wCACA,oDACA,EAAA6C,EAAA7C,SAAG,UACH,YACA,8CACA,2EACA,EAAA6C,EAAA7C,SAAG,yCACH,+BACA,YACA,yCACA,oBACA,EAAA6C,EAAA7C,SAAG,+BACH,YACA,oBACA,EAAA6C,EAAA7C,SAAG,6CACH,YACA,QACA,SACA,SAEA,wCACA,sDACA,EAAA6C,EAAA7C,SAAG,eACH,YACA,SACA,UACFyB,KAAK,KAIXi1F,YAAax1F,EAAEI,UAEP,OACA,EAAAuB,EAAA7C,UAEQ,wGACA,2GACA,yGACA,sCACFyB,KAAK,KAEX,OACA,OACA,EAAAoB,EAAA7C,UAEQ,8FACA,yDACA,wFACA,iCACA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","file":"analysis.bundled.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _backbone = __webpack_require__(2);\n\nvar Backbone = _interopRequireWildcard(_backbone);\n\nvar _addLogging = __webpack_require__(19);\n\nvar _addLogging2 = _interopRequireDefault(_addLogging);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n//==============================================================================\n/** @class Mixin to add logging capabilities to an object.\n *      Designed to allow switching an objects log output off/on at one central\n *      statement. Can be used with plain browser console (or something more\n *      complex like an AJAX logger).\n *  <br />NOTE: currently only uses the console.debug log function\n *  (as opposed to debug, error, warn, etc.)\n *  @name LoggableMixin\n *\n *  @example\n *  // Add to your models/views at the definition using chaining:\n *      var MyModel = Backbone.Model.extend( LoggableMixin ).extend({ // ... });\n *\n *  // or - more explicitly AFTER the definition:\n *      var MyModel = Backbone.Model.extend({\n *          logger  : console\n *          // ...\n *          this.log( '$#%& it! - broken already...' );\n *      })\n *      _.extend( MyModel.prototype, LoggableMixin )\n *\n */\nvar LoggableMixin = /** @lends LoggableMixin# */{\n    // replace null with console (if available) to see all logs for a particular view/model\n    /** The logging object whose log function will be used to output\n     *      messages. Null will supress all logging. Commonly set to console.\n     */\n    logger: null,\n    /** @type {String} a namespace for filtering/focusing log output */\n    _logNamespace: \".\"\n};\n(0, _addLogging2.default)(LoggableMixin);\n\n//==============================================================================\n/** Backbone model that syncs to the browser's sessionStorage API.\n *      This all largely happens behind the scenes and no special calls are required.\n */\nvar SessionStorageModel = Backbone.Model.extend({\n    initialize: function initialize(initialAttrs) {\n        // check for sessionStorage and error if no id is provided\n        this._checkEnabledSessionStorage();\n        if (!initialAttrs.id) {\n            throw new Error(\"SessionStorageModel requires an id in the initial attributes\");\n        }\n        this.id = initialAttrs.id;\n\n        // load existing from storage (if any), clear any attrs set by bbone before init is called,\n        //  layer initial over existing and defaults, and save\n        var existing = !this.isNew() ? this._read(this) : {};\n        this.clear({ silent: true });\n        this.save(_.extend({}, this.defaults, existing, initialAttrs), {\n            silent: true\n        });\n\n        // save on any change to it immediately\n        this.on(\"change\", function () {\n            this.save();\n        });\n    },\n\n    _checkEnabledSessionStorage: function _checkEnabledSessionStorage() {\n        try {\n            return window.sessionStorage.length >= 0;\n        } catch (err) {\n            alert(\"Please enable cookies in your browser for this Galaxy site\");\n            return false;\n        }\n    },\n\n    /** override of bbone sync to save to sessionStorage rather than REST\n     *      bbone options (success, errror, etc.) should still apply\n     */\n    sync: function sync(method, model, options) {\n        if (!options.silent) {\n            model.trigger(\"request\", model, {}, options);\n        }\n        var returned = {};\n        switch (method) {\n            case \"create\":\n                returned = this._create(model);\n                break;\n            case \"read\":\n                returned = this._read(model);\n                break;\n            case \"update\":\n                returned = this._update(model);\n                break;\n            case \"delete\":\n                returned = this._delete(model);\n                break;\n        }\n        if (returned !== undefined || returned !== null) {\n            if (options.success) {\n                options.success();\n            }\n        } else {\n            if (options.error) {\n                options.error();\n            }\n        }\n        return returned;\n    },\n\n    /** set storage to the stringified item */\n    _create: function _create(model) {\n        try {\n            var json = model.toJSON();\n            var set = sessionStorage.setItem(model.id, JSON.stringify(json));\n            return set === null ? set : json;\n            // DOMException is thrown in Safari if in private browsing mode and sessionStorage is attempted:\n            // http://stackoverflow.com/questions/14555347\n            // TODO: this could probably use a more general soln - like detecting priv. mode + safari => non-ajaxing Model\n        } catch (err) {\n            if (!(err instanceof DOMException && navigator.userAgent.indexOf(\"Safari\") > -1)) {\n                throw err;\n            }\n        }\n        return null;\n    },\n\n    /** read and parse json from storage */\n    _read: function _read(model) {\n        return JSON.parse(sessionStorage.getItem(model.id));\n    },\n\n    /** set storage to the item (alias to create) */\n    _update: function _update(model) {\n        return model._create(model);\n    },\n\n    /** remove the item from storage */\n    _delete: function _delete(model) {\n        return sessionStorage.removeItem(model.id);\n    },\n\n    /** T/F whether sessionStorage contains the model's id (data is present) */\n    isNew: function isNew() {\n        return !sessionStorage.hasOwnProperty(this.id);\n    },\n\n    _log: function _log() {\n        return JSON.stringify(this.toJSON(), null, \"  \");\n    },\n    toString: function toString() {\n        return \"SessionStorageModel(\" + this.id + \")\";\n    }\n});\n(function () {\n    SessionStorageModel.prototype = _.omit(SessionStorageModel.prototype, \"url\", \"urlRoot\");\n})();\n\n//==============================================================================\n/** Function that allows mixing of hashs into bbone MVC while showing the mixins first\n *      (before the more local class overrides/hash).\n *      Basically, a simple reversal of param order on _.defaults() - to show mixins in top of definition.\n *  @example:\n *      var NewModel = Something.extend( mixin( MyMixinA, MyMixinB, { ... myVars : ... }) );\n *\n *  NOTE: this does not combine any hashes (like events, etc.) and you're expected to handle that\n */\nfunction mixin(mixinHash1, /* mixinHash2, etc: ... variadic */propsHash) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    var lastArg = args.pop();\n    args.unshift(lastArg);\n    return _.defaults.apply(_, args);\n}\n\n//==============================================================================\n/** A mixin for models that allow T/F/Matching to their attributes - useful when\n *      searching or filtering collections of models.\n * @example:\n *      see hda-model for searchAttribute and searchAliases definition examples.\n *      see history-contents.matches for how collections are filtered\n *      and see readonly-history-view.searchHdas for how user input is connected to the filtering\n */\nvar SearchableModelMixin = {\n    /** what attributes of an HDA will be used in a text search */\n    searchAttributes: [\n        // override\n    ],\n\n    /** our attr keys don't often match the labels we display to the user - so, when using\n     *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n     *      following attr keys.\n     */\n    searchAliases: {\n        // override\n    },\n\n    /** search the attribute with key attrKey for the string searchFor; T/F if found */\n    searchAttribute: function searchAttribute(attrKey, searchFor) {\n        var attrVal = this.get(attrKey);\n        //this.debug( 'searchAttribute', attrKey, attrVal, searchFor );\n        // bail if empty searchFor or unsearchable values\n        if (!searchFor || attrVal === undefined || attrVal === null) {\n            return false;\n        }\n        // pass to sep. fn for deep search of array attributes\n        if (_.isArray(attrVal)) {\n            return this._searchArrayAttribute(attrVal, searchFor);\n        }\n        return attrVal.toString().toLowerCase().indexOf(searchFor.toLowerCase()) !== -1;\n    },\n\n    /** deep(er) search for array attributes; T/F if found */\n    _searchArrayAttribute: function _searchArrayAttribute(array, searchFor) {\n        //this.debug( '_searchArrayAttribute', array, searchFor );\n        searchFor = searchFor.toLowerCase();\n        //precondition: searchFor has already been validated as non-empty string\n        //precondition: assumes only 1 level array\n        //TODO: could possibly break up searchFor more (CSV...)\n        return _.any(array, function (elem) {\n            return elem.toString().toLowerCase().indexOf(searchFor.toLowerCase()) !== -1;\n        });\n    },\n\n    /** search all searchAttributes for the string searchFor,\n     *      returning a list of keys of attributes that contain searchFor\n     */\n    search: function search(searchFor) {\n        var model = this;\n        return _.filter(this.searchAttributes, function (key) {\n            return model.searchAttribute(key, searchFor);\n        });\n    },\n\n    /** alias of search, but returns a boolean; accepts attribute specifiers where\n     *      the attributes searched can be narrowed to a single attribute using\n     *      the form: matches( 'genome_build=hg19' )\n     *      (the attribute keys allowed can also be aliases to the true attribute key;\n     *          see searchAliases above)\n     *  @param {String} term   plain text or ATTR_SPECIFIER sep. key=val pair\n     *  @returns {Boolean} was term found in (any) attribute(s)\n     */\n    matches: function matches(term) {\n        var ATTR_SPECIFIER = \"=\";\n        var split = term.split(ATTR_SPECIFIER);\n        // attribute is specified - search only that\n        if (split.length >= 2) {\n            var attrKey = split[0];\n            attrKey = this.searchAliases[attrKey] || attrKey;\n            return this.searchAttribute(attrKey, split[1]);\n        }\n        // no attribute is specified - search all attributes in searchAttributes\n        return !!this.search(term).length;\n    },\n\n    /** an implicit AND search for all terms; IOW, a model must match all terms given\n     *      where terms is a whitespace separated value string.\n     *      e.g. given terms of: 'blah bler database=hg19'\n     *          an HDA would have to have attributes containing blah AND bler AND a genome_build == hg19\n     *      To include whitespace in terms: wrap the term in double quotations (name=\"blah bler\").\n     */\n    matchesAll: function matchesAll(terms) {\n        var model = this;\n        // break the terms up by whitespace and filter out the empty strings\n        terms = terms.match(/(\".*\"|\\w*=\".*\"|\\S*)/g).filter(function (s) {\n            return !!s;\n        });\n        return _.all(terms, function (term) {\n            term = term.replace(/\"/g, \"\");\n            return model.matches(term);\n        });\n    }\n};\n\n//==============================================================================\n/** A view that renders hidden and shows when some activator is clicked.\n *      options:\n *          showFn: the effect used to show/hide the View (defaults to jq.toggle)\n *          $elementShown: some jqObject (defaults to this.$el) to be shown/hidden\n *          onShowFirstTime: fn called the first time the view is shown\n *          onshow: fn called every time the view is shown\n *          onhide: fn called every time the view is hidden\n *      events:\n *          hiddenUntilActivated:shown (the view is passed as an arg)\n *          hiddenUntilActivated:hidden (the view is passed as an arg)\n *      instance vars:\n *          view.hidden {boolean} is the view in the hidden state\n */\nvar HiddenUntilActivatedViewMixin = /** @lends hiddenUntilActivatedMixin# */{\n    //TODO: since this is a mixin, consider moving toggle, hidden into HUAVOptions\n\n    /** call this in your initialize to set up the mixin\n     *  @param {jQuery} $activator the 'button' that's clicked to show/hide the view\n     *  @param {Object} hash with mixin options\n     */\n    hiddenUntilActivated: function hiddenUntilActivated($activator, options) {\n        // call this in your view's initialize fn\n        options = options || {};\n        //TODO: flesh out options - show them all here\n        this.HUAVOptions = {\n            $elementShown: this.$el,\n            showFn: jQuery.prototype.toggle,\n            showSpeed: \"fast\"\n        };\n        _.extend(this.HUAVOptions, options || {});\n        /** has this been shown already (and onshowFirstTime called)? */\n        this.HUAVOptions.hasBeenShown = this.HUAVOptions.$elementShown.is(\":visible\");\n        this.hidden = this.isHidden();\n\n        if ($activator) {\n            var mixin = this;\n            $activator.on(\"click\", function (ev) {\n                mixin.toggle(mixin.HUAVOptions.showSpeed);\n            });\n        }\n    },\n\n    //TODO:?? remove? use .hidden?\n    /** returns T/F if the view is hidden */\n    isHidden: function isHidden() {\n        return this.HUAVOptions.$elementShown.is(\":hidden\");\n    },\n\n    /** toggle the hidden state, show/hide $elementShown, call onshow/hide, trigger events */\n    toggle: function toggle() {\n        //TODO: more specific name - toggle is too general\n        // can be called manually as well with normal toggle arguments\n        //TODO: better as a callback (when the show/hide is actually done)\n        // show\n        if (this.hidden) {\n            // fire the optional fns on the first/each showing - good for render()\n            if (!this.HUAVOptions.hasBeenShown) {\n                if (_.isFunction(this.HUAVOptions.onshowFirstTime)) {\n                    this.HUAVOptions.hasBeenShown = true;\n                    this.HUAVOptions.onshowFirstTime.call(this);\n                }\n            }\n            if (_.isFunction(this.HUAVOptions.onshow)) {\n                this.HUAVOptions.onshow.call(this);\n                this.trigger(\"hiddenUntilActivated:shown\", this);\n            }\n            this.hidden = false;\n\n            // hide\n        } else {\n            if (_.isFunction(this.HUAVOptions.onhide)) {\n                this.HUAVOptions.onhide.call(this);\n                this.trigger(\"hiddenUntilActivated:hidden\", this);\n            }\n            this.hidden = true;\n        }\n        return this.HUAVOptions.showFn.apply(this.HUAVOptions.$elementShown, arguments);\n    }\n};\n\n//==============================================================================\n/** Mixin for views that can be dragged and dropped\n *      Allows for the drag behavior to be turned on/off, setting/removing jQuery event\n *          handlers each time.\n *      dataTransfer data is set to the JSON string of the view's model.toJSON\n *      Override '$dragHandle' to define the draggable DOM sub-element.\n */\nvar DraggableViewMixin = {\n    /** set up instance vars to track whether this view is currently draggable */\n    initialize: function initialize(attributes) {\n        /** is the body of this hda view expanded/not? */\n        this.draggable = attributes.draggable || false;\n    },\n\n    /** what part of the view's DOM triggers the dragging */\n    $dragHandle: function $dragHandle() {\n        //TODO: make abstract/general - move this to listItem\n        // override to the element you want to be your view's handle\n        return this.$(\".title-bar\");\n    },\n\n    /** toggle whether this view is draggable */\n    toggleDraggable: function toggleDraggable() {\n        if (this.draggable) {\n            this.draggableOff();\n        } else {\n            this.draggableOn();\n        }\n    },\n\n    /** allow the view to be dragged, set up event handlers */\n    draggableOn: function draggableOn() {\n        this.draggable = true;\n        this.dragStartHandler = _.bind(this._dragStartHandler, this);\n        this.dragEndHandler = _.bind(this._dragEndHandler, this);\n\n        var handle = this.$dragHandle().attr(\"draggable\", true).get(0);\n        handle.addEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.addEventListener(\"dragend\", this.dragEndHandler, false);\n    },\n\n    /** turn of view dragging and remove event listeners */\n    draggableOff: function draggableOff() {\n        this.draggable = false;\n        var handle = this.$dragHandle().attr(\"draggable\", false).get(0);\n        handle.removeEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.removeEventListener(\"dragend\", this.dragEndHandler, false);\n    },\n\n    /** sets the dataTransfer data to the model's toJSON\n     *  @fires draggable:dragstart (bbone event) which is passed the event and this view\n     */\n    _dragStartHandler: function _dragStartHandler(event) {\n        event.dataTransfer.effectAllowed = \"move\";\n        //ASSUMES: this.model\n        //TODO: all except IE: should be 'application/json', IE: must be 'text'\n        event.dataTransfer.setData(\"text\", JSON.stringify(this.model.toJSON()));\n        this.trigger(\"draggable:dragstart\", event, this);\n        return false;\n    },\n\n    /** handle the dragend\n     *  @fires draggable:dragend (bbone event) which is passed the event and this view\n     */\n    _dragEndHandler: function _dragEndHandler(event) {\n        this.trigger(\"draggable:dragend\", event, this);\n        return false;\n    }\n};\n\n//==============================================================================\n/** Mixin that allows a view to be selected (gen. from a list).\n *      Selection controls ($selector) may be hidden/shown/toggled.\n *          The bbone event 'selectable' is fired when the controls are shown/hidden (passed T/F).\n *      Default rendering is a font-awesome checkbox.\n *      Default selector is '.selector' within the view's $el.\n *      The bbone events 'selected' and 'de-selected' are fired when the $selector is clicked.\n *          Both events are passed the view and the (jQuery) event.\n */\nvar SelectableViewMixin = {\n    /** Set up instance state vars for whether the selector is shown and whether the view has been selected */\n    initialize: function initialize(attributes) {\n        /** is the view currently in selection mode? */\n        this.selectable = attributes.selectable || false;\n        /** is the view currently selected? */\n        this.selected = attributes.selected || false;\n    },\n\n    /** $el sub-element where the selector is rendered and what can be clicked to select. */\n    $selector: function $selector() {\n        return this.$(\".selector\");\n    },\n\n    /** How the selector is rendered - defaults to font-awesome checkbox */\n    _renderSelected: function _renderSelected() {\n        // override\n        this.$selector().find(\"span\").toggleClass(\"fa-check-square-o\", this.selected).toggleClass(\"fa-square-o\", !this.selected);\n    },\n\n    /** Toggle whether the selector is shown */\n    toggleSelector: function toggleSelector() {\n        //TODO: use this.selectable\n        if (!this.$selector().is(\":visible\")) {\n            this.showSelector();\n        } else {\n            this.hideSelector();\n        }\n    },\n\n    /** Display the selector control.\n     *  @param {Number} a jQuery fx speed\n     *  @fires: selectable which is passed true (IOW, the selector is shown) and the view\n     */\n    showSelector: function showSelector(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        // make sure selected state is represented properly\n        this.selectable = true;\n        this.trigger(\"selectable\", true, this);\n        this._renderSelected();\n        if (speed) {\n            this.$selector().show(speed);\n        } else {\n            this.$selector().show();\n        }\n    },\n\n    /** remove the selector control\n     *  @param {Number} a jQuery fx speed\n     *  @fires: selectable which is passed false (IOW, the selector is not shown) and the view\n     */\n    hideSelector: function hideSelector(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        // reverse the process from showSelect\n        this.selectable = false;\n        this.trigger(\"selectable\", false, this);\n        if (speed) {\n            this.$selector().hide(speed);\n        } else {\n            this.$selector().hide();\n        }\n    },\n\n    /** Toggle whether the view is selected */\n    toggleSelect: function toggleSelect(event) {\n        if (this.selected) {\n            this.deselect(event);\n        } else {\n            this.select(event);\n        }\n    },\n\n    /** Select this view and re-render the selector control to show it\n     *  @param {Event} a jQuery event that caused the selection\n     *  @fires: selected which is passed the view and the DOM event that triggered it (optionally)\n     */\n    select: function select(event) {\n        // switch icon, set selected, and trigger event\n        if (!this.selected) {\n            this.trigger(\"selected\", this, event);\n            this.selected = true;\n            this._renderSelected();\n        }\n        return false;\n    },\n\n    /** De-select this view and re-render the selector control to show it\n     *  @param {Event} a jQuery event that caused the selection\n     *  @fires: de-selected which is passed the view and the DOM event that triggered it (optionally)\n     */\n    deselect: function deselect(event) {\n        // switch icon, set selected, and trigger event\n        if (this.selected) {\n            this.trigger(\"de-selected\", this, event);\n            this.selected = false;\n            this._renderSelected();\n        }\n        return false;\n    }\n};\n\n//==============================================================================\n/** Return an underscore template fn from an array of strings.\n *  @param {String[]} template      the template strings to compile into the underscore template fn\n *  @param {String} jsonNamespace   an optional namespace for the json data passed in (defaults to 'model')\n *  @returns {Function} the (wrapped) underscore template fn\n *      The function accepts:\n *\n *  The template strings can access:\n *      the json/model hash using model (\"<%- model.myAttr %>) using the jsonNamespace above\n *      _l: the localizer function\n *      view (if passed): ostensibly, the view using the template (handy for view instance vars)\n *      Because they're namespaced, undefined attributes will not throw an error.\n *\n *  @example:\n *      templateBler : BASE_MVC.wrapTemplate([\n *          '<div class=\"myclass <%- mynamespace.modelClass %>\">',\n *              '<span><% print( _l( mynamespace.message ) ); %>:<%= view.status %></span>'\n *          '</div>'\n *      ], 'mynamespace' )\n *\n *  Meant to be called in a View's definition in order to compile only once.\n *\n */\nfunction wrapTemplate(template, jsonNamespace) {\n    jsonNamespace = jsonNamespace || \"model\";\n    var templateFn = _.template(template.join(\"\"));\n    return function (json, view) {\n        var templateVars = { view: view || {}, _l: _localization2.default };\n        templateVars[jsonNamespace] = json || {};\n        return templateFn(templateVars);\n    };\n}\n\n//==============================================================================\n/** Return a comparator function for sorted Collections */\nfunction buildComparator(attribute_name, options) {\n    options = options || {};\n    var ascending = options.ascending ? 1 : -1;\n    return function __comparator(a, b) {\n        a = a.get(attribute_name);\n        b = b.get(attribute_name);\n        return (a < b ? -1 : a > b ? 1 : 0) * ascending;\n    };\n}\n\n//==============================================================================\nexports.default = {\n    LoggableMixin: LoggableMixin,\n    SessionStorageModel: SessionStorageModel,\n    mixin: mixin,\n    SearchableModelMixin: SearchableModelMixin,\n    HiddenUntilActivatedViewMixin: HiddenUntilActivatedViewMixin,\n    DraggableViewMixin: DraggableViewMixin,\n    SelectableViewMixin: SelectableViewMixin,\n    wrapTemplate: wrapTemplate,\n    buildComparator: buildComparator\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 6 */,\n/* 7 */,\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _uiFrames = __webpack_require__(17);\n\nvar _uiFrames2 = _interopRequireDefault(_uiFrames);\n\nvar _iconButton = __webpack_require__(18);\n\nvar _iconButton2 = _interopRequireDefault(_iconButton);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Dataset metedata.\n */\nvar DatasetMetadata = Backbone.Model.extend({});\n\n/**\n * A dataset. In Galaxy, datasets are associated with a history, so\n * this object is also known as a HistoryDatasetAssociation.\n */\n// Additional dependencies: jQuery, underscore.\nvar Dataset = Backbone.Model.extend({\n    defaults: {\n        id: \"\",\n        type: \"\",\n        name: \"\",\n        hda_ldda: \"hda\",\n        metadata: null\n    },\n\n    initialize: function initialize() {\n        // Metadata can be passed in as a model or a set of attributes; if it's\n        // already a model, there's no need to set metadata.\n        if (!this.get(\"metadata\")) {\n            this._set_metadata();\n        }\n\n        // Update metadata on change.\n        this.on(\"change\", this._set_metadata, this);\n    },\n\n    _set_metadata: function _set_metadata() {\n        var metadata = new DatasetMetadata();\n\n        // Move metadata from dataset attributes to metadata object.\n        _.each(_.keys(this.attributes), function (k) {\n            if (k.indexOf(\"metadata_\") === 0) {\n                // Found metadata.\n                var new_key = k.split(\"metadata_\")[1];\n                metadata.set(new_key, this.attributes[k]);\n                delete this.attributes[k];\n            }\n        }, this);\n\n        // Because this is an internal change, silence it.\n        this.set(\"metadata\", metadata, { silent: true });\n    },\n\n    /**\n     * Returns dataset metadata for a given attribute.\n     */\n    get_metadata: function get_metadata(attribute) {\n        return this.attributes.metadata.get(attribute);\n    },\n\n    urlRoot: Galaxy.root + \"api/datasets\"\n});\n\n/**\n * A tabular dataset. This object extends dataset to provide incremental chunked data.\n */\nvar TabularDataset = Dataset.extend({\n    defaults: _.extend({}, Dataset.prototype.defaults, {\n        chunk_url: null,\n        first_data_chunk: null,\n        offset: 0,\n        at_eof: false\n    }),\n\n    initialize: function initialize(options) {\n        Dataset.prototype.initialize.call(this);\n\n        // If first data chunk is available, next chunk is 1.\n        if (this.attributes.first_data_chunk) {\n            this.attributes.offset = this.attributes.first_data_chunk.offset;\n        }\n        this.attributes.chunk_url = Galaxy.root + \"dataset/display?dataset_id=\" + this.id;\n        this.attributes.url_viz = Galaxy.root + \"visualization\";\n    },\n\n    /**\n     * Returns a jQuery Deferred object that resolves to the next data chunk or null if at EOF.\n     */\n    get_next_chunk: function get_next_chunk() {\n        // If already at end of file, do nothing.\n        if (this.attributes.at_eof) {\n            return null;\n        }\n\n        // Get next chunk.\n        var self = this;\n\n        var next_chunk = $.Deferred();\n        $.getJSON(this.attributes.chunk_url, {\n            offset: self.attributes.offset\n        }).success(function (chunk) {\n            var rval;\n            if (chunk.ck_data !== \"\") {\n                // Found chunk.\n                rval = chunk;\n                self.attributes.offset = chunk.offset;\n            } else {\n                // At EOF.\n                self.attributes.at_eof = true;\n                rval = null;\n            }\n            next_chunk.resolve(rval);\n        });\n\n        return next_chunk;\n    }\n});\n\nvar DatasetCollection = Backbone.Collection.extend({\n    model: Dataset\n});\n\n/**\n * Provides a base for table-based, dynamic view of a tabular dataset.\n * Do not instantiate directly; use either TopLevelTabularDatasetChunkedView\n * or EmbeddedTabularDatasetChunkedView.\n */\nvar TabularDatasetChunkedView = Backbone.View.extend({\n    /**\n     * Initialize view and, importantly, set a scroll element.\n     */\n    initialize: function initialize(options) {\n        // Row count for rendering.\n        this.row_count = 0;\n        this.loading_chunk = false;\n\n        // load trackster button\n        new TabularButtonTracksterView({\n            model: options.model,\n            $el: this.$el\n        });\n    },\n\n    expand_to_container: function expand_to_container() {\n        if (this.$el.height() < this.scroll_elt.height()) {\n            this.attempt_to_fetch();\n        }\n    },\n\n    attempt_to_fetch: function attempt_to_fetch(func) {\n        var self = this;\n        if (!this.loading_chunk && this.scrolled_to_bottom()) {\n            this.loading_chunk = true;\n            this.loading_indicator.show();\n            $.when(self.model.get_next_chunk()).then(function (result) {\n                if (result) {\n                    self._renderChunk(result);\n                    self.loading_chunk = false;\n                }\n                self.loading_indicator.hide();\n                self.expand_to_container();\n            });\n        }\n    },\n\n    render: function render() {\n        // Add loading indicator.\n        this.loading_indicator = $(\"<div/>\").attr(\"id\", \"loading_indicator\");\n        this.$el.append(this.loading_indicator);\n\n        // Add data table and header.\n        var data_table = $(\"<table/>\").attr({\n            id: \"content_table\",\n            cellpadding: 0\n        });\n        this.$el.append(data_table);\n        var column_names = this.model.get_metadata(\"column_names\");\n        var header_container = $(\"<thead/>\").appendTo(data_table);\n        var header_row = $(\"<tr/>\").appendTo(header_container);\n        if (column_names) {\n            header_row.append(\"<th>\" + column_names.join(\"</th><th>\") + \"</th>\");\n        } else {\n            for (var j = 1; j <= this.model.get_metadata(\"columns\"); j++) {\n                header_row.append(\"<th>\" + j + \"</th>\");\n            }\n        }\n\n        // Render first chunk.\n        var self = this;\n\n        var first_chunk = this.model.get(\"first_data_chunk\");\n        if (first_chunk) {\n            // First chunk is bootstrapped, so render now.\n            this._renderChunk(first_chunk);\n        } else {\n            // No bootstrapping, so get first chunk and then render.\n            $.when(self.model.get_next_chunk()).then(function (result) {\n                self._renderChunk(result);\n            });\n        }\n\n        // -- Show new chunks during scrolling. --\n\n        // Set up chunk loading when scrolling using the scrolling element.\n        this.scroll_elt.scroll(function () {\n            self.attempt_to_fetch();\n        });\n    },\n\n    /**\n     * Returns true if user has scrolled to the bottom of the view.\n     */\n    scrolled_to_bottom: function scrolled_to_bottom() {\n        return false;\n    },\n\n    // -- Helper functions. --\n\n    _renderCell: function _renderCell(cell_contents, index, colspan) {\n        var $cell = $(\"<td>\").text(cell_contents);\n        var column_types = this.model.get_metadata(\"column_types\");\n        if (colspan !== undefined) {\n            $cell.attr(\"colspan\", colspan).addClass(\"stringalign\");\n        } else if (column_types) {\n            if (index < column_types.length) {\n                if (column_types[index] === \"str\" || column_types[index] === \"list\") {\n                    /* Left align all str columns, right align the rest */\n                    $cell.addClass(\"stringalign\");\n                }\n            }\n        }\n        return $cell;\n    },\n\n    _renderRow: function _renderRow(line) {\n        // Check length of cells to ensure this is a complete row.\n        var cells = line.split(\"\\t\");\n\n        var row = $(\"<tr>\");\n        var num_columns = this.model.get_metadata(\"columns\");\n\n        if (this.row_count % 2 !== 0) {\n            row.addClass(\"dark_row\");\n        }\n\n        if (cells.length === num_columns) {\n            _.each(cells, function (cell_contents, index) {\n                row.append(this._renderCell(cell_contents, index));\n            }, this);\n        } else if (cells.length > num_columns) {\n            // SAM file or like format with optional metadata included.\n            _.each(cells.slice(0, num_columns - 1), function (cell_contents, index) {\n                row.append(this._renderCell(cell_contents, index));\n            }, this);\n            row.append(this._renderCell(cells.slice(num_columns - 1).join(\"\\t\"), num_columns - 1));\n        } else if (cells.length === 1) {\n            // Comment line, just return the one cell.\n            row.append(this._renderCell(line, 0, num_columns));\n        } else {\n            // cells.length is greater than one, but less than num_columns.  Render cells and pad tds.\n            // Possibly a SAM file or like format with optional metadata missing.\n            // Could also be a tabular file with a line with missing columns.\n            _.each(cells, function (cell_contents, index) {\n                row.append(this._renderCell(cell_contents, index));\n            }, this);\n            _.each(_.range(num_columns - cells.length), function () {\n                row.append($(\"<td>\"));\n            });\n        }\n\n        this.row_count++;\n        return row;\n    },\n\n    _renderChunk: function _renderChunk(chunk) {\n        var data_table = this.$el.find(\"table\");\n        _.each(chunk.ck_data.split(\"\\n\"), function (line, index) {\n            if (line !== \"\") {\n                data_table.append(this._renderRow(line));\n            }\n        }, this);\n    }\n});\n\n/**\n * Tabular view that is placed at the top level of page. Scrolling occurs\n * view top-level elements outside of view.\n */\nvar TopLevelTabularDatasetChunkedView = TabularDatasetChunkedView.extend({\n    initialize: function initialize(options) {\n        TabularDatasetChunkedView.prototype.initialize.call(this, options);\n\n        // Scrolling happens in top-level elements.\n        var scroll_elt = _.find(this.$el.parents(), function (p) {\n            return $(p).css(\"overflow\") === \"auto\";\n        });\n\n        // If no scrolling element found, use window.\n        if (!scroll_elt) {\n            scroll_elt = window;\n        }\n\n        // Wrap scrolling element for easy access.\n        this.scroll_elt = $(scroll_elt);\n    },\n\n    /**\n     * Returns true if user has scrolled to the bottom of the view.\n     */\n    scrolled_to_bottom: function scrolled_to_bottom() {\n        return this.$el.height() - this.scroll_elt.scrollTop() - this.scroll_elt.height() <= 0;\n    }\n});\n\n/**\n * Tabular view tnat is embedded in a page. Scrolling occurs in view's el.\n */\nvar EmbeddedTabularDatasetChunkedView = TabularDatasetChunkedView.extend({\n    initialize: function initialize(options) {\n        TabularDatasetChunkedView.prototype.initialize.call(this, options);\n\n        // Because view is embedded, set up div to do scrolling.\n        this.scroll_elt = this.$el.css({\n            position: \"relative\",\n            overflow: \"scroll\",\n            height: options.height || \"500px\"\n        });\n    },\n\n    /**\n     * Returns true if user has scrolled to the bottom of the view.\n     */\n    scrolled_to_bottom: function scrolled_to_bottom() {\n        return this.$el.scrollTop() + this.$el.innerHeight() >= this.el.scrollHeight;\n    }\n});\n\n/** Button for trackster visualization */\nvar TabularButtonTracksterView = Backbone.View.extend({\n    // gene region columns\n    col: {\n        chrom: null,\n        start: null,\n        end: null\n    },\n\n    // url for trackster\n    url_viz: null,\n\n    // dataset id\n    dataset_id: null,\n\n    // database key\n    genome_build: null,\n\n    // data type\n    file_ext: null,\n\n    // backbone initialize\n    initialize: function initialize(options) {\n        // check if environment is available\n        var Galaxy = parent.Galaxy;\n\n        // link galaxy modal or create one\n        if (Galaxy && Galaxy.modal) {\n            this.modal = Galaxy.modal;\n        }\n\n        // link galaxy frames\n        if (Galaxy && Galaxy.frame) {\n            this.frame = Galaxy.frame;\n        }\n\n        // check\n        if (!this.modal || !this.frame) {\n            return;\n        }\n\n        // model/metadata\n        var model = options.model;\n        var metadata = model.get(\"metadata\");\n\n        // check for datatype\n        if (!model.get(\"file_ext\")) {\n            return;\n        }\n\n        // get data type\n        this.file_ext = model.get(\"file_ext\");\n\n        // check for bed-file format\n        if (this.file_ext == \"bed\") {\n            // verify that metadata exists\n            if (metadata.get(\"chromCol\") && metadata.get(\"startCol\") && metadata.get(\"endCol\")) {\n                // read in columns\n                this.col.chrom = metadata.get(\"chromCol\") - 1;\n                this.col.start = metadata.get(\"startCol\") - 1;\n                this.col.end = metadata.get(\"endCol\") - 1;\n            } else {\n                console.log(\"TabularButtonTrackster : Bed-file metadata incomplete.\");\n                return;\n            }\n        }\n\n        // check for vcf-file format\n        if (this.file_ext == \"vcf\") {\n            // search array\n            var search = function search(str, array) {\n                for (var j = 0; j < array.length; j++) {\n                    if (array[j].match(str)) return j;\n                }return -1;\n            };\n\n            // load\n\n\n            this.col.chrom = search(\"Chrom\", metadata.get(\"column_names\"));\n            this.col.start = search(\"Pos\", metadata.get(\"column_names\"));\n            this.col.end = null;\n\n            // verify that metadata exists\n            if (this.col.chrom == -1 || this.col.start == -1) {\n                console.log(\"TabularButtonTrackster : VCF-file metadata incomplete.\");\n                return;\n            }\n        }\n\n        // check\n        if (this.col.chrom === undefined) {\n            return;\n        }\n\n        // get dataset id\n        if (model.id) {\n            this.dataset_id = model.id;\n        } else {\n            console.log(\"TabularButtonTrackster : Dataset identification is missing.\");\n            return;\n        }\n\n        // get url\n        if (model.get(\"url_viz\")) {\n            this.url_viz = model.get(\"url_viz\");\n        } else {\n            console.log(\"TabularButtonTrackster : Url for visualization controller is missing.\");\n            return;\n        }\n\n        // get genome_build / database key\n        if (model.get(\"genome_build\")) {\n            this.genome_build = model.get(\"genome_build\");\n        }\n\n        // create the icon\n        var btn_viz = new _iconButton2.default.IconButtonView({\n            model: new _iconButton2.default.IconButton({\n                title: \"Visualize\",\n                icon_class: \"chart_curve\",\n                id: \"btn_viz\"\n            })\n        });\n\n        // set element\n        this.setElement(options.$el);\n\n        // add to element\n        this.$el.append(btn_viz.render().$el);\n\n        // hide the button\n        this.hide();\n    },\n\n    /** Add event handlers */\n    events: {\n        \"mouseover tr\": \"show\",\n        mouseleave: \"hide\"\n    },\n\n    // show button\n    show: function show(e) {\n        var self = this;\n\n        // is numeric\n        function is_numeric(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n\n        // check\n        if (this.col.chrom === null) return;\n\n        // get selected data line\n        var row = $(e.target).parent();\n\n        // verify that location has been found\n        var chrom = row.children().eq(this.col.chrom).html();\n        var start = row.children().eq(this.col.start).html();\n\n        // end is optional\n        var end = this.col.end ? row.children().eq(this.col.end).html() : start;\n\n        // double check location\n        if (!chrom.match(\"^#\") && chrom !== \"\" && is_numeric(start)) {\n            // get target gene region\n            var btn_viz_pars = {\n                dataset_id: this.dataset_id,\n                gene_region: chrom + \":\" + start + \"-\" + end\n            };\n\n            // get button position\n            var offset = row.offset();\n            var left = offset.left - 10;\n            var top = offset.top - $(window).scrollTop() + 3;\n\n            // update css\n            $(\"#btn_viz\").css({\n                position: \"fixed\",\n                top: top + \"px\",\n                left: left + \"px\"\n            });\n            $(\"#btn_viz\").off(\"click\");\n            $(\"#btn_viz\").click(function () {\n                self.frame.add({\n                    title: \"Trackster\",\n                    url: self.url_viz + \"/trackster?\" + $.param(btn_viz_pars)\n                });\n            });\n\n            // show the button\n            $(\"#btn_viz\").show();\n        } else {\n            // hide the button\n            $(\"#btn_viz\").hide();\n        }\n    },\n\n    /** hide button */\n    hide: function hide() {\n        this.$(\"#btn_viz\").hide();\n    }\n});\n\n// -- Utility functions. --\n\n/**\n * Create a model, attach it to a view, render view, and attach it to a parent element.\n */\nvar createModelAndView = function createModelAndView(model, view, model_config, parent_elt) {\n    // Create model, view.\n    var a_view = new view({\n        model: new model(model_config)\n    });\n\n    // Render view and add to parent element.\n    a_view.render();\n    if (parent_elt) {\n        parent_elt.append(a_view.$el);\n    }\n\n    return a_view;\n};\n\n/**\n * Create a tabular dataset chunked view (and requisite tabular dataset model)\n * and appends to parent_elt.\n */\nvar createTabularDatasetChunkedView = function createTabularDatasetChunkedView(options) {\n    // If no model, create and set model from dataset config.\n    if (!options.model) {\n        options.model = new TabularDataset(options.dataset_config);\n    }\n\n    var parent_elt = options.parent_elt;\n    var embedded = options.embedded;\n\n    // Clean up options so that only needed options are passed to view.\n    delete options.embedded;\n    delete options.parent_elt;\n    delete options.dataset_config;\n\n    // Create and set up view.\n    var view = embedded ? new EmbeddedTabularDatasetChunkedView(options) : new TopLevelTabularDatasetChunkedView(options);\n    view.render();\n\n    if (parent_elt) {\n        parent_elt.append(view.$el);\n        // If we're sticking this in another element, once it's appended check\n        // to make sure we've filled enough space.\n        // Without this, the scroll elements don't work.\n        view.expand_to_container();\n    }\n\n    return view;\n};\n\nexports.default = {\n    Dataset: Dataset,\n    TabularDataset: TabularDataset,\n    DatasetCollection: DatasetCollection,\n    TabularDatasetChunkedView: TabularDatasetChunkedView,\n    createTabularDatasetChunkedView: createTabularDatasetChunkedView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _data = __webpack_require__(8);\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _util = __webpack_require__(10);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _config = __webpack_require__(11);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _gridView = __webpack_require__(12);\n\nvar _gridView2 = _interopRequireDefault(_gridView);\n\nvar _uiTabs = __webpack_require__(21);\n\nvar _uiTabs2 = _interopRequireDefault(_uiTabs);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Mixin for returning custom JSON representation from toJSON. Class attribute to_json_keys defines a set of attributes\n * to include in the representation; to_json_mappers defines mappers for returned objects.\n */\nvar CustomToJSON = {\n    /**\n     * Returns JSON representation of object using to_json_keys and to_json_mappers.\n     */\n    toJSON: function toJSON() {\n        var self = this;\n        var json = {};\n        _.each(self.constructor.to_json_keys, function (k) {\n            var val = self.get(k);\n            if (k in self.constructor.to_json_mappers) {\n                val = self.constructor.to_json_mappers[k](val, self);\n            }\n            json[k] = val;\n        });\n        return json;\n    }\n};\n\n/**\n * Model, view, and controller objects for Galaxy visualization framework.\n *\n * Models have no references to views, instead using events to indicate state\n * changes; this is advantageous because multiple views can use the same object\n * and models can be used without views.\n */\n\n/**\n * Use a popup grid to select datasets from histories or libraries. After datasets are selected,\n * track definitions are obtained from the server and the success_fn is called with the list of\n * definitions for selected datasets.\n */\nvar select_datasets = function select_datasets(filters, success_fn) {\n    // history dataset selection tab\n    var history_grid = new _gridView2.default({\n        url_base: Galaxy.root + \"visualization/list_history_datasets\",\n        filters: filters,\n        dict_format: true,\n        embedded: true\n    });\n\n    // library dataset selection tab\n    var library_grid = new _gridView2.default({\n        url_base: Galaxy.root + \"visualization/list_library_datasets\",\n        dict_format: true,\n        embedded: true\n    });\n\n    // build tabs\n    var tabs = new _uiTabs2.default.View();\n    tabs.add({\n        id: \"histories\",\n        title: \"Histories\",\n        $el: $(\"<div/>\").append(history_grid.$el)\n    });\n    tabs.add({\n        id: \"libraries\",\n        title: \"Libraries\",\n        $el: $(\"<div/>\").append(library_grid.$el)\n    });\n\n    // modal\n    Galaxy.modal.show({\n        title: \"Select datasets for new tracks\",\n        body: tabs.$el,\n        closing_events: true,\n        buttons: {\n            Cancel: function Cancel() {\n                Galaxy.modal.hide();\n            },\n            Add: function Add() {\n                var requests = [];\n                tabs.$(\"input.grid-row-select-checkbox[name=id]:checked\").each(function () {\n                    window.console.log($(this).val());\n                    requests[requests.length] = $.ajax({\n                        url: Galaxy.root + \"api/datasets/\" + $(this).val(),\n                        dataType: \"json\",\n                        data: {\n                            data_type: \"track_config\",\n                            hda_ldda: tabs.current() == \"histories\" ? \"hda\" : \"ldda\"\n                        }\n                    });\n                });\n                // To preserve order, wait until there are definitions for all tracks and then add\n                // them sequentially.\n                $.when.apply($, requests).then(function () {\n                    // jQuery always returns an Array for arguments, so need to look at first element\n                    // to determine whether multiple requests were made and consequently how to\n                    // map arguments to track definitions.\n                    var track_defs = arguments[0] instanceof Array ? $.map(arguments, function (arg) {\n                        return arg[0];\n                    }) : [arguments[0]];\n                    success_fn(track_defs);\n                });\n                Galaxy.modal.hide();\n            }\n        }\n    });\n};\n\n// --------- Models ---------\n\n/**\n * Canvas manager is used to create canvases for browsers as well as providing a pattern cache\n */\nvar CanvasManager = function CanvasManager(default_font) {\n    this.default_font = default_font !== undefined ? default_font : \"9px Monaco, Lucida Console, monospace\";\n\n    this.dummy_canvas = this.new_canvas();\n    this.dummy_context = this.dummy_canvas.getContext(\"2d\");\n    this.dummy_context.font = this.default_font;\n\n    this.char_width_px = this.dummy_context.measureText(\"A\").width;\n\n    this.patterns = {};\n\n    // FIXME: move somewhere to make this more general\n    this.load_pattern(\"right_strand\", \"/visualization/strand_right.png\");\n    this.load_pattern(\"left_strand\", \"/visualization/strand_left.png\");\n    this.load_pattern(\"right_strand_inv\", \"/visualization/strand_right_inv.png\");\n    this.load_pattern(\"left_strand_inv\", \"/visualization/strand_left_inv.png\");\n};\n\n_.extend(CanvasManager.prototype, {\n    load_pattern: function load_pattern(key, path) {\n        var patterns = this.patterns;\n        var dummy_context = this.dummy_context;\n        var image = new Image();\n        image.src = Galaxy.root + \"static/images\" + path;\n        image.onload = function () {\n            patterns[key] = dummy_context.createPattern(image, \"repeat\");\n        };\n    },\n    get_pattern: function get_pattern(key) {\n        return this.patterns[key];\n    },\n    new_canvas: function new_canvas() {\n        var canvas = $(\"<canvas/>\")[0];\n        // Keep a reference back to the manager\n        canvas.manager = this;\n        return canvas;\n    }\n});\n\n/**\n * Generic cache that handles key/value pairs. Keys can be any object that can be\n * converted to a String and compared.\n */\nvar Cache = Backbone.Model.extend({\n    defaults: {\n        num_elements: 20,\n        // Objects in cache; indexes into cache are strings of keys.\n        obj_cache: null,\n        // key_ary contains keys for objects in cache.\n        key_ary: null\n    },\n\n    initialize: function initialize(options) {\n        this.clear();\n    },\n\n    /**\n     * Get an element from the cache using its key.\n     */\n    get_elt: function get_elt(key) {\n        var obj_cache = this.attributes.obj_cache;\n        var key_ary = this.attributes.key_ary;\n        var key_str = key.toString();\n\n        var index = _.indexOf(key_ary, function (k) {\n            return k.toString() === key_str;\n        });\n\n        // Update cache.\n        if (index !== -1) {\n            // Object is in cache, so update it.\n            if (obj_cache[key_str].stale) {\n                // Object is stale: remove key and object.\n                key_ary.splice(index, 1);\n                delete obj_cache[key_str];\n            } else {\n                // Move key to back because it is most recently used.\n                this.move_key_to_end(key, index);\n            }\n        }\n\n        return obj_cache[key_str];\n    },\n\n    /**\n     * Put an element into the cache.\n     */\n    set_elt: function set_elt(key, value) {\n        var obj_cache = this.attributes.obj_cache;\n        var key_ary = this.attributes.key_ary;\n        var key_str = key.toString();\n        var num_elements = this.attributes.num_elements;\n\n        // Update keys, objects.\n        if (!obj_cache[key_str]) {\n            // Add object to cache.\n\n            if (key_ary.length >= num_elements) {\n                // Cache full, so remove first element.\n                var deleted_key = key_ary.shift();\n                delete obj_cache[deleted_key.toString()];\n            }\n\n            // Add key.\n            key_ary.push(key);\n        }\n\n        // Add object.\n        obj_cache[key_str] = value;\n        return value;\n    },\n\n    /**\n     * Move key to end of cache. Keys are removed from the front, so moving a key to the end\n     * delays the key's removal.\n     */\n    move_key_to_end: function move_key_to_end(key, index) {\n        this.attributes.key_ary.splice(index, 1);\n        this.attributes.key_ary.push(key);\n    },\n\n    /**\n     * Clear all elements from the cache.\n     */\n    clear: function clear() {\n        this.attributes.obj_cache = {};\n        this.attributes.key_ary = [];\n    },\n\n    /** Returns the number of elements in the cache. */\n    size: function size() {\n        return this.attributes.key_ary.length;\n    },\n\n    /** Returns key most recently added to cache. */\n    most_recently_added: function most_recently_added() {\n        return this.size() === 0 ? null : // Most recent key is at the end of key array.\n        this.attributes.key_ary[this.attributes.key_ary.length - 1];\n    }\n});\n\n/**\n * Data manager for genomic data. Data is connected to and queryable by genomic regions.\n */\nvar GenomeDataManager = Cache.extend({\n    defaults: _.extend({}, Cache.prototype.defaults, {\n        dataset: null,\n        genome: null,\n        init_data: null,\n        min_region_size: 200,\n        filters_manager: null,\n        data_type: \"data\",\n        data_mode_compatible: function data_mode_compatible(entry, mode) {\n            return true;\n        },\n        can_subset: function can_subset(entry) {\n            return false;\n        }\n    }),\n\n    /**\n     * Initialization.\n     */\n    initialize: function initialize(options) {\n        Cache.prototype.initialize.call(this);\n\n        // Set initial entries in data manager.\n        var initial_entries = this.get(\"init_data\");\n        if (initial_entries) {\n            this.add_data(initial_entries);\n        }\n    },\n\n    /**\n     * Add data entries to manager; each entry should be a dict with attributes region (key), data, and data_type.\n     * If necessary, manager size is increased to hold all data.\n     */\n    add_data: function add_data(entries) {\n        // Increase size to accomodate all entries.\n        if (this.get(\"num_elements\") < entries.length) {\n            this.set(\"num_elements\", entries.length);\n        }\n\n        // Put data into manager.\n        var self = this;\n        _.each(entries, function (entry) {\n            self.set_data(entry.region, entry);\n        });\n    },\n\n    /**\n     * Returns deferred that resolves to true when dataset is ready (or false if dataset\n     * cannot be used).\n     */\n    data_is_ready: function data_is_ready() {\n        var dataset = this.get(\"dataset\");\n        var ready_deferred = $.Deferred();\n\n        var // If requesting raw data, query dataset state; if requesting (converted) data,\n        // need to query converted datasets state.\n        query_type = this.get(\"data_type\") === \"raw_data\" ? \"state\" : this.get(\"data_type\") === \"data\" ? \"converted_datasets_state\" : \"error\";\n\n        var ss_deferred = new _util2.default.ServerStateDeferred({\n            ajax_settings: {\n                url: this.get(\"dataset\").url(),\n                data: {\n                    hda_ldda: dataset.get(\"hda_ldda\"),\n                    data_type: query_type\n                },\n                dataType: \"json\"\n            },\n            interval: 5000,\n            success_fn: function success_fn(response) {\n                return response !== \"pending\";\n            }\n        });\n\n        $.when(ss_deferred.go()).then(function (response) {\n            ready_deferred.resolve(response === \"ok\" || response === \"data\");\n        });\n        return ready_deferred;\n    },\n\n    /**\n     * Perform a feature search from server; returns Deferred object that resolves when data is available.\n     */\n    search_features: function search_features(query) {\n        var dataset = this.get(\"dataset\");\n\n        var params = {\n            query: query,\n            hda_ldda: dataset.get(\"hda_ldda\"),\n            data_type: \"features\"\n        };\n\n        return $.getJSON(dataset.url(), params);\n    },\n\n    /**\n     * Load data from server and manages data entries. Adds a Deferred to manager\n     * for region; when data becomes available, replaces Deferred with data.\n     * Returns the Deferred that resolves when data is available.\n     */\n    load_data: function load_data(region, mode, resolution, extra_params) {\n        // Setup data request params.\n        var dataset = this.get(\"dataset\");\n\n        var params = {\n            data_type: this.get(\"data_type\"),\n            chrom: region.get(\"chrom\"),\n            low: region.get(\"start\"),\n            high: region.get(\"end\"),\n            mode: mode,\n            resolution: resolution,\n            hda_ldda: dataset.get(\"hda_ldda\")\n        };\n\n        $.extend(params, extra_params);\n\n        // Add track filters to params.\n        var filters_manager = this.get(\"filters_manager\");\n        if (filters_manager) {\n            var filter_names = [];\n            var filters = filters_manager.filters;\n            for (var i = 0; i < filters.length; i++) {\n                filter_names.push(filters[i].name);\n            }\n            params.filter_cols = JSON.stringify(filter_names);\n        }\n\n        // Do request.\n        var manager = this;\n\n        var entry = $.getJSON(dataset.url(), params, function (result) {\n            // Add region to the result.\n            result.region = region;\n            manager.set_data(region, result);\n        });\n\n        this.set_data(region, entry);\n        return entry;\n    },\n\n    /**\n     * Get data from dataset.\n     */\n    get_data: function get_data(region, mode, resolution, extra_params) {\n        // Look for entry and return if it's a deferred or if data available is compatible with mode.\n        var entry = this.get_elt(region);\n        if (entry && (_util2.default.is_deferred(entry) || this.get(\"data_mode_compatible\")(entry, mode))) {\n            return entry;\n        }\n\n        //\n        // Look in cache for data that can be used.\n        // TODO: this logic could be improved if the visualization knew whether\n        // the data was \"index\" or \"data.\"\n        //\n        var key_ary = this.get(\"key_ary\");\n\n        var obj_cache = this.get(\"obj_cache\");\n        var entry_region;\n        var is_subregion;\n        for (var i = 0; i < key_ary.length; i++) {\n            entry_region = key_ary[i];\n\n            if (entry_region.contains(region)) {\n                is_subregion = true;\n\n                // This entry has data in the requested range. Return if data\n                // is compatible and can be subsetted.\n                entry = obj_cache[entry_region.toString()];\n                if (_util2.default.is_deferred(entry) || this.get(\"data_mode_compatible\")(entry, mode) && this.get(\"can_subset\")(entry)) {\n                    this.move_key_to_end(entry_region, i);\n\n                    // If there's data, subset it.\n                    if (!_util2.default.is_deferred(entry)) {\n                        var subset_entry = this.subset_entry(entry, region);\n                        this.set_data(region, subset_entry);\n                        entry = subset_entry;\n                    }\n\n                    return entry;\n                }\n            }\n        }\n\n        // FIXME: There _may_ be instances where region is a subregion of another entry but cannot be\n        // subsetted. For these cases, do not increase length because region will never be found (and\n        // an infinite loop will occur.)\n        // If needed, extend region to make it minimum size.\n        if (!is_subregion && region.length() < this.attributes.min_region_size) {\n            // IDEA: alternative heuristic is to find adjacent cache entry to region and use that to extend.\n            // This would prevent bad extensions when zooming in/out while still preserving the behavior\n            // below.\n\n            // Use copy of region to avoid changing actual region.\n            region = region.copy();\n\n            // Use heuristic to extend region: extend relative to last data request.\n            var last_request = this.most_recently_added();\n            if (!last_request || region.get(\"start\") > last_request.get(\"start\")) {\n                // This request is after the last request, so extend right.\n                region.set(\"end\", region.get(\"start\") + this.attributes.min_region_size);\n            } else {\n                // This request is after the last request, so extend left.\n                region.set(\"start\", region.get(\"end\") - this.attributes.min_region_size);\n            }\n\n            // Trim region to avoid invalid coordinates.\n            region.set(\"genome\", this.attributes.genome);\n            region.trim();\n        }\n\n        return this.load_data(region, mode, resolution, extra_params);\n    },\n\n    /**\n     * Alias for set_elt for readbility.\n     */\n    set_data: function set_data(region, entry) {\n        this.set_elt(region, entry);\n    },\n\n    /** \"Deep\" data request; used as a parameter for DataManager.get_more_data() */\n    DEEP_DATA_REQ: \"deep\",\n\n    /** \"Broad\" data request; used as a parameter for DataManager.get_more_data() */\n    BROAD_DATA_REQ: \"breadth\",\n\n    /**\n     * Gets more data for a region using either a depth-first or a breadth-first approach.\n     */\n    get_more_data: function get_more_data(region, mode, resolution, extra_params, req_type) {\n        var cur_data = this._mark_stale(region);\n        if (!(cur_data && this.get(\"data_mode_compatible\")(cur_data, mode))) {\n            console.log(\"ERROR: problem with getting more data: current data is not compatible\");\n            return;\n        }\n\n        //\n        // Set parameters based on request type.\n        //\n        var query_low = region.get(\"start\");\n        if (req_type === this.DEEP_DATA_REQ) {\n            // Use same interval but set start_val to skip data that's already in cur_data.\n            $.extend(extra_params, {\n                start_val: cur_data.data.length + 1\n            });\n        } else if (req_type === this.BROAD_DATA_REQ) {\n            // To get past an area of extreme feature depth, set query low to be after either\n            // (a) the maximum high or HACK/FIXME (b) the end of the last feature returned.\n            query_low = (cur_data.max_high ? cur_data.max_high : cur_data.data[cur_data.data.length - 1][2]) + 1;\n        }\n        var query_region = region.copy().set(\"start\", query_low);\n\n        //\n        // Get additional data, append to current data, and set new data. Use a custom deferred object\n        // to signal when new data is available.\n        //\n        var data_manager = this;\n\n        var new_data_request = this.load_data(query_region, mode, resolution, extra_params);\n\n        var new_data_available = $.Deferred();\n        // load_data sets cache to new_data_request, but use custom deferred object so that signal and data\n        // is all data, not just new data.\n        this.set_data(region, new_data_available);\n        $.when(new_data_request).then(function (result) {\n            // Update data and message.\n            if (result.data) {\n                result.data = cur_data.data.concat(result.data);\n                if (result.max_low) {\n                    result.max_low = cur_data.max_low;\n                }\n                if (result.message) {\n                    // HACK: replace number in message with current data length. Works but is ugly.\n                    result.message = result.message.replace(/[0-9]+/, result.data.length);\n                }\n            }\n            data_manager.set_data(region, result);\n            new_data_available.resolve(result);\n        });\n        return new_data_available;\n    },\n\n    /**\n     * Returns true if more detailed data can be obtained for entry.\n     */\n    can_get_more_detailed_data: function can_get_more_detailed_data(region) {\n        var cur_data = this.get_elt(region);\n\n        // Can only get more detailed data for bigwig data that has less than 8000 data points.\n        // Summary tree returns *way* too much data, and 8000 data points ~ 500KB.\n        return cur_data.dataset_type === \"bigwig\" && cur_data.data.length < 8000;\n    },\n\n    /**\n     * Returns more detailed data for an entry.\n     */\n    get_more_detailed_data: function get_more_detailed_data(region, mode, resolution, detail_multiplier, extra_params) {\n        // Mark current entry as stale.\n        var cur_data = this._mark_stale(region);\n        if (!cur_data) {\n            console.log(\"ERROR getting more detailed data: no current data\");\n            return;\n        }\n\n        if (!extra_params) {\n            extra_params = {};\n        }\n\n        // Use additional parameters to get more detailed data.\n        if (cur_data.dataset_type === \"bigwig\") {\n            // FIXME: constant should go somewhere.\n            extra_params.num_samples = 1000 * detail_multiplier;\n        }\n\n        return this.load_data(region, mode, resolution, extra_params);\n    },\n\n    /**\n     * Marks cache data as stale.\n     */\n    _mark_stale: function _mark_stale(region) {\n        var entry = this.get_elt(region);\n        if (!entry) {\n            console.log(\"ERROR: no data to mark as stale: \", this.get(\"dataset\"), region.toString());\n        }\n        entry.stale = true;\n        return entry;\n    },\n\n    /**\n     * Returns an array of data with each entry representing one chromosome/contig\n     * of data or, if data is not available, returns a Deferred that resolves to the\n     * data when it becomes available.\n     */\n    get_genome_wide_data: function get_genome_wide_data(genome) {\n        // -- Get all data. --\n\n        var self = this;\n\n        var all_data_available = true;\n\n        var //  Map chromosome info into genome data.\n        gw_data = _.map(genome.get(\"chroms_info\").chrom_info, function (chrom_info) {\n            var chrom_data = self.get_elt(new GenomeRegion({\n                chrom: chrom_info.chrom,\n                start: 0,\n                end: chrom_info.len\n            }));\n\n            // Set flag if data is not available.\n            if (!chrom_data) {\n                all_data_available = false;\n            }\n\n            return chrom_data;\n        });\n\n        // -- If all data is available, return it. --\n        if (all_data_available) {\n            return gw_data;\n        }\n\n        // -- All data is not available, so load from server. --\n\n        var deferred = $.Deferred();\n        $.getJSON(this.get(\"dataset\").url(), { data_type: \"genome_data\" }, function (genome_wide_data) {\n            self.add_data(genome_wide_data.data);\n            deferred.resolve(genome_wide_data.data);\n        });\n\n        return deferred;\n    },\n\n    /**\n     * Returns entry with only data in the subregion.\n     */\n    subset_entry: function subset_entry(entry, subregion) {\n        // Dictionary from entry type to function for subsetting data.\n        var subset_fns = {\n            bigwig: function bigwig(data, subregion) {\n                return _.filter(data, function (data_point) {\n                    return data_point[0] >= subregion.get(\"start\") && data_point[0] <= subregion.get(\"end\");\n                });\n            },\n            refseq: function refseq(data, subregion) {\n                var seq_start = subregion.get(\"start\") - entry.region.get(\"start\");\n                return entry.data.slice(seq_start, seq_start + subregion.length());\n            }\n        };\n\n        // Subset entry if there is a function for subsetting and regions are not the same.\n        var subregion_data = entry.data;\n        if (!entry.region.same(subregion) && entry.dataset_type in subset_fns) {\n            subregion_data = subset_fns[entry.dataset_type](entry.data, subregion);\n        }\n\n        // Return entry with subregion's data.\n        return {\n            region: subregion,\n            data: subregion_data,\n            dataset_type: entry.dataset_type\n        };\n    }\n});\n\nvar GenomeReferenceDataManager = GenomeDataManager.extend({\n    initialize: function initialize(options) {\n        // Use generic object in place of dataset and set urlRoot to fetch data.\n        var dataset_placeholder = new Backbone.Model();\n        dataset_placeholder.urlRoot = options.data_url;\n        this.set(\"dataset\", dataset_placeholder);\n    },\n\n    load_data: function load_data(region, mode, resolution, extra_params) {\n        // Fetch data if region is not too large.\n        return region.length() <= 100000 ? GenomeDataManager.prototype.load_data.call(this, region, mode, resolution, extra_params) : { data: null, region: region };\n    }\n});\n\n/**\n * A genome build.\n */\nvar Genome = Backbone.Model.extend({\n    defaults: {\n        name: null,\n        key: null,\n        chroms_info: null\n    },\n\n    initialize: function initialize(options) {\n        this.id = options.dbkey;\n    },\n\n    /**\n     * Shorthand for getting to chromosome information.\n     */\n    get_chroms_info: function get_chroms_info() {\n        return this.attributes.chroms_info.chrom_info;\n    },\n\n    /**\n     * Returns a GenomeRegion object denoting a complete chromosome.\n     */\n    get_chrom_region: function get_chrom_region(chr_name) {\n        // FIXME: use findWhere in underscore 1.4\n        var chrom_info = _.find(this.get_chroms_info(), function (chrom_info) {\n            return chrom_info.chrom === chr_name;\n        });\n        return new GenomeRegion({\n            chrom: chrom_info.chrom,\n            end: chrom_info.len\n        });\n    },\n\n    /** Returns the length of a chromosome. */\n    get_chrom_len: function get_chrom_len(chr_name) {\n        // FIXME: use findWhere in underscore 1.4\n        return _.find(this.get_chroms_info(), function (chrom_info) {\n            return chrom_info.chrom === chr_name;\n        }).len;\n    }\n});\n\n/**\n * A genomic region.\n */\nvar GenomeRegion = Backbone.Model.extend({\n    defaults: {\n        chrom: null,\n        start: 0,\n        end: 0,\n        str_val: null,\n        genome: null\n    },\n\n    /**\n     * Returns true if this region is the same as a given region.\n     * It does not test the genome right now.\n     */\n    same: function same(region) {\n        return this.attributes.chrom === region.get(\"chrom\") && this.attributes.start === region.get(\"start\") && this.attributes.end === region.get(\"end\");\n    },\n\n    /**\n     * If from_str specified, use it to initialize attributes.\n     */\n    initialize: function initialize(options) {\n        if (options.from_str) {\n            var pieces = options.from_str.split(\":\");\n            var chrom = pieces[0];\n            var start_end = pieces[1].split(\"-\");\n            this.set({\n                chrom: chrom,\n                start: parseInt(start_end[0], 10),\n                end: parseInt(start_end[1], 10)\n            });\n        }\n\n        // Keep a copy of region's string value for fast lookup.\n        this.attributes.str_val = this.get(\"chrom\") + \":\" + this.get(\"start\") + \"-\" + this.get(\"end\");\n\n        // Set str_val on attribute change.\n        this.on(\"change\", function () {\n            this.attributes.str_val = this.get(\"chrom\") + \":\" + this.get(\"start\") + \"-\" + this.get(\"end\");\n        }, this);\n    },\n\n    copy: function copy() {\n        return new GenomeRegion({\n            chrom: this.get(\"chrom\"),\n            start: this.get(\"start\"),\n            end: this.get(\"end\")\n        });\n    },\n\n    length: function length() {\n        return this.get(\"end\") - this.get(\"start\");\n    },\n\n    /** Returns region in canonical form chrom:start-end */\n    toString: function toString() {\n        return this.attributes.str_val;\n    },\n\n    toJSON: function toJSON() {\n        return {\n            chrom: this.get(\"chrom\"),\n            start: this.get(\"start\"),\n            end: this.get(\"end\")\n        };\n    },\n\n    /**\n     * Compute the type of overlap between this region and another region. The overlap is computed relative to the given/second region;\n     * hence, OVERLAP_START indicates that the first region overlaps the start (but not the end) of the second region.\n     */\n    compute_overlap: function compute_overlap(a_region) {\n        var first_chrom = this.get(\"chrom\");\n        var second_chrom = a_region.get(\"chrom\");\n        var first_start = this.get(\"start\");\n        var second_start = a_region.get(\"start\");\n        var first_end = this.get(\"end\");\n        var second_end = a_region.get(\"end\");\n        var overlap;\n\n        // Compare chroms.\n        if (first_chrom && second_chrom && first_chrom !== second_chrom) {\n            return GenomeRegion.overlap_results.DIF_CHROMS;\n        }\n\n        // Compare regions.\n        if (first_start < second_start) {\n            if (first_end < second_start) {\n                overlap = GenomeRegion.overlap_results.BEFORE;\n            } else if (first_end < second_end) {\n                overlap = GenomeRegion.overlap_results.OVERLAP_START;\n            } else {\n                // first_end >= second_end\n                overlap = GenomeRegion.overlap_results.CONTAINS;\n            }\n        } else if (first_start > second_start) {\n            if (first_start > second_end) {\n                overlap = GenomeRegion.overlap_results.AFTER;\n            } else if (first_end <= second_end) {\n                overlap = GenomeRegion.overlap_results.CONTAINED_BY;\n            } else {\n                overlap = GenomeRegion.overlap_results.OVERLAP_END;\n            }\n        } else {\n            // first_start === second_start\n            overlap = first_end >= second_end ? GenomeRegion.overlap_results.CONTAINS : GenomeRegion.overlap_results.CONTAINED_BY;\n        }\n\n        return overlap;\n    },\n\n    /**\n     * Trim a region to match genome's constraints.\n     */\n    trim: function trim(genome) {\n        // Assume that all chromosome/contigs start at 0.\n        if (this.attributes.start < 0) {\n            this.attributes.start = 0;\n        }\n\n        // Only try to trim the end if genome is set.\n        if (this.attributes.genome) {\n            var chrom_len = this.attributes.genome.get_chrom_len(this.attributes.chrom);\n            if (this.attributes.end > chrom_len) {\n                this.attributes.end = chrom_len - 1;\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * Returns true if this region contains a given region.\n     */\n    contains: function contains(a_region) {\n        return this.compute_overlap(a_region) === GenomeRegion.overlap_results.CONTAINS;\n    },\n\n    /**\n     * Returns true if regions overlap.\n     */\n    overlaps: function overlaps(a_region) {\n        return _.intersection([this.compute_overlap(a_region)], [GenomeRegion.overlap_results.DIF_CHROMS, GenomeRegion.overlap_results.BEFORE, GenomeRegion.overlap_results.AFTER]).length === 0;\n    }\n}, {\n    overlap_results: {\n        DIF_CHROMS: 1000,\n        BEFORE: 1001,\n        CONTAINS: 1002,\n        OVERLAP_START: 1003,\n        OVERLAP_END: 1004,\n        CONTAINED_BY: 1005,\n        AFTER: 1006\n    }\n});\n\nvar GenomeRegionCollection = Backbone.Collection.extend({\n    model: GenomeRegion\n});\n\n/**\n * A genome browser bookmark.\n */\nvar BrowserBookmark = Backbone.Model.extend({\n    defaults: {\n        region: null,\n        note: \"\"\n    },\n\n    initialize: function initialize(options) {\n        this.set(\"region\", new GenomeRegion(options.region));\n    }\n});\n\n/**\n * Bookmarks collection.\n */\nvar BrowserBookmarkCollection = Backbone.Collection.extend({\n    model: BrowserBookmark\n});\n\n/**\n * A track of data in a genome visualization.\n */\n// TODO: rename to Track and merge with Trackster's Track object.\nvar BackboneTrack = Backbone.Model.extend(CustomToJSON).extend({\n    defaults: {\n        mode: \"Auto\"\n    },\n\n    initialize: function initialize(options) {\n        this.set(\"dataset\", new _data2.default.Dataset(options.dataset));\n\n        // -- Set up config settings. --\n        var models = [{\n            key: \"name\",\n            default_value: this.get(\"dataset\").get(\"name\")\n        }, { key: \"color\" }, {\n            key: \"min_value\",\n            label: \"Min Value\",\n            type: \"float\",\n            default_value: 0\n        }, {\n            key: \"max_value\",\n            label: \"Max Value\",\n            type: \"float\",\n            default_value: 1\n        }];\n\n        this.set(\"config\", _config2.default.ConfigSettingCollection.from_models_and_saved_values(models, options.prefs));\n\n        // -- Set up data manager. --\n        var preloaded_data = this.get(\"preloaded_data\");\n        if (preloaded_data) {\n            preloaded_data = preloaded_data.data;\n        } else {\n            preloaded_data = [];\n        }\n        this.set(\"data_manager\", new GenomeDataManager({\n            dataset: this.get(\"dataset\"),\n            init_data: preloaded_data\n        }));\n    }\n}, {\n    // This definition matches that produced by to_dict() methods in tracks.js\n    to_json_keys: [\"track_type\", \"dataset\", \"prefs\", \"mode\", \"filters\", \"tool_state\"],\n    to_json_mappers: {\n        prefs: function prefs(p, self) {\n            if (_.size(p) === 0) {\n                p = {\n                    name: self.get(\"config\").get(\"name\").get(\"value\"),\n                    color: self.get(\"config\").get(\"color\").get(\"value\")\n                };\n            }\n            return p;\n        },\n        dataset: function dataset(d) {\n            return {\n                id: d.id,\n                hda_ldda: d.get(\"hda_ldda\")\n            };\n        }\n    }\n});\n\nvar BackboneTrackCollection = Backbone.Collection.extend({\n    model: BackboneTrack\n});\n\n/**\n * A visualization.\n */\nvar Visualization = Backbone.Model.extend({\n    defaults: {\n        title: \"\",\n        type: \"\"\n    },\n\n    urlRoot: Galaxy.root + \"api/visualizations\",\n\n    /**\n     * POSTs visualization's JSON to its URL using the parameter 'vis_json'\n     * Note: This is necessary because (a) Galaxy requires keyword args and\n     * (b) Galaxy does not handle PUT now.\n     */\n    save: function save() {\n        return $.ajax({\n            url: this.url(),\n            type: \"POST\",\n            dataType: \"json\",\n            data: {\n                vis_json: JSON.stringify(this)\n            }\n        });\n    }\n});\n\n/**\n * A visualization of genome data.\n */\nvar GenomeVisualization = Visualization.extend(CustomToJSON).extend({\n    defaults: _.extend({}, Visualization.prototype.defaults, {\n        dbkey: \"\",\n        drawables: null,\n        bookmarks: null,\n        viewport: null\n    }),\n\n    initialize: function initialize(options) {\n        // Replace drawables with tracks.\n        this.set(\"drawables\", new BackboneTrackCollection(options.tracks));\n\n        var models = [];\n        this.set(\"config\", _config2.default.ConfigSettingCollection.from_models_and_saved_values(models, options.prefs));\n\n        // Clear track and data definitions to avoid storing large objects.\n        this.unset(\"tracks\");\n        this.get(\"drawables\").each(function (d) {\n            d.unset(\"preloaded_data\");\n        });\n    },\n\n    /**\n     * Add a track or array of tracks to the visualization.\n     */\n    add_tracks: function add_tracks(tracks) {\n        this.get(\"drawables\").add(tracks);\n    }\n}, {\n    // This definition matches that produced by to_dict() methods in tracks.js\n    to_json_keys: [\"view\", \"viewport\", \"bookmarks\"],\n\n    to_json_mappers: {\n        view: function view(dummy, self) {\n            return {\n                obj_type: \"View\",\n                prefs: {\n                    name: self.get(\"title\"),\n                    content_visible: true\n                },\n                drawables: self.get(\"drawables\")\n            };\n        }\n    }\n});\n\n/**\n * -- Routers --\n */\n\n/**\n * Router for track browser.\n */\nvar TrackBrowserRouter = Backbone.Router.extend({\n    initialize: function initialize(options) {\n        this.view = options.view;\n\n        // Can't put regular expression in routes dictionary.\n        // NOTE: parentheses are used to denote parameters returned to callback.\n        this.route(/([\\w]+)$/, \"change_location\");\n        this.route(/([\\w\\+]+\\:[\\d,]+-[\\d,]+)$/, \"change_location\");\n\n        // Handle navigate events from view.\n        var self = this;\n        self.view.on(\"navigate\", function (new_loc) {\n            self.navigate(new_loc);\n        });\n    },\n\n    change_location: function change_location(new_loc) {\n        this.view.go_to(new_loc);\n    }\n});\n\nexports.default = {\n    BackboneTrack: BackboneTrack,\n    BrowserBookmark: BrowserBookmark,\n    BrowserBookmarkCollection: BrowserBookmarkCollection,\n    Cache: Cache,\n    CanvasManager: CanvasManager,\n    Genome: Genome,\n    GenomeDataManager: GenomeDataManager,\n    GenomeRegion: GenomeRegion,\n    GenomeRegionCollection: GenomeRegionCollection,\n    GenomeVisualization: GenomeVisualization,\n    GenomeReferenceDataManager: GenomeReferenceDataManager,\n    TrackBrowserRouter: TrackBrowserRouter,\n    Visualization: Visualization,\n    select_datasets: select_datasets\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * Stringifies a number adding commas for digit grouping as per North America.\n */\nfunction commatize(number) {\n    number += \"\"; // Convert to string\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(number)) {\n        number = number.replace(rgx, \"$1\" + \",\" + \"$2\");\n    }\n    return number;\n}\n\n/**\n * Helper to determine if object is jQuery deferred.\n */\nvar is_deferred = function is_deferred(d) {\n    return \"promise\" in d;\n};\n\n/**\n * Implementation of a server-state based deferred. Server is repeatedly polled, and when\n * condition is met, deferred is resolved.\n */\nvar ServerStateDeferred = Backbone.Model.extend({\n    defaults: {\n        ajax_settings: {},\n        interval: 1000,\n        success_fn: function success_fn(result) {\n            return true;\n        }\n    },\n\n    /**\n     * Returns a deferred that resolves when success function returns true.\n     */\n    go: function go() {\n        var deferred = $.Deferred();\n        var self = this;\n        var ajax_settings = self.get(\"ajax_settings\");\n        var success_fn = self.get(\"success_fn\");\n        var interval = self.get(\"interval\");\n\n        var _go = function _go() {\n            $.ajax(ajax_settings).success(function (result) {\n                if (success_fn(result)) {\n                    // Result is good, so resolve.\n                    deferred.resolve(result);\n                } else {\n                    // Result not good, try again.\n                    setTimeout(_go, interval);\n                }\n            });\n        };\n\n        _go();\n        return deferred;\n    }\n});\n\n/**\n * Returns a random color in hexadecimal format that is sufficiently different from a single color\n * or set of colors.\n * @param colors a color or list of colors in the format '#RRGGBB'\n */\nvar get_random_color = function get_random_color(colors) {\n    // Default for colors is white.\n    if (!colors) {\n        colors = \"#ffffff\";\n    }\n\n    // If needed, create list of colors.\n    if (typeof colors === \"string\") {\n        colors = [colors];\n    }\n\n    // Convert colors to numbers.\n    for (var i = 0; i < colors.length; i++) {\n        colors[i] = parseInt(colors[i].slice(1), 16);\n    }\n\n    // -- Perceived brightness and difference formulas are from\n    // -- http://www.w3.org/WAI/ER/WD-AERT/#color-contrast\n\n    // Compute perceived color brightness (based on RGB-YIQ transformation):\n    var brightness = function brightness(r, g, b) {\n        return (r * 299 + g * 587 + b * 114) / 1000;\n    };\n\n    // Compute color difference:\n    var difference = function difference(r1, g1, b1, r2, g2, b2) {\n        return Math.max(r1, r2) - Math.min(r1, r2) + (Math.max(g1, g2) - Math.min(g1, g2)) + (Math.max(b1, b2) - Math.min(b1, b2));\n    };\n\n    // Create new random color.\n    var new_color;\n\n    var nr;\n    var ng;\n    var nb;\n    var other_color;\n    var or;\n    var og;\n    var ob;\n    var n_brightness;\n    var o_brightness;\n    var diff;\n    var ok = false;\n    var num_tries = 0;\n    do {\n        // New color is never white b/c random in [0,1)\n        new_color = Math.round(Math.random() * 0xffffff);\n        nr = (new_color & 0xff0000) >> 16;\n        ng = (new_color & 0x00ff00) >> 8;\n        nb = new_color & 0x0000ff;\n        n_brightness = brightness(nr, ng, nb);\n        ok = true;\n        for (i = 0; i < colors.length; i++) {\n            other_color = colors[i];\n            or = (other_color & 0xff0000) >> 16;\n            og = (other_color & 0x00ff00) >> 8;\n            ob = other_color & 0x0000ff;\n            o_brightness = brightness(or, og, ob);\n            diff = difference(nr, ng, nb, or, og, ob);\n            // These thresholds may need to be adjusted. Brightness difference range is 125;\n            // color difference range is 500.\n            if (Math.abs(n_brightness - o_brightness) < 40 || diff < 200) {\n                ok = false;\n                break;\n            }\n        }\n\n        num_tries++;\n    } while (!ok && num_tries <= 10);\n\n    // Add 0x1000000 to left pad number with 0s.\n    return \"#\" + (0x1000000 + new_color).toString(16).substr(1, 6);\n};\n\nexports.default = {\n    commatize: commatize,\n    is_deferred: is_deferred,\n    ServerStateDeferred: ServerStateDeferred,\n    get_random_color: get_random_color\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _util = __webpack_require__(10);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _config = __webpack_require__(11);\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * A configuration setting. Currently key is used as id.\n */\nvar ConfigSetting = Backbone.Model.extend({\n    initialize: function initialize(options) {\n        // Use key as id for now.\n        var key = this.get(\"key\");\n        this.set(\"id\", key);\n\n        // Set defaults based on key.\n        var defaults = _.find([{\n            key: \"name\",\n            label: \"Name\",\n            type: \"text\",\n            default_value: \"\"\n        }, {\n            key: \"color\",\n            label: \"Color\",\n            type: \"color\",\n            default_value: null\n        }, {\n            key: \"min_value\",\n            label: \"Min Value\",\n            type: \"float\",\n            default_value: null\n        }, {\n            key: \"max_value\",\n            label: \"Max Value\",\n            type: \"float\",\n            default_value: null\n        }, {\n            key: \"mode\",\n            type: \"string\",\n            default_value: this.mode,\n            hidden: true\n        }, {\n            key: \"height\",\n            type: \"int\",\n            default_value: 32,\n            hidden: true\n        }, {\n            key: \"pos_color\",\n            label: \"Positive Color\",\n            type: \"color\",\n            default_value: \"#FF8C00\"\n        }, {\n            key: \"neg_color\",\n            label: \"Negative Color\",\n            type: \"color\",\n            default_value: \"#4169E1\"\n        }, {\n            key: \"block_color\",\n            label: \"Block color\",\n            type: \"color\",\n            default_value: null\n        }, {\n            key: \"label_color\",\n            label: \"Label color\",\n            type: \"color\",\n            default_value: \"black\"\n        }, {\n            key: \"show_insertions\",\n            label: \"Show insertions\",\n            type: \"bool\",\n            default_value: false\n        }, {\n            key: \"show_counts\",\n            label: \"Show summary counts\",\n            type: \"bool\",\n            default_value: true\n        }, {\n            key: \"reverse_strand_color\",\n            label: \"Antisense strand color\",\n            type: \"color\",\n            default_value: null\n        }, {\n            key: \"show_differences\",\n            label: \"Show differences only\",\n            type: \"bool\",\n            default_value: true\n        }], function (s) {\n            return s.key === key;\n        });\n        if (defaults) {\n            this.set(_.extend({}, defaults, options));\n        }\n\n        if (this.get(\"value\") === undefined && this.get(\"default_value\") !== undefined) {\n            // Use default to set value (if present).\n            this.set_value(this.get(\"default_value\"));\n\n            // If no default value for color config, set random color.\n            if (!this.get(\"value\") && this.get(\"type\") === \"color\") {\n                // For color setting, set random color.\n                this.set(\"value\", _util2.default.get_random_color());\n            }\n        }\n    },\n\n    /**\n     * Cast and set value. This should be instead of\n     *  setting.set('value', new_value)\n     */\n    set_value: function set_value(value, options) {\n        var type = this.get(\"type\");\n\n        if (type === \"float\") {\n            value = parseFloat(value);\n        } else if (type === \"int\") {\n            value = parseInt(value, 10);\n        }\n        // TODO: handle casting from string to bool?\n\n        this.set({ value: value }, options);\n    }\n});\n\n/**\n * Collection of config settings.\n */\nvar ConfigSettingCollection = Backbone.Collection.extend({\n    model: ConfigSetting,\n\n    /**\n     * Save settings as a dictionary of key-value pairs.\n     * This function is needed for backwards compatibility.\n     */\n    to_key_value_dict: function to_key_value_dict() {\n        var rval = {};\n        this.each(function (setting) {\n            rval[setting.get(\"key\")] = setting.get(\"value\");\n        });\n\n        return rval;\n    },\n\n    /**\n     * Returns value for a given key. Returns undefined if there is no setting with the specified key.\n     */\n    get_value: function get_value(key) {\n        var s = this.get(key);\n        if (s) {\n            return s.get(\"value\");\n        }\n\n        return undefined;\n    },\n\n    /**\n     * Set value for a setting.\n     */\n    set_value: function set_value(key, value, options) {\n        var s = this.get(key);\n        if (s) {\n            return s.set_value(value, options);\n        }\n\n        return undefined;\n    },\n\n    /**\n     * Set default value for a setting.\n     */\n    set_default_value: function set_default_value(key, default_value) {\n        var s = this.get(key);\n        if (s) {\n            return s.set(\"default_value\", default_value);\n        }\n\n        return undefined;\n    }\n}, {\n    /**\n     * Utility function that creates a ConfigSettingsCollection from a set of models\n     * and a saved_values dictionary.\n     */\n    from_models_and_saved_values: function from_models_and_saved_values(models, saved_values) {\n        // If there are saved values, copy models and update with saved values.\n        if (saved_values) {\n            models = _.map(models, function (m) {\n                return _.extend({}, m, { value: saved_values[m.key] });\n            });\n        }\n\n        return new ConfigSettingCollection(models);\n    }\n});\n\n/**\n * Viewer for config settings collection.\n */\nvar ConfigSettingCollectionView = Backbone.View.extend({\n    className: \"config-settings-view\",\n\n    /**\n     * Renders form for editing configuration settings.\n     */\n    render: function render() {\n        var container = this.$el;\n\n        this.collection.each(function (param, index) {\n            // Hidden params have no representation in the form\n            if (param.get(\"hidden\")) {\n                return;\n            }\n\n            // Build row for param.\n            var id = \"param_\" + index;\n\n            var type = param.get(\"type\");\n            var value = param.get(\"value\");\n            var row = $(\"<div class='form-row' />\").appendTo(container);\n            row.append($(\"<label />\").attr(\"for\", id).text(param.get(\"label\") + \":\"));\n            // Draw parameter as checkbox\n            if (type === \"bool\") {\n                row.append($('<input type=\"checkbox\" />').attr(\"id\", id).attr(\"name\", id).attr(\"checked\", value));\n            } else if (type === \"text\") {\n                // Draw parameter as textbox\n                row.append($('<input type=\"text\"/>').attr(\"id\", id).val(value).click(function () {\n                    $(this).select();\n                }));\n            } else if (type === \"select\") {\n                // Draw parameter as select area\n                var select = $(\"<select />\").attr(\"id\", id);\n                _.each(param.get(\"options\"), function (option) {\n                    $(\"<option/>\").text(option.label).attr(\"value\", option.value).appendTo(select);\n                });\n                select.val(value);\n                row.append(select);\n            } else if (type === \"color\") {\n                // Draw parameter as color picker\n                var container_div = $(\"<div/>\").appendTo(row);\n\n                var input = $(\"<input />\").attr(\"id\", id).attr(\"name\", id).val(value).css(\"float\", \"left\").appendTo(container_div).click(function (e) {\n                    // Hide other pickers.\n                    $(\".tooltip\").removeClass(\"in\");\n\n                    // Show input's color picker.\n                    var tip = $(this).siblings(\".tooltip\").addClass(\"in\");\n                    tip.css({\n                        // left: $(this).position().left + ( $(input).width() / 2 ) - 60,\n                        // top: $(this).position().top + $(this.height)\n                        left: $(this).position().left + $(this).width() + 5,\n                        top: $(this).position().top - $(tip).height() / 2 + $(this).height() / 2\n                    }).show();\n\n                    // Click management:\n\n                    // Keep showing tip if clicking in tip.\n                    tip.click(function (e) {\n                        e.stopPropagation();\n                    });\n\n                    // Hide tip if clicking outside of tip.\n                    $(document).bind(\"click.color-picker\", function () {\n                        tip.hide();\n                        $(document).unbind(\"click.color-picker\");\n                    });\n\n                    // No propagation to avoid triggering document click (and tip hiding) above.\n                    e.stopPropagation();\n                });\n\n                var // Icon for setting a new random color; behavior set below.\n                new_color_icon = $(\"<a href='javascript:void(0)'/>\").addClass(\"icon-button arrow-circle\").appendTo(container_div).attr(\"title\", \"Set new random color\").tooltip();\n\n                var // Color picker in tool tip style.\n                tip = $(\"<div class='tooltip right' style='position: absolute;' />\").appendTo(container_div).hide();\n\n                var // Inner div for padding purposes\n                tip_inner = $(\"<div class='tooltip-inner' style='text-align: inherit'></div>\").appendTo(tip);\n\n                var tip_arrow = $(\"<div class='tooltip-arrow'></div>\").appendTo(tip);\n\n                var farb_obj = $.farbtastic(tip_inner, {\n                    width: 100,\n                    height: 100,\n                    callback: input,\n                    color: value\n                });\n\n                // Clear floating.\n                container_div.append($(\"<div/>\").css(\"clear\", \"both\"));\n\n                // Use function to fix farb_obj value.\n                (function (fixed_farb_obj) {\n                    new_color_icon.click(function () {\n                        fixed_farb_obj.setColor(_util2.default.get_random_color());\n                    });\n                })(farb_obj);\n            } else {\n                row.append($(\"<input />\").attr(\"id\", id).attr(\"name\", id).val(value));\n            }\n            // Help text\n            if (param.help) {\n                row.append($(\"<div class='help'/>\").text(param.help));\n            }\n        });\n\n        return this;\n    },\n\n    /**\n     * Render view in modal.\n     */\n    render_in_modal: function render_in_modal(title) {\n        // Set up handlers for cancel, ok button and for handling esc key.\n        var self = this;\n\n        var cancel_fn = function cancel_fn() {\n            Galaxy.modal.hide();\n            $(window).unbind(\"keypress.check_enter_esc\");\n        };\n\n        var ok_fn = function ok_fn() {\n            Galaxy.modal.hide();\n            $(window).unbind(\"keypress.check_enter_esc\");\n            self.update_from_form();\n        };\n\n        var check_enter_esc = function check_enter_esc(e) {\n            if ((e.keyCode || e.which) === 27) {\n                // Escape key\n                cancel_fn();\n            } else if ((e.keyCode || e.which) === 13) {\n                // Enter key\n                ok_fn();\n            }\n        };\n\n        // Set keypress handler.\n        $(window).bind(\"keypress.check_enter_esc\", check_enter_esc);\n\n        // Show modal.\n        if (this.$el.children().length === 0) {\n            this.render();\n        }\n        Galaxy.modal.show({\n            title: title || \"Configure\",\n            body: this.$el,\n            buttons: {\n                Cancel: cancel_fn,\n                OK: ok_fn\n            }\n        });\n    },\n\n    /**\n     * Update settings with new values entered via form.\n     */\n    update_from_form: function update_from_form() {\n        var self = this;\n        this.collection.each(function (setting, index) {\n            if (!setting.get(\"hidden\")) {\n                // Set value from view.\n                var id = \"param_\" + index;\n                var value = self.$el.find(\"#\" + id).val();\n                if (setting.get(\"type\") === \"bool\") {\n                    value = self.$el.find(\"#\" + id).is(\":checked\");\n                }\n                setting.set_value(value);\n            }\n        });\n    }\n});\n\nexports.default = {\n    ConfigSetting: ConfigSetting,\n    ConfigSettingCollection: ConfigSettingCollection,\n    ConfigSettingCollectionView: ConfigSettingCollectionView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _gridModel = __webpack_require__(31);\n\nvar _gridModel2 = _interopRequireDefault(_gridModel);\n\nvar _gridTemplate = __webpack_require__(32);\n\nvar _gridTemplate2 = _interopRequireDefault(_gridTemplate);\n\nvar _popupMenu = __webpack_require__(20);\n\nvar _popupMenu2 = _interopRequireDefault(_popupMenu);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// This is necessary so that, when nested arrays are used in ajax/post/get methods, square brackets ('[]') are\n// not appended to the identifier of a nested array.\njQuery.ajaxSettings.traditional = true;\n\n// dependencies\n\n// grid view\nexports.default = Backbone.View.extend({\n    // model\n    grid: null,\n\n    // Initialize\n    initialize: function initialize(grid_config) {\n        this.grid = new _gridModel2.default();\n        this.dict_format = grid_config.dict_format;\n        this.title = grid_config.title;\n        var self = this;\n        window.add_tag_to_grid_filter = function (tag_name, tag_value) {\n            // Put tag name and value together.\n            var tag = tag_name + (tag_value !== undefined && tag_value !== \"\" ? \":\" + tag_value : \"\");\n            var advanced_search = $(\"#advanced-search\").is(\":visible\");\n            if (!advanced_search) {\n                $(\"#standard-search\").slideToggle(\"fast\");\n                $(\"#advanced-search\").slideToggle(\"fast\");\n            }\n            self.add_filter_condition(\"tags\", tag);\n        };\n\n        // set element\n        if (this.dict_format) {\n            this.setElement(\"<div/>\");\n            if (grid_config.url_base && !grid_config.items) {\n                var url_data = grid_config.url_data || {};\n                _.each(grid_config.filters, function (v, k) {\n                    url_data[\"f-\" + k] = v;\n                });\n                $.ajax({\n                    url: grid_config.url_base + \"?\" + $.param(url_data),\n                    success: function success(response) {\n                        response.embedded = grid_config.embedded;\n                        response.filters = grid_config.filters || {};\n                        self.init_grid(response);\n                    }\n                });\n            } else {\n                this.init_grid(grid_config);\n            }\n        } else {\n            this.setElement(\"#grid-container\");\n            this.init_grid(grid_config);\n        }\n\n        // fix padding\n        if (grid_config.use_panels) {\n            $(\"#center\").css({\n                padding: \"10px\",\n                overflow: \"auto\"\n            });\n        }\n    },\n\n    // refresh frames\n    handle_refresh: function handle_refresh(refresh_frames) {\n        if (refresh_frames) {\n            if ($.inArray(\"history\", refresh_frames) > -1) {\n                if (window.top.Galaxy && window.top.Galaxy.currHistoryPanel) {\n                    window.top.Galaxy.currHistoryPanel.loadCurrentHistory();\n                }\n            }\n        }\n    },\n\n    // Initialize\n    init_grid: function init_grid(grid_config) {\n        this.grid.set(grid_config);\n\n        // get options\n        var options = this.grid.attributes;\n\n        if (this.allow_title_display && options.title) {\n            _utils2.default.setWindowTitle(options.title);\n        }\n        // handle refresh requests\n        this.handle_refresh(options.refresh_frames);\n\n        // strip protocol and domain\n        var url = this.grid.get(\"url_base\");\n        url = url.replace(/^.*\\/\\/[^\\/]+/, \"\");\n        this.grid.set(\"url_base\", url);\n\n        // append main template\n        this.$el.html(_gridTemplate2.default.grid(options));\n\n        // update div contents\n        this.$el.find(\"#grid-table-header\").html(_gridTemplate2.default.header(options));\n        this.$el.find(\"#grid-table-body\").html(_gridTemplate2.default.body(options));\n        this.$el.find(\"#grid-table-footer\").html(_gridTemplate2.default.footer(options));\n\n        // update message\n        if (options.message) {\n            this.$el.find(\"#grid-message\").html(_gridTemplate2.default.message(options));\n            var self = this;\n            if (options.use_hide_message) {\n                setTimeout(function () {\n                    self.$el.find(\"#grid-message\").html(\"\");\n                }, 5000);\n            }\n        }\n\n        // configure elements\n        this.init_grid_elements();\n        this.init_grid_controls();\n\n        // attach global event handler\n        // TODO: redundant (the onload/standard page handlers do this) - but needed because these are constructed after page ready\n        init_refresh_on_change();\n    },\n\n    // Initialize grid controls\n    init_grid_controls: function init_grid_controls() {\n        // link\n        var self = this;\n\n        // Initialize grid operation button.\n        this.$el.find(\".operation-button\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                self.submit_operation(this);\n                return false;\n            });\n        });\n\n        // Initialize text filters to select text on click and use normal font when user is typing.\n        this.$el.find(\"input[type=text]\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                $(this).select();\n            }).keyup(function () {\n                $(this).css(\"font-style\", \"normal\");\n            });\n        });\n\n        // Initialize sort links.\n        this.$el.find(\".sort-link\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                self.set_sort_condition($(this).attr(\"sort_key\"));\n                return false;\n            });\n        });\n\n        // Initialize text filters.\n        this.$el.find(\".text-filter-form\").each(function () {\n            $(this).off();\n            $(this).submit(function () {\n                var column_key = $(this).attr(\"column_key\");\n                var text_input_obj = $(\"#input-\" + column_key + \"-filter\");\n                var text_input = text_input_obj.val();\n                text_input_obj.val(\"\");\n                self.add_filter_condition(column_key, text_input);\n                return false;\n            });\n        });\n\n        // Initialize categorical filters.\n        this.$el.find(\".text-filter-val > a\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                // Remove visible element.\n                $(this).parent().remove();\n\n                // Remove filter condition.\n                self.remove_filter_condition($(this).attr(\"filter_key\"), $(this).attr(\"filter_val\"));\n\n                // Return\n                return false;\n            });\n        });\n\n        // Initialize categorical filters.\n        this.$el.find(\".categorical-filter > a\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                self.set_categorical_filter($(this).attr(\"filter_key\"), $(this).attr(\"filter_val\"));\n                return false;\n            });\n        });\n\n        // Initialize standard, advanced search toggles.\n        this.$el.find(\".advanced-search-toggle\").each(function () {\n            $(this).off();\n            $(this).click(function () {\n                self.$el.find(\"#standard-search\").slideToggle(\"fast\");\n                self.$el.find(\"#advanced-search\").slideToggle(\"fast\");\n                return false;\n            });\n        });\n\n        // Add event to check all box\n        this.$el.find(\"#check_all\").off();\n        this.$el.find(\"#check_all\").on(\"click\", function () {\n            self.check_all_items();\n        });\n    },\n\n    // Initialize grid elements.\n    init_grid_elements: function init_grid_elements() {\n        // Initialize grid selection checkboxes.\n        this.$el.find(\".grid\").each(function () {\n            var checkboxes = $(this).find(\"input.grid-row-select-checkbox\");\n            var check_count = $(this).find(\"span.grid-selected-count\");\n            var update_checked = function update_checked() {\n                check_count.text($(checkboxes).filter(\":checked\").length);\n            };\n\n            $(checkboxes).each(function () {\n                $(this).change(update_checked);\n            });\n            update_checked();\n        });\n\n        // Initialize ratings.\n        if (this.$el.find(\".community_rating_star\").length !== 0) this.$el.find(\".community_rating_star\").rating({});\n\n        // get options\n        var options = this.grid.attributes;\n        var self = this;\n\n        //\n        // add page click events\n        //\n        this.$el.find(\".page-link > a\").each(function () {\n            $(this).click(function () {\n                self.set_page($(this).attr(\"page_num\"));\n                return false;\n            });\n        });\n\n        //\n        // add inbound/outbound events\n        //\n        this.$el.find(\".use-target\").each(function () {\n            $(this).click(function (e) {\n                self.execute({\n                    href: $(this).attr(\"href\"),\n                    target: $(this).attr(\"target\")\n                });\n                return false;\n            });\n        });\n\n        // empty grid?\n        var items_length = options.items.length;\n        if (items_length == 0) {\n            return;\n        }\n\n        // add operation popup menus\n        _.each(options.items, function (item, index) {\n            var button = self.$(\"#grid-\" + index + \"-popup\").off();\n            var popup = new _popupMenu2.default(button);\n            _.each(options[\"operations\"], function (operation) {\n                self._add_operation(popup, operation, item);\n            });\n        });\n    },\n\n    /** Add an operation to the items menu */\n    _add_operation: function _add_operation(popup, operation, item) {\n        var self = this;\n        var settings = item.operation_config[operation.label];\n        if (settings.allowed && operation.allow_popup) {\n            popup.addItem({\n                html: operation.label,\n                href: settings.url_args,\n                target: settings.target,\n                confirmation_text: operation.confirm,\n                func: function func(e) {\n                    e.preventDefault();\n                    var label = $(e.target).html();\n                    if (operation.onclick) {\n                        operation.onclick(item.encode_id);\n                    } else {\n                        self.execute(this.findItemByHtml(label));\n                    }\n                }\n            });\n        }\n    },\n\n    // Add a condition to the grid filter; this adds the condition and refreshes the grid.\n    add_filter_condition: function add_filter_condition(name, value) {\n        // Do nothing is value is empty.\n        if (value === \"\") {\n            return false;\n        }\n\n        // Add condition to grid.\n        this.grid.add_filter(name, value, true);\n\n        // Add button that displays filter and provides a button to delete it.\n        var t = $(_gridTemplate2.default.filter_element(name, value));\n        var self = this;\n        t.click(function () {\n            // Remove visible element.\n            $(this).remove();\n\n            // Remove filter condition.\n            self.remove_filter_condition(name, value);\n        });\n\n        // append to container\n        var container = this.$el.find(\"#\" + name + \"-filtering-criteria\");\n        container.append(t);\n\n        // execute\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Remove a condition to the grid filter; this adds the condition and refreshes the grid.\n    remove_filter_condition: function remove_filter_condition(name, value) {\n        // Remove filter condition.\n        this.grid.remove_filter(name, value);\n\n        // Execute\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set sort condition for grid.\n    set_sort_condition: function set_sort_condition(col_key) {\n        // Set new sort condition. New sort is col_key if sorting new column; if reversing sort on\n        // currently sorted column, sort is reversed.\n        var cur_sort = this.grid.get(\"sort_key\");\n        var new_sort = col_key;\n        if (cur_sort.indexOf(col_key) !== -1) {\n            // Reverse sort.\n            if (cur_sort.substring(0, 1) !== \"-\") {\n                new_sort = \"-\" + col_key;\n            }\n        }\n\n        // Remove sort arrows elements.\n        this.$el.find(\".sort-arrow\").remove();\n\n        // Add sort arrow element to new sort column.\n        var sort_arrow = new_sort.substring(0, 1) == \"-\" ? \"&uarr;\" : \"&darr;\";\n        var t = $(\"<span>\" + sort_arrow + \"</span>\").addClass(\"sort-arrow\");\n\n        // Add to header\n        this.$el.find(\"#\" + col_key + \"-header\").append(t);\n\n        // Update grid.\n        this.grid.set(\"sort_key\", new_sort);\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set new value for categorical filter.\n    set_categorical_filter: function set_categorical_filter(name, new_value) {\n        // Update filter hyperlinks to reflect new filter value.\n        var category_filter = this.grid.get(\"categorical_filters\")[name];\n\n        var cur_value = this.grid.get(\"filters\")[name];\n        var self = this;\n        this.$el.find(\".\" + name + \"-filter\").each(function () {\n            var text = $.trim($(this).text());\n            var filter = category_filter[text];\n            var filter_value = filter[name];\n            if (filter_value == new_value) {\n                // Remove filter link since grid will be using this filter. It is assumed that\n                // this element has a single child, a hyperlink/anchor with text.\n                $(this).empty();\n                $(this).addClass(\"current-filter\");\n                $(this).append(text);\n            } else if (filter_value == cur_value) {\n                // Add hyperlink for this filter since grid will no longer be using this filter. It is assumed that\n                // this element has a single child, a hyperlink/anchor.\n                $(this).empty();\n                var t = $(\"<a href=\\\"#\\\">\" + text + \"</a>\");\n                t.click(function () {\n                    self.set_categorical_filter(name, filter_value);\n                });\n                $(this).removeClass(\"current-filter\");\n                $(this).append(t);\n            }\n        });\n\n        // Update grid.\n        this.grid.add_filter(name, new_value);\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set page to view.\n    set_page: function set_page(new_page) {\n        // Update page hyperlink to reflect new page.\n        var self = this;\n        this.$el.find(\".page-link\").each(function () {\n            var id = $(this).attr(\"id\");\n\n            var // Id has form 'page-link-<page_num>\n            page_num = parseInt(id.split(\"-\")[2], 10);\n\n            var cur_page = self.grid.get(\"cur_page\");\n            var text;\n            if (page_num === new_page) {\n                // Remove link to page since grid will be on this page. It is assumed that\n                // this element has a single child, a hyperlink/anchor with text.\n                text = $(this).children().text();\n                $(this).empty();\n                $(this).addClass(\"inactive-link\");\n                $(this).text(text);\n            } else if (page_num === cur_page) {\n                // Add hyperlink to this page since grid will no longer be on this page. It is assumed that\n                // this element has a single child, a hyperlink/anchor.\n                text = $(this).text();\n                $(this).empty();\n                $(this).removeClass(\"inactive-link\");\n                var t = $(\"<a href=\\\"#\\\">\" + text + \"</a>\");\n                t.click(function () {\n                    self.set_page(page_num);\n                });\n                $(this).append(t);\n            }\n        });\n\n        if (new_page === \"all\") {\n            this.grid.set(\"cur_page\", new_page);\n        } else {\n            this.grid.set(\"cur_page\", parseInt(new_page, 10));\n        }\n        this.execute();\n    },\n\n    // confirmation/submission of operation request\n    submit_operation: function submit_operation(operation_button, confirmation_text) {\n        // identify operation\n        var operation_name = $(operation_button).val();\n\n        // verify in any item is selected\n        var number_of_checked_ids = this.$el.find('input[name=\"id\"]:checked').length;\n        if (!number_of_checked_ids > 0) {\n            return false;\n        }\n\n        // Check to see if there's grid confirmation text for this operation\n        var operation = _.findWhere(this.grid.attributes.operations, {\n            label: operation_name\n        });\n        if (operation && !confirmation_text) {\n            confirmation_text = operation.confirm || \"\";\n        }\n\n        // collect ids\n        var item_ids = [];\n        this.$el.find(\"input[name=id]:checked\").each(function () {\n            item_ids.push($(this).val());\n        });\n\n        // execute operation\n        var options = {\n            operation: operation_name,\n            id: item_ids,\n            confirmation_text: confirmation_text\n        };\n        if (operation.target == \"top\" || operation.target == \"center\") {\n            options = _.extend(options, {\n                href: operation.href,\n                target: operation.target\n            });\n        }\n        this.execute(options);\n        return true;\n    },\n\n    check_all_items: function check_all_items() {\n        var check = this.$(\".grid-row-select-checkbox\");\n        var state = this.$(\"#check_all\").prop(\"checked\");\n        _.each(check, function (c) {\n            $(c).prop(\"checked\", state);\n        });\n        this.init_grid_elements();\n    },\n\n    // Go back to page one; this is useful when a filter is applied.\n    go_page_one: function go_page_one() {\n        // Need to go back to page 1 if not showing all.\n        var cur_page = this.grid.get(\"cur_page\");\n        if (cur_page !== null && cur_page !== undefined && cur_page !== \"all\") {\n            this.grid.set(\"cur_page\", 1);\n        }\n    },\n\n    //\n    // execute operations and hyperlink requests\n    //\n    execute: function execute(options) {\n        // get url\n        var id = null;\n        var href = null;\n        var operation = null;\n        var confirmation_text = null;\n        var target = null;\n\n        // check for options\n        if (options) {\n            // get options\n            href = options.href;\n            operation = options.operation;\n            id = options.id;\n            confirmation_text = options.confirmation_text;\n            target = options.target;\n\n            // check if input contains the operation tag\n            if (href !== undefined && href.indexOf(\"operation=\") != -1) {\n                // Get operation, id in hyperlink's href.\n                var href_parts = href.split(\"?\");\n                if (href_parts.length > 1) {\n                    var href_parms_str = href_parts[1];\n                    var href_parms = href_parms_str.split(\"&\");\n                    for (var index = 0; index < href_parms.length; index++) {\n                        if (href_parms[index].indexOf(\"operation\") != -1) {\n                            // Found operation parm; get operation value.\n                            operation = href_parms[index].split(\"=\")[1];\n                            operation = operation.replace(/\\+/g, \" \");\n                        } else if (href_parms[index].indexOf(\"id\") != -1) {\n                            // Found id parm; get id value.\n                            id = href_parms[index].split(\"=\")[1];\n                        }\n                    }\n                }\n            }\n        }\n\n        // check for operation details\n        if (operation && id) {\n            // show confirmation box\n            if (confirmation_text && confirmation_text != \"\" && confirmation_text != \"None\" && confirmation_text != \"null\") if (!confirm(confirmation_text)) return false;\n\n            // use small characters for operation?!\n            operation = operation.toLowerCase();\n\n            // Update grid.\n            this.grid.set({\n                operation: operation,\n                item_ids: id\n            });\n\n            // Do operation. If operation cannot be performed asynchronously, redirect to location.\n            if (target == \"top\") {\n                window.top.location = href + \"?\" + $.param(this.grid.get_url_data());\n            } else if (target == \"center\") {\n                $(\"#galaxy_main\").attr(\"src\", href + \"?\" + $.param(this.grid.get_url_data()));\n            } else if (this.grid.can_async_op(operation) || this.dict_format) {\n                this.update_grid();\n            } else {\n                this.go_to(target, href);\n            }\n\n            // done\n            return false;\n        }\n\n        // refresh grid\n        if (href) {\n            this.go_to(target, href);\n            return false;\n        }\n\n        // refresh grid\n        if (this.grid.get(\"async\") || this.dict_format) {\n            this.update_grid();\n        } else {\n            this.go_to(target, href);\n        }\n\n        // done\n        return false;\n    },\n\n    // go to url\n    go_to: function go_to(target, href) {\n        // get aysnc status\n        var async = this.grid.get(\"async\");\n        this.grid.set(\"async\", false);\n\n        // get slide status\n        var advanced_search = this.$el.find(\"#advanced-search\").is(\":visible\");\n        this.grid.set(\"advanced_search\", advanced_search);\n\n        // get default url\n        if (!href) {\n            href = this.grid.get(\"url_base\") + \"?\" + $.param(this.grid.get_url_data());\n        }\n\n        // clear grid of transient request attributes.\n        this.grid.set({\n            operation: undefined,\n            item_ids: undefined,\n            async: async\n        });\n        switch (target) {\n            case \"center\":\n                $(\"#galaxy_main\").attr(\"src\", href);\n                break;\n            case \"top\":\n                window.top.location = href;\n                break;\n            default:\n                window.location = href;\n        }\n    },\n\n    // Update grid.\n    update_grid: function update_grid() {\n        // If there's an operation, do POST; otherwise, do GET.\n        var method = this.grid.get(\"operation\") ? \"POST\" : \"GET\";\n\n        // Show overlay to indicate loading and prevent user actions.\n        this.$el.find(\".loading-elt-overlay\").show();\n        var self = this;\n        $.ajax({\n            type: method,\n            url: self.grid.get(\"url_base\"),\n            data: self.grid.get_url_data(),\n            error: function error(response) {\n                alert(\"Grid refresh failed\");\n            },\n            success: function success(response_text) {\n                // backup\n                var embedded = self.grid.get(\"embedded\");\n                var insert = self.grid.get(\"insert\");\n                var advanced_search = self.$el.find(\"#advanced-search\").is(\":visible\");\n\n                // request new configuration\n                var json = self.dict_format ? response_text : $.parseJSON(response_text);\n\n                // update\n                json.embedded = embedded;\n                json.insert = insert;\n                json.advanced_search = advanced_search;\n\n                // Initialize new grid config\n                self.init_grid(json);\n\n                // Hide loading overlay.\n                self.$el.find(\".loading-elt-overlay\").hide();\n            },\n            complete: function complete() {\n                // Clear grid of transient request attributes.\n                self.grid.set({\n                    operation: undefined,\n                    item_ids: undefined\n                });\n            }\n        });\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n  Webhooks\n**/\n\nvar WebhookModel = Backbone.Model.extend({\n    defaults: {\n        activate: false\n    }\n});\n\nvar Webhooks = Backbone.Collection.extend({\n    model: WebhookModel\n});\n\nvar WebhookView = Backbone.View.extend({\n    el: \"#webhook-view\",\n\n    initialize: function initialize(options) {\n        var me = this;\n        var toolId = options.toolId || \"\";\n        var toolVersion = options.toolVersion || \"\";\n\n        this.$el.attr(\"tool_id\", toolId);\n        this.$el.attr(\"tool_version\", toolVersion);\n\n        this.model = new WebhookModel();\n        this.model.urlRoot = options.urlRoot;\n        this.model.fetch({\n            success: function success() {\n                me.render();\n            }\n        });\n    },\n\n    render: function render() {\n        var webhook = this.model.toJSON();\n\n        this.$el.html(\"<div id=\\\"\" + webhook.name + \"\\\"></div>\");\n        if (webhook.styles) $(\"<style/>\", { type: \"text/css\" }).text(webhook.styles).appendTo(\"head\");\n        if (webhook.script) $(\"<script/>\", { type: \"text/javascript\" }).text(webhook.script).appendTo(\"head\");\n\n        return this;\n    }\n});\n\nvar add = function add(options) {\n    var webhooks = new Webhooks();\n\n    webhooks.url = Galaxy.root + options.url;\n    webhooks.fetch({\n        async: options.async ? options.async : true,\n        success: options.callback\n    });\n};\n\nexports.default = {\n    Webhooks: Webhooks,\n    WebhookView: WebhookView,\n    add: add\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/** Frame view */\nvar FrameView = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model(options);\n        this.setElement($(\"<div/>\").addClass(\"corner frame\"));\n        this.$el.append($(\"<div/>\").addClass(\"f-header corner\").append($(\"<div/>\").addClass(\"f-title\")).append($(\"<div/>\").addClass(\"f-icon f-close fa fa-close\").tooltip({\n            title: \"Close\",\n            placement: \"bottom\"\n        }))).append($(\"<div/>\").addClass(\"f-content\")).append($(\"<div/>\").addClass(\"f-resize f-icon corner fa fa-expand\").tooltip({ title: \"Resize\" })).append($(\"<div/>\").addClass(\"f-cover\"));\n        this.$header = this.$(\".f-header\");\n        this.$title = this.$(\".f-title\");\n        this.$content = this.$(\".f-content\");\n        this.render();\n        this.listenTo(this.model, \"change\", this.render, this);\n    },\n\n    render: function render() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$title.html(options.title || \"\");\n        this.$header.find(\".f-icon-left\").remove();\n        _.each(options.menu, function (option) {\n            var $option = $(\"<div/>\").addClass(\"f-icon-left\").addClass(option.icon);\n            if (_.isFunction(option.disabled) && option.disabled()) {\n                $option.attr(\"disabled\", true);\n            } else {\n                $option.on(\"click\", function () {\n                    option.onclick(self);\n                }).tooltip({\n                    title: option.tooltip,\n                    placement: \"bottom\"\n                });\n            }\n            self.$header.append($option);\n        });\n        if (options.url) {\n            this.$content.html($(\"<iframe/>\").addClass(\"f-iframe\").attr(\"scrolling\", \"auto\").attr(\"src\", options.url + (options.url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + \"widget=True\"));\n        } else if (options.content) {\n            _.isFunction(options.content) ? options.content(self.$content) : self.$content.html(options.content);\n        }\n    }\n});\n\n/** Scratchbook viewer */\nvar View = Backbone.View.extend({\n    defaultOptions: {\n        frame: {\n            // default frame size in cells\n            cols: 6,\n            rows: 3\n        },\n        rows: 1000, // maximum number of rows\n        cell: 130, // cell size in px\n        margin: 5, // margin between frames\n        scroll: 5, // scroll speed\n        top_min: 40, // top margin\n        frame_max: 9, // maximum number of frames\n        visible: true // initial visibility\n    },\n\n    cols: 0, // number of columns\n    top: 0, // scroll/element top\n    top_max: 0, // viewport scrolling state\n    frame_z: 0, // frame z-index\n    frame_counter: 0, // frame counter\n    frame_uid: 0, // unique frame id counter\n    frame_list: {}, // list of all frames\n    frame_shadow: null, // frame shown as placeholder when moving active frames\n    visible: false, // flag indicating if scratchbook viewer is visible or not\n    event: {}, // dictionary keeping track of current event\n\n    initialize: function initialize(options) {\n        var self = this;\n        this.options = _.defaults(options || {}, this.defaultOptions);\n        this.visible = this.options.visible;\n        this.top = this.top_max = this.options.top_min;\n        this.setElement($(\"<div/>\").addClass(\"galaxy-frame\").append($(\"<div/>\").addClass(\"frame-background\")).append($(\"<div/>\").addClass(\"frame-menu frame-scroll-up fa fa-chevron-up fa-2x\")).append($(\"<div/>\").addClass(\"frame-menu frame-scroll-down fa fa-chevron-down fa-2x\")));\n\n        // initialize shadow to guiding drag/resize events\n        this.frame_shadow = new Backbone.View({\n            el: $(\"<div/>\").addClass(\"corner frame-shadow\")\n        });\n        this.$el.append(this.frame_shadow.$el);\n        this._frameInit(this.frame_shadow, \"#frame-shadow\");\n        this._frameResize(this.frame_shadow, { width: 0, height: 0 });\n        this.frame_list[\"#frame-shadow\"] = this.frame_shadow;\n\n        // initialize panel\n        this.visible ? this.show() : this.hide();\n        this._panelRefresh();\n        $(window).resize(function () {\n            self.visible && self._panelRefresh();\n        });\n    },\n\n    /** Render */\n    render: function render() {\n        this.$(\".frame-scroll-up\")[this.top != this.options.top_min && \"show\" || \"hide\"]();\n        this.$(\".frame-scroll-down\")[this.top != this.top_max && \"show\" || \"hide\"]();\n    },\n\n    /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  url     : loaded into an iframe\n     *  content : content is treated as a function or raw HTML, function is passed a single\n     *              argument that is the frame's content DOM element\n     */\n    add: function add(options) {\n        if (this.frame_counter >= this.options.frame_max) {\n            Galaxy.modal.show({\n                title: \"Warning\",\n                body: \"You have reached the maximum number of allowed frames (\" + this.options.frame_max + \").\",\n                buttons: {\n                    Close: function Close() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n        } else {\n            var frame_id = \"#frame-\" + this.frame_uid++;\n            if ($(frame_id).length !== 0) {\n                Galaxy.modal.show({\n                    title: \"Error\",\n                    body: \"This frame already exists. This page might contain multiple frame managers.\",\n                    buttons: {\n                        Close: function Close() {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            } else {\n                // initialize new frame elements\n                this.top = this.options.top_min;\n                var frame = new FrameView(options);\n                this.$el.append(frame.$el);\n\n                // set dimensions\n                options.width = this._toPixelCoord(\"width\", this.options.frame.cols);\n                options.height = this._toPixelCoord(\"height\", this.options.frame.rows);\n\n                // set default z-index and add to ui and frame list\n                this.frame_z = parseInt(frame.$el.css(\"z-index\"));\n                this.frame_list[frame_id] = frame;\n                this.frame_counter++;\n                this._frameInit(frame, frame_id);\n                this._frameResize(frame, {\n                    width: options.width,\n                    height: options.height\n                });\n                this._frameInsert(frame, { top: 0, left: 0 }, true);\n                !this.visible && this.show();\n                this.trigger(\"add\");\n            }\n        }\n    },\n\n    /** Remove a frame */\n    del: function del(frame) {\n        var self = this;\n        var $frame = frame.$el;\n        $frame.fadeOut(\"fast\", function () {\n            $frame.remove();\n            delete self.frame_list[frame.id];\n            self.frame_counter--;\n            self._panelRefresh(true);\n            self._panelAnimationComplete();\n            self.trigger(\"remove\");\n        });\n    },\n\n    /** Show panel */\n    show: function show() {\n        this.visible = true;\n        this.$el.fadeIn(\"fast\");\n        this.trigger(\"show\");\n    },\n\n    /** Hide panel */\n    hide: function hide() {\n        if (!this.event.type) {\n            this.visible = false;\n            this.$el.fadeOut(\"fast\", function () {\n                $(this).hide();\n            });\n            this.trigger(\"hide\");\n        }\n    },\n\n    /** Returns the number of frames */\n    length: function length() {\n        return this.frame_counter;\n    },\n\n    /*\n        EVENT HANDLING\n    */\n    events: {\n        // global frame events\n        mousemove: \"_eventFrameMouseMove\",\n        mouseup: \"_eventFrameMouseUp\",\n        mouseleave: \"_eventFrameMouseUp\",\n        mousewheel: \"_eventPanelScroll\",\n        DOMMouseScroll: \"_eventPanelScroll\",\n\n        // events fixed to elements\n        \"mousedown .frame\": \"_eventFrameMouseDown\",\n        \"mousedown .frame-background\": \"_eventHide\",\n        \"mousedown .frame-scroll-up\": \"_eventPanelScroll_up\",\n        \"mousedown .frame-scroll-down\": \"_eventPanelScroll_down\",\n        \"mousedown .f-close\": \"_eventFrameClose\"\n    },\n\n    /** Start drag/resize event */\n    _eventFrameMouseDown: function _eventFrameMouseDown(e) {\n        $(\".tooltip\").hide();\n        if (!this.event.type) {\n            if ($(e.target).hasClass(\"f-header\") || $(e.target).hasClass(\"f-title\")) {\n                this.event.type = \"drag\";\n            }\n            if ($(e.target).hasClass(\"f-resize\")) {\n                this.event.type = \"resize\";\n            }\n            if (this.event.type) {\n                e.preventDefault();\n                this.event.target = this._frameIdentify(e.target);\n                this.event.xy = {\n                    x: e.originalEvent.pageX,\n                    y: e.originalEvent.pageY\n                };\n                this._frameDragStart(this.event.target);\n            }\n        }\n    },\n\n    /** Processes drag/resize events */\n    _eventFrameMouseMove: function _eventFrameMouseMove(e) {\n        if (this.event.type) {\n            // get mouse motion and delta\n            var event_xy_new = {\n                x: e.originalEvent.pageX,\n                y: e.originalEvent.pageY\n            };\n            var event_xy_delta = {\n                x: event_xy_new.x - this.event.xy.x,\n                y: event_xy_new.y - this.event.xy.y\n            };\n            this.event.xy = event_xy_new;\n\n            // get current screen position and size of frame\n            var p = this._frameScreen(this.event.target);\n\n            // drag/resize event\n            if (this.event.type == \"resize\") {\n                p.width += event_xy_delta.x;\n                p.height += event_xy_delta.y;\n                var min_dim = this.options.cell - this.options.margin - 1;\n                p.width = Math.max(p.width, min_dim);\n                p.height = Math.max(p.height, min_dim);\n                this._frameResize(this.event.target, p);\n                p.width = this._toGridCoord(\"width\", p.width) + 1;\n                p.height = this._toGridCoord(\"height\", p.height) + 1;\n                p.width = this._toPixelCoord(\"width\", p.width);\n                p.height = this._toPixelCoord(\"height\", p.height);\n                this._frameResize(this.frame_shadow, p);\n                this._frameInsert(this.frame_shadow, {\n                    top: this._toGridCoord(\"top\", p.top),\n                    left: this._toGridCoord(\"left\", p.left)\n                });\n            } else if (this.event.type == \"drag\") {\n                p.left += event_xy_delta.x;\n                p.top += event_xy_delta.y;\n                this._frameOffset(this.event.target, p);\n                var l = {\n                    top: this._toGridCoord(\"top\", p.top),\n                    left: this._toGridCoord(\"left\", p.left)\n                };\n                l.left !== 0 && l.left++;\n                this._frameInsert(this.frame_shadow, l);\n            }\n        }\n    },\n\n    /** Stop drag/resize events */\n    _eventFrameMouseUp: function _eventFrameMouseUp(e) {\n        if (this.event.type) {\n            this._frameDragStop(this.event.target);\n            this.event.type = null;\n        }\n    },\n\n    /** Destroy a frame */\n    _eventFrameClose: function _eventFrameClose(e) {\n        if (!this.event.type) {\n            e.preventDefault();\n            this.del(this._frameIdentify(e.target));\n        }\n    },\n\n    /** Hide all frames */\n    _eventHide: function _eventHide(e) {\n        !this.event.type && this.hide();\n    },\n\n    /** Fired when scrolling occurs on panel */\n    _eventPanelScroll: function _eventPanelScroll(e) {\n        if (!this.event.type && this.visible) {\n            // Stop propagation if scrolling is happening inside a frame.\n            // TODO: could propagate scrolling if at top/bottom of frame.\n            var frames = $(e.srcElement).parents(\".frame\");\n            if (frames.length !== 0) {\n                e.stopPropagation();\n            } else {\n                e.preventDefault();\n                this._panelScroll(e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3);\n            }\n        }\n    },\n\n    /** Handle scroll up event */\n    _eventPanelScroll_up: function _eventPanelScroll_up(e) {\n        if (!this.event.type) {\n            e.preventDefault();\n            this._panelScroll(-this.options.scroll);\n        }\n    },\n\n    /** Handle scroll down */\n    _eventPanelScroll_down: function _eventPanelScroll_down(e) {\n        if (!this.event.type) {\n            e.preventDefault();\n            this._panelScroll(this.options.scroll);\n        }\n    },\n\n    /*\n        FRAME EVENTS SUPPORT\n    */\n\n    /** Identify the target frame */\n    _frameIdentify: function _frameIdentify(target) {\n        return this.frame_list[\"#\" + $(target).closest(\".frame\").attr(\"id\")];\n    },\n\n    /** Provides drag support */\n    _frameDragStart: function _frameDragStart(frame) {\n        this._frameFocus(frame, true);\n        var p = this._frameScreen(frame);\n        this._frameResize(this.frame_shadow, p);\n        this._frameGrid(this.frame_shadow, frame.grid_location);\n        frame.grid_location = null;\n        this.frame_shadow.$el.show();\n        $(\".f-cover\").show();\n    },\n\n    /** Removes drag support */\n    _frameDragStop: function _frameDragStop(frame) {\n        this._frameFocus(frame, false);\n        var p = this._frameScreen(this.frame_shadow);\n        this._frameResize(frame, p);\n        this._frameGrid(frame, this.frame_shadow.grid_location, true);\n        this.frame_shadow.grid_location = null;\n        this.frame_shadow.$el.hide();\n        $(\".f-cover\").hide();\n        this._panelAnimationComplete();\n    },\n\n    /*\n        GRID/PIXEL CONVERTER\n    */\n\n    /** Converts a pixel to a grid dimension */\n    _toGridCoord: function _toGridCoord(type, px) {\n        var sign = type == \"width\" || type == \"height\" ? 1 : -1;\n        type == \"top\" && (px -= this.top);\n        return parseInt((px + sign * this.options.margin) / this.options.cell, 10);\n    },\n\n    /** Converts a grid to a pixels dimension */\n    _toPixelCoord: function _toPixelCoord(type, g) {\n        var sign = type == \"width\" || type == \"height\" ? 1 : -1;\n        var px = g * this.options.cell - sign * this.options.margin;\n        type == \"top\" && (px += this.top);\n        return px;\n    },\n\n    /** Converts a pixel to a grid coordinate set */\n    _toGrid: function _toGrid(px) {\n        return {\n            top: this._toGridCoord(\"top\", px.top),\n            left: this._toGridCoord(\"left\", px.left),\n            width: this._toGridCoord(\"width\", px.width),\n            height: this._toGridCoord(\"height\", px.height)\n        };\n    },\n\n    /** Converts a pixel to a grid coordinate set */\n    _toPixel: function _toPixel(g) {\n        return {\n            top: this._toPixelCoord(\"top\", g.top),\n            left: this._toPixelCoord(\"left\", g.left),\n            width: this._toPixelCoord(\"width\", g.width),\n            height: this._toPixelCoord(\"height\", g.height)\n        };\n    },\n\n    /* \n        COLLISION DETECTION\n    */\n\n    /** Check collisions for a grid coordinate set */\n    _isCollision: function _isCollision(g) {\n        function is_collision_pair(a, b) {\n            return !(a.left > b.left + b.width - 1 || a.left + a.width - 1 < b.left || a.top > b.top + b.height - 1 || a.top + a.height - 1 < b.top);\n        }\n        for (var i in this.frame_list) {\n            var frame = this.frame_list[i];\n            if (frame.grid_location !== null && is_collision_pair(g, frame.grid_location)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /** Return location/grid rank */\n    _locationRank: function _locationRank(loc) {\n        return loc.top * this.cols + loc.left;\n    },\n\n    /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n    /** Refresh panel */\n    _panelRefresh: function _panelRefresh(animate) {\n        this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n        this._frameInsert(null, null, animate);\n    },\n\n    /** Complete panel animation / frames not moving */\n    _panelAnimationComplete: function _panelAnimationComplete() {\n        var self = this;\n        $(\".frame\").promise().done(function () {\n            self._panelScroll(0, true);\n        });\n    },\n\n    /** Scroll panel */\n    _panelScroll: function _panelScroll(delta, animate) {\n        var top_new = this.top - this.options.scroll * delta;\n        top_new = Math.max(top_new, this.top_max);\n        top_new = Math.min(top_new, this.options.top_min);\n        if (this.top != top_new) {\n            for (var i in this.frame_list) {\n                var frame = this.frame_list[i];\n                if (frame.grid_location !== null) {\n                    var screen_location = {\n                        top: frame.screen_location.top - (this.top - top_new),\n                        left: frame.screen_location.left\n                    };\n                    this._frameOffset(frame, screen_location, animate);\n                }\n            }\n            this.top = top_new;\n        }\n        this.render();\n    },\n\n    /*\n        FRAME FUNCTIONS\n    */\n\n    /** Initialize a new frame */\n    _frameInit: function _frameInit(frame, id) {\n        frame.id = id;\n        frame.screen_location = {};\n        frame.grid_location = {};\n        frame.grid_rank = null;\n        frame.$el.attr(\"id\", id.substring(1));\n    },\n\n    /** Insert frame at given location */\n    _frameInsert: function _frameInsert(frame, new_loc, animate) {\n        var self = this;\n        var place_list = [];\n        if (frame) {\n            frame.grid_location = null;\n            place_list.push([frame, this._locationRank(new_loc)]);\n        }\n        _.each(this.frame_list, function (f) {\n            if (f.grid_location !== null) {\n                f.grid_location = null;\n                place_list.push([f, f.grid_rank]);\n            }\n        });\n        place_list.sort(function (a, b) {\n            return a[1] < b[1] ? -1 : a[1] > b[1] ? 1 : 0;\n        });\n        _.each(place_list, function (place) {\n            self._framePlace(place[0], animate);\n        });\n        this.top_max = 0;\n        _.each(this.frame_list, function (f) {\n            if (f.grid_location !== null) {\n                self.top_max = Math.max(self.top_max, f.grid_location.top + f.grid_location.height);\n            }\n        });\n        this.top_max = $(window).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n        this.top_max = Math.min(this.top_max, this.options.top_min);\n        this.render();\n    },\n\n    /** Naive frame placement */\n    _framePlace: function _framePlace(frame, animate) {\n        frame.grid_location = null;\n        var g = this._toGrid(this._frameScreen(frame));\n        var done = false;\n        for (var i = 0; i < this.options.rows; i++) {\n            for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n                g.top = i;\n                g.left = j;\n                if (!this._isCollision(g)) {\n                    done = true;\n                    break;\n                }\n            }\n            if (done) {\n                break;\n            }\n        }\n        if (done) {\n            this._frameGrid(frame, g, animate);\n        } else {\n            console.log(\"Grid dimensions exceeded.\");\n        }\n    },\n\n    /** Handle frame focussing */\n    _frameFocus: function _frameFocus(frame, has_focus) {\n        frame.$el.css(\"z-index\", this.frame_z + (has_focus ? 1 : 0));\n    },\n\n    /** New left/top position frame */\n    _frameOffset: function _frameOffset(frame, p, animate) {\n        frame.screen_location.left = p.left;\n        frame.screen_location.top = p.top;\n        if (animate) {\n            this._frameFocus(frame, true);\n            var self = this;\n            frame.$el.animate({ top: p.top, left: p.left }, \"fast\", function () {\n                self._frameFocus(frame, false);\n            });\n        } else {\n            frame.$el.css({ top: p.top, left: p.left });\n        }\n    },\n\n    /** Resize frame */\n    _frameResize: function _frameResize(frame, p) {\n        frame.$el.css({ width: p.width, height: p.height });\n        frame.screen_location.width = p.width;\n        frame.screen_location.height = p.height;\n    },\n\n    /** Push frame to new grid location */\n    _frameGrid: function _frameGrid(frame, l, animate) {\n        frame.grid_location = l;\n        this._frameOffset(frame, this._toPixel(l), animate);\n        frame.grid_rank = this._locationRank(l);\n    },\n\n    /** Get frame dimensions */\n    _frameScreen: function _frameScreen(frame) {\n        var p = frame.screen_location;\n        return {\n            top: p.top,\n            left: p.left,\n            width: p.width,\n            height: p.height\n        };\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n//=============================================================================\n/**\n * backbone model for icon buttons\n */\nvar IconButton = Backbone.Model.extend({\n    defaults: {\n        title: \"\",\n        icon_class: \"\",\n        on_click: null,\n        menu_options: null,\n        is_menu_button: true,\n        id: null,\n        href: null,\n        target: null,\n        enabled: true,\n        visible: true,\n        tooltip_config: {}\n    }\n});\n\n/**\n *  backbone view for icon buttons\n */\nvar IconButtonView = Backbone.View.extend({\n    initialize: function initialize() {\n        // better rendering this way\n        this.model.attributes.tooltip_config = { placement: \"bottom\" };\n        this.model.bind(\"change\", this.render, this);\n    },\n\n    render: function render() {\n        // hide tooltip\n        this.$el.tooltip(\"hide\");\n\n        var new_elem = this.template(this.model.toJSON());\n        // configure tooltip\n        new_elem.tooltip(this.model.get(\"tooltip_config\"));\n        this.$el.replaceWith(new_elem);\n        this.setElement(new_elem);\n        return this;\n    },\n\n    events: {\n        click: \"click\"\n    },\n\n    click: function click(event) {\n        // if on_click pass to that function\n        if (_.isFunction(this.model.get(\"on_click\"))) {\n            this.model.get(\"on_click\")(event);\n            return false;\n        }\n        // otherwise, bubble up ( to href or whatever )\n        return true;\n    },\n\n    // generate html element\n    template: function template(options) {\n        var buffer = \"title=\\\"\" + options.title + \"\\\" class=\\\"icon-button\";\n\n        if (options.is_menu_button) {\n            buffer += \" menu-button\";\n        }\n\n        buffer += \" \" + options.icon_class;\n\n        if (!options.enabled) {\n            buffer += \"_disabled\";\n        }\n\n        // close class tag\n        buffer += '\"';\n\n        if (options.id) {\n            buffer += \" id=\\\"\" + options.id + \"\\\"\";\n        }\n\n        buffer += \" href=\\\"\" + options.href + \"\\\"\";\n        // add target for href\n        if (options.target) {\n            buffer += \" target=\\\"\" + options.target + \"\\\"\";\n        }\n        // set visibility\n        if (!options.visible) {\n            buffer += ' style=\"display: none;\"';\n        }\n\n        // enabled/disabled\n        if (options.enabled) {\n            buffer = \"<a \" + buffer + \"/>\";\n        } else {\n            buffer = \"<span \" + buffer + \"/>\";\n        }\n\n        // return element\n        return $(buffer);\n    }\n});\n\n// define collection\nvar IconButtonCollection = Backbone.Collection.extend({\n    model: IconButton\n});\n\n/**\n * menu with multiple icon buttons\n * views are not needed nor used for individual buttons\n */\nvar IconButtonMenuView = Backbone.View.extend({\n    tagName: \"div\",\n\n    initialize: function initialize() {\n        this.render();\n    },\n\n    render: function render() {\n        // initialize icon buttons\n        var self = this;\n        this.collection.each(function (button) {\n            // create and add icon button to menu\n            var elt = $(\"<a/>\").attr(\"href\", \"javascript:void(0)\").attr(\"title\", button.attributes.title).addClass(\"icon-button menu-button\").addClass(button.attributes.icon_class).appendTo(self.$el).click(button.attributes.on_click);\n\n            // configure tooltip\n            if (button.attributes.tooltip_config) {\n                elt.tooltip(button.attributes.tooltip_config);\n            }\n\n            // add popup menu to icon\n            var menu_options = button.get(\"options\");\n            if (menu_options) {\n                make_popupmenu(elt, menu_options);\n            }\n        });\n\n        // return\n        return this;\n    }\n});\n\n/**\n * Returns an IconButtonMenuView for the provided configuration.\n * Configuration is a list of dictionaries where each dictionary\n * defines an icon button. Each dictionary must have the following\n * elements: icon_class, title, and on_click.\n */\nvar create_icon_buttons_menu = function create_icon_buttons_menu(config, global_config) {\n    // initialize global configuration\n    if (!global_config) global_config = {};\n\n    // create and initialize menu\n    var buttons = new IconButtonCollection(_.map(config, function (button_config) {\n        return new IconButton(_.extend(button_config, global_config));\n    }));\n\n    // return menu\n    return new IconButtonMenuView({ collection: buttons });\n};\n\n//=============================================================================\nexports.default = {\n    IconButton: IconButton,\n    IconButtonView: IconButtonView,\n    IconButtonCollection: IconButtonCollection,\n    IconButtonMenuView: IconButtonMenuView,\n    create_icon_buttons_menu: create_icon_buttons_menu\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n//==============================================================================\nvar LOGGING_FNS = [\"log\", \"debug\", \"info\", \"warn\", \"error\", \"metric\"];\n/** adds logging functions to an obj.prototype (or obj directly) adding a namespace for filtering\n *  @param {Object} obj\n *  @param {String} namespace\n */\nfunction addLogging(obj, namespace) {\n    var addTo = obj.prototype !== undefined ? obj.prototype : obj;\n    if (namespace !== undefined) {\n        addTo._logNamespace = namespace;\n    }\n    //yagni?: without this, may not capture Galaxy.config.debug and add Galaxy.logger properly\n    // if( window.Galaxy && window.Galaxy.config && window.Galaxy.config.debug ){\n    //     addTo.logger = window.Galaxy.logger;\n    // }\n\n    // give the object each\n    LOGGING_FNS.forEach(function (logFn) {\n        addTo[logFn] = function () {\n            if (!this.logger) {\n                return undefined;\n            }\n            if (this.logger.emit) {\n                return this.logger.emit(logFn, this._logNamespace, arguments);\n            }\n            if (this.logger[logFn]) {\n                //TODO:! there has to be a way to get the lineno/file into this\n                // http://stackoverflow.com/questions/13815640/a-proper-wrapper-for-console-log-with-correct-line-number\n                // http://www.paulirish.com/2009/log-a-lightweight-wrapper-for-consolelog/\n                return this.logger[logFn].apply(this.logger, arguments);\n            }\n            return undefined;\n        };\n    });\n    return obj;\n}\n\n//==============================================================================\nexports.default = addLogging;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// =============================================================================\n/**\n * view for a popup menu\n */\nvar PopupMenu = Backbone.View.extend({\n    //TODO: maybe better as singleton off the Galaxy obj\n    /** Cache the desired button element and options, set up the button click handler\n     *  NOTE: attaches this view as HTML/jQ data on the button for later use.\n     */\n    initialize: function initialize($button, options) {\n        // default settings\n        this.$button = $button;\n        if (!this.$button.length) {\n            this.$button = $(\"<div/>\");\n        }\n        this.options = options || [];\n        this.$button.data(\"popupmenu\", this);\n\n        // set up button click -> open menu behavior\n        var menu = this;\n        this.$button.click(function (event) {\n            // if there's already a menu open, remove it\n            $(\".popmenu-wrapper\").remove();\n            menu._renderAndShow(event);\n            return false;\n        });\n    },\n\n    // render the menu, append to the page body at the click position, and set up the 'click-away' handlers, show\n    _renderAndShow: function _renderAndShow(clickEvent) {\n        this.render();\n        this.$el.appendTo(\"body\").css(this._getShownPosition(clickEvent)).show();\n        this._setUpCloseBehavior();\n    },\n\n    // render the menu\n    // this menu doesn't attach itself to the DOM ( see _renderAndShow )\n    render: function render() {\n        // render the menu body absolute and hidden, fill with template\n        this.$el.addClass(\"popmenu-wrapper\").hide().css({ position: \"absolute\" }).html(this.template(this.$button.attr(\"id\"), this.options));\n\n        // set up behavior on each link/anchor elem\n        if (this.options.length) {\n            var menu = this;\n            //precondition: there should be one option per li\n            this.$el.find(\"li\").each(function (i, li) {\n                var option = menu.options[i];\n\n                // if the option has 'func', call that function when the anchor is clicked\n                if (option.func) {\n                    $(this).children(\"a.popupmenu-option\").click(function (event) {\n                        option.func.call(menu, event, option);\n                        // We must preventDefault otherwise clicking \"cancel\"\n                        // on a purge or something still navigates and causes\n                        // the action.\n                        event.preventDefault();\n                        // bubble up so that an option click will call the close behavior\n                    });\n                }\n            });\n        }\n        return this;\n    },\n\n    template: function template(id, options) {\n        return ['<ul id=\"', id, '-menu\" class=\"dropdown-menu\">', this._templateOptions(options), \"</ul>\"].join(\"\");\n    },\n\n    _templateOptions: function _templateOptions(options) {\n        if (!options.length) {\n            return \"<li>(no options)</li>\";\n        }\n        return _.map(options, function (option) {\n            if (option.divider) {\n                return '<li class=\"divider\"></li>';\n            } else if (option.header) {\n                return ['<li class=\"head\"><a href=\"javascript:void(0);\">', option.html, \"</a></li>\"].join(\"\");\n            }\n            var href = option.href || \"javascript:void(0);\";\n            var target = option.target ? \" target=\\\"\" + option.target + \"\\\"\" : \"\";\n\n            var check = option.checked ? '<span class=\"fa fa-check\"></span>' : \"\";\n\n            return ['<li><a class=\"popupmenu-option\" href=\"', href, '\"', target, \">\", check, option.html, \"</a></li>\"].join(\"\");\n        }).join(\"\");\n    },\n\n    // get the absolute position/offset for the menu\n    _getShownPosition: function _getShownPosition(clickEvent) {\n        // display menu horiz. centered on click...\n        var menuWidth = this.$el.width();\n        var x = clickEvent.pageX - menuWidth / 2;\n\n        // adjust to handle horiz. scroll and window dimensions ( draw entirely on visible screen area )\n        x = Math.min(x, $(document).scrollLeft() + $(window).width() - menuWidth - 5);\n        x = Math.max(x, $(document).scrollLeft() + 5);\n        return {\n            top: clickEvent.pageY,\n            left: x\n        };\n    },\n\n    // bind an event handler to all available frames so that when anything is clicked\n    // the menu is removed from the DOM and the event handler unbinds itself\n    _setUpCloseBehavior: function _setUpCloseBehavior() {\n        var menu = this;\n        //TODO: alternately: focus hack, blocking overlay, jquery.blockui\n\n        // function to close popup and unbind itself\n        function closePopup(event) {\n            $(document).off(\"click.close_popup\");\n            if (window && window.parent !== window) {\n                try {\n                    $(window.parent.document).off(\"click.close_popup\");\n                } catch (err) {}\n            } else {\n                try {\n                    $(\"iframe#galaxy_main\").contents().off(\"click.close_popup\");\n                } catch (err) {}\n            }\n            menu.remove();\n        }\n\n        $(\"html\").one(\"click.close_popup\", closePopup);\n        if (window && window.parent !== window) {\n            try {\n                $(window.parent.document).find(\"html\").one(\"click.close_popup\", closePopup);\n            } catch (err) {}\n        } else {\n            try {\n                $(\"iframe#galaxy_main\").contents().one(\"click.close_popup\", closePopup);\n            } catch (err) {}\n        }\n    },\n\n    // add a menu option/item at the given index\n    addItem: function addItem(item, index) {\n        // append to end if no index\n        index = index >= 0 ? index : this.options.length;\n        this.options.splice(index, 0, item);\n        return this;\n    },\n\n    // remove a menu option/item at the given index\n    removeItem: function removeItem(index) {\n        if (index >= 0) {\n            this.options.splice(index, 1);\n        }\n        return this;\n    },\n\n    // search for a menu option by its html\n    findIndexByHtml: function findIndexByHtml(html) {\n        for (var i = 0; i < this.options.length; i++) {\n            if (_.has(this.options[i], \"html\") && this.options[i].html === html) {\n                return i;\n            }\n        }\n        return null;\n    },\n\n    // search for a menu option by its html\n    findItemByHtml: function findItemByHtml(html) {\n        return this.options[this.findIndexByHtml(html)];\n    },\n\n    // string representation\n    toString: function toString() {\n        return \"PopupMenu\";\n    }\n});\n/** shortcut to new for when you don't need to preserve the ref */\nPopupMenu.create = function _create($button, options) {\n    return new PopupMenu($button, options);\n};\n\n// -----------------------------------------------------------------------------\n// the following class functions are bridges from the original make_popupmenu and make_popup_menus\n// to the newer backbone.js PopupMenu\n\n/** Create a PopupMenu from simple map initial_options activated by clicking button_element.\n *      Converts initial_options to object array used by PopupMenu.\n *  @param {jQuery|DOMElement} button_element element which, when clicked, activates menu\n *  @param {Object} initial_options map of key -> values, where\n *      key is option text, value is fn to call when option is clicked\n *  @returns {PopupMenu} the PopupMenu created\n */\nPopupMenu.make_popupmenu = function (button_element, initial_options) {\n    var convertedOptions = [];\n    _.each(initial_options, function (optionVal, optionKey) {\n        var newOption = { html: optionKey };\n\n        // keys with null values indicate: header\n        if (optionVal === null) {\n            // !optionVal? (null only?)\n            newOption.header = true;\n\n            // keys with function values indicate: a menu option\n        } else if (jQuery.type(optionVal) === \"function\") {\n            newOption.func = optionVal;\n        }\n        //TODO:?? any other special optionVals?\n        // there was no divider option originally\n        convertedOptions.push(newOption);\n    });\n    return new PopupMenu($(button_element), convertedOptions);\n};\n\n/** Find all anchors in $parent (using selector) and covert anchors into a PopupMenu options map.\n *  @param {jQuery} $parent the element that contains the links to convert to options\n *  @param {String} selector jq selector string to find links\n *  @returns {Object[]} the options array to initialize a PopupMenu\n */\n//TODO: lose parent and selector, pass in array of links, use map to return options\nPopupMenu.convertLinksToOptions = function ($parent, selector) {\n    $parent = $($parent);\n    selector = selector || \"a\";\n    var options = [];\n    $parent.find(selector).each(function (elem, i) {\n        var option = {};\n        var $link = $(elem);\n\n        // convert link text to the option text (html) and the href into the option func\n        option.html = $link.text();\n        if ($link.attr(\"href\")) {\n            var linkHref = $link.attr(\"href\");\n            var linkTarget = $link.attr(\"target\");\n            var confirmText = $link.attr(\"confirm\");\n\n            option.func = function () {\n                // if there's a \"confirm\" attribute, throw up a confirmation dialog, and\n                //  if the user cancels - do nothing\n                if (confirmText && !confirm(confirmText)) {\n                    return;\n                }\n\n                // if there's no confirm attribute, or the user accepted the confirm dialog:\n                switch (linkTarget) {\n                    // relocate the center panel\n                    case \"_parent\":\n                        window.parent.location = linkHref;\n                        break;\n\n                    // relocate the entire window\n                    case \"_top\":\n                        window.top.location = linkHref;\n                        break;\n\n                    // relocate this panel\n                    default:\n                        window.location = linkHref;\n                }\n            };\n        }\n        options.push(option);\n    });\n    return options;\n};\n\n/** Create a single popupmenu from existing DOM button and anchor elements\n *  @param {jQuery} $buttonElement the element that when clicked will open the menu\n *  @param {jQuery} $menuElement the element that contains the anchors to convert into a menu\n *  @param {String} menuElementLinkSelector jq selector string used to find anchors to be made into menu options\n *  @returns {PopupMenu} the PopupMenu (Backbone View) that can render, control the menu\n */\nPopupMenu.fromExistingDom = function ($buttonElement, $menuElement, menuElementLinkSelector) {\n    $buttonElement = $($buttonElement);\n    $menuElement = $($menuElement);\n    var options = PopupMenu.convertLinksToOptions($menuElement, menuElementLinkSelector);\n    // we're done with the menu (having converted it to an options map)\n    $menuElement.remove();\n    return new PopupMenu($buttonElement, options);\n};\n\n/** Create all popupmenus within a document or a more specific element\n *  @param {DOMElement} parent the DOM element in which to search for popupmenus to build (defaults to document)\n *  @param {String} menuSelector jq selector string to find popupmenu menu elements (defaults to \"div[popupmenu]\")\n *  @param {Function} buttonSelectorBuildFn the function to build the jq button selector.\n *      Will be passed $menuElement, parent.\n *      (Defaults to return '#' + $menuElement.attr( 'popupmenu' ); )\n *  @returns {PopupMenu[]} array of popupmenus created\n */\nPopupMenu.make_popup_menus = function (parent, menuSelector, buttonSelectorBuildFn) {\n    parent = parent || document;\n    // orig. Glx popupmenu menus have a (non-std) attribute 'popupmenu'\n    //  which contains the id of the button that activates the menu\n    menuSelector = menuSelector || \"div[popupmenu]\";\n    // default to (orig. Glx) matching button to menu by using the popupmenu attr of the menu as the id of the button\n    buttonSelectorBuildFn = buttonSelectorBuildFn || function ($menuElement, parent) {\n        return \"#\" + $menuElement.attr(\"popupmenu\");\n    };\n\n    // aggregate and return all PopupMenus\n    var popupMenusCreated = [];\n    $(parent).find(menuSelector).each(function () {\n        var $menuElement = $(this);\n\n        var $buttonElement = $(parent).find(buttonSelectorBuildFn($menuElement, parent));\n\n        popupMenusCreated.push(PopupMenu.fromDom($buttonElement, $menuElement));\n        $buttonElement.addClass(\"popup\");\n    });\n    return popupMenusCreated;\n};\n\n// =============================================================================\nexports.default = PopupMenu;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.collection = new Backbone.Collection();\n        this.model = options && options.model || new Backbone.Model({\n            onchange: null,\n            visible: true\n        }).set(options);\n        this.setElement($(this._template()));\n        this.$nav = this.$(\".tab-navigation\");\n        this.$content = this.$(\".tab-content\");\n        this.$el.on(\"click\", function () {\n            $(\".tooltip\").hide();\n        });\n        this.render();\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.listenTo(this.collection, \"add\", this._add, this);\n        this.listenTo(this.collection, \"remove\", this._remove, this);\n        this.listenTo(this.collection, \"change\", this._change, this);\n        this.listenTo(this.collection, \"reset\", this._reset, this);\n        this.listenTo(this.collection, \"add remove reset\", this.render, this);\n    },\n\n    render: function render() {\n        var id = this.model.get(\"current\");\n        id = this.$(\"#\" + id).length > 0 ? id : this.first();\n        if (id) {\n            this.$nav.children().removeClass(\"active\");\n            this.$content.children().removeClass(\"active\");\n            this.$(\"#tab-\" + id).addClass(\"active\");\n            this.$(\"#\" + id).addClass(\"active\");\n        }\n        this.$el[this.model.get(\"visible\") ? \"fadeIn\" : \"fadeOut\"](\"fast\");\n        this.$nav[this.size() > 1 ? \"show\" : \"hide\"]();\n    },\n\n    /** Returns tab id for currently shown tab */\n    current: function current() {\n        return this.model.get(\"current\");\n    },\n\n    /** Show tab view and highlight a tab by id */\n    show: function show(id) {\n        if (id) {\n            this.model.set({ current: id, visible: true });\n            this.model.get(\"onchange\") && this.model.get(\"onchange\")(id);\n        }\n    },\n\n    /** Hide tab view */\n    hide: function hide() {\n        this.model.set(\"visible\", false);\n    },\n\n    /** Returns first tab */\n    first: function first() {\n        var model = this.collection.first();\n        return model && model.id;\n    },\n\n    /** Returns current number of tabs */\n    size: function size() {\n        return this.collection.length;\n    },\n\n    /** Adds a new tab */\n    add: function add(options) {\n        this.collection.add(options);\n    },\n\n    /** Delete tab */\n    del: function del(id) {\n        this.collection.remove(id);\n    },\n\n    /** Delete all tabs */\n    delAll: function delAll() {\n        this.collection.reset();\n    },\n\n    /** Show tab */\n    showTab: function showTab(id) {\n        this.collection.get(id).set(\"hidden\", false);\n    },\n\n    /** Hide tab */\n    hideTab: function hideTab(id) {\n        this.collection.get(id).set(\"hidden\", true);\n    },\n\n    /** Adds a new tab */\n    _add: function _add(tab_model) {\n        var self = this;\n        var options = tab_model.attributes;\n        this.$content.append($(\"<div/>\").attr(\"id\", options.id).addClass(\"tab-pane\").append(options.$el));\n        this.$nav.append($(this._template_tab(options)).show().tooltip({\n            title: options.tooltip,\n            placement: \"bottom\",\n            container: self.$el\n        }).on(\"click\", function (e) {\n            e.preventDefault();\n            self.show(options.id);\n        }));\n        if (this.size() == 1) {\n            this.show(options.id);\n        }\n    },\n\n    /** Delete tab */\n    _remove: function _remove(tab_model) {\n        this.$(\"#tab-\" + tab_model.id).remove();\n        this.$(\"#\" + tab_model.id).remove();\n    },\n\n    /** Reset collection */\n    _reset: function _reset() {\n        this.$nav.empty();\n        this.$content.empty();\n    },\n\n    /** Change tab */\n    _change: function _change(tab_model) {\n        this.$(\"#tab-\" + tab_model.id)[tab_model.get(\"hidden\") ? \"hide\" : \"show\"]();\n    },\n\n    /** Main template */\n    _template: function _template() {\n        return $(\"<div/>\").addClass(\"ui-tabs tabbable tabs-left\").append($(\"<ul/>\").addClass(\"tab-navigation nav nav-tabs\")).append($(\"<div/>\").addClass(\"tab-content\"));\n    },\n\n    /** Tab template */\n    _template_tab: function _template_tab(options) {\n        var $tmpl = $(\"<li/>\").addClass(\"tab-element\").attr(\"id\", \"tab-\" + options.id).append($(\"<a/>\").attr(\"id\", \"tab-title-link-\" + options.id));\n        var $href = $tmpl.find(\"a\");\n        options.icon && $href.append($(\"<i/>\").addClass(\"tab-icon fa\").addClass(options.icon));\n        $href.append($(\"<span/>\").attr(\"id\", \"tab-title-text-\" + options.id).addClass(\"tab-title-text\").append(options.title));\n        return $tmpl;\n    }\n}); /**\n     *  Renders tabs e.g. used in the charts editor, behaves similar to repeat and section rendering\n     */\nexports.default = { View: View };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 22 */,\n/* 23 */,\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _backbone = __webpack_require__(2);\n\nvar Backbone = _interopRequireWildcard(_backbone);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar logNamespace = \"user\";\n//==============================================================================\n/** @class Model for a Galaxy user (including anonymous users).\n *  @name User\n */\nvar User = Backbone.Model.extend(_baseMvc2.default.LoggableMixin).extend(\n/** @lends User.prototype */{\n    _logNamespace: logNamespace,\n\n    /** API location for this resource */\n    urlRoot: function urlRoot() {\n        return Galaxy.root + \"api/users\";\n    },\n\n    /** Model defaults\n     *  Note: don't check for anon-users with the username as the default is '(anonymous user)'\n     *      a safer method is if( !user.get( 'email' ) ) -> anon user\n     */\n    defaults: /** @lends User.prototype */{\n        id: null,\n        username: \"(\" + (0, _localization2.default)(\"anonymous user\") + \")\",\n        email: \"\",\n        total_disk_usage: 0,\n        nice_total_disk_usage: \"\",\n        quota_percent: null,\n        is_admin: false\n    },\n\n    /** Set up and bind events\n     *  @param {Object} data Initial model data.\n     */\n    initialize: function initialize(data) {\n        this.log(\"User.initialize:\", data);\n\n        this.on(\"loaded\", function (model, resp) {\n            this.log(this + \" has loaded:\", model, resp);\n        });\n        this.on(\"change\", function (model, data) {\n            this.log(this + \" has changed:\", model, data.changes);\n        });\n    },\n\n    isAnonymous: function isAnonymous() {\n        return !this.get(\"email\");\n    },\n\n    isAdmin: function isAdmin() {\n        return this.get(\"is_admin\");\n    },\n\n    /** Load a user with the API using an id.\n     *      If getting an anonymous user or no access to a user id, pass the User.CURRENT_ID_STR\n     *      (e.g. 'current') and the API will return the current transaction's user data.\n     *  @param {String} idOrCurrent encoded user id or the User.CURRENT_ID_STR\n     *  @param {Object} options hash to pass to Backbone.Model.fetch. Can contain success, error fns.\n     *  @fires loaded when the model has been loaded from the API, passing the newModel and AJAX response.\n     */\n    loadFromApi: function loadFromApi(idOrCurrent, options) {\n        idOrCurrent = idOrCurrent || User.CURRENT_ID_STR;\n\n        options = options || {};\n        var model = this;\n        var userFn = options.success;\n\n        /** @ignore */\n        options.success = function (newModel, response) {\n            model.trigger(\"loaded\", newModel, response);\n            if (userFn) {\n                userFn(newModel, response);\n            }\n        };\n\n        // requests for the current user must have a sep. constructed url (fetch don't work, ma)\n        if (idOrCurrent === User.CURRENT_ID_STR) {\n            options.url = this.urlRoot + \"/\" + User.CURRENT_ID_STR;\n        }\n        return Backbone.Model.prototype.fetch.call(this, options);\n    },\n\n    /** Clears all data from the sessionStorage.\n     */\n    clearSessionStorage: function clearSessionStorage() {\n        for (var key in sessionStorage) {\n            //TODO: store these under the user key so we don't have to do this\n            // currently only history\n            if (key.indexOf(\"history:\") === 0) {\n                sessionStorage.removeItem(key);\n            } else if (key === \"history-panel\") {\n                sessionStorage.removeItem(key);\n            }\n        }\n    },\n\n    /** string representation */\n    toString: function toString() {\n        var userInfo = [this.get(\"username\")];\n        if (this.get(\"id\")) {\n            userInfo.unshift(this.get(\"id\"));\n            userInfo.push(this.get(\"email\"));\n        }\n        return \"User(\" + userInfo.join(\":\") + \")\";\n    }\n});\n\n// string to send to tell server to return this transaction's user (see api/users.py)\nUser.CURRENT_ID_STR = \"current\";\n\n// class method to load the current user via the api and return that model\nUser.getCurrentUserFromApi = function (options) {\n    var currentUser = new User();\n    currentUser.loadFromApi(User.CURRENT_ID_STR, options);\n    return currentUser;\n};\n\n// (stub) collection for users (shouldn't be common unless admin UI)\nvar UserCollection = Backbone.Collection.extend(_baseMvc2.default.LoggableMixin).extend({\n    model: User,\n    urlRoot: function urlRoot() {\n        return Galaxy.root + \"api/users\";\n    }\n    //logger  : console,\n});\n\n//==============================================================================\nexports.default = {\n    User: User\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _util = __webpack_require__(10);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _data = __webpack_require__(8);\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _toolForm = __webpack_require__(26);\n\nvar _toolForm2 = _interopRequireDefault(_toolForm);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Mixin for tracking model visibility.\n */\n/**\n * Model, view, and controller objects for Galaxy tools and tool panel.\n */\n\nvar VisibilityMixin = {\n    hidden: false,\n\n    show: function show() {\n        this.set(\"hidden\", false);\n    },\n\n    hide: function hide() {\n        this.set(\"hidden\", true);\n    },\n\n    toggle: function toggle() {\n        this.set(\"hidden\", !this.get(\"hidden\"));\n    },\n\n    is_visible: function is_visible() {\n        return !this.attributes.hidden;\n    }\n};\n\n/**\n * A tool parameter.\n */\nvar ToolParameter = Backbone.Model.extend({\n    defaults: {\n        name: null,\n        label: null,\n        type: null,\n        value: null,\n        html: null,\n        num_samples: 5\n    },\n\n    initialize: function initialize(options) {\n        this.attributes.html = unescape(this.attributes.html);\n    },\n\n    copy: function copy() {\n        return new ToolParameter(this.toJSON());\n    },\n\n    set_value: function set_value(value) {\n        this.set(\"value\", value || \"\");\n    }\n});\n\nvar ToolParameterCollection = Backbone.Collection.extend({\n    model: ToolParameter\n});\n\n/**\n * A data tool parameter.\n */\nvar DataToolParameter = ToolParameter.extend({});\n\n/**\n * An integer tool parameter.\n */\nvar IntegerToolParameter = ToolParameter.extend({\n    set_value: function set_value(value) {\n        this.set(\"value\", parseInt(value, 10));\n    },\n\n    /**\n     * Returns samples from a tool input.\n     */\n    get_samples: function get_samples() {\n        return d3.scale.linear().domain([this.get(\"min\"), this.get(\"max\")]).ticks(this.get(\"num_samples\"));\n    }\n});\n\nvar FloatToolParameter = IntegerToolParameter.extend({\n    set_value: function set_value(value) {\n        this.set(\"value\", parseFloat(value));\n    }\n});\n\n/**\n * A select tool parameter.\n */\nvar SelectToolParameter = ToolParameter.extend({\n    /**\n     * Returns tool options.\n     */\n    get_samples: function get_samples() {\n        return _.map(this.get(\"options\"), function (option) {\n            return option[0];\n        });\n    }\n});\n\n// Set up dictionary of parameter types.\nToolParameter.subModelTypes = {\n    integer: IntegerToolParameter,\n    float: FloatToolParameter,\n    data: DataToolParameter,\n    select: SelectToolParameter\n};\n\n/**\n * A Galaxy tool.\n */\nvar Tool = Backbone.Model.extend({\n    // Default attributes.\n    defaults: {\n        id: null,\n        name: null,\n        description: null,\n        target: null,\n        inputs: [],\n        outputs: []\n    },\n\n    urlRoot: Galaxy.root + \"api/tools\",\n\n    initialize: function initialize(options) {\n        // Set parameters.\n        this.set(\"inputs\", new ToolParameterCollection(_.map(options.inputs, function (p) {\n            var p_class = ToolParameter.subModelTypes[p.type] || ToolParameter;\n            return new p_class(p);\n        })));\n    },\n\n    /**\n     *\n     */\n    toJSON: function toJSON() {\n        var rval = Backbone.Model.prototype.toJSON.call(this);\n\n        // Convert inputs to JSON manually.\n        rval.inputs = this.get(\"inputs\").map(function (i) {\n            return i.toJSON();\n        });\n        return rval;\n    },\n\n    /**\n     * Removes inputs of a particular type; this is useful because not all inputs can be handled by\n     * client and server yet.\n     */\n    remove_inputs: function remove_inputs(types) {\n        var tool = this;\n\n        var incompatible_inputs = tool.get(\"inputs\").filter(function (input) {\n            return types.indexOf(input.get(\"type\")) !== -1;\n        });\n\n        tool.get(\"inputs\").remove(incompatible_inputs);\n    },\n\n    /**\n     * Returns object copy, optionally including only inputs that can be sampled.\n     */\n    copy: function copy(only_samplable_inputs) {\n        var copy = new Tool(this.toJSON());\n\n        // Return only samplable inputs if flag is set.\n        if (only_samplable_inputs) {\n            var valid_inputs = new Backbone.Collection();\n            copy.get(\"inputs\").each(function (input) {\n                if (input.get_samples()) {\n                    valid_inputs.push(input);\n                }\n            });\n            copy.set(\"inputs\", valid_inputs);\n        }\n\n        return copy;\n    },\n\n    apply_search_results: function apply_search_results(results) {\n        _.indexOf(results, this.attributes.id) !== -1 ? this.show() : this.hide();\n        return this.is_visible();\n    },\n\n    /**\n     * Set a tool input's value.\n     */\n    set_input_value: function set_input_value(name, value) {\n        this.get(\"inputs\").find(function (input) {\n            return input.get(\"name\") === name;\n        }).set(\"value\", value);\n    },\n\n    /**\n     * Set many input values at once.\n     */\n    set_input_values: function set_input_values(inputs_dict) {\n        var self = this;\n        _.each(_.keys(inputs_dict), function (input_name) {\n            self.set_input_value(input_name, inputs_dict[input_name]);\n        });\n    },\n\n    /**\n     * Run tool; returns a Deferred that resolves to the tool's output(s).\n     */\n    run: function run() {\n        return this._run();\n    },\n\n    /**\n     * Rerun tool using regions and a target dataset.\n     */\n    rerun: function rerun(target_dataset, regions) {\n        return this._run({\n            action: \"rerun\",\n            target_dataset_id: target_dataset.id,\n            regions: regions\n        });\n    },\n\n    /**\n     * Returns input dict for tool's inputs.\n     */\n    get_inputs_dict: function get_inputs_dict() {\n        var input_dict = {};\n        this.get(\"inputs\").each(function (input) {\n            input_dict[input.get(\"name\")] = input.get(\"value\");\n        });\n        return input_dict;\n    },\n\n    /**\n     * Run tool; returns a Deferred that resolves to the tool's output(s).\n     * NOTE: this method is a helper method and should not be called directly.\n     */\n    _run: function _run(additional_params) {\n        // Create payload.\n        var payload = _.extend({\n            tool_id: this.id,\n            inputs: this.get_inputs_dict()\n        }, additional_params);\n\n        // Because job may require indexing datasets, use server-side\n        // deferred to ensure that job is run. Also use deferred that\n        // resolves to outputs from tool.\n        var run_deferred = $.Deferred();\n\n        var ss_deferred = new _util2.default.ServerStateDeferred({\n            ajax_settings: {\n                url: this.urlRoot,\n                data: JSON.stringify(payload),\n                dataType: \"json\",\n                contentType: \"application/json\",\n                type: \"POST\"\n            },\n            interval: 2000,\n            success_fn: function success_fn(response) {\n                return response !== \"pending\";\n            }\n        });\n\n        // Run job and resolve run_deferred to tool outputs.\n        $.when(ss_deferred.go()).then(function (result) {\n            run_deferred.resolve(new _data2.default.DatasetCollection(result));\n        });\n        return run_deferred;\n    }\n});\n_.extend(Tool.prototype, VisibilityMixin);\n\n/**\n * Tool view.\n */\nvar ToolView = Backbone.View.extend({});\n\n/**\n * Wrap collection of tools for fast access/manipulation.\n */\nvar ToolCollection = Backbone.Collection.extend({\n    model: Tool\n});\n\n/**\n * Label or section header in tool panel.\n */\nvar ToolSectionLabel = Backbone.Model.extend(VisibilityMixin);\n\n/**\n * Section of tool panel with elements (labels and tools).\n */\nvar ToolSection = Backbone.Model.extend({\n    defaults: {\n        elems: [],\n        open: false\n    },\n\n    clear_search_results: function clear_search_results() {\n        _.each(this.attributes.elems, function (elt) {\n            elt.show();\n        });\n\n        this.show();\n        this.set(\"open\", false);\n    },\n\n    apply_search_results: function apply_search_results(results) {\n        var all_hidden = true;\n        var cur_label;\n        _.each(this.attributes.elems, function (elt) {\n            if (elt instanceof ToolSectionLabel) {\n                cur_label = elt;\n                cur_label.hide();\n            } else if (elt instanceof Tool) {\n                if (elt.apply_search_results(results)) {\n                    all_hidden = false;\n                    if (cur_label) {\n                        cur_label.show();\n                    }\n                }\n            }\n        });\n\n        if (all_hidden) {\n            this.hide();\n        } else {\n            this.show();\n            this.set(\"open\", true);\n        }\n    }\n});\n_.extend(ToolSection.prototype, VisibilityMixin);\n\n/**\n * Tool search that updates results when query is changed. Result value of null\n * indicates that query was not run; if not null, results are from search using\n * query.\n */\nvar ToolSearch = Backbone.Model.extend({\n    defaults: {\n        search_hint_string: \"search tools\",\n        min_chars_for_search: 3,\n        clear_btn_url: \"\",\n        visible: true,\n        query: \"\",\n        results: null,\n        // ESC (27) will clear the input field and tool search filters\n        clear_key: 27\n    },\n\n    urlRoot: Galaxy.root + \"api/tools\",\n\n    initialize: function initialize() {\n        this.on(\"change:query\", this.do_search);\n    },\n\n    /**\n     * Do the search and update the results.\n     */\n    do_search: function do_search() {\n        var query = this.attributes.query;\n\n        // If query is too short, do not search.\n        if (query.length < this.attributes.min_chars_for_search) {\n            this.set(\"results\", null);\n            return;\n        }\n\n        // Do search via AJAX.\n        var q = query;\n        // Stop previous ajax-request\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        // Start a new ajax-request in X ms\n        $(\"#search-clear-btn\").hide();\n        $(\"#search-spinner\").show();\n        var self = this;\n        this.timer = setTimeout(function () {\n            // log the search to analytics if present\n            if (typeof ga !== \"undefined\") {\n                ga(\"send\", \"pageview\", Galaxy.root + \"?q=\" + q);\n            }\n            $.get(self.urlRoot, { q: q }, function (data) {\n                self.set(\"results\", data);\n                $(\"#search-spinner\").hide();\n                $(\"#search-clear-btn\").show();\n            }, \"json\");\n        }, 400);\n    },\n\n    clear_search: function clear_search() {\n        this.set(\"query\", \"\");\n        this.set(\"results\", null);\n    }\n});\n_.extend(ToolSearch.prototype, VisibilityMixin);\n\n/**\n * Tool Panel.\n */\nvar ToolPanel = Backbone.Model.extend({\n    initialize: function initialize(options) {\n        this.attributes.tool_search = options.tool_search;\n        this.attributes.tool_search.on(\"change:results\", this.apply_search_results, this);\n        this.attributes.tools = options.tools;\n        this.attributes.layout = new Backbone.Collection(this.parse(options.layout));\n    },\n\n    /**\n     * Parse tool panel dictionary and return collection of tool panel elements.\n     */\n    parse: function parse(response) {\n        // Recursive function to parse tool panel elements.\n        var self = this;\n\n        var // Helper to recursively parse tool panel.\n        parse_elt = function parse_elt(elt_dict) {\n            var type = elt_dict.model_class;\n            // There are many types of tools; for now, anything that ends in 'Tool'\n            // is treated as a generic tool.\n            if (type.indexOf(\"Tool\") === type.length - 4) {\n                return self.attributes.tools.get(elt_dict.id);\n            } else if (type === \"ToolSection\") {\n                // Parse elements.\n                var elems = _.map(elt_dict.elems, parse_elt);\n                elt_dict.elems = elems;\n                return new ToolSection(elt_dict);\n            } else if (type === \"ToolSectionLabel\") {\n                return new ToolSectionLabel(elt_dict);\n            }\n        };\n\n        return _.map(response, parse_elt);\n    },\n\n    clear_search_results: function clear_search_results() {\n        this.get(\"layout\").each(function (panel_elt) {\n            if (panel_elt instanceof ToolSection) {\n                panel_elt.clear_search_results();\n            } else {\n                // Label or tool, so just show.\n                panel_elt.show();\n            }\n        });\n    },\n\n    apply_search_results: function apply_search_results() {\n        var results = this.get(\"tool_search\").get(\"results\");\n        if (results === null) {\n            this.clear_search_results();\n            return;\n        }\n\n        var cur_label = null;\n        this.get(\"layout\").each(function (panel_elt) {\n            if (panel_elt instanceof ToolSectionLabel) {\n                cur_label = panel_elt;\n                cur_label.hide();\n            } else if (panel_elt instanceof Tool) {\n                if (panel_elt.apply_search_results(results)) {\n                    if (cur_label) {\n                        cur_label.show();\n                    }\n                }\n            } else {\n                // Starting new section, so clear current label.\n                cur_label = null;\n                panel_elt.apply_search_results(results);\n            }\n        });\n    }\n});\n\n/**\n * View classes for Galaxy tools and tool panel.\n *\n * Views use the templates defined below for rendering. Views update as needed\n * based on (a) model/collection events and (b) user interactions; in this sense,\n * they are controllers are well and the HTML is the real view in the MVC architecture.\n */\n\n/**\n * Base view that handles visibility based on model's hidden attribute.\n */\nvar BaseView = Backbone.View.extend({\n    initialize: function initialize() {\n        this.model.on(\"change:hidden\", this.update_visible, this);\n        this.update_visible();\n    },\n    update_visible: function update_visible() {\n        this.model.attributes.hidden ? this.$el.hide() : this.$el.show();\n    }\n});\n\n/**\n * Link to a tool.\n */\nvar ToolLinkView = BaseView.extend({\n    tagName: \"div\",\n\n    render: function render() {\n        // create element\n        var $link = $(\"<div/>\");\n        $link.append(templates.tool_link(this.model.toJSON()));\n\n        var formStyle = this.model.get(\"form_style\", null);\n        // open upload dialog for upload tool\n        if (this.model.id === \"upload1\") {\n            $link.find(\"a\").on(\"click\", function (e) {\n                e.preventDefault();\n                Galaxy.upload.show();\n            });\n        } else if (formStyle === \"regular\") {\n            // regular tools\n            var self = this;\n            $link.find(\"a\").on(\"click\", function (e) {\n                e.preventDefault();\n                Galaxy.router.push(\"/\", {\n                    tool_id: self.model.id,\n                    version: self.model.get(\"version\")\n                });\n            });\n        }\n\n        // add element\n        this.$el.append($link);\n        return this;\n    }\n});\n\n/**\n * Panel label/section header.\n */\nvar ToolSectionLabelView = BaseView.extend({\n    tagName: \"div\",\n    className: \"toolPanelLabel\",\n\n    render: function render() {\n        this.$el.append($(\"<span/>\").text(this.model.attributes.text));\n        return this;\n    }\n});\n\n/**\n * Panel section.\n */\nvar ToolSectionView = BaseView.extend({\n    tagName: \"div\",\n    className: \"toolSectionWrapper\",\n\n    initialize: function initialize() {\n        BaseView.prototype.initialize.call(this);\n        this.model.on(\"change:open\", this.update_open, this);\n    },\n\n    render: function render() {\n        // Build using template.\n        this.$el.append(templates.panel_section(this.model.toJSON()));\n\n        // Add tools to section.\n        var section_body = this.$el.find(\".toolSectionBody\");\n        _.each(this.model.attributes.elems, function (elt) {\n            if (elt instanceof Tool) {\n                var tool_view = new ToolLinkView({\n                    model: elt,\n                    className: \"toolTitle\"\n                });\n                tool_view.render();\n                section_body.append(tool_view.$el);\n            } else if (elt instanceof ToolSectionLabel) {\n                var label_view = new ToolSectionLabelView({\n                    model: elt\n                });\n                label_view.render();\n                section_body.append(label_view.$el);\n            } else {\n                // TODO: handle nested section bodies?\n            }\n        });\n        return this;\n    },\n\n    events: {\n        \"click .toolSectionTitle > a\": \"toggle\"\n    },\n\n    /**\n     * Toggle visibility of tool section.\n     */\n    toggle: function toggle() {\n        this.model.set(\"open\", !this.model.attributes.open);\n    },\n\n    /**\n     * Update whether section is open or close.\n     */\n    update_open: function update_open() {\n        this.model.attributes.open ? this.$el.children(\".toolSectionBody\").slideDown(\"fast\") : this.$el.children(\".toolSectionBody\").slideUp(\"fast\");\n    }\n});\n\nvar ToolSearchView = Backbone.View.extend({\n    tagName: \"div\",\n    id: \"tool-search\",\n    className: \"bar\",\n\n    events: {\n        click: \"focus_and_select\",\n        \"keyup :input\": \"query_changed\",\n        \"change :input\": \"query_changed\",\n        \"click #search-clear-btn\": \"clear\"\n    },\n\n    render: function render() {\n        this.$el.append(templates.tool_search(this.model.toJSON()));\n        if (!this.model.is_visible()) {\n            this.$el.hide();\n        }\n\n        // Adjust top for issue 2907 depending on whether the messagebox is visible.\n        if ($(\"#messagebox\").is(\":visible\")) {\n            this.$el.css(\"top\", \"95px\");\n        }\n\n        this.$el.find(\"[title]\").tooltip();\n        return this;\n    },\n\n    focus_and_select: function focus_and_select() {\n        this.$el.find(\":input\").focus().select();\n    },\n\n    clear: function clear() {\n        this.model.clear_search();\n        this.$el.find(\":input\").val(\"\");\n        this.focus_and_select();\n        return false;\n    },\n\n    query_changed: function query_changed(evData) {\n        // check for the 'clear key' (ESC) first\n        if (this.model.attributes.clear_key && this.model.attributes.clear_key === evData.which) {\n            this.clear();\n            return false;\n        }\n        this.model.set(\"query\", this.$el.find(\":input\").val());\n    }\n});\n\n/**\n * Tool panel view. Events triggered include:\n * tool_link_click(click event, tool_model)\n */\nvar ToolPanelView = Backbone.View.extend({\n    tagName: \"div\",\n    className: \"toolMenu\",\n\n    /**\n     * Set up view.\n     */\n    initialize: function initialize() {\n        this.model.get(\"tool_search\").on(\"change:results\", this.handle_search_results, this);\n    },\n\n    render: function render() {\n        var self = this;\n\n        // Render search.\n        var search_view = new ToolSearchView({\n            model: this.model.get(\"tool_search\")\n        });\n        search_view.render();\n        self.$el.append(search_view.$el);\n\n        // Render panel.\n        this.model.get(\"layout\").each(function (panel_elt) {\n            if (panel_elt instanceof ToolSection) {\n                var section_title_view = new ToolSectionView({\n                    model: panel_elt\n                });\n                section_title_view.render();\n                self.$el.append(section_title_view.$el);\n            } else if (panel_elt instanceof Tool) {\n                var tool_view = new ToolLinkView({\n                    model: panel_elt,\n                    className: \"toolTitleNoSection\"\n                });\n                tool_view.render();\n                self.$el.append(tool_view.$el);\n            } else if (panel_elt instanceof ToolSectionLabel) {\n                var label_view = new ToolSectionLabelView({\n                    model: panel_elt\n                });\n                label_view.render();\n                self.$el.append(label_view.$el);\n            }\n        });\n\n        // Setup tool link click eventing.\n        self.$el.find(\"a.tool-link\").click(function (e) {\n            // Tool id is always the first class.\n            var tool_id = $(this).attr(\"class\").split(/\\s+/)[0];\n\n            var tool = self.model.get(\"tools\").get(tool_id);\n\n            self.trigger(\"tool_link_click\", e, tool);\n        });\n\n        return this;\n    },\n\n    handle_search_results: function handle_search_results() {\n        var results = this.model.get(\"tool_search\").get(\"results\");\n        if (results && results.length === 0) {\n            $(\"#search-no-results\").show();\n        } else {\n            $(\"#search-no-results\").hide();\n        }\n    }\n});\n\n/**\n * View for working with a tool: setting parameters and inputs and executing the tool.\n */\nvar ToolFormView = Backbone.View.extend({\n    className: \"toolForm\",\n\n    render: function render() {\n        this.$el.children().remove();\n        this.$el.append(templates.tool_form(this.model.toJSON()));\n    }\n});\n\n/**\n * Integrated tool menu + tool execution.\n */\nvar IntegratedToolMenuAndView = Backbone.View.extend({\n    className: \"toolMenuAndView\",\n\n    initialize: function initialize() {\n        this.tool_panel_view = new ToolPanelView({\n            collection: this.collection\n        });\n        this.tool_form_view = new ToolFormView();\n    },\n\n    render: function render() {\n        // Render and append tool panel.\n        this.tool_panel_view.render();\n        this.tool_panel_view.$el.css(\"float\", \"left\");\n        this.$el.append(this.tool_panel_view.$el);\n\n        // Append tool form view.\n        this.tool_form_view.$el.hide();\n        this.$el.append(this.tool_form_view.$el);\n\n        // On tool link click, show tool.\n        var self = this;\n        this.tool_panel_view.on(\"tool_link_click\", function (e, tool) {\n            // Prevents click from activating link:\n            e.preventDefault();\n            // Show tool that was clicked on:\n            self.show_tool(tool);\n        });\n    },\n\n    /**\n     * Fetch and display tool.\n     */\n    show_tool: function show_tool(tool) {\n        var self = this;\n        tool.fetch().done(function () {\n            self.tool_form_view.model = tool;\n            self.tool_form_view.render();\n            self.tool_form_view.$el.show();\n            $(\"#left\").width(\"650px\");\n        });\n    }\n});\n\n// TODO: move into relevant views\nvar templates = {\n    // the search bar at the top of the tool panel\n    tool_search: _.template(['<input id=\"tool-search-query\" class=\"search-query parent-width\" name=\"query\" ', 'placeholder=\"<%- search_hint_string %>\" autocomplete=\"off\" type=\"text\" />', '<a id=\"search-clear-btn\" title=\"clear search (esc)\"> </a>',\n    //TODO: replace with icon\n    '<span id=\"search-spinner\" class=\"search-spinner fa fa-spinner fa-spin\"></span>'].join(\"\")),\n\n    // the category level container in the tool panel (e.g. 'Get Data', 'Text Manipulation')\n    panel_section: _.template(['<div class=\"toolSectionTitle\" id=\"title_<%- id %>\">', '<a href=\"javascript:void(0)\"><span><%- name %></span></a>', \"</div>\", '<div id=\"<%- id %>\" class=\"toolSectionBody\" style=\"display: none;\">', '<div class=\"toolSectionBg\"></div>', \"<div>\"].join(\"\")),\n\n    // a single tool's link in the tool panel; will load the tool form in the center panel\n    tool_link: _.template(['<a class=\"<%- id %> tool-link\" href=\"<%= link %>\" target=\"<%- target %>\" minsizehint=\"<%- min_width %>\">', '<span class=\"labels\">', \"<% _.each( labels, function( label ){ %>\", '<span class=\"label label-default label-<%- label %>\">', \"<%- label %>\", \"</span>\", \"<% }); %>\", \"</span>\", '<span class=\"tool-old-link\">', \"<%- name %>\", \"</span>\", \" <%- description %>\", \"</a>\"].join(\"\")),\n\n    // the tool form for entering tool parameters, viewing help and executing the tool\n    // loaded when a tool link is clicked in the tool panel\n    tool_form: _.template(['<div class=\"toolFormTitle\"><%- tool.name %> (version <%- tool.version %>)</div>', '<div class=\"toolFormBody\">', \"<% _.each( tool.inputs, function( input ){ %>\", '<div class=\"form-row\">', '<label for=\"<%- input.name %>\"><%- input.label %>:</label>', '<div class=\"form-row-input\">', \"<%= input.html %>\", \"</div>\", '<div class=\"toolParamHelp\" style=\"clear: both;\">', \"<%- input.help %>\", \"</div>\", '<div style=\"clear: both;\"></div>', \"</div>\", \"<% }); %>\", \"</div>\", '<div class=\"form-row form-actions\">', '<input type=\"submit\" class=\"btn btn-primary\" name=\"runtool_btn\" value=\"Execute\" />', \"</div>\", '<div class=\"toolHelp\">', '<div class=\"toolHelpBody\"><% tool.help %></div>', \"</div>\"\n    // TODO: we need scoping here because 'help' is the dom for the help menu in the masthead\n    // which implies a leaky variable that I can't find\n    ].join(\"\"), { variable: \"tool\" })\n};\n\n// Exports\nexports.default = {\n    ToolParameter: ToolParameter,\n    IntegerToolParameter: IntegerToolParameter,\n    SelectToolParameter: SelectToolParameter,\n    Tool: Tool,\n    ToolCollection: ToolCollection,\n    ToolSearch: ToolSearch,\n    ToolPanel: ToolPanel,\n    ToolPanelView: ToolPanelView,\n    ToolFormView: ToolFormView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _toolFormBase = __webpack_require__(47);\n\nvar _toolFormBase2 = _interopRequireDefault(_toolFormBase);\n\nvar _webhooks = __webpack_require__(13);\n\nvar _webhooks2 = _interopRequireDefault(_webhooks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.modal = parent.Galaxy.modal || new _uiModal2.default.View();\n        this.form = new _toolFormBase2.default(_utils2.default.merge({\n            listen_to_history: true,\n            always_refresh: false,\n            buildmodel: function buildmodel(process, form) {\n                var options = form.model.attributes;\n\n                // build request url\n                var build_url = \"\";\n                var build_data = {};\n                var job_id = options.job_id;\n                if (job_id) {\n                    build_url = Galaxy.root + \"api/jobs/\" + job_id + \"/build_for_rerun\";\n                } else {\n                    build_url = Galaxy.root + \"api/tools/\" + options.id + \"/build\";\n                    build_data = $.extend({}, Galaxy.params);\n                    build_data[\"tool_id\"] && delete build_data[\"tool_id\"];\n                }\n                options.version && (build_data[\"tool_version\"] = options.version);\n\n                // get initial model\n                _utils2.default.get({\n                    url: build_url,\n                    data: build_data,\n                    success: function success(data) {\n                        if (!data.display) {\n                            window.location = Galaxy.root;\n                            return;\n                        }\n                        form.model.set(data);\n                        self._customize(form);\n                        Galaxy.emit.debug(\"tool-form-base::_buildModel()\", \"Initial tool model ready.\", data);\n                        process.resolve();\n                    },\n                    error: function error(response, status) {\n                        var error_message = response && response.err_msg || \"Uncaught error.\";\n                        if (status == 401) {\n                            window.location = Galaxy.root + \"user/login?\" + $.param({\n                                redirect: Galaxy.root + \"?tool_id=\" + options.id\n                            });\n                        } else if (form.$el.is(\":empty\")) {\n                            form.$el.prepend(new _uiMisc2.default.Message({\n                                message: error_message,\n                                status: \"danger\",\n                                persistent: true,\n                                large: true\n                            }).$el);\n                        } else {\n                            Galaxy.modal && Galaxy.modal.show({\n                                title: \"Tool request failed\",\n                                body: error_message,\n                                buttons: {\n                                    Close: function Close() {\n                                        Galaxy.modal.hide();\n                                    }\n                                }\n                            });\n                        }\n                        Galaxy.emit.debug(\"tool-form-base::_buildModel()\", \"Initial tool model request failed.\", response);\n                        process.reject();\n                    }\n                });\n            },\n            postchange: function postchange(process, form) {\n                var current_state = {\n                    tool_id: form.model.get(\"id\"),\n                    tool_version: form.model.get(\"version\"),\n                    inputs: $.extend(true, {}, form.data.create())\n                };\n                form.wait(true);\n                Galaxy.emit.debug(\"tool-form::postchange()\", \"Sending current state.\", current_state);\n                _utils2.default.request({\n                    type: \"POST\",\n                    url: Galaxy.root + \"api/tools/\" + form.model.get(\"id\") + \"/build\",\n                    data: current_state,\n                    success: function success(data) {\n                        form.update(data);\n                        form.wait(false);\n                        Galaxy.emit.debug(\"tool-form::postchange()\", \"Received new model.\", data);\n                        process.resolve();\n                    },\n                    error: function error(response) {\n                        Galaxy.emit.debug(\"tool-form::postchange()\", \"Refresh request failed.\", response);\n                        process.reject();\n                    }\n                });\n            }\n        }, options));\n        this.deferred = this.form.deferred;\n        this.setElement(\"<div/>\");\n        this.$el.append(this.form.$el);\n    },\n\n    _customize: function _customize(form) {\n        var self = this;\n        var options = form.model.attributes;\n        // build execute button\n        var execute_button = new _uiMisc2.default.Button({\n            icon: \"fa-check\",\n            tooltip: \"Execute: \" + options.name + \" (\" + options.version + \")\",\n            title: \"Execute\",\n            cls: \"btn btn-primary ui-clear-float\",\n            wait_cls: \"btn btn-info ui-clear-float\",\n            onclick: function onclick() {\n                execute_button.wait();\n                form.portlet.disable();\n                self.submit(options, function () {\n                    execute_button.unwait();\n                    form.portlet.enable();\n                });\n            }\n        });\n        options.buttons = { execute: execute_button };\n\n        // remap feature\n        if (options.job_id && options.job_remap) {\n            options.inputs.push({\n                label: \"Resume dependencies from this job\",\n                name: \"rerun_remap_job_id\",\n                type: \"select\",\n                display: \"radio\",\n                ignore: \"__ignore__\",\n                value: \"__ignore__\",\n                options: [[\"Yes\", options.job_id], [\"No\", \"__ignore__\"]],\n                help: \"The previous run of this tool failed and other tools were waiting for it to finish successfully. Use this option to resume those tools using the new output(s) of this tool run.\"\n            });\n        }\n    },\n\n    /** Submit a regular job.\n     * @param{dict}     options   - Specifies tool id and version\n     * @param{function} callback  - Called when request has completed\n     */\n    submit: function submit(options, callback) {\n        var self = this;\n        var job_def = {\n            tool_id: options.id,\n            tool_version: options.version,\n            inputs: this.form.data.create()\n        };\n        this.form.trigger(\"reset\");\n        if (!self.validate(job_def)) {\n            Galaxy.emit.debug(\"tool-form::submit()\", \"Submission canceled. Validation failed.\");\n            callback && callback();\n            return;\n        }\n        if (options.action !== Galaxy.root + \"tool_runner/index\") {\n            var $f = $(\"<form/>\").attr({\n                action: options.action,\n                method: options.method,\n                enctype: options.enctype\n            });\n            _.each(job_def.inputs, function (value, key) {\n                $f.append($(\"<input/>\").attr({ name: key, value: value }));\n            });\n            $f.hide().appendTo(\"body\").submit().remove();\n            callback && callback();\n            return;\n        }\n        Galaxy.emit.debug(\"tool-form::submit()\", \"Validation complete.\", job_def);\n        _utils2.default.request({\n            type: \"POST\",\n            url: Galaxy.root + \"api/tools\",\n            data: job_def,\n            success: function success(response) {\n                callback && callback();\n                self.$el.children().hide();\n                self.$el.append(self._templateSuccess(response));\n                // Show Webhook if job is running\n                if (response.jobs && response.jobs.length > 0) {\n                    self.$el.append($(\"<div/>\", { id: \"webhook-view\" }));\n                    var WebhookApp = new _webhooks2.default.WebhookView({\n                        urlRoot: Galaxy.root + \"api/webhooks/tool\",\n                        toolId: job_def.tool_id\n                    });\n                }\n                parent.Galaxy && parent.Galaxy.currHistoryPanel && parent.Galaxy.currHistoryPanel.refreshContents();\n            },\n            error: function error(response) {\n                callback && callback();\n                Galaxy.emit.debug(\"tool-form::submit\", \"Submission failed.\", response);\n                var input_found = false;\n                if (response && response.err_data) {\n                    var error_messages = self.form.data.matchResponse(response.err_data);\n                    for (var input_id in error_messages) {\n                        self.form.highlight(input_id, error_messages[input_id]);\n                        input_found = true;\n                        break;\n                    }\n                }\n                if (!input_found) {\n                    self.modal.show({\n                        title: \"Job submission failed\",\n                        body: self._templateError(job_def, response && response.err_msg),\n                        buttons: {\n                            Close: function Close() {\n                                self.modal.hide();\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    /** Validate job dictionary.\n     * @param{dict}     job_def   - Job execution dictionary\n     */\n    validate: function validate(job_def) {\n        var job_inputs = job_def.inputs;\n        var batch_n = -1;\n        var batch_src = null;\n        for (var job_input_id in job_inputs) {\n            var input_value = job_inputs[job_input_id];\n            var input_id = this.form.data.match(job_input_id);\n            var input_field = this.form.field_list[input_id];\n            var input_def = this.form.input_list[input_id];\n            if (!input_id || !input_def || !input_field) {\n                Galaxy.emit.debug(\"tool-form::validate()\", \"Retrieving input objects failed.\");\n                continue;\n            }\n            if (!input_def.optional && input_value == null) {\n                this.form.highlight(input_id);\n                return false;\n            }\n            if (input_value && input_value.batch) {\n                var n = input_value.values.length;\n                var src = n > 0 && input_value.values[0] && input_value.values[0].src;\n                if (src) {\n                    if (batch_src === null) {\n                        batch_src = src;\n                    } else if (batch_src !== src) {\n                        this.form.highlight(input_id, \"Please select either dataset or dataset list fields for all batch mode fields.\");\n                        return false;\n                    }\n                }\n                if (batch_n === -1) {\n                    batch_n = n;\n                } else if (batch_n !== n) {\n                    this.form.highlight(input_id, \"Please make sure that you select the same number of inputs for all batch mode fields. This field contains <b>\" + n + \"</b> selection(s) while a previous field contains <b>\" + batch_n + \"</b>.\");\n                    return false;\n                }\n            }\n        }\n        return true;\n    },\n\n    _templateSuccess: function _templateSuccess(response) {\n        if (response.jobs && response.jobs.length > 0) {\n            var njobs = response.jobs.length;\n            var njobs_text = njobs == 1 ? \"1 job has\" : njobs + \" jobs have\";\n            var $message = $(\"<div/>\").addClass(\"donemessagelarge\").append($(\"<p/>\").text(njobs_text + \" been successfully added to the queue - resulting in the following datasets:\"));\n            _.each(response.outputs, function (output) {\n                $message.append($(\"<p/>\").addClass(\"messagerow\").append($(\"<b/>\").text(output.hid + \": \" + output.name)));\n            });\n            $message.append($(\"<p/>\").append(\"<b/>\").text(\"You can check the status of queued jobs and view the resulting data by refreshing the History pane. When the job has been run the status will change from 'running' to 'finished' if completed successfully or 'error' if problems were encountered.\"));\n            return $message;\n        } else {\n            return this._templateError(response, \"Invalid success response. No jobs found.\");\n        }\n    },\n\n    _templateError: function _templateError(response, err_msg) {\n        return $(\"<div/>\").addClass(\"errormessagelarge\").append($(\"<p/>\").text(\"The server could not complete the request. Please contact the Galaxy Team if this error persists. \" + (err_msg || \"\"))).append($(\"<pre/>\").text(JSON.stringify(response, null, 4)));\n    }\n}); /* This is the regular tool form */\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _menu = __webpack_require__(28);\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _scratchbook = __webpack_require__(30);\n\nvar _scratchbook2 = _interopRequireDefault(_scratchbook);\n\nvar _userQuotameter = __webpack_require__(44);\n\nvar _userQuotameter2 = _interopRequireDefault(_userQuotameter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Masthead **/\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.options = options;\n        this.setElement(this._template());\n        this.$navbarBrandLink = this.$(\".navbar-brand-link\");\n        this.$navbarBrandImage = this.$(\".navbar-brand-image\");\n        this.$navbarBrandTitle = this.$(\".navbar-brand-title\");\n        this.$navbarTabs = this.$(\".navbar-tabs\");\n        this.$quoteMeter = this.$(\".quota-meter-container\");\n\n        // build tabs\n        this.collection = new _menu2.default.Collection();\n        this.collection.on(\"add\", function (model) {\n            self.$navbarTabs.append(new _menu2.default.Tab({ model: model }).render().$el);\n        }).on(\"reset\", function () {\n            self.$navbarTabs.empty();\n        }).on(\"dispatch\", function (callback) {\n            self.collection.each(function (m) {\n                callback(m);\n            });\n        }).fetch(this.options);\n\n        // scratchbook\n        Galaxy.frame = this.frame = new _scratchbook2.default({\n            collection: this.collection\n        });\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = this.quotaMeter = new _userQuotameter2.default.UserQuotaMeter({\n            model: Galaxy.user,\n            el: this.$quoteMeter\n        });\n\n        // loop through beforeunload functions if the user attempts to unload the page\n        $(window).on(\"click\", function (e) {\n            var $download_link = $(e.target).closest(\"a[download]\");\n            if ($download_link.length == 1) {\n                if ($(\"iframe[id=download]\").length === 0) {\n                    $(\"body\").append($(\"<iframe/>\").attr(\"id\", \"download\").hide());\n                }\n                $(\"iframe[id=download]\").attr(\"src\", $download_link.attr(\"href\"));\n                e.preventDefault();\n            }\n        }).on(\"beforeunload\", function () {\n            var text = \"\";\n            self.collection.each(function (model) {\n                var q = model.get(\"onbeforeunload\") && model.get(\"onbeforeunload\")();\n                q && (text += q + \" \");\n            });\n            if (text !== \"\") {\n                return text;\n            }\n        });\n    },\n\n    render: function render() {\n        this.$navbarBrandTitle.html(\"Galaxy \" + (this.options.brand && \"/ \" + this.options.brand || \"\"));\n        this.$navbarBrandLink.attr(\"href\", this.options.logo_url);\n        this.$navbarBrandImage.attr(\"src\", this.options.logo_src);\n        this.quotaMeter.render();\n        return this;\n    },\n\n    /** body template */\n    _template: function _template() {\n        return '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' + '<div class=\"navbar-header\">' + '<div class=\"navbar-tabs\"/>' + \"</div>\" + '<div class=\"navbar-brand\">' + '<a class=\"navbar-brand-link\">' + '<img class=\"navbar-brand-image\"/>' + '<span class=\"navbar-brand-title\"/>' + \"</a>\" + \"</div>\" + '<div class=\"quota-meter-container\"/>' + '<div class=\"navbar-icons\"/>' + \"</div>\";\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, jQuery, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _genericNavView = __webpack_require__(29);\n\nvar _genericNavView2 = _interopRequireDefault(_genericNavView);\n\nvar _webhooks = __webpack_require__(13);\n\nvar _webhooks2 = _interopRequireDefault(_webhooks);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Masthead Collection **/\nvar Collection = Backbone.Collection.extend({\n    model: Backbone.Model.extend({\n        defaults: {\n            visible: true,\n            target: \"_parent\"\n        }\n    }),\n    fetch: function fetch(options) {\n        var self = this;\n        options = options || {};\n        this.reset();\n\n        //\n        // Chat server tab\n        //\n        var extendedNavItem = new _genericNavView2.default.GenericNavView();\n        this.add(extendedNavItem.render());\n\n        //\n        // Analyze data tab.\n        //\n        this.add({\n            id: \"analysis\",\n            title: (0, _localization2.default)(\"Analyze Data\"),\n            url: \"\",\n            tooltip: (0, _localization2.default)(\"Analysis home view\")\n        });\n\n        //\n        // Workflow tab.\n        //\n        this.add({\n            id: \"workflow\",\n            title: (0, _localization2.default)(\"Workflow\"),\n            tooltip: (0, _localization2.default)(\"Chain tools into workflows\"),\n            disabled: !Galaxy.user.id,\n            url: \"workflow\"\n        });\n\n        //\n        // 'Shared Items' or Libraries tab.\n        //\n        this.add({\n            id: \"shared\",\n            title: (0, _localization2.default)(\"Shared Data\"),\n            url: \"library/index\",\n            tooltip: (0, _localization2.default)(\"Access published resources\"),\n            menu: [{\n                title: (0, _localization2.default)(\"Data Libraries\"),\n                url: \"library/list\"\n            }, {\n                title: (0, _localization2.default)(\"Histories\"),\n                url: \"histories/list_published\"\n            }, {\n                title: (0, _localization2.default)(\"Workflows\"),\n                url: \"workflows/list_published\"\n            }, {\n                title: (0, _localization2.default)(\"Visualizations\"),\n                url: \"visualizations/list_published\"\n            }, {\n                title: (0, _localization2.default)(\"Pages\"),\n                url: \"pages/list_published\"\n            }]\n        });\n\n        //\n        // Visualization tab.\n        //\n        this.add({\n            id: \"visualization\",\n            title: (0, _localization2.default)(\"Visualization\"),\n            url: \"visualizations/list\",\n            tooltip: (0, _localization2.default)(\"Visualize datasets\"),\n            disabled: !Galaxy.user.id,\n            menu: [{\n                title: (0, _localization2.default)(\"New Track Browser\"),\n                url: \"visualization/trackster\",\n                target: \"_frame\"\n            }, {\n                title: (0, _localization2.default)(\"Saved Visualizations\"),\n                url: \"visualizations/list\",\n                target: \"_frame\"\n            }, {\n                title: (0, _localization2.default)(\"Interactive Environments\"),\n                url: \"visualization/gie_list\",\n                target: \"galaxy_main\"\n            }]\n        });\n\n        //\n        // Webhooks\n        //\n        _webhooks2.default.add({\n            url: \"api/webhooks/masthead/all\",\n            callback: function callback(webhooks) {\n                $(document).ready(function () {\n                    $.each(webhooks.models, function (index, model) {\n                        var webhook = model.toJSON();\n                        if (webhook.activate) {\n                            var obj = {\n                                id: webhook.name,\n                                icon: webhook.config.icon,\n                                url: webhook.config.url,\n                                tooltip: webhook.config.tooltip,\n                                onclick: webhook.config.function && new Function(webhook.config.function)\n                            };\n\n                            // Galaxy.page is undefined for data libraries, workflows pages\n                            if (Galaxy.page) {\n                                Galaxy.page.masthead.collection.add(obj);\n                            } else if (Galaxy.masthead) {\n                                Galaxy.masthead.collection.add(obj);\n                            }\n\n                            // Append masthead script and styles to Galaxy main\n                            _utils2.default.appendScriptStyle(webhook);\n                        }\n                    });\n                });\n            }\n        });\n\n        //\n        // Admin.\n        //\n        Galaxy.user.get(\"is_admin\") && this.add({\n            id: \"admin\",\n            title: (0, _localization2.default)(\"Admin\"),\n            url: \"admin\",\n            tooltip: (0, _localization2.default)(\"Administer this Galaxy\"),\n            cls: \"admin-only\"\n        });\n\n        //\n        // Help tab.\n        //\n        var helpTab = {\n            id: \"help\",\n            title: (0, _localization2.default)(\"Help\"),\n            tooltip: (0, _localization2.default)(\"Support, contact, and community\"),\n            menu: [{\n                title: (0, _localization2.default)(\"Support\"),\n                url: options.support_url,\n                target: \"_blank\"\n            }, {\n                title: (0, _localization2.default)(\"Search\"),\n                url: options.search_url,\n                target: \"_blank\"\n            }, {\n                title: (0, _localization2.default)(\"Mailing Lists\"),\n                url: options.mailing_lists,\n                target: \"_blank\"\n            }, {\n                title: (0, _localization2.default)(\"Videos\"),\n                url: options.screencasts_url,\n                target: \"_blank\"\n            }, {\n                title: (0, _localization2.default)(\"Wiki\"),\n                url: options.wiki_url,\n                target: \"_blank\"\n            }, {\n                title: (0, _localization2.default)(\"How to Cite Galaxy\"),\n                url: options.citation_url,\n                target: \"_blank\"\n            }, {\n                title: (0, _localization2.default)(\"Interactive Tours\"),\n                url: \"tours\"\n            }]\n        };\n        options.terms_url && helpTab.menu.push({\n            title: (0, _localization2.default)(\"Terms and Conditions\"),\n            url: options.terms_url,\n            target: \"_blank\"\n        });\n        options.biostar_url && helpTab.menu.unshift({\n            title: (0, _localization2.default)(\"Ask a question\"),\n            url: \"biostar/biostar_question_redirect\",\n            target: \"_blank\"\n        });\n        options.biostar_url && helpTab.menu.unshift({\n            title: (0, _localization2.default)(\"Galaxy Biostar\"),\n            url: options.biostar_url_redirect,\n            target: \"_blank\"\n        });\n        this.add(helpTab);\n\n        //\n        // User tab.\n        //\n        var userTab = {};\n        if (!Galaxy.user.id) {\n            if (options.allow_user_creation) {\n                userTab = {\n                    id: \"user\",\n                    title: (0, _localization2.default)(\"Login or Register\"),\n                    cls: \"loggedout-only\",\n                    tooltip: (0, _localization2.default)(\"Account registration or login\"),\n                    menu: [{\n                        title: (0, _localization2.default)(\"Login\"),\n                        url: \"user/login\",\n                        target: \"galaxy_main\",\n                        noscratchbook: true\n                    }, {\n                        title: (0, _localization2.default)(\"Register\"),\n                        url: \"user/create\",\n                        target: \"galaxy_main\",\n                        noscratchbook: true\n                    }]\n                };\n            } else {\n                userTab = {\n                    id: \"user\",\n                    title: (0, _localization2.default)(\"Login\"),\n                    cls: \"loggedout-only\",\n                    tooltip: (0, _localization2.default)(\"Login\"),\n                    url: \"user/login\",\n                    target: \"galaxy_main\",\n                    noscratchbook: true\n                };\n            }\n        } else {\n            userTab = {\n                id: \"user\",\n                title: (0, _localization2.default)(\"User\"),\n                cls: \"loggedin-only\",\n                tooltip: (0, _localization2.default)(\"Account and saved data\"),\n                menu: [{\n                    title: (0, _localization2.default)(\"Logged in as\") + \" \" + Galaxy.user.get(\"email\")\n                }, {\n                    title: (0, _localization2.default)(\"Preferences\"),\n                    url: \"user\"\n                }, {\n                    title: (0, _localization2.default)(\"Custom Builds\"),\n                    url: \"custom_builds\"\n                }, {\n                    title: (0, _localization2.default)(\"Logout\"),\n                    url: \"user/logout?session_csrf_token=\" + Galaxy.session_csrf_token,\n                    target: \"_top\",\n                    divider: true\n                }, {\n                    title: (0, _localization2.default)(\"Saved Histories\"),\n                    url: \"histories/list\",\n                    target: \"_top\"\n                }, {\n                    title: (0, _localization2.default)(\"Saved Datasets\"),\n                    url: \"datasets/list\",\n                    target: \"_top\"\n                }, {\n                    title: (0, _localization2.default)(\"Saved Pages\"),\n                    url: \"pages/list\",\n                    target: \"_top\"\n                }]\n            };\n        }\n        this.add(userTab);\n        var activeView = this.get(options.active_view);\n        activeView && activeView.set(\"active\", true);\n        return new jQuery.Deferred().resolve().promise();\n    }\n});\n\n/** Masthead tab **/\nvar Tab = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = options.model;\n        this.setElement(this._template());\n        this.$dropdown = this.$(\".dropdown\");\n        this.$toggle = this.$(\".dropdown-toggle\");\n        this.$menu = this.$(\".dropdown-menu\");\n        this.$note = this.$(\".dropdown-note\");\n        this.listenTo(this.model, \"change\", this.render, this);\n    },\n\n    events: {\n        \"click .dropdown-toggle\": \"_toggleClick\"\n    },\n\n    render: function render() {\n        var self = this;\n        $(\".tooltip\").remove();\n        this.$el.attr(\"id\", this.model.id).css({\n            visibility: this.model.get(\"visible\") && \"visible\" || \"hidden\"\n        });\n        this.model.set(\"url\", this._formatUrl(this.model.get(\"url\")));\n        this.$note.html(this.model.get(\"note\") || \"\").removeClass().addClass(\"dropdown-note\").addClass(this.model.get(\"note_cls\")).css({\n            display: this.model.get(\"show_note\") && \"block\" || \"none\"\n        });\n        this.$toggle.html(this.model.get(\"title\") || \"\").removeClass().addClass(\"dropdown-toggle\").addClass(this.model.get(\"cls\")).addClass(this.model.get(\"icon\") && \"dropdown-icon fa \" + this.model.get(\"icon\")).addClass(this.model.get(\"toggle\") && \"toggle\").attr(\"target\", this.model.get(\"target\")).attr(\"href\", this.model.get(\"url\")).attr(\"title\", this.model.get(\"tooltip\")).tooltip(\"destroy\");\n        this.model.get(\"tooltip\") && this.$toggle.tooltip({ placement: \"bottom\" });\n        this.$dropdown.removeClass().addClass(\"dropdown\").addClass(this.model.get(\"disabled\") && \"disabled\").addClass(this.model.get(\"active\") && \"active\");\n        if (this.model.get(\"menu\") && this.model.get(\"show_menu\")) {\n            this.$menu.show();\n            $(\"#dd-helper\").show().off().on(\"click\", function () {\n                $(\"#dd-helper\").hide();\n                self.model.set(\"show_menu\", false);\n            });\n        } else {\n            self.$menu.hide();\n            $(\"#dd-helper\").hide();\n        }\n        this.$menu.empty().removeClass(\"dropdown-menu\");\n        if (this.model.get(\"menu\")) {\n            _.each(this.model.get(\"menu\"), function (menuItem) {\n                self.$menu.append(self._buildMenuItem(menuItem));\n                menuItem.divider && self.$menu.append($(\"<li/>\").addClass(\"divider\"));\n            });\n            self.$menu.addClass(\"dropdown-menu\");\n            self.$toggle.append($(\"<b/>\").addClass(\"caret\"));\n        }\n        return this;\n    },\n\n    /** Add new menu item */\n    _buildMenuItem: function _buildMenuItem(options) {\n        var self = this;\n        options = _.defaults(options || {}, {\n            title: \"\",\n            url: \"\",\n            target: \"_parent\",\n            noscratchbook: false\n        });\n        options.url = self._formatUrl(options.url);\n        return $(\"<li/>\").append($(\"<a/>\").attr(\"href\", options.url).attr(\"target\", options.target).html(options.title).on(\"click\", function (e) {\n            e.preventDefault();\n            self.model.set(\"show_menu\", false);\n            if (options.onclick) {\n                options.onclick();\n            } else {\n                Galaxy.frame.add(options);\n            }\n        }));\n    },\n\n    /** Handle click event */\n    _toggleClick: function _toggleClick(e) {\n        var self = this;\n        var model = this.model;\n        e.preventDefault();\n        $(\".tooltip\").hide();\n        model.trigger(\"dispatch\", function (m) {\n            model.id !== m.id && m.get(\"menu\") && m.set(\"show_menu\", false);\n        });\n        if (!model.get(\"disabled\")) {\n            if (!model.get(\"menu\")) {\n                model.get(\"onclick\") ? model.get(\"onclick\")() : Galaxy.frame.add(model.attributes);\n            } else {\n                model.set(\"show_menu\", true);\n            }\n        } else {\n            var buildLink = function buildLink(label, url) {\n                return $(\"<div/>\").append($(\"<a/>\").attr(\"href\", Galaxy.root + url).html(label)).html();\n            };\n\n            this.$toggle.popover && this.$toggle.popover(\"destroy\");\n            this.$toggle.popover({\n                html: true,\n                placement: \"bottom\",\n                content: \"Please \" + buildLink(\"login\", \"user/login?use_panels=True\") + \" or \" + buildLink(\"register\", \"user/create?use_panels=True\") + \" to use this feature.\"\n            }).popover(\"show\");\n            setTimeout(function () {\n                self.$toggle.popover(\"destroy\");\n            }, 5000);\n        }\n    },\n\n    /** Url formatting */\n    _formatUrl: function _formatUrl(url) {\n        return typeof url == \"string\" && url.indexOf(\"//\") === -1 && url.charAt(0) != \"/\" ? Galaxy.root + url : url;\n    },\n\n    /** body tempate */\n    _template: function _template() {\n        return '<ul class=\"nav navbar-nav\">' + '<li class=\"dropdown\">' + '<a class=\"dropdown-toggle\"/>' + '<ul class=\"dropdown-menu\"/>' + '<div class=\"dropdown-note\"/>' + \"</li>\" + \"</ul>\";\n    }\n});\n\nexports.default = {\n    Collection: Collection,\n    Tab: Tab\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar GenericNavView = Backbone.View.extend({\n    initialize: function initialize() {\n        this.modal = null;\n    },\n\n    /** makes bootstrap modal and iframe inside it */\n    makeModalIframe: function makeModalIframe(e) {\n        // make modal\n        var host = window.Galaxy.config.communication_server_host;\n\n        var port = window.Galaxy.config.communication_server_port;\n        var username = escape(window.Galaxy.user.attributes.username);\n\n        var persistent_communication_rooms = escape(window.Galaxy.config.persistent_communication_rooms);\n\n        var query_string = '?username=' + username + '&persistent_communication_rooms=' + persistent_communication_rooms;\n\n        var src = host + ':' + port + query_string;\n        var $el_chat_modal_header = null;\n        var $el_chat_modal_body = null;\n\n        var iframe_template = '<iframe class=\"f-iframe fade in communication-iframe\" src=\"' + src + '\"> </iframe>';\n\n        var header_template = '<i class=\"fa fa-comment\" aria-hidden=\"true\" title=\"Communicate with other users\"></i>' + '<i class=\"fa fa-expand expand-compress-modal\" aria-hidden=\"true\" title=\"Maximize\"></i>' + '<i class=\"fa fa-times close-modal\" aria-hidden=\"true\" title=\"Close\"></i>';\n\n        var frame_height = 350;\n        var frame_width = 600;\n        var class_names = \"ui-modal chat-modal\";\n\n        // deletes the chat modal if already present and create one\n        if ($(\".chat-modal\").length > 0) {\n            $(\".chat-modal\").remove();\n        }\n        // creates a modal\n        GenericNavView.modal = new _uiModal2.default.View({\n            body: iframe_template,\n            height: frame_height,\n            width: frame_width,\n            closing_events: true,\n            title_separator: false,\n            cls: class_names\n        });\n\n        // shows modal\n        GenericNavView.modal.show();\n        $el_chat_modal_header = $(\".chat-modal .modal-header\");\n        $el_chat_modal_body = $(\".chat-modal .modal-body\");\n        // adjusts the css of bootstrap modal for chat\n        $el_chat_modal_header.addClass(\"modal-header-body\");\n        $el_chat_modal_body.addClass(\"modal-header-body\");\n        $el_chat_modal_header.find(\"h4\").remove();\n        $el_chat_modal_header.removeAttr(\"min-height padding border\");\n        $el_chat_modal_header.append(header_template);\n        // click event of the close button for chat\n        $(\".close-modal\").click(function (e) {\n            $(\".chat-modal\").css(\"display\", \"none\");\n        });\n        // click event of expand and compress icon\n        $(\".expand-compress-modal\").click(function (e) {\n            if ($(\".expand-compress-modal\").hasClass(\"fa-expand\")) {\n                $(\".chat-modal .modal-dialog\").width(\"1000px\");\n                $(\".chat-modal .modal-body\").height(\"575px\");\n                $(\".expand-compress-modal\").removeClass(\"fa-expand\").addClass(\"fa-compress\");\n                $(\".expand-compress-modal\").attr(\"title\", \"Minimize\");\n                $(\".expand-compress-modal\").css(\"margin-left\", \"96.2%\");\n            } else {\n                $(\".chat-modal .modal-dialog\").width(frame_width + 'px');\n                $(\".chat-modal .modal-body\").height(frame_height + 'px');\n                $(\".expand-compress-modal\").removeClass(\"fa-compress\").addClass(\"fa-expand\");\n                $(\".expand-compress-modal\").attr(\"title\", \"Maximize\");\n                $(\".expand-compress-modal\").css(\"margin-left\", \"93.2%\");\n            }\n        });\n        return this;\n    },\n\n    /**renders the chat icon as a nav item*/\n    render: function render() {\n        var self = this;\n        var navItem = {};\n        navItem = {\n            id: \"show-chat-online\",\n            icon: \"fa-comment-o\",\n            tooltip: \"Chat online\",\n            visible: false,\n            onclick: self.makeModalIframe\n        };\n        return navItem;\n    }\n}); /** Real-time Communication feature **/\nexports.default = {\n    GenericNavView: GenericNavView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _uiFrames = __webpack_require__(17);\n\nvar _uiFrames2 = _interopRequireDefault(_uiFrames);\n\nvar _data = __webpack_require__(8);\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _visualization = __webpack_require__(9);\n\nvar _visualization2 = _interopRequireDefault(_visualization);\n\nvar _trackster = __webpack_require__(33);\n\nvar _trackster2 = _interopRequireDefault(_trackster);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        options = options || {};\n        this.frames = new _uiFrames2.default.View({ visible: false });\n        this.setElement(this.frames.$el);\n        this.buttonActive = options.collection.add({\n            id: \"enable-scratchbook\",\n            icon: \"fa-th\",\n            tooltip: (0, _localization2.default)(\"Enable/Disable Scratchbook\"),\n            onclick: function onclick() {\n                self.active = !self.active;\n                self.buttonActive.set({\n                    toggle: self.active,\n                    show_note: self.active,\n                    note_cls: self.active && \"fa fa-check\"\n                });\n                !self.active && self.frames.hide();\n            },\n            onbeforeunload: function onbeforeunload() {\n                if (self.frames.length() > 0) {\n                    return \"You opened \" + self.frames.length() + \" frame(s) which will be lost.\";\n                }\n            }\n        });\n        this.buttonLoad = options.collection.add({\n            id: \"show-scratchbook\",\n            icon: \"fa-eye\",\n            tooltip: (0, _localization2.default)(\"Show/Hide Scratchbook\"),\n            show_note: true,\n            visible: false,\n            onclick: function onclick(e) {\n                self.frames.visible ? self.frames.hide() : self.frames.show();\n            }\n        });\n        this.frames.on(\"add remove\", function () {\n            this.visible && this.length() == 0 && this.hide();\n            self.buttonLoad.set({\n                note: this.length(),\n                visible: this.length() > 0\n            });\n        }).on(\"show hide \", function () {\n            self.buttonLoad.set({\n                toggle: this.visible,\n                icon: this.visible && \"fa-eye\" || \"fa-eye-slash\"\n            });\n        });\n        this.history_cache = {};\n    },\n\n    /** Add a dataset to the frames */\n    addDataset: function addDataset(dataset_id) {\n        var self = this;\n        var current_dataset = null;\n        if (Galaxy && Galaxy.currHistoryPanel) {\n            var history_id = Galaxy.currHistoryPanel.collection.historyId;\n            this.history_cache[history_id] = {\n                name: Galaxy.currHistoryPanel.model.get(\"name\"),\n                dataset_ids: []\n            };\n            Galaxy.currHistoryPanel.collection.each(function (model) {\n                !model.get(\"deleted\") && model.get(\"visible\") && self.history_cache[history_id].dataset_ids.push(model.get(\"id\"));\n            });\n        }\n        var _findDataset = function _findDataset(dataset, offset) {\n            if (dataset) {\n                var history_details = self.history_cache[dataset.get(\"history_id\")];\n                if (history_details && history_details.dataset_ids) {\n                    var dataset_list = history_details.dataset_ids;\n                    var pos = dataset_list.indexOf(dataset.get(\"id\"));\n                    if (pos !== -1 && pos + offset >= 0 && pos + offset < dataset_list.length) {\n                        return dataset_list[pos + offset];\n                    }\n                }\n            }\n        };\n        var _loadDatasetOffset = function _loadDatasetOffset(dataset, offset, frame) {\n            var new_dataset_id = _findDataset(dataset, offset);\n            if (new_dataset_id) {\n                self._loadDataset(new_dataset_id, function (new_dataset, config) {\n                    current_dataset = new_dataset;\n                    frame.model.set(config);\n                });\n            } else {\n                frame.model.trigger(\"change\");\n            }\n        };\n        this._loadDataset(dataset_id, function (dataset, config) {\n            current_dataset = dataset;\n            self.add(_.extend({\n                menu: [{\n                    icon: \"fa fa-chevron-circle-left\",\n                    tooltip: \"Previous in History\",\n                    onclick: function onclick(frame) {\n                        _loadDatasetOffset(current_dataset, -1, frame);\n                    },\n                    disabled: function disabled() {\n                        return !_findDataset(current_dataset, -1);\n                    }\n                }, {\n                    icon: \"fa fa-chevron-circle-right\",\n                    tooltip: \"Next in History\",\n                    onclick: function onclick(frame) {\n                        _loadDatasetOffset(current_dataset, 1, frame);\n                    },\n                    disabled: function disabled() {\n                        return !_findDataset(current_dataset, 1);\n                    }\n                }]\n            }, config));\n        });\n    },\n\n    _loadDataset: function _loadDataset(dataset_id, callback) {\n        var self = this;\n        var dataset = new _data2.default.Dataset({ id: dataset_id });\n        $.when(dataset.fetch()).then(function () {\n            var is_tabular = _.find([\"tabular\", \"interval\"], function (data_type) {\n                return dataset.get(\"data_type\").indexOf(data_type) !== -1;\n            });\n            var title = dataset.get(\"name\");\n            var history_details = self.history_cache[dataset.get(\"history_id\")];\n            if (history_details) {\n                title = history_details.name + \": \" + title;\n            }\n            callback(dataset, is_tabular ? {\n                title: title,\n                url: null,\n                content: _data2.default.createTabularDatasetChunkedView({\n                    model: new _data2.default.TabularDataset(dataset.toJSON()),\n                    embedded: true,\n                    height: \"100%\"\n                }).$el\n            } : {\n                title: title,\n                url: Galaxy.root + \"datasets/\" + dataset_id + \"/display/?preview=True\",\n                content: null\n            });\n        });\n    },\n\n    /** Add a trackster visualization to the frames. */\n    addTrackster: function addTrackster(viz_id) {\n        var self = this;\n        var viz = new _visualization2.default.Visualization({ id: viz_id });\n        $.when(viz.fetch()).then(function () {\n            var ui = new _trackster2.default.TracksterUI(Galaxy.root);\n\n            // Construct frame config based on dataset's type.\n            var frame_config = {\n                title: viz.get(\"name\"),\n                type: \"other\",\n                content: function content(parent_elt) {\n                    // Create view config.\n                    var view_config = {\n                        container: parent_elt,\n                        name: viz.get(\"title\"),\n                        id: viz.id,\n                        // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n                        dbkey: viz.get(\"dbkey\"),\n                        stand_alone: false\n                    };\n\n                    var latest_revision = viz.get(\"latest_revision\");\n                    var drawables = latest_revision.config.view.drawables;\n\n                    // Set up datasets in drawables.\n                    _.each(drawables, function (d) {\n                        d.dataset = {\n                            hda_ldda: d.hda_ldda,\n                            id: d.dataset_id\n                        };\n                    });\n                    view = ui.create_visualization(view_config, latest_revision.config.viewport, latest_revision.config.view.drawables, latest_revision.config.bookmarks, false);\n                }\n            };\n            self.add(frame_config);\n        });\n    },\n\n    /** Add and display a new frame/window based on options. */\n    add: function add(options) {\n        if (options.target == \"_blank\") {\n            window.open(options.url);\n        } else if (options.target == \"_top\" || options.target == \"_parent\" || options.target == \"_self\") {\n            window.location = options.url;\n        } else if (!this.active || options.noscratchbook) {\n            var $galaxy_main = $(window.parent.document).find(\"#galaxy_main\");\n            if (options.target == \"galaxy_main\" || options.target == \"center\") {\n                if ($galaxy_main.length === 0) {\n                    window.location = options.url + (options.url.indexOf(\"?\") == -1 ? \"?\" : \"&\") + \"use_panels=True\";\n                } else {\n                    $galaxy_main.attr(\"src\", options.url);\n                }\n            } else window.location = options.url;\n        } else {\n            this.frames.add(options);\n        }\n    }\n}); /** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// dependencies\n\n// grid model\nexports.default = Backbone.Model.extend({\n    defaults: {\n        url_base: \"\",\n        async: false,\n        async_ops: [],\n        categorical_filters: [],\n        filters: {},\n        sort_key: null,\n        show_item_checkboxes: false,\n        advanced_search: false,\n        cur_page: 1,\n        num_pages: 1,\n        operation: undefined,\n        item_ids: undefined\n    },\n\n    /**\n     * Return true if operation can be done asynchronously.\n     */\n    can_async_op: function can_async_op(op) {\n        return _.indexOf(this.attributes.async_ops, op) !== -1;\n    },\n\n    /**\n     * Add filtering criterion.\n     */\n    add_filter: function add_filter(key, value, append) {\n        // Update URL arg with new condition.\n        if (append) {\n            // Update or append value.\n            var cur_val = this.attributes.filters[key];\n\n            var new_val;\n            if (cur_val === null || cur_val === undefined) {\n                new_val = value;\n            } else if (typeof cur_val == \"string\") {\n                if (cur_val == \"All\" || cur_val == value) {\n                    new_val = value;\n                } else {\n                    // Replace string with array.\n                    var values = [];\n                    values[0] = cur_val;\n                    values[1] = value;\n                    new_val = values;\n                }\n            } else {\n                // Current value is an array.\n                new_val = cur_val;\n                if (new_val.indexOf(value) === -1) {\n                    new_val.push(value);\n                }\n            }\n            this.attributes.filters[key] = new_val;\n        } else {\n            // Replace value.\n            this.attributes.filters[key] = value;\n        }\n    },\n\n    /**\n     * Remove filtering criterion.\n     */\n    remove_filter: function remove_filter(key, condition) {\n        var cur_val = this.attributes.filters[key];\n        if (cur_val === null || cur_val === undefined) {\n            return false;\n        }\n\n        if (typeof cur_val === \"string\") {\n            // overwrite/remove condition.\n            this.attributes.filters[key] = \"\";\n        } else {\n            // filter contains an array of conditions.\n            var condition_index = _.indexOf(cur_val, condition);\n            if (condition_index !== -1) {\n                cur_val[condition_index] = \"\";\n            }\n        }\n    },\n\n    /**\n     * Returns URL data for obtaining a new grid.\n     */\n    get_url_data: function get_url_data() {\n        var url_data = {\n            async: this.attributes.async,\n            sort: this.attributes.sort_key,\n            page: this.attributes.cur_page,\n            show_item_checkboxes: this.attributes.show_item_checkboxes,\n            advanced_search: this.attributes.advanced_search\n        };\n\n        // Add operation, item_ids only if they have values.\n        if (this.attributes.operation) {\n            url_data.operation = this.attributes.operation;\n        }\n        if (this.attributes.item_ids) {\n            url_data.id = this.attributes.item_ids;\n        }\n\n        // Add filter arguments to data, placing \"f-\" in front of all arguments.\n        var self = this;\n        _.each(_.pairs(self.attributes.filters), function (k) {\n            url_data[\"f-\" + k[0]] = k[1];\n        });\n        return url_data;\n    },\n\n    // Return URL for obtaining a new grid\n    get_url: function get_url(args) {\n        return this.get(\"url_base\") + \"?\" + $.param(this.get_url_data()) + \"&\" + $.param(args);\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// grid view templates\nexports.default = {\n    // template\n    grid: function grid(options) {\n        var tmpl = \"\";\n        if (options.embedded) {\n            tmpl = this.grid_header(options) + this.grid_table(options);\n        } else {\n            tmpl = \"<div class=\\\"loading-elt-overlay\\\"></div><table><tr><td width=\\\"75%\\\">\" + this.grid_header(options) + \"</td><td></td><td></td></tr><tr><td width=\\\"100%\\\" id=\\\"grid-message\\\" valign=\\\"top\\\"></td><td></td><td></td></tr></table>\" + this.grid_table(options);\n        }\n\n        // add info text\n        if (options.info_text) {\n            tmpl += \"<br><div class=\\\"toolParamHelp\\\" style=\\\"clear: both;\\\">\" + options.info_text + \"</div>\";\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    grid_table: function grid_table(options) {\n        return '<form method=\"post\" onsubmit=\"return false;\">' + '<table id=\"grid-table\" class=\"grid\">' + '<thead id=\"grid-table-header\"></thead>' + '<tbody id=\"grid-table-body\"></tbody>' + '<tfoot id=\"grid-table-footer\"></tfoot>' + \"</table>\" + \"</form>\";\n    },\n\n    // template\n    grid_header: function grid_header(options) {\n        var tmpl = '<div class=\"grid-header\">';\n        if (!options.embedded) {\n            tmpl += \"<h2>\" + options.title + \"</h2>\";\n        }\n        if (options.global_actions) {\n            tmpl += '<ul class=\"manage-table-actions\">';\n            var show_popup = options.global_actions.length >= 3;\n            if (show_popup) {\n                tmpl += '<li><a class=\"action-button\" id=\"popup-global-actions\" class=\"menubutton\">Actions</a></li>' + '<div popupmenu=\"popup-global-actions\">';\n            }\n            for (var i in options.global_actions) {\n                var action = options.global_actions[i];\n                tmpl += \"<li><a class=\\\"action-button use-target\\\" target=\\\"\" + action.target + \"\\\" href=\\\"\" + action.url_args + \"\\\" onclick=\\\"return false;\\\" >\" + action.label + \"</a></li>\";\n            }\n            if (show_popup) {\n                tmpl += \"</div>\";\n            }\n            tmpl += \"</ul>\";\n        }\n        if (options.insert) {\n            tmpl += options.insert;\n        }\n\n        // add grid filters\n        tmpl += this.grid_filters(options);\n        tmpl += \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    header: function header(options) {\n        // start\n        var tmpl = \"<tr>\";\n\n        // add checkbox\n        if (options.show_item_checkboxes) {\n            tmpl += \"<th>\";\n            if (options.items.length > 0) {\n                tmpl += '<input type=\"checkbox\" id=\"check_all\" name=select_all_checkbox value=\"true\">' + '<input type=\"hidden\" name=select_all_checkbox value=\"true\">';\n            }\n            tmpl += \"</th>\";\n        }\n\n        // create header elements\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.visible) {\n                tmpl += \"<th id=\\\"\" + column.key + \"-header\\\">\";\n                if (column.href) {\n                    tmpl += \"<a href=\\\"\" + column.href + \"\\\" class=\\\"sort-link\\\" sort_key=\\\"\" + column.key + \"\\\">\" + column.label + \"</a>\";\n                } else {\n                    tmpl += column.label;\n                }\n                tmpl += \"<span class=\\\"sort-arrow\\\">\" + column.extra + \"</span></th>\";\n            }\n        }\n\n        // finalize\n        tmpl += \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    body: function body(options) {\n        // initialize\n        var tmpl = \"\";\n        var num_rows_rendered = 0;\n        var items_length = options.items.length;\n\n        // empty grid?\n        if (items_length == 0) {\n            // No results.\n            tmpl += '<tr><td colspan=\"100\"><em>No Items</em></td></tr>';\n            num_rows_rendered = 1;\n        }\n\n        // create rows\n        for (var i in options.items) {\n            // encode ids\n            var item = options.items[i];\n            var encoded_id = item.encode_id;\n            var popupmenu_id = \"grid-\" + i + \"-popup\";\n\n            // Tag current\n            tmpl += \"<tr \";\n            if (options.current_item_id == item.id) {\n                tmpl += 'class=\"current\"';\n            }\n            tmpl += \">\";\n\n            // Item selection column\n            if (options.show_item_checkboxes) {\n                tmpl += \"<td style=\\\"width: 1.5em;\\\"><input type=\\\"checkbox\\\" name=\\\"id\\\" value=\\\"\" + encoded_id + \"\\\" id=\\\"\" + encoded_id + \"\\\" class=\\\"grid-row-select-checkbox\\\" /></td>\";\n            }\n\n            // Data columns\n            for (var j in options.columns) {\n                var column = options.columns[j];\n                if (column.visible) {\n                    // Nowrap\n                    var nowrap = \"\";\n                    if (column.nowrap) {\n                        nowrap = 'style=\"white-space:nowrap;\"';\n                    }\n\n                    // get column settings\n                    var column_settings = item.column_config[column.label];\n\n                    // load attributes\n                    var link = column_settings.link;\n                    var value = column_settings.value;\n                    var target = column_settings.target;\n\n                    // unescape value\n                    if (jQuery.type(value) === \"string\") {\n                        value = value.replace(/\\/\\//g, \"/\");\n                    }\n\n                    // Attach popup menu?\n                    var id = \"\";\n                    var cls = \"\";\n                    if (column.attach_popup) {\n                        id = \"grid-\" + i + \"-popup\";\n                        cls = \"menubutton\";\n                        if (link != \"\") {\n                            cls += \" split\";\n                        }\n                        cls += \" popup\";\n                    }\n\n                    // Check for row wrapping\n                    tmpl += \"<td \" + nowrap + \">\";\n\n                    // Link\n                    if (link) {\n                        if (options.operations.length != 0) {\n                            tmpl += \"<div id=\\\"\" + id + \"\\\" class=\\\"\" + cls + \"\\\" style=\\\"float: left;\\\">\";\n                        }\n                        tmpl += \"<a class=\\\"menubutton-label use-target\\\" target=\\\"\" + target + \"\\\" href=\\\"\" + link + \"\\\" onclick=\\\"return false;\\\">\" + value + \"</a>\";\n                        if (options.operations.length != 0) {\n                            tmpl += \"</div>\";\n                        }\n                    } else {\n                        tmpl += \"<div id=\\\"\" + id + \"\\\" class=\\\"\" + cls + \"\\\"><label id=\\\"\" + column.label_id_prefix + encoded_id + \"\\\" for=\\\"\" + encoded_id + \"\\\">\" + (value || \"\") + \"</label></div>\";\n                    }\n                    tmpl += \"</td>\";\n                }\n            }\n            tmpl += \"</tr>\";\n            num_rows_rendered++;\n        }\n        return tmpl;\n    },\n\n    // template\n    footer: function footer(options) {\n        // create template string\n        var tmpl = \"\";\n\n        // paging\n        if (options.use_paging && options.num_pages > 1) {\n            // get configuration\n            var num_page_links = options.num_page_links;\n            var cur_page_num = options.cur_page_num;\n            var num_pages = options.num_pages;\n\n            // First pass on min page.\n            var page_link_range = num_page_links / 2;\n            var min_page = cur_page_num - page_link_range;\n            var min_offset = 0;\n            if (min_page <= 0) {\n                // Min page is too low.\n                min_page = 1;\n                min_offset = page_link_range - (cur_page_num - min_page);\n            }\n\n            // Set max page.\n            var max_range = page_link_range + min_offset;\n            var max_page = cur_page_num + max_range;\n            var max_offset;\n            if (max_page <= num_pages) {\n                // Max page is fine.\n                max_offset = 0;\n            } else {\n                // Max page is too high.\n                max_page = num_pages;\n                // +1 to account for the +1 in the loop below.\n                max_offset = max_range - (max_page + 1 - cur_page_num);\n            }\n\n            // Second and final pass on min page to add any unused\n            // offset from max to min.\n            if (max_offset != 0) {\n                min_page -= max_offset;\n                if (min_page < 1) {\n                    min_page = 1;\n                }\n            }\n\n            // template header\n            tmpl += '<tr id=\"page-links-row\">';\n            if (options.show_item_checkboxes) {\n                tmpl += \"<td></td>\";\n            }\n            tmpl += '<td colspan=\"100\">' + '<span id=\"page-link-container\">' + \"Page:\";\n\n            if (min_page > 1) {\n                tmpl += '<span class=\"page-link\" id=\"page-link-1\"><a href=\"javascript:void(0);\" page_num=\"1\" onclick=\"return false;\">1</a></span> ...';\n            }\n\n            // create page urls\n            for (var page_index = min_page; page_index < max_page + 1; page_index++) {\n                if (page_index == options.cur_page_num) {\n                    tmpl += \"<span class=\\\"page-link inactive-link\\\" id=\\\"page-link-\" + page_index + \"\\\">\" + page_index + \"</span>\";\n                } else {\n                    tmpl += \"<span class=\\\"page-link\\\" id=\\\"page-link-\" + page_index + \"\\\"><a href=\\\"javascript:void(0);\\\" onclick=\\\"return false;\\\" page_num=\\\"\" + page_index + \"\\\">\" + page_index + \"</a></span>\";\n                }\n            }\n\n            // show last page\n            if (max_page < num_pages) {\n                tmpl += \"...<span class=\\\"page-link\\\" id=\\\"page-link-\" + num_pages + \"\\\"><a href=\\\"javascript:void(0);\\\" onclick=\\\"return false;\\\" page_num=\\\"\" + num_pages + \"\\\">\" + num_pages + \"</a></span>\";\n            }\n            tmpl += \"</span>\";\n\n            // Show all link\n            tmpl += '<span class=\"page-link\" id=\"show-all-link-span\"> | <a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"all\">Show All</a></span>' + \"</td>\" + \"</tr>\";\n        }\n\n        // Grid operations for multiple items.\n        if (options.show_item_checkboxes) {\n            // start template\n            tmpl += \"<tr>\" + '<input type=\"hidden\" id=\"operation\" name=\"operation\" value=\"\">' + \"<td></td>\" + '<td colspan=\"100\">' + 'For <span class=\"grid-selected-count\"></span> selected items: ';\n\n            // configure buttons for operations\n            for (var i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.allow_multiple) {\n                    tmpl += \"<input type=\\\"button\\\" value=\\\"\" + operation.label + \"\\\" class=\\\"operation-button action-button\\\">&nbsp;\";\n                }\n            }\n\n            // finalize template\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // count global operations\n        var found_global = false;\n        for (i in options.operations) {\n            if (options.operations[i].global_operation) {\n                found_global = true;\n                break;\n            }\n        }\n\n        // add global operations\n        if (found_global) {\n            tmpl += \"<tr>\" + '<td colspan=\"100\">';\n            for (i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.global_operation) {\n                    tmpl += \"<a class=\\\"action-button\\\" href=\\\"\" + operation.global_operation + \"\\\">\" + operation.label + \"</a>\";\n                }\n            }\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // add legend\n        if (options.legend) {\n            tmpl += \"<tr><td colspan=\\\"100\\\">\" + options.legend + \"</td></tr>\";\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    message: function message(options) {\n        var status = options.status;\n        if ([\"success\", \"ok\"].indexOf(status) != -1) {\n            status = \"done\";\n        }\n        return \"<p><div class=\\\"\" + status + \"message transient-message\\\">\" + _.escape(options.message) + \"</div><div style=\\\"clear: both\\\"></div></p>\";\n    },\n\n    // template\n    grid_filters: function grid_filters(options) {\n        // get filters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n\n        // show advanced search if flag set or if there are filters for advanced search fields\n        var advanced_search_display = \"none\";\n        if (options.advanced_search) {\n            advanced_search_display = \"block\";\n        }\n\n        // identify columns with advanced filtering\n        var show_advanced_search_link = false;\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                var column_key = column.key;\n                var f_key = filters[column_key];\n                var d_key = default_filter_dict[column_key];\n                if (f_key && d_key && f_key != d_key) {\n                    advanced_search_display = \"block\";\n                }\n                show_advanced_search_link = true;\n            }\n        }\n\n        // hide standard search if advanced is shown\n        var standard_search_display = \"block\";\n        if (advanced_search_display == \"block\") {\n            standard_search_display = \"none\";\n        }\n\n        //\n        // standard search\n        //\n        var tmpl = \"<div id=\\\"standard-search\\\" style=\\\"display: \" + standard_search_display + \";\\\"><table><tr><td style=\\\"padding: 0;\\\"><table>\";\n\n        // add standard filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"standard\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize standard search\n        tmpl += \"</table>\" + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\";\n\n        // show advanced search link in standard display\n        if (show_advanced_search_link) {\n            tmpl += '<a href=\"\" class=\"advanced-search-toggle\">Advanced Search</a>';\n        }\n\n        // finalize standard search display\n        tmpl += \"</td>\" + \"</tr>\" + \"</table>\" + \"</div>\";\n\n        //\n        // advanced search\n        //\n        tmpl += \"<div id=\\\"advanced-search\\\" style=\\\"display: \" + advanced_search_display + \"; margin-top: 5px; border: 1px solid #ccc;\\\"><table><tr><td style=\\\"text-align: left\\\" colspan=\\\"100\\\"><a href=\\\"\\\" class=\\\"advanced-search-toggle\\\">Close Advanced Search</a></td></tr>\";\n\n        // add advanced filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize advanced search template\n        tmpl += \"</table>\" + \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    grid_column_filter: function grid_column_filter(options, column) {\n        // collect parameters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n        var column_label = column.label;\n        var column_key = column.key;\n        if (column.filterable == \"advanced\") {\n            column_label = column_label.toLowerCase();\n        }\n\n        // start\n        var tmpl = \"<tr>\";\n\n        if (column.filterable == \"advanced\") {\n            tmpl += \"<td align=\\\"left\\\" style=\\\"padding-left: 10px\\\">\" + column_label + \":</td>\";\n        }\n        tmpl += '<td style=\"padding-bottom: 1px;\">';\n        if (column.is_text) {\n            tmpl += \"<form class=\\\"text-filter-form\\\" column_key=\\\"\" + column_key + \"\\\" action=\\\"\" + options.url + \"\\\" method=\\\"get\\\" >\";\n            // Carry forward filtering criteria with hidden inputs.\n            for (i in options.columns) {\n                var temp_column = options.columns[i];\n                var filter_value = filters[temp_column.key];\n                if (filter_value) {\n                    if (filter_value != \"All\") {\n                        if (temp_column.is_text) {\n                            filter_value = JSON.stringify(filter_value);\n                        }\n                        tmpl += \"<input type=\\\"hidden\\\" id=\\\"\" + temp_column.key + \"\\\" name=\\\"f-\" + temp_column.key + \"\\\" value=\\\"\" + filter_value + \"\\\"/>\";\n                    }\n                }\n            }\n            // Print current filtering criteria and links to delete.\n            tmpl += \"<span id=\\\"\" + column_key + \"-filtering-criteria\\\">\";\n\n            // add filters\n            var column_filter = filters[column_key];\n            if (column_filter) {\n                // identify type\n                var type = jQuery.type(column_filter);\n\n                // single filter value\n                if (type == \"string\") {\n                    if (column_filter != \"All\") {\n                        // append template\n                        tmpl += this.filter_element(column_key, column_filter);\n                    }\n                }\n\n                // multiple filter values\n                if (type == \"array\") {\n                    for (var i in column_filter) {\n                        // get filter\n                        var filter = column_filter[i];\n\n                        // copy filters and remove entry\n                        var params = column_filter;\n                        params = params.slice(i);\n\n                        // append template\n                        tmpl += this.filter_element(column_key, filter);\n                    }\n                }\n            }\n\n            // close span\n            tmpl += \"</span>\";\n\n            // Set value, size of search input field. Minimum size is 20 characters.\n            var value = \"\";\n            if (column.filterable == \"standard\") {\n                value = column.label.toLowerCase();\n                var size = value.length;\n                if (size < 20) {\n                    size = 20;\n                }\n                // +4 to account for space after placeholder\n                size = size + 4;\n            }\n\n            // print input field for column\n            tmpl += \"<span class=\\\"search-box\\\"><input class=\\\"search-box-input\\\" id=\\\"input-\" + column_key + \"-filter\\\" name=\\\"f-\" + column_key + \"\\\" type=\\\"text\\\" placeholder=\\\"\" + value + \"\\\" size=\\\"\" + size + \"\\\"/><button type=\\\"submit\\\" style=\\\"background: transparent; border: none; padding: 4px; margin: 0px;\\\"><i class=\\\"fa fa-search\\\"></i></button></span></form>\";\n        } else {\n            // filter criteria\n            tmpl += \"<span id=\\\"\" + column_key + \"-filtering-criteria\\\">\";\n\n            // add category filters\n            var seperator = false;\n            for (var cf_label in options.categorical_filters[column_key]) {\n                // get category filter\n                var cf = options.categorical_filters[column_key][cf_label];\n\n                // each filter will have only a single argument, so get that single argument\n                var cf_key = \"\";\n                var cf_arg = \"\";\n                for (var key in cf) {\n                    cf_key = key;\n                    cf_arg = cf[key];\n                }\n\n                // add seperator\n                if (seperator) {\n                    tmpl += \" | \";\n                }\n                seperator = true;\n\n                // add category\n                var filter = filters[column_key];\n                if (filter && cf[column_key] && filter == cf_arg) {\n                    tmpl += \"<span class=\\\"categorical-filter \" + column_key + \"-filter current-filter\\\">\" + cf_label + \"</span>\";\n                } else {\n                    tmpl += \"<span class=\\\"categorical-filter \" + column_key + \"-filter\\\"><a href=\\\"javascript:void(0);\\\" filter_key=\\\"\" + cf_key + \"\\\" filter_val=\\\"\" + cf_arg + \"\\\">\" + cf_label + \"</a></span>\";\n                }\n            }\n            tmpl += \"</span>\";\n        }\n        tmpl += \"</td>\" + \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template for filter items\n    filter_element: function filter_element(filter_key, filter_value) {\n        filter_value = _utils2.default.sanitize(filter_value);\n        return \"<span class=\\\"text-filter-val\\\">\" + filter_value + \"<a href=\\\"javascript:void(0);\\\" filter_key=\\\"\" + filter_key + \"\\\" filter_val=\\\"\" + filter_value + \"\\\"><i class=\\\"fa fa-times\\\" style=\\\"padding-left: 5px; padding-bottom: 6px;\\\"/></a></span>\";\n    }\n}; // dependencies\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _tracks = __webpack_require__(34);\n\nvar _tracks2 = _interopRequireDefault(_tracks);\n\nvar _visualization = __webpack_require__(9);\n\nvar _visualization2 = _interopRequireDefault(_visualization);\n\nvar _iconButton = __webpack_require__(18);\n\nvar _iconButton2 = _interopRequireDefault(_iconButton);\n\nvar _queryStringParsing = __webpack_require__(16);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nvar _gridView = __webpack_require__(12);\n\nvar _gridView2 = _interopRequireDefault(_gridView);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\n__webpack_require__(51);\n\n__webpack_require__(50);\n\n__webpack_require__(52);\n\n__webpack_require__(56);\n\n__webpack_require__(55);\n\n__webpack_require__(57);\n\n__webpack_require__(53);\n\n__webpack_require__(54);\n\n__webpack_require__(15);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Top-level trackster code, used for creating/loading visualizations and user interface elements.\n */\n\n// global variables\nvar ui = null;\nvar view = null;\nvar browser_router = null;\n\n// trackster viewer\n\n/**\n * Base Object/Model for inhertiance.\n */\nvar Base = function Base() {\n    if (this.initialize) {\n        this.initialize.apply(this, arguments);\n    }\n};\nBase.extend = Backbone.Model.extend;\n\n/**\n * User interface controls for trackster\n */\nvar TracksterUI = Base.extend({\n    initialize: function initialize(baseURL) {\n        _utils2.default.cssLoadFile(\"static/style/jquery.rating.css\");\n        _utils2.default.cssLoadFile(\"static/style/autocomplete_tagging.css\");\n        _utils2.default.cssLoadFile(\"static/style/jquery-ui/smoothness/jquery-ui.css\");\n        _utils2.default.cssLoadFile(\"static/style/library.css\");\n        _utils2.default.cssLoadFile(\"static/style/trackster.css\");\n        this.baseURL = baseURL;\n    },\n\n    /**\n     * Save visualization, returning a Deferred object for the remote call to save.\n     */\n    save_viz: function save_viz() {\n        // show dialog\n        Galaxy.modal.show({ title: \"Saving...\", body: \"progress\" });\n\n        // Save bookmarks.\n        var bookmarks = [];\n        $(\".bookmark\").each(function () {\n            bookmarks.push({\n                position: $(this).children(\".position\").text(),\n                annotation: $(this).children(\".annotation\").text()\n            });\n        });\n\n        // FIXME: give unique IDs to Drawables and save overview as ID.\n        var overview_track_name = view.overview_drawable ? view.overview_drawable.config.get_value(\"name\") : null;\n\n        var viz_config = {\n            view: view.to_dict(),\n            viewport: {\n                chrom: view.chrom,\n                start: view.low,\n                end: view.high,\n                overview: overview_track_name\n            },\n            bookmarks: bookmarks\n        };\n\n        // Make call to save visualization.\n        return $.ajax({\n            url: Galaxy.root + \"visualization/save\",\n            type: \"POST\",\n            dataType: \"json\",\n            data: {\n                id: view.vis_id,\n                title: view.config.get_value(\"name\"),\n                dbkey: view.dbkey,\n                type: \"trackster\",\n                vis_json: JSON.stringify(viz_config)\n            }\n        }).success(function (vis_info) {\n            Galaxy.modal.hide();\n            view.vis_id = vis_info.vis_id;\n            view.has_changes = false;\n\n            // Needed to set URL when first saving a visualization.\n            window.history.pushState({}, \"\", vis_info.url + window.location.hash);\n        }).error(function () {\n            // show dialog\n            Galaxy.modal.show({\n                title: \"Could Not Save\",\n                body: \"Could not save visualization. Please try again later.\",\n                buttons: {\n                    Cancel: function Cancel() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n        });\n    },\n\n    /**\n     * Create button menu\n     */\n    createButtonMenu: function createButtonMenu() {\n        var self = this;\n\n        var menu = _iconButton2.default.create_icon_buttons_menu([{\n            icon_class: \"plus-button\",\n            title: \"Add tracks\",\n            on_click: function on_click() {\n                _visualization2.default.select_datasets({ dbkey: view.dbkey }, function (new_tracks) {\n                    _.each(new_tracks, function (track) {\n                        view.add_drawable(_tracks2.default.object_from_template(track, view, view));\n                    });\n                });\n            }\n        }, {\n            icon_class: \"block--plus\",\n            title: \"Add group\",\n            on_click: function on_click() {\n                view.add_drawable(new _tracks2.default.DrawableGroup(view, view, {\n                    name: \"New Group\"\n                }));\n            }\n        }, {\n            icon_class: \"bookmarks\",\n            title: \"Bookmarks\",\n            on_click: function on_click() {\n                // HACK -- use style to determine if panel is hidden and hide/show accordingly.\n                force_right_panel($(\"div#right\").css(\"right\") == \"0px\" ? \"hide\" : \"show\");\n            }\n        }, {\n            icon_class: \"globe\",\n            title: \"Circster\",\n            on_click: function on_click() {\n                window.location = self.baseURL + \"visualization/circster?id=\" + view.vis_id;\n            }\n        }, {\n            icon_class: \"disk--arrow\",\n            title: \"Save\",\n            on_click: function on_click() {\n                self.save_viz();\n            }\n        }, {\n            icon_class: \"cross-circle\",\n            title: \"Close\",\n            on_click: function on_click() {\n                self.handle_unsaved_changes(view);\n            }\n        }], {\n            tooltip_config: { placement: \"bottom\" }\n        });\n\n        this.buttonMenu = menu;\n        return menu;\n    },\n\n    /**\n     * Add bookmark.\n     */\n    add_bookmark: function add_bookmark(position, annotation, editable) {\n        // Create HTML.\n        var bookmarks_container = $(\"#right .unified-panel-body\");\n\n        var new_bookmark = $(\"<div/>\").addClass(\"bookmark\").appendTo(bookmarks_container);\n\n        var position_div = $(\"<div/>\").addClass(\"position\").appendTo(new_bookmark);\n\n        var position_link = $(\"<a href=''/>\").text(position).appendTo(position_div).click(function () {\n            view.go_to(position);\n            return false;\n        });\n\n        var annotation_div = $(\"<div/>\").text(annotation).appendTo(new_bookmark);\n\n        // If editable, enable bookmark deletion and annotation editing.\n        if (editable) {\n            var delete_icon_container = $(\"<div/>\").addClass(\"delete-icon-container\").prependTo(new_bookmark).click(function () {\n                // Remove bookmark.\n                new_bookmark.slideUp(\"fast\");\n                new_bookmark.remove();\n                view.has_changes = true;\n                return false;\n            });\n\n            var delete_icon = $(\"<a href=''/>\").addClass(\"icon-button delete\").appendTo(delete_icon_container);\n\n            annotation_div.make_text_editable({\n                num_rows: 3,\n                use_textarea: true,\n                help_text: \"Edit bookmark note\"\n            }).addClass(\"annotation\");\n        }\n\n        view.has_changes = true;\n        return new_bookmark;\n    },\n\n    /**\n     * Create a complete Trackster visualization. Returns view.\n     */\n    create_visualization: function create_visualization(view_config, viewport_config, drawables_config, bookmarks_config, editable) {\n        // Create view.\n        var self = this;\n\n        var view = new _tracks2.default.TracksterView(_.extend(view_config, { header: false }));\n\n        view.editor = true;\n        $.when(view.load_chroms_deferred).then(function (chrom_info) {\n            // Viewport config.\n            if (viewport_config) {\n                var chrom = viewport_config.chrom;\n                var start = viewport_config.start;\n                var end = viewport_config.end;\n                var overview_drawable_name = viewport_config.overview;\n\n                if (chrom && start !== undefined && end) {\n                    view.change_chrom(chrom, start, end);\n                } else {\n                    // No valid viewport, so use first chromosome.\n                    view.change_chrom(chrom_info[0].chrom);\n                }\n            } else {\n                // No viewport, so use first chromosome.\n                view.change_chrom(chrom_info[0].chrom);\n            }\n\n            // Add drawables to view.\n            if (drawables_config) {\n                // FIXME: can from_dict() be used to create view and add drawables?\n                var drawable_config;\n\n                var drawable_type;\n                var drawable;\n                for (var i = 0; i < drawables_config.length; i++) {\n                    view.add_drawable(_tracks2.default.object_from_template(drawables_config[i], view, view));\n                }\n            }\n\n            // Set overview.\n            var overview_drawable;\n            for (var i = 0; i < view.drawables.length; i++) {\n                if (view.drawables[i].config.get_value(\"name\") === overview_drawable_name) {\n                    view.set_overview(view.drawables[i]);\n                    break;\n                }\n            }\n\n            // Load bookmarks.\n            if (bookmarks_config) {\n                var bookmark;\n                for (var i = 0; i < bookmarks_config.length; i++) {\n                    bookmark = bookmarks_config[i];\n                    self.add_bookmark(bookmark[\"position\"], bookmark[\"annotation\"], editable);\n                }\n            }\n\n            // View has no changes as of yet.\n            view.has_changes = false;\n        });\n\n        // Final initialization.\n        this.set_up_router({ view: view });\n\n        return view;\n    },\n\n    /**\n     * Set up location router to use hashes as track browser locations.\n     */\n    set_up_router: function set_up_router(options) {\n        new _visualization2.default.TrackBrowserRouter(options);\n        Backbone.history.start();\n    },\n\n    /**\n     * Set up keyboard navigation for a visualization.\n     */\n    init_keyboard_nav: function init_keyboard_nav(view) {\n        // Keyboard navigation. Scroll ~7% of height when scrolling up/down.\n        $(document).keyup(function (e) {\n            // Do not navigate if arrow keys used in input element.\n            if ($(e.srcElement).is(\":input\")) {\n                return;\n            }\n\n            // Key codes: left == 37, up == 38, right == 39, down == 40\n            switch (e.which) {\n                case 37:\n                    view.move_fraction(0.25);\n                    break;\n                case 38:\n                    var change = Math.round(view.viewport_container.height() / 15.0);\n                    view.viewport_container.scrollTop(view.viewport_container.scrollTop() - 20);\n                    break;\n                case 39:\n                    view.move_fraction(-0.25);\n                    break;\n                case 40:\n                    var change = Math.round(view.viewport_container.height() / 15.0);\n                    view.viewport_container.scrollTop(view.viewport_container.scrollTop() + 20);\n                    break;\n            }\n        });\n    },\n\n    /**\n     * Handle unsaved changes in visualization.\n     */\n    handle_unsaved_changes: function handle_unsaved_changes(view) {\n        if (view.has_changes) {\n            var self = this;\n            Galaxy.modal.show({\n                title: \"Close visualization\",\n                body: \"There are unsaved changes to your visualization which will be lost if you do not save them.\",\n                buttons: {\n                    Cancel: function Cancel() {\n                        Galaxy.modal.hide();\n                    },\n                    \"Leave without Saving\": function LeaveWithoutSaving() {\n                        $(window).off(\"beforeunload\");\n                        window.location = Galaxy.root + \"visualization\";\n                    },\n                    Save: function Save() {\n                        $.when(self.save_viz()).then(function () {\n                            window.location = Galaxy.root + \"visualization\";\n                        });\n                    }\n                }\n            });\n        } else {\n            window.location = Galaxy.root + \"visualization\";\n        }\n    }\n});\n\nvar TracksterView = Backbone.View.extend({\n    // initalize trackster\n    initialize: function initialize() {\n        // load ui\n        ui = new TracksterUI(Galaxy.root);\n\n        // create button menu\n        ui.createButtonMenu();\n\n        // attach the button menu to the panel header and float it left\n        ui.buttonMenu.$el.attr(\"style\", \"float: right\");\n\n        // add to center panel\n        $(\"#center .unified-panel-header-inner\").append(ui.buttonMenu.$el);\n\n        // configure right panel\n        $(\"#right .unified-panel-title\").append(\"Bookmarks\");\n        $(\"#right .unified-panel-icons\").append(\"<a id='add-bookmark-button' class='icon-button menu-button plus-button' href='javascript:void(0);' title='Add bookmark'></a>\");\n\n        // resize view when showing/hiding right panel (bookmarks for now).\n        $(\"#right-border\").click(function () {\n            view.resize_window();\n        });\n\n        // hide right panel\n        force_right_panel(\"hide\");\n\n        // check if id is available\n        if (galaxy_config.app.id) {\n            this.view_existing();\n        } else if (_queryStringParsing2.default.get(\"dataset_id\")) {\n            this.choose_existing_or_new();\n        } else {\n            this.view_new();\n        }\n    },\n\n    choose_existing_or_new: function choose_existing_or_new() {\n        var self = this;\n        var dbkey = _queryStringParsing2.default.get(\"dbkey\");\n        var listTracksParams = {};\n\n        var dataset_params = {\n            dbkey: dbkey,\n            dataset_id: _queryStringParsing2.default.get(\"dataset_id\"),\n            hda_ldda: _queryStringParsing2.default.get(\"hda_ldda\"),\n            gene_region: _queryStringParsing2.default.get(\"gene_region\")\n        };\n\n        if (dbkey) {\n            listTracksParams[\"f-dbkey\"] = dbkey;\n        }\n\n        Galaxy.modal.show({\n            title: \"View Data in a New or Saved Visualization?\",\n            // either have text in here or have to remove body and the header/footer margins\n            body: \"<p><ul style='list-style: disc inside none'>You can add this dataset as:<li>a new track to one of your existing, saved Trackster sessions if they share the genome build: <b>\" + (dbkey || \"Not available.\") + \"</b></li><li>or create a new session with this dataset as the only track</li></ul></p>\",\n            buttons: {\n                Cancel: function Cancel() {\n                    window.location = Galaxy.root + \"visualizations/list\";\n                },\n                \"View in saved visualization\": function ViewInSavedVisualization() {\n                    self.view_in_saved(dataset_params);\n                },\n                \"View in new visualization\": function ViewInNewVisualization() {\n                    self.view_new();\n                }\n            }\n        });\n    },\n\n    // view\n    view_in_saved: function view_in_saved(dataset_params) {\n        var tracks_grid = new _gridView2.default({\n            url_base: Galaxy.root + \"visualization/list_tracks\",\n            dict_format: true,\n            embedded: true\n        });\n        Galaxy.modal.show({\n            title: \"Add Data to Saved Visualization\",\n            body: tracks_grid.$el,\n            buttons: {\n                Cancel: function Cancel() {\n                    window.location = Galaxy.root + \"visualizations/list\";\n                },\n                \"Add to visualization\": function AddToVisualization() {\n                    $(parent.document).find(\"input[name=id]:checked\").each(function () {\n                        dataset_params.id = $(this).val();\n                        window.location = Galaxy.root + \"visualization/trackster?\" + $.param(dataset_params);\n                    });\n                }\n            }\n        });\n    },\n\n    // view\n    view_existing: function view_existing() {\n        // get config\n        var viz_config = galaxy_config.app.viz_config;\n\n        // view\n        view = ui.create_visualization({\n            container: $(\"#center .unified-panel-body\"),\n            name: viz_config.title,\n            vis_id: viz_config.vis_id,\n            dbkey: viz_config.dbkey\n        }, viz_config.viewport, viz_config.tracks, viz_config.bookmarks, true);\n\n        // initialize editor\n        this.init_editor();\n    },\n\n    // view\n    view_new: function view_new() {\n        // reference this\n        var self = this;\n\n        // ajax\n        $.ajax({\n            url: Galaxy.root + \"api/genomes?chrom_info=True\",\n            data: {},\n            error: function error() {\n                alert(\"Couldn't create new browser.\");\n            },\n            success: function success(response) {\n                // show dialog\n                Galaxy.modal.show({\n                    title: \"New Visualization\",\n                    body: self.template_view_new(response),\n                    buttons: {\n                        Cancel: function Cancel() {\n                            window.location = Galaxy.root + \"visualizations/list\";\n                        },\n                        Create: function Create() {\n                            self.create_browser($(\"#new-title\").val(), $(\"#new-dbkey\").val());\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n\n                // select default\n                var dbkeys_in_genomes = response.map(function (r) {\n                    return r[1];\n                });\n                if (galaxy_config.app.default_dbkey && _.contains(dbkeys_in_genomes, galaxy_config.app.default_dbkey)) {\n                    $(\"#new-dbkey\").val(galaxy_config.app.default_dbkey);\n                }\n\n                // change focus\n                $(\"#new-title\").focus();\n                $(\"select[name='dbkey']\").select2();\n\n                // to support the large number of options for dbkey, enable scrolling in overlay.\n                $(\"#overlay\").css(\"overflow\", \"auto\");\n            }\n        });\n    },\n\n    // new browser form\n    template_view_new: function template_view_new(response) {\n        // start template\n        var html = '<form id=\"new-browser-form\" action=\"javascript:void(0);\" method=\"post\" onsubmit=\"return false;\">' + '<div class=\"form-row\">' + '<label for=\"new-title\">Browser name:</label>' + '<div class=\"form-row-input\">' + '<input type=\"text\" name=\"title\" id=\"new-title\" value=\"Unnamed\"></input>' + \"</div>\" + '<div style=\"clear: both;\"></div>' + \"</div>\" + '<div class=\"form-row\">' + '<label for=\"new-dbkey\">Reference genome build (dbkey): </label>' + '<div class=\"form-row-input\">' + '<select name=\"dbkey\" id=\"new-dbkey\">';\n\n        // add dbkeys\n        for (var i = 0; i < response.length; i++) {\n            html += \"<option value=\\\"\" + response[i][1] + \"\\\">\" + response[i][0] + \"</option>\";\n        }\n\n        // close selection/finalize template\n        html += \"</select></div><div style=\\\"clear: both;\\\"></div></div><div class=\\\"form-row\\\">Is the build not listed here? <a href=\\\"\" + Galaxy.root + \"user/dbkeys?use_panels=True\\\">Add a Custom Build</a></div></form>\";\n\n        // return\n        return html;\n    },\n\n    // create\n    create_browser: function create_browser(name, dbkey) {\n        $(document).trigger(\"convert_to_values\");\n\n        view = ui.create_visualization({\n            container: $(\"#center .unified-panel-body\"),\n            name: name,\n            dbkey: dbkey\n        }, galaxy_config.app.gene_region);\n\n        // initialize editor\n        this.init_editor();\n\n        // modify view setting\n        view.editor = true;\n    },\n\n    // initialization for editor-specific functions.\n    init_editor: function init_editor() {\n        // set title\n        $(\"#center .unified-panel-title\").text(view.config.get_value(\"name\") + \" (\" + view.dbkey + \")\");\n\n        // add dataset\n        if (galaxy_config.app.add_dataset) $.ajax({\n            url: Galaxy.root + \"api/datasets/\" + galaxy_config.app.add_dataset,\n            data: { hda_ldda: \"hda\", data_type: \"track_config\" },\n            dataType: \"json\",\n            success: function success(track_data) {\n                view.add_drawable(_tracks2.default.object_from_template(track_data, view, view));\n            }\n        });\n\n        // initialize icons\n        $(\"#add-bookmark-button\").click(function () {\n            // add new bookmark.\n            var position = view.chrom + \":\" + view.low + \"-\" + view.high;\n\n            var annotation = \"Bookmark description\";\n            return ui.add_bookmark(position, annotation, true);\n        });\n\n        // initialize keyboard\n        ui.init_keyboard_nav(view);\n\n        $(window).on(\"beforeunload\", function () {\n            if (view.has_changes) {\n                return \"There are unsaved changes to your visualization that will be lost if you leave this page.\";\n            }\n        });\n    }\n});\n\nexports.default = {\n    TracksterUI: TracksterUI,\n    GalaxyApp: TracksterView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _visualization = __webpack_require__(9);\n\nvar _visualization2 = _interopRequireDefault(_visualization);\n\nvar _viz_views = __webpack_require__(35);\n\nvar _viz_views2 = _interopRequireDefault(_viz_views);\n\nvar _util = __webpack_require__(10);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _slotting = __webpack_require__(36);\n\nvar _slotting2 = _interopRequireDefault(_slotting);\n\nvar _painters = __webpack_require__(37);\n\nvar _painters2 = _interopRequireDefault(_painters);\n\nvar _filters = __webpack_require__(38);\n\nvar _filters2 = _interopRequireDefault(_filters);\n\nvar _data = __webpack_require__(8);\n\nvar _data2 = _interopRequireDefault(_data);\n\nvar _tools = __webpack_require__(25);\n\nvar _tools2 = _interopRequireDefault(_tools);\n\nvar _config = __webpack_require__(11);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _bbiDataManager = __webpack_require__(39);\n\nvar _bbiDataManager2 = _interopRequireDefault(_bbiDataManager);\n\n__webpack_require__(15);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar extend = _.extend;\n\n// ---- Web UI specific utilities ----\n\n/**\n * Dictionary of HTML element-JavaScript object relationships.\n */\n// TODO: probably should separate moveable objects from containers.\nvar html_elt_js_obj_dict = {};\n\n/**\n * Designates an HTML as a container.\n */\nvar is_container = function is_container(element, obj) {\n    html_elt_js_obj_dict[element.attr(\"id\")] = obj;\n};\n\n/**\n * Make `element` moveable within parent and sibling elements by dragging `handle` (a selector).\n * Function manages JS objects, containers as well.\n *\n * @param element HTML element to make moveable\n * @param handle_class classname that denotes HTML element to be used as handle\n * @param container_selector selector used to identify possible containers for this element\n * @param element_js_obj JavaScript object associated with element; used\n */\nvar moveable = function moveable(element, handle_class, container_selector, element_js_obj) {\n    // HACK: set default value for container selector.\n    container_selector = \".group\";\n\n    // Register element with its object.\n    html_elt_js_obj_dict[element.attr(\"id\")] = element_js_obj;\n\n    // Need to provide selector for handle, not class.\n    element.bind(\"drag\", { handle: \".\" + handle_class, relative: true }, function (e, d) {\n        var element = $(this);\n        var parent = $(this).parent();\n\n        var // Only sorting amongst tracks and groups.\n        children = parent.children(\".track,.group\");\n\n        var this_obj = html_elt_js_obj_dict[$(this).attr(\"id\")];\n        var child;\n        var container;\n        var top;\n        var bottom;\n        var i;\n\n        //\n        // Enable three types of dragging: (a) out of container; (b) into container;\n        // (c) sibling movement, aka sorting. Handle in this order for simplicity.\n        //\n\n        // Handle dragging out of container.\n        container = $(this).parents(container_selector);\n        if (container.length !== 0) {\n            top = container.position().top;\n            bottom = top + container.outerHeight();\n            var cur_container = html_elt_js_obj_dict[container.attr(\"id\")];\n            if (d.offsetY < top) {\n                // Moving above container.\n                $(this).insertBefore(container);\n                cur_container.remove_drawable(this_obj);\n                cur_container.container.add_drawable_before(this_obj, cur_container);\n                return;\n            } else if (d.offsetY > bottom) {\n                // Moving below container.\n                $(this).insertAfter(container);\n                cur_container.remove_drawable(this_obj);\n                cur_container.container.add_drawable(this_obj);\n                return;\n            }\n        }\n\n        // Handle dragging into container. Child is appended to container's content_div.\n        container = null;\n        for (i = 0; i < children.length; i++) {\n            child = $(children.get(i));\n            top = child.position().top;\n            bottom = top + child.outerHeight();\n            // Dragging into container if child is a container and offset is inside container.\n            if (child.is(container_selector) && this !== child.get(0) && d.offsetY >= top && d.offsetY <= bottom) {\n                // Append/prepend based on where offsetY is closest to and return.\n                if (d.offsetY - top < bottom - d.offsetY) {\n                    child.find(\".content-div\").prepend(this);\n                } else {\n                    child.find(\".content-div\").append(this);\n                }\n                // Update containers. Object may not have container if it is being moved quickly.\n                if (this_obj.container) {\n                    this_obj.container.remove_drawable(this_obj);\n                }\n                html_elt_js_obj_dict[child.attr(\"id\")].add_drawable(this_obj);\n                return;\n            }\n        }\n\n        // Handle sibling movement, aka sorting.\n\n        // Determine new position\n        for (i = 0; i < children.length; i++) {\n            child = $(children.get(i));\n            if (d.offsetY < child.position().top &&\n            // Cannot move tracks above reference track or intro div.\n            !(child.hasClass(\"reference-track\") || child.hasClass(\"intro\"))) {\n                break;\n            }\n        }\n\n        // If not already in the right place, move. Need\n        // to handle the end specially since we don't have\n        // insert at index\n        if (i === children.length) {\n            if (this !== children.get(i - 1)) {\n                parent.append(this);\n                html_elt_js_obj_dict[parent.attr(\"id\")].move_drawable(this_obj, i);\n            }\n        } else if (this !== children.get(i)) {\n            $(this).insertBefore(children.get(i));\n            // Need to adjust insert position if moving down because move is changing\n            // indices of all list items.\n            html_elt_js_obj_dict[parent.attr(\"id\")].move_drawable(this_obj, d.deltaY > 0 ? i - 1 : i);\n        }\n    }).bind(\"dragstart\", function () {\n        $(this).addClass(\"dragging\");\n    }).bind(\"dragend\", function () {\n        $(this).removeClass(\"dragging\");\n    });\n};\n\n/**\n * Init constants & functions used throughout trackster.\n */\nvar // Padding at the top of tracks for error messages\nERROR_PADDING = 20;\n\nvar // Maximum number of rows un a slotted track\nMAX_FEATURE_DEPTH = 100;\n\nvar // Minimum width for window for squish to be used.\nMIN_SQUISH_VIEW_WIDTH = 12000;\n\nvar // Number of pixels per tile, not including left offset.\nTILE_SIZE = 400;\n\nvar DEFAULT_DATA_QUERY_WAIT = 5000;\n\nvar // Maximum number of chromosomes that are selectable at any one time.\nMAX_CHROMS_SELECTABLE = 100;\n\nvar DATA_ERROR = \"Cannot display dataset due to an error. \";\n\nvar DATA_NOCONVERTER = \"A converter for this dataset is not installed. Please check your datatypes_conf.xml file.\";\n\nvar DATA_NONE = \"No data for this chrom/contig.\";\n\nvar DATA_PENDING = \"Preparing data. This can take a while for a large dataset. \" + \"If the visualization is saved and closed, preparation will continue in the background.\";\n\nvar DATA_CANNOT_RUN_TOOL = \"Tool cannot be rerun: \";\nvar DATA_LOADING = \"Loading data...\";\nvar DATA_OK = \"Ready for display\";\nvar TILE_CACHE_SIZE = 10;\nvar DATA_CACHE_SIZE = 20;\n\nvar // Numerical/continuous data display modes.\nCONTINUOUS_DATA_MODES = [\"Histogram\", \"Line\", \"Filled\", \"Intensity\"];\n\n/**\n * Round a number to a given number of decimal places.\n */\nfunction round(num, places) {\n    // Default rounding is to integer.\n    if (!places) {\n        places = 0;\n    }\n\n    var val = Math.pow(10, places);\n    return Math.round(num * val) / val;\n}\n\n/**\n * Check if a server can do byte range requests.\n */\nfunction supportsByteRanges(url) {\n    var promise = $.Deferred();\n    $.ajax({\n        type: \"HEAD\",\n        url: url,\n        beforeSend: function beforeSend(xhr) {\n            xhr.setRequestHeader(\"Range\", \"bytes=0-10\");\n        },\n        success: function success(result, status, xhr) {\n            promise.resolve(xhr.status === 206);\n        }\n    });\n\n    return promise;\n}\n\n/**\n * Drawables hierarchy:\n *\n * Drawable\n *    --> DrawableCollection\n *        --> DrawableGroup\n *        --> View\n *    --> Track\n */\n\n/**\n * Base class for all drawable objects. Drawable objects are associated with a view and live in a\n * container. They have the following HTML elements and structure:\n *  <container_div>\n *      <header_div>\n *      <content_div>\n *\n * They optionally have a drag handle class.\n */\nvar Drawable = function Drawable(view, container, obj_dict) {\n    if (!Drawable.id_counter) {\n        Drawable.id_counter = 0;\n    }\n    this.id = Drawable.id_counter++;\n    this.view = view;\n    this.container = container;\n    this.drag_handle_class = obj_dict.drag_handle_class;\n    this.is_overview = false;\n    this.action_icons = {};\n\n    // -- Set up drawable configuration. --\n    this.config = _config2.default.ConfigSettingCollection.from_models_and_saved_values(this.config_params, obj_dict.prefs);\n\n    // If there's no saved name, use object name.\n    if (!this.config.get_value(\"name\")) {\n        this.config.set_value(\"name\", obj_dict.name);\n    }\n    if (this.config_onchange) {\n        this.config.on(\"change\", this.config_onchange, this);\n    }\n\n    // Build Drawable HTML and behaviors.\n    this.container_div = this.build_container_div();\n    this.header_div = null;\n\n    // Use opt-out policy on header creation because this is the more frequent approach:\n    // unless flag set, create header.\n    if (obj_dict.header !== false) {\n        var header_view = new _viz_views2.default.TrackHeaderView({\n            model: this,\n            id: this.id\n        });\n\n        this.header_div = header_view.$el;\n        this.container_div.append(this.header_div);\n\n        // Show icons when users is hovering over track.\n        var icons_div = header_view.icons_div;\n        this.action_icons = header_view.action_icons;\n        this.container_div.hover(function () {\n            icons_div.show();\n        }, function () {\n            icons_div.hide();\n        });\n    }\n};\n\nDrawable.prototype.action_icons_def = [\n// Hide/show drawable content.\n// FIXME: make this an odict for easier lookup.\n{\n    name: \"toggle_icon\",\n    title: \"Hide/show content\",\n    css_class: \"toggle\",\n    on_click_fn: function on_click_fn(drawable) {\n        if (drawable.config.get_value(\"content_visible\")) {\n            drawable.action_icons.toggle_icon.addClass(\"toggle-expand\").removeClass(\"toggle\");\n            drawable.hide_contents();\n            drawable.config.set_value(\"content_visible\", false);\n        } else {\n            drawable.action_icons.toggle_icon.addClass(\"toggle\").removeClass(\"toggle-expand\");\n            drawable.config.set_value(\"content_visible\", true);\n            drawable.show_contents();\n        }\n    }\n},\n// Edit settings.\n{\n    name: \"settings_icon\",\n    title: \"Edit settings\",\n    css_class: \"gear\",\n    on_click_fn: function on_click_fn(drawable) {\n        var view = new _config2.default.ConfigSettingCollectionView({\n            collection: drawable.config\n        });\n        view.render_in_modal(\"Configure Track\");\n    }\n},\n// Remove.\n{\n    name: \"remove_icon\",\n    title: \"Remove\",\n    css_class: \"remove-icon\",\n    on_click_fn: function on_click_fn(drawable) {\n        // Tooltip for remove icon must be deleted when drawable is deleted.\n        $(\".tooltip\").remove();\n        drawable.remove();\n    }\n}];\n\nextend(Drawable.prototype, {\n    config_params: [{ key: \"name\", label: \"Name\", type: \"text\", default_value: \"\" }, {\n        key: \"content_visible\",\n        type: \"bool\",\n        default_value: true,\n        hidden: true\n    }],\n\n    config_onchange: function config_onchange() {},\n\n    init: function init() {},\n\n    changed: function changed() {\n        this.view.changed();\n    },\n\n    can_draw: function can_draw() {\n        if (this.enabled && this.config.get_value(\"content_visible\")) {\n            return true;\n        }\n\n        return false;\n    },\n\n    request_draw: function request_draw() {},\n\n    _draw: function _draw(options) {},\n\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: function to_dict() {},\n\n    /**\n     * Set drawable name.\n     */\n    set_name: function set_name(new_name) {\n        this.old_name = this.config.get_value(\"name\");\n        this.config.set_value(\"name\", new_name);\n    },\n\n    /**\n     * Revert track name; currently name can be reverted only once.\n     */\n    revert_name: function revert_name() {\n        if (this.old_name) {\n            this.config.set_value(\"name\", this.old_name);\n        }\n    },\n\n    /**\n     * Remove drawable (a) from its container and (b) from the HTML.\n     */\n    remove: function remove() {\n        this.changed();\n\n        this.container.remove_drawable(this);\n        var view = this.view;\n        this.container_div.hide(0, function () {\n            $(this).remove();\n            // HACK: is there a better way to update the view?\n            view.update_intro_div();\n        });\n    },\n\n    /**\n     * Build drawable's container div; this is the parent div for all drawable's elements.\n     */\n    build_container_div: function build_container_div() {},\n\n    /**\n     * Update icons.\n     */\n    update_icons: function update_icons() {},\n\n    /**\n     * Hide drawable's contents.\n     */\n    hide_contents: function hide_contents() {},\n\n    /**\n     * Show drawable's contents.\n     */\n    show_contents: function show_contents() {},\n\n    /**\n     * Returns a shallow copy of all drawables in this drawable.\n     */\n    get_drawables: function get_drawables() {}\n});\n\n/**\n * A collection of drawable objects.\n */\nvar DrawableCollection = function DrawableCollection(view, container, obj_dict) {\n    Drawable.call(this, view, container, obj_dict);\n\n    // Attribute init.\n    this.obj_type = obj_dict.obj_type;\n    this.drawables = [];\n};\n\nextend(DrawableCollection.prototype, Drawable.prototype, {\n    /**\n     * Unpack and add drawables to the collection.\n     */\n    unpack_drawables: function unpack_drawables(drawables_array) {\n        // Add drawables to collection.\n        this.drawables = [];\n        var drawable;\n        for (var i = 0; i < drawables_array.length; i++) {\n            drawable = object_from_template(drawables_array[i], this.view, this);\n            this.add_drawable(drawable);\n        }\n    },\n\n    /**\n     * Init each drawable in the collection.\n     */\n    init: function init() {\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i].init();\n        }\n    },\n\n    /**\n     * Draw each drawable in the collection.\n     */\n    _draw: function _draw(options) {\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i]._draw(options);\n        }\n    },\n\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: function to_dict() {\n        var dictified_drawables = [];\n        for (var i = 0; i < this.drawables.length; i++) {\n            dictified_drawables.push(this.drawables[i].to_dict());\n        }\n        return {\n            prefs: this.config.to_key_value_dict(),\n            obj_type: this.obj_type,\n            drawables: dictified_drawables\n        };\n    },\n\n    /**\n     * Add a drawable to the end of the collection.\n     */\n    add_drawable: function add_drawable(drawable) {\n        this.drawables.push(drawable);\n        drawable.container = this;\n        this.changed();\n    },\n\n    /**\n     * Add a drawable before another drawable.\n     */\n    add_drawable_before: function add_drawable_before(drawable, other) {\n        this.changed();\n        var index = this.drawables.indexOf(other);\n        if (index !== -1) {\n            this.drawables.splice(index, 0, drawable);\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Replace one drawable with another.\n     */\n    replace_drawable: function replace_drawable(old_drawable, new_drawable, update_html) {\n        var index = this.drawables.indexOf(old_drawable);\n        if (index !== -1) {\n            this.drawables[index] = new_drawable;\n            if (update_html) {\n                old_drawable.container_div.replaceWith(new_drawable.container_div);\n            }\n            this.changed();\n        }\n        return index;\n    },\n\n    /**\n     * Remove drawable from this collection.\n     */\n    remove_drawable: function remove_drawable(drawable) {\n        var index = this.drawables.indexOf(drawable);\n        if (index !== -1) {\n            // Found drawable to remove.\n            this.drawables.splice(index, 1);\n            drawable.container = null;\n            this.changed();\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Move drawable to another location in collection.\n     */\n    move_drawable: function move_drawable(drawable, new_position) {\n        var index = this.drawables.indexOf(drawable);\n        if (index !== -1) {\n            // Remove from current position:\n            this.drawables.splice(index, 1);\n            // insert into new position:\n            this.drawables.splice(new_position, 0, drawable);\n            this.changed();\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Returns all drawables in this drawable.\n     */\n    get_drawables: function get_drawables() {\n        return this.drawables;\n    },\n\n    /**\n     * Returns all <track_type> tracks in collection.\n     */\n    get_tracks: function get_tracks(track_type) {\n        // Initialize queue with copy of drawables array.\n        var queue = this.drawables.slice(0);\n\n        var tracks = [];\n        var drawable;\n        while (queue.length !== 0) {\n            drawable = queue.shift();\n            if (drawable instanceof track_type) {\n                tracks.push(drawable);\n            } else if (drawable.drawables) {\n                queue = queue.concat(drawable.drawables);\n            }\n        }\n        return tracks;\n    }\n});\n\n/**\n * A group of drawables that are moveable, visible.\n */\nvar DrawableGroup = function DrawableGroup(view, container, obj_dict) {\n    extend(obj_dict, {\n        obj_type: \"DrawableGroup\",\n        drag_handle_class: \"group-handle\"\n    });\n    DrawableCollection.call(this, view, container, obj_dict);\n\n    // Set up containers/moving for group: register both container_div and content div as container\n    // because both are used as containers (container div to recognize container, content_div to\n    // store elements). Group can be moved.\n    this.content_div = $(\"<div/>\").addClass(\"content-div\").attr(\"id\", \"group_\" + this.id + \"_content_div\").appendTo(this.container_div);\n    is_container(this.container_div, this);\n    is_container(this.content_div, this);\n    moveable(this.container_div, this.drag_handle_class, \".group\", this);\n\n    // Set up filters.\n    this.filters_manager = new _filters2.default.FiltersManager(this);\n    this.header_div.after(this.filters_manager.parent_div);\n\n    // HACK: add div to clear floating elements.\n    this.filters_manager.parent_div.after($(\"<div style='clear: both'/>\"));\n\n    // For saving drawables' filter managers when group-level filtering is done:\n    this.saved_filters_managers = [];\n\n    // Add drawables.\n    if (\"drawables\" in obj_dict) {\n        this.unpack_drawables(obj_dict.drawables);\n    }\n\n    // Restore filters.\n    if (\"filters\" in obj_dict) {\n        // FIXME: Pass collection_dict to DrawableCollection/Drawable will make this easier.\n        var old_manager = this.filters_manager;\n        this.filters_manager = new _filters2.default.FiltersManager(this, obj_dict.filters);\n        old_manager.parent_div.replaceWith(this.filters_manager.parent_div);\n\n        if (obj_dict.filters.visible) {\n            this.setup_multitrack_filtering();\n        }\n    }\n};\n\nextend(DrawableGroup.prototype, Drawable.prototype, DrawableCollection.prototype, {\n    action_icons_def: [Drawable.prototype.action_icons_def[0], Drawable.prototype.action_icons_def[1],\n    // Replace group with composite track.\n    {\n        name: \"composite_icon\",\n        title: \"Show composite track\",\n        css_class: \"layers-stack\",\n        on_click_fn: function on_click_fn(group) {\n            $(\".tooltip\").remove();\n            group.show_composite_track();\n        }\n    },\n    // Toggle track filters.\n    {\n        name: \"filters_icon\",\n        title: \"Filters\",\n        css_class: \"ui-slider-050\",\n        on_click_fn: function on_click_fn(group) {\n            // TODO: update Tooltip text.\n            if (group.filters_manager.visible()) {\n                // Hiding filters.\n                group.filters_manager.clear_filters();\n                group._restore_filter_managers();\n                // TODO: maintain current filter by restoring and setting saved manager's\n                // settings to current/shared manager's settings.\n                // TODO: need to restore filter managers when moving drawable outside group.\n            } else {\n                // Showing filters.\n                group.setup_multitrack_filtering();\n                group.request_draw({ clear_tile_cache: true });\n            }\n            group.filters_manager.toggle();\n        }\n    }, Drawable.prototype.action_icons_def[2]],\n\n    build_container_div: function build_container_div() {\n        var container_div = $(\"<div/>\").addClass(\"group\").attr(\"id\", \"group_\" + this.id);\n        if (this.container) {\n            this.container.content_div.append(container_div);\n        }\n        return container_div;\n    },\n\n    hide_contents: function hide_contents() {\n        this.tiles_div.hide();\n    },\n\n    show_contents: function show_contents() {\n        // Show the contents div and labels (if present)\n        this.tiles_div.show();\n        // Request a redraw of the content\n        this.request_draw();\n    },\n\n    update_icons: function update_icons() {\n        //\n        // Handle update when there are no tracks.\n        //\n        var num_drawables = this.drawables.length;\n        if (num_drawables === 0) {\n            this.action_icons.composite_icon.hide();\n            this.action_icons.filters_icon.hide();\n        } else if (num_drawables === 1) {\n            this.action_icons.composite_icon.toggle(this.drawables[0] instanceof CompositeTrack);\n            this.action_icons.filters_icon.hide();\n        } else {\n            // There are 2 or more tracks.\n\n            //\n            // Determine if a composite track can be created. Current criteria:\n            // (a) all tracks are line tracks;\n            //      OR\n            // FIXME: this is not enabled right now because it has not been well tested:\n            // (b) there is a single FeatureTrack.\n            //\n\n            // All tracks the same?\n            var i;\n\n            var j;\n            var drawable;\n            var same_type = true;\n            var a_type = this.drawables[0].get_type();\n            var num_feature_tracks = 0;\n            for (i = 0; i < num_drawables; i++) {\n                drawable = this.drawables[i];\n                if (drawable.get_type() !== a_type) {\n                    can_composite = false;\n                    break;\n                }\n                if (drawable instanceof FeatureTrack) {\n                    num_feature_tracks++;\n                }\n            }\n\n            if (same_type && this.drawables[0] instanceof LineTrack) {\n                this.action_icons.composite_icon.show();\n            } else {\n                this.action_icons.composite_icon.hide();\n                $(\".tooltip\").remove();\n            }\n\n            //\n            // Set up group-level filtering and update filter icon.\n            //\n            if (num_feature_tracks > 1 && num_feature_tracks === this.drawables.length) {\n                //\n                // Find shared filters.\n                //\n                var shared_filters = {};\n\n                var filter;\n\n                // Init shared filters with filters from first drawable.\n                drawable = this.drawables[0];\n                for (j = 0; j < drawable.filters_manager.filters.length; j++) {\n                    filter = drawable.filters_manager.filters[j];\n                    shared_filters[filter.name] = [filter];\n                }\n\n                // Create lists of shared filters.\n                for (i = 1; i < this.drawables.length; i++) {\n                    drawable = this.drawables[i];\n                    for (j = 0; j < drawable.filters_manager.filters.length; j++) {\n                        filter = drawable.filters_manager.filters[j];\n                        if (filter.name in shared_filters) {\n                            shared_filters[filter.name].push(filter);\n                        }\n                    }\n                }\n\n                //\n                // Create filters for shared filters manager. Shared filters manager is group's\n                // manager.\n                //\n                this.filters_manager.remove_all();\n                var filters;\n                var new_filter;\n                var min;\n                var max;\n                for (var filter_name in shared_filters) {\n                    filters = shared_filters[filter_name];\n                    if (filters.length === num_feature_tracks) {\n                        // Add new filter.\n                        // FIXME: can filter.copy() be used?\n                        new_filter = new _filters2.default.NumberFilter({\n                            name: filters[0].name,\n                            index: filters[0].index\n                        });\n                        this.filters_manager.add_filter(new_filter);\n                    }\n                }\n\n                // Show/hide icon based on filter availability.\n                this.action_icons.filters_icon.toggle(this.filters_manager.filters.length > 0);\n            } else {\n                this.action_icons.filters_icon.hide();\n            }\n        }\n    },\n\n    /**\n     * Restore individual track filter managers.\n     */\n    _restore_filter_managers: function _restore_filter_managers() {\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i].filters_manager = this.saved_filters_managers[i];\n        }\n        this.saved_filters_managers = [];\n    },\n\n    /**\n     *\n     */\n    setup_multitrack_filtering: function setup_multitrack_filtering() {\n        // Save tracks' managers and set up shared manager.\n        if (this.filters_manager.filters.length > 0) {\n            // For all tracks, save current filter manager and set manager to shared (this object's) manager.\n            this.saved_filters_managers = [];\n            for (var i = 0; i < this.drawables.length; i++) {\n                var drawable = this.drawables[i];\n                this.saved_filters_managers.push(drawable.filters_manager);\n                drawable.filters_manager = this.filters_manager;\n            }\n\n            //TODO: hide filters icons for each drawable?\n        }\n        this.filters_manager.init_filters();\n    },\n\n    /**\n     * Replace group with a single composite track that includes all group's tracks.\n     */\n    show_composite_track: function show_composite_track() {\n        var composite_track = new CompositeTrack(this.view, this.view, {\n            name: this.config.get_value(\"name\"),\n            drawables: this.drawables\n        });\n        var index = this.container.replace_drawable(this, composite_track, true);\n        composite_track.request_draw();\n    },\n\n    add_drawable: function add_drawable(drawable) {\n        DrawableCollection.prototype.add_drawable.call(this, drawable);\n        this.update_icons();\n    },\n\n    remove_drawable: function remove_drawable(drawable) {\n        DrawableCollection.prototype.remove_drawable.call(this, drawable);\n        this.update_icons();\n    },\n\n    to_dict: function to_dict() {\n        // If filters are visible, need to restore original filter managers before converting to dict.\n        if (this.filters_manager.visible()) {\n            this._restore_filter_managers();\n        }\n\n        var obj_dict = extend(DrawableCollection.prototype.to_dict.call(this), {\n            filters: this.filters_manager.to_dict()\n        });\n\n        // Setup multi-track filtering again.\n        if (this.filters_manager.visible()) {\n            this.setup_multitrack_filtering();\n        }\n\n        return obj_dict;\n    },\n\n    request_draw: function request_draw(options) {\n        _.each(this.drawables, function (d) {\n            d.request_draw(options);\n        });\n    }\n});\n\n/**\n * View object manages a trackster visualization, including tracks and user interactions.\n * Events triggered:\n *      navigate: when browser view changes to a new locations\n */\nvar TracksterView = Backbone.View.extend({\n    initialize: function initialize(obj_dict) {\n        extend(obj_dict, {\n            obj_type: \"View\"\n        });\n        DrawableCollection.call(this, \"View\", obj_dict.container, obj_dict);\n        this.chrom = null;\n        this.vis_id = obj_dict.vis_id;\n        this.dbkey = obj_dict.dbkey;\n        this.stand_alone = obj_dict.stand_alone !== undefined ? obj_dict.stand_alone : true;\n        this.label_tracks = [];\n        this.tracks_to_be_redrawn = [];\n        this.max_low = 0;\n        this.max_high = 0;\n        this.zoom_factor = 3;\n        this.min_separation = 30;\n        this.has_changes = false;\n        // Deferred object that indicates when view's chrom data has been loaded.\n        this.load_chroms_deferred = null;\n        this.render();\n        this.canvas_manager = new _visualization2.default.CanvasManager(this.container.get(0).ownerDocument);\n        this.reset();\n\n        // Define track configuration\n        this.config = _config2.default.ConfigSettingCollection.from_models_and_saved_values([{\n            key: \"name\",\n            label: \"Name\",\n            type: \"text\",\n            default_value: \"\"\n        }, {\n            key: \"a_color\",\n            label: \"A Color\",\n            type: \"color\",\n            default_value: \"#FF0000\"\n        }, {\n            key: \"c_color\",\n            label: \"C Color\",\n            type: \"color\",\n            default_value: \"#00FF00\"\n        }, {\n            key: \"g_color\",\n            label: \"G Color\",\n            type: \"color\",\n            default_value: \"#0000FF\"\n        }, {\n            key: \"t_color\",\n            label: \"T Color\",\n            type: \"color\",\n            default_value: \"#FF00FF\"\n        }, {\n            key: \"n_color\",\n            label: \"N Color\",\n            type: \"color\",\n            default_value: \"#AAAAAA\"\n        }], { name: obj_dict.name });\n    },\n\n    render: function render() {\n        // Attribute init.\n        this.requested_redraw = false;\n\n        // Create DOM elements\n        var parent_element = this.container;\n\n        var view = this;\n        // Top container for things that are fixed at the top\n        this.top_container = $(\"<div/>\").addClass(\"top-container\").appendTo(parent_element);\n        // Browser content, primary tracks are contained in here\n        this.browser_content_div = $(\"<div/>\").addClass(\"content\").appendTo(parent_element);\n        // Bottom container for things that are fixed at the bottom\n        this.bottom_container = $(\"<div/>\").addClass(\"bottom-container\").appendTo(parent_element);\n        // Label track fixed at top\n        this.top_labeltrack = $(\"<div/>\").addClass(\"top-labeltrack\").appendTo(this.top_container);\n        // Viewport for dragging tracks in center\n        this.viewport_container = $(\"<div/>\").addClass(\"viewport-container\").attr(\"id\", \"viewport-container\").appendTo(this.browser_content_div);\n        // Alias viewport_container as content_div so that it matches function of DrawableCollection/Group content_div.\n        this.content_div = this.viewport_container;\n        is_container(this.viewport_container, view);\n        // Introduction div shown when there are no tracks.\n        this.intro_div = $(\"<div/>\").addClass(\"intro\").appendTo(this.viewport_container);\n        var add_tracks_button = $(\"<div/>\").text(\"Add Datasets to Visualization\").addClass(\"action-button\").appendTo(this.intro_div).click(function () {\n            _visualization2.default.select_datasets({ dbkey: view.dbkey }, function (tracks) {\n                _.each(tracks, function (track) {\n                    view.add_drawable(object_from_template(track, view, view));\n                });\n            });\n        });\n\n        // Navigation at top\n        this.nav_container = $(\"<div/>\").addClass(\"trackster-nav-container\").prependTo(this.top_container);\n        this.nav = $(\"<div/>\").addClass(\"trackster-nav\").appendTo(this.nav_container);\n\n        if (this.stand_alone) {\n            this.nav_container.addClass(\"stand-alone\");\n            this.nav.addClass(\"stand-alone\");\n        }\n\n        // Overview (scrollbar and overview plot) at bottom\n        this.overview = $(\"<div/>\").addClass(\"overview\").appendTo(this.bottom_container);\n        this.overview_viewport = $(\"<div/>\").addClass(\"overview-viewport\").appendTo(this.overview);\n        this.overview_close = $(\"<a/>\").attr(\"title\", \"Close overview\").addClass(\"icon-button overview-close tooltip\").hide().appendTo(this.overview_viewport);\n        this.overview_highlight = $(\"<div/>\").addClass(\"overview-highlight\").hide().appendTo(this.overview_viewport);\n        this.overview_box_background = $(\"<div/>\").addClass(\"overview-boxback\").appendTo(this.overview_viewport);\n        this.overview_box = $(\"<div/>\").addClass(\"overview-box\").appendTo(this.overview_viewport);\n        this.default_overview_height = this.overview_box.height();\n\n        this.nav_controls = $(\"<div/>\").addClass(\"nav-controls\").appendTo(this.nav);\n        this.chrom_select = $(\"<select/>\").attr({ name: \"chrom\" }).addClass(\"chrom-nav\").append(\"<option value=''>Loading</option>\").appendTo(this.nav_controls);\n        var submit_nav = function submit_nav(e) {\n            if (e.type === \"focusout\" || (e.keyCode || e.which) === 13 || (e.keyCode || e.which) === 27) {\n                if ((e.keyCode || e.which) !== 27) {\n                    // Not escape key\n                    view.go_to($(this).val());\n                }\n                $(this).hide();\n                $(this).val(\"\");\n                view.location_span.show();\n                view.chrom_select.show();\n            }\n\n            // Suppress key presses so that they do impact viz.\n            e.stopPropagation();\n        };\n        this.nav_input = $(\"<input/>\").addClass(\"nav-input\").hide().bind(\"keyup focusout\", submit_nav).appendTo(this.nav_controls);\n        this.location_span = $(\"<span/>\").addClass(\"location\").attr(\"title\", \"Click to change location\").tooltip({ placement: \"bottom\" }).appendTo(this.nav_controls);\n        this.location_span.click(function () {\n            view.location_span.hide();\n            view.chrom_select.hide();\n            view.nav_input.val(view.chrom + \":\" + view.low + \"-\" + view.high);\n            view.nav_input.css(\"display\", \"inline-block\");\n            view.nav_input.select();\n            view.nav_input.focus();\n            // Set up autocomplete for tracks' features.\n            view.nav_input.autocomplete({\n                source: function source(request, response) {\n                    // Using current text, query each track and create list of all matching features.\n                    var all_features = [];\n\n                    var feature_search_deferreds = $.map(view.get_tracks(FeatureTrack), function (t) {\n                        return t.data_manager.search_features(request.term).success(function (dataset_features) {\n                            all_features = all_features.concat(dataset_features);\n                        });\n                    });\n\n                    // When all searching is done, fill autocomplete.\n                    $.when.apply($, feature_search_deferreds).done(function () {\n                        response($.map(all_features, function (feature) {\n                            return {\n                                label: feature[0],\n                                value: feature[1]\n                            };\n                        }));\n                    });\n                },\n                minLength: 2\n            });\n        });\n        if (this.vis_id !== undefined) {\n            this.hidden_input = $(\"<input/>\").attr(\"type\", \"hidden\").val(this.vis_id).appendTo(this.nav_controls);\n        }\n\n        this.zo_link = $(\"<a/>\").attr(\"id\", \"zoom-out\").attr(\"title\", \"Zoom out\").tooltip({ placement: \"bottom\" }).click(function () {\n            view.zoom_out();\n        }).appendTo(this.nav_controls);\n        this.zi_link = $(\"<a/>\").attr(\"id\", \"zoom-in\").attr(\"title\", \"Zoom in\").tooltip({ placement: \"bottom\" }).click(function () {\n            view.zoom_in();\n        }).appendTo(this.nav_controls);\n\n        // Get initial set of chroms.\n        this.load_chroms_deferred = this.load_chroms({ low: 0 });\n        this.chrom_select.bind(\"change\", function () {\n            view.change_chrom(view.chrom_select.val());\n        });\n\n        /*\n        this.browser_content_div.bind(\"mousewheel\", function( e, delta ) {\n            if (Math.abs(delta) < 0.5) {\n                return;\n            }\n            if (delta > 0) {\n                view.zoom_in(e.pageX, this.viewport_container);\n            } else {\n                view.zoom_out();\n            }\n            e.preventDefault();\n        });\n        */\n\n        // Blur tool/filter inputs when user clicks on content div.\n        this.browser_content_div.click(function (e) {\n            $(this).find(\"input\").trigger(\"blur\");\n        });\n\n        // Double clicking zooms in\n        this.browser_content_div.bind(\"dblclick\", function (e) {\n            view.zoom_in(e.pageX, this.viewport_container);\n        });\n\n        // Dragging the overview box (~ horizontal scroll bar)\n        this.overview_box.bind(\"dragstart\", function (e, d) {\n            this.current_x = d.offsetX;\n        }).bind(\"drag\", function (e, d) {\n            var delta = d.offsetX - this.current_x;\n            this.current_x = d.offsetX;\n            var delta_chrom = Math.round(delta / view.viewport_container.width() * (view.max_high - view.max_low));\n            view.move_delta(-delta_chrom);\n        });\n\n        this.overview_close.click(function () {\n            view.reset_overview();\n        });\n\n        // Dragging in the viewport scrolls\n        this.viewport_container.bind(\"draginit\", function (e, d) {\n            // Disable interaction if started in scrollbar (for webkit)\n            if (e.clientX > view.viewport_container.width() - 16) {\n                return false;\n            }\n        }).bind(\"dragstart\", function (e, d) {\n            d.original_low = view.low;\n            d.current_height = e.clientY;\n            d.current_x = d.offsetX;\n        }).bind(\"drag\", function (e, d) {\n            var container = $(this);\n            var delta = d.offsetX - d.current_x;\n            var new_scroll = container.scrollTop() - (e.clientY - d.current_height);\n            container.scrollTop(new_scroll);\n            d.current_height = e.clientY;\n            d.current_x = d.offsetX;\n            var delta_chrom = Math.round(delta / view.viewport_container.width() * (view.high - view.low));\n            view.move_delta(delta_chrom);\n        });\n        /*\n        FIXME: Do not do this for now because it's too jittery. Some kind of gravity approach is\n        needed here because moving left/right should be difficult.\n         // Also capture mouse wheel for left/right scrolling\n        }).bind( 'mousewheel', function( e, d, dx, dy ) {\n            // Only handle x axis scrolling; y axis scrolling is\n            // handled by the browser when the event bubbles up.\n            if (dx) {\n                var delta_chrom = Math.round( - dx / view.viewport_container.width() * (view.high - view.low) );\n                view.move_delta( delta_chrom );\n            }\n        });\n        */\n\n        // Dragging in the top label track allows selecting a region to zoom in on selected region.\n        this.top_labeltrack.bind(\"dragstart\", function (e, d) {\n            return $(\"<div/>\").addClass(\"zoom-area\").css(\"height\", view.browser_content_div.height() + view.top_labeltrack.height() + 1).appendTo($(this));\n        }).bind(\"drag\", function (e, d) {\n            $(d.proxy).css({\n                left: Math.min(e.pageX, d.startX) - view.container.offset().left,\n                width: Math.abs(e.pageX - d.startX)\n            });\n\n            var min = Math.min(e.pageX, d.startX) - view.container.offset().left;\n\n            var max = Math.max(e.pageX, d.startX) - view.container.offset().left;\n\n            var span = view.high - view.low;\n            var width = view.viewport_container.width();\n            view.update_location(Math.round(min / width * span) + view.low, Math.round(max / width * span) + view.low);\n        }).bind(\"dragend\", function (e, d) {\n            var min = Math.min(e.pageX, d.startX);\n            var max = Math.max(e.pageX, d.startX);\n            var span = view.high - view.low;\n            var width = view.viewport_container.width();\n            var old_low = view.low;\n            view.low = Math.round(min / width * span) + old_low;\n            view.high = Math.round(max / width * span) + old_low;\n            $(d.proxy).remove();\n            view.request_redraw();\n        });\n\n        // FIXME: this is still wonky for embedded visualizations.\n        /*\n        // For vertical alignment, track mouse with simple line.\n        var mouse_tracker_div = $('<div/>').addClass('mouse-pos').appendTo(parent_element);\n         // Show tracker only when hovering over view.\n        parent_element.hover(\n            function() {\n                mouse_tracker_div.show();\n                parent_element.mousemove(function(e) {\n                    mouse_tracker_div.css({\n                        // -1 makes line appear next to the mouse w/o preventing mouse actions.\n                        left: e.pageX - parent_element.offset().left - 1\n                    });\n                });\n            },\n            function() {\n                parent_element.off('mousemove');\n                mouse_tracker_div.hide();\n            }\n        );\n        */\n\n        this.add_label_track(new LabelTrack(this, { content_div: this.top_labeltrack }));\n\n        $(window).bind(\"resize\", function () {\n            // Stop previous timer.\n            if (this.resize_timer) {\n                clearTimeout(this.resize_timer);\n            }\n\n            // When function activated, resize window and redraw.\n            this.resize_timer = setTimeout(function () {\n                view.resize_window();\n            }, 500);\n        });\n        $(document).bind(\"redraw\", function () {\n            view.redraw();\n        });\n\n        this.reset();\n        $(window).trigger(\"resize\");\n    },\n\n    get_base_color: function get_base_color(base) {\n        return this.config.get_value(base.toLowerCase() + \"_color\") || this.config.get_value(\"n_color\");\n    }\n});\n\n// FIXME: need to use this approach to enable inheritance of DrawableCollection functions.\nextend(TracksterView.prototype, DrawableCollection.prototype, {\n    changed: function changed() {\n        this.has_changes = true;\n    },\n\n    /** Add or remove intro div depending on view state. */\n    update_intro_div: function update_intro_div() {\n        this.intro_div.toggle(this.drawables.length === 0);\n    },\n\n    /**\n     * Triggers navigate events as needed. If there is a delay,\n     * then event is triggered only after navigation has stopped.\n     */\n    trigger_navigate: function trigger_navigate(new_chrom, new_low, new_high, delay) {\n        // Stop previous timer.\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        if (delay) {\n            // To aggregate calls, use timer and only navigate once\n            // location has stabilized.\n            var self = this;\n            this.timer = setTimeout(function () {\n                self.trigger(\"navigate\", new_chrom + \":\" + new_low + \"-\" + new_high);\n            }, 500);\n        } else {\n            view.trigger(\"navigate\", new_chrom + \":\" + new_low + \"-\" + new_high);\n        }\n    },\n\n    update_location: function update_location(low, high) {\n        this.location_span.text(_util2.default.commatize(low) + \" - \" + _util2.default.commatize(high));\n        this.nav_input.val(this.chrom + \":\" + _util2.default.commatize(low) + \"-\" + _util2.default.commatize(high));\n\n        // Update location. Only update when there is a valid chrom; when loading vis, there may\n        // not be a valid chrom.\n        var chrom = this.chrom_select.val();\n        if (chrom !== \"\") {\n            this.trigger_navigate(chrom, this.low, this.high, true);\n        }\n    },\n\n    /**\n     * Load chrom data for the view. Returns a jQuery Deferred.\n     */\n    // FIXME: instead of loading chrom data, should load and store genome object.\n    load_chroms: function load_chroms(url_parms) {\n        url_parms.num = MAX_CHROMS_SELECTABLE;\n\n        var view = this;\n        var chrom_data = $.Deferred();\n        $.ajax({\n            url: Galaxy.root + \"api/genomes/\" + this.dbkey,\n            data: url_parms,\n            dataType: \"json\",\n            success: function success(result) {\n                // Do nothing if could not load chroms.\n                if (result.chrom_info.length === 0) {\n                    return;\n                }\n\n                // Load chroms.\n                if (result.reference) {\n                    var ref_track = new ReferenceTrack(view);\n                    view.add_label_track(ref_track);\n                    view.reference_track = ref_track;\n                }\n                view.chrom_data = result.chrom_info;\n\n                view.chrom_select.html(\"\");\n                view.chrom_select.append($('<option value=\"\">Select Chrom/Contig</option>'));\n\n                for (var i = 0, len = view.chrom_data.length; i < len; i++) {\n                    var chrom = view.chrom_data[i].chrom;\n                    var chrom_option = $(\"<option>\");\n                    chrom_option.text(chrom);\n                    chrom_option.val(chrom);\n                    view.chrom_select.append(chrom_option);\n                }\n                if (result.prev_chroms) {\n                    view.chrom_select.append($(\"<option value=\\\"previous\\\">Previous \" + MAX_CHROMS_SELECTABLE + \"</option>\"));\n                }\n                if (result.next_chroms) {\n                    view.chrom_select.append($(\"<option value=\\\"next\\\">Next \" + MAX_CHROMS_SELECTABLE + \"</option>\"));\n                }\n                view.chrom_start_index = result.start_index;\n\n                chrom_data.resolve(result.chrom_info);\n            },\n            error: function error() {\n                alert(\"Could not load chroms for this dbkey: \" + view.dbkey);\n            }\n        });\n        return chrom_data;\n    },\n\n    change_chrom: function change_chrom(chrom, low, high) {\n        var view = this;\n        // If chrom data is still loading, wait for it.\n        if (!view.chrom_data) {\n            view.load_chroms_deferred.then(function () {\n                view.change_chrom(chrom, low, high);\n            });\n            return;\n        }\n\n        // Don't do anything if chrom is \"None\" (hackish but some browsers already have this set), or null/blank\n        if (!chrom || chrom === \"None\") {\n            return;\n        }\n\n        //\n        // If user is navigating to previous/next set of chroms, load new chrom set and return.\n        //\n        if (chrom === \"previous\") {\n            view.load_chroms({\n                low: this.chrom_start_index - MAX_CHROMS_SELECTABLE\n            });\n            return;\n        }\n        if (chrom === \"next\") {\n            view.load_chroms({\n                low: this.chrom_start_index + MAX_CHROMS_SELECTABLE\n            });\n            return;\n        }\n\n        //\n        // User is loading a particular chrom. Look first in current set; if not in current set, load new\n        // chrom set.\n        //\n        var found = $.grep(view.chrom_data, function (v, i) {\n            return v.chrom === chrom;\n        })[0];\n        if (found === undefined) {\n            // Try to load chrom and then change to chrom.\n            view.load_chroms({ chrom: chrom }, function () {\n                view.change_chrom(chrom, low, high);\n            });\n            return;\n        } else {\n            // Switching to local chrom.\n            if (chrom !== view.chrom) {\n                view.chrom = chrom;\n                view.chrom_select.val(view.chrom);\n                view.max_high = found.len - 1; // -1 because we're using 0-based indexing.\n                view.reset();\n\n                for (var i = 0, len = view.drawables.length; i < len; i++) {\n                    var drawable = view.drawables[i];\n                    if (drawable.init) {\n                        drawable.init();\n                    }\n                }\n                if (view.reference_track) {\n                    view.reference_track.init();\n                }\n            }\n\n            // Resolve low, high.\n            if (low === undefined && high === undefined) {\n                // Both are undefined, so view is whole chromosome.\n                view.low = 0;\n                view.high = view.max_high;\n            } else {\n                // Low and/or high is defined.\n                view.low = low !== undefined ? Math.max(low, 0) : 0;\n                if (high === undefined) {\n                    // Center visualization around low.\n                    // HACK: max resolution is currently 30 bases.\n                    view.low = Math.max(view.low - 15, 0);\n                    view.high = view.low + 30;\n                } else {\n                    // High is defined.\n                    view.high = Math.min(high, view.max_high);\n                }\n            }\n\n            view.request_redraw();\n        }\n    },\n\n    /**\n     * Change viewing region to that denoted by string. General format of string is:\n     *\n     * <chrom>[ {separator}<start>[-<end>] ]\n     *\n     * where separator can be whitespace or a colon. Examples:\n     *\n     * chr22\n     * chr1:100-200\n     * chr7 89999\n     * chr8 90000 990000\n     */\n    go_to: function go_to(str) {\n        // Remove commas.\n        str = str.replace(/,/g, \"\");\n\n        // Replace colons and hyphens with space for easy parsing.\n        str = str.replace(/:|\\-/g, \" \");\n\n        // Parse new location.\n        var chrom_pos = str.split(/\\s+/);\n\n        var chrom = chrom_pos[0];\n        var new_low = chrom_pos[1] ? parseInt(chrom_pos[1], 10) : undefined;\n        var new_high = chrom_pos[2] ? parseInt(chrom_pos[2], 10) : undefined;\n\n        this.change_chrom(chrom, new_low, new_high);\n    },\n\n    move_fraction: function move_fraction(fraction) {\n        var view = this;\n        var span = view.high - view.low;\n        this.move_delta(fraction * span);\n    },\n\n    move_delta: function move_delta(delta_chrom) {\n        //\n        // Update low, high.\n        //\n\n        var view = this;\n        var current_chrom_span = view.high - view.low;\n        // Check for left and right boundaries\n        if (view.low - delta_chrom < view.max_low) {\n            view.low = view.max_low;\n            view.high = view.max_low + current_chrom_span;\n        } else if (view.high - delta_chrom > view.max_high) {\n            view.high = view.max_high;\n            view.low = view.max_high - current_chrom_span;\n        } else {\n            view.high -= delta_chrom;\n            view.low -= delta_chrom;\n        }\n\n        //\n        // Redraw view.\n        //\n\n        // Redraw without requesting more data immediately.\n        view.request_redraw({ data_fetch: false });\n\n        // Set up timeout to redraw with more data when moving stops.\n        if (this.redraw_on_move_fn) {\n            clearTimeout(this.redraw_on_move_fn);\n        }\n\n        this.redraw_on_move_fn = setTimeout(function () {\n            view.request_redraw();\n        }, 200);\n\n        // Navigate.\n        var chrom = view.chrom_select.val();\n        this.trigger_navigate(chrom, view.low, view.high, true);\n    },\n\n    /**\n     * Add a drawable to the view.\n     */\n    add_drawable: function add_drawable(drawable) {\n        DrawableCollection.prototype.add_drawable.call(this, drawable);\n        drawable.init();\n        this.changed();\n        this.update_intro_div();\n\n        // When drawable config changes, mark view as changed. This\n        // captures most (all?) state change that needs to be saved.\n        var self = this;\n        drawable.config.on(\"change\", function () {\n            self.changed();\n        });\n    },\n\n    add_label_track: function add_label_track(label_track) {\n        label_track.view = this;\n        label_track.init();\n        this.label_tracks.push(label_track);\n    },\n\n    /**\n     * Remove drawable from the view.\n     */\n    remove_drawable: function remove_drawable(drawable, hide) {\n        DrawableCollection.prototype.remove_drawable.call(this, drawable);\n        if (hide) {\n            var view = this;\n            drawable.container_div.hide(0, function () {\n                $(this).remove();\n                view.update_intro_div();\n            });\n        }\n    },\n\n    reset: function reset() {\n        this.low = this.max_low;\n        this.high = this.max_high;\n        this.viewport_container.find(\".yaxislabel\").remove();\n    },\n\n    /**\n     * Request that view redraw one or more of view's drawables. If drawable is not specified,\n     * all drawables are redrawn.\n     */\n    request_redraw: function request_redraw(options, drawable) {\n        var view = this;\n\n        var // Either redrawing a single drawable or all view's drawables.\n        track_list = drawable ? [drawable] : view.drawables;\n\n        // Add/update tracks in track list to redraw list.\n        _.each(track_list, function (track) {\n            var track_options = _.find(view.tracks_to_be_redrawn, function (to) {\n                return to[0] === track;\n            });\n\n            if (track_options) {\n                // Track already in list; update options.\n                track_options[1] = options;\n            } else {\n                // Track not in list yet.\n                view.tracks_to_be_redrawn.push([track, options]);\n            }\n        });\n\n        // Set up redraw if it has not been requested since last redraw.\n        if (!this.requested_redraw) {\n            requestAnimationFrame(function () {\n                view._redraw();\n            });\n            this.requested_redraw = true;\n        }\n    },\n\n    /**\n     * Redraws view and tracks.\n     * NOTE: this method should never be called directly; request_redraw() should be used so\n     * that requestAnimationFrame can manage redrawing.\n     */\n    _redraw: function _redraw() {\n        // TODO: move this code to function that does location setting.\n\n        // Clear because requested redraw is being handled now.\n        this.requested_redraw = false;\n\n        var low = this.low;\n        var high = this.high;\n\n        if (low < this.max_low) {\n            low = this.max_low;\n        }\n        if (high > this.max_high) {\n            high = this.max_high;\n        }\n        var span = this.high - this.low;\n        if (this.high !== 0 && span < this.min_separation) {\n            high = low + this.min_separation;\n        }\n        this.low = Math.floor(low);\n        this.high = Math.ceil(high);\n\n        this.update_location(this.low, this.high);\n\n        // -- Drawing code --\n\n        // Resolution is a pixel density.\n        this.resolution_px_b = this.viewport_container.width() / (this.high - this.low);\n\n        // Overview\n        var left_px = this.low / (this.max_high - this.max_low) * this.overview_viewport.width() || 0;\n        var width_px = (this.high - this.low) / (this.max_high - this.max_low) * this.overview_viewport.width() || 0;\n        var min_width_px = 13;\n\n        this.overview_box.css({\n            left: left_px,\n            width: Math.max(min_width_px, width_px)\n        }).show();\n        if (width_px < min_width_px) {\n            this.overview_box.css(\"left\", left_px - (min_width_px - width_px) / 2);\n        }\n        if (this.overview_highlight) {\n            this.overview_highlight.css({\n                left: left_px,\n                width: width_px\n            });\n        }\n\n        // Draw data tracks.\n        _.each(this.tracks_to_be_redrawn, function (track_options) {\n            var track = track_options[0];\n            var options = track_options[1];\n            if (track) {\n                track._draw(options);\n            }\n        });\n        this.tracks_to_be_redrawn = [];\n\n        // Draw label tracks.\n        _.each(this.label_tracks, function (label_track) {\n            label_track._draw();\n        });\n    },\n\n    zoom_in: function zoom_in(point, container) {\n        if (this.max_high === 0 || this.high - this.low <= this.min_separation) {\n            return;\n        }\n        var span = this.high - this.low;\n        var cur_center = span / 2 + this.low;\n        var new_half = span / this.zoom_factor / 2;\n        if (point) {\n            cur_center = point / this.viewport_container.width() * (this.high - this.low) + this.low;\n        }\n        this.low = Math.round(cur_center - new_half);\n        this.high = Math.round(cur_center + new_half);\n\n        this.changed();\n        this.request_redraw();\n    },\n\n    zoom_out: function zoom_out() {\n        if (this.max_high === 0) {\n            return;\n        }\n        var span = this.high - this.low;\n        var cur_center = span / 2 + this.low;\n        var new_half = span * this.zoom_factor / 2;\n        this.low = Math.round(cur_center - new_half);\n        this.high = Math.round(cur_center + new_half);\n        this.changed();\n        this.request_redraw();\n    },\n\n    /** Resize viewport. Use this method if header/footer content has changed in size. */\n    resize_viewport: function resize_viewport() {\n        this.viewport_container.height(this.container.height() - this.top_container.height() - this.bottom_container.height());\n    },\n\n    /** Called when window is resized. */\n    resize_window: function resize_window() {\n        this.resize_viewport();\n        this.request_redraw();\n    },\n\n    /** Show a Drawable in the overview. */\n    set_overview: function set_overview(drawable) {\n        if (this.overview_drawable) {\n            // If drawable to be set as overview is already in overview, do nothing.\n            // Otherwise, remove overview.\n            if (this.overview_drawable.dataset.id === drawable.dataset.id) {\n                return;\n            }\n            this.overview_viewport.find(\".track\").remove();\n        }\n\n        // Set new overview.\n        var overview_drawable = drawable.copy({\n            content_div: this.overview_viewport\n        });\n\n        var view = this;\n        overview_drawable.header_div.hide();\n        overview_drawable.is_overview = true;\n        view.overview_drawable = overview_drawable;\n        this.overview_drawable.postdraw_actions = function () {\n            view.overview_highlight.show().height(view.overview_drawable.content_div.height());\n            view.overview_viewport.height(view.overview_drawable.content_div.height() + view.overview_box.outerHeight());\n            view.overview_close.show();\n            view.resize_window();\n        };\n        view.overview_drawable.request_draw();\n        this.changed();\n    },\n\n    /** Close and reset overview. */\n    reset_overview: function reset_overview() {\n        // Update UI.\n        $(\".tooltip\").remove();\n        this.overview_viewport.find(\".track-tile\").remove();\n        this.overview_viewport.height(this.default_overview_height);\n        this.overview_box.height(this.default_overview_height);\n        this.overview_close.hide();\n        this.overview_highlight.hide();\n        view.resize_window();\n        view.overview_drawable = null;\n    }\n});\n\n/**\n * Encapsulation of a tool that users can apply to tracks/datasets.\n */\nvar TracksterTool = _tools2.default.Tool.extend({\n    defaults: {\n        track: null\n    },\n\n    initialize: function initialize(options) {\n        _tools2.default.Tool.prototype.initialize.call(this, options);\n\n        // Restore tool visibility from state; default to hidden.\n        var hidden = true;\n        if (options.tool_state !== undefined && options.tool_state.hidden !== undefined) {\n            hidden = options.tool_state.hidden;\n        }\n        this.set(\"hidden\", hidden);\n\n        // FIXME: need to restore tool values from options.tool_state\n\n        // HACK: remove some inputs because Trackster does yet not work with them.\n        this.remove_inputs([\"data\", \"hidden_data\", \"conditional\"]);\n    },\n\n    state_dict: function state_dict(options) {\n        return _.extend(this.get_inputs_dict(), {\n            hidden: !this.is_visible()\n        });\n    }\n});\n\n/**\n * View renders tool parameter HTML and updates parameter value as it is changed in the HTML.\n */\nvar ToolParameterView = Backbone.View.extend({\n    events: {\n        \"change :input\": \"update_value\"\n    },\n\n    render: function render() {\n        var param_div = this.$el.addClass(\"param-row\");\n        var param = this.model;\n\n        // Param label.\n        var label_div = $(\"<div>\").addClass(\"param-label\").text(param.get(\"label\")).appendTo(param_div);\n        // Param HTML.\n        var html_div = $(\"<div/>\").addClass(\"param-input\").html(param.get(\"html\")).appendTo(param_div);\n        // Set initial value.\n        html_div.find(\":input\").val(param.get(\"value\"));\n\n        // Add to clear floating layout.\n        $(\"<div style='clear: both;'/>\").appendTo(param_div);\n    },\n\n    update_value: function update_value(update_event) {\n        this.model.set_value($(update_event.target).val());\n    }\n});\n\n/**\n * View for TracksterTool.\n */\nvar TracksterToolView = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model.on(\"change:hidden\", this.set_visible, this);\n    },\n\n    /**\n     * Render tool UI.\n     */\n    render: function render() {\n        var self = this;\n        var tool = this.model;\n        var parent_div = this.$el.addClass(\"dynamic-tool\").hide();\n\n        // Prevent div events from propogating to other elements.\n        parent_div.bind(\"drag\", function (e) {\n            e.stopPropagation();\n        }).click(function (e) {\n            e.stopPropagation();\n        }).bind(\"dblclick\", function (e) {\n            e.stopPropagation();\n        }).keydown(function (e) {\n            e.stopPropagation();\n        });\n\n        // Add name, inputs.\n        var name_div = $(\"<div class='tool-name'>\").appendTo(parent_div).text(tool.get(\"name\"));\n        tool.get(\"inputs\").each(function (param) {\n            // Render parameter.\n            var param_view = new ToolParameterView({ model: param });\n            param_view.render();\n            parent_div.append(param_view.$el);\n        });\n\n        // Highlight value for inputs for easy replacement.\n        parent_div.find(\"input\").click(function () {\n            $(this).select();\n        });\n\n        // Add buttons for running on dataset, region.\n        var run_tool_row = $(\"<div>\").addClass(\"param-row\").appendTo(parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'>\").attr(\"value\", \"Run on complete dataset\").appendTo(run_tool_row);\n        var run_on_region_button = $(\"<input type='submit'>\").attr(\"value\", \"Run on visible region\").appendTo(run_tool_row);\n        run_on_region_button.click(function () {\n            // Run tool to create new track.\n            self.run_on_region();\n        });\n        run_on_dataset_button.click(function () {\n            self.run_on_dataset();\n        });\n\n        if (tool.is_visible()) {\n            this.$el.show();\n        }\n    },\n\n    /**\n     * Show or hide tool depending on tool visibility state.\n     */\n    set_visible: function set_visible() {\n        this.$el.toggle(this.model.is_visible());\n    },\n\n    /**\n     * Update tool parameters.\n     */\n    update_params: function update_params() {\n        for (var i = 0; i < this.params.length; i++) {\n            this.params[i].update_value();\n        }\n    },\n\n    /**\n     * Run tool on dataset. Output is placed in dataset's history and no changes to viz are made.\n     */\n    run_on_dataset: function run_on_dataset() {\n        var tool = this.model;\n        this.run(\n        // URL params.\n        {\n            target_dataset_id: this.model.get(\"track\").dataset.id,\n            action: \"rerun\",\n            tool_id: tool.id\n        }, null, function (track_data) {\n            Galaxy.modal.show({\n                title: tool.get(\"name\") + \" is Running\",\n                body: tool.get(\"name\") + \" is running on the complete dataset. Tool outputs are in dataset's history.\",\n                buttons: {\n                    Close: function Close() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n        });\n    },\n\n    /**\n     * Run dataset on visible region. This creates a new track and sets the track's contents\n     * to the tool's output.\n     */\n    run_on_region: function run_on_region() {\n        //\n        // Create track for tool's output immediately to provide user feedback.\n        //\n        var track = this.model.get(\"track\");\n\n        var tool = this.model;\n\n        var region = new _visualization2.default.GenomeRegion({\n            chrom: track.view.chrom,\n            start: track.view.low,\n            end: track.view.high\n        });\n\n        var url_params = {\n            target_dataset_id: track.dataset.id,\n            action: \"rerun\",\n            tool_id: tool.id,\n            regions: [region.toJSON()]\n        };\n\n        var current_track = track;\n\n        var // Set name of track to include tool name, parameters, and region used.\n        track_name = tool.get(\"name\") + current_track.tool_region_and_parameters_str(region);\n\n        var container;\n\n        // If track not in a group, create a group for it and add new track to group. If track\n        // already in group, add track to group.\n        if (current_track.container === view) {\n            // Create new group.\n            var group = new DrawableGroup(view, view, {\n                name: track.config.get_value(\"name\")\n            });\n\n            // Replace track with group.\n            var index = current_track.container.replace_drawable(current_track, group, false);\n\n            // Update HTML.\n            // FIXME: this is ugly way to replace a track with a group -- make this easier via\n            // a Drawable or DrawableCollection function.\n            group.container_div.insertBefore(current_track.view.content_div.children()[index]);\n            group.add_drawable(current_track);\n            current_track.container_div.appendTo(group.content_div);\n            container = group;\n        } else {\n            // Use current group.\n            container = current_track.container;\n        }\n\n        // Create and init new track.\n        var new_track = new current_track.constructor(view, container, {\n            name: track_name,\n            hda_ldda: \"hda\"\n        });\n        new_track.init_for_tool_data();\n        new_track.change_mode(current_track.mode);\n        new_track.set_filters_manager(current_track.filters_manager.copy(new_track));\n        new_track.update_icons();\n        container.add_drawable(new_track);\n        new_track.tiles_div.text(\"Starting job.\");\n\n        // Run tool.\n        this.run(url_params, new_track, function (track_data) {\n            new_track.set_dataset(new _data2.default.Dataset(track_data));\n            new_track.tiles_div.text(\"Running job.\");\n            new_track.init();\n        });\n    },\n\n    /**\n     * Run tool using a set of URL params and a success callback.\n     */\n    run: function run(url_params, new_track, success_callback) {\n        // Run tool.\n        url_params.inputs = this.model.get_inputs_dict();\n        var ss_deferred = new _util2.default.ServerStateDeferred({\n            ajax_settings: {\n                url: Galaxy.root + \"api/tools\",\n                data: JSON.stringify(url_params),\n                dataType: \"json\",\n                contentType: \"application/json\",\n                type: \"POST\"\n            },\n            interval: 2000,\n            success_fn: function success_fn(response) {\n                return response !== \"pending\";\n            }\n        });\n\n        // Start with this status message.\n        //new_track.container_div.addClass(\"pending\");\n        //new_track.content_div.html(DATA_PENDING);\n\n        $.when(ss_deferred.go()).then(function (response) {\n            if (response === \"no converter\") {\n                // No converter available for input datasets, so cannot run tool.\n                new_track.container_div.addClass(\"error\");\n                new_track.content_div.text(DATA_NOCONVERTER);\n            } else if (response.error) {\n                // General error.\n                new_track.container_div.addClass(\"error\");\n                new_track.content_div.text(DATA_CANNOT_RUN_TOOL + response.message);\n            } else {\n                // Job submitted and running.\n                success_callback(response);\n            }\n        });\n    }\n});\n\n/**\n * Generates scale values based on filter and feature's value for filter.\n */\nvar FilterScaler = function FilterScaler(filter, default_val) {\n    _painters2.default.Scaler.call(this, default_val);\n    this.filter = filter;\n};\n\nFilterScaler.prototype.gen_val = function (feature_data) {\n    // If filter is not initalized yet, return default val.\n    if (this.filter.high === Number.MAX_VALUE || this.filter.low === -Number.MAX_VALUE || this.filter.low === this.filter.high) {\n        return this.default_val;\n    }\n\n    // Scaling value is ratio of (filter's value compared to low) to (complete filter range).\n    return (parseFloat(feature_data[this.filter.index]) - this.filter.low) / (this.filter.high - this.filter.low);\n};\n\n/**\n * Tiles drawn by tracks.\n */\nvar Tile = function Tile(track, region, w_scale, canvas, data) {\n    this.track = track;\n    this.region = region;\n    this.low = region.get(\"start\");\n    this.high = region.get(\"end\");\n    this.w_scale = w_scale;\n    this.canvas = canvas;\n    // Wrap element in div for background and to provide container for tile-specific elements.\n    this.html_elt = $(\"<div class='track-tile'/>\").append(canvas);\n    this.data = data;\n    this.stale = false;\n};\n\n/**\n * Perform pre-display actions.\n */\nTile.prototype.predisplay_actions = function () {};\n\nvar LineTrackTile = function LineTrackTile(track, region, w_scale, canvas, data) {\n    Tile.call(this, track, region, w_scale, canvas, data);\n};\nLineTrackTile.prototype.predisplay_actions = function () {};\n\nvar FeatureTrackTile = function FeatureTrackTile(track, region, w_scale, canvas, data, mode, message, all_slotted, feature_mapper, incomplete_features, seq_data) {\n    // Attribute init.\n    Tile.call(this, track, region, w_scale, canvas, data);\n    this.mode = mode;\n    this.all_slotted = all_slotted;\n    this.feature_mapper = feature_mapper;\n    this.has_icons = false;\n    this.incomplete_features = incomplete_features;\n    // Features drawn based on data from other tiles.\n    this.other_tiles_features_drawn = {};\n    this.seq_data = seq_data;\n\n    // Add message + action icons to tile's html.\n    /*\n    This does not work right now because a random set of reads is returned by the server.\n    When the server can respond with more data systematically, renable these icons.\n    if (message) {\n        this.has_icons = true;\n         var\n            tile = this;\n            canvas = this.html_elt.children()[0],\n            message_div = $(\"<div/>\").addClass(\"tile-message\")\n                            // -1 to account for border.\n                            .css({'height': ERROR_PADDING, 'width': canvas.width}).prependTo(this.html_elt);\n         // Handle message; only message currently is that only the first N elements are displayed.\n        var tile_region = new visualization.GenomeRegion({\n                chrom: track.view.chrom,\n                start: this.low,\n                end: this.high\n            }),\n            num_features = data.length,\n            more_down_icon = $(\"<a/>\").addClass(\"icon more-down\")\n                                .attr(\"title\", \"For speed, only the first \" + num_features + \" features in this region were obtained from server. Click to get more data including depth\")\n                                .tooltip().appendTo(message_div),\n            more_across_icon = $(\"<a/>\").addClass(\"icon more-across\")\n                                .attr(\"title\", \"For speed, only the first \" + num_features + \" features in this region were obtained from server. Click to get more data excluding depth\")\n                                .tooltip().appendTo(message_div);\n         // Set up actions for icons.\n        more_down_icon.click(function() {\n            // Mark tile as stale, request more data, and redraw track.\n            tile.stale = true;\n            track.data_manager.get_more_data(tile_region, track.mode, 1 / tile.w_scale, {}, track.data_manager.DEEP_DATA_REQ);\n            $(\".tooltip\").hide();\n            track.request_draw();\n        }).dblclick(function(e) {\n            // Do not propogate as this would normally zoom in.\n            e.stopPropagation();\n        });\n         more_across_icon.click(function() {\n            // Mark tile as stale, request more data, and redraw track.\n            tile.stale = true;\n            track.data_manager.get_more_data(tile_region, track.mode, 1 / tile.w_scale, {}, track.data_manager.BROAD_DATA_REQ);\n            $(\".tooltip\").hide();\n            track.request_draw();\n        }).dblclick(function(e) {\n            // Do not propogate as this would normally zoom in.\n            e.stopPropagation();\n        });\n    }\n    */\n};\nextend(FeatureTrackTile.prototype, Tile.prototype);\n\n/**\n * Sets up support for popups.\n */\nFeatureTrackTile.prototype.predisplay_actions = function () {\n    /*\n    FIXME: use a canvas library to handle popups.\n    //\n    // Add support for popups.\n    //\n    var tile = this,\n        popups = {};\n     // Only show popups in Pack mode.\n    if (tile.mode !== \"Pack\") { return; }\n     $(this.html_elt).hover(\n    function() {\n        this.hovered = true;\n        $(this).mousemove();\n    },\n    function() {\n        this.hovered = false;\n        // Clear popup if it is still hanging around (this is probably not needed)\n        $(this).parents(\".track-content\").children(\".overlay\").children(\".feature-popup\").remove();\n    } ).mousemove(function (e) {\n        // Use the hover plugin to get a delay before showing popup\n        if ( !this.hovered ) { return; }\n        // Get feature data for position.\n        var\n            this_offset = $(this).offset(),\n            offsetX = e.pageX - this_offset.left,\n            offsetY = e.pageY - this_offset.top,\n            feature_data = tile.feature_mapper.get_feature_data(offsetX, offsetY),\n            feature_uid = (feature_data ? feature_data[0] : null);\n        // Hide visible popup if not over a feature or over a different feature.\n        $(this).parents(\".track-content\").children(\".overlay\").children(\".feature-popup\").each(function() {\n            if ( !feature_uid ||\n                 $(this).attr(\"id\") !== feature_uid.toString() ) {\n                $(this).remove();\n            }\n        });\n         if (feature_data) {\n            // Get or create popup.\n            var popup = popups[feature_uid];\n            if (!popup) {\n                // Create feature's popup element.\n                var feature_dict = {\n                        name: feature_data[3],\n                        start: feature_data[1],\n                        end: feature_data[2],\n                        strand: feature_data[4]\n                    },\n                    filters = tile.track.filters_manager.filters,\n                    filter;\n                 // Add filter values to feature dict.\n                for (var i = 0; i < filters.length; i++) {\n                    filter = filters[i];\n                    feature_dict[filter.name] = feature_data[filter.index];\n                }\n                 // Build popup.\n                popup = $(\"<div/>\").attr(\"id\", feature_uid).addClass(\"feature-popup\");\n                var table = $(\"<table/>\"),\n                    key, value, row;\n                for (key in feature_dict) {\n                    value = feature_dict[key];\n                    row = $(\"<tr/>\").appendTo(table);\n                    $(\"<th/>\").appendTo(row).text(key);\n                    $(\"<td/>\").attr(\"align\", \"left\").appendTo(row)\n                              .text(typeof(value) === 'number' ? round(value, 2) : value);\n                }\n                popup.append( $(\"<div class='feature-popup-inner'>\").append( table ) );\n                popups[feature_uid] = popup;\n            }\n             // Attach popup to track's overlay.\n            popup.appendTo( $(this).parents(\".track-content\").children(\".overlay\") );\n             // Offsets are within canvas, but popup must be positioned relative to parent element.\n            // parseInt strips \"px\" from left, top measurements. +7 so that mouse pointer does not\n            // overlap popup.\n            var\n                popupX = offsetX + parseInt( tile.html_elt.css(\"left\"), 10 ) - popup.width() / 2,\n                popupY = offsetY + parseInt( tile.html_elt.css(\"top\"), 10 ) + 7;\n            popup.css(\"left\", popupX + \"px\").css(\"top\", popupY + \"px\");\n        }\n        else if (!e.isPropagationStopped()) {\n            // Propogate event to other tiles because overlapping tiles prevent mousemove from being\n            // called on tiles under this tile.\n            e.stopPropagation();\n            $(this).siblings().each(function() {\n                $(this).trigger(e);\n            });\n        }\n    })\n    .mouseleave(function() {\n        $(this).parents(\".track-content\").children(\".overlay\").children(\".feature-popup\").remove();\n    });\n    */\n};\n\n/**\n * Tracks are objects can be added to the View.\n *\n * Track object hierarchy:\n * Track\n * -> LabelTrack\n * -> TiledTrack\n * ----> LineTrack\n * ----> ReferenceTrack\n * ----> FeatureTrack\n * -------> ReadTrack\n * ----> VariantTrack\n */\nvar Track = function Track(view, container, obj_dict) {\n    // For now, track's container is always view.\n    extend(obj_dict, {\n        drag_handle_class: \"draghandle\"\n    });\n    Drawable.call(this, view, container, obj_dict);\n\n    //\n    // Attribute init.\n    //\n\n    // Set or create dataset.\n    this.dataset = null;\n    if (obj_dict.dataset) {\n        // Dataset can be a Backbone model or a dict that can be used to create a model.\n        this.dataset = obj_dict.dataset instanceof Backbone.Model ? obj_dict.dataset : new _data2.default.Dataset(obj_dict.dataset);\n    }\n    this.dataset_check_type = \"converted_datasets_state\";\n    this.data_url_extra_params = {};\n    this.data_query_wait = \"data_query_wait\" in obj_dict ? obj_dict.data_query_wait : DEFAULT_DATA_QUERY_WAIT;\n    // A little ugly creating data manager right now due to transition to Backbone-based objects.\n    this.data_manager = \"data_manager\" in obj_dict ? obj_dict.data_manager : new _visualization2.default.GenomeDataManager({\n        dataset: this.dataset,\n        // HACK: simulate 'genome' attributes from view for now.\n        // View should eventually use Genome object.\n        genome: new _visualization2.default.Genome({\n            key: view.dbkey,\n            chroms_info: {\n                chrom_info: view.chrom_data\n            }\n        }),\n        data_mode_compatible: this.data_and_mode_compatible,\n        can_subset: this.can_subset\n    });\n\n    // Height attributes: min height, max height, and visible height.\n    this.min_height_px = 16;\n    this.max_height_px = 800;\n    this.visible_height_px = this.config.get_value(\"height\");\n\n    //\n    // Create content div, which is where track is displayed, and add to container if available.\n    //\n    this.content_div = $(\"<div class='track-content'>\").appendTo(this.container_div);\n    if (this.container) {\n        this.container.content_div.append(this.container_div);\n        if (!(\"resize\" in obj_dict) || obj_dict.resize) {\n            this.add_resize_handle();\n        }\n    }\n};\n\nextend(Track.prototype, Drawable.prototype, {\n    action_icons_def: [\n    // Change track mode.\n    {\n        name: \"mode_icon\",\n        title: \"Set display mode\",\n        css_class: \"chevron-expand\",\n        on_click_fn: function on_click_fn() {}\n    },\n    // Hide/show content.\n    Drawable.prototype.action_icons_def[0],\n    // Set track as overview.\n    {\n        name: \"overview_icon\",\n        title: \"Set as overview\",\n        css_class: \"application-dock-270\",\n        on_click_fn: function on_click_fn(track) {\n            track.view.set_overview(track);\n        }\n    },\n    // Edit config.\n    Drawable.prototype.action_icons_def[1],\n    // Toggle track filters.\n    {\n        name: \"filters_icon\",\n        title: \"Filters\",\n        css_class: \"ui-slider-050\",\n        on_click_fn: function on_click_fn(drawable) {\n            // TODO: update Tooltip text.\n            if (drawable.filters_manager.visible()) {\n                drawable.filters_manager.clear_filters();\n            } else {\n                drawable.filters_manager.init_filters();\n            }\n            drawable.filters_manager.toggle();\n        }\n    },\n    // Toggle track tool.\n    {\n        name: \"tools_icon\",\n        title: \"Tool\",\n        css_class: \"hammer\",\n        on_click_fn: function on_click_fn(track) {\n            // TODO: update Tooltip text.\n\n            track.tool.toggle();\n\n            // Update track name.\n            if (track.tool.is_visible()) {\n                track.set_name(track.config.get_value(\"name\") + track.tool_region_and_parameters_str());\n            } else {\n                track.revert_name();\n            }\n            // HACK: name change modifies icon placement, which leaves tooltip incorrectly placed.\n            $(\".tooltip\").remove();\n        }\n    },\n    // Go to parameter exploration visualization.\n    {\n        name: \"param_space_viz_icon\",\n        title: \"Tool parameter space visualization\",\n        css_class: \"arrow-split\",\n        on_click_fn: function on_click_fn(track) {\n            var html = \"<strong>Tool</strong>:\" + track.tool.get(\"name\") + \"<br/><strong>Dataset</strong>:\" + track.config.get_value(\"name\") + \"<br/><strong>Region(s)</strong>: <select name=\\\"regions\\\"><option value=\\\"cur\\\">current viewing area</option><option value=\\\"bookmarks\\\">bookmarks</option><option value=\\\"both\\\">current viewing area and bookmarks</option></select>\";\n\n            var cancel_fn = function cancel_fn() {\n                Galaxy.modal.hide();\n                $(window).unbind(\"keypress.check_enter_esc\");\n            };\n\n            var ok_fn = function ok_fn() {\n                var regions_to_use = $('select[name=\"regions\"] option:selected').val(),\n                    regions,\n                    view_region = new _visualization2.default.GenomeRegion({\n                    chrom: view.chrom,\n                    start: view.low,\n                    end: view.high\n                }),\n                    bookmarked_regions = _.map($(\".bookmark\"), function (elt) {\n                    return new _visualization2.default.GenomeRegion({\n                        from_str: $(elt).children(\".position\").text()\n                    });\n                });\n\n                // Get regions for visualization.\n                if (regions_to_use === \"cur\") {\n                    // Use only current region.\n                    regions = [view_region];\n                } else if (regions_to_use === \"bookmarks\") {\n                    // Use only bookmarks.\n                    regions = bookmarked_regions;\n                } else {\n                    // Use both current region and bookmarks.\n                    regions = [view_region].concat(bookmarked_regions);\n                }\n\n                Galaxy.modal.hide();\n\n                // Go to visualization.\n                window.location.href = Galaxy.root + \"visualization/sweepster?\" + $.param({\n                    dataset_id: track.dataset.id,\n                    hda_ldda: track.dataset.get(\"hda_ldda\"),\n                    regions: JSON.stringify(new Backbone.Collection(regions).toJSON())\n                });\n            };\n\n            var check_enter_esc = function check_enter_esc(e) {\n                if ((e.keyCode || e.which) === 27) {\n                    // Escape key\n                    cancel_fn();\n                } else if ((e.keyCode || e.which) === 13) {\n                    // Enter key\n                    ok_fn();\n                }\n            };\n\n            // show dialog\n            Galaxy.modal.show({\n                title: \"Visualize tool parameter space and output from different parameter settings?\",\n                body: html,\n                buttons: { No: cancel_fn, Yes: ok_fn }\n            });\n        }\n    },\n    // Remove track.\n    Drawable.prototype.action_icons_def[2]],\n\n    can_draw: function can_draw() {\n        return this.dataset && Drawable.prototype.can_draw.call(this);\n    },\n\n    build_container_div: function build_container_div() {\n        return $(\"<div/>\").addClass(\"track\").attr(\"id\", \"track_\" + this.id);\n    },\n\n    /**\n     * Set track's dataset.\n     */\n    set_dataset: function set_dataset(dataset) {\n        this.dataset = dataset;\n        this.data_manager.set(\"dataset\", dataset);\n    },\n\n    /**\n     * Action to take during resize.\n     */\n    on_resize: function on_resize() {\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Add resizing handle to drawable's container_div.\n     */\n    add_resize_handle: function add_resize_handle() {\n        var track = this;\n        var in_handle = false;\n        var in_drag = false;\n        var drag_control = $(\"<div class='track-resize'>\");\n        // Control shows on hover over track, stays while dragging\n        $(track.container_div).hover(function () {\n            if (track.config.get_value(\"content_visible\")) {\n                in_handle = true;\n                drag_control.show();\n            }\n        }, function () {\n            in_handle = false;\n            if (!in_drag) {\n                drag_control.hide();\n            }\n        });\n        // Update height and force redraw of current view while dragging,\n        // clear cache to force redraw of other tiles.\n        drag_control.hide().bind(\"dragstart\", function (e, d) {\n            in_drag = true;\n            d.original_height = $(track.content_div).height();\n        }).bind(\"drag\", function (e, d) {\n            var new_height = Math.min(Math.max(d.original_height + d.deltaY, track.min_height_px), track.max_height_px);\n            $(track.tiles_div).css(\"height\", new_height);\n            track.visible_height_px = track.max_height_px === new_height ? 0 : new_height;\n            track.on_resize();\n        }).bind(\"dragend\", function (e, d) {\n            track.tile_cache.clear();\n            in_drag = false;\n            if (!in_handle) {\n                drag_control.hide();\n            }\n            track.config.set_value(\"height\", track.visible_height_px);\n            track.changed();\n        }).appendTo(track.container_div);\n    },\n\n    /**\n     * Hide any elements that are part of the tracks contents area. Should\n     * remove as approprite, the track will be redrawn by show_contents.\n     */\n    hide_contents: function hide_contents() {\n        // Hide tiles.\n        this.tiles_div.hide();\n        // Hide any y axis labels (common to several track types)\n        this.container_div.find(\".yaxislabel, .track-resize\").hide();\n    },\n\n    show_contents: function show_contents() {\n        // Show the contents div and labels (if present)\n        this.tiles_div.show();\n        this.container_div.find(\".yaxislabel, .track-resize\").show();\n        // Request a redraw of the content\n        this.request_draw();\n    },\n\n    /**\n     * Returns track type.\n     */\n    get_type: function get_type() {\n        // Order is important: start with most-specific classes and go up the track hierarchy.\n        if (this instanceof LabelTrack) {\n            return \"LabelTrack\";\n        } else if (this instanceof ReferenceTrack) {\n            return \"ReferenceTrack\";\n        } else if (this instanceof LineTrack) {\n            return \"LineTrack\";\n        } else if (this instanceof ReadTrack) {\n            return \"ReadTrack\";\n        } else if (this instanceof VariantTrack) {\n            return \"VariantTrack\";\n        } else if (this instanceof CompositeTrack) {\n            return \"CompositeTrack\";\n        } else if (this instanceof FeatureTrack) {\n            return \"FeatureTrack\";\n        }\n        return \"\";\n    },\n\n    /**\n     * Remove visualization content and display message.\n     */\n    show_message: function show_message(msg_html) {\n        this.tiles_div.remove();\n        return $(\"<span/>\").addClass(\"message\").html(msg_html).appendTo(this.content_div);\n    },\n\n    /**\n     * Initialize and draw the track.\n     */\n    init: function init(retry) {\n        // FIXME: track should have a 'state' attribute that is checked on load; this state attribute should be\n        // used in this function to determine what action(s) to take.\n\n        var track = this;\n        track.enabled = false;\n        track.tile_cache.clear();\n        track.data_manager.clear();\n        /*\n        if (!track.content_div.text()) {\n            track.content_div.text(DATA_LOADING);\n        }\n        */\n        // Remove old track content (e.g. tiles, messages).\n        track.content_div.children().remove();\n        track.container_div.removeClass(\"nodata error pending\");\n\n        track.tiles_div = $(\"<div/>\").addClass(\"tiles\").appendTo(track.content_div);\n\n        //\n        // Tracks with no dataset id are handled differently.\n        // FIXME: is this really necessary?\n        //\n        if (!track.dataset.id) {\n            return;\n        }\n\n        // Get dataset state; if state is fine, enable and draw track. Otherwise, show message\n        // about track status.\n        var init_deferred = $.Deferred();\n\n        var params = {\n            hda_ldda: track.dataset.get(\"hda_ldda\"),\n            data_type: this.dataset_check_type,\n            chrom: track.view.chrom,\n            retry: retry\n        };\n\n        $.getJSON(this.dataset.url(), params, function (result) {\n            if (!result || result === \"error\" || result.kind === \"error\") {\n                // Dataset is in error state.\n                track.container_div.addClass(\"error\");\n                var msg_elt = track.show_message(DATA_ERROR);\n                if (result.message) {\n                    // Add links to (a) show error and (b) try again.\n                    msg_elt.append($(\"<a href='javascript:void(0);'></a>\").text(\"View error\").click(function () {\n                        Galaxy.modal.show({\n                            title: \"Trackster Error\",\n                            body: \"<pre>\" + result.message + \"</pre>\",\n                            buttons: {\n                                Close: function Close() {\n                                    Galaxy.modal.hide();\n                                }\n                            }\n                        });\n                    }));\n                    msg_elt.append($(\"<span/>\").text(\" \"));\n                    msg_elt.append($(\"<a href='javascript:void(0);'></a>\").text(\"Try again\").click(function () {\n                        track.init(true);\n                    }));\n                }\n            } else if (result === \"no converter\") {\n                track.container_div.addClass(\"error\");\n                track.show_message(DATA_NOCONVERTER);\n            } else if (result === \"no data\" || result.data !== undefined && (result.data === null || result.data.length === 0)) {\n                track.container_div.addClass(\"nodata\");\n                track.show_message(DATA_NONE);\n            } else if (result === \"pending\") {\n                track.container_div.addClass(\"pending\");\n                track.show_message(DATA_PENDING);\n                //$(\"<img/>\").attr(\"src\", image_path + \"/yui/rel_interstitial_loading.gif\").appendTo(track.tiles_div);\n                setTimeout(function () {\n                    track.init();\n                }, track.data_query_wait);\n            } else if (result === \"data\" || result.status === \"data\") {\n                if (result.valid_chroms) {\n                    track.valid_chroms = result.valid_chroms;\n                    track.update_icons();\n                }\n                track.tiles_div.text(DATA_OK);\n                if (track.view.chrom) {\n                    track.tiles_div.text(\"\");\n                    track.tiles_div.css(\"height\", track.visible_height_px + \"px\");\n                    track.enabled = true;\n                    // predraw_init may be asynchronous, wait for it and then draw\n                    $.when.apply($, track.predraw_init()).done(function () {\n                        init_deferred.resolve();\n                        track.container_div.removeClass(\"nodata error pending\");\n                        track.request_draw();\n                    });\n                } else {\n                    init_deferred.resolve();\n                }\n            }\n        });\n\n        this.update_icons();\n        return init_deferred;\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function predraw_init() {\n        var track = this;\n        return $.getJSON(track.dataset.url(), {\n            data_type: \"data\",\n            stats: true,\n            chrom: track.view.chrom,\n            low: 0,\n            high: track.view.max_high,\n            hda_ldda: track.dataset.get(\"hda_ldda\")\n        }, function (result) {\n            var data = result.data;\n\n            // Tracks may not have stat data either because there is no data or data is not yet ready.\n            if (data && data.min !== undefined && data.max !== undefined) {\n                // Compute default minimum and maximum values\n                var min_value = data.min;\n\n                var max_value = data.max;\n                // If mean and sd are present, use them to compute a ~95% window\n                // but only if it would shrink the range on one side\n                min_value = Math.floor(Math.min(0, Math.max(min_value, data.mean - 2 * data.sd)));\n                max_value = Math.ceil(Math.max(0, Math.min(max_value, data.mean + 2 * data.sd)));\n                // Update config, prefs\n                track.config.set_default_value(\"min_value\", min_value);\n                track.config.set_default_value(\"max_value\", max_value);\n                track.config.set_value(\"min_value\", min_value);\n                track.config.set_value(\"max_value\", max_value);\n            }\n        });\n    },\n\n    /**\n     * Returns all drawables in this drawable.\n     */\n    get_drawables: function get_drawables() {\n        return this;\n    }\n});\n\nvar TiledTrack = function TiledTrack(view, container, obj_dict) {\n    Track.call(this, view, container, obj_dict);\n\n    var track = this;\n\n    // Make track moveable.\n    moveable(track.container_div, track.drag_handle_class, \".group\", track);\n\n    // Attribute init.\n    this.filters_manager = new _filters2.default.FiltersManager(this, \"filters\" in obj_dict ? obj_dict.filters : null);\n    // HACK: set filters manager for data manager.\n    // FIXME: prolly need function to set filters and update data_manager reference.\n    this.data_manager.set(\"filters_manager\", this.filters_manager);\n    this.filters_available = false;\n    this.tool = obj_dict.tool ? new TracksterTool(_.extend(obj_dict.tool, {\n        track: this,\n        tool_state: obj_dict.tool_state\n    })) : null;\n    this.tile_cache = new _visualization2.default.Cache(TILE_CACHE_SIZE);\n    this.left_offset = 0;\n\n    if (this.header_div) {\n        //\n        // Setup filters.\n        //\n        this.set_filters_manager(this.filters_manager);\n\n        //\n        // Create dynamic tool view.\n        //\n        if (this.tool) {\n            var tool_view = new TracksterToolView({ model: this.tool });\n            tool_view.render();\n            this.dynamic_tool_div = tool_view.$el;\n            this.header_div.after(this.dynamic_tool_div);\n        }\n    }\n\n    // Add tiles_div, overlay_div to content_div.\n    this.tiles_div = $(\"<div/>\").addClass(\"tiles\").appendTo(this.content_div);\n    if (!this.config.get_value(\"content_visible\")) {\n        this.tiles_div.hide();\n    }\n    this.overlay_div = $(\"<div/>\").addClass(\"overlay\").appendTo(this.content_div);\n\n    if (obj_dict.mode) {\n        this.change_mode(obj_dict.mode);\n    }\n};\nextend(TiledTrack.prototype, Drawable.prototype, Track.prototype, {\n    action_icons_def: Track.prototype.action_icons_def.concat([\n    // Show more rows when all features are not slotted.\n    {\n        name: \"show_more_rows_icon\",\n        title: \"To minimize track height, not all feature rows are displayed. Click to display more rows.\",\n        css_class: \"exclamation\",\n        on_click_fn: function on_click_fn(track) {\n            $(\".tooltip\").remove();\n            track.slotters[track.view.resolution_px_b].max_rows *= 2;\n            track.request_draw({ clear_tile_cache: true });\n        },\n        hide: true\n    }]),\n\n    /**\n     * Returns a copy of the track. The copy uses the same data manager so that the tracks can share data.\n     */\n    copy: function copy(container) {\n        // Create copy.\n        var obj_dict = this.to_dict();\n        extend(obj_dict, {\n            data_manager: this.data_manager\n        });\n        var new_track = new this.constructor(this.view, container, obj_dict);\n        // Misc. init and return.\n        new_track.change_mode(this.mode);\n        new_track.enabled = this.enabled;\n        return new_track;\n    },\n\n    /**\n     * Set filters manager + HTML elements.\n     */\n    set_filters_manager: function set_filters_manager(filters_manager) {\n        this.filters_manager = filters_manager;\n        this.header_div.after(this.filters_manager.parent_div);\n    },\n\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: function to_dict() {\n        return {\n            track_type: this.get_type(),\n            dataset: {\n                id: this.dataset.id,\n                hda_ldda: this.dataset.get(\"hda_ldda\")\n            },\n            prefs: this.config.to_key_value_dict(),\n            mode: this.mode,\n            filters: this.filters_manager.to_dict(),\n            tool_state: this.tool ? this.tool.state_dict() : {}\n        };\n    },\n\n    /**\n     * Set track bounds for current chromosome.\n     */\n    set_min_max: function set_min_max() {\n        var track = this;\n\n        return $.getJSON(track.dataset.url(), {\n            data_type: \"data\",\n            stats: true,\n            chrom: track.view.chrom,\n            low: 0,\n            high: track.view.max_high,\n            hda_ldda: track.dataset.get(\"hda_ldda\")\n        }, function (result) {\n            var data = result.data;\n            if (isNaN(parseFloat(track.config.get_value(\"min_value\"))) || isNaN(parseFloat(track.config.get_value(\"max_value\")))) {\n                // Compute default minimum and maximum values\n                var min_value = data.min;\n\n                var max_value = data.max;\n                // If mean and sd are present, use them to compute a ~95% window\n                // but only if it would shrink the range on one side\n                min_value = Math.floor(Math.min(0, Math.max(min_value, data.mean - 2 * data.sd)));\n                max_value = Math.ceil(Math.max(0, Math.min(max_value, data.mean + 2 * data.sd)));\n                // Update the prefs\n                track.config.set_value(\"min_value\", min_value);\n                track.config.set_value(\"max_value\", max_value);\n            }\n        });\n    },\n\n    /**\n     * Change track's mode.\n     */\n    change_mode: function change_mode(new_mode) {\n        var track = this;\n        // TODO: is it necessary to store the mode in two places (.mode and track_config)?\n        track.mode = new_mode;\n        track.config.set_value(\"mode\", new_mode);\n        // FIXME: find a better way to get Auto data w/o clearing cache; using mode in the\n        // data manager would work if Auto data were checked for compatibility when a specific\n        // mode is chosen.\n        if (new_mode === \"Auto\") {\n            this.data_manager.clear();\n        }\n        track.request_draw({ clear_tile_cache: true });\n        this.action_icons.mode_icon.attr(\"title\", \"Set display mode (now: \" + track.mode + \")\");\n        return track;\n    },\n\n    /**\n     * Update track's buttons.\n     */\n    update_icons: function update_icons() {\n        var track = this;\n\n        //\n        // Show/hide filter icon.\n        //\n        track.action_icons.filters_icon.toggle(track.filters_available);\n\n        //\n        // Show/hide tool icons.\n        //\n        track.action_icons.tools_icon.toggle(track.tool !== null);\n        track.action_icons.param_space_viz_icon.toggle(track.tool !== null);\n    },\n\n    /**\n     * Generate a key for the tile cache.\n     * TODO: create a TileCache object (like DataCache) and generate key internally.\n     */\n    _gen_tile_cache_key: function _gen_tile_cache_key(w_scale, tile_region) {\n        return w_scale + \"_\" + tile_region;\n    },\n\n    /**\n     * Request that track be drawn.\n     */\n    request_draw: function request_draw(options) {\n        if (options && options.clear_tile_cache) {\n            this.tile_cache.clear();\n        }\n        this.view.request_redraw(options, this);\n    },\n\n    /**\n     * Actions to be taken before drawing.\n     */\n    before_draw: function before_draw() {\n        // Clear because this is set when drawing.\n        this.max_height_px = 0;\n    },\n\n    /**\n     * Draw track. Options include:\n     * -force: force a redraw rather than use cached tiles (default: false)\n     * -clear_after: clear old tiles after drawing new tiles (default: false)\n     * -data_fetch: fetch data if necessary (default: true)\n     *\n     * NOTE: this function should never be called directly; use request_draw() so that drawing\n     * management can be used.\n     */\n    _draw: function _draw(options) {\n        if (!this.can_draw()) {\n            return;\n        }\n\n        var clear_after = options && options.clear_after;\n        var low = this.view.low;\n        var high = this.view.high;\n        var range = high - low;\n        var width = this.view.container.width();\n        var w_scale = this.view.resolution_px_b;\n        var resolution = 1 / w_scale;\n\n        // For overview, adjust high, low, resolution, and w_scale.\n        if (this.is_overview) {\n            low = this.view.max_low;\n            high = this.view.max_high;\n            w_scale = width / (view.max_high - view.max_low);\n            resolution = 1 / w_scale;\n        }\n\n        this.before_draw();\n\n        //\n        // Method for moving and/or removing tiles:\n        // (a) mark all elements for removal using class 'remove'\n        // (b) during tile drawing/placement, remove class for elements that are moved;\n        //     this occurs in show_tile()\n        // (c) after drawing tiles, remove elements still marked for removal\n        //     (i.e. that still have class 'remove').\n        //\n\n        // Step (a) for (re)moving tiles.\n        this.tiles_div.children().addClass(\"remove\");\n\n        var // Tile width in bases.\n        tile_width = Math.floor(TILE_SIZE * resolution);\n\n        var // Index of first tile that overlaps visible region.\n        tile_index = Math.floor(low / tile_width);\n\n        var tile_region;\n        var tile_promise;\n        var tile_promises = [];\n        var tiles = [];\n        // Draw tiles.\n        while (tile_index * tile_width < high) {\n            // Get tile region.\n            tile_region = new _visualization2.default.GenomeRegion({\n                chrom: this.view.chrom,\n                start: tile_index * tile_width,\n                // Tile high cannot be larger than view.max_high, which the chromosome length.\n                end: Math.min((tile_index + 1) * tile_width, this.view.max_high)\n            });\n            tile_promise = this.draw_helper(tile_region, w_scale, options);\n            tile_promises.push(tile_promise);\n            $.when(tile_promise).then(function (tile) {\n                tiles.push(tile);\n            });\n\n            // Go to next tile.\n            tile_index += 1;\n        }\n\n        // Step (c) for (re)moving tiles when clear_after is false.\n        if (!clear_after) {\n            this.tiles_div.children(\".remove\").removeClass(\"remove\").remove();\n        }\n\n        // When all tiles are drawn, call post-draw actions.\n        var track = this;\n        $.when.apply($, tile_promises).then(function () {\n            // Step (c) for (re)moving tiles when clear_after is true:\n            track.tiles_div.children(\".remove\").remove();\n\n            // Only do postdraw actions for tiles; instances where tiles may not be drawn include:\n            // (a) ReferenceTrack without sufficient resolution;\n            // (b) data_fetch = false.\n            tiles = _.filter(tiles, function (t) {\n                return t !== null;\n            });\n            if (tiles.length !== 0) {\n                track.postdraw_actions(tiles, width, w_scale, clear_after);\n            }\n        });\n    },\n\n    /**\n     * Add a maximum/minimum label to track.\n     */\n    _add_yaxis_label: function _add_yaxis_label(type, on_change) {\n        var track = this;\n        var css_class = type === \"max\" ? \"top\" : \"bottom\";\n        var text = type === \"max\" ? \"max\" : \"min\";\n        var pref_name = type === \"max\" ? \"max_value\" : \"min_value\";\n        var label = this.container_div.find(\".yaxislabel.\" + css_class);\n        var value = round(track.config.get_value(pref_name), 1);\n\n        // Default action for on_change is to redraw track.\n        on_change = on_change || function () {\n            track.request_draw({ clear_tile_cache: true });\n        };\n\n        if (label.length !== 0) {\n            // Label already exists, so update value.\n            label.text(value);\n        } else {\n            // Add label.\n            label = $(\"<div/>\").text(value).make_text_editable({\n                num_cols: 12,\n                on_finish: function on_finish(new_val) {\n                    $(\".tooltip\").remove();\n                    track.config.set_value(pref_name, round(new_val, 1));\n                    on_change();\n                },\n                help_text: \"Set \" + text + \" value\"\n            }).addClass(\"yaxislabel \" + css_class).css(\"color\", this.config.get_value(\"label_color\"));\n            this.container_div.prepend(label);\n        }\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function postdraw_actions(tiles, width, w_scale, clear_after) {\n        var line_track_tiles = _.filter(tiles, function (tile) {\n            return tile instanceof LineTrackTile;\n        });\n\n        //\n        // Take different actions depending on whether there are LineTrack/Coverage tiles.\n        //\n\n        if (line_track_tiles.length > 0) {\n            // -- Drawing in Coverage mode. --\n\n            // Clear because this is set when drawing.\n            this.max_height_px = 0;\n            var track = this;\n            _.each(tiles, function (tile) {\n                if (!(tile instanceof LineTrackTile)) {\n                    tile.html_elt.remove();\n                    track.draw_helper(tile.region, w_scale, {\n                        force: true,\n                        mode: \"Coverage\"\n                    });\n                }\n            });\n\n            track._add_yaxis_label(\"max\");\n        } else {\n            // -- Drawing in non-Coverage mode. --\n\n            // Remove Y-axis labels because there are no line track tiles.\n            this.container_div.find(\".yaxislabel\").remove();\n\n            //\n            // If some tiles have icons, set padding of tiles without icons so features and rows align.\n            //\n            var icons_present = _.find(tiles, function (tile) {\n                return tile.has_icons;\n            });\n\n            if (icons_present) {\n                _.each(tiles, function (tile) {\n                    if (!tile.has_icons) {\n                        // Need to align with other tile(s) that have icons.\n                        tile.html_elt.css(\"padding-top\", ERROR_PADDING);\n                    }\n                });\n            }\n        }\n    },\n\n    /**\n     * Returns appropriate display mode based on data.\n     */\n    get_mode: function get_mode(data) {\n        return this.mode;\n    },\n\n    /**\n     * Update track interface to show display mode being used.\n     */\n    update_auto_mode: function update_auto_mode(display_mode) {\n        // FIXME: needs to be implemented.\n    },\n\n    /**\n     * Returns a list of drawables to draw. Defaults to current track.\n     */\n    _get_drawables: function _get_drawables() {\n        return [this];\n    },\n\n    /**\n     * Retrieves from cache, draws, or sets up drawing for a single tile. Returns either a Tile object or a\n     * jQuery.Deferred object that is fulfilled when tile can be drawn again. Options include:\n     * -force: force a redraw rather than use cached tiles (default: false)\n     * -data_fetch: fetch data if necessary (default: true)\n     */\n    draw_helper: function draw_helper(region, w_scale, options) {\n        // Init options if necessary to avoid having to check if options defined.\n        if (!options) {\n            options = {};\n        }\n\n        var force = options.force;\n        var mode = options.mode || this.mode;\n        var resolution = 1 / w_scale;\n\n        var // Useful vars.\n        track = this;\n\n        var drawables = this._get_drawables();\n        var key = this._gen_tile_cache_key(w_scale, region);\n\n        var is_tile = function is_tile(o) {\n            return o && \"track\" in o;\n        };\n\n        // Check tile cache, if found show existing tile in correct position\n        var tile = force ? undefined : track.tile_cache.get_elt(key);\n        if (tile) {\n            if (is_tile(tile)) {\n                track.show_tile(tile, w_scale);\n            }\n            return tile;\n        }\n\n        // If not fetching data, nothing more to do because data is needed to draw tile.\n        if (options.data_fetch === false) {\n            return null;\n        }\n\n        // Function that returns data/Deferreds needed to draw tile.\n        var get_tile_data = function get_tile_data() {\n            // HACK: if display mode (mode) is in continuous data modes, data mode must be coverage to get coverage data.\n            var data_mode = _.find(CONTINUOUS_DATA_MODES, function (m) {\n                return m === mode;\n            }) ? \"Coverage\" : mode;\n\n            // Map drawable object to data needed for drawing.\n            var tile_data = _.map(drawables, function (d // Get the track data/promise.\n            ) {\n                return d.data_manager.get_data(region, data_mode, resolution, track.data_url_extra_params);\n            });\n\n            // Get reference data/promise.\n            if (view.reference_track) {\n                tile_data.push(view.reference_track.data_manager.get_data(region, mode, resolution, view.reference_track.data_url_extra_params));\n            }\n\n            return tile_data;\n        };\n\n        //\n        // When data is available, draw tile.\n        //\n        var tile_drawn = $.Deferred();\n        track.tile_cache.set_elt(key, tile_drawn);\n        $.when.apply($, get_tile_data()).then(function () {\n            var tile_data = get_tile_data();\n            var tracks_data = tile_data;\n            var seq_data;\n\n            // Deferreds may show up here if trying to fetch a subset of data from a superset data chunk\n            // that cannot be subsetted. This may occur if the superset has a message. If there is a\n            // Deferred, try again from the top. NOTE: this condition could (should?) be handled by the\n            // GenomeDataManager in visualization module.\n            if (_.find(tile_data, function (d) {\n                return _util2.default.is_deferred(d);\n            })) {\n                track.tile_cache.set_elt(key, undefined);\n                $.when(track.draw_helper(region, w_scale, options)).then(function (tile) {\n                    tile_drawn.resolve(tile);\n                });\n                return;\n            }\n\n            // If sequence data is available, subset to get only data in region.\n            if (view.reference_track) {\n                seq_data = view.reference_track.data_manager.subset_entry(tile_data.pop(), region);\n            }\n\n            // Get drawing modes, heights for all tracks.\n            var drawing_modes = [];\n\n            var drawing_heights = [];\n\n            _.each(drawables, function (d, i) {\n                var mode = d.mode;\n                var data = tracks_data[i];\n                if (mode === \"Auto\") {\n                    mode = d.get_mode(data);\n                    d.update_auto_mode(mode);\n                }\n                drawing_modes.push(mode);\n                drawing_heights.push(d.get_canvas_height(data, mode, w_scale, width));\n            });\n\n            var canvas = track.view.canvas_manager.new_canvas();\n            var tile_low = region.get(\"start\");\n            var tile_high = region.get(\"end\");\n            var all_data_index = 0;\n\n            var width = Math.ceil((tile_high - tile_low) * w_scale) + track.left_offset;\n\n            var height = _.max(drawing_heights);\n            var tile;\n\n            //\n            // Draw all tracks on tile.\n            //\n            canvas.width = width;\n            // Height is specified in options or is the height found above.\n            canvas.height = options.height || height;\n            var ctx = canvas.getContext(\"2d\");\n            ctx.translate(track.left_offset, 0);\n            if (drawables.length > 1) {\n                ctx.globalAlpha = 0.5;\n                ctx.globalCompositeOperation = \"source-over\";\n            }\n            _.each(drawables, function (d, i) {\n                tile = d.draw_tile(tracks_data[i], ctx, drawing_modes[i], region, w_scale, seq_data);\n            });\n\n            // Don't cache, show if no tile.\n            if (tile !== undefined) {\n                track.tile_cache.set_elt(key, tile);\n                track.show_tile(tile, w_scale);\n            }\n\n            tile_drawn.resolve(tile);\n        });\n\n        return tile_drawn;\n    },\n\n    /**\n     * Returns canvas height needed to display data; return value is an integer that denotes the\n     * number of pixels required.\n     */\n    get_canvas_height: function get_canvas_height(result, mode, w_scale, canvas_width) {\n        return this.visible_height_px;\n    },\n\n    /**\n     * Draw line (bigwig) data onto tile.\n     */\n    _draw_line_track_tile: function _draw_line_track_tile(result, ctx, mode, region, w_scale) {\n        // Set min/max if they are not already set.\n        // FIXME: checking for different null/undefined/0 is messy; it would be nice to\n        // standardize this.\n        if ([undefined, null].indexOf(this.config.get_value(\"min_value\")) !== -1) {\n            this.config.set_value(\"min_value\", 0);\n        }\n        if ([undefined, null, 0].indexOf(this.config.get_value(\"max_value\")) !== -1) {\n            this.config.set_value(\"max_value\", _.max(_.map(result.data, function (d) {\n                return d[1];\n            })) || 0);\n        }\n\n        var canvas = ctx.canvas;\n\n        var painter = new _painters2.default.LinePainter(result.data, region.get(\"start\"), region.get(\"end\"), this.config.to_key_value_dict(), mode);\n\n        painter.draw(ctx, canvas.width, canvas.height, w_scale);\n\n        return new LineTrackTile(this, region, w_scale, canvas, result.data);\n    },\n\n    /**\n     * Draw a track tile.\n     * @param result result from server\n     * @param ctx canvas context to draw on\n     * @param mode mode to draw in\n     * @param region region to draw on tile\n     * @param w_scale pixels per base\n     * @param ref_seq reference sequence data\n     */\n    draw_tile: function draw_tile(result, ctx, mode, region, w_scale, ref_seq) {},\n\n    /**\n     * Show track tile and perform associated actions. Showing tile may actually move\n     * an existing tile rather than reshowing it.\n     */\n    show_tile: function show_tile(tile, w_scale) {\n        var track = this;\n        var tile_element = tile.html_elt;\n\n        // -- Show/move tile element. --\n\n        tile.predisplay_actions();\n\n        // Position tile element based on current viewport.\n        var left = Math.round((tile.low - (this.is_overview ? this.view.max_low : this.view.low)) * w_scale);\n        if (this.left_offset) {\n            left -= this.left_offset;\n        }\n        tile_element.css(\"left\", left);\n\n        if (tile_element.hasClass(\"remove\")) {\n            // Step (b) for (re)moving tiles. See _draw() function for description of algorithm\n            // for removing tiles.\n            tile_element.removeClass(\"remove\");\n        } else {\n            // Showing new tile.\n            this.tiles_div.append(tile_element);\n        }\n\n        // -- Update track, tile heights based on new tile. --\n\n        tile_element.css(\"height\", \"auto\");\n\n        // Update max height based on current tile's height.\n        // BUG/HACK: tile_element.height() returns a height that is always 2 pixels too big, so\n        // -2 to get the correct height.\n        this.max_height_px = Math.max(this.max_height_px, tile_element.height() - 2);\n\n        // Update height for all tiles based on max height.\n        tile_element.parent().children().css(\"height\", this.max_height_px + \"px\");\n\n        // Update track height based on max height and visible height.\n        var track_height = this.max_height_px;\n        if (this.visible_height_px !== 0) {\n            track_height = Math.min(this.max_height_px, this.visible_height_px);\n        }\n        this.tiles_div.css(\"height\", track_height + \"px\");\n    },\n\n    /**\n     * Utility function that creates a label string describing the region and parameters of a track's tool.\n     */\n    tool_region_and_parameters_str: function tool_region_and_parameters_str(region) {\n        var track = this;\n        var region_str = region !== undefined ? region.toString() : \"all\";\n        var param_str = _.values(track.tool.get_inputs_dict()).join(\", \");\n        return \" - region=[\" + region_str + \"], parameters=[\" + param_str + \"]\";\n    },\n\n    /**\n     * Returns true if data is compatible with a given mode.\n     */\n    data_and_mode_compatible: function data_and_mode_compatible(data, mode) {\n        // Only handle modes that user can set.\n        if (mode === \"Auto\") {\n            return true;\n        } else if (mode === \"Coverage\") {\n            // Histogram mode requires bigwig data.\n            return data.dataset_type === \"bigwig\";\n        } else if (data.dataset_type === \"bigwig\" || data.extra_info === \"no_detail\") {\n            // All other modes--Dense, Squish, Pack--require data + details.\n            return false;\n        } else {\n            return true;\n        }\n    },\n\n    /**\n     * Returns true if entry can be subsetted.\n     */\n    can_subset: function can_subset(entry) {\n        // Do not subset entries with a message or data with no detail.\n        if (entry.message || entry.extra_info === \"no_detail\") {\n            return false;\n        } else if (entry.dataset_type === \"bigwig\") {\n            // Subset only if data is single-bp resolution.\n            return entry.data[1][0] - entry.data[0][0] === 1;\n        }\n\n        return true;\n    },\n\n    /**\n     * Set up track to receive tool data.\n     */\n    init_for_tool_data: function init_for_tool_data() {\n        // Set up track to fetch raw data rather than converted data.\n        this.data_manager.set(\"data_type\", \"raw_data\");\n        this.data_query_wait = 1000;\n        this.dataset_check_type = \"state\";\n\n        // FIXME: this is optional and is disabled for now because it creates\n        // additional converter jobs without a clear benefit because indexing\n        // such a small dataset provides little benefit.\n        //\n        // Set up one-time, post-draw to clear tool execution settings.\n        //\n        /*\n        this.normal_postdraw_actions = this.postdraw_actions;\n        this.postdraw_actions = function(tiles, width, w_scale, clear_after) {\n            var self = this;\n             // Do normal postdraw init.\n            self.normal_postdraw_actions(tiles, width, w_scale, clear_after);\n             // Tool-execution specific post-draw init:\n             // Reset dataset check, wait time.\n            self.dataset_check_type = 'converted_datasets_state';\n            self.data_query_wait = DEFAULT_DATA_QUERY_WAIT;\n             // Reset data URL when dataset indexing has completed/when not pending.\n            var ss_deferred = new util.ServerStateDeferred({\n                url: self.dataset_state_url,\n                url_params: {dataset_id : self.dataset.id, hda_ldda: self.dataset.get('hda_ldda')},\n                interval: self.data_query_wait,\n                // Set up deferred to check dataset state until it is not pending.\n                success_fn: function(result) { return result !== \"pending\"; }\n            });\n            $.when(ss_deferred.go()).then(function() {\n                // Dataset is indexed, so use converted data.\n                self.data_manager.set('data_type', 'data');\n            });\n             // Reset post-draw actions function.\n            self.postdraw_actions = self.normal_postdraw_actions;\n        };\n        */\n    }\n});\n\nvar LabelTrack = function LabelTrack(view, container) {\n    Track.call(this, view, container, {\n        resize: false,\n        header: false\n    });\n    this.container_div.addClass(\"label-track\");\n};\nextend(LabelTrack.prototype, Track.prototype, {\n    init: function init() {\n        // Enable by default because there should always be data when drawing track.\n        this.enabled = true;\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function predraw_init() {},\n\n    _draw: function _draw(options) {\n        var view = this.view;\n        var range = view.high - view.low;\n\n        var tickDistance = Math.floor(Math.pow(10, Math.floor(Math.log(range) / Math.log(10))));\n\n        var position = Math.floor(view.low / tickDistance) * tickDistance;\n        var width = this.view.container.width();\n        var new_div = $(\"<div/>\").addClass(\"label-container\");\n        while (position < view.high) {\n            var screenPosition = Math.floor((position - view.low) / range * width);\n            new_div.append($(\"<div/>\").addClass(\"pos-label\").text(_util2.default.commatize(position)).css({\n                left: screenPosition\n            }));\n            position += tickDistance;\n        }\n        this.content_div.children(\":first\").remove();\n        this.content_div.append(new_div);\n    }\n});\n\n// FIXME: Composite tracks have code for showing composite tracks with line tracks and\n// composite tracks with line + feature tracks. It's probably best if different classes\n// are created for each type of composite track.\n\n/**\n * A tiled track composed of multiple other tracks. Composite tracks only work with\n * bigwig data for now.\n */\nvar CompositeTrack = function CompositeTrack(view, container, obj_dict) {\n    TiledTrack.call(this, view, container, obj_dict);\n\n    // Init drawables; each drawable is a copy so that config/preferences\n    // are independent of each other. Also init left offset.\n    this.drawables = [];\n    if (\"drawables\" in obj_dict) {\n        var drawable;\n        for (var i = 0; i < obj_dict.drawables.length; i++) {\n            drawable = obj_dict.drawables[i];\n            this.drawables[i] = object_from_template(drawable, view, null);\n\n            // Track's left offset is the max of all tracks.\n            if (drawable.left_offset > this.left_offset) {\n                this.left_offset = drawable.left_offset;\n            }\n        }\n        this.enabled = true;\n    }\n\n    // Set all feature tracks to use Coverage mode.\n    _.each(this.drawables, function (d) {\n        if (d instanceof FeatureTrack || d instanceof ReadTrack) {\n            d.change_mode(\"Coverage\");\n        }\n    });\n\n    this.update_icons();\n\n    // HACK: needed for saving object for now. Need to generalize get_type() to all Drawables and use\n    // that for object type.\n    this.obj_type = \"CompositeTrack\";\n};\n\nextend(CompositeTrack.prototype, TiledTrack.prototype, {\n    display_modes: CONTINUOUS_DATA_MODES,\n\n    build_config_params: function build_config_params() {\n        return _.union(Drawable.prototype.config_params, [{\n            key: \"min_value\",\n            label: \"Min Value\",\n            type: \"float\",\n            default_value: undefined\n        }, {\n            key: \"max_value\",\n            label: \"Max Value\",\n            type: \"float\",\n            default_value: undefined\n        }, {\n            key: \"mode\",\n            type: \"string\",\n            default_value: this.mode,\n            hidden: true\n        }, {\n            key: \"height\",\n            type: \"int\",\n            default_value: 30,\n            hidden: true\n        }]);\n    },\n\n    action_icons_def: [\n    // Create composite track from group's tracks.\n    {\n        name: \"composite_icon\",\n        title: \"Show individual tracks\",\n        css_class: \"layers-stack\",\n        on_click_fn: function on_click_fn(track) {\n            $(\".tooltip\").remove();\n            track.show_group();\n        }\n    }].concat(TiledTrack.prototype.action_icons_def),\n\n    // HACK: CompositeTrack should inherit from DrawableCollection as well.\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: DrawableCollection.prototype.to_dict,\n\n    add_drawable: DrawableCollection.prototype.add_drawable,\n\n    unpack_drawables: DrawableCollection.prototype.unpack_drawables,\n\n    config_onchange: function config_onchange() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Action to take during resize.\n     */\n    on_resize: function on_resize() {\n        // Propogate visible height to other tracks.\n        var visible_height = this.visible_height_px;\n        _.each(this.drawables, function (d) {\n            d.visible_height_px = visible_height;\n        });\n        Track.prototype.on_resize.call(this);\n    },\n\n    /**\n     * Change mode for all tracks.\n     */\n    change_mode: function change_mode(new_mode) {\n        TiledTrack.prototype.change_mode.call(this, new_mode);\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i].change_mode(new_mode);\n        }\n    },\n\n    /**\n     * Initialize component tracks and draw composite track when all components are initialized.\n     */\n    init: function init() {\n        // Init components.\n        var init_deferreds = [];\n        for (var i = 0; i < this.drawables.length; i++) {\n            init_deferreds.push(this.drawables[i].init());\n        }\n\n        // Draw composite when all tracks available.\n        var track = this;\n        $.when.apply($, init_deferreds).then(function () {\n            track.enabled = true;\n            track.request_draw();\n        });\n    },\n\n    update_icons: function update_icons() {\n        // For now, hide filters and tool.\n        this.action_icons.filters_icon.hide();\n        this.action_icons.tools_icon.hide();\n        this.action_icons.param_space_viz_icon.hide();\n    },\n\n    can_draw: Drawable.prototype.can_draw,\n\n    _get_drawables: function _get_drawables() {\n        return this.drawables;\n    },\n\n    /**\n     * Replace this track with group that includes individual tracks.\n     */\n    show_group: function show_group() {\n        // Create group with individual tracks.\n        var group = new DrawableGroup(this.view, this.container, {\n            name: this.config.get_value(\"name\")\n        });\n\n        var track;\n        for (var i = 0; i < this.drawables.length; i++) {\n            track = this.drawables[i];\n            track.update_icons();\n            group.add_drawable(track);\n            track.container = group;\n            group.content_div.append(track.container_div);\n        }\n\n        // Replace track with group.\n        var index = this.container.replace_drawable(this, group, true);\n        group.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Actions taken before drawing.\n     */\n    before_draw: function before_draw() {\n        // FIXME: this is needed only if there are feature tracks in the composite track.\n        // TiledTrack.prototype.before_draw.call(this);\n\n        //\n        // Set min, max for tracks to be largest min, max.\n        //\n\n        // Get smallest min, biggest max.\n        var min = _.min(_.map(this.drawables, function (d) {\n            return d.config.get_value(\"min_value\");\n        }));\n\n        var max = _.max(_.map(this.drawables, function (d) {\n            return d.config.get_value(\"max_value\");\n        }));\n\n        this.config.set_value(\"min_value\", min);\n        this.config.set_value(\"max_value\", max);\n\n        // Set all tracks to smallest min, biggest max.\n        _.each(this.drawables, function (d) {\n            d.config.set_value(\"min_value\", min);\n            d.config.set_value(\"max_value\", max);\n        });\n    },\n\n    /**\n     * Update minimum, maximum for component tracks.\n     */\n    update_all_min_max: function update_all_min_max() {\n        var track = this;\n        var min_value = this.config.get_value(\"min_value\");\n        var max_value = this.config.get_value(\"max_value\");\n        _.each(this.drawables, function (d) {\n            d.config.set_value(\"min_value\", min_value);\n            d.config.set_value(\"max_value\", max_value);\n        });\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function postdraw_actions(tiles, width, w_scale, clear_after) {\n        // All tiles must be the same height in order to draw LineTracks, so redraw tiles as needed.\n        var max_height = -1;\n\n        var i;\n        for (i = 0; i < tiles.length; i++) {\n            var height = tiles[i].html_elt.find(\"canvas\").height();\n            if (height > max_height) {\n                max_height = height;\n            }\n        }\n\n        for (i = 0; i < tiles.length; i++) {\n            var tile = tiles[i];\n            if (tile.html_elt.find(\"canvas\").height() !== max_height) {\n                this.draw_helper(tile.region, w_scale, {\n                    force: true,\n                    height: max_height\n                });\n                tile.html_elt.remove();\n            }\n        }\n\n        // Wrap function so that it can be called without object reference.\n        var track = this;\n\n        var t = function t() {\n            track.update_all_min_max();\n        };\n\n        // Add min, max labels.\n        this._add_yaxis_label(\"min\", t);\n        this._add_yaxis_label(\"max\", t);\n    }\n});\n\n/**\n * Displays reference genome data.\n */\nvar ReferenceTrack = function ReferenceTrack(view) {\n    TiledTrack.call(this, view, { content_div: view.top_labeltrack }, { resize: false, header: false });\n\n    // Use offset to ensure that bases at tile edges are drawn.\n    this.left_offset = view.canvas_manager.char_width_px;\n    this.container_div.addClass(\"reference-track\");\n    this.data_url = Galaxy.root + \"api/genomes/\" + this.view.dbkey;\n    this.data_url_extra_params = { reference: true };\n    this.data_manager = new _visualization2.default.GenomeReferenceDataManager({\n        data_url: this.data_url,\n        can_subset: this.can_subset\n    });\n    this.hide_contents();\n};\nextend(ReferenceTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    build_config_params: function build_config_params() {\n        return _.union(Drawable.prototype.config_params, [{\n            key: \"height\",\n            type: \"int\",\n            default_value: 13,\n            hidden: true\n        }]);\n    },\n\n    init: function init() {\n        this.data_manager.clear();\n        // Enable by default because there should always be data when drawing track.\n        this.enabled = true;\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function predraw_init() {},\n\n    can_draw: Drawable.prototype.can_draw,\n\n    /**\n     * Draws and shows tile if reference data can be displayed; otherwise track is hidden.\n     */\n    draw_helper: function draw_helper(region, w_scale, options) {\n        var cur_visible = this.tiles_div.is(\":visible\");\n        var new_visible;\n        var tile = null;\n        if (w_scale > this.view.canvas_manager.char_width_px) {\n            this.tiles_div.show();\n            new_visible = true;\n            tile = TiledTrack.prototype.draw_helper.call(this, region, w_scale, options);\n        } else {\n            new_visible = false;\n            this.tiles_div.hide();\n        }\n\n        // NOTE: viewport resizing conceptually belongs in postdraw_actions(), but currently\n        // postdraw_actions is not called when reference track not shown due to no tiles. If\n        // it is moved to postdraw_actions, resize must be called each time because cannot\n        // easily detect showing/hiding.\n\n        // If showing or hiding reference track, resize viewport.\n        if (cur_visible !== new_visible) {\n            this.view.resize_viewport();\n        }\n\n        return tile;\n    },\n\n    can_subset: function can_subset(entry) {\n        return true;\n    },\n\n    /**\n     * Draw ReferenceTrack tile.\n     */\n    draw_tile: function draw_tile(data, ctx, mode, region, w_scale) {\n        // Try to subset data.\n        var subset = this.data_manager.subset_entry(data, region);\n\n        var seq_data = subset.data;\n\n        // Draw sequence data.\n        var canvas = ctx.canvas;\n        ctx.font = ctx.canvas.manager.default_font;\n        ctx.textAlign = \"center\";\n        for (var c = 0, str_len = seq_data.length; c < str_len; c++) {\n            ctx.fillStyle = this.view.get_base_color(seq_data[c]);\n            ctx.fillText(seq_data[c], Math.floor(c * w_scale), 10);\n        }\n        return new Tile(this, region, w_scale, canvas, subset);\n    }\n});\n\n/**\n * Track displays continuous/numerical data. Track expects position data in 1-based format, i.e. wiggle format.\n */\nvar LineTrack = function LineTrack(view, container, obj_dict) {\n    this.mode = \"Histogram\";\n    TiledTrack.call(this, view, container, obj_dict);\n    // Need left offset for drawing overlap near tile boundaries.\n    this.left_offset = 30;\n\n    // If server has byte-range support, use BBI data manager to read directly from the BBI file.\n    // FIXME: there should be a flag to wait for this check to complete before loading the track.\n    var self = this;\n    $.when(supportsByteRanges(Galaxy.root + \"datasets/\" + this.dataset.id + \"/display\")).then(function (supportsByteRanges) {\n        if (supportsByteRanges) {\n            self.data_manager = new _bbiDataManager2.default.BBIDataManager({\n                dataset: self.dataset\n            });\n        }\n    });\n};\n\nextend(LineTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: CONTINUOUS_DATA_MODES,\n\n    build_config_params: function build_config_params() {\n        return _.union(Drawable.prototype.config_params, [{ key: \"color\", label: \"Color\", type: \"color\" }, {\n            key: \"min_value\",\n            label: \"Min Value\",\n            type: \"float\",\n            default_value: undefined\n        }, {\n            key: \"max_value\",\n            label: \"Max Value\",\n            type: \"float\",\n            default_value: undefined\n        }, {\n            key: \"mode\",\n            type: \"string\",\n            default_value: this.mode,\n            hidden: true\n        }, {\n            key: \"height\",\n            type: \"int\",\n            default_value: 30,\n            hidden: true\n        }]);\n    },\n\n    config_onchange: function config_onchange() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Actions to be taken before drawing.\n     */\n    // FIXME: can the default behavior be used; right now it breaks during resize.\n    before_draw: function before_draw() {},\n\n    /**\n     * Draw track tile.\n     */\n    draw_tile: function draw_tile(result, ctx, mode, region, w_scale) {\n        return this._draw_line_track_tile(result, ctx, mode, region, w_scale);\n    },\n\n    /**\n     * Subset data only if data is at single-base pair resolution.\n     */\n    can_subset: function can_subset(entry) {\n        return entry.data[1][0] - entry.data[0][0] === 1;\n    },\n\n    /**\n     * Add min, max labels.\n     */\n    postdraw_actions: function postdraw_actions(tiles, width, w_scale, clear_after) {\n        // Add min, max labels.\n        this._add_yaxis_label(\"max\");\n        this._add_yaxis_label(\"min\");\n    }\n});\n\n/**\n * Diagonal heatmap for showing interactions data.\n */\nvar DiagonalHeatmapTrack = function DiagonalHeatmapTrack(view, container, obj_dict) {\n    this.mode = \"Heatmap\";\n    TiledTrack.call(this, view, container, obj_dict);\n};\n\nextend(DiagonalHeatmapTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: [\"Heatmap\"],\n\n    build_config_params: function build_config_params() {\n        return _.union(Drawable.prototype.config_params, [{\n            key: \"pos_color\",\n            label: \"Positive Color\",\n            type: \"color\",\n            default_value: \"#FF8C00\"\n        }, {\n            key: \"neg_color\",\n            label: \"Negative Color\",\n            type: \"color\",\n            default_value: \"#4169E1\"\n        }, {\n            key: \"min_value\",\n            label: \"Min Value\",\n            type: \"int\",\n            default_value: undefined\n        }, {\n            key: \"max_value\",\n            label: \"Max Value\",\n            type: \"int\",\n            default_value: undefined\n        }, {\n            key: \"mode\",\n            type: \"string\",\n            default_value: this.mode,\n            hidden: true\n        }, {\n            key: \"height\",\n            type: \"int\",\n            default_value: 500,\n            hidden: true\n        }]);\n    },\n\n    config_onchange: function config_onchange() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function predraw_init() {\n        var track = this;\n        return $.getJSON(track.dataset.url(), {\n            data_type: \"data\",\n            stats: true,\n            chrom: track.view.chrom,\n            low: 0,\n            high: track.view.max_high,\n            hda_ldda: track.dataset.get(\"hda_ldda\")\n        }, function (result) {\n            var data = result.data;\n        });\n    },\n\n    /**\n     * Draw tile.\n     */\n    draw_tile: function draw_tile(result, ctx, mode, region, w_scale) {\n        // Paint onto canvas.\n        var canvas = ctx.canvas;\n\n        var painter = new _painters2.default.DiagonalHeatmapPainter(result.data, region.get(\"start\"), region.get(\"end\"), this.config.to_key_value_dict(), mode);\n\n        painter.draw(ctx, canvas.width, canvas.height, w_scale);\n\n        return new Tile(this, region, w_scale, canvas, result.data);\n    }\n});\n\n/**\n * A track that displays features/regions. Track expects position data in BED format, i.e. 0-based, half-open.\n */\nvar FeatureTrack = function FeatureTrack(view, container, obj_dict) {\n    TiledTrack.call(this, view, container, obj_dict);\n    this.container_div.addClass(\"feature-track\");\n    this.summary_draw_height = 30;\n    this.slotters = {};\n    this.start_end_dct = {};\n    this.left_offset = 200;\n\n    // this.painter = painters.LinkedFeaturePainter;\n    this.set_painter_from_config();\n};\nextend(FeatureTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: [\"Auto\", \"Coverage\", \"Dense\", \"Squish\", \"Pack\"],\n\n    build_config_params: function build_config_params() {\n        return _.union(Drawable.prototype.config_params, [{\n            key: \"block_color\",\n            label: \"Block color\",\n            type: \"color\"\n        }, {\n            key: \"reverse_strand_color\",\n            label: \"Antisense strand color\",\n            type: \"color\"\n        }, {\n            key: \"label_color\",\n            label: \"Label color\",\n            type: \"color\",\n            default_value: \"black\"\n        }, {\n            key: \"show_counts\",\n            label: \"Show summary counts\",\n            type: \"bool\",\n            default_value: true,\n            help: \"Show the number of items in each bin when drawing summary histogram\"\n        }, {\n            key: \"min_value\",\n            label: \"Histogram minimum\",\n            type: \"float\",\n            default_value: undefined,\n            help: \"clear value to set automatically\"\n        }, {\n            key: \"max_value\",\n            label: \"Histogram maximum\",\n            type: \"float\",\n            default_value: undefined,\n            help: \"clear value to set automatically\"\n        }, {\n            key: \"connector_style\",\n            label: \"Connector style\",\n            type: \"select\",\n            default_value: \"fishbones\",\n            options: [{\n                label: \"Line with arrows\",\n                value: \"fishbone\"\n            }, { label: \"Arcs\", value: \"arcs\" }]\n        }, {\n            key: \"mode\",\n            type: \"string\",\n            default_value: this.mode,\n            hidden: true\n        }, {\n            key: \"height\",\n            type: \"int\",\n            default_value: 0,\n            hidden: true\n        }]);\n    },\n\n    config_onchange: function config_onchange() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.set_painter_from_config();\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    set_painter_from_config: function set_painter_from_config() {\n        if (this.config.get_value(\"connector_style\") === \"arcs\") {\n            this.painter = _painters2.default.ArcLinkedFeaturePainter;\n        } else {\n            this.painter = _painters2.default.LinkedFeaturePainter;\n        }\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function postdraw_actions(tiles, width, w_scale, clear_after) {\n        TiledTrack.prototype.postdraw_actions.call(this, tiles, width, w_scale, clear_after);\n\n        var track = this;\n        var i;\n\n        var line_track_tiles = _.filter(tiles, function (t) {\n            return t instanceof LineTrackTile;\n        });\n\n        //\n        // Finish drawing of features that span multiple tiles. Features that span multiple tiles\n        // are labeled incomplete on the tile level because they cannot be completely drawn.\n        //\n        if (line_track_tiles.length === 0) {\n            // Gather incomplete features together.\n            var all_incomplete_features = {};\n            _.each(_.pluck(tiles, \"incomplete_features\"), function (inc_features) {\n                _.each(inc_features, function (feature) {\n                    all_incomplete_features[feature[0]] = feature;\n                });\n            });\n\n            // Draw incomplete features on each tile.\n            var self = this;\n            _.each(tiles, function (tile) {\n                // Remove features already drawn on tile originally.\n                var tile_incomplete_features = _.omit(all_incomplete_features, _.map(tile.incomplete_features, function (f) {\n                    return f[0];\n                }));\n\n                // Remove features already drawn on tile in past postdraw actions.\n                tile_incomplete_features = _.omit(tile_incomplete_features, _.keys(tile.other_tiles_features_drawn));\n\n                // Draw tile's incomplete features.\n                if (_.size(tile_incomplete_features) !== 0) {\n                    // To draw incomplete features, create new canvas, copy original canvas/tile onto new\n                    // canvas, and then draw incomplete features on the new canvas.\n                    var features = {\n                        data: _.values(tile_incomplete_features)\n                    };\n\n                    var new_canvas = self.view.canvas_manager.new_canvas();\n                    var new_canvas_ctx = new_canvas.getContext(\"2d\");\n                    new_canvas.height = Math.max(tile.canvas.height, self.get_canvas_height(features, tile.mode, tile.w_scale, 100));\n                    new_canvas.width = tile.canvas.width;\n                    new_canvas_ctx.drawImage(tile.canvas, 0, 0);\n                    new_canvas_ctx.translate(track.left_offset, 0);\n                    var new_tile = self.draw_tile(features, new_canvas_ctx, tile.mode, tile.region, tile.w_scale, tile.seq_data);\n                    $(tile.canvas).replaceWith($(new_tile.canvas));\n                    tile.canvas = new_canvas;\n                    _.extend(tile.other_tiles_features_drawn, all_incomplete_features);\n                }\n            });\n        }\n\n        // If mode is Coverage and tiles do not share max, redraw tiles as necessary using new max.\n        /*\n        This code isn't used right now because Coverage mode uses predefined max in preferences.\n        if (track.mode === \"Coverage\") {\n            // Get global max.\n            var global_max = -1;\n            for (i = 0; i < tiles.length; i++) {\n                var cur_max = tiles[i].max_val;\n                if (cur_max > global_max) {\n                    global_max = cur_max;\n                }\n            }\n             for (i = 0; i < tiles.length; i++) {\n                var tile = tiles[i];\n                if (tile.max_val !== global_max) {\n                    tile.html_elt.remove();\n                    track.draw_helper(tile.index, w_scale, { more_tile_data: { force: true, max: global_max } } );\n                }\n            }\n        }\n        */\n\n        //\n        // Update filter attributes, UI.\n        //\n\n        // Update filtering UI.\n        if (track.filters_manager) {\n            var filters = track.filters_manager.filters;\n            var f;\n            for (f = 0; f < filters.length; f++) {\n                filters[f].update_ui_elt();\n            }\n\n            // Determine if filters are available; this is based on the tiles' data.\n            // Criteria for filter to be available: (a) it is applicable to tile data and (b) filter min != filter max.\n            var filters_available = false;\n\n            var example_feature;\n            var filter;\n            for (i = 0; i < tiles.length; i++) {\n                if (tiles[i].data.length) {\n                    example_feature = tiles[i].data[0];\n                    for (f = 0; f < filters.length; f++) {\n                        filter = filters[f];\n                        if (filter.applies_to(example_feature) && filter.min !== filter.max) {\n                            filters_available = true;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // If filter availability changed, hide filter div if necessary and update menu.\n            if (track.filters_available !== filters_available) {\n                track.filters_available = filters_available;\n                if (!track.filters_available) {\n                    track.filters_manager.hide();\n                }\n                track.update_icons();\n            }\n        }\n\n        //\n        // If not all features slotted, show icon for showing more rows (slots).\n        //\n        if (tiles[0] instanceof FeatureTrackTile) {\n            var all_slotted = true;\n            for (i = 0; i < tiles.length; i++) {\n                if (!tiles[i].all_slotted) {\n                    all_slotted = false;\n                    break;\n                }\n            }\n            this.action_icons.show_more_rows_icon.toggle(!all_slotted);\n        } else {\n            this.action_icons.show_more_rows_icon.hide();\n        }\n    },\n\n    /**\n     * Update track interface to show display mode being used.\n     */\n    update_auto_mode: function update_auto_mode(mode) {\n        if (this.mode === \"Auto\") {\n            if (mode === \"no_detail\") {\n                mode = \"feature spans\";\n            }\n            this.action_icons.mode_icon.attr(\"title\", \"Set display mode (now: Auto/\" + mode + \")\");\n        }\n    },\n\n    /**\n     * Place features in slots for drawing (i.e. pack features).\n     * this.slotters[level] is created in this method. this.slotters[level]\n     * is a Slotter object. Returns the number of slots used to pack features.\n     */\n    incremental_slots: function incremental_slots(level, features, mode) {\n        // Get/create incremental slots for level. If display mode changed,\n        // need to create new slots.\n\n        var dummy_context = this.view.canvas_manager.dummy_context;\n\n        var slotter = this.slotters[level];\n        if (!slotter || slotter.mode !== mode) {\n            slotter = new _slotting2.default.FeatureSlotter(level, mode, MAX_FEATURE_DEPTH, function (x) {\n                return dummy_context.measureText(x);\n            });\n            this.slotters[level] = slotter;\n        }\n\n        return slotter.slot_features(features);\n    },\n\n    /**\n     * Returns appropriate display mode based on data.\n     */\n    get_mode: function get_mode(data) {\n        var mode;\n        // HACK: use no_detail mode track is in overview to prevent overview from being too large.\n        if (data.extra_info === \"no_detail\" || this.is_overview) {\n            mode = \"no_detail\";\n        } else {\n            // Choose b/t Squish and Pack.\n            // Proxy measures for using Squish:\n            // (a) error message re: limiting number of features shown;\n            // (b) X number of features shown;\n            // (c) size of view shown.\n            // TODO: cannot use (a) and (b) because it requires coordinating mode across tiles;\n            // fix this so that tiles are redrawn as necessary to use the same mode.\n            //if ( (result.message && result.message.match(/^Only the first [\\d]+/)) ||\n            //     (result.data && result.data.length > 2000) ||\n            //var data = result.data;\n            // if ( (data.length && data.length < 4) ||\n            //      (this.view.high - this.view.low > MIN_SQUISH_VIEW_WIDTH) ) {\n            if (this.view.high - this.view.low > MIN_SQUISH_VIEW_WIDTH) {\n                mode = \"Squish\";\n            } else {\n                mode = \"Pack\";\n            }\n        }\n        return mode;\n    },\n\n    /**\n     * Returns canvas height needed to display data; return value is an integer that denotes the\n     * number of pixels required.\n     */\n    get_canvas_height: function get_canvas_height(result, mode, w_scale, canvas_width) {\n        if (mode === \"Coverage\" || result.dataset_type === \"bigwig\") {\n            return this.summary_draw_height;\n        } else {\n            // All other modes require slotting.\n            var rows_required = this.incremental_slots(w_scale, result.data, mode);\n            // HACK: use dummy painter to get required height. Painter should be extended so that get_required_height\n            // works as a static function.\n            var dummy_painter = new this.painter(null, null, null, this.config.to_key_value_dict(), mode);\n            return Math.max(this.min_height_px, dummy_painter.get_required_height(rows_required, canvas_width));\n        }\n    },\n\n    /**\n     * Draw FeatureTrack tile.\n     * @param result result from server\n     * @param cxt canvas context to draw on\n     * @param mode mode to draw in\n     * @param region region to draw on tile\n     * @param w_scale pixels per base\n     * @param ref_seq reference sequence data\n     * @param cur_tile true if drawing is occurring on a currently visible tile.\n     */\n    draw_tile: function draw_tile(result, ctx, mode, region, w_scale, ref_seq, cur_tile) {\n        var track = this;\n        var canvas = ctx.canvas;\n        var tile_low = region.get(\"start\");\n        var tile_high = region.get(\"end\");\n        var left_offset = this.left_offset;\n\n        // If data is line track data, draw line track tile.\n        if (result.dataset_type === \"bigwig\") {\n            return this._draw_line_track_tile(result, ctx, mode, region, w_scale);\n        }\n\n        // Handle row-by-row tracks\n\n        // Preprocessing: filter features and determine whether all unfiltered features have been slotted.\n        var filtered = [];\n\n        var slots = this.slotters[w_scale].slots;\n        var all_slotted = true;\n        if (result.data) {\n            var filters = this.filters_manager.filters;\n            for (var i = 0, len = result.data.length; i < len; i++) {\n                var feature = result.data[i];\n                var hide_feature = false;\n                var filter;\n                for (var f = 0, flen = filters.length; f < flen; f++) {\n                    filter = filters[f];\n                    filter.update_attrs(feature);\n                    if (!filter.keep(feature)) {\n                        hide_feature = true;\n                        break;\n                    }\n                }\n                if (!hide_feature) {\n                    // Feature visible.\n                    filtered.push(feature);\n                    // Set flag if not slotted.\n                    if (!(feature[0] in slots)) {\n                        all_slotted = false;\n                    }\n                }\n            }\n        }\n\n        // Create painter.\n        var filter_alpha_scaler = this.filters_manager.alpha_filter ? new FilterScaler(this.filters_manager.alpha_filter) : null;\n\n        var filter_height_scaler = this.filters_manager.height_filter ? new FilterScaler(this.filters_manager.height_filter) : null;\n\n        var painter = new this.painter(filtered, tile_low, tile_high, this.config.to_key_value_dict(), mode, filter_alpha_scaler, filter_height_scaler,\n        // HACK: ref_seq only be defined for ReadTracks, and only the ReadPainter accepts that argument\n        ref_seq, function (b) {\n            return track.view.get_base_color(b);\n        });\n\n        var feature_mapper = null;\n\n        ctx.fillStyle = this.config.get_value(\"block_color\");\n        ctx.font = ctx.canvas.manager.default_font;\n        ctx.textAlign = \"right\";\n\n        if (result.data) {\n            // Draw features.\n            var draw_results = painter.draw(ctx, canvas.width, canvas.height, w_scale, slots);\n            feature_mapper = draw_results.feature_mapper;\n            incomplete_features = draw_results.incomplete_features;\n            feature_mapper.translation = -left_offset;\n        }\n\n        // If not drawing on current tile, create new tile.\n        if (!cur_tile) {\n            return new FeatureTrackTile(track, region, w_scale, canvas, result.data, mode, result.message, all_slotted, feature_mapper, incomplete_features, ref_seq);\n        }\n    }\n});\n\n/**\n * Displays variant data.\n */\nvar VariantTrack = function VariantTrack(view, container, obj_dict) {\n    TiledTrack.call(this, view, container, obj_dict);\n    this.painter = _painters2.default.VariantPainter;\n    this.summary_draw_height = 30;\n\n    // Maximum resolution is ~45 pixels/base, so use this size left offset to ensure that full\n    // variant is drawn when variant is at start of tile.\n    this.left_offset = 30;\n};\n\nextend(VariantTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: [\"Auto\", \"Coverage\", \"Dense\", \"Squish\", \"Pack\"],\n\n    build_config_params: function build_config_params() {\n        return _.union(Drawable.prototype.config_params, [{\n            key: \"color\",\n            label: \"Histogram color\",\n            type: \"color\"\n        }, {\n            key: \"show_sample_data\",\n            label: \"Show sample data\",\n            type: \"bool\",\n            default_value: true\n        }, {\n            key: \"show_labels\",\n            label: \"Show summary and sample labels\",\n            type: \"bool\",\n            default_value: true\n        }, {\n            key: \"summary_height\",\n            label: \"Locus summary height\",\n            type: \"float\",\n            default_value: 20\n        }, {\n            key: \"mode\",\n            type: \"string\",\n            default_value: this.mode,\n            hidden: true\n        }, {\n            key: \"height\",\n            type: \"int\",\n            default_value: 0,\n            hidden: true\n        }]);\n    },\n\n    config_onchange: function config_onchange() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Draw tile.\n     */\n    draw_tile: function draw_tile(result, ctx, mode, region, w_scale) {\n        // Data could be coverage data or variant data.\n        if (result.dataset_type === \"bigwig\") {\n            return this._draw_line_track_tile(result, ctx, \"Histogram\", region, w_scale);\n        } else {\n            // result.dataset_type === 'variant'\n            var view = this.view;\n\n            var painter = new this.painter(result.data, region.get(\"start\"), region.get(\"end\"), this.config.to_key_value_dict(), mode, function (b) {\n                return view.get_base_color(b);\n            });\n\n            painter.draw(ctx, ctx.canvas.width, ctx.canvas.height, w_scale);\n            return new Tile(this, region, w_scale, ctx.canvas, result.data);\n        }\n    },\n\n    /**\n     * Returns canvas height needed to display data; return value is an integer that denotes the\n     * number of pixels required.\n     */\n    get_canvas_height: function get_canvas_height(result, mode, w_scale, canvas_width) {\n        if (result.dataset_type === \"bigwig\") {\n            return this.summary_draw_height;\n        } else {\n            // HACK: sample_names is not be defined when dataset definition is fetched before\n            // dataset is complete (as is done when running tools). In that case, fall back on\n            // # of samples in data. This can be fixed by re-requesting dataset definition\n            // in init.\n            var num_samples = this.dataset.get_metadata(\"sample_names\") ? this.dataset.get_metadata(\"sample_names\").length : 0;\n            if (num_samples === 0 && result.data.length !== 0) {\n                // Sample data is separated by commas, so this computes # of samples:\n                num_samples = result.data[0][7].match(/,/g);\n                if (num_samples === null) {\n                    num_samples = 1;\n                } else {\n                    num_samples = num_samples.length + 1;\n                }\n            }\n\n            var dummy_painter = new this.painter(null, null, null, this.config.to_key_value_dict(), mode);\n            return dummy_painter.get_required_height(num_samples);\n        }\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function predraw_init() {\n        var deferreds = [Track.prototype.predraw_init.call(this)];\n        // FIXME: updating dataset metadata is only needed for visual analysis. Can\n        // this be moved somewhere else?\n        if (!this.dataset.get_metadata(\"sample_names\")) {\n            deferreds.push(this.dataset.fetch());\n        }\n        return deferreds;\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function postdraw_actions(tiles, width, w_scale, clear_after) {\n        TiledTrack.prototype.postdraw_actions.call(this, tiles, width, w_scale, clear_after);\n\n        var line_track_tiles = _.filter(tiles, function (t) {\n            return t instanceof LineTrackTile;\n        });\n\n        // Add summary/sample labels if needed and not already included.\n        var sample_names = this.dataset.get_metadata(\"sample_names\");\n        if (line_track_tiles.length === 0 && this.config.get_value(\"show_labels\") && sample_names && sample_names.length > 1) {\n            var font_size;\n\n            // Add and/or style labels.\n            if (this.container_div.find(\".yaxislabel.variant\").length === 0) {\n                // Add summary and sample labels.\n\n                // Add summary label to middle of summary area.\n                font_size = this.config.get_value(\"summary_height\") / 2;\n                this.tiles_div.prepend($(\"<div/>\").text(\"Summary\").addClass(\"yaxislabel variant top\").css({\n                    \"font-size\": font_size + \"px\",\n                    top: (this.config.get_value(\"summary_height\") - font_size) / 2 + \"px\"\n                }));\n\n                // Show sample labels.\n                if (this.config.get_value(\"show_sample_data\")) {\n                    var samples_div_html = sample_names.join(\"<br/>\");\n\n                    this.tiles_div.prepend($(\"<div/>\").html(samples_div_html).addClass(\"yaxislabel variant top sample\").css({\n                        top: this.config.get_value(\"summary_height\")\n                    }));\n                }\n            }\n\n            // Style labels.\n\n            // Match sample font size to mode.\n            font_size = (this.mode === \"Squish\" ? 5 : 10) + \"px\";\n            $(this.tiles_div).find(\".sample\").css({\n                \"font-size\": font_size,\n                \"line-height\": font_size\n            });\n            // Color labels to preference color.\n            $(this.tiles_div).find(\".yaxislabel\").css(\"color\", this.config.get_value(\"label_color\"));\n        } else {\n            // Remove all labels.\n            this.container_div.find(\".yaxislabel.variant\").remove();\n        }\n    }\n});\n\n/**\n * Track that displays mapped reads. Track expects position data in 1-based, closed format, i.e. SAM/BAM format.\n */\nvar ReadTrack = function ReadTrack(view, container, obj_dict) {\n    FeatureTrack.call(this, view, container, obj_dict);\n    this.painter = _painters2.default.ReadPainter;\n    this.update_icons();\n};\n\nextend(ReadTrack.prototype, Drawable.prototype, TiledTrack.prototype, FeatureTrack.prototype, {\n    build_config_params: function build_config_params() {\n        return _.union(Drawable.prototype.config_params, [{\n            key: \"block_color\",\n            label: \"Histogram color\",\n            type: \"color\"\n        }, {\n            key: \"detail_block_color\",\n            label: \"Sense strand block color\",\n            type: \"color\",\n            default_value: \"#AAAAAA\"\n        }, {\n            key: \"reverse_strand_color\",\n            label: \"Antisense strand block color\",\n            type: \"color\",\n            default_value: \"#DDDDDD\"\n        }, {\n            key: \"label_color\",\n            label: \"Label color\",\n            type: \"color\",\n            default_value: \"black\"\n        }, {\n            key: \"show_insertions\",\n            label: \"Show insertions\",\n            type: \"bool\",\n            default_value: false\n        }, {\n            key: \"show_differences\",\n            label: \"Show differences only\",\n            type: \"bool\",\n            default_value: true\n        }, {\n            key: \"show_counts\",\n            label: \"Show summary counts\",\n            type: \"bool\",\n            default_value: true\n        }, {\n            key: \"mode\",\n            type: \"string\",\n            default_value: this.mode,\n            hidden: true\n        }, {\n            key: \"min_value\",\n            label: \"Histogram minimum\",\n            type: \"float\",\n            default_value: undefined,\n            help: \"clear value to set automatically\"\n        }, {\n            key: \"max_value\",\n            label: \"Histogram maximum\",\n            type: \"float\",\n            default_value: undefined,\n            help: \"clear value to set automatically\"\n        }, {\n            key: \"height\",\n            type: \"int\",\n            default_value: 0,\n            hidden: true\n        }]);\n    },\n\n    config_onchange: function config_onchange() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    }\n});\n\n/**\n * Objects that can be added to a view.\n */\nvar addable_objects = {\n    CompositeTrack: CompositeTrack,\n    DrawableGroup: DrawableGroup,\n    DiagonalHeatmapTrack: DiagonalHeatmapTrack,\n    FeatureTrack: FeatureTrack,\n    LineTrack: LineTrack,\n    ReadTrack: ReadTrack,\n    VariantTrack: VariantTrack,\n    // For backward compatibility, map vcf track to variant.\n    VcfTrack: VariantTrack\n};\n\n/**\n * Create new object from a template. A template can be either an object dictionary or an\n * object itself.\n */\nvar object_from_template = function object_from_template(template, view, container) {\n    if (\"copy\" in template) {\n        // Template is an object.\n        return template.copy(container);\n    } else {\n        // Template is a dictionary.\n        var drawable_type = template.obj_type;\n        // For backward compatibility:\n        if (!drawable_type) {\n            drawable_type = template.track_type;\n        }\n        return new addable_objects[drawable_type](view, container, template);\n    }\n};\n\nexports.default = {\n    TracksterView: TracksterView,\n    DrawableGroup: DrawableGroup,\n    LineTrack: LineTrack,\n    FeatureTrack: FeatureTrack,\n    DiagonalHeatmapTrack: DiagonalHeatmapTrack,\n    ReadTrack: ReadTrack,\n    VariantTrack: VariantTrack,\n    CompositeTrack: CompositeTrack,\n    object_from_template: object_from_template\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * View for track/group header.\n */\nvar TrackHeaderView = Backbone.View.extend({\n    className: \"track-header\",\n\n    initialize: function initialize() {\n        // Watch and update name changes.\n        this.model.config.get(\"name\").on(\"change:value\", this.update_name, this);\n        this.render();\n    },\n\n    render: function render() {\n        this.$el.append($(\"<div/>\").addClass(this.model.drag_handle_class));\n        this.$el.append($(\"<div/>\").addClass(\"track-name\").text(this.model.config.get_value(\"name\")));\n\n        // Icons container.\n        this.action_icons = {};\n        this.render_action_icons();\n\n        // Suppress double clicks in header so that they do not impact viz under header.\n        this.$el.dblclick(function (e) {\n            e.stopPropagation();\n        });\n\n        // Needed for floating elts in header.\n        this.$el.append($(\"<div style='clear: both'/>\"));\n    },\n\n    update_name: function update_name() {\n        this.$el.find(\".track-name\").text(this.model.config.get_value(\"name\"));\n    },\n\n    render_action_icons: function render_action_icons() {\n        var self = this;\n        this.icons_div = $(\"<div/>\").addClass(\"track-icons\").hide().appendTo(this.$el);\n        _.each(this.model.action_icons_def, function (icon_dict) {\n            self.add_action_icon(icon_dict.name, icon_dict.title, icon_dict.css_class, icon_dict.on_click_fn, icon_dict.prepend, icon_dict.hide);\n        });\n\n        // Set up behavior for modes popup.\n        this.set_display_modes(this.model.display_modes);\n    },\n\n    /**\n     * Add an action icon to this object. Appends icon unless prepend flag is specified.\n     */\n    add_action_icon: function add_action_icon(name, title, css_class, on_click_fn, prepend, hide) {\n        var self = this;\n        this.action_icons[name] = $(\"<a/>\").attr(\"title\", title).addClass(\"icon-button\").addClass(css_class).tooltip().click(function () {\n            on_click_fn(self.model);\n        }).appendTo(this.icons_div);\n        if (hide) {\n            this.action_icons[name].hide();\n        }\n    },\n\n    /**\n     * Set track's modes and update mode icon popup.\n     */\n    set_display_modes: function set_display_modes(new_modes, init_mode) {\n        if (!new_modes) {\n            return;\n        }\n\n        // HACK: move this out of view and into track.\n\n        // Set modes, init mode.\n        this.model.display_modes = new_modes;\n        this.model.mode = init_mode || this.model.config.get_value(\"mode\") || this.model.display_modes[0];\n\n        this.action_icons.mode_icon.attr(\"title\", \"Set display mode (now: \" + this.mode + \")\");\n\n        // Setup popup menu for changing modes.\n        var self = this;\n\n        var track = this.model;\n        var mode_mapping = {};\n        for (var i = 0, len = track.display_modes.length; i < len; i++) {\n            var mode = track.display_modes[i];\n            mode_mapping[mode] = function (mode) {\n                return function () {\n                    track.change_mode(mode);\n                    // HACK: the popup menu messes with the track's hover event, so manually show/hide\n                    // icons div for now.\n                    //self.icons_div.show();\n                    //track.container_div.mouseleave(function() { track.icons_div.hide(); } );\n                };\n            }(mode);\n        }\n\n        make_popupmenu(this.action_icons.mode_icon, mode_mapping);\n    }\n});\n\nexports.default = {\n    TrackHeaderView: TrackHeaderView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar extend = _.extend;\n\n// HACK: LABEL_SPACING is currently duplicated between here and painters\nvar LABEL_SPACING = 2;\n\nvar PACK_SPACING = 5;\n\n/**\n * Hold slotting information for a feature.\n */\nvar SlottedInfo = function SlottedInfo(slot, feature) {\n    this.slot = slot;\n    this.feature = feature;\n};\n\n/**\n * FeatureSlotter determines slots in which to draw features for vertical\n * packing.\n *\n * This implementation is incremental, any feature assigned a slot will be\n * retained for slotting future features.\n */\nvar FeatureSlotter = function FeatureSlotter(w_scale, mode, max_rows, measureText) {\n    this.slots = {};\n    this.start_end_dct = {};\n    this.w_scale = w_scale;\n    this.mode = mode;\n    this.include_label = mode === \"Pack\";\n    this.max_rows = max_rows;\n    this.measureText = measureText;\n};\n\n/**\n * Slot a set of features, `this.slots` will be updated with slots by id, and\n * the largest slot required for the passed set of features is returned\n */\nextend(FeatureSlotter.prototype, {\n    /**\n     * Get drawing coordinate for a feature.\n     */\n    _get_draw_coords: function _get_draw_coords(feature) {\n        // Get initial draw coordinates using w_scale.\n        var draw_start = Math.floor(feature[1] * this.w_scale);\n\n        var draw_end = Math.ceil(feature[2] * this.w_scale);\n        var f_name = feature[3];\n        var text_align;\n\n        // Update start, end drawing locations to include feature name.\n        // Try to put the name on the left, if not, put on right.\n        if (f_name !== undefined && this.include_label) {\n            // Add gap for label spacing and extra pack space padding\n            // TODO: Fix constants\n            var text_len = this.measureText(f_name).width + (LABEL_SPACING + PACK_SPACING);\n            if (draw_start - text_len >= 0) {\n                draw_start -= text_len;\n                text_align = \"left\";\n            } else {\n                draw_end += text_len;\n                text_align = \"right\";\n            }\n        }\n\n        /*\n        if (slot_num < 0) {\n            \n            TODO: this is not yet working --\n            console.log(feature_uid, \"looking for slot with text on the right\");\n            // Slot not found. If text was on left, try on right and see\n            // if slot can be found.\n            // TODO: are there any checks we need to do to ensure that text\n            // will fit on tile?\n            if (text_align === \"left\") {\n                draw_start -= text_len;\n                draw_end -= text_len;\n                text_align = \"right\";\n                slot_num = find_slot(draw_start, draw_end);\n            }\n            if (slot_num >= 0) {\n                console.log(feature_uid, \"found slot with text on the right\");\n            }\n         }\n        */\n\n        return [draw_start, draw_end];\n    },\n\n    /**\n     * Find the first slot such that current feature doesn't overlap any other features in that slot.\n     * Returns -1 if no slot was found.\n     */\n    _find_slot: function _find_slot(draw_coords) {\n        // TODO: Use a data structure for faster searching of available slots.\n        var draw_start = draw_coords[0];\n\n        var draw_end = draw_coords[1];\n        for (var slot_num = 0; slot_num <= this.max_rows; slot_num++) {\n            var has_overlap = false;\n            var slot = this.start_end_dct[slot_num];\n            if (slot !== undefined) {\n                // Iterate through features already in slot to see if current feature will fit.\n                for (var k = 0, k_len = slot.length; k < k_len; k++) {\n                    var s_e = slot[k];\n                    if (draw_end > s_e[0] && draw_start < s_e[1]) {\n                        // There is overlap\n                        has_overlap = true;\n                        break;\n                    }\n                }\n            }\n            if (!has_overlap) {\n                return slot_num;\n            }\n        }\n        return -1;\n    },\n\n    /**\n     * Slot features.\n     */\n    slot_features: function slot_features(features) {\n        var start_end_dct = this.start_end_dct;\n        var undone = [];\n        var highest_slot = 0;\n        var feature;\n        var feature_uid;\n\n        // Loop through features to (a) find those that are not yet slotted and (b) update\n        // those that are slotted if new information is availabe. For (a), features already\n        // slotted (based on slotting from other tiles) will retain their current slot.\n        for (var i = 0, len = features.length; i < len; i++) {\n            feature = features[i];\n            feature_uid = feature[0];\n            var slotted_info = this.slots[feature_uid];\n\n            // Separate and handle slotted vs. unslotted features.\n            if (slotted_info) {\n                // Feature is slotted; if feature now has larger start/end coordinates,\n                // update drawing coordinates.\n                if (feature[1] < slotted_info.feature[1] || slotted_info.feature[2] < feature[2]) {\n                    // Feature has changed (e.g. a single read now has its pair), so recalculate its\n                    // drawing coordinates.\n                    var old_draw_coords = this._get_draw_coords(slotted_info.feature);\n\n                    var new_draw_coords = this._get_draw_coords(feature);\n                    var slotted_coords = this.start_end_dct[slotted_info.slot];\n                    for (var k = 0; k < slotted_coords.length; k++) {\n                        var dc = slotted_coords[k];\n                        if (dc[0] === old_draw_coords[0] && dc[1] === old_draw_coords[1]) {\n                            // Replace old drawing coordinates with new ones.\n                            slotted_coords[k] = new_draw_coords;\n                        }\n                    }\n                }\n                highest_slot = Math.max(highest_slot, this.slots[feature_uid].slot);\n            } else {\n                undone.push(i);\n            }\n        }\n\n        // Slot unslotted features.\n\n        // Do slotting.\n        for (var i = 0, len = undone.length; i < len; i++) {\n            feature = features[undone[i]];\n            feature_uid = feature[0];\n            var draw_coords = this._get_draw_coords(feature);\n\n            // Find slot.\n            var slot_num = this._find_slot(draw_coords);\n\n            // Do slotting.\n            if (slot_num >= 0) {\n                // Add current feature to slot.\n                if (start_end_dct[slot_num] === undefined) {\n                    start_end_dct[slot_num] = [];\n                }\n                start_end_dct[slot_num].push(draw_coords);\n                this.slots[feature_uid] = new SlottedInfo(slot_num, feature);\n                highest_slot = Math.max(highest_slot, slot_num);\n            }\n        }\n\n        // Debugging: view slots data.\n        /*\n        for (var i = 0; i < MAX_FEATURE_DEPTH; i++) {\n            var slot = start_end_dct[i];\n            if (slot !== undefined) {\n                console.log(i, \"*************\");\n                for (var k = 0, k_len = slot.length; k < k_len; k++) {\n                    console.log(\"\\t\", slot[k][0], slot[k][1]);\n                }\n            }\n        }\n        */\n        return highest_slot + 1;\n    }\n});\n\nexports.default = {\n    FeatureSlotter: FeatureSlotter\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Compute the type of overlap between two regions. They are assumed to be on the same chrom/contig.\n * The overlap is computed relative to the second region; hence, OVERLAP_START indicates that the first\n * region overlaps the start (but not the end) of the second region.\n * NOTE: Coordinates are assumed to be in BED format: half open (start is closed, end is open).\n */\nvar BEFORE = 1001;\n\nvar CONTAINS = 1002;\nvar OVERLAP_START = 1003;\nvar OVERLAP_END = 1004;\nvar CONTAINED_BY = 1005;\nvar AFTER = 1006;\nvar compute_overlap = function compute_overlap(first_region, second_region) {\n    var first_start = first_region[0];\n    var first_end = first_region[1];\n    var second_start = second_region[0];\n    var second_end = second_region[1];\n    var overlap;\n    if (first_start < second_start) {\n        if (first_end <= second_start) {\n            overlap = BEFORE;\n        } else if (first_end <= second_end) {\n            overlap = OVERLAP_START;\n        } else {\n            // first_end > second_end\n            overlap = CONTAINS;\n        }\n    } else {\n        // first_start >= second_start\n        if (first_start > second_end) {\n            overlap = AFTER;\n        } else if (first_end <= second_end) {\n            overlap = CONTAINED_BY;\n        } else {\n            overlap = OVERLAP_END;\n        }\n    }\n\n    return overlap;\n};\n\n/**\n * Returns true if regions overlap.\n */\nvar is_overlap = function is_overlap(first_region, second_region) {\n    var overlap = compute_overlap(first_region, second_region);\n    return overlap !== BEFORE && overlap !== AFTER;\n};\n\n/**\n * Draw a dashed line on a canvas using filled rectangles. This function is based on:\n * http://vetruvet.blogspot.com/2010/10/drawing-dashed-lines-on-html5-canvas.html\n * However, that approach uses lines, which don't seem to render as well, so use\n * rectangles instead.\n */\nvar dashedLine = function dashedLine(ctx, x1, y1, x2, y2, dashLen) {\n    if (dashLen === undefined) {\n        dashLen = 4;\n    }\n    var dX = x2 - x1;\n    var dY = y2 - y1;\n    var dashes = Math.floor(Math.sqrt(dX * dX + dY * dY) / dashLen);\n    var dashX = dX / dashes;\n    var dashY = dY / dashes;\n    var q;\n\n    for (q = 0; q < dashes; q++, x1 += dashX, y1 += dashY) {\n        if (q % 2 !== 0) {\n            continue;\n        }\n        ctx.fillRect(x1, y1, dashLen, 1);\n    }\n};\n\n/**\n * Draw an isosceles triangle that points down.\n */\nvar drawDownwardEquilateralTriangle = function drawDownwardEquilateralTriangle(ctx, down_vertex_x, down_vertex_y, side_len) {\n    // Compute other two points of triangle.\n    var x1 = down_vertex_x - side_len / 2;\n\n    var x2 = down_vertex_x + side_len / 2;\n    var y = down_vertex_y - Math.sqrt(side_len * 3 / 2);\n\n    // Draw and fill.\n    ctx.beginPath();\n    ctx.moveTo(x1, y);\n    ctx.lineTo(x2, y);\n    ctx.lineTo(down_vertex_x, down_vertex_y);\n    ctx.lineTo(x1, y);\n\n    ctx.strokeStyle = this.fillStyle;\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n};\n\n/**\n * Base class for all scalers. Scalers produce values that are used to change (scale) drawing attributes.\n */\nvar Scaler = function Scaler(default_val) {\n    this.default_val = default_val ? default_val : 1;\n};\n\n/**\n * Produce a scaling value.\n */\nScaler.prototype.gen_val = function (input) {\n    return this.default_val;\n};\n\n/**\n * Results from painter.draw()\n */\nvar DrawResults = function DrawResults(options) {\n    this.incomplete_features = options.incomplete_features;\n    this.feature_mapper = options.feature_mapper;\n};\n\n/**\n * Base class for painters\n *\n * -- Mode and prefs are both optional\n */\nvar Painter = function Painter(data, view_start, view_end, prefs, mode) {\n    // Data and data properties\n    this.data = data;\n    // View\n    this.view_start = view_start;\n    this.view_end = view_end;\n    // Drawing prefs\n    this.prefs = _.extend({}, this.default_prefs, prefs);\n    this.mode = mode;\n};\n\nPainter.prototype.default_prefs = {};\n\n/**\n * Draw on the context using a rectangle of width x height using scale w_scale.\n */\nPainter.prototype.draw = function (ctx, width, height, w_scale) {};\n\n/**\n * Get starting drawing position, which is offset a half-base left of coordinate.\n */\nPainter.prototype.get_start_draw_pos = function (chrom_pos, w_scale) {\n    return this._chrom_pos_to_draw_pos(chrom_pos, w_scale, -0.5);\n};\n\n/**\n * Get end drawing position, which is offset a half-base right of coordinate.\n */\nPainter.prototype.get_end_draw_pos = function (chrom_pos, w_scale) {\n    return this._chrom_pos_to_draw_pos(chrom_pos, w_scale, 0.5);\n};\n\n/**\n * Get drawing position.\n */\nPainter.prototype.get_draw_pos = function (chrom_pos, w_scale) {\n    return this._chrom_pos_to_draw_pos(chrom_pos, w_scale, 0);\n};\n\n/**\n * Convert chromosome position to drawing position.\n */\nPainter.prototype._chrom_pos_to_draw_pos = function (chrom_pos, w_scale, offset) {\n    return Math.floor(w_scale * (Math.max(0, chrom_pos - this.view_start) + offset));\n};\n\nvar LinePainter = function LinePainter(data, view_start, view_end, prefs, mode) {\n    Painter.call(this, data, view_start, view_end, prefs, mode);\n};\n\nLinePainter.prototype.default_prefs = {\n    min_value: undefined,\n    max_value: undefined,\n    mode: \"Histogram\",\n    color: \"#000\",\n    overflow_color: \"#F66\"\n};\n\nLinePainter.prototype.draw = function (ctx, width, height, w_scale) {\n    var in_path = false;\n    var min_value = this.prefs.min_value;\n    var max_value = this.prefs.max_value;\n    var vertical_range = max_value - min_value;\n    var height_px = height;\n    var view_start = this.view_start;\n    var mode = this.mode;\n    var data = this.data;\n\n    ctx.save();\n\n    // Pixel position of 0 on the y axis\n    var y_zero = Math.round(height + min_value / vertical_range * height);\n\n    // Horizontal line to denote x-axis\n    if (mode !== \"Intensity\") {\n        ctx.fillStyle = \"#aaa\";\n        ctx.fillRect(0, y_zero, width, 1);\n    }\n\n    ctx.beginPath();\n    var x_scaled;\n    var y;\n    var delta_x_pxs;\n    if (data.length > 1) {\n        delta_x_pxs = _.map(data.slice(0, -1), function (d, i) {\n            return Math.ceil((data[i + 1][0] - data[i][0]) * w_scale);\n        });\n    } else {\n        delta_x_pxs = [10];\n    }\n\n    // Painter color can be in either block_color (FeatureTrack) or color pref (LineTrack).\n    var painter_color = this.prefs.block_color || this.prefs.color;\n\n    var // Extract RGB from preference color.\n    pref_color = parseInt(painter_color.slice(1), 16);\n\n    var pref_r = (pref_color & 0xff0000) >> 16;\n    var pref_g = (pref_color & 0x00ff00) >> 8;\n    var pref_b = pref_color & 0x0000ff;\n    var top_overflow = false;\n    var bot_overflow = false;\n\n    // Paint track.\n    var delta_x_px;\n    for (var i = 0, len = data.length; i < len; i++) {\n        // Reset attributes for next point.\n        ctx.fillStyle = ctx.strokeStyle = painter_color;\n        top_overflow = bot_overflow = false;\n        delta_x_px = delta_x_pxs[i];\n\n        x_scaled = Math.floor((data[i][0] - view_start - 0.5) * w_scale);\n        y = data[i][1];\n\n        // Process Y (scaler) value.\n        if (y === null) {\n            if (in_path && mode === \"Filled\") {\n                ctx.lineTo(x_scaled, height_px);\n            }\n            in_path = false;\n            continue;\n        }\n\n        // Bound Y value by min, max.\n        if (y < min_value) {\n            bot_overflow = true;\n            y = min_value;\n        } else if (y > max_value) {\n            top_overflow = true;\n            y = max_value;\n        }\n\n        // Draw point.\n        if (mode === \"Histogram\") {\n            // y becomes the bar height in pixels, which is the negated for canvas coords\n            y = Math.round(y / vertical_range * height_px);\n            ctx.fillRect(x_scaled, y_zero, delta_x_px, -y);\n        } else if (mode === \"Intensity\") {\n            var saturation = (y - min_value) / vertical_range;\n\n            var // Range is [pref_color, 255] where saturation = 0 --> 255 and saturation = 1 --> pref color\n            new_r = Math.round(pref_r + (255 - pref_r) * (1 - saturation));\n\n            var new_g = Math.round(pref_g + (255 - pref_g) * (1 - saturation));\n            var new_b = Math.round(pref_b + (255 - pref_b) * (1 - saturation));\n            ctx.fillStyle = \"rgb(\" + new_r + \",\" + new_g + \",\" + new_b + \")\";\n            ctx.fillRect(x_scaled, 0, delta_x_px, height_px);\n        } else {\n            // mode is Coverage/Line or Filled.\n\n            // Scale Y value.\n            y = Math.round(height_px - (y - min_value) / vertical_range * height_px);\n            if (in_path) {\n                ctx.lineTo(x_scaled, y);\n            } else {\n                in_path = true;\n                if (mode === \"Filled\") {\n                    ctx.moveTo(x_scaled, height_px);\n                    ctx.lineTo(x_scaled, y);\n                } else {\n                    ctx.moveTo(x_scaled, y);\n                    // Use this approach (note: same as for filled) to draw line from 0 to\n                    // first data point.\n                    //ctx.moveTo(x_scaled, height_px);\n                    //ctx.lineTo(x_scaled, y);\n                }\n            }\n        }\n\n        // Draw lines at boundaries if overflowing min or max\n        ctx.fillStyle = this.prefs.overflow_color;\n        if (top_overflow || bot_overflow) {\n            var overflow_x;\n            if (mode === \"Histogram\" || mode === \"Intensity\") {\n                overflow_x = delta_x_px;\n            } else {\n                // Line and Filled, which are points\n                x_scaled -= 2; // Move it over to the left so it's centered on the point\n                overflow_x = 4;\n            }\n            if (top_overflow) {\n                ctx.fillRect(x_scaled, 0, overflow_x, 3);\n            }\n            if (bot_overflow) {\n                ctx.fillRect(x_scaled, height_px - 3, overflow_x, 3);\n            }\n        }\n        ctx.fillStyle = painter_color;\n    }\n    if (mode === \"Filled\") {\n        if (in_path) {\n            ctx.lineTo(x_scaled, y_zero);\n            ctx.lineTo(0, y_zero);\n        }\n        ctx.fill();\n    } else {\n        ctx.stroke();\n    }\n\n    ctx.restore();\n};\n\n/**\n * Mapper that contains information about feature locations and data.\n */\nvar FeaturePositionMapper = function FeaturePositionMapper(slot_height) {\n    this.feature_positions = {};\n    this.slot_height = slot_height;\n    this.translation = 0;\n    this.y_translation = 0;\n};\n\n/**\n * Map feature data to a position defined by <slot, x_start, x_end>.\n */\nFeaturePositionMapper.prototype.map_feature_data = function (feature_data, slot, x_start, x_end) {\n    if (!this.feature_positions[slot]) {\n        this.feature_positions[slot] = [];\n    }\n    this.feature_positions[slot].push({\n        data: feature_data,\n        x_start: x_start,\n        x_end: x_end\n    });\n};\n\n/**\n * Get feature data for position <x, y>\n */\nFeaturePositionMapper.prototype.get_feature_data = function (x, y) {\n    // Find slot using Y.\n    var slot = Math.floor((y - this.y_translation) / this.slot_height);\n\n    var feature_dict;\n\n    // May not be over a slot due to padding, margin, etc.\n    if (!this.feature_positions[slot]) {\n        return null;\n    }\n\n    // Find feature using X.\n    x += this.translation;\n    for (var i = 0; i < this.feature_positions[slot].length; i++) {\n        feature_dict = this.feature_positions[slot][i];\n        if (x >= feature_dict.x_start && x <= feature_dict.x_end) {\n            return feature_dict.data;\n        }\n    }\n};\n\n/**\n * Abstract object for painting feature tracks. Subclasses must implement draw_element() for painting to work.\n * Painter uses a 0-based, half-open coordinate system; start coordinate is closed--included--and the end is open.\n * This coordinate system matches the BED format.\n */\nvar FeaturePainter = function FeaturePainter(data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler) {\n    Painter.call(this, data, view_start, view_end, prefs, mode);\n    this.alpha_scaler = alpha_scaler ? alpha_scaler : new Scaler();\n    this.height_scaler = height_scaler ? height_scaler : new Scaler();\n    this.max_label_length = 200;\n};\n\nFeaturePainter.prototype.default_prefs = {\n    block_color: \"#FFF\",\n    connector_color: \"#FFF\"\n};\n\n_.extend(FeaturePainter.prototype, {\n    get_required_height: function get_required_height(rows_required, width) {\n        // y_scale is the height per row\n        var required_height = this.get_row_height();\n\n        var y_scale = required_height;\n        var mode = this.mode;\n        // If using a packing mode, need to multiply by the number of slots used\n        if (mode === \"no_detail\" || mode === \"Squish\" || mode === \"Pack\") {\n            required_height = rows_required * y_scale;\n        }\n        return required_height + this.get_top_padding(width);\n    },\n\n    /** Extra padding before first row of features */\n    get_top_padding: function get_top_padding(width) {\n        return 0;\n    },\n\n    /**\n     * Draw data on ctx using slots and within the rectangle defined by width and height. Returns\n     * a FeaturePositionMapper object with information about where features were drawn.\n     */\n    draw: function draw(ctx, width, height, w_scale, slots) {\n        var data = this.data;\n        var view_start = this.view_start;\n        var view_end = this.view_end;\n\n        ctx.save();\n\n        ctx.fillStyle = this.prefs.block_color;\n        ctx.textAlign = \"right\";\n\n        var y_scale = this.get_row_height();\n        var feature_mapper = new FeaturePositionMapper(y_scale);\n        var x_draw_coords;\n        var incomplete_features = [];\n\n        for (var i = 0, len = data.length; i < len; i++) {\n            var feature = data[i];\n            var feature_uid = feature[0];\n            var feature_start = feature[1];\n            var feature_end = feature[2];\n\n            var // Slot valid only if features are slotted and this feature is slotted;\n            // feature may not be due to lack of space.\n            slot = slots && slots[feature_uid] !== undefined ? slots[feature_uid].slot : null;\n\n            // Draw feature if (a) mode is dense or feature is slotted (as it must be for all non-dense modes) and\n            // (b) there's overlap between the feature and drawing region.\n            if ((this.mode === \"Dense\" || slot !== null) && feature_start < view_end && feature_end > view_start) {\n                x_draw_coords = this.draw_element(ctx, this.mode, feature, slot, view_start, view_end, w_scale, y_scale, width);\n                feature_mapper.map_feature_data(feature, slot, x_draw_coords[0], x_draw_coords[1]);\n\n                // Add to incomplete features if it's not drawn completely in region.\n                if (feature_start < view_start || feature_end > view_end) {\n                    incomplete_features.push(feature);\n                }\n            }\n        }\n\n        ctx.restore();\n\n        feature_mapper.y_translation = this.get_top_padding(width);\n        return new DrawResults({\n            incomplete_features: incomplete_features,\n            feature_mapper: feature_mapper\n        });\n    },\n\n    /**\n     * Abstract function for drawing an individual feature.\n     */\n    draw_element: function draw_element(ctx, mode, feature, slot, tile_low, tile_high, w_scale, y_scale, width) {\n        return [0, 0];\n    }\n});\n\n// Constants specific to feature tracks moved here (HACKING, these should\n// basically all be configuration options)\nvar DENSE_TRACK_HEIGHT = 10;\n\nvar NO_DETAIL_TRACK_HEIGHT = 3;\nvar SQUISH_TRACK_HEIGHT = 5;\nvar PACK_TRACK_HEIGHT = 10;\nvar NO_DETAIL_FEATURE_HEIGHT = 1;\nvar DENSE_FEATURE_HEIGHT = 9;\nvar SQUISH_FEATURE_HEIGHT = 3;\nvar PACK_FEATURE_HEIGHT = 9;\nvar LABEL_SPACING = 2;\nvar CONNECTOR_COLOR = \"#ccc\";\n\nvar LinkedFeaturePainter = function LinkedFeaturePainter(data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler) {\n    FeaturePainter.call(this, data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler);\n    // Whether to draw a single connector in the background that spans the entire feature (the intron fishbone)\n    this.draw_background_connector = true;\n    // Whether to call draw_connector for every pair of blocks\n    this.draw_individual_connectors = false;\n};\n\n_.extend(LinkedFeaturePainter.prototype, FeaturePainter.prototype, {\n    /**\n     * Height of a single row, depends on mode\n     */\n    get_row_height: function get_row_height() {\n        var mode = this.mode;\n        var height;\n        if (mode === \"Dense\") {\n            height = DENSE_TRACK_HEIGHT;\n        } else if (mode === \"no_detail\") {\n            height = NO_DETAIL_TRACK_HEIGHT;\n        } else if (mode === \"Squish\") {\n            height = SQUISH_TRACK_HEIGHT;\n        } else {\n            // mode === \"Pack\"\n            height = PACK_TRACK_HEIGHT;\n        }\n        return height;\n    },\n\n    /**\n     * Draw a feature. Returns an array with feature's start and end X coordinates.\n     */\n    draw_element: function draw_element(ctx, mode, feature, slot, tile_low, tile_high, w_scale, y_scale, width) {\n        var feature_uid = feature[0];\n        var feature_start = feature[1];\n        var feature_end = feature[2];\n        var feature_name = feature[3];\n        var feature_strand = feature[4];\n\n        var // -0.5 to offset region between bases.\n        f_start = Math.floor(Math.max(0, (feature_start - tile_low - 0.5) * w_scale));\n\n        var f_end = Math.ceil(Math.min(width, Math.max(0, (feature_end - tile_low - 0.5) * w_scale)));\n\n        var draw_start = f_start;\n        var draw_end = f_end;\n\n        var y_start = (mode === \"Dense\" ? 0 : 0 + slot) * y_scale + this.get_top_padding(width);\n\n        var thickness;\n        var y_start;\n        var thick_start = null;\n        var thick_end = null;\n\n        var // TODO: is there any reason why block, label color cannot be set at the Painter level?\n        // For now, assume '.' === '+'\n        block_color = !feature_strand || feature_strand === \"+\" || feature_strand === \".\" ? this.prefs.block_color : this.prefs.reverse_strand_color;\n\n        var label_color = this.prefs.label_color;\n\n        // Set global alpha.\n        ctx.globalAlpha = this.alpha_scaler.gen_val(feature);\n\n        // In dense mode, put all data in top slot.\n        if (mode === \"Dense\") {\n            slot = 1;\n        }\n\n        if (mode === \"no_detail\") {\n            // No details for feature, so only one way to display.\n            ctx.fillStyle = block_color;\n            ctx.fillRect(f_start, y_start + 5, f_end - f_start, NO_DETAIL_FEATURE_HEIGHT);\n        } else {\n            // Mode is either Squish or Pack:\n            // Feature details.\n            var feature_ts = feature[5];\n\n            var feature_te = feature[6];\n            var feature_blocks = feature[7];\n\n            var // Whether we are drawing full height or squished features\n            full_height = true;\n\n            if (feature_ts && feature_te) {\n                thick_start = Math.floor(Math.max(0, (feature_ts - tile_low) * w_scale));\n                thick_end = Math.ceil(Math.min(width, Math.max(0, (feature_te - tile_low) * w_scale)));\n            }\n\n            // Set vars that depend on mode.\n            var thin_height;\n\n            var thick_height;\n            if (mode === \"Squish\") {\n                thin_height = 1;\n                thick_height = SQUISH_FEATURE_HEIGHT;\n                full_height = false;\n            } else if (mode === \"Dense\") {\n                thin_height = 5;\n                thick_height = DENSE_FEATURE_HEIGHT;\n            } else {\n                // mode === \"Pack\"\n                thin_height = 5;\n                thick_height = PACK_FEATURE_HEIGHT;\n            }\n\n            // Draw feature/feature blocks + connectors.\n            if (!feature_blocks) {\n                // If there are no blocks, treat the feature as one big exon.\n                ctx.fillStyle = block_color;\n                ctx.fillRect(f_start, y_start + 1, f_end - f_start, thick_height);\n                // If strand is specified, draw arrows over feature\n                if (feature_strand && full_height) {\n                    if (feature_strand === \"+\") {\n                        ctx.fillStyle = ctx.canvas.manager.get_pattern(\"right_strand_inv\");\n                    } else if (feature_strand === \"-\") {\n                        ctx.fillStyle = ctx.canvas.manager.get_pattern(\"left_strand_inv\");\n                    }\n                    ctx.fillRect(f_start, y_start + 1, f_end - f_start, thick_height);\n                }\n            } else {\n                //\n                // There are feature blocks and mode is either Squish or Pack.\n                //\n                // Approach: (a) draw whole feature as connector/intron and (b) draw blocks as\n                // needed. This ensures that whole feature, regardless of whether it starts with\n                // a block, is visible.\n                //\n\n                // Compute y axis start position and height\n                var cur_y_start;\n\n                var cur_height;\n                if (mode === \"Squish\" || mode === \"Dense\") {\n                    cur_y_start = y_start + Math.floor(SQUISH_FEATURE_HEIGHT / 2) + 1;\n                    cur_height = 1;\n                } else {\n                    // mode === \"Pack\"\n                    if (feature_strand) {\n                        cur_y_start = y_start;\n                        cur_height = thick_height;\n                    } else {\n                        cur_y_start += SQUISH_FEATURE_HEIGHT / 2 + 1;\n                        cur_height = 1;\n                    }\n                }\n\n                // Draw whole feature as connector/intron.\n                if (this.draw_background_connector) {\n                    if (mode === \"Squish\" || mode === \"Dense\") {\n                        ctx.fillStyle = CONNECTOR_COLOR;\n                    } else {\n                        // mode === \"Pack\"\n                        if (feature_strand) {\n                            if (feature_strand === \"+\") {\n                                ctx.fillStyle = ctx.canvas.manager.get_pattern(\"right_strand\");\n                            } else if (feature_strand === \"-\") {\n                                ctx.fillStyle = ctx.canvas.manager.get_pattern(\"left_strand\");\n                            }\n                        } else {\n                            ctx.fillStyle = CONNECTOR_COLOR;\n                        }\n                    }\n                    ctx.fillRect(f_start, cur_y_start, f_end - f_start, cur_height);\n                }\n\n                // Draw blocks.\n                var start_and_height;\n                for (var k = 0, k_len = feature_blocks.length; k < k_len; k++) {\n                    var block = feature_blocks[k];\n\n                    var // -0.5 to offset block between bases.\n                    block_start = Math.floor(Math.max(0, (block[0] - tile_low - 0.5) * w_scale));\n\n                    var block_end = Math.ceil(Math.min(width, Math.max((block[1] - tile_low - 0.5) * w_scale)));\n\n                    var last_block_start;\n                    var last_block_end;\n\n                    // Skip drawing if block not on tile.\n                    if (block_start > block_end) {\n                        continue;\n                    }\n\n                    // Draw thin block.\n                    ctx.fillStyle = block_color;\n                    ctx.fillRect(block_start, y_start + (thick_height - thin_height) / 2 + 1, block_end - block_start, thin_height);\n\n                    // If block intersects with thick region, draw block as thick.\n                    // - No thick is sometimes encoded as thick_start == thick_end, so don't draw in that case\n                    if (thick_start !== undefined && feature_te > feature_ts && !(block_start > thick_end || block_end < thick_start)) {\n                        var block_thick_start = Math.max(block_start, thick_start);\n\n                        var block_thick_end = Math.min(block_end, thick_end);\n                        ctx.fillRect(block_thick_start, y_start + 1, block_thick_end - block_thick_start, thick_height);\n                        if (feature_blocks.length === 1 && mode === \"Pack\") {\n                            // Exactly one block means we have no introns, but do have a distinct \"thick\" region,\n                            // draw arrows over it if in pack mode.\n                            if (feature_strand === \"+\") {\n                                ctx.fillStyle = ctx.canvas.manager.get_pattern(\"right_strand_inv\");\n                            } else if (feature_strand === \"-\") {\n                                ctx.fillStyle = ctx.canvas.manager.get_pattern(\"left_strand_inv\");\n                            }\n                            // If region is wide enough in pixels, pad a bit\n                            if (block_thick_start + 14 < block_thick_end) {\n                                block_thick_start += 2;\n                                block_thick_end -= 2;\n                            }\n                            ctx.fillRect(block_thick_start, y_start + 1, block_thick_end - block_thick_start, thick_height);\n                        }\n                    }\n                    // Draw individual connectors if required\n                    if (this.draw_individual_connectors && last_block_start) {\n                        this.draw_connector(ctx, last_block_start, last_block_end, block_start, block_end, y_start);\n                    }\n                    last_block_start = block_start;\n                    last_block_end = block_end;\n                }\n\n                // FIXME: Height scaling only works in Pack mode right now.\n                if (mode === \"Pack\") {\n                    // Reset alpha so height scaling is not impacted by alpha scaling.\n                    ctx.globalAlpha = 1;\n\n                    // Height scaling: draw white lines to reduce height according to height scale factor.\n                    ctx.fillStyle = \"white\"; // TODO: set this to background color.\n                    var hscale_factor = this.height_scaler.gen_val(feature);\n\n                    var // Ceil ensures that min height is >= 1.\n                    new_height = Math.ceil(thick_height * hscale_factor);\n\n                    var ws_height = Math.round((thick_height - new_height) / 2);\n                    if (hscale_factor !== 1) {\n                        ctx.fillRect(f_start, cur_y_start + 1, f_end - f_start, ws_height);\n                        ctx.fillRect(f_start, cur_y_start + thick_height - ws_height + 1, f_end - f_start, ws_height);\n                    }\n                }\n            }\n\n            // Reset alpha so that label is not transparent.\n            ctx.globalAlpha = 1;\n\n            // Draw label for Pack mode.\n            if (feature_name && mode === \"Pack\" && feature_start > tile_low) {\n                ctx.fillStyle = label_color;\n                // FIXME: assumption here that the entire view starts at 0\n                if (tile_low === 0 && f_start - ctx.measureText(feature_name).width < 0) {\n                    ctx.textAlign = \"left\";\n                    ctx.fillText(feature_name, f_end + LABEL_SPACING, y_start + 8, this.max_label_length);\n                    draw_end += ctx.measureText(feature_name).width + LABEL_SPACING;\n                } else {\n                    ctx.textAlign = \"right\";\n                    ctx.fillText(feature_name, f_start - LABEL_SPACING, y_start + 8, this.max_label_length);\n                    draw_start -= ctx.measureText(feature_name).width + LABEL_SPACING;\n                }\n                //ctx.fillStyle = block_color;\n            }\n        }\n\n        // Reset global alpha.\n        ctx.globalAlpha = 1;\n\n        return [draw_start, draw_end];\n    }\n});\n\nvar ReadPainter = function ReadPainter(data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler, ref_seq, base_color_fn) {\n    FeaturePainter.call(this, data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler);\n    this.ref_seq = ref_seq ? ref_seq.data : null;\n    this.base_color_fn = base_color_fn;\n};\n\n_.extend(ReadPainter.prototype, FeaturePainter.prototype, {\n    /**\n     * Returns height based on mode.\n     */\n    get_row_height: function get_row_height() {\n        var height;\n        var mode = this.mode;\n        if (mode === \"Dense\") {\n            height = DENSE_TRACK_HEIGHT;\n        } else if (mode === \"Squish\") {\n            height = SQUISH_TRACK_HEIGHT;\n        } else {\n            // mode === \"Pack\"\n            height = PACK_TRACK_HEIGHT;\n            if (this.prefs.show_insertions) {\n                height *= 2;\n            }\n        }\n        return height;\n    },\n\n    /**\n     * Parse CIGAR string to get (a) a list of contiguous drawing blocks (MD=X) and\n     * (b) an array of [ op_index, op_len ] pairs where op_index is an index into the\n     * string 'MIDNSHP=X' Return value is a dictionary with two entries, blocks and cigar\n     */\n    _parse_cigar: function _parse_cigar(cigar_str) {\n        var cigar_ops = \"MIDNSHP=X\";\n\n        // Parse cigar.\n        var blocks = [[0, 0]];\n\n        var cur_block = blocks[0];\n        var base_pos = 0;\n\n        var // Parse cigar operations out and update/create blocks as needed.\n        parsed_cigar = _.map(cigar_str.match(/[0-9]+[MIDNSHP=X]/g), function (op) {\n            // Get operation length, character.\n            var op_len = parseInt(op.slice(0, -1), 10),\n                op_char = op.slice(-1);\n\n            // Update drawing block.\n            if (op_char === \"N\") {\n                // At skip, so need to start new block if current block represents\n                // drawing area.\n                if (cur_block[1] !== 0) {\n                    cur_block = [base_pos + op_len, base_pos + op_len];\n                    blocks.push(cur_block);\n                }\n            } else if (\"ISHP\".indexOf(op_char) === -1) {\n                // Operation is M,D,=,X.\n                cur_block[1] += op_len;\n                base_pos += op_len;\n            }\n\n            // Return parsed cigar.\n            return [cigar_ops.indexOf(op_char), op_len];\n        });\n\n        return {\n            blocks: blocks,\n            cigar: parsed_cigar\n        };\n    },\n\n    /**\n     * Draw a single read from reference-based read sequence and cigar.\n     */\n    draw_read: function draw_read(ctx, mode, w_scale, y_start, tile_low, tile_high, feature_start, cigar, strand, read_seq) {\n        // Helper function to update base and sequnence offsets.\n        var update_base_offset = function update_base_offset(offset, cig_op, cig_len) {\n            if (\"M=NXD\".indexOf(cig_op) !== -1) {\n                offset += cig_len;\n            }\n            return offset;\n        };\n\n        var update_seq_offset = function update_seq_offset(offset, cig_op, cig_len) {\n            if (\"IX\".indexOf(cig_op) !== -1) {\n                offset += cig_len;\n            }\n            return offset;\n        };\n\n        var // Gets drawing coordinate for a sequence coordinate. Assumes closure variables w_scale and tile_low.\n        get_draw_coord = function get_draw_coord(sequence_coord // -0.5 to offset sequence between bases.\n        ) {\n            return Math.floor(Math.max(0, (sequence_coord - tile_low - 0.5) * w_scale));\n        };\n\n        ctx.textAlign = \"center\";\n        var tile_region = [tile_low, tile_high];\n        var base_offset = 0;\n        var seq_offset = 0;\n        var gap = Math.round(w_scale / 2);\n        var char_width_px = ctx.canvas.manager.char_width_px;\n\n        var block_color = strand === \"+\" ? this.prefs.detail_block_color : this.prefs.reverse_strand_color;\n\n        var pack_mode = mode === \"Pack\";\n\n        var draw_height = pack_mode ? PACK_FEATURE_HEIGHT : SQUISH_FEATURE_HEIGHT;\n\n        var rect_y = y_start + 1;\n        var paint_utils = new ReadPainterUtils(ctx, draw_height, w_scale, mode);\n        var drawing_blocks = [];\n        var s_start;\n        var s_end;\n\n        // Keep list of items that need to be drawn on top of initial drawing layer.\n        var draw_last = [];\n\n        // Parse cigar and get drawing blocks.\n        var t = this._parse_cigar(cigar);\n        cigar = t.cigar;\n        drawing_blocks = t.blocks;\n\n        // Draw blocks.\n        for (var i = 0; i < drawing_blocks.length; i++) {\n            var block = drawing_blocks[i];\n\n            if (is_overlap([feature_start + block[0], feature_start + block[1]], tile_region)) {\n                s_start = get_draw_coord(feature_start + block[0]);\n                s_end = get_draw_coord(feature_start + block[1]);\n\n                // Make sure that block is drawn even if it too small to be rendered officially; in this case,\n                // read is drawn at 1px.\n                // TODO: need to ensure that s_start, s_end are calculated the same for both slotting\n                // and drawing.\n                if (s_start === s_end) {\n                    s_end += 1;\n                }\n\n                // Draw read base as rectangle.\n                ctx.fillStyle = block_color;\n                ctx.fillRect(s_start, rect_y, s_end - s_start, draw_height);\n            }\n        }\n\n        // Draw read features.\n        for (var cig_id = 0, len = cigar.length; cig_id < len; cig_id++) {\n            var cig = cigar[cig_id];\n            var cig_op = \"MIDNSHP=X\"[cig[0]];\n            var cig_len = cig[1];\n\n            var seq_start = feature_start + base_offset;\n            s_start = get_draw_coord(seq_start);\n            s_end = get_draw_coord(seq_start + cig_len);\n\n            // Skip feature if it's not in tile.\n            if (!is_overlap([seq_start, seq_start + cig_len], tile_region)) {\n                // Update offsets.\n                base_offset = update_base_offset(base_offset, cig_op, cig_len);\n                seq_offset = update_seq_offset(seq_offset, cig_op, cig_len);\n                continue;\n            }\n\n            // Make sure that read is drawn even if it too small to be rendered officially; in this case,\n            // read is drawn at 1px.\n            // TODO: need to ensure that s_start, s_end are calculated the same for both slotting\n            // and drawing.\n            if (s_start === s_end) {\n                s_end += 1;\n            }\n\n            // Draw read feature.\n            switch (cig_op) {\n                case \"H\": // Hard clipping.\n                case \"S\": // Soft clipping.\n                case \"P\":\n                    // Padding.\n                    // Sequence not present and not related to alignment; do nothing.\n                    break;\n                case \"M\":\n                    // \"Match\".\n                    // Because it's not known whether there is a match, ignore.\n                    base_offset += cig_len;\n                    break;\n                case \"=\": // Match with reference.\n                case \"X\":\n                    // Mismatch with reference.\n                    //\n                    // Draw sequence and/or variants.\n                    //\n\n                    // Get sequence to draw.\n                    var cur_seq = \"\";\n                    if (cig_op === \"X\") {\n                        // Get sequence from read_seq.\n                        cur_seq = read_seq.slice(seq_offset, seq_offset + cig_len);\n                    } else if (this.ref_seq) {\n                        // && cig_op === '='\n                        // Use reference sequence.\n                        cur_seq = this.ref_seq.slice(\n                        // If read starts after tile start, slice at read start.\n                        Math.max(0, seq_start - tile_low),\n                        // If read ends before tile end, slice at read end.\n                        Math.min(seq_start - tile_low + cig_len, tile_high - tile_low));\n                    }\n\n                    // Draw sequence. Because cur_seq starts and read/tile start, go to there to start writing.\n                    var start_pos = Math.max(seq_start, tile_low);\n                    for (var c = 0; c < cur_seq.length; c++) {\n                        // Draw base if showing all (i.e. not showing differences) or there is a mismatch.\n                        if (cur_seq && !this.prefs.show_differences || cig_op === \"X\") {\n                            // Draw base.\n                            var c_start = Math.floor(Math.max(0, (start_pos + c - tile_low) * w_scale));\n                            ctx.fillStyle = this.base_color_fn(cur_seq[c]);\n                            if (pack_mode && w_scale > char_width_px) {\n                                ctx.fillText(cur_seq[c], c_start, y_start + 9);\n                            } else if (w_scale > 0.05) {\n                                // Require a minimum w_scale so that variants are only drawn when somewhat zoomed in.\n                                ctx.fillRect(c_start - gap, rect_y, Math.max(1, Math.round(w_scale)), draw_height);\n                            }\n                        }\n                    }\n\n                    // Move forward in sequence only if sequence used to get mismatches.\n                    if (cig_op === \"X\") {\n                        seq_offset += cig_len;\n                    }\n                    base_offset += cig_len;\n\n                    break;\n                case \"N\":\n                    // Skipped bases.\n                    ctx.fillStyle = CONNECTOR_COLOR;\n                    ctx.fillRect(s_start, rect_y + (draw_height - 1) / 2, s_end - s_start, 1);\n                    // No change in seq_offset because sequence not used when skipping.\n                    base_offset += cig_len;\n                    break;\n                case \"D\":\n                    // Deletion.\n                    paint_utils.draw_deletion(s_start, rect_y, cig_len);\n                    base_offset += cig_len;\n                    break;\n                case \"I\":\n                    // Insertion.\n                    // Check to see if sequence should be drawn at all by looking at the overlap between\n                    // the sequence region and the tile region.\n                    var insert_x_coord = s_start - gap;\n\n                    if (is_overlap([seq_start, seq_start + cig_len], tile_region)) {\n                        var seq = read_seq.slice(seq_offset, seq_offset + cig_len);\n                        // Insertion point is between the sequence start and the previous base: (-gap) moves\n                        // back from sequence start to insertion point.\n                        if (this.prefs.show_insertions) {\n                            //\n                            // Show inserted sequence above, centered on insertion point.\n                            //\n\n                            // Draw sequence.\n                            // X center is offset + start - <half_sequence_length>\n                            var x_center = s_start - (s_end - s_start) / 2;\n                            if ((mode === \"Pack\" || this.mode === \"Auto\") && read_seq !== undefined && w_scale > char_width_px) {\n                                // Draw sequence container.\n                                ctx.fillStyle = \"yellow\";\n                                ctx.fillRect(x_center - gap, y_start - 9, s_end - s_start, 9);\n                                draw_last[draw_last.length] = {\n                                    type: \"triangle\",\n                                    data: [insert_x_coord, y_start + 4, 5]\n                                };\n                                ctx.fillStyle = CONNECTOR_COLOR;\n                                // Based on overlap b/t sequence and tile, get sequence to be drawn.\n                                switch (compute_overlap([seq_start, seq_start + cig_len], tile_region)) {\n                                    case OVERLAP_START:\n                                        seq = seq.slice(tile_low - seq_start);\n                                        break;\n                                    case OVERLAP_END:\n                                        seq = seq.slice(0, seq_start - tile_high);\n                                        break;\n                                    case CONTAINED_BY:\n                                        // All of sequence drawn.\n                                        break;\n                                    case CONTAINS:\n                                        seq = seq.slice(tile_low - seq_start, seq_start - tile_high);\n                                        break;\n                                }\n                                // Draw sequence.\n                                for (var c = 0, str_len = seq.length; c < str_len; c++) {\n                                    var c_start = Math.floor(Math.max(0, (seq_start + c - tile_low) * w_scale));\n                                    ctx.fillText(seq[c], c_start - (s_end - s_start) / 2, y_start);\n                                }\n                            } else {\n                                // Draw block.\n                                ctx.fillStyle = \"yellow\";\n                                // TODO: This is a pretty hack-ish way to fill rectangle based on mode.\n                                ctx.fillRect(x_center, y_start + (this.mode !== \"Dense\" ? 2 : 5), s_end - s_start, mode !== \"Dense\" ? SQUISH_FEATURE_HEIGHT : DENSE_FEATURE_HEIGHT);\n                            }\n                        } else {\n                            if ((mode === \"Pack\" || this.mode === \"Auto\") && read_seq !== undefined && w_scale > char_width_px) {\n                                // Show insertions with a single number at the insertion point.\n                                draw_last.push({\n                                    type: \"text\",\n                                    data: [seq.length, insert_x_coord, y_start + 9]\n                                });\n                            } else {\n                                // TODO: probably can merge this case with code above.\n                            }\n                        }\n                    }\n                    seq_offset += cig_len;\n                    // No change to base offset because insertions are drawn above sequence/read.\n                    break;\n            }\n        }\n\n        //\n        // Draw last items.\n        //\n        ctx.fillStyle = \"yellow\";\n        var item;\n        var type;\n        var data;\n        for (var i = 0; i < draw_last.length; i++) {\n            item = draw_last[i];\n            type = item.type;\n            data = item.data;\n            if (type === \"text\") {\n                ctx.save();\n                ctx.font = \"bold \" + ctx.font;\n                ctx.fillText(data[0], data[1], data[2]);\n                ctx.restore();\n            } else if (type === \"triangle\") {\n                drawDownwardEquilateralTriangle(ctx, data[0], data[1], data[2]);\n            }\n        }\n    },\n\n    /**\n     * Draw a complete read pair\n     */\n    draw_element: function draw_element(ctx, mode, feature, slot, tile_low, tile_high, w_scale, y_scale, width) {\n        // All features need a start, end, and vertical center.\n        var feature_uid = feature[0];\n\n        var feature_start = feature[1];\n        var feature_end = feature[2];\n        var feature_name = feature[3];\n\n        var // -0.5 to put element between bases.\n        f_start = Math.floor(Math.max(-0.5 * w_scale, (feature_start - tile_low - 0.5) * w_scale));\n\n        var f_end = Math.ceil(Math.min(width, Math.max(0, (feature_end - tile_low - 0.5) * w_scale)));\n\n        var y_start = (mode === \"Dense\" ? 0 : 0 + slot) * y_scale;\n\n        var draw_height = mode === \"Pack\" ? PACK_FEATURE_HEIGHT : SQUISH_FEATURE_HEIGHT;\n\n        var label_color = this.prefs.label_color;\n\n        // Draw read.\n        if (feature[5] instanceof Array) {\n            // Read is paired.\n            var connector = true;\n\n            // Draw left/forward read.\n            if (feature[4][1] >= tile_low && feature[4][0] <= tile_high && feature[4][2]) {\n                this.draw_read(ctx, mode, w_scale, y_start, tile_low, tile_high, feature[4][0], feature[4][2], feature[4][3], feature[4][4]);\n            } else {\n                connector = false;\n            }\n\n            // Draw right/reverse read.\n            if (feature[5][1] >= tile_low && feature[5][0] <= tile_high && feature[5][2]) {\n                this.draw_read(ctx, mode, w_scale, y_start, tile_low, tile_high, feature[5][0], feature[5][2], feature[5][3], feature[5][4]);\n            } else {\n                connector = false;\n            }\n\n            // Draw connector if both reads were drawn.\n            // TODO: currently, there is no way to connect reads drawn on different tiles; to connect reads on different tiles, data manager\n            // code is needed to join mate pairs from different regions. Alternatively, requesting multiple regions of data at once would\n            // make it possible to put together more easily.\n            // -0.5 to position connector correctly between reads.\n            var b1_end = Math.ceil(Math.min(width, Math.max(-0.5 * w_scale, (feature[4][1] - tile_low - 0.5) * w_scale)));\n\n            var b2_start = Math.floor(Math.max(-0.5 * w_scale, (feature[5][0] - tile_low - 0.5) * w_scale));\n\n            if (connector && b2_start > b1_end) {\n                ctx.fillStyle = CONNECTOR_COLOR;\n                var line_height = y_start + 1 + (draw_height - 1) / 2;\n                dashedLine(ctx, b1_end, line_height, b2_start, line_height);\n            }\n        } else {\n            // Read is single.\n            this.draw_read(ctx, mode, w_scale, y_start, tile_low, tile_high, feature_start, feature[4], feature[5], feature[6]);\n        }\n        if (mode === \"Pack\" && feature_start >= tile_low && feature_name !== \".\") {\n            // Draw label.\n            ctx.fillStyle = this.prefs.label_color;\n            if (tile_low === 0 && f_start - ctx.measureText(feature_name).width < 0) {\n                ctx.textAlign = \"left\";\n                ctx.fillText(feature_name, f_end + LABEL_SPACING, y_start + 9, this.max_label_length);\n            } else {\n                ctx.textAlign = \"right\";\n                ctx.fillText(feature_name, f_start - LABEL_SPACING, y_start + 9, this.max_label_length);\n            }\n        }\n\n        // FIXME: provide actual coordinates for drawn read.\n        return [0, 0];\n    }\n});\n\nvar ArcLinkedFeaturePainter = function ArcLinkedFeaturePainter(data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler) {\n    LinkedFeaturePainter.call(this, data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler);\n    // Need to know the longest feature length for adding spacing\n    this.longest_feature_length = this.calculate_longest_feature_length();\n    this.draw_background_connector = false;\n    this.draw_individual_connectors = true;\n};\n\n_.extend(ArcLinkedFeaturePainter.prototype, FeaturePainter.prototype, LinkedFeaturePainter.prototype, {\n    calculate_longest_feature_length: function calculate_longest_feature_length() {\n        var longest_feature_length = 0;\n        for (var i = 0, len = this.data.length; i < len; i++) {\n            var feature = this.data[i];\n            var feature_start = feature[1];\n            var feature_end = feature[2];\n            longest_feature_length = Math.max(longest_feature_length, feature_end - feature_start);\n        }\n        return longest_feature_length;\n    },\n\n    get_top_padding: function get_top_padding(width) {\n        var view_range = this.view_end - this.view_start;\n        var w_scale = width / view_range;\n        return Math.min(128, Math.ceil(this.longest_feature_length / 2 * w_scale));\n    },\n\n    draw_connector: function draw_connector(ctx, block1_start, block1_end, block2_start, block2_end, y_start) {\n        // Arc drawing -- from closest endpoints\n        var x_center = (block1_end + block2_start) / 2;\n\n        var radius = block2_start - x_center;\n\n        // For full half circles\n        var angle1 = Math.PI;\n\n        var angle2 = 0;\n        if (radius > 0) {\n            ctx.beginPath();\n            ctx.arc(x_center, y_start, block2_start - x_center, Math.PI, 0);\n            ctx.stroke();\n        }\n    }\n});\n\n// Color stuff from less.js\n\nvar Color = function Color(rgb, a) {\n    /**\n     * The end goal here, is to parse the arguments\n     * into an integer triplet, such as `128, 255, 0`\n     *\n     * This facilitates operations and conversions.\n     */\n    if (Array.isArray(rgb)) {\n        this.rgb = rgb;\n    } else if (rgb.length == 6) {\n        this.rgb = rgb.match(/.{2}/g).map(function (c) {\n            return parseInt(c, 16);\n        });\n    } else if (rgb.length == 7) {\n        this.rgb = rgb.substring(1, 7).match(/.{2}/g).map(function (c) {\n            return parseInt(c, 16);\n        });\n    } else {\n        this.rgb = rgb.split(\"\").map(function (c) {\n            return parseInt(c + c, 16);\n        });\n    }\n    this.alpha = typeof a === \"number\" ? a : 1;\n};\nColor.prototype = {\n    eval: function _eval() {\n        return this;\n    },\n\n    //\n    // If we have some transparency, the only way to represent it\n    // is via `rgba`. Otherwise, we use the hex representation,\n    // which has better compatibility with older browsers.\n    // Values are capped between `0` and `255`, rounded and zero-padded.\n    //\n    toCSS: function toCSS() {\n        if (this.alpha < 1.0) {\n            return \"rgba(\" + this.rgb.map(function (c) {\n                return Math.round(c);\n            }).concat(this.alpha).join(\", \") + \")\";\n        } else {\n            return \"#\" + this.rgb.map(function (i) {\n                i = Math.round(i);\n                i = (i > 255 ? 255 : i < 0 ? 0 : i).toString(16);\n                return i.length === 1 ? \"0\" + i : i;\n            }).join(\"\");\n        }\n    },\n\n    toHSL: function toHSL() {\n        var r = this.rgb[0] / 255;\n        var g = this.rgb[1] / 255;\n        var b = this.rgb[2] / 255;\n        var a = this.alpha;\n        var max = Math.max(r, g, b);\n        var min = Math.min(r, g, b);\n        var h;\n        var s;\n        var l = (max + min) / 2;\n        var d = max - min;\n\n        if (max === min) {\n            h = s = 0;\n        } else {\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                    h = (r - g) / d + 4;\n                    break;\n            }\n            h /= 6;\n        }\n        return { h: h * 360, s: s, l: l, a: a };\n    },\n\n    toARGB: function toARGB() {\n        var argb = [Math.round(this.alpha * 255)].concat(this.rgb);\n        return \"#\" + argb.map(function (i) {\n            i = Math.round(i);\n            i = (i > 255 ? 255 : i < 0 ? 0 : i).toString(16);\n            return i.length === 1 ? \"0\" + i : i;\n        }).join(\"\");\n    },\n\n    mix: function mix(color2, weight) {\n        var color1 = this;\n\n        var p = weight; // .value / 100.0;\n        var w = p * 2 - 1;\n        var a = color1.toHSL().a - color2.toHSL().a;\n\n        var w1 = ((w * a == -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        var w2 = 1 - w1;\n\n        var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2, color1.rgb[1] * w1 + color2.rgb[1] * w2, color1.rgb[2] * w1 + color2.rgb[2] * w2];\n\n        var alpha = color1.alpha * p + color2.alpha * (1 - p);\n\n        return new Color(rgb, alpha);\n    }\n};\n\n// End colors from less.js\n\nvar LinearRamp = function LinearRamp(start_color, end_color, start_value, end_value) {\n    /**\n     * Simple linear gradient\n     */\n    this.start_color = new Color(start_color);\n    this.end_color = new Color(end_color);\n    this.start_value = start_value;\n    this.end_value = end_value;\n    this.value_range = end_value - start_value;\n};\n\nLinearRamp.prototype.map_value = function (value) {\n    value = Math.max(value, this.start_value);\n    value = Math.min(value, this.end_value);\n    value = (value - this.start_value) / this.value_range;\n    // HACK: just red for now\n    // return \"hsl(0,100%,\" + (value * 100) + \"%)\"\n    return this.start_color.mix(this.end_color, 1 - value).toCSS();\n};\n\nvar SplitRamp = function SplitRamp(start_color, middle_color, end_color, start_value, end_value) {\n    /**\n     * Two gradients split away from 0\n     */\n    this.positive_ramp = new LinearRamp(middle_color, end_color, 0, end_value);\n    this.negative_ramp = new LinearRamp(middle_color, start_color, 0, -start_value);\n    this.start_value = start_value;\n    this.end_value = end_value;\n};\n\nSplitRamp.prototype.map_value = function (value) {\n    value = Math.max(value, this.start_value);\n    value = Math.min(value, this.end_value);\n    if (value >= 0) {\n        return this.positive_ramp.map_value(value);\n    } else {\n        return this.negative_ramp.map_value(-value);\n    }\n};\n\nvar DiagonalHeatmapPainter = function DiagonalHeatmapPainter(data, view_start, view_end, prefs, mode) {\n    Painter.call(this, data, view_start, view_end, prefs, mode);\n    var i;\n    var len;\n\n    if (this.prefs.min_value === undefined) {\n        var min_value = Infinity;\n        for (i = 0, len = this.data.length; i < len; i++) {\n            min_value = Math.min(min_value, this.data[i][6]);\n        }\n        this.prefs.min_value = min_value;\n    }\n    if (this.prefs.max_value === undefined) {\n        var max_value = -Infinity;\n        for (i = 0, len = this.data.length; i < len; i++) {\n            max_value = Math.max(max_value, this.data[i][6]);\n        }\n        this.prefs.max_value = max_value;\n    }\n};\n\nDiagonalHeatmapPainter.prototype.default_prefs = {\n    min_value: undefined,\n    max_value: undefined,\n    mode: \"Heatmap\",\n    pos_color: \"#FF8C00\",\n    neg_color: \"#4169E1\"\n};\n\nDiagonalHeatmapPainter.prototype.draw = function (ctx, width, height, w_scale) {\n    var min_value = this.prefs.min_value;\n    var max_value = this.prefs.max_value;\n    var value_range = max_value - min_value;\n    var height_px = height;\n    var view_start = this.view_start;\n    var mode = this.mode;\n    var data = this.data;\n    var invsqrt2 = 1 / Math.sqrt(2);\n\n    var ramp = new SplitRamp(this.prefs.neg_color, \"#FFFFFF\", this.prefs.pos_color, min_value, max_value);\n\n    var d;\n    var s1;\n    var e1;\n    var s2;\n    var e2;\n    var value;\n\n    var scale = function scale(p) {\n        return (p - view_start) * w_scale;\n    };\n\n    ctx.save();\n\n    // Draw into triangle, then rotate and scale\n    ctx.rotate(-45 * Math.PI / 180);\n    ctx.scale(invsqrt2, invsqrt2);\n\n    // Paint track.\n    for (var i = 0, len = data.length; i < len; i++) {\n        d = data[i];\n\n        s1 = scale(d[1]);\n        e1 = scale(d[2]);\n        s2 = scale(d[4]);\n        e2 = scale(d[5]);\n        value = d[6];\n\n        ctx.fillStyle = ramp.map_value(value);\n        ctx.fillRect(s1, s2, e1 - s1, e2 - s2);\n    }\n\n    ctx.restore();\n};\n\n/**\n * Utilities for painting reads.\n */\nvar ReadPainterUtils = function ReadPainterUtils(ctx, row_height, px_per_base, mode) {\n    this.ctx = ctx;\n    this.row_height = row_height;\n    this.px_per_base = px_per_base;\n    this.draw_details = (mode === \"Pack\" || mode === \"Auto\") && px_per_base >= ctx.canvas.manager.char_width_px;\n    this.delete_details_thickness = 0.2;\n};\n\n_.extend(ReadPainterUtils.prototype, {\n    /**\n     * Draw deletion of base(s).\n     * @param draw_detail if true, drawing in detail and deletion is drawn more subtly\n     */\n    draw_deletion: function draw_deletion(x, y, len) {\n        this.ctx.fillStyle = \"black\";\n        var thickness = (this.draw_details ? this.delete_details_thickness : 1) * this.row_height;\n        y += 0.5 * (this.row_height - thickness);\n        this.ctx.fillRect(x, y, len * this.px_per_base, thickness);\n    }\n});\n\n/**\n * Paints variant data onto canvas.\n */\nvar VariantPainter = function VariantPainter(data, view_start, view_end, prefs, mode, base_color_fn) {\n    Painter.call(this, data, view_start, view_end, prefs, mode);\n    this.base_color_fn = base_color_fn;\n    this.divider_height = 1;\n};\n\n_.extend(VariantPainter.prototype, Painter.prototype, {\n    /**\n     * Height of a single row, depends on mode\n     */\n    get_row_height: function get_row_height() {\n        var mode = this.mode;\n        var height;\n        if (mode === \"Dense\") {\n            height = DENSE_TRACK_HEIGHT;\n        } else if (mode === \"Squish\") {\n            height = SQUISH_TRACK_HEIGHT;\n        } else {\n            // mode === \"Pack\"\n            height = PACK_TRACK_HEIGHT;\n        }\n        return height;\n    },\n\n    /**\n     * Returns required height to draw a particular number of samples in a given mode.\n     */\n    get_required_height: function get_required_height(num_samples) {\n        // FIXME: for single-sample data, height should be summary_height when zoomed out and\n        // row_height when zoomed in.\n        var height = this.prefs.summary_height;\n\n        // If showing sample data, height is summary + divider + samples.\n        if (num_samples > 1 && this.prefs.show_sample_data) {\n            height += this.divider_height + num_samples * this.get_row_height();\n        }\n        return height;\n    },\n\n    /**\n     * Draw on the context using a rectangle of width x height with scale w_scale.\n     */\n    draw: function draw(ctx, width, height, w_scale) {\n        ctx.save();\n\n        var /**\n            * Returns dictionary of information about an indel; returns empty if there no indel. Assumes indel is left-aligned.\n            * Dict attributes:\n            *    -type: 'insertion' or 'deletion'\n            *    -start: where the deletion starts relative to reference start\n            *    -len: how long the deletion is\n            */\n        get_indel_info = function get_indel_info(ref, alt) {\n            var ref_len = ref.length;\n            var alt_len = alt.length;\n            var start = 0;\n            var len = 1;\n            var type = null;\n            if (alt === \"-\") {\n                type = \"deletion\";\n                len = ref.length;\n            } else if (ref.indexOf(alt) === 0 && ref_len > alt_len) {\n                type = \"deletion\";\n                len = ref_len - alt_len;\n                start = alt_len;\n            } else if (alt.indexOf(ref) === 0 && ref_len < alt_len) {\n                // Insertion.\n                type = \"insertion\";\n                len = alt_len - ref_len;\n                start = alt_len;\n            }\n\n            return type !== null ? { type: type, start: start, len: len } : {};\n        };\n\n        // Draw.\n        var locus_data;\n\n        var pos;\n        var id;\n        var ref;\n        var alt;\n        var qual;\n        var filter;\n        var sample_gts;\n        var allele_counts;\n        var variant;\n        var draw_x_start;\n        var draw_y_start;\n        var genotype;\n\n        var // Always draw variants at least 1 pixel wide.\n        base_px = Math.max(1, Math.floor(w_scale));\n\n        var // Determine number of samples.\n        num_samples = this.data.length ? this.data[0][7].split(\",\").length : 0;\n\n        var row_height = this.mode === \"Squish\" ? SQUISH_TRACK_HEIGHT : PACK_TRACK_HEIGHT;\n\n        var // If zoomed out, fill the whole row with feature to make it easier to read;\n        // when zoomed in, use feature height so that there are gaps in sample rows.\n        feature_height = w_scale < 0.1 ? row_height : this.mode === \"Squish\" ? SQUISH_FEATURE_HEIGHT : PACK_FEATURE_HEIGHT;\n\n        var draw_summary = true;\n\n        var paint_utils = new ReadPainterUtils(ctx, row_height, w_scale, this.mode);\n\n        var j;\n\n        // If there's a single sample, update drawing variables.\n        if (num_samples === 1) {\n            row_height = feature_height = w_scale < ctx.canvas.manager.char_width_px ? this.prefs.summary_height : row_height;\n            paint_utils.row_height = row_height;\n            // No summary when there's a single sample.\n            draw_summary = false;\n        }\n\n        // Draw divider between summary and samples.\n        if (this.prefs.show_sample_data && draw_summary) {\n            ctx.fillStyle = \"#F3F3F3\";\n            ctx.globalAlpha = 1;\n            ctx.fillRect(0, this.prefs.summary_height - this.divider_height, width, this.divider_height);\n        }\n\n        // Draw variants.\n        ctx.textAlign = \"center\";\n        for (var i = 0; i < this.data.length; i++) {\n            // Get locus data.\n            locus_data = this.data[i];\n            pos = locus_data[1];\n            ref = locus_data[3];\n            alt = [locus_data[4].split(\",\")];\n            sample_gts = locus_data[7].split(\",\");\n            allele_counts = locus_data.slice(8);\n\n            // Process alterate values to derive information about each alt.\n            alt = _.map(_.flatten(alt), function (a) {\n                var alt_info = {\n                    type: \"snp\",\n                    value: a,\n                    start: 0\n                };\n\n                var indel_info = get_indel_info(ref, a);\n\n                return _.extend(alt_info, indel_info);\n            });\n\n            // Only draw locus data if it's in viewing region.\n            if (pos < this.view_start || pos > this.view_end) {\n                continue;\n            }\n\n            // Draw summary for alleles.\n            if (draw_summary) {\n                ctx.fillStyle = \"#999999\";\n                ctx.globalAlpha = 1;\n                for (j = 0; j < alt.length; j++) {\n                    // Draw background for summary.\n                    draw_x_start = this.get_start_draw_pos(pos + alt[j].start, w_scale);\n                    ctx.fillRect(draw_x_start, 0, base_px, this.prefs.summary_height);\n                    draw_y_start = this.prefs.summary_height;\n                    // Draw allele fractions onto summary.\n                    for (j = 0; j < alt.length; j++) {\n                        ctx.fillStyle = alt[j].type === \"deletion\" ? \"black\" : this.base_color_fn(alt[j].value);\n                        var allele_frac = allele_counts / sample_gts.length;\n                        var draw_height = Math.ceil(this.prefs.summary_height * allele_frac);\n                        ctx.fillRect(draw_x_start, draw_y_start - draw_height, base_px, draw_height);\n                        draw_y_start -= draw_height;\n                    }\n                }\n            }\n\n            // Done drawing if not showing samples data.\n            if (!this.prefs.show_sample_data) {\n                continue;\n            }\n\n            // Draw sample genotype(s).\n            draw_y_start = draw_summary ? this.prefs.summary_height + this.divider_height : 0;\n            for (j = 0; j < sample_gts.length; j++, draw_y_start += row_height) {\n                genotype = sample_gts[j] ? sample_gts[j].split(/\\/|\\|/) : [\"0\", \"0\"];\n\n                // Get variant to draw and set drawing properties.\n                variant = null;\n                if (genotype[0] === genotype[1]) {\n                    if (genotype[0] === \".\") {\n                        // TODO: draw uncalled variant.\n                    } else if (genotype[0] !== \"0\") {\n                        // Homozygous for variant.\n                        variant = alt[parseInt(genotype[0], 10) - 1];\n                        ctx.globalAlpha = 1;\n                    }\n                    // else reference\n                } else {\n                    // Heterozygous for variant.\n                    variant = genotype[0] !== \"0\" ? genotype[0] : genotype[1];\n                    variant = alt[parseInt(variant, 10) - 1];\n                    ctx.globalAlpha = 0.5;\n                }\n\n                // If there's a variant, draw it.\n                if (variant) {\n                    draw_x_start = this.get_start_draw_pos(pos + variant.start, w_scale);\n                    if (variant.type === \"snp\") {\n                        var snp = variant.value;\n                        ctx.fillStyle = this.base_color_fn(snp);\n                        if (paint_utils.draw_details) {\n                            ctx.fillText(snp, this.get_draw_pos(pos, w_scale), draw_y_start + row_height);\n                        } else {\n                            ctx.fillRect(draw_x_start, draw_y_start + 1, base_px, feature_height);\n                        }\n                    } else if (variant.type === \"deletion\") {\n                        paint_utils.draw_deletion(draw_x_start, draw_y_start + 1, variant.len);\n                    } else {\n                        // TODO: handle insertions.\n                    }\n                }\n            }\n        }\n\n        ctx.restore();\n    }\n});\n\nexports.default = {\n    Scaler: Scaler,\n    LinePainter: LinePainter,\n    LinkedFeaturePainter: LinkedFeaturePainter,\n    ReadPainter: ReadPainter,\n    ArcLinkedFeaturePainter: ArcLinkedFeaturePainter,\n    DiagonalHeatmapPainter: DiagonalHeatmapPainter,\n    VariantPainter: VariantPainter\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar extend = _.extend;\n\n/**\n * Filters that enable users to show/hide data points dynamically.\n */\nvar Filter = function Filter(obj_dict) {\n    this.manager = null;\n    this.name = obj_dict.name;\n    // Index into payload to filter.\n    this.index = obj_dict.index;\n    this.tool_id = obj_dict.tool_id;\n    // Name to use for filter when building expression for tool.\n    this.tool_exp_name = obj_dict.tool_exp_name;\n};\n\nextend(Filter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function to_dict() {\n        return {\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        };\n    }\n});\n\n/**\n * Creates an action icon.\n */\nvar create_action_icon = function create_action_icon(title, css_class, on_click_fn) {\n    return $(\"<a/>\").attr(\"href\", \"javascript:void(0);\").attr(\"title\", title).addClass(\"icon-button\").addClass(css_class).tooltip().click(on_click_fn);\n};\n\n/**\n * Number filters have a min, max as well as a low, high; low and high are used\n */\nvar NumberFilter = function NumberFilter(obj_dict) {\n    //\n    // Attribute init.\n    //\n    Filter.call(this, obj_dict);\n    // Filter low/high. These values are used to filter elements.\n    this.low = \"low\" in obj_dict ? obj_dict.low : -Number.MAX_VALUE;\n    this.high = \"high\" in obj_dict ? obj_dict.high : Number.MAX_VALUE;\n    // Slide min/max. These values are used to set/update slider.\n    this.min = \"min\" in obj_dict ? obj_dict.min : Number.MAX_VALUE;\n    this.max = \"max\" in obj_dict ? obj_dict.max : -Number.MAX_VALUE;\n    // UI elements associated with filter.\n    this.container = null;\n    this.slider = null;\n    this.slider_label = null;\n\n    //\n    // Create HTML.\n    //\n\n    // Function that supports inline text editing of slider values.\n    // Enable users to edit parameter's value via a text box.\n    var edit_slider_values = function edit_slider_values(container, span, slider) {\n        container.click(function () {\n            var cur_value = span.text();\n            var max = parseFloat(slider.slider(\"option\", \"max\"));\n\n            var input_size = max <= 1 ? 4 : max <= 1000000 ? max.toString().length : 6;\n\n            var multi_value = false;\n            var slider_row = $(this).parents(\".slider-row\");\n\n            // Row now has input.\n            slider_row.addClass(\"input\");\n\n            // Increase input size if there are two values.\n            if (slider.slider(\"option\", \"values\")) {\n                input_size = 2 * input_size + 1;\n                multi_value = true;\n            }\n            span.text(\"\");\n            // Temporary input for changing value.\n            $(\"<input type='text'/>\").attr(\"size\", input_size).attr(\"maxlength\", input_size).attr(\"value\", cur_value).appendTo(span).focus().select().click(function (e) {\n                // Don't want click to propogate up to values_span and restart everything.\n                e.stopPropagation();\n            }).blur(function () {\n                $(this).remove();\n                span.text(cur_value);\n                slider_row.removeClass(\"input\");\n            }).keyup(function (e) {\n                if (e.keyCode === 27) {\n                    // Escape key.\n                    $(this).trigger(\"blur\");\n                } else if (e.keyCode === 13) {\n                    //\n                    // Enter/return key initiates callback. If new value(s) are in slider range,\n                    // change value (which calls slider's change() function).\n                    //\n                    var slider_min = slider.slider(\"option\", \"min\");\n\n                    var slider_max = slider.slider(\"option\", \"max\");\n\n                    var invalid = function invalid(a_val) {\n                        return isNaN(a_val) || a_val > slider_max || a_val < slider_min;\n                    };\n\n                    var new_value = $(this).val();\n                    if (!multi_value) {\n                        new_value = parseFloat(new_value);\n                        if (invalid(new_value)) {\n                            alert(\"Parameter value must be in the range [\" + slider_min + \"-\" + slider_max + \"]\");\n                            return $(this);\n                        }\n                    } else {\n                        // Multi value.\n                        new_value = new_value.split(\"-\");\n                        new_value = [parseFloat(new_value[0]), parseFloat(new_value[1])];\n                        if (invalid(new_value[0]) || invalid(new_value[1])) {\n                            alert(\"Parameter value must be in the range [\" + slider_min + \"-\" + slider_max + \"]\");\n                            return $(this);\n                        }\n                    }\n\n                    // Updating the slider also updates slider values and removes input.\n                    slider.slider(multi_value ? \"values\" : \"value\", new_value);\n                    slider_row.removeClass(\"input\");\n                }\n            });\n        });\n    };\n\n    var filter = this;\n\n    filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n\n    // Set up filter label (name, values).\n    var filter_label = $(\"<div/>\").addClass(\"elt-label\").appendTo(filter.parent_div);\n\n    var name_span = $(\"<span/>\").addClass(\"slider-name\").text(filter.name + \"  \").appendTo(filter_label);\n\n    var values_span = $(\"<span/>\").text(this.low + \"-\" + this.high);\n\n    var values_span_container = $(\"<span/>\").addClass(\"slider-value\").appendTo(filter_label).append(\"[\").append(values_span).append(\"]\");\n\n    filter.values_span = values_span;\n\n    // Set up slider for filter.\n    var slider_div = $(\"<div/>\").addClass(\"slider\").appendTo(filter.parent_div);\n    filter.control_element = $(\"<div/>\").attr(\"id\", filter.name + \"-filter-control\").appendTo(slider_div);\n    filter.control_element.slider({\n        range: true,\n        min: this.min,\n        max: this.max,\n        step: this.get_slider_step(this.min, this.max),\n        values: [this.low, this.high],\n        slide: function slide(event, ui) {\n            filter.slide(event, ui);\n        },\n        change: function change(event, ui) {\n            filter.control_element.slider(\"option\", \"slide\").call(filter.control_element, event, ui);\n        }\n    });\n    filter.slider = filter.control_element;\n    filter.slider_label = values_span;\n\n    // Enable users to edit slider values via text box.\n    edit_slider_values(values_span_container, values_span, filter.control_element);\n\n    // Set up filter display controls.\n    var display_controls_div = $(\"<div/>\").addClass(\"display-controls\").appendTo(filter.parent_div);\n    this.transparency_icon = create_action_icon(\"Use filter for data transparency\", \"layer-transparent\", function () {\n        if (filter.manager.alpha_filter !== filter) {\n            // Setting this filter as the alpha filter.\n            filter.manager.alpha_filter = filter;\n            // Update UI for new filter.\n            filter.manager.parent_div.find(\".layer-transparent\").removeClass(\"active\").hide();\n            filter.transparency_icon.addClass(\"active\").show();\n        } else {\n            // Clearing filter as alpha filter.\n            filter.manager.alpha_filter = null;\n            filter.transparency_icon.removeClass(\"active\");\n        }\n        filter.manager.track.request_draw({\n            force: true,\n            clear_after: true\n        });\n    }).appendTo(display_controls_div).hide();\n    this.height_icon = create_action_icon(\"Use filter for data height\", \"arrow-resize-090\", function () {\n        if (filter.manager.height_filter !== filter) {\n            // Setting this filter as the height filter.\n            filter.manager.height_filter = filter;\n            // Update UI for new filter.\n            filter.manager.parent_div.find(\".arrow-resize-090\").removeClass(\"active\").hide();\n            filter.height_icon.addClass(\"active\").show();\n        } else {\n            // Clearing filter as alpha filter.\n            filter.manager.height_filter = null;\n            filter.height_icon.removeClass(\"active\");\n        }\n        filter.manager.track.request_draw({\n            force: true,\n            clear_after: true\n        });\n    }).appendTo(display_controls_div).hide();\n    filter.parent_div.hover(function () {\n        filter.transparency_icon.show();\n        filter.height_icon.show();\n    }, function () {\n        if (filter.manager.alpha_filter !== filter) {\n            filter.transparency_icon.hide();\n        }\n        if (filter.manager.height_filter !== filter) {\n            filter.height_icon.hide();\n        }\n    });\n\n    // Add to clear floating layout.\n    $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n};\nextend(NumberFilter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function to_dict() {\n        var obj_dict = Filter.prototype.to_dict.call(this);\n        return extend(obj_dict, {\n            type: \"number\",\n            min: this.min,\n            max: this.max,\n            low: this.low,\n            high: this.high\n        });\n    },\n    /**\n     * Return a copy of filter.\n     */\n    copy: function copy() {\n        return new NumberFilter({\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        });\n    },\n    /**\n     * Get step for slider.\n     */\n    // FIXME: make this a \"static\" function.\n    get_slider_step: function get_slider_step(min, max) {\n        var range = max - min;\n        return range <= 2 ? 0.01 : 1;\n    },\n    /**\n     * Handle slide events.\n     */\n    slide: function slide(event, ui) {\n        var values = ui.values;\n\n        // Set new values in UI.\n        this.values_span.text(values[0] + \"-\" + values[1]);\n\n        // Set new values in filter.\n        this.low = values[0];\n        this.high = values[1];\n\n        // Set timeout to update if filter low, high are stable.\n        var self = this;\n        setTimeout(function () {\n            if (values[0] === self.low && values[1] === self.high) {\n                self.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        }, 25);\n    },\n    /**\n     * Returns true if filter can be applied to element.\n     */\n    applies_to: function applies_to(element) {\n        if (element.length > this.index) {\n            return true;\n        }\n        return false;\n    },\n    /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n    _keep_val: function _keep_val(val) {\n        return isNaN(val) || val >= this.low && val <= this.high;\n    },\n    /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive)\n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n    keep: function keep(element) {\n        if (!this.applies_to(element)) {\n            // No element to filter on.\n            return true;\n        }\n\n        // Keep value function.\n        var filter = this;\n\n        // Do filtering.\n        var to_filter = element[this.index];\n        if (to_filter instanceof Array) {\n            var returnVal = true;\n            for (var i = 0; i < to_filter.length; i++) {\n                if (!this._keep_val(to_filter[i])) {\n                    // Exclude element.\n                    returnVal = false;\n                    break;\n                }\n            }\n            return returnVal;\n        } else {\n            return this._keep_val(element[this.index]);\n        }\n    },\n    /**\n     * Update filter's min and max values based on element's values.\n     */\n    update_attrs: function update_attrs(element) {\n        var updated = false;\n        if (!this.applies_to(element)) {\n            return updated;\n        }\n\n        //\n        // Update filter's min, max based on element values.\n        //\n\n        // Make value(s) into an Array.\n        var values = element[this.index];\n        if (!(values instanceof Array)) {\n            values = [values];\n        }\n\n        // Loop through values and update min, max.\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            if (value < this.min) {\n                this.min = Math.floor(value);\n                updated = true;\n            }\n            if (value > this.max) {\n                this.max = Math.ceil(value);\n                updated = true;\n            }\n        }\n        return updated;\n    },\n    /**\n     * Update filter's slider.\n     */\n    update_ui_elt: function update_ui_elt() {\n        // Only show filter if min < max because filter is not useful otherwise. This\n        // covers all corner cases, such as when min, max have not been defined and\n        // when min == max.\n        if (this.min < this.max) {\n            this.parent_div.show();\n        } else {\n            this.parent_div.hide();\n        }\n\n        var slider_min = this.slider.slider(\"option\", \"min\");\n        var slider_max = this.slider.slider(\"option\", \"max\");\n        if (this.min < slider_min || this.max > slider_max) {\n            // Update slider min, max, step.\n            this.slider.slider(\"option\", \"min\", this.min);\n            this.slider.slider(\"option\", \"max\", this.max);\n            this.slider.slider(\"option\", \"step\", this.get_slider_step(this.min, this.max));\n            // Refresh slider:\n            // TODO: do we want to keep current values or reset to min/max?\n            // Currently we reset values:\n            this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n            // To use the current values.\n            //var values = this.slider.slider( \"option\", \"values\" );\n            //this.slider.slider( \"option\", \"values\", values );\n        }\n    }\n});\n\n/**\n * Manages a set of filters.\n */\nvar FiltersManager = function FiltersManager(track, obj_dict) {\n    this.track = track;\n    this.alpha_filter = null;\n    this.height_filter = null;\n    this.filters = [];\n\n    //\n    // Create HTML.\n    //\n\n    //\n    // Create parent div.\n    //\n    this.parent_div = $(\"<div/>\").addClass(\"filters\").hide();\n    // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n    this.parent_div.bind(\"drag\", function (e) {\n        e.stopPropagation();\n    }).click(function (e) {\n        e.stopPropagation();\n    }).bind(\"dblclick\", function (e) {\n        e.stopPropagation();\n    }).bind(\"keydown\", function (e) {\n        e.stopPropagation();\n    });\n\n    //\n    // Restore state from dict.\n    //\n    if (obj_dict && \"filters\" in obj_dict) {\n        // Second condition needed for backward compatibility.\n        var alpha_filter_name = \"alpha_filter\" in obj_dict ? obj_dict.alpha_filter : null;\n\n        var height_filter_name = \"height_filter\" in obj_dict ? obj_dict.height_filter : null;\n\n        var filters_dict = obj_dict.filters;\n        var filter;\n        for (var i = 0; i < filters_dict.length; i++) {\n            if (filters_dict[i].type === \"number\") {\n                filter = new NumberFilter(filters_dict[i]);\n                this.add_filter(filter);\n                if (filter.name === alpha_filter_name) {\n                    this.alpha_filter = filter;\n                    filter.transparency_icon.addClass(\"active\").show();\n                }\n                if (filter.name === height_filter_name) {\n                    this.height_filter = filter;\n                    filter.height_icon.addClass(\"active\").show();\n                }\n            } else {\n                console.log(\"ERROR: unsupported filter: \", name, type);\n            }\n        }\n\n        if (\"visible\" in obj_dict && obj_dict.visible) {\n            this.parent_div.show();\n        }\n    }\n\n    // Add button to filter complete dataset.\n    if (this.filters.length !== 0) {\n        var run_buttons_row = $(\"<div/>\").addClass(\"param-row\").appendTo(this.parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'/>\").attr(\"value\", \"Run on complete dataset\").appendTo(run_buttons_row);\n        var filter_manager = this;\n        run_on_dataset_button.click(function () {\n            filter_manager.run_on_dataset();\n        });\n    }\n};\n\nextend(FiltersManager.prototype, {\n    // HTML manipulation and inspection.\n    show: function show() {\n        this.parent_div.show();\n    },\n    hide: function hide() {\n        this.parent_div.hide();\n    },\n    toggle: function toggle() {\n        this.parent_div.toggle();\n    },\n    visible: function visible() {\n        return this.parent_div.is(\":visible\");\n    },\n    /**\n     * Returns dictionary for manager.\n     */\n    to_dict: function to_dict() {\n        var obj_dict = {};\n        var filter_dicts = [];\n        var filter;\n\n        // Include individual filter states.\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            filter_dicts.push(filter.to_dict());\n        }\n        obj_dict.filters = filter_dicts;\n\n        // Include transparency, height filters.\n        obj_dict.alpha_filter = this.alpha_filter ? this.alpha_filter.name : null;\n        obj_dict.height_filter = this.height_filter ? this.height_filter.name : null;\n\n        // Include visibility.\n        obj_dict.visible = this.parent_div.is(\":visible\");\n\n        return obj_dict;\n    },\n    /**\n     * Return a copy of the manager.\n     */\n    copy: function copy(new_track) {\n        var copy = new FiltersManager(new_track);\n        for (var i = 0; i < this.filters.length; i++) {\n            copy.add_filter(this.filters[i].copy());\n        }\n        return copy;\n    },\n    /**\n     * Add a filter to the manager.\n     */\n    add_filter: function add_filter(filter) {\n        filter.manager = this;\n        this.parent_div.append(filter.parent_div);\n        this.filters.push(filter);\n    },\n    /**\n     * Remove all filters from manager.\n     */\n    remove_all: function remove_all() {\n        this.filters = [];\n        this.parent_div.children().remove();\n    },\n    /**\n     * Initialize filters.\n     */\n\n    init_filters: function init_filters() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.update_ui_elt();\n        }\n    },\n    /**\n     * Clear filters so that they do not impact track display.\n     */\n    clear_filters: function clear_filters() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.slider.slider(\"option\", \"values\", [filter.min, filter.max]);\n        }\n        this.alpha_filter = null;\n        this.height_filter = null;\n\n        // Hide icons for setting filters.\n        this.parent_div.find(\".icon-button\").hide();\n    },\n    run_on_dataset: function run_on_dataset() {\n        // Get or create dictionary item.\n        var get_or_create_dict_item = function get_or_create_dict_item(dict, key, new_item) {\n            // Add new item to dict if\n            if (!(key in dict)) {\n                dict[key] = new_item;\n            }\n            return dict[key];\n        };\n\n        //\n        // Find and group active filters. Active filters are those being used to hide data.\n        // Filters with the same tool id are grouped.\n        //\n        var active_filters = {};\n\n        var filter;\n        var tool_filter_conditions;\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            if (filter.tool_id) {\n                // Add filtering conditions if filter low/high are set.\n                if (filter.min !== filter.low) {\n                    tool_filter_conditions = get_or_create_dict_item(active_filters, filter.tool_id, []);\n                    tool_filter_conditions[tool_filter_conditions.length] = filter.tool_exp_name + \" >= \" + filter.low;\n                }\n                if (filter.max !== filter.high) {\n                    tool_filter_conditions = get_or_create_dict_item(active_filters, filter.tool_id, []);\n                    tool_filter_conditions[tool_filter_conditions.length] = filter.tool_exp_name + \" <= \" + filter.high;\n                }\n            }\n        }\n\n        //\n        // Use tools to run filters.\n        //\n\n        // Create list of (tool_id, tool_filters) tuples.\n        var active_filters_list = [];\n        for (var tool_id in active_filters) {\n            active_filters_list[active_filters_list.length] = [tool_id, active_filters[tool_id]];\n        }\n\n        // Invoke recursive function to run filters; this enables chaining of filters via\n        // iteratively application.\n        (function run_filter(input_dataset_id, filters) {\n            var // Set up filtering info and params.\n            filter_tuple = filters[0];\n\n            var tool_id = filter_tuple[0];\n            var tool_filters = filter_tuple[1];\n            var tool_filter_str = \"(\" + tool_filters.join(\") and (\") + \")\";\n\n            var url_params = {\n                cond: tool_filter_str,\n                input: input_dataset_id,\n                target_dataset_id: input_dataset_id,\n                tool_id: tool_id\n            };\n\n            // Remove current filter.\n            filters = filters.slice(1);\n\n            $.getJSON(run_tool_url, url_params, function (response) {\n                if (response.error) {\n                    // General error.\n                    Galaxy.modal.show({\n                        title: \"Filter Dataset\",\n                        body: \"Error running tool \" + tool_id,\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else if (filters.length === 0) {\n                    // No more filters to run.\n                    Galaxy.modal.show({\n                        title: \"Filtering Dataset\",\n                        body: \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else {\n                    // More filters to run.\n                    run_filter(response.dataset_id, filters);\n                }\n            });\n        })(this.track.dataset_id, active_filters_list);\n    }\n});\n\nexports.default = {\n    FiltersManager: FiltersManager,\n    NumberFilter: NumberFilter\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _visualization = __webpack_require__(9);\n\nvar _visualization2 = _interopRequireDefault(_visualization);\n\nvar _bigwig = __webpack_require__(40);\n\nvar bigwig = _interopRequireWildcard(_bigwig);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Data manager for BBI datasets/files, including BigWig and BigBed.\n */\nvar BBIDataManager = _visualization2.default.GenomeDataManager.extend({\n    /**\n     * Load data from server and manage data entries. Adds a Deferred to manager\n     * for region; when data becomes available, replaces Deferred with data.\n     * Returns the Deferred that resolves when data is available.\n     */\n    load_data: function load_data(region, mode, resolution, extra_params) {\n        var deferred = $.Deferred();\n        this.set_data(region, deferred);\n\n        var url = Galaxy.root + \"datasets/\" + this.get(\"dataset\").id + \"/display\";\n\n        var self = this;\n        var promise = new $.Deferred();\n        $.when(bigwig.makeBwg(url)).then(function (bb, err) {\n            $.when(bb.readWigData(region.get(\"chrom\"), region.get(\"start\"), region.get(\"end\"))).then(function (data) {\n                // Transform data into \"bigwig\" format for LinePainter. \"bigwig\" format is an array of 2-element arrays\n                // where each element is [position, score]; unlike real bigwig format, no gaps are allowed.\n                var result = [];\n\n                var prev = { max: Number.MIN_VALUE };\n                data.forEach(function (d) {\n                    // If there is a gap between prev and d, fill it with an interval with score 0.\n                    // This is necessary for LinePainter to draw correctly.\n                    if (prev.max !== d.min - 1) {\n                        // +1 to start after previous region.\n                        result.push([prev.max + 1, 0]);\n                        // -2 = -1 for converting from 1-based to 0-based coordinates,\n                        //      -1 for ending before current region.\n                        result.push([d.min - 2, 0]);\n                    }\n\n                    // Add data point for entry start. -1 to convert from wiggle\n                    // 1-based coordinates to 0-based browser coordinates.\n                    result.push([d.min - 1, d.score]);\n\n                    // Add data point for entry end:\n                    result.push([d.max, d.score]);\n\n                    prev = d;\n                });\n\n                var entry = {\n                    data: result,\n                    region: region,\n                    dataset_type: \"bigwig\"\n                };\n\n                self.set_data(region, entry);\n                deferred.resolve(entry);\n            });\n        });\n\n        return deferred;\n    }\n});\n\nexports.default = {\n    BBIDataManager: BBIDataManager\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//\n// Author: Jeremy Goecks\n//\n// Modified from:\n//\n// Dalliance Genome Explorer\n// (c) Thomas Down 2006-2010\n//\n// bigwig.js: indexed binary WIG (and BED) files\n//\n\n// Requirements:\n//  * jquery and ajax-native plugin for reading binary data, jquery for promises\n//  * spans for working working with genomic intervals\n//  * jszlib for decompression.\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(41), __webpack_require__(42), __webpack_require__(43)], __WEBPACK_AMD_DEFINE_RESULT__ = function(spans, jszlib) {\n    \"use strict\";\n\n    // -- Copied from das.js --\n\n    function DASFeature() {\n    }\n\n    function DASGroup(id) {\n        if (id)\n        this.id = id;\n    }\n\n    // -- End copy --\n\n    // -- Copied from bin.js --\n\n    function readInt(ba, offset) {\n        return (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset]);\n    }\n\n    // -- End copy --\n\n    // Some globals.\n    var Range = spans.Range;\n    var union = spans.union;\n    var intersection = spans.intersection;\n\n    var jszlib_inflate_buffer = jszlib.inflateBuffer;\n    var arrayCopy = jszlib.arrayCopy;\n\n    var BIG_WIG_MAGIC = 0x888FFC26;\n    var BIG_WIG_MAGIC_BE = 0x26FC8F88;\n    var BIG_BED_MAGIC = 0x8789F2EB;\n    var BIG_BED_MAGIC_BE = 0xEBF28987;\n\n\n    var BIG_WIG_TYPE_GRAPH = 1;\n    var BIG_WIG_TYPE_VSTEP = 2;\n    var BIG_WIG_TYPE_FSTEP = 3;\n\n    var M1 = 256;\n    var M2 = 256*256;\n    var M3 = 256*256*256;\n    var M4 = 256*256*256*256;\n\n    var BED_COLOR_REGEXP = new RegExp(\"^[0-9]+,[0-9]+,[0-9]+\");\n\n    /**\n     * Read binary data from a URL using HTTP Range header. Requires jQuery and ajax-native plugin.\n     */\n    function read(url, start, size) {\n        // Taken from bin.js:\n        // This may be necessary for Safari:\n        //   if ((isSafari || this.opts.salt) && url.indexOf('?') < 0) {\n        //       url = url + '?salt=' + b64_sha1('' + Date.now() + ',' + (++seed));\n        //   }\n\n        var chunkSizeLimit = Math.pow(10, 6); // 1 MB\n        if(size > chunkSizeLimit) {\n            // TODO: raise error.\n        }\n\n        // Read data from remote file.\n        return $.ajax({\n            type: 'GET',\n            dataType: 'native',\n            url: url,\n            // Potential timeout on first request to catch mixed-content errors on Chromium.\n            timeout: 5000,\n            beforeSend: function(xhrObj) {\n                // (size - 1) because range is inclusive.\n                xhrObj.setRequestHeader(\"Range\", \"bytes=\" + start + \"-\" + (start + (size - 1)));\n            },\n            xhrFields: {\n                responseType: 'arraybuffer'\n            }\n        });\n    }\n\n    function bwg_readOffset(ba, o) {\n        var offset = ba[o] + ba[o+1]*M1 + ba[o+2]*M2 + ba[o+3]*M3 + ba[o+4]*M4;\n        return offset;\n    }\n\n    function BigWig() {\n    }\n\n    /**\n     * Read the chromosome B+ tree header.\n     */\n    BigWig.prototype.readChromTree = function() {\n        var thisB = this;\n        this.chromsToIDs = {};\n        this.idsToChroms = {};\n        this.maxID = 0;\n\n        var udo = this.unzoomedDataOffset;\n        var eb = (udo - this.chromTreeOffset) & 3;\n        udo = udo + 4 - eb;\n\n        // Read and parse the chrom tree, return the promise so that subsequent actions can be taken.\n        return $.when(read(this.url, this.chromTreeOffset, udo - this.chromTreeOffset)).then(function(bpt) {\n            var ba = new Uint8Array(bpt);\n            var sa = new Int16Array(bpt);\n            var la = new Int32Array(bpt);\n            var bptMagic = la[0];\n            var blockSize = la[1];\n            var keySize = la[2];\n            var valSize = la[3];\n            var itemCount = bwg_readOffset(ba, 16);\n            var rootNodeOffset = 32;\n\n            var bptReadNode = function(offset) {\n                var nodeType = ba[offset];\n                var cnt = sa[(offset/2) + 1];\n                offset += 4;\n                for (var n = 0; n < cnt; ++n) {\n                    if (nodeType === 0) {\n                        offset += keySize;\n                        var childOffset = bwg_readOffset(ba, offset);\n                        offset += 8;\n                        childOffset -= thisB.chromTreeOffset;\n                        bptReadNode(childOffset);\n                    } else {\n                        var key = '';\n                        for (var ki = 0; ki < keySize; ++ki) {\n                            var charCode = ba[offset++];\n                            if (charCode !== 0) {\n                                key += String.fromCharCode(charCode);\n                            }\n                        }\n                        var chromId = (ba[offset+3]<<24) | (ba[offset+2]<<16) | (ba[offset+1]<<8) | (ba[offset+0]);\n                        var chromSize = (ba[offset + 7]<<24) | (ba[offset+6]<<16) | (ba[offset+5]<<8) | (ba[offset+4]);\n                        offset += 8;\n\n                        thisB.chromsToIDs[key] = chromId;\n                        if (key.indexOf('chr') === 0) {\n                            thisB.chromsToIDs[key.substr(3)] = chromId;\n                        }\n                        thisB.idsToChroms[chromId] = key;\n                        thisB.maxID = Math.max(thisB.maxID, chromId);\n                    }\n                }\n            };\n            bptReadNode(rootNodeOffset);\n        });\n    }\n\n    function BigWigView(bwg, cirTreeOffset, cirTreeLength, isSummary) {\n        this.bwg = bwg;\n        this.cirTreeOffset = cirTreeOffset;\n        this.cirTreeLength = cirTreeLength;\n        this.isSummary = isSummary;\n    }\n\n\n\n    BigWigView.prototype.readWigData = function(chrName, min, max) {\n        var chr = this.bwg.chromsToIDs[chrName],\n            rval;\n        if (chr === undefined) {\n            // Not an error because some .bwgs won't have data for all chromosomes.\n            rval = [];\n        } else {\n            rval = this.readWigDataById(chr, min, max);\n        }\n\n        return rval;\n    };\n\n    BigWigView.prototype.readWigDataById = function(chr, min, max) {\n        var thisB = this,\n            promise = $.Deferred();\n\n        // Read the R-tree index header and then read data again.\n        if (!this.cirHeader) {\n            $.when(read(thisB.bwg.url, this.cirTreeOffset, 48)).then(function(result) {\n                thisB.cirHeader = result;\n                var la = new Int32Array(thisB.cirHeader);\n                thisB.cirBlockSize = la[1];\n                $.when(thisB.readWigDataById(chr, min, max)).then(function(result) {\n                    promise.resolve(result);\n                });\n            });\n            return promise;\n        }\n\n        var blocksToFetch = [];\n        var outstanding = 0;\n\n        var beforeBWG = Date.now();\n\n        var filter = function(chromId, fmin, fmax, toks) {\n            return ((chr < 0 || chromId == chr) && fmin <= max && fmax >= min);\n        };\n\n        var cirFobRecur = function(offset, level) {\n            if (thisB.bwg.instrument)\n            console.log('level=' + level + '; offset=' + offset + '; time=' + (Date.now()|0));\n\n            outstanding += offset.length;\n\n            if (offset.length == 1 && offset[0] - thisB.cirTreeOffset == 48 && thisB.cachedCirRoot) {\n                cirFobRecur2(thisB.cachedCirRoot, 0, level);\n                --outstanding;\n                if (outstanding === 0) {\n                    $.when(thisB.fetchFeatures(filter, blocksToFetch)).then(function(result) {\n                        promise.resolve(result);\n                    });\n                }\n                return;\n            }\n\n            var maxCirBlockSpan = 4 +  (thisB.cirBlockSize * 32);   // Upper bound on size, based on a completely full leaf node.\n            var spans;\n            for (var i = 0; i < offset.length; ++i) {\n                var blockSpan = new Range(offset[i], offset[i] + maxCirBlockSpan);\n                spans = spans ? union(spans, blockSpan) : blockSpan;\n            }\n\n            var fetchRanges = spans.ranges();\n            for (var r = 0; r < fetchRanges.length; ++r) {\n                var fr = fetchRanges[r];\n                cirFobStartFetch(offset, fr, level);\n            }\n        };\n\n        var cirFobStartFetch = function(offset, fr, level, attempts) {\n            var length = fr.max() - fr.min();\n            $.when(read(thisB.bwg.url, fr.min(), fr.max() - fr.min())).then(function(resultBuffer) {\n                for (var i = 0; i < offset.length; ++i) {\n                    if (fr.contains(offset[i])) {\n                        cirFobRecur2(resultBuffer, offset[i] - fr.min(), level);\n\n                        if (offset[i] - thisB.cirTreeOffset == 48 && offset[i] - fr.min() === 0)\n                            thisB.cachedCirRoot = resultBuffer;\n\n                        --outstanding;\n                        if (outstanding === 0) {\n                            $.when(thisB.fetchFeatures(filter, blocksToFetch)).then(function(result) {\n                                promise.resolve(result);\n                            });\n                        }\n                    }\n                }\n            });\n        };\n\n        var cirFobRecur2 = function(cirBlockData, offset, level) {\n            var ba = new Uint8Array(cirBlockData);\n            var sa = new Int16Array(cirBlockData);\n            var la = new Int32Array(cirBlockData);\n\n            var isLeaf = ba[offset];\n            var cnt = sa[offset/2 + 1];\n            offset += 4;\n\n            if (isLeaf !== 0) {\n                for (var i = 0; i < cnt; ++i) {\n                    var lo = offset/4;\n                    var startChrom = la[lo];\n                    var startBase = la[lo + 1];\n                    var endChrom = la[lo + 2];\n                    var endBase = la[lo + 3];\n                    var blockOffset = bwg_readOffset(ba, offset+16);\n                    var blockSize = bwg_readOffset(ba, offset+24);\n                    if (((chr < 0 || startChrom < chr) || (startChrom == chr && startBase <= max)) &&\n                    ((chr < 0 || endChrom   > chr) || (endChrom == chr && endBase >= min)))\n                    {\n                        blocksToFetch.push({offset: blockOffset, size: blockSize});\n                    }\n                    offset += 32;\n                }\n            } else {\n                var recurOffsets = [];\n                for (var i = 0; i < cnt; ++i) {\n                    var lo = offset/4;\n                    var startChrom = la[lo];\n                    var startBase = la[lo + 1];\n                    var endChrom = la[lo + 2];\n                    var endBase = la[lo + 3];\n                    var blockOffset = bwg_readOffset(ba, offset+16);\n                    if ((chr < 0 || startChrom < chr || (startChrom == chr && startBase <= max)) &&\n                    (chr < 0 || endChrom   > chr || (endChrom == chr && endBase >= min)))\n                    {\n                        recurOffsets.push(blockOffset);\n                    }\n                    offset += 24;\n                }\n                if (recurOffsets.length > 0) {\n                    cirFobRecur(recurOffsets, level + 1);\n                }\n            }\n        };\n\n        cirFobRecur([thisB.cirTreeOffset + 48], 1);\n        return promise;\n    };\n\n    /**\n     * Fetch data for a set of blocks. Returns a promise that resolves to fetched data.\n     */\n    BigWigView.prototype.fetchFeatures = function(filter, blocksToFetch) {\n        var thisB = this,\n            promise = $.Deferred();\n\n        blocksToFetch.sort(function(b0, b1) {\n            return (b0.offset|0) - (b1.offset|0);\n        });\n\n        if (blocksToFetch.length === 0) {\n            return [];\n        } else {\n            var features = [];\n            var createFeature = function(chr, fmin, fmax, opts) {\n                if (!opts) {\n                    opts = {};\n                }\n\n                var f = new DASFeature();\n                f._chromId = chr;\n                f.segment = thisB.bwg.idsToChroms[chr];\n                f.min = fmin;\n                f.max = fmax;\n                f.type = thisB.bwg.type;\n\n                for (var k in opts) {\n                    f[k] = opts[k];\n                }\n\n                features.push(f);\n            };\n\n            // Recursive function to read blocks of data.\n            var tramp = function() {\n                if (blocksToFetch.length === 0) {\n                    var afterBWG = Date.now();\n                    // dlog('BWG fetch took ' + (afterBWG - beforeBWG) + 'ms');\n                    return promise.resolve(features);\n                }\n                else {\n                    var block = blocksToFetch[0];\n                    if (block.data) {\n                        thisB.parseFeatures(block.data, createFeature, filter);\n                        blocksToFetch.splice(0, 1);\n                        tramp();\n                    }\n                    else {\n                        var fetchStart = block.offset;\n                        var fetchSize = block.size;\n                        var bi = 1;\n                        while (bi < blocksToFetch.length && blocksToFetch[bi].offset == (fetchStart + fetchSize)) {\n                            fetchSize += blocksToFetch[bi].size;\n                            ++bi;\n                        }\n\n                        $.when(read(thisB.bwg.url, fetchStart, fetchSize)).then(function(result) {\n                            var offset = 0;\n                            var bi = 0;\n                            while (offset < fetchSize) {\n                                var fb = blocksToFetch[bi];\n\n                                var data;\n                                if (thisB.bwg.uncompressBufSize > 0) {\n                                    data = jszlib_inflate_buffer(result, offset + 2, fb.size - 2);\n                                } else {\n                                    var tmp = new Uint8Array(fb.size);    // FIXME is this really the best we can do?\n                                    arrayCopy(new Uint8Array(result, offset, fb.size), 0, tmp, 0, fb.size);\n                                    data = tmp.buffer;\n                                }\n                                fb.data = data;\n\n                                offset += fb.size;\n                                ++bi;\n                            }\n                            tramp();\n                        });\n                    }\n                }\n            };\n            tramp();\n        }\n\n        return promise;\n    };\n\n    BigWigView.prototype.parseFeatures = function(data, createFeature, filter) {\n        var ba = new Uint8Array(data);\n\n        if (this.isSummary) {\n            var sa = new Int16Array(data);\n            var la = new Int32Array(data);\n            var fa = new Float32Array(data);\n\n            var itemCount = data.byteLength/32;\n            for (var i = 0; i < itemCount; ++i) {\n                var chromId =   la[(i*8)];\n                var start =     la[(i*8)+1];\n                var end =       la[(i*8)+2];\n                var validCnt =  la[(i*8)+3];\n                var minVal    = fa[(i*8)+4];\n                var maxVal    = fa[(i*8)+5];\n                var sumData   = fa[(i*8)+6];\n                var sumSqData = fa[(i*8)+7];\n\n                if (filter(chromId, start + 1, end)) {\n                    var summaryOpts = {type: 'bigwig', score: sumData/validCnt, maxScore: maxVal};\n                    if (this.bwg.type == 'bigbed') {\n                        summaryOpts.type = 'density';\n                    }\n                    createFeature(chromId, start + 1, end, summaryOpts);\n                }\n            }\n        }\n        else if (this.bwg.type == 'bigwig') {\n            var sa = new Int16Array(data);\n            var la = new Int32Array(data);\n            var fa = new Float32Array(data);\n\n            var chromId = la[0];\n            var blockStart = la[1];\n            var blockEnd = la[2];\n            var itemStep = la[3];\n            var itemSpan = la[4];\n            var blockType = ba[20];\n            var itemCount = sa[11];\n\n            if (blockType == BIG_WIG_TYPE_FSTEP) {\n                for (var i = 0; i < itemCount; ++i) {\n                    var score = fa[i + 6];\n                    var fmin = blockStart + (i*itemStep) + 1, fmax = blockStart + (i*itemStep) + itemSpan;\n                    if (filter(chromId, fmin, fmax))\n                    createFeature(chromId, fmin, fmax, {score: score});\n                }\n            } else if (blockType == BIG_WIG_TYPE_VSTEP) {\n                for (var i = 0; i < itemCount; ++i) {\n                    var start = la[(i*2) + 6] + 1;\n                    var end = start + itemSpan - 1;\n                    var score = fa[(i*2) + 7];\n                    if (filter(chromId, start, end))\n                    createFeature(chromId, start, end, {score: score});\n                }\n            } else if (blockType == BIG_WIG_TYPE_GRAPH) {\n                for (var i = 0; i < itemCount; ++i) {\n                    var start = la[(i*3) + 6] + 1;\n                    var end   = la[(i*3) + 7];\n                    var score = fa[(i*3) + 8];\n                    if (start > end) {\n                        start = end;\n                    }\n                    if (filter(chromId, start, end))\n                    createFeature(chromId, start, end, {score: score});\n                }\n            } else {\n                console.log('Currently not handling bwgType=' + blockType);\n            }\n        } else if (this.bwg.type == 'bigbed') {\n            var offset = 0;\n            var dfc = this.bwg.definedFieldCount;\n            var schema = this.bwg.schema;\n\n            while (offset < ba.length) {\n                var chromId = (ba[offset+3]<<24) | (ba[offset+2]<<16) | (ba[offset+1]<<8) | (ba[offset+0]);\n                var start = (ba[offset+7]<<24) | (ba[offset+6]<<16) | (ba[offset+5]<<8) | (ba[offset+4]);\n                var end = (ba[offset+11]<<24) | (ba[offset+10]<<16) | (ba[offset+9]<<8) | (ba[offset+8]);\n                offset += 12;\n                var rest = '';\n                while (true) {\n                    var ch = ba[offset++];\n                    if (ch != 0) {\n                        rest += String.fromCharCode(ch);\n                    } else {\n                        break;\n                    }\n                }\n\n                var featureOpts = {};\n\n                var bedColumns;\n                if (rest.length > 0) {\n                    bedColumns = rest.split('\\t');\n                } else {\n                    bedColumns = [];\n                }\n                if (bedColumns.length > 0 && dfc > 3) {\n                    featureOpts.label = bedColumns[0];\n                }\n                if (bedColumns.length > 1 && dfc > 4) {\n                    var score = parseInt(bedColumns[1]);\n                    if (!isNaN(score))\n                    featureOpts.score = score;\n                }\n                if (bedColumns.length > 2 && dfc > 5) {\n                    featureOpts.orientation = bedColumns[2];\n                }\n                if (bedColumns.length > 5 && dfc > 8) {\n                    var color = bedColumns[5];\n                    if (BED_COLOR_REGEXP.test(color)) {\n                        featureOpts.itemRgb = 'rgb(' + color + ')';\n                    }\n                }\n\n                if (bedColumns.length > dfc-3 && schema) {\n                    for (var col = dfc - 3; col < bedColumns.length; ++col) {\n                        featureOpts[schema.fields[col+3].name] = bedColumns[col];\n                    }\n                }\n\n                if (filter(chromId, start + 1, end, bedColumns)) {\n                    if (dfc < 12) {\n                        createFeature(chromId, start + 1, end, featureOpts);\n                    } else {\n                        // TODO: add block starts, sizes, thick start, thick end to feature.\n                        var thickStart = bedColumns[3]|0;\n                        var thickEnd   = bedColumns[4]|0;\n                        var blockCount = bedColumns[6]|0;\n                        var blockSizes = bedColumns[7].split(',');\n                        var blockStarts = bedColumns[8].split(',');\n\n                        if (featureOpts.exonFrames) {\n                            var exonFrames = featureOpts.exonFrames.split(',');\n                            featureOpts.exonFrames = undefined;\n                        }\n\n                        featureOpts.type = 'transcript'\n                        var grp = new DASGroup();\n                        for (var k in featureOpts) {\n                            grp[k] = featureOpts[k];\n                        }\n                        grp.id = bedColumns[0];\n                        grp.segment = this.bwg.idsToChroms[chromId];\n                        grp.min = start + 1;\n                        grp.max = end;\n                        grp.notes = [];\n                        featureOpts.groups = [grp];\n\n                        // Moving towards using bigGenePred model, but will\n                        // still support old Dalliance-style BED12+gene-name for the\n                        // foreseeable future.\n                        if (bedColumns.length > 9) {\n                            var geneId = featureOpts.geneName || bedColumns[9];\n                            var geneName = geneId;\n                            if (bedColumns.length > 10) {\n                                geneName = bedColumns[10];\n                            }\n                            if (featureOpts.geneName2)\n                            geneName = featureOpts.geneName2;\n\n                            var gg = $.extend({}, grp);\n                            gg.id = geneId;\n                            gg.label = geneName;\n                            gg.type = 'gene';\n                            featureOpts.groups.push(gg);\n                        }\n\n                        var spanList = [];\n                        for (var b = 0; b < blockCount; ++b) {\n                            var bmin = (blockStarts[b]|0) + start;\n                            var bmax = bmin + (blockSizes[b]|0);\n                            var span = new Range(bmin, bmax);\n                            spanList.push(span);\n                        }\n                        var spans = union(spanList);\n\n                        var tsList = spans.ranges();\n                        for (var s = 0; s < tsList.length; ++s) {\n                            var ts = tsList[s];\n                            createFeature(chromId, ts.min() + 1, ts.max(), featureOpts);\n                        }\n\n                        if (thickEnd > thickStart) {\n                            var codingRegion = (featureOpts.orientation == '+') ?\n                            new Range(thickStart, thickEnd + 3) :\n                            new Range(thickStart - 3, thickEnd);\n                            // +/- 3 to account for stop codon\n\n                            var tl = intersection(spans, codingRegion);\n                            if (tl) {\n                                featureOpts.type = 'translation';\n                                var tlList = tl.ranges();\n                                var readingFrame = 0;\n\n                                var tlOffset = 0;\n                                while (tlList[0].min() > tsList[tlOffset].max())\n                                tlOffset++;\n\n                                for (var s = 0; s < tlList.length; ++s) {\n                                    // Record reading frame for every exon\n                                    var index = s;\n                                    if (featureOpts.orientation == '-')\n                                    index = tlList.length - s - 1;\n                                    var ts = tlList[index];\n                                    featureOpts.readframe = readingFrame;\n                                    if (exonFrames) {\n                                        var brf = parseInt(exonFrames[index + tlOffset]);\n                                        if (typeof(brf) === 'number' && brf >= 0 && brf <= 2) {\n                                            featureOpts.readframe = brf;\n                                            featureOpts.readframeExplicit = true;\n                                        }\n                                    }\n                                    var length = ts.max() - ts.min();\n                                    readingFrame = (readingFrame + length) % 3;\n                                    createFeature(chromId, ts.min() + 1, ts.max(), featureOpts);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } else {\n            throw Error(\"Don't know what to do with \" + this.bwg.type);\n        }\n    }\n\n    //\n    // nasty cut/paste, should roll back in!\n    //\n\n    BigWigView.prototype.getFirstAdjacent = function(chrName, pos, dir, callback) {\n        var chr = this.bwg.chromsToIDs[chrName];\n        if (chr === undefined) {\n            // Not an error because some .bwgs won't have data for all chromosomes.\n            return callback([]);\n        } else {\n            this.getFirstAdjacentById(chr, pos, dir, callback);\n        }\n    }\n\n    BigWigView.prototype.getFirstAdjacentById = function(chr, pos, dir, callback) {\n        var thisB = this;\n        if (!this.cirHeader) {\n            this.bwg.data.slice(this.cirTreeOffset, 48).fetch(function(result) {\n                thisB.cirHeader = result;\n                var la = new Int32Array(thisB.cirHeader);\n                thisB.cirBlockSize = la[1];\n                thisB.getFirstAdjacentById(chr, pos, dir, callback);\n            });\n            return;\n        }\n\n        var blockToFetch = null;\n        var bestBlockChr = -1;\n        var bestBlockOffset = -1;\n\n        var outstanding = 0;\n\n        var beforeBWG = Date.now();\n\n        var cirFobRecur = function(offset, level) {\n            outstanding += offset.length;\n\n            var maxCirBlockSpan = 4 +  (thisB.cirBlockSize * 32);   // Upper bound on size, based on a completely full leaf node.\n            var spans;\n            for (var i = 0; i < offset.length; ++i) {\n                var blockSpan = new Range(offset[i], offset[i] + maxCirBlockSpan);\n                spans = spans ? union(spans, blockSpan) : blockSpan;\n            }\n\n            var fetchRanges = spans.ranges();\n            for (var r = 0; r < fetchRanges.length; ++r) {\n                var fr = fetchRanges[r];\n                cirFobStartFetch(offset, fr, level);\n            }\n        }\n\n        var cirFobStartFetch = function(offset, fr, level, attempts) {\n            var length = fr.max() - fr.min();\n            thisB.bwg.data.slice(fr.min(), fr.max() - fr.min()).fetch(function(resultBuffer) {\n                for (var i = 0; i < offset.length; ++i) {\n                    if (fr.contains(offset[i])) {\n                        cirFobRecur2(resultBuffer, offset[i] - fr.min(), level);\n                        --outstanding;\n                        if (outstanding == 0) {\n                            if (!blockToFetch) {\n                                if (dir > 0 && (chr != 0 || pos > 0)) {\n                                    return thisB.getFirstAdjacentById(0, 0, dir, callback);\n                                } else if (dir < 0 && (chr != thisB.bwg.maxID || pos < 1000000000)) {\n                                    return thisB.getFirstAdjacentById(thisB.bwg.maxID, 1000000000, dir, callback);\n                                }\n                                return callback([]);\n                            }\n\n                            thisB.fetchFeatures(function(chrx, fmin, fmax, toks) {\n                                return (dir < 0 && (chrx < chr || fmax < pos)) || (dir > 0 && (chrx > chr || fmin > pos));\n                            }, [blockToFetch], function(features) {\n                                var bestFeature = null;\n                                var bestChr = -1;\n                                var bestPos = -1;\n                                for (var fi = 0; fi < features.length; ++fi) {\n                                    var f = features[fi];\n                                    var chrx = f._chromId, fmin = f.min, fmax = f.max;\n                                    if (bestFeature == null || ((dir < 0) && (chrx > bestChr || fmax > bestPos)) || ((dir > 0) && (chrx < bestChr || fmin < bestPos))) {\n                                        bestFeature = f;\n                                        bestPos = (dir < 0) ? fmax : fmin;\n                                        bestChr = chrx;\n                                    }\n                                }\n\n                                if (bestFeature != null)\n                                return callback([bestFeature]);\n                                else\n                                return callback([]);\n                            });\n                        }\n                    }\n                }\n            });\n        }\n\n        var cirFobRecur2 = function(cirBlockData, offset, level) {\n            var ba = new Uint8Array(cirBlockData);\n            var sa = new Int16Array(cirBlockData);\n            var la = new Int32Array(cirBlockData);\n\n            var isLeaf = ba[offset];\n            var cnt = sa[offset/2 + 1];\n            offset += 4;\n\n            if (isLeaf != 0) {\n                for (var i = 0; i < cnt; ++i) {\n                    var lo = offset/4;\n                    var startChrom = la[lo];\n                    var startBase = la[lo + 1];\n                    var endChrom = la[lo + 2];\n                    var endBase = la[lo + 3];\n                    var blockOffset = bwg_readOffset(ba, offset+16);\n                    var blockSize = bwg_readOffset(ba, offset+24);\n                    if ((dir < 0 && ((startChrom < chr || (startChrom == chr && startBase <= pos)))) ||\n                    (dir > 0 && ((endChrom > chr || (endChrom == chr && endBase >= pos)))))\n                    {\n                        // console.log('Got an interesting block: startBase=' + startChrom + ':' + startBase + '; endBase=' + endChrom + ':' + endBase + '; offset=' + blockOffset + '; size=' + blockSize);\n                        if (/_random/.exec(thisB.bwg.idsToChroms[startChrom])) {\n                            // dlog('skipping random: ' + thisB.bwg.idsToChroms[startChrom]);\n                        } else if (blockToFetch == null || ((dir < 0) && (endChrom > bestBlockChr || (endChrom == bestBlockChr && endBase > bestBlockOffset)) ||\n                        (dir > 0) && (startChrom < bestBlockChr || (startChrom == bestBlockChr && startBase < bestBlockOffset))))\n                        {\n                            //                        dlog('best is: startBase=' + startChrom + ':' + startBase + '; endBase=' + endChrom + ':' + endBase + '; offset=' + blockOffset + '; size=' + blockSize);\n                            blockToFetch = {offset: blockOffset, size: blockSize};\n                            bestBlockOffset = (dir < 0) ? endBase : startBase;\n                            bestBlockChr = (dir < 0) ? endChrom : startChrom;\n                        }\n                    }\n                    offset += 32;\n                }\n            } else {\n                var bestRecur = -1;\n                var bestPos = -1;\n                var bestChr = -1;\n                for (var i = 0; i < cnt; ++i) {\n                    var lo = offset/4;\n                    var startChrom = la[lo];\n                    var startBase = la[lo + 1];\n                    var endChrom = la[lo + 2];\n                    var endBase = la[lo + 3];\n                    var blockOffset = (la[lo + 4]<<32) | (la[lo + 5]);\n                    if ((dir < 0 && ((startChrom < chr || (startChrom == chr && startBase <= pos)) &&\n                    (endChrom   >= chr))) ||\n                    (dir > 0 && ((endChrom > chr || (endChrom == chr && endBase >= pos)) &&\n                    (startChrom <= chr))))\n                    {\n                        if (bestRecur < 0 || endBase > bestPos) {\n                            bestRecur = blockOffset;\n                            bestPos = (dir < 0) ? endBase : startBase;\n                            bestChr = (dir < 0) ? endChrom : startChrom;\n                        }\n                    }\n                    offset += 24;\n                }\n                if (bestRecur >= 0) {\n                    cirFobRecur([bestRecur], level + 1);\n                }\n            }\n        };\n\n\n        cirFobRecur([thisB.cirTreeOffset + 48], 1);\n    }\n\n    /**\n    * Automatically choose a zoom level and return data from that level.\n    */\n    BigWig.prototype.readWigData = function(chrName, min, max) {\n        // Maximum number of data points to return when reading a bigwig. This is used\n        // to choose the appropriate level. One data point ~= 25-65 bytes.\n        // FIXME: For targeted sequencing, data points returned is going to be much lower,\n        // so this will need to be tuned appropriately.\n        var MAX_DATA_POINTS = 25000;\n\n        var range = max - min,\n        view;\n        // If no zooming needed or available (common in bigbed), use unzoomed view.\n        if (range <= MAX_DATA_POINTS || this.zoomLevels.length === 0) {\n            view = this.getUnzoomedView();\n        }\n        else {\n            // Find reasonable zoom level. Reduction is the # of bases represented\n            // by each data point at that level.\n            for (var i = 0; i < this.zoomLevels.length; i++) {\n                if (range/this.zoomLevels[i].reduction < MAX_DATA_POINTS) {\n                    view = this.getZoomedView(i);\n                    break;\n                }\n            }\n        }\n\n        return view.readWigData(chrName, min, max);\n    }\n\n    BigWig.prototype.getUnzoomedView = function() {\n        if (!this.unzoomedView) {\n            var cirLen = 4000;\n            var nzl = this.zoomLevels[0];\n            if (nzl) {\n                cirLen = this.zoomLevels[0].dataOffset - this.unzoomedIndexOffset;\n            }\n            this.unzoomedView = new BigWigView(this, this.unzoomedIndexOffset, cirLen, false);\n        }\n        return this.unzoomedView;\n    }\n\n    BigWig.prototype.getZoomedView = function(z) {\n        var zh = this.zoomLevels[z];\n        if (!zh.view) {\n            zh.view = new BigWigView(this, zh.indexOffset, /* this.zoomLevels[z + 1].dataOffset - zh.indexOffset */ 4000, true);\n        }\n        return zh.view;\n    }\n\n    /**\n     * Create a BigWig object using a URL to a bigwig/bigbed file. Returns a promise\n     * that resolves to the object when it's available.\n     */\n    function makeBwg(url) {\n        var promise = $.Deferred(),\n        bwg = new BigWig();\n        bwg.url = url;\n\n        // Read and parse bigwig header, including chrom tree.\n        $.when(read(bwg.url, 0, 512)).then(function(result) {\n            if (!result) {\n                return promise.resolve(null, \"Couldn't fetch file\");\n            }\n\n            var header = result;\n            var ba = new Uint8Array(header);\n            var sa = new Int16Array(header);\n            var la = new Int32Array(header);\n            var magic = ba[0] + (M1 * ba[1]) + (M2 * ba[2]) + (M3 * ba[3]);\n            if (magic == BIG_WIG_MAGIC) {\n                bwg.type = 'bigwig';\n            } else if (magic == BIG_BED_MAGIC) {\n                bwg.type = 'bigbed';\n            } else if (magic == BIG_WIG_MAGIC_BE || magic == BIG_BED_MAGIC_BE) {\n                return promise.resolve(null, \"Currently don't support big-endian BBI files\");\n\n            } else {\n                return promise.resolve(null, \"Not a supported format, magic=0x\" + magic.toString(16));\n\n            }\n\n            bwg.version = sa[2];             // 4\n            bwg.numZoomLevels = sa[3];       // 6\n            bwg.chromTreeOffset = bwg_readOffset(ba, 8);\n            bwg.unzoomedDataOffset = bwg_readOffset(ba, 16);\n            bwg.unzoomedIndexOffset = bwg_readOffset(ba, 24);\n            bwg.fieldCount = sa[16];         // 32\n            bwg.definedFieldCount = sa[17];  // 34\n            bwg.asOffset = bwg_readOffset(ba, 36);\n            bwg.totalSummaryOffset = bwg_readOffset(ba, 44);\n            bwg.uncompressBufSize = la[13];  // 52\n            bwg.extHeaderOffset = bwg_readOffset(ba, 56);\n\n            bwg.zoomLevels = [];\n            for (var zl = 0; zl < bwg.numZoomLevels; ++zl) {\n                var zlReduction = la[zl*6 + 16]\n                var zlData = bwg_readOffset(ba, zl*24 + 72);\n                var zlIndex = bwg_readOffset(ba, zl*24 + 80);\n                bwg.zoomLevels.push({reduction: zlReduction, dataOffset: zlData, indexOffset: zlIndex});\n            }\n\n            $.when(bwg.readChromTree()).then(function() {\n                bwg.getAutoSQL(function(as) {\n                    bwg.schema = as;\n                    return promise.resolve(bwg);\n                });\n            });\n        });\n\n        return promise;\n    }\n\n\n    BigWig.prototype._tsFetch = function(zoom, chr, min, max, callback) {\n        var bwg = this;\n        if (zoom >= this.zoomLevels.length - 1) {\n            if (!this.topLevelReductionCache) {\n                this.getZoomedView(this.zoomLevels.length - 1).readWigDataById(-1, 0, 300000000, function(feats) {\n                    bwg.topLevelReductionCache = feats;\n                    return bwg._tsFetch(zoom, chr, min, max, callback);\n                });\n            } else {\n                var f = [];\n                var c = this.topLevelReductionCache;\n                for (var fi = 0; fi < c.length; ++fi) {\n                    if (c[fi]._chromId == chr) {\n                        f.push(c[fi]);\n                    }\n                }\n                return callback(f);\n            }\n        } else {\n            var view;\n            if (zoom < 0) {\n                view = this.getUnzoomedView();\n            } else {\n                view = this.getZoomedView(zoom);\n            }\n            return view.readWigDataById(chr, min, max, callback);\n        }\n    }\n\n    BigWig.prototype.thresholdSearch = function(chrName, referencePoint, dir, threshold, callback) {\n        dir = (dir<0) ? -1 : 1;\n        var bwg = this;\n        var initialChr = this.chromsToIDs[chrName];\n        var candidates = [{chrOrd: 0, chr: initialChr, zoom: bwg.zoomLevels.length - 4, min: 0, max: 300000000, fromRef: true}]\n        for (var i = 1; i <= this.maxID + 1; ++i) {\n            var chrId = (initialChr + (dir*i)) % (this.maxID + 1);\n            if (chrId < 0)\n            chrId += (this.maxID + 1);\n            candidates.push({chrOrd: i, chr: chrId, zoom: bwg.zoomLevels.length - 1, min: 0, max: 300000000})\n        }\n\n        function fbThresholdSearchRecur() {\n            if (candidates.length == 0) {\n                return callback(null);\n            }\n            candidates.sort(function(c1, c2) {\n                var d = c1.zoom - c2.zoom;\n                if (d != 0)\n                return d;\n\n                d = c1.chrOrd - c2.chrOrd;\n                if (d != 0)\n                return d;\n                else\n                return c1.min - c2.min * dir;\n            });\n\n            var candidate = candidates.splice(0, 1)[0];\n            bwg._tsFetch(candidate.zoom, candidate.chr, candidate.min, candidate.max, function(feats) {\n                var rp = dir > 0 ? 0 : 300000000;\n                if (candidate.fromRef)\n                rp = referencePoint;\n\n                for (var fi = 0; fi < feats.length; ++fi) {\n                    var f = feats[fi];\n                    var score;\n                    if (f.maxScore != undefined)\n                    score = f.maxScore;\n                    else\n                    score = f.score;\n\n                    if (dir > 0) {\n                        if (score > threshold) {\n                            if (candidate.zoom < 0) {\n                                if (f.min > rp)\n                                return callback(f);\n                            } else if (f.max > rp) {\n                                candidates.push({chr: candidate.chr, chrOrd: candidate.chrOrd, zoom: candidate.zoom - 2, min: f.min, max: f.max, fromRef: candidate.fromRef});\n                            }\n                        }\n                    } else {\n                        if (score > threshold) {\n                            if (candidate.zoom < 0) {\n                                if (f.max < rp)\n                                return callback(f);\n                            } else if (f.min < rp) {\n                                candidates.push({chr: candidate.chr, chrOrd: candidate.chrOrd, zoom: candidate.zoom - 2, min: f.min, max: f.max, fromRef: candidate.fromRef});\n                            }\n                        }\n                    }\n                }\n                fbThresholdSearchRecur();\n            });\n        }\n\n        fbThresholdSearchRecur();\n    }\n\n    BigWig.prototype.getAutoSQL = function(callback) {\n        var thisB = this;\n        if (!this.asOffset)\n        return callback(null);\n\n        $.when(read(this.url, this.asOffset, 2048)).then(function(result) {\n            var ba = new Uint8Array(result);\n            var s = '';\n            for (var i = 0; i < ba.length; ++i) {\n                if (ba[i] == 0)\n                break;\n                s += String.fromCharCode(ba[i]);\n            }\n\n            /*\n            * Quick'n'dirty attempt to parse autoSql format.\n            * See: http://www.linuxjournal.com/files/linuxjournal.com/linuxjournal/articles/059/5949/5949l2.html\n            */\n\n            var header_re = /(\\w+)\\s+(\\w+)\\s+(\"([^\"]+)\")?\\s+\\(\\s*/;\n                var field_re = /([\\w\\[\\]]+)\\s+(\\w+)\\s*;\\s*(\"([^\"]+)\")?\\s*/g;\n\n            var headerMatch = header_re.exec(s);\n            if (headerMatch) {\n                var as = {\n                    declType: headerMatch[1],\n                    name: headerMatch[2],\n                    comment: headerMatch[4],\n\n                    fields: []\n                };\n\n                s = s.substring(headerMatch[0]);\n                for (var m = field_re.exec(s); m != null; m = field_re.exec(s)) {\n                    as.fields.push({type: m[1],\n                        name: m[2],\n                        comment: m[4]});\n                    }\n\n                    return callback(as);\n                }\n        });\n    };\n\n    BigWig.prototype.getExtraIndices = function(callback) {\n        var thisB = this;\n        if (this.version < 4 || this.extHeaderOffset == 0 || this.type != 'bigbed') {\n            return callback(null);\n        } else {\n            this.data.slice(this.extHeaderOffset, 64).fetch(function(result) {\n                if (!result) {\n                    return callback(null, \"Couldn't fetch extension header\");\n                }\n\n                var ba = new Uint8Array(result);\n                var sa = new Int16Array(result);\n                var la = new Int32Array(result);\n\n                var extHeaderSize = sa[0];\n                var extraIndexCount = sa[1];\n                var extraIndexListOffset = bwg_readOffset(ba, 4);\n\n                if (extraIndexCount == 0) {\n                    return callback(null);\n                }\n\n                // FIXME 20byte records only make sense for single-field indices.\n                // Right now, these seem to be the only things around, but the format\n                // is actually more general.\n                thisB.data.slice(extraIndexListOffset, extraIndexCount * 20).fetch(function(eil) {\n                    if (!eil) {\n                        return callback(null, \"Couldn't fetch index info\");\n                    }\n\n                    var ba = new Uint8Array(eil);\n                    var sa = new Int16Array(eil);\n                    var la = new Int32Array(eil);\n\n                    var indices = [];\n                    for (var ii = 0; ii < extraIndexCount; ++ii) {\n                        var eiType = sa[ii*10];\n                        var eiFieldCount = sa[ii*10 + 1];\n                        var eiOffset = bwg_readOffset(ba, ii*20 + 4);\n                        var eiField = sa[ii*10 + 8]\n                        var index = new BBIExtraIndex(thisB, eiType, eiFieldCount, eiOffset, eiField);\n                        indices.push(index);\n                    }\n                    callback(indices);\n                });\n            });\n        }\n    }\n\n    function BBIExtraIndex(bbi, type, fieldCount, offset, field) {\n        this.bbi = bbi;\n        this.type = type;\n        this.fieldCount = fieldCount;\n        this.offset = offset;\n        this.field = field;\n    }\n\n    BBIExtraIndex.prototype.lookup = function(name, callback) {\n        var thisB = this;\n\n        this.bbi.data.slice(this.offset, 32).fetch(function(bpt) {\n            var ba = new Uint8Array(bpt);\n            var sa = new Int16Array(bpt);\n            var la = new Int32Array(bpt);\n            var bptMagic = la[0];\n            var blockSize = la[1];\n            var keySize = la[2];\n            var valSize = la[3];\n            var itemCount = bwg_readOffset(ba, 16);\n            var rootNodeOffset = 32;\n\n            function bptReadNode(nodeOffset) {\n                thisB.bbi.data.slice(nodeOffset, 4 + (blockSize * (keySize + valSize))).fetch(function(node) {\n                    var ba = new Uint8Array(node);\n                    var sa = new Uint16Array(node);\n                    var la = new Uint32Array(node);\n\n                    var nodeType = ba[0];\n                    var cnt = sa[1];\n\n                    var offset = 4;\n                    if (nodeType == 0) {\n                        var lastChildOffset = null;\n                        for (var n = 0; n < cnt; ++n) {\n                            var key = '';\n                            for (var ki = 0; ki < keySize; ++ki) {\n                                var charCode = ba[offset++];\n                                if (charCode != 0) {\n                                    key += String.fromCharCode(charCode);\n                                }\n                            }\n\n                            var childOffset = bwg_readOffset(ba, offset);\n                            offset += 8;\n\n                            if (name.localeCompare(key) < 0 && lastChildOffset) {\n                                bptReadNode(lastChildOffset);\n                                return;\n                            }\n                            lastChildOffset = childOffset;\n                        }\n                        bptReadNode(lastChildOffset);\n                    } else {\n                        for (var n = 0; n < cnt; ++n) {\n                            var key = '';\n                            for (var ki = 0; ki < keySize; ++ki) {\n                                var charCode = ba[offset++];\n                                if (charCode != 0) {\n                                    key += String.fromCharCode(charCode);\n                                }\n                            }\n\n                            // Specific for EI case.\n                            if (key == name) {\n                                var start = bwg_readOffset(ba, offset);\n                                var length = readInt(ba, offset + 8);\n\n                                return thisB.bbi.getUnzoomedView().fetchFeatures(\n                                    function(chr, min, max, toks) {\n                                        if (toks && toks.length > thisB.field - 3)\n                                        return toks[thisB.field - 3] == name;\n                                    },\n                                    [{offset: start, size: length}],\n                                    callback);\n                                }\n                                offset += valSize;\n                            }\n                            return callback([]);\n                        }\n                    });\n                }\n\n                bptReadNode(thisB.offset + rootNodeOffset);\n        });\n    }\n\n    return {\n        makeBwg: makeBwg\n    };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n//\n// Dalliance Genome Explorer\n// (c) Thomas Down 2006-2010\n//\n// spans.js: JavaScript Intset/Location port.\n//\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\n\"use strict\";\n\n\nfunction Range(min, max)\n{\n    if (typeof(min) != 'number' || typeof(max) != 'number')\n        throw 'Bad range ' + min + ',' + max;\n    this._min = min;\n    this._max = max;\n}\n\nRange.prototype.min = function() {\n    return this._min;\n}\n\nRange.prototype.max = function() {\n    return this._max;\n}\n\nRange.prototype.contains = function(pos) {\n    return pos >= this._min && pos <= this._max;\n}\n\nRange.prototype.isContiguous = function() {\n    return true;\n}\n\nRange.prototype.ranges = function() {\n    return [this];\n}\n\nRange.prototype._pushRanges = function(ranges) {\n    ranges.push(this);\n}\n\nRange.prototype.toString = function() {\n    return '[' + this._min + '-' + this._max + ']';\n}\n\nfunction _Compound(ranges) {\n    // given: a set of unsorted possibly overlapping ranges\n    // sort the input ranges\n    var sorted = ranges.sort(_rangeOrder);\n    // merge overlaps between adjacent ranges\n    var merged = [];\n    var current = sorted.shift();\n    sorted.forEach(function(range) {\n        if (range._min <= current._max) {\n            if (range._max > current._max) {\n                current._max = range._max;\n            }\n        }\n        else {\n            merged.push(current);\n            current = range;\n        }\n    });\n    merged.push(current);\n    this._ranges = merged;\n}\n\n_Compound.prototype.min = function() {\n    return this._ranges[0].min();\n}\n\n_Compound.prototype.max = function() {\n    return this._ranges[this._ranges.length - 1].max();\n}\n\n// returns the index of the first range that is not less than pos\n_Compound.prototype.lower_bound = function(pos) {\n    // first check if pos is out of range\n    var r = this.ranges();\n    if (pos > this.max()) return r.length;\n    if (pos < this.min()) return 0;\n    // do a binary search\n    var a=0, b=r.length - 1;\n    while (a <= b) {\n        var m = Math.floor((a+b)/2);\n        if (pos > r[m]._max) {\n            a = m+1;\n        }\n        else if (pos < r[m]._min) {\n            b = m-1;\n        }\n        else {\n            return m;\n        }\n    }\n    return a;\n}\n\n_Compound.prototype.contains = function(pos) {\n    var lb = this.lower_bound(pos);\n    if (lb < this._ranges.length && this._ranges[lb].contains(pos)) {\n        return true;\n    }\n    return false;\n}\n\n_Compound.prototype.insertRange = function(range) {\n    var lb = this.lower_bound(range._min);\n    if (lb === this._ranges.length) { // range follows this\n        this._ranges.push(range);\n        return;\n    }\n\n    var r = this.ranges();\n    if (range._max < r[lb]._min) { // range preceeds lb\n        this._ranges.splice(lb,0,range);\n        return;\n    }\n\n    // range overlaps lb (at least)\n    if (r[lb]._min < range._min) range._min = r[lb]._min;\n    var ub = lb+1;\n    while (ub < r.length && r[ub]._min <= range._max) {\n        ub++;\n    }\n    ub--;\n    // ub is the upper bound of the new range\n    if (r[ub]._max > range._max) range._max = r[ub]._max;\n\n    // splice range into this._ranges\n    this._ranges.splice(lb,ub-lb+1,range);\n    return;\n}\n\n_Compound.prototype.isContiguous = function() {\n    return this._ranges.length > 1;\n}\n\n_Compound.prototype.ranges = function() {\n    return this._ranges;\n}\n\n_Compound.prototype._pushRanges = function(ranges) {\n    for (var ri = 0; ri < this._ranges.length; ++ri)\n        ranges.push(this._ranges[ri]);\n}\n\n_Compound.prototype.toString = function() {\n    var s = '';\n    for (var r = 0; r < this._ranges.length; ++r) {\n        if (r>0) {\n            s = s + ',';\n        }\n        s = s + this._ranges[r].toString();\n    }\n    return s;\n}\n\nfunction union(s0, s1) {\n    if (! (s0 instanceof _Compound)) {\n        if (! (s0 instanceof Array))\n            s0 = [s0];\n        s0 = new _Compound(s0);\n    }\n\n    if (s1)\n        s0.insertRange(s1);\n\n    return s0;\n}\n\nfunction intersection(s0, s1) {\n    var r0 = s0.ranges();\n    var r1 = s1.ranges();\n    var l0 = r0.length, l1 = r1.length;\n    var i0 = 0, i1 = 0;\n    var or = [];\n\n    while (i0 < l0 && i1 < l1) {\n        var s0 = r0[i0], s1 = r1[i1];\n        var lapMin = Math.max(s0.min(), s1.min());\n        var lapMax = Math.min(s0.max(), s1.max());\n        if (lapMax >= lapMin) {\n            or.push(new Range(lapMin, lapMax));\n        }\n        if (s0.max() > s1.max()) {\n            ++i1;\n        } else {\n            ++i0;\n        }\n    }\n\n    if (or.length == 0) {\n        return null; // FIXME\n    } else if (or.length == 1) {\n        return or[0];\n    } else {\n        return new _Compound(or);\n    }\n}\n\nfunction coverage(s) {\n    var tot = 0;\n    var rl = s.ranges();\n    for (var ri = 0; ri < rl.length; ++ri) {\n        var r = rl[ri];\n        tot += (r.max() - r.min() + 1);\n    }\n    return tot;\n}\n\n\n\nfunction rangeOrder(a, b)\n{\n    if (a.min() < b.min()) {\n        return -1;\n    } else if (a.min() > b.min()) {\n        return 1;\n    } else if (a.max() < b.max()) {\n        return -1;\n    } else if (b.max() > a.max()) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nfunction _rangeOrder(a, b)\n{\n    if (a._min < b._min) {\n        return -1;\n    } else if (a._min > b._min) {\n        return 1;\n    } else if (a._max < b._max) {\n        return -1;\n    } else if (b._max > a._max) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nreturn {\n        Range: Range,\n        union: union,\n        intersection: intersection,\n        coverage: coverage,\n        rangeOver: rangeOrder,\n        _rangeOrder: _rangeOrder\n};\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n//\n// Javascript ZLib\n// By Thomas Down 2010-2011\n//\n// Based very heavily on portions of jzlib (by ymnk@jcraft.com), who in\n// turn credits Jean-loup Gailly and Mark Adler for the original zlib code.\n//\n// inflate.js: ZLib inflate code\n//\n\n//\n// Shared constants\n//\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\nvar MAX_WBITS=15; // 32K LZ77 window\nvar DEF_WBITS=MAX_WBITS;\nvar MAX_MEM_LEVEL=9;\nvar MANY=1440;\nvar BMAX = 15;\n\n// preset dictionary flag in zlib header\nvar PRESET_DICT=0x20;\n\nvar Z_NO_FLUSH=0;\nvar Z_PARTIAL_FLUSH=1;\nvar Z_SYNC_FLUSH=2;\nvar Z_FULL_FLUSH=3;\nvar Z_FINISH=4;\n\nvar Z_DEFLATED=8;\n\nvar Z_OK=0;\nvar Z_STREAM_END=1;\nvar Z_NEED_DICT=2;\nvar Z_ERRNO=-1;\nvar Z_STREAM_ERROR=-2;\nvar Z_DATA_ERROR=-3;\nvar Z_MEM_ERROR=-4;\nvar Z_BUF_ERROR=-5;\nvar Z_VERSION_ERROR=-6;\n\nvar METHOD=0;   // waiting for method byte\nvar FLAG=1;     // waiting for flag byte\nvar DICT4=2;    // four dictionary check bytes to go\nvar DICT3=3;    // three dictionary check bytes to go\nvar DICT2=4;    // two dictionary check bytes to go\nvar DICT1=5;    // one dictionary check byte to go\nvar DICT0=6;    // waiting for inflateSetDictionary\nvar BLOCKS=7;   // decompressing blocks\nvar CHECK4=8;   // four check bytes to go\nvar CHECK3=9;   // three check bytes to go\nvar CHECK2=10;  // two check bytes to go\nvar CHECK1=11;  // one check byte to go\nvar DONE=12;    // finished check, done\nvar BAD=13;     // got an error--stay here\n\nvar inflate_mask = [0x00000000, 0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff, 0x000001ff, 0x000003ff, 0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff];\n\nvar IB_TYPE=0;  // get type bits (3, including end bit)\nvar IB_LENS=1;  // get lengths for stored\nvar IB_STORED=2;// processing stored block\nvar IB_TABLE=3; // get table lengths\nvar IB_BTREE=4; // get bit lengths tree for a dynamic block\nvar IB_DTREE=5; // get length, distance trees for a dynamic block\nvar IB_CODES=6; // processing fixed or dynamic block\nvar IB_DRY=7;   // output remaining window bytes\nvar IB_DONE=8;  // finished last block, done\nvar IB_BAD=9;   // ot a data error--stuck here\n\nvar fixed_bl = 9;\nvar fixed_bd = 5;\n\nvar fixed_tl = [\n    96,7,256, 0,8,80, 0,8,16, 84,8,115,\n    82,7,31, 0,8,112, 0,8,48, 0,9,192,\n    80,7,10, 0,8,96, 0,8,32, 0,9,160,\n    0,8,0, 0,8,128, 0,8,64, 0,9,224,\n    80,7,6, 0,8,88, 0,8,24, 0,9,144,\n    83,7,59, 0,8,120, 0,8,56, 0,9,208,\n    81,7,17, 0,8,104, 0,8,40, 0,9,176,\n    0,8,8, 0,8,136, 0,8,72, 0,9,240,\n    80,7,4, 0,8,84, 0,8,20, 85,8,227,\n    83,7,43, 0,8,116, 0,8,52, 0,9,200,\n    81,7,13, 0,8,100, 0,8,36, 0,9,168,\n    0,8,4, 0,8,132, 0,8,68, 0,9,232,\n    80,7,8, 0,8,92, 0,8,28, 0,9,152,\n    84,7,83, 0,8,124, 0,8,60, 0,9,216,\n    82,7,23, 0,8,108, 0,8,44, 0,9,184,\n    0,8,12, 0,8,140, 0,8,76, 0,9,248,\n    80,7,3, 0,8,82, 0,8,18, 85,8,163,\n    83,7,35, 0,8,114, 0,8,50, 0,9,196,\n    81,7,11, 0,8,98, 0,8,34, 0,9,164,\n    0,8,2, 0,8,130, 0,8,66, 0,9,228,\n    80,7,7, 0,8,90, 0,8,26, 0,9,148,\n    84,7,67, 0,8,122, 0,8,58, 0,9,212,\n    82,7,19, 0,8,106, 0,8,42, 0,9,180,\n    0,8,10, 0,8,138, 0,8,74, 0,9,244,\n    80,7,5, 0,8,86, 0,8,22, 192,8,0,\n    83,7,51, 0,8,118, 0,8,54, 0,9,204,\n    81,7,15, 0,8,102, 0,8,38, 0,9,172,\n    0,8,6, 0,8,134, 0,8,70, 0,9,236,\n    80,7,9, 0,8,94, 0,8,30, 0,9,156,\n    84,7,99, 0,8,126, 0,8,62, 0,9,220,\n    82,7,27, 0,8,110, 0,8,46, 0,9,188,\n    0,8,14, 0,8,142, 0,8,78, 0,9,252,\n    96,7,256, 0,8,81, 0,8,17, 85,8,131,\n    82,7,31, 0,8,113, 0,8,49, 0,9,194,\n    80,7,10, 0,8,97, 0,8,33, 0,9,162,\n    0,8,1, 0,8,129, 0,8,65, 0,9,226,\n    80,7,6, 0,8,89, 0,8,25, 0,9,146,\n    83,7,59, 0,8,121, 0,8,57, 0,9,210,\n    81,7,17, 0,8,105, 0,8,41, 0,9,178,\n    0,8,9, 0,8,137, 0,8,73, 0,9,242,\n    80,7,4, 0,8,85, 0,8,21, 80,8,258,\n    83,7,43, 0,8,117, 0,8,53, 0,9,202,\n    81,7,13, 0,8,101, 0,8,37, 0,9,170,\n    0,8,5, 0,8,133, 0,8,69, 0,9,234,\n    80,7,8, 0,8,93, 0,8,29, 0,9,154,\n    84,7,83, 0,8,125, 0,8,61, 0,9,218,\n    82,7,23, 0,8,109, 0,8,45, 0,9,186,\n    0,8,13, 0,8,141, 0,8,77, 0,9,250,\n    80,7,3, 0,8,83, 0,8,19, 85,8,195,\n    83,7,35, 0,8,115, 0,8,51, 0,9,198,\n    81,7,11, 0,8,99, 0,8,35, 0,9,166,\n    0,8,3, 0,8,131, 0,8,67, 0,9,230,\n    80,7,7, 0,8,91, 0,8,27, 0,9,150,\n    84,7,67, 0,8,123, 0,8,59, 0,9,214,\n    82,7,19, 0,8,107, 0,8,43, 0,9,182,\n    0,8,11, 0,8,139, 0,8,75, 0,9,246,\n    80,7,5, 0,8,87, 0,8,23, 192,8,0,\n    83,7,51, 0,8,119, 0,8,55, 0,9,206,\n    81,7,15, 0,8,103, 0,8,39, 0,9,174,\n    0,8,7, 0,8,135, 0,8,71, 0,9,238,\n    80,7,9, 0,8,95, 0,8,31, 0,9,158,\n    84,7,99, 0,8,127, 0,8,63, 0,9,222,\n    82,7,27, 0,8,111, 0,8,47, 0,9,190,\n    0,8,15, 0,8,143, 0,8,79, 0,9,254,\n    96,7,256, 0,8,80, 0,8,16, 84,8,115,\n    82,7,31, 0,8,112, 0,8,48, 0,9,193,\n\n    80,7,10, 0,8,96, 0,8,32, 0,9,161,\n    0,8,0, 0,8,128, 0,8,64, 0,9,225,\n    80,7,6, 0,8,88, 0,8,24, 0,9,145,\n    83,7,59, 0,8,120, 0,8,56, 0,9,209,\n    81,7,17, 0,8,104, 0,8,40, 0,9,177,\n    0,8,8, 0,8,136, 0,8,72, 0,9,241,\n    80,7,4, 0,8,84, 0,8,20, 85,8,227,\n    83,7,43, 0,8,116, 0,8,52, 0,9,201,\n    81,7,13, 0,8,100, 0,8,36, 0,9,169,\n    0,8,4, 0,8,132, 0,8,68, 0,9,233,\n    80,7,8, 0,8,92, 0,8,28, 0,9,153,\n    84,7,83, 0,8,124, 0,8,60, 0,9,217,\n    82,7,23, 0,8,108, 0,8,44, 0,9,185,\n    0,8,12, 0,8,140, 0,8,76, 0,9,249,\n    80,7,3, 0,8,82, 0,8,18, 85,8,163,\n    83,7,35, 0,8,114, 0,8,50, 0,9,197,\n    81,7,11, 0,8,98, 0,8,34, 0,9,165,\n    0,8,2, 0,8,130, 0,8,66, 0,9,229,\n    80,7,7, 0,8,90, 0,8,26, 0,9,149,\n    84,7,67, 0,8,122, 0,8,58, 0,9,213,\n    82,7,19, 0,8,106, 0,8,42, 0,9,181,\n    0,8,10, 0,8,138, 0,8,74, 0,9,245,\n    80,7,5, 0,8,86, 0,8,22, 192,8,0,\n    83,7,51, 0,8,118, 0,8,54, 0,9,205,\n    81,7,15, 0,8,102, 0,8,38, 0,9,173,\n    0,8,6, 0,8,134, 0,8,70, 0,9,237,\n    80,7,9, 0,8,94, 0,8,30, 0,9,157,\n    84,7,99, 0,8,126, 0,8,62, 0,9,221,\n    82,7,27, 0,8,110, 0,8,46, 0,9,189,\n    0,8,14, 0,8,142, 0,8,78, 0,9,253,\n    96,7,256, 0,8,81, 0,8,17, 85,8,131,\n    82,7,31, 0,8,113, 0,8,49, 0,9,195,\n    80,7,10, 0,8,97, 0,8,33, 0,9,163,\n    0,8,1, 0,8,129, 0,8,65, 0,9,227,\n    80,7,6, 0,8,89, 0,8,25, 0,9,147,\n    83,7,59, 0,8,121, 0,8,57, 0,9,211,\n    81,7,17, 0,8,105, 0,8,41, 0,9,179,\n    0,8,9, 0,8,137, 0,8,73, 0,9,243,\n    80,7,4, 0,8,85, 0,8,21, 80,8,258,\n    83,7,43, 0,8,117, 0,8,53, 0,9,203,\n    81,7,13, 0,8,101, 0,8,37, 0,9,171,\n    0,8,5, 0,8,133, 0,8,69, 0,9,235,\n    80,7,8, 0,8,93, 0,8,29, 0,9,155,\n    84,7,83, 0,8,125, 0,8,61, 0,9,219,\n    82,7,23, 0,8,109, 0,8,45, 0,9,187,\n    0,8,13, 0,8,141, 0,8,77, 0,9,251,\n    80,7,3, 0,8,83, 0,8,19, 85,8,195,\n    83,7,35, 0,8,115, 0,8,51, 0,9,199,\n    81,7,11, 0,8,99, 0,8,35, 0,9,167,\n    0,8,3, 0,8,131, 0,8,67, 0,9,231,\n    80,7,7, 0,8,91, 0,8,27, 0,9,151,\n    84,7,67, 0,8,123, 0,8,59, 0,9,215,\n    82,7,19, 0,8,107, 0,8,43, 0,9,183,\n    0,8,11, 0,8,139, 0,8,75, 0,9,247,\n    80,7,5, 0,8,87, 0,8,23, 192,8,0,\n    83,7,51, 0,8,119, 0,8,55, 0,9,207,\n    81,7,15, 0,8,103, 0,8,39, 0,9,175,\n    0,8,7, 0,8,135, 0,8,71, 0,9,239,\n    80,7,9, 0,8,95, 0,8,31, 0,9,159,\n    84,7,99, 0,8,127, 0,8,63, 0,9,223,\n    82,7,27, 0,8,111, 0,8,47, 0,9,191,\n    0,8,15, 0,8,143, 0,8,79, 0,9,255\n];\nvar fixed_td = [\n    80,5,1, 87,5,257, 83,5,17, 91,5,4097,\n    81,5,5, 89,5,1025, 85,5,65, 93,5,16385,\n    80,5,3, 88,5,513, 84,5,33, 92,5,8193,\n    82,5,9, 90,5,2049, 86,5,129, 192,5,24577,\n    80,5,2, 87,5,385, 83,5,25, 91,5,6145,\n    81,5,7, 89,5,1537, 85,5,97, 93,5,24577,\n    80,5,4, 88,5,769, 84,5,49, 92,5,12289,\n    82,5,13, 90,5,3073, 86,5,193, 192,5,24577\n];\n\n  // Tables for deflate from PKZIP's appnote.txt.\n  var cplens = [ // Copy lengths for literal codes 257..285\n        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n        35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n  ];\n\n  // see note #13 above about 258\n  var cplext = [ // Extra bits for literal codes 257..285\n        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2,\n        3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112  // 112==invalid\n  ];\n\n var cpdist = [ // Copy offsets for distance codes 0..29\n        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n        257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n        8193, 12289, 16385, 24577\n  ];\n\n  var cpdext = [ // Extra bits for distance codes\n        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,\n        7, 7, 8, 8, 9, 9, 10, 10, 11, 11,\n        12, 12, 13, 13];\n\n//\n// ZStream.java\n//\n\nfunction ZStream() {\n}\n\n\nZStream.prototype.inflateInit = function(w, nowrap) {\n    if (!w) {\n\tw = DEF_WBITS;\n    }\n    if (nowrap) {\n\tnowrap = false;\n    }\n    this.istate = new Inflate();\n    return this.istate.inflateInit(this, nowrap?-w:w);\n}\n\nZStream.prototype.inflate = function(f) {\n    if(this.istate==null) return Z_STREAM_ERROR;\n    return this.istate.inflate(this, f);\n}\n\nZStream.prototype.inflateEnd = function(){\n    if(this.istate==null) return Z_STREAM_ERROR;\n    var ret=istate.inflateEnd(this);\n    this.istate = null;\n    return ret;\n}\nZStream.prototype.inflateSync = function(){\n    // if(istate == null) return Z_STREAM_ERROR;\n    return istate.inflateSync(this);\n}\nZStream.prototype.inflateSetDictionary = function(dictionary, dictLength){\n    // if(istate == null) return Z_STREAM_ERROR;\n    return istate.inflateSetDictionary(this, dictionary, dictLength);\n}\n\n/*\n\n  public int deflateInit(int level){\n    return deflateInit(level, MAX_WBITS);\n  }\n  public int deflateInit(int level, boolean nowrap){\n    return deflateInit(level, MAX_WBITS, nowrap);\n  }\n  public int deflateInit(int level, int bits){\n    return deflateInit(level, bits, false);\n  }\n  public int deflateInit(int level, int bits, boolean nowrap){\n    dstate=new Deflate();\n    return dstate.deflateInit(this, level, nowrap?-bits:bits);\n  }\n  public int deflate(int flush){\n    if(dstate==null){\n      return Z_STREAM_ERROR;\n    }\n    return dstate.deflate(this, flush);\n  }\n  public int deflateEnd(){\n    if(dstate==null) return Z_STREAM_ERROR;\n    int ret=dstate.deflateEnd();\n    dstate=null;\n    return ret;\n  }\n  public int deflateParams(int level, int strategy){\n    if(dstate==null) return Z_STREAM_ERROR;\n    return dstate.deflateParams(this, level, strategy);\n  }\n  public int deflateSetDictionary (byte[] dictionary, int dictLength){\n    if(dstate == null)\n      return Z_STREAM_ERROR;\n    return dstate.deflateSetDictionary(this, dictionary, dictLength);\n  }\n\n*/\n\n/*\n  // Flush as much pending output as possible. All deflate() output goes\n  // through this function so some applications may wish to modify it\n  // to avoid allocating a large strm->next_out buffer and copying into it.\n  // (See also read_buf()).\n  void flush_pending(){\n    int len=dstate.pending;\n\n    if(len>avail_out) len=avail_out;\n    if(len==0) return;\n\n    if(dstate.pending_buf.length<=dstate.pending_out ||\n       next_out.length<=next_out_index ||\n       dstate.pending_buf.length<(dstate.pending_out+len) ||\n       next_out.length<(next_out_index+len)){\n      System.out.println(dstate.pending_buf.length+\", \"+dstate.pending_out+\n\t\t\t \", \"+next_out.length+\", \"+next_out_index+\", \"+len);\n      System.out.println(\"avail_out=\"+avail_out);\n    }\n\n    System.arraycopy(dstate.pending_buf, dstate.pending_out,\n\t\t     next_out, next_out_index, len);\n\n    next_out_index+=len;\n    dstate.pending_out+=len;\n    total_out+=len;\n    avail_out-=len;\n    dstate.pending-=len;\n    if(dstate.pending==0){\n      dstate.pending_out=0;\n    }\n  }\n\n  // Read a new buffer from the current input stream, update the adler32\n  // and total number of bytes read.  All deflate() input goes through\n  // this function so some applications may wish to modify it to avoid\n  // allocating a large strm->next_in buffer and copying from it.\n  // (See also flush_pending()).\n  int read_buf(byte[] buf, int start, int size) {\n    int len=avail_in;\n\n    if(len>size) len=size;\n    if(len==0) return 0;\n\n    avail_in-=len;\n\n    if(dstate.noheader==0) {\n      adler=_adler.adler32(adler, next_in, next_in_index, len);\n    }\n    System.arraycopy(next_in, next_in_index, buf, start, len);\n    next_in_index  += len;\n    total_in += len;\n    return len;\n  }\n\n  public void free(){\n    next_in=null;\n    next_out=null;\n    msg=null;\n    _adler=null;\n  }\n}\n*/\n\n\n//\n// Inflate.java\n//\n\nfunction Inflate() {\n    this.was = [0];\n}\n\nInflate.prototype.inflateReset = function(z) {\n    if(z == null || z.istate == null) return Z_STREAM_ERROR;\n\n    z.total_in = z.total_out = 0;\n    z.msg = null;\n    z.istate.mode = z.istate.nowrap!=0 ? BLOCKS : METHOD;\n    z.istate.blocks.reset(z, null);\n    return Z_OK;\n}\n\nInflate.prototype.inflateEnd = function(z){\n    if(this.blocks != null)\n      this.blocks.free(z);\n    this.blocks=null;\n    return Z_OK;\n}\n\nInflate.prototype.inflateInit = function(z, w){\n    z.msg = null;\n    this.blocks = null;\n\n    // handle undocumented nowrap option (no zlib header or check)\n    nowrap = 0;\n    if(w < 0){\n      w = - w;\n      nowrap = 1;\n    }\n\n    // set window size\n    if(w<8 ||w>15){\n      this.inflateEnd(z);\n      return Z_STREAM_ERROR;\n    }\n    this.wbits=w;\n\n    z.istate.blocks=new InfBlocks(z,\n\t\t\t\t  z.istate.nowrap!=0 ? null : this,\n\t\t\t\t  1<<w);\n\n    // reset state\n    this.inflateReset(z);\n    return Z_OK;\n  }\n\nInflate.prototype.inflate = function(z, f){\n    var r, b;\n\n    if(z == null || z.istate == null || z.next_in == null)\n      return Z_STREAM_ERROR;\n    f = f == Z_FINISH ? Z_BUF_ERROR : Z_OK;\n    r = Z_BUF_ERROR;\n    while (true){\n      switch (z.istate.mode){\n      case METHOD:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        if(((z.istate.method = z.next_in[z.next_in_index++])&0xf)!=Z_DEFLATED){\n          z.istate.mode = BAD;\n          z.msg=\"unknown compression method\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n        if((z.istate.method>>4)+8>z.istate.wbits){\n          z.istate.mode = BAD;\n          z.msg=\"invalid window size\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n        z.istate.mode=FLAG;\n      case FLAG:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        b = (z.next_in[z.next_in_index++])&0xff;\n\n        if((((z.istate.method << 8)+b) % 31)!=0){\n          z.istate.mode = BAD;\n          z.msg = \"incorrect header check\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n\n        if((b&PRESET_DICT)==0){\n          z.istate.mode = BLOCKS;\n          break;\n        }\n        z.istate.mode = DICT4;\n      case DICT4:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need=((z.next_in[z.next_in_index++]&0xff)<<24)&0xff000000;\n        z.istate.mode=DICT3;\n      case DICT3:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<16)&0xff0000;\n        z.istate.mode=DICT2;\n      case DICT2:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<8)&0xff00;\n        z.istate.mode=DICT1;\n      case DICT1:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need += (z.next_in[z.next_in_index++]&0xff);\n        z.adler = z.istate.need;\n        z.istate.mode = DICT0;\n        return Z_NEED_DICT;\n      case DICT0:\n        z.istate.mode = BAD;\n        z.msg = \"need dictionary\";\n        z.istate.marker = 0;       // can try inflateSync\n        return Z_STREAM_ERROR;\n      case BLOCKS:\n\n        r = z.istate.blocks.proc(z, r);\n        if(r == Z_DATA_ERROR){\n          z.istate.mode = BAD;\n          z.istate.marker = 0;     // can try inflateSync\n          break;\n        }\n        if(r == Z_OK){\n          r = f;\n        }\n        if(r != Z_STREAM_END){\n          return r;\n        }\n        r = f;\n        z.istate.blocks.reset(z, z.istate.was);\n        if(z.istate.nowrap!=0){\n          z.istate.mode=DONE;\n          break;\n        }\n        z.istate.mode=CHECK4;\n      case CHECK4:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need=((z.next_in[z.next_in_index++]&0xff)<<24)&0xff000000;\n        z.istate.mode=CHECK3;\n      case CHECK3:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<16)&0xff0000;\n        z.istate.mode = CHECK2;\n      case CHECK2:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<8)&0xff00;\n        z.istate.mode = CHECK1;\n      case CHECK1:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=(z.next_in[z.next_in_index++]&0xff);\n\n        if(((z.istate.was[0])) != ((z.istate.need))){\n          z.istate.mode = BAD;\n          z.msg = \"incorrect data check\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n\n        z.istate.mode = DONE;\n      case DONE:\n        return Z_STREAM_END;\n      case BAD:\n        return Z_DATA_ERROR;\n      default:\n        return Z_STREAM_ERROR;\n      }\n    }\n  }\n\n\nInflate.prototype.inflateSetDictionary = function(z,  dictionary, dictLength) {\n    var index=0;\n    var length = dictLength;\n    if(z==null || z.istate == null|| z.istate.mode != DICT0)\n      return Z_STREAM_ERROR;\n\n    if(z._adler.adler32(1, dictionary, 0, dictLength)!=z.adler){\n      return Z_DATA_ERROR;\n    }\n\n    z.adler = z._adler.adler32(0, null, 0, 0);\n\n    if(length >= (1<<z.istate.wbits)){\n      length = (1<<z.istate.wbits)-1;\n      index=dictLength - length;\n    }\n    z.istate.blocks.set_dictionary(dictionary, index, length);\n    z.istate.mode = BLOCKS;\n    return Z_OK;\n  }\n\n//  static private byte[] mark = {(byte)0, (byte)0, (byte)0xff, (byte)0xff};\nvar mark = [0, 0, 255, 255]\n\nInflate.prototype.inflateSync = function(z){\n    var n;       // number of bytes to look at\n    var p;       // pointer to bytes\n    var m;       // number of marker bytes found in a row\n    var r, w;   // temporaries to save total_in and total_out\n\n    // set up\n    if(z == null || z.istate == null)\n      return Z_STREAM_ERROR;\n    if(z.istate.mode != BAD){\n      z.istate.mode = BAD;\n      z.istate.marker = 0;\n    }\n    if((n=z.avail_in)==0)\n      return Z_BUF_ERROR;\n    p=z.next_in_index;\n    m=z.istate.marker;\n\n    // search\n    while (n!=0 && m < 4){\n      if(z.next_in[p] == mark[m]){\n        m++;\n      }\n      else if(z.next_in[p]!=0){\n        m = 0;\n      }\n      else{\n        m = 4 - m;\n      }\n      p++; n--;\n    }\n\n    // restore\n    z.total_in += p-z.next_in_index;\n    z.next_in_index = p;\n    z.avail_in = n;\n    z.istate.marker = m;\n\n    // return no joy or set up to restart on a new block\n    if(m != 4){\n      return Z_DATA_ERROR;\n    }\n    r=z.total_in;  w=z.total_out;\n    this.inflateReset(z);\n    z.total_in=r;  z.total_out = w;\n    z.istate.mode = BLOCKS;\n    return Z_OK;\n}\n\n  // Returns true if inflate is currently at the end of a block generated\n  // by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP\n  // implementation to provide an additional safety check. PPP uses Z_SYNC_FLUSH\n  // but removes the length bytes of the resulting empty stored block. When\n  // decompressing, PPP checks that at the end of input packet, inflate is\n  // waiting for these length bytes.\nInflate.prototype.inflateSyncPoint = function(z){\n    if(z == null || z.istate == null || z.istate.blocks == null)\n      return Z_STREAM_ERROR;\n    return z.istate.blocks.sync_point();\n}\n\n\n//\n// InfBlocks.java\n//\n\nvar INFBLOCKS_BORDER = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\nfunction InfBlocks(z, checkfn, w) {\n    this.hufts=new Int32Array(MANY*3);\n    this.window=new Uint8Array(w);\n    this.end=w;\n    this.checkfn = checkfn;\n    this.mode = IB_TYPE;\n    this.reset(z, null);\n\n    this.left = 0;            // if STORED, bytes left to copy\n\n    this.table = 0;           // table lengths (14 bits)\n    this.index = 0;           // index into blens (or border)\n    this.blens = null;         // bit lengths of codes\n    this.bb=new Int32Array(1); // bit length tree depth\n    this.tb=new Int32Array(1); // bit length decoding tree\n\n    this.codes = new InfCodes();\n\n    this.last = 0;            // true if this block is the last block\n\n  // mode independent information\n    this.bitk = 0;            // bits in bit buffer\n    this.bitb = 0;            // bit buffer\n    this.read = 0;            // window read pointer\n    this.write = 0;           // window write pointer\n    this.check = 0;          // check on output\n\n    this.inftree=new InfTree();\n}\n\n\n\n\nInfBlocks.prototype.reset = function(z, c){\n    if(c) c[0]=this.check;\n    if(this.mode==IB_CODES){\n      this.codes.free(z);\n    }\n    this.mode=IB_TYPE;\n    this.bitk=0;\n    this.bitb=0;\n    this.read=this.write=0;\n\n    if(this.checkfn)\n      z.adler=this.check=z._adler.adler32(0, null, 0, 0);\n  }\n\n InfBlocks.prototype.proc = function(z, r){\n    var t;              // temporary storage\n    var b;              // bit buffer\n    var k;              // bits in bit buffer\n    var p;              // input data pointer\n    var n;              // bytes available there\n    var q;              // output window write pointer\n    var m;              // bytes to end of window or read pointer\n\n    // copy input/output information to locals (UPDATE macro restores)\n    {p=z.next_in_index;n=z.avail_in;b=this.bitb;k=this.bitk;}\n    {q=this.write;m=(q<this.read ? this.read-q-1 : this.end-q);}\n\n    // process input based on current state\n    while(true){\n      switch (this.mode){\n      case IB_TYPE:\n\n\twhile(k<(3)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k;\n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\tt = (b & 7);\n\tthis.last = t & 1;\n\n\tswitch (t >>> 1){\n        case 0:                         // stored\n          {b>>>=(3);k-=(3);}\n          t = k & 7;                    // go to byte boundary\n\n          {b>>>=(t);k-=(t);}\n          this.mode = IB_LENS;                  // get length of stored block\n          break;\n        case 1:                         // fixed\n          {\n              var bl=new Int32Array(1);\n\t      var bd=new Int32Array(1);\n              var tl=[];\n\t      var td=[];\n\n\t      inflate_trees_fixed(bl, bd, tl, td, z);\n              this.codes.init(bl[0], bd[0], tl[0], 0, td[0], 0, z);\n          }\n\n          {b>>>=(3);k-=(3);}\n\n          this.mode = IB_CODES;\n          break;\n        case 2:                         // dynamic\n\n          {b>>>=(3);k-=(3);}\n\n          this.mode = IB_TABLE;\n          break;\n        case 3:                         // illegal\n\n          {b>>>=(3);k-=(3);}\n          this.mode = BAD;\n          z.msg = \"invalid block type\";\n          r = Z_DATA_ERROR;\n\n\t  this.bitb=b; this.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\tbreak;\n      case IB_LENS:\n\twhile(k<(32)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k;\n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tif ((((~b) >>> 16) & 0xffff) != (b & 0xffff)){\n\t  this.mode = BAD;\n\t  z.msg = \"invalid stored block lengths\";\n\t  r = Z_DATA_ERROR;\n\n\t  this.bitb=b; this.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\tthis.left = (b & 0xffff);\n\tb = k = 0;                       // dump bits\n\tthis.mode = this.left!=0 ? IB_STORED : (this.last!=0 ? IB_DRY : IB_TYPE);\n\tbreak;\n      case IB_STORED:\n\tif (n == 0){\n\t  this.bitb=b; this.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\n\tif(m==0){\n\t  if(q==end&&read!=0){\n\t    q=0; m=(q<this.read ? this.read-q-1 : this.end-q);\n\t  }\n\t  if(m==0){\n\t    this.write=q;\n\t    r=this.inflate_flush(z,r);\n\t    q=this.write; m = (q < this.read ? this.read-q-1 : this.end-q);\n\t    if(q==this.end && this.read != 0){\n\t      q=0; m = (q < this.read ? this.read-q-1 : this.end-q);\n\t    }\n\t    if(m==0){\n\t      this.bitb=b; this.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    }\n\t  }\n\t}\n\tr=Z_OK;\n\n\tt = this.left;\n\tif(t>n) t = n;\n\tif(t>m) t = m;\n\tarrayCopy(z.next_in, p, this.window, q, t);\n\tp += t;  n -= t;\n\tq += t;  m -= t;\n\tif ((this.left -= t) != 0)\n\t  break;\n\tthis.mode = (this.last != 0 ? IB_DRY : IB_TYPE);\n\tbreak;\n      case IB_TABLE:\n\n\twhile(k<(14)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k;\n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.table = t = (b & 0x3fff);\n\tif ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29)\n\t  {\n\t    this.mode = IB_BAD;\n\t    z.msg = \"too many length or distance symbols\";\n\t    r = Z_DATA_ERROR;\n\n\t    this.bitb=b; this.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  }\n\tt = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);\n\tif(this.blens==null || this.blens.length<t){\n\t    this.blens=new Int32Array(t);\n\t}\n\telse{\n\t  for(var i=0; i<t; i++){\n              this.blens[i]=0;\n          }\n\t}\n\n\t{b>>>=(14);k-=(14);}\n\n\tthis.index = 0;\n\tmode = IB_BTREE;\n      case IB_BTREE:\n\twhile (this.index < 4 + (this.table >>> 10)){\n\t  while(k<(3)){\n\t    if(n!=0){\n\t      r=Z_OK;\n\t    }\n\t    else{\n\t      this.bitb=b; this.bitk=k;\n\t      z.avail_in=n;\n\t      z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    };\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;\n\t    k+=8;\n\t  }\n\n\t  this.blens[INFBLOCKS_BORDER[this.index++]] = b&7;\n\n\t  {b>>>=(3);k-=(3);}\n\t}\n\n\twhile(this.index < 19){\n\t  this.blens[INFBLOCKS_BORDER[this.index++]] = 0;\n\t}\n\n\tthis.bb[0] = 7;\n\tt = this.inftree.inflate_trees_bits(this.blens, this.bb, this.tb, this.hufts, z);\n\tif (t != Z_OK){\n\t  r = t;\n\t  if (r == Z_DATA_ERROR){\n\t    this.blens=null;\n\t    this.mode = IB_BAD;\n\t  }\n\n\t  this.bitb=b; this.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\n\tthis.index = 0;\n\tthis.mode = IB_DTREE;\n      case IB_DTREE:\n\twhile (true){\n\t  t = this.table;\n\t  if(!(this.index < 258 + (t & 0x1f) + ((t >> 5) & 0x1f))){\n\t    break;\n\t  }\n\n\t  var h; //int[]\n\t  var i, j, c;\n\n\t  t = this.bb[0];\n\n\t  while(k<(t)){\n\t    if(n!=0){\n\t      r=Z_OK;\n\t    }\n\t    else{\n\t      this.bitb=b; this.bitk=k;\n\t      z.avail_in=n;\n\t      z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    };\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;\n\t    k+=8;\n\t  }\n\n//\t  if (this.tb[0]==-1){\n//            dlog(\"null...\");\n//\t  }\n\n\t  t=this.hufts[(this.tb[0]+(b & inflate_mask[t]))*3+1];\n\t  c=this.hufts[(this.tb[0]+(b & inflate_mask[t]))*3+2];\n\n\t  if (c < 16){\n\t    b>>>=(t);k-=(t);\n\t    this.blens[this.index++] = c;\n\t  }\n\t  else { // c == 16..18\n\t    i = c == 18 ? 7 : c - 14;\n\t    j = c == 18 ? 11 : 3;\n\n\t    while(k<(t+i)){\n\t      if(n!=0){\n\t\tr=Z_OK;\n\t      }\n\t      else{\n\t\tthis.bitb=b; this.bitk=k;\n\t\tz.avail_in=n;\n\t\tz.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t\tthis.write=q;\n\t\treturn this.inflate_flush(z,r);\n\t      };\n\t      n--;\n\t      b|=(z.next_in[p++]&0xff)<<k;\n\t      k+=8;\n\t    }\n\n\t    b>>>=(t);k-=(t);\n\n\t    j += (b & inflate_mask[i]);\n\n\t    b>>>=(i);k-=(i);\n\n\t    i = this.index;\n\t    t = this.table;\n\t    if (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) ||\n\t\t(c == 16 && i < 1)){\n\t      this.blens=null;\n\t      this.mode = IB_BAD;\n\t      z.msg = \"invalid bit length repeat\";\n\t      r = Z_DATA_ERROR;\n\n\t      this.bitb=b; this.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    }\n\n\t    c = c == 16 ? this.blens[i-1] : 0;\n\t    do{\n\t      this.blens[i++] = c;\n\t    }\n\t    while (--j!=0);\n\t    this.index = i;\n\t  }\n\t}\n\n\tthis.tb[0]=-1;\n\t{\n\t    var bl=new Int32Array(1);\n\t    var bd=new Int32Array(1);\n\t    var tl=new Int32Array(1);\n\t    var td=new Int32Array(1);\n\t    bl[0] = 9;         // must be <= 9 for lookahead assumptions\n\t    bd[0] = 6;         // must be <= 9 for lookahead assumptions\n\n\t    t = this.table;\n\t    t = this.inftree.inflate_trees_dynamic(257 + (t & 0x1f),\n\t\t\t\t\t      1 + ((t >> 5) & 0x1f),\n\t\t\t\t\t      this.blens, bl, bd, tl, td, this.hufts, z);\n\n\t    if (t != Z_OK){\n\t        if (t == Z_DATA_ERROR){\n\t            this.blens=null;\n\t            this.mode = BAD;\n\t        }\n\t        r = t;\n\n\t        this.bitb=b; this.bitk=k;\n\t        z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t        this.write=q;\n\t        return this.inflate_flush(z,r);\n\t    }\n\t    this.codes.init(bl[0], bd[0], this.hufts, tl[0], this.hufts, td[0], z);\n\t}\n\tthis.mode = IB_CODES;\n      case IB_CODES:\n\tthis.bitb=b; this.bitk=k;\n\tz.avail_in=n; z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\n\tif ((r = this.codes.proc(this, z, r)) != Z_STREAM_END){\n\t  return this.inflate_flush(z, r);\n\t}\n\tr = Z_OK;\n\tthis.codes.free(z);\n\n\tp=z.next_in_index; n=z.avail_in;b=this.bitb;k=this.bitk;\n\tq=this.write;m = (q < this.read ? this.read-q-1 : this.end-q);\n\n\tif (this.last==0){\n\t  this.mode = IB_TYPE;\n\t  break;\n\t}\n\tthis.mode = IB_DRY;\n      case IB_DRY:\n\tthis.write=q;\n\tr = this.inflate_flush(z, r);\n\tq=this.write; m = (q < this.read ? this.read-q-1 : this.end-q);\n\tif (this.read != this.write){\n\t  this.bitb=b; this.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z, r);\n\t}\n\tmode = DONE;\n      case IB_DONE:\n\tr = Z_STREAM_END;\n\n\tthis.bitb=b; this.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n      case IB_BAD:\n\tr = Z_DATA_ERROR;\n\n\tthis.bitb=b; this.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n\n      default:\n\tr = Z_STREAM_ERROR;\n\n\tthis.bitb=b; this.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n      }\n    }\n  }\n\nInfBlocks.prototype.free = function(z){\n    this.reset(z, null);\n    this.window=null;\n    this.hufts=null;\n}\n\nInfBlocks.prototype.set_dictionary = function(d, start, n){\n    arrayCopy(d, start, window, 0, n);\n    this.read = this.write = n;\n}\n\n  // Returns true if inflate is currently at the end of a block generated\n  // by Z_SYNC_FLUSH or Z_FULL_FLUSH.\nInfBlocks.prototype.sync_point = function(){\n    return this.mode == IB_LENS;\n}\n\n  // copy as much as possible from the sliding window to the output area\nInfBlocks.prototype.inflate_flush = function(z, r){\n    var n;\n    var p;\n    var q;\n\n    // local copies of source and destination pointers\n    p = z.next_out_index;\n    q = this.read;\n\n    // compute number of bytes to copy as far as end of window\n    n = ((q <= this.write ? this.write : this.end) - q);\n    if (n > z.avail_out) n = z.avail_out;\n    if (n!=0 && r == Z_BUF_ERROR) r = Z_OK;\n\n    // update counters\n    z.avail_out -= n;\n    z.total_out += n;\n\n    // update check information\n    if(this.checkfn != null)\n      z.adler=this.check=z._adler.adler32(this.check, this.window, q, n);\n\n    // copy as far as end of window\n    arrayCopy(this.window, q, z.next_out, p, n);\n    p += n;\n    q += n;\n\n    // see if more to copy at beginning of window\n    if (q == this.end){\n      // wrap pointers\n      q = 0;\n      if (this.write == this.end)\n        this.write = 0;\n\n      // compute bytes to copy\n      n = this.write - q;\n      if (n > z.avail_out) n = z.avail_out;\n      if (n!=0 && r == Z_BUF_ERROR) r = Z_OK;\n\n      // update counters\n      z.avail_out -= n;\n      z.total_out += n;\n\n      // update check information\n      if(this.checkfn != null)\n\tz.adler=this.check=z._adler.adler32(this.check, this.window, q, n);\n\n      // copy\n      arrayCopy(this.window, q, z.next_out, p, n);\n      p += n;\n      q += n;\n    }\n\n    // update pointers\n    z.next_out_index = p;\n    this.read = q;\n\n    // done\n    return r;\n  }\n\n//\n// InfCodes.java\n//\n\nvar IC_START=0;  // x: set up for LEN\nvar IC_LEN=1;    // i: get length/literal/eob next\nvar IC_LENEXT=2; // i: getting length extra (have base)\nvar IC_DIST=3;   // i: get distance next\nvar IC_DISTEXT=4;// i: getting distance extra\nvar IC_COPY=5;   // o: copying bytes in window, waiting for space\nvar IC_LIT=6;    // o: got literal, waiting for output space\nvar IC_WASH=7;   // o: got eob, possibly still output waiting\nvar IC_END=8;    // x: got eob and all data flushed\nvar IC_BADCODE=9;// x: got error\n\nfunction InfCodes() {\n}\n\nInfCodes.prototype.init = function(bl, bd, tl, tl_index, td, td_index, z) {\n    this.mode=IC_START;\n    this.lbits=bl;\n    this.dbits=bd;\n    this.ltree=tl;\n    this.ltree_index=tl_index;\n    this.dtree = td;\n    this.dtree_index=td_index;\n    this.tree=null;\n}\n\nInfCodes.prototype.proc = function(s, z, r){\n    var j;              // temporary storage\n    var t;              // temporary pointer (int[])\n    var tindex;         // temporary pointer\n    var e;              // extra bits or operation\n    var b=0;            // bit buffer\n    var k=0;            // bits in bit buffer\n    var p=0;            // input data pointer\n    var n;              // bytes available there\n    var q;              // output window write pointer\n    var m;              // bytes to end of window or read pointer\n    var f;              // pointer to copy strings from\n\n    // copy input/output information to locals (UPDATE macro restores)\n    p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n    // process input and output based on current state\n    while (true){\n      switch (this.mode){\n\t// waiting for \"i:\"=input, \"o:\"=output, \"x:\"=nothing\n      case IC_START:         // x: set up for LEN\n\tif (m >= 258 && n >= 10){\n\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\t  r = this.inflate_fast(this.lbits, this.dbits,\n\t\t\t   this.ltree, this.ltree_index,\n\t\t\t   this.dtree, this.dtree_index,\n\t\t\t   s, z);\n\n\t  p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n\t  q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t  if (r != Z_OK){\n\t    this.mode = r == Z_STREAM_END ? IC_WASH : IC_BADCODE;\n\t    break;\n\t  }\n\t}\n\tthis.need = this.lbits;\n\tthis.tree = this.ltree;\n\tthis.tree_index=this.ltree_index;\n\n\tthis.mode = IC_LEN;\n      case IC_LEN:           // i: get length/literal/eob next\n\tj = this.need;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\ttindex=(this.tree_index+(b&inflate_mask[j]))*3;\n\n\tb>>>=(this.tree[tindex+1]);\n\tk-=(this.tree[tindex+1]);\n\n\te=this.tree[tindex];\n\n\tif(e == 0){               // literal\n\t  this.lit = this.tree[tindex+2];\n\t  this.mode = IC_LIT;\n\t  break;\n\t}\n\tif((e & 16)!=0 ){          // length\n\t  this.get = e & 15;\n\t  this.len = this.tree[tindex+2];\n\t  this.mode = IC_LENEXT;\n\t  break;\n\t}\n\tif ((e & 64) == 0){        // next table\n\t  this.need = e;\n\t  this.tree_index = tindex/3 + this.tree[tindex+2];\n\t  break;\n\t}\n\tif ((e & 32)!=0){               // end of block\n\t  this.mode = IC_WASH;\n\t  break;\n\t}\n\tthis.mode = IC_BADCODE;        // invalid code\n\tz.msg = \"invalid literal/length code\";\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_LENEXT:        // i: getting length extra (have base)\n\tj = this.get;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.len += (b & inflate_mask[j]);\n\n\tb>>=j;\n\tk-=j;\n\n\tthis.need = this.dbits;\n\tthis.tree = this.dtree;\n\tthis.tree_index = this.dtree_index;\n\tthis.mode = IC_DIST;\n      case IC_DIST:          // i: get distance next\n\tj = this.need;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\ttindex=(this.tree_index+(b & inflate_mask[j]))*3;\n\n\tb>>=this.tree[tindex+1];\n\tk-=this.tree[tindex+1];\n\n\te = (this.tree[tindex]);\n\tif((e & 16)!=0){               // distance\n\t  this.get = e & 15;\n\t  this.dist = this.tree[tindex+2];\n\t  this.mode = IC_DISTEXT;\n\t  break;\n\t}\n\tif ((e & 64) == 0){        // next table\n\t  this.need = e;\n\t  this.tree_index = tindex/3 + this.tree[tindex+2];\n\t  break;\n\t}\n\tthis.mode = IC_BADCODE;        // invalid code\n\tz.msg = \"invalid distance code\";\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_DISTEXT:       // i: getting distance extra\n\tj = this.get;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.dist += (b & inflate_mask[j]);\n\n\tb>>=j;\n\tk-=j;\n\n\tthis.mode = IC_COPY;\n      case IC_COPY:          // o: copying bytes in window, waiting for space\n        f = q - this.dist;\n        while(f < 0){     // modulo window size-\"while\" instead\n          f += s.end;     // of \"if\" handles invalid distances\n\t}\n\twhile (this.len!=0){\n\n\t  if(m==0){\n\t    if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t    if(m==0){\n\t      s.write=q; r=s.inflate_flush(z,r);\n\t      q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t      if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\n\t      if(m==0){\n\t\ts.bitb=b;s.bitk=k;\n\t\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t\ts.write=q;\n\t\treturn s.inflate_flush(z,r);\n\t      }\n\t    }\n\t  }\n\n\t  s.window[q++]=s.window[f++]; m--;\n\n\t  if (f == s.end)\n            f = 0;\n\t  this.len--;\n\t}\n\tthis.mode = IC_START;\n\tbreak;\n      case IC_LIT:           // o: got literal, waiting for output space\n\tif(m==0){\n\t  if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t  if(m==0){\n\t    s.write=q; r=s.inflate_flush(z,r);\n\t    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t    if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t    if(m==0){\n\t      s.bitb=b;s.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      s.write=q;\n\t      return s.inflate_flush(z,r);\n\t    }\n\t  }\n\t}\n\tr=Z_OK;\n\n\ts.window[q++]=this.lit; m--;\n\n\tthis.mode = IC_START;\n\tbreak;\n      case IC_WASH:           // o: got eob, possibly more output\n\tif (k > 7){        // return unused byte, if any\n\t  k -= 8;\n\t  n++;\n\t  p--;             // can always return one\n\t}\n\n\ts.write=q; r=s.inflate_flush(z,r);\n\tq=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\tif (s.read != s.write){\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\t  return s.inflate_flush(z,r);\n\t}\n\tthis.mode = IC_END;\n      case IC_END:\n\tr = Z_STREAM_END;\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_BADCODE:       // x: got error\n\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      default:\n\tr = Z_STREAM_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n      }\n    }\n  }\n\nInfCodes.prototype.free = function(z){\n    //  ZFREE(z, c);\n}\n\n  // Called with number of bytes left to write in window at least 258\n  // (the maximum string length) and number of input bytes available\n  // at least ten.  The ten bytes are six bytes for the longest length/\n  // distance pair plus four bytes for overloading the bit buffer.\n\nInfCodes.prototype.inflate_fast = function(bl, bd, tl, tl_index, td, td_index, s, z) {\n    var t;                // temporary pointer\n    var   tp;             // temporary pointer (int[])\n    var tp_index;         // temporary pointer\n    var e;                // extra bits or operation\n    var b;                // bit buffer\n    var k;                // bits in bit buffer\n    var p;                // input data pointer\n    var n;                // bytes available there\n    var q;                // output window write pointer\n    var m;                // bytes to end of window or read pointer\n    var ml;               // mask for literal/length tree\n    var md;               // mask for distance tree\n    var c;                // bytes to copy\n    var d;                // distance back to copy from\n    var r;                // copy source pointer\n\n    var tp_index_t_3;     // (tp_index+t)*3\n\n    // load input, output, bit values\n    p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n    // initialize masks\n    ml = inflate_mask[bl];\n    md = inflate_mask[bd];\n\n    // do until not enough input or output space for fast loop\n    do {                          // assume called with m >= 258 && n >= 10\n      // get literal/length code\n      while(k<(20)){              // max bits for literal/length code\n\tn--;\n\tb|=(z.next_in[p++]&0xff)<<k;k+=8;\n      }\n\n      t= b&ml;\n      tp=tl;\n      tp_index=tl_index;\n      tp_index_t_3=(tp_index+t)*3;\n      if ((e = tp[tp_index_t_3]) == 0){\n\tb>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\ts.window[q++] = tp[tp_index_t_3+2];\n\tm--;\n\tcontinue;\n      }\n      do {\n\n\tb>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\tif((e&16)!=0){\n\t  e &= 15;\n\t  c = tp[tp_index_t_3+2] + (b & inflate_mask[e]);\n\n\t  b>>=e; k-=e;\n\n\t  // decode distance base of block to copy\n\t  while(k<(15)){           // max bits for distance code\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;k+=8;\n\t  }\n\n\t  t= b&md;\n\t  tp=td;\n\t  tp_index=td_index;\n          tp_index_t_3=(tp_index+t)*3;\n\t  e = tp[tp_index_t_3];\n\n\t  do {\n\n\t    b>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\t    if((e&16)!=0){\n\t      // get extra bits to add to distance base\n\t      e &= 15;\n\t      while(k<(e)){         // get extra bits (up to 13)\n\t\tn--;\n\t\tb|=(z.next_in[p++]&0xff)<<k;k+=8;\n\t      }\n\n\t      d = tp[tp_index_t_3+2] + (b&inflate_mask[e]);\n\n\t      b>>=(e); k-=(e);\n\n\t      // do the copy\n\t      m -= c;\n\t      if (q >= d){                // offset before dest\n\t\t//  just copy\n\t\tr=q-d;\n\t\tif(q-r>0 && 2>(q-r)){\n\t\t  s.window[q++]=s.window[r++]; // minimum count is three,\n\t\t  s.window[q++]=s.window[r++]; // so unroll loop a little\n\t\t  c-=2;\n\t\t}\n\t\telse{\n\t\t  s.window[q++]=s.window[r++]; // minimum count is three,\n\t\t  s.window[q++]=s.window[r++]; // so unroll loop a little\n\t\t  c-=2;\n\t\t}\n\t      }\n\t      else{                  // else offset after destination\n                r=q-d;\n                do{\n                  r+=s.end;          // force pointer in window\n                }while(r<0);         // covers invalid distances\n\t\te=s.end-r;\n\t\tif(c>e){             // if source crosses,\n\t\t  c-=e;              // wrapped copy\n\t\t  if(q-r>0 && e>(q-r)){\n\t\t    do{s.window[q++] = s.window[r++];}\n\t\t    while(--e!=0);\n\t\t  }\n\t\t  else{\n\t\t    arrayCopy(s.window, r, s.window, q, e);\n\t\t    q+=e; r+=e; e=0;\n\t\t  }\n\t\t  r = 0;                  // copy rest from start of window\n\t\t}\n\n\t      }\n\n\t      // copy all or what's left\n              do{s.window[q++] = s.window[r++];}\n\t\twhile(--c!=0);\n\t      break;\n\t    }\n\t    else if((e&64)==0){\n\t      t+=tp[tp_index_t_3+2];\n\t      t+=(b&inflate_mask[e]);\n\t      tp_index_t_3=(tp_index+t)*3;\n\t      e=tp[tp_index_t_3];\n\t    }\n\t    else{\n\t      z.msg = \"invalid distance code\";\n\n\t      c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n\t      s.bitb=b;s.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      s.write=q;\n\n\t      return Z_DATA_ERROR;\n\t    }\n\t  }\n\t  while(true);\n\t  break;\n\t}\n\n\tif((e&64)==0){\n\t  t+=tp[tp_index_t_3+2];\n\t  t+=(b&inflate_mask[e]);\n\t  tp_index_t_3=(tp_index+t)*3;\n\t  if((e=tp[tp_index_t_3])==0){\n\n\t    b>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\t    s.window[q++]=tp[tp_index_t_3+2];\n\t    m--;\n\t    break;\n\t  }\n\t}\n\telse if((e&32)!=0){\n\n\t  c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\n\t  return Z_STREAM_END;\n\t}\n\telse{\n\t  z.msg=\"invalid literal/length code\";\n\n\t  c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\n\t  return Z_DATA_ERROR;\n\t}\n      }\n      while(true);\n    }\n    while(m>=258 && n>= 10);\n\n    // not enough input or output--restore pointers and return\n    c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n    s.bitb=b;s.bitk=k;\n    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n    s.write=q;\n\n    return Z_OK;\n}\n\n//\n// InfTree.java\n//\n\nfunction InfTree() {\n}\n\nInfTree.prototype.huft_build = function(b, bindex, n, s, d, e, t, m, hp, hn, v) {\n\n    // Given a list of code lengths and a maximum table size, make a set of\n    // tables to decode that set of codes.  Return Z_OK on success, Z_BUF_ERROR\n    // if the given code set is incomplete (the tables are still built in this\n    // case), Z_DATA_ERROR if the input is invalid (an over-subscribed set of\n    // lengths), or Z_MEM_ERROR if not enough memory.\n\n    var a;                       // counter for codes of length k\n    var f;                       // i repeats in table every f entries\n    var g;                       // maximum code length\n    var h;                       // table level\n    var i;                       // counter, current code\n    var j;                       // counter\n    var k;                       // number of bits in current code\n    var l;                       // bits per table (returned in m)\n    var mask;                    // (1 << w) - 1, to avoid cc -O bug on HP\n    var p;                       // pointer into c[], b[], or v[]\n    var q;                       // points to current table\n    var w;                       // bits before this table == (l * h)\n    var xp;                      // pointer into x\n    var y;                       // number of dummy codes added\n    var z;                       // number of entries in current table\n\n    // Generate counts for each bit length\n\n    p = 0; i = n;\n    do {\n      this.c[b[bindex+p]]++; p++; i--;   // assume all entries <= BMAX\n    }while(i!=0);\n\n    if(this.c[0] == n){                // null input--all zero length codes\n      t[0] = -1;\n      m[0] = 0;\n      return Z_OK;\n    }\n\n    // Find minimum and maximum length, bound *m by those\n    l = m[0];\n    for (j = 1; j <= BMAX; j++)\n      if(this.c[j]!=0) break;\n    k = j;                        // minimum code length\n    if(l < j){\n      l = j;\n    }\n    for (i = BMAX; i!=0; i--){\n      if(this.c[i]!=0) break;\n    }\n    g = i;                        // maximum code length\n    if(l > i){\n      l = i;\n    }\n    m[0] = l;\n\n    // Adjust last length count to fill out codes, if needed\n    for (y = 1 << j; j < i; j++, y <<= 1){\n      if ((y -= this.c[j]) < 0){\n        return Z_DATA_ERROR;\n      }\n    }\n    if ((y -= this.c[i]) < 0){\n      return Z_DATA_ERROR;\n    }\n    this.c[i] += y;\n\n    // Generate starting offsets into the value table for each length\n    this.x[1] = j = 0;\n    p = 1;  xp = 2;\n    while (--i!=0) {                 // note that i == g from above\n      this.x[xp] = (j += this.c[p]);\n      xp++;\n      p++;\n    }\n\n    // Make a table of values in order of bit lengths\n    i = 0; p = 0;\n    do {\n      if ((j = b[bindex+p]) != 0){\n        this.v[this.x[j]++] = i;\n      }\n      p++;\n    }\n    while (++i < n);\n    n = this.x[g];                     // set n to length of v\n\n    // Generate the Huffman codes and for each, make the table entries\n    this.x[0] = i = 0;                 // first Huffman code is zero\n    p = 0;                        // grab values in bit order\n    h = -1;                       // no tables yet--level -1\n    w = -l;                       // bits decoded == (l * h)\n    this.u[0] = 0;                     // just to keep compilers happy\n    q = 0;                        // ditto\n    z = 0;                        // ditto\n\n    // go through the bit lengths (k already is bits in shortest code)\n    for (; k <= g; k++){\n      a = this.c[k];\n      while (a--!=0){\n\t// here i is the Huffman code of length k bits for value *p\n\t// make tables up to required level\n        while (k > w + l){\n          h++;\n          w += l;                 // previous table always l bits\n\t  // compute minimum size table less than or equal to l bits\n          z = g - w;\n          z = (z > l) ? l : z;        // table size upper limit\n          if((f=1<<(j=k-w))>a+1){     // try a k-w bit table\n                                      // too few codes for k-w bit table\n            f -= a + 1;               // deduct codes from patterns left\n            xp = k;\n            if(j < z){\n              while (++j < z){        // try smaller tables up to z bits\n                if((f <<= 1) <= this.c[++xp])\n                  break;              // enough codes to use up j bits\n                f -= this.c[xp];           // else deduct codes from patterns\n              }\n\t    }\n          }\n          z = 1 << j;                 // table entries for j-bit table\n\n\t  // allocate new table\n          if (this.hn[0] + z > MANY){       // (note: doesn't matter for fixed)\n            return Z_DATA_ERROR;       // overflow of MANY\n          }\n          this.u[h] = q = /*hp+*/ this.hn[0];   // DEBUG\n          this.hn[0] += z;\n\n\t  // connect to last table, if there is one\n\t  if(h!=0){\n            this.x[h]=i;           // save pattern for backing up\n            this.r[0]=j;     // bits in this table\n            this.r[1]=l;     // bits to dump before this table\n            j=i>>>(w - l);\n            this.r[2] = (q - this.u[h-1] - j);               // offset to this table\n            arrayCopy(this.r, 0, hp, (this.u[h-1]+j)*3, 3); // connect to last table\n          }\n          else{\n            t[0] = q;               // first table is returned result\n\t  }\n        }\n\n\t// set up table entry in r\n        this.r[1] = (k - w);\n        if (p >= n){\n          this.r[0] = 128 + 64;      // out of values--invalid code\n\t}\n        else if (v[p] < s){\n          this.r[0] = (this.v[p] < 256 ? 0 : 32 + 64);  // 256 is end-of-block\n          this.r[2] = this.v[p++];          // simple code is just the value\n        }\n        else{\n          this.r[0]=(e[this.v[p]-s]+16+64); // non-simple--look up in lists\n          this.r[2]=d[this.v[p++] - s];\n        }\n\n        // fill code-like entries with r\n        f=1<<(k-w);\n        for (j=i>>>w;j<z;j+=f){\n          arrayCopy(this.r, 0, hp, (q+j)*3, 3);\n\t}\n\n\t// backwards increment the k-bit code i\n        for (j = 1 << (k - 1); (i & j)!=0; j >>>= 1){\n          i ^= j;\n\t}\n        i ^= j;\n\n\t// backup over finished tables\n        mask = (1 << w) - 1;      // needed on HP, cc -O bug\n        while ((i & mask) != this.x[h]){\n          h--;                    // don't need to update q\n          w -= l;\n          mask = (1 << w) - 1;\n        }\n      }\n    }\n    // Return Z_BUF_ERROR if we were given an incomplete table\n    return y != 0 && g != 1 ? Z_BUF_ERROR : Z_OK;\n}\n\nInfTree.prototype.inflate_trees_bits = function(c, bb, tb, hp, z) {\n    var result;\n    this.initWorkArea(19);\n    this.hn[0]=0;\n    result = this.huft_build(c, 0, 19, 19, null, null, tb, bb, hp, this.hn, this.v);\n\n    if(result == Z_DATA_ERROR){\n      z.msg = \"oversubscribed dynamic bit lengths tree\";\n    }\n    else if(result == Z_BUF_ERROR || bb[0] == 0){\n      z.msg = \"incomplete dynamic bit lengths tree\";\n      result = Z_DATA_ERROR;\n    }\n    return result;\n}\n\nInfTree.prototype.inflate_trees_dynamic = function(nl, nd, c, bl, bd, tl, td, hp, z) {\n    var result;\n\n    // build literal/length tree\n    this.initWorkArea(288);\n    this.hn[0]=0;\n    result = this.huft_build(c, 0, nl, 257, cplens, cplext, tl, bl, hp, this.hn, this.v);\n    if (result != Z_OK || bl[0] == 0){\n      if(result == Z_DATA_ERROR){\n        z.msg = \"oversubscribed literal/length tree\";\n      }\n      else if (result != Z_MEM_ERROR){\n        z.msg = \"incomplete literal/length tree\";\n        result = Z_DATA_ERROR;\n      }\n      return result;\n    }\n\n    // build distance tree\n    this.initWorkArea(288);\n    result = this.huft_build(c, nl, nd, 0, cpdist, cpdext, td, bd, hp, this.hn, this.v);\n\n    if (result != Z_OK || (bd[0] == 0 && nl > 257)){\n      if (result == Z_DATA_ERROR){\n        z.msg = \"oversubscribed distance tree\";\n      }\n      else if (result == Z_BUF_ERROR) {\n        z.msg = \"incomplete distance tree\";\n        result = Z_DATA_ERROR;\n      }\n      else if (result != Z_MEM_ERROR){\n        z.msg = \"empty distance tree with lengths\";\n        result = Z_DATA_ERROR;\n      }\n      return result;\n    }\n\n    return Z_OK;\n}\n/*\n  static int inflate_trees_fixed(int[] bl,  //literal desired/actual bit depth\n                                 int[] bd,  //distance desired/actual bit depth\n                                 int[][] tl,//literal/length tree result\n                                 int[][] td,//distance tree result\n                                 ZStream z  //for memory allocation\n\t\t\t\t ){\n\n*/\n\nfunction inflate_trees_fixed(bl, bd, tl, td, z) {\n    bl[0]=fixed_bl;\n    bd[0]=fixed_bd;\n    tl[0]=fixed_tl;\n    td[0]=fixed_td;\n    return Z_OK;\n}\n\nInfTree.prototype.initWorkArea = function(vsize){\n    if(this.hn==null){\n        this.hn=new Int32Array(1);\n        this.v=new Int32Array(vsize);\n        this.c=new Int32Array(BMAX+1);\n        this.r=new Int32Array(3);\n        this.u=new Int32Array(BMAX);\n        this.x=new Int32Array(BMAX+1);\n    }\n    if(this.v.length<vsize){\n        this.v=new Int32Array(vsize);\n    }\n    for(var i=0; i<vsize; i++){this.v[i]=0;}\n    for(var i=0; i<BMAX+1; i++){this.c[i]=0;}\n    for(var i=0; i<3; i++){this.r[i]=0;}\n//  for(int i=0; i<BMAX; i++){u[i]=0;}\n    arrayCopy(this.c, 0, this.u, 0, BMAX);\n//  for(int i=0; i<BMAX+1; i++){x[i]=0;}\n    arrayCopy(this.c, 0, this.x, 0, BMAX+1);\n}\n\nvar testArray = new Uint8Array(1);\nvar hasSubarray = (typeof testArray.subarray === 'function');\nvar hasSlice = false; /* (typeof testArray.slice === 'function'); */ // Chrome slice performance is so dire that we're currently not using it...\n\nfunction arrayCopy(src, srcOffset, dest, destOffset, count) {\n    if (count == 0) {\n        return;\n    }\n    if (!src) {\n        throw \"Undef src\";\n    } else if (!dest) {\n        throw \"Undef dest\";\n    }\n\n    if (srcOffset == 0 && count == src.length) {\n        arrayCopy_fast(src, dest, destOffset);\n    } else if (hasSubarray) {\n        arrayCopy_fast(src.subarray(srcOffset, srcOffset + count), dest, destOffset);\n    } else if (src.BYTES_PER_ELEMENT == 1 && count > 100) {\n        arrayCopy_fast(new Uint8Array(src.buffer, src.byteOffset + srcOffset, count), dest, destOffset);\n    } else {\n        arrayCopy_slow(src, srcOffset, dest, destOffset, count);\n    }\n\n}\n\nfunction arrayCopy_slow(src, srcOffset, dest, destOffset, count) {\n\n    // dlog('_slow call: srcOffset=' + srcOffset + '; destOffset=' + destOffset + '; count=' + count);\n\n     for (var i = 0; i < count; ++i) {\n        dest[destOffset + i] = src[srcOffset + i];\n    }\n}\n\nfunction arrayCopy_fast(src, dest, destOffset) {\n    dest.set(src, destOffset);\n}\n\n\n  // largest prime smaller than 65536\nvar ADLER_BASE=65521;\n  // NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1\nvar ADLER_NMAX=5552;\n\nfunction adler32(adler, /* byte[] */ buf,  index, len){\n    if(buf == null){ return 1; }\n\n    var s1=adler&0xffff;\n    var s2=(adler>>16)&0xffff;\n    var k;\n\n    while(len > 0) {\n      k=len<ADLER_NMAX?len:ADLER_NMAX;\n      len-=k;\n      while(k>=16){\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        k-=16;\n      }\n      if(k!=0){\n        do{\n          s1+=buf[index++]&0xff; s2+=s1;\n        }\n        while(--k!=0);\n      }\n      s1%=ADLER_BASE;\n      s2%=ADLER_BASE;\n    }\n    return (s2<<16)|s1;\n}\n\n\n\nfunction jszlib_inflate_buffer(buffer, start, length, afterUncOffset) {\n    if (!start) {\n        buffer = new Uint8Array(buffer);\n    } else if (!length) {\n        buffer = new Uint8Array(buffer, start, buffer.byteLength - start);\n    } else {\n        buffer = new Uint8Array(buffer, start, length);\n    }\n\n    var z = new ZStream();\n    z.inflateInit(DEF_WBITS, true);\n    z.next_in = buffer;\n    z.next_in_index = 0;\n    z.avail_in = buffer.length;\n\n    var oBlockList = [];\n    var totalSize = 0;\n    while (true) {\n        var obuf = new Uint8Array(32000);\n        z.next_out = obuf;\n        z.next_out_index = 0;\n        z.avail_out = obuf.length;\n        var status = z.inflate(Z_NO_FLUSH);\n        if (status != Z_OK && status != Z_STREAM_END && status != Z_BUF_ERROR) {\n            throw z.msg;\n        }\n        if (z.avail_out != 0) {\n            var newob = new Uint8Array(obuf.length - z.avail_out);\n            arrayCopy(obuf, 0, newob, 0, (obuf.length - z.avail_out));\n            obuf = newob;\n        }\n        oBlockList.push(obuf);\n        totalSize += obuf.length;\n        if (status == Z_STREAM_END || status == Z_BUF_ERROR) {\n            break;\n        }\n    }\n\n    if (afterUncOffset) {\n        afterUncOffset[0] = (start || 0) + z.next_in_index;\n    }\n\n    if (oBlockList.length == 1) {\n        return oBlockList[0].buffer;\n    } else {\n        var out = new Uint8Array(totalSize);\n        var cursor = 0;\n        for (var i = 0; i < oBlockList.length; ++i) {\n            var b = oBlockList[i];\n            arrayCopy(b, 0, out, cursor, b.length);\n            cursor += b.length;\n        }\n        return out.buffer;\n    }\n}\n\nreturn {\n    inflateBuffer: jszlib_inflate_buffer,\n    arrayCopy: arrayCopy\n  };\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(jQuery) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     jQuery Ajax Native Plugin\n\n//     (c) 2015 Tarik Zakaria Benmerar, Acigna Inc.\n//      jQuery Ajax Native Plugin may be freely distributed under the MIT license.\n(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(0)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('jquery'));\n    } else {\n        // Browser globals (root is window)\n        factory(root.jQuery);\n    }\n}(this, function ( $ ) {\n    var ajaxSettings = $.ajaxSettings;\n    ajaxSettings.responseFields.native = 'responseNative';\n    ajaxSettings.converters[ '* native' ] = true;\n    var support = {},\n        xhrId = 0,\n        xhrSuccessStatus = {\n            // file protocol always yields status code 0, assume 200\n            0: 200,\n            // Support: IE9\n            // #1450: sometimes IE returns 1223 when it should be 204\n            1223: 204\n        },\n        xhrCallbacks = {},\n        xhrSupported = jQuery.ajaxSettings.xhr();\n    // Support: IE9\n    // Open requests must be manually aborted on unload (#5280)\n    if ( window.ActiveXObject ) {\n        $( window ).on( \"unload\", function() {\n            for ( var key in xhrCallbacks ) {\n                xhrCallbacks[ key ]();\n            }\n        });\n    }\n    support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n    support.ajax = xhrSupported = !!xhrSupported;\n\n    //Native Data Type Ajax Transport\n    $.ajaxTransport('native', function ( options ) {\n        var callback;\n        // Cross domain only allowed if supported through XMLHttpRequest\n        if ( support.cors || xhrSupported && !options.crossDomain ) {\n            return {\n                send: function( headers, complete ) {\n                    var i,\n                        xhr = options.xhr(),\n                        id = ++xhrId,\n                        responses = {};\n\n                    xhr.open( options.type, options.url, options.async, options.username, options.password );\n\n                    // Apply custom fields if provided\n                    if ( options.xhrFields ) {\n                        for ( i in options.xhrFields ) {\n                            xhr[ i ] = options.xhrFields[ i ];\n                        }\n                    }\n\n                    // Override mime type if needed\n                    if ( options.mimeType && xhr.overrideMimeType ) {\n                        xhr.overrideMimeType( options.mimeType );\n                    }\n\n                    // X-Requested-With header\n                    // For cross-domain requests, seeing as conditions for a preflight are\n                    // akin to a jigsaw puzzle, we simply never set it to be sure.\n                    // (it can always be set on a per-request basis or even using ajaxSetup)\n                    // For same-domain requests, won't change header if already provided.\n                    if ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n                        headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n                    }\n\n                    // Set headers\n                    for ( i in headers ) {\n                        xhr.setRequestHeader( i, headers[ i ] );\n                    }\n\n                    // Callback\n                    callback = function( type ) {\n                        return function() {\n                            if ( callback ) {\n                                delete xhrCallbacks[ id ];\n                                callback = xhr.onload = xhr.onerror = null;\n\n                                if ( type === \"abort\" ) {\n                                    xhr.abort();\n                                } else if ( type === \"error\" ) {\n                                    complete(\n                                        // file: protocol always yields status 0; see #8605, #14207\n                                        xhr.status,\n                                        xhr.statusText\n                                    );\n                                } else {\n                                    // The native response associated with the responseType\n                                    // Stored in the xhr.response attribute (XHR2 Spec)\n                                    if ( xhr.response ) {\n                                        responses.native = xhr.response;\n                                    }\n\n                                    complete(\n                                        xhrSuccessStatus[ xhr.status ] || xhr.status,\n                                        xhr.statusText,\n                                        responses,\n                                        xhr.getAllResponseHeaders()\n                                    );\n                                }\n                            }\n                        };\n                    };\n\n                    // Listen to events\n                    xhr.onload = callback();\n                    xhr.onerror = callback(\"error\");\n\n                    // Create the abort callback\n                    callback = xhrCallbacks[ id ] = callback(\"abort\");\n\n                    try {\n                        // Do send the request (this may raise an exception)\n                        xhr.send( options.hasContent && options.data || null );\n                    } catch ( e ) {\n                        // #14683: Only rethrow if this hasn't been notified as an error yet\n                        if ( callback ) {\n                            throw e;\n                        }\n                    }\n                },\n\n                abort: function() {\n                    if ( callback ) {\n                        callback();\n                    }\n                }\n            };\n        }\n    });\n\n\n    //$.getNative wrapper\n    $.getNative = function ( url, callback ) {\n        return $.ajax({\n            dataType: 'native',\n            url: url,\n            xhrFields: {\n                responseType: 'arraybuffer'\n            },\n            success: callback\n        });\n    }\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"user\";\n//==============================================================================\n/** @class View to display a user's disk/storage usage\n *      either as a progress bar representing the percentage of a quota used\n *      or a simple text element displaying the human readable size used.\n *  @name UserQuotaMeter\n *  @augments Backbone.View\n */\nvar UserQuotaMeter = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(\n/** @lends UserQuotaMeter.prototype */{\n    _logNamespace: logNamespace,\n\n    /** Defaults for optional settings passed to initialize */\n    options: {\n        warnAtPercent: 85,\n        errorAtPercent: 100\n    },\n\n    /** Set up, accept options, and bind events */\n    initialize: function initialize(options) {\n        this.log(this + \".initialize:\", options);\n        _.extend(this.options, options);\n\n        //this.bind( 'all', function( event, data ){ this.log( this + ' event:', event, data ); }, this );\n        this.listenTo(this.model, \"change:quota_percent change:total_disk_usage\", this.render);\n    },\n\n    /** Re-load user model data from the api */\n    update: function update(options) {\n        this.log(this + \" updating user data...\", options);\n        this.model.loadFromApi(this.model.get(\"id\"), options);\n        return this;\n    },\n\n    /** Is the user over their quota (if there is one)?\n     * @returns {Boolean} true if over quota, false if no quota or under quota\n     */\n    isOverQuota: function isOverQuota() {\n        return this.model.get(\"quota_percent\") !== null && this.model.get(\"quota_percent\") >= this.options.errorAtPercent;\n    },\n\n    /** Render the meter when they have an applicable quota. Will render as a progress bar\n     *      with their percentage of that quota in text over the bar.\n     *  @fires quota:over when user is over quota (>= this.errorAtPercent)\n     *  @fires quota:under when user is under quota\n     *  @fires quota:under:approaching when user is >= this.warnAtPercent of their quota\n     *  @fires quota:under:ok when user is below this.warnAtPercent\n     *  @returns {jQuery} the rendered meter\n     */\n    _render_quota: function _render_quota() {\n        var modelJson = this.model.toJSON();\n\n        var //prevPercent = this.model.previous( 'quota_percent' ),\n        percent = modelJson.quota_percent;\n\n        var //meter = $( UserQuotaMeter.templates.quota( modelJson ) );\n        $meter = $(this._templateQuotaMeter(modelJson));\n\n        var $bar = $meter.find(\".progress-bar\");\n        //this.log( this + '.rendering quota, percent:', percent, 'meter:', meter );\n\n        // OVER QUOTA: color the quota bar and show the quota error message\n        if (this.isOverQuota()) {\n            //this.log( '\\t over quota' );\n            $bar.attr(\"class\", \"progress-bar progress-bar-danger\");\n            $meter.find(\".quota-meter-text\").css(\"color\", \"white\");\n            //TODO: only trigger event if state has changed\n            this.trigger(\"quota:over\", modelJson);\n\n            // APPROACHING QUOTA: color the quota bar\n        } else if (percent >= this.options.warnAtPercent) {\n            //this.log( '\\t approaching quota' );\n            $bar.attr(\"class\", \"progress-bar progress-bar-warning\");\n            //TODO: only trigger event if state has changed\n            this.trigger(\"quota:under quota:under:approaching\", modelJson);\n\n            // otherwise, hide/don't use the msg box\n        } else {\n            $bar.attr(\"class\", \"progress-bar progress-bar-success\");\n            //TODO: only trigger event if state has changed\n            this.trigger(\"quota:under quota:under:ok\", modelJson);\n        }\n        return $meter;\n    },\n\n    /** Render the meter when the user has NO applicable quota. Will render as text\n     *      showing the human readable sum storage their data is using.\n     *  @returns {jQuery} the rendered text\n     */\n    _render_usage: function _render_usage() {\n        //var usage = $( UserQuotaMeter.templates.usage( this.model.toJSON() ) );\n        var usage = $(this._templateUsage(this.model.toJSON()));\n        this.log(this + \".rendering usage:\", usage);\n        return usage;\n    },\n\n    /** Render either the quota percentage meter or the human readable disk usage\n     *      depending on whether the user model has quota info (quota_percent === null -> no quota)\n     *  @returns {Object} this UserQuotaMeter\n     */\n    render: function render() {\n        //this.log( this + '.rendering' );\n        var meterHtml = null;\n\n        // no quota on server ('quota_percent' === null (can be valid at 0)), show usage instead\n        this.log(this + \".model.quota_percent:\", this.model.get(\"quota_percent\"));\n        if (this.model.get(\"quota_percent\") === null || this.model.get(\"quota_percent\") === undefined) {\n            meterHtml = this._render_usage();\n\n            // otherwise, render percent of quota (and warning, error)\n        } else {\n            meterHtml = this._render_quota();\n            //TODO: add the original text for unregistered quotas\n            //tooltip = \"Your disk quota is %s.  You can increase your quota by registering a Galaxy account.\"\n        }\n\n        this.$el.html(meterHtml);\n        this.$el.find(\".quota-meter-text\").tooltip();\n        return this;\n    },\n\n    _templateQuotaMeter: function _templateQuotaMeter(data) {\n        return ['<div id=\"quota-meter\" class=\"quota-meter progress\">', '<div class=\"progress-bar\" style=\"width: ', data.quota_percent, '%\"></div>', '<div class=\"quota-meter-text\" data-placement=\"left\" style=\"top: 6px\"', data.nice_total_disk_usage ? \" title=\\\"Using \" + data.nice_total_disk_usage + \".  This value is recalculated when you log out.\\\">\" : \">\", (0, _localization2.default)(\"Using\"), \" \", data.quota_percent, \"%\", \"</div>\", \"</div>\"].join(\"\");\n    },\n\n    _templateUsage: function _templateUsage(data) {\n        return ['<div id=\"quota-meter\" class=\"quota-meter\" style=\"background-color: transparent\">', '<div class=\"quota-meter-text\" data-placement=\"left\" data-original-title=\"This value is recalculated when you log out.\" style=\"top: 6px; color: white\">', data.nice_total_disk_usage ? (0, _localization2.default)(\"Using \") + data.nice_total_disk_usage : \"\", \"</div>\", \"</div>\"].join(\"\");\n    },\n\n    toString: function toString() {\n        return \"UserQuotaMeter(\" + this.model + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    UserQuotaMeter: UserQuotaMeter\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    optionsDefault: {\n        with_close: true,\n        title: null,\n        placement: \"top\",\n        container: \"body\",\n        body: null\n    },\n\n    initialize: function initialize(options) {\n        this.setElement(this._template());\n        this.uid = _utils2.default.uid();\n        this.options = _.defaults(options || {}, this.optionsDefault);\n        this.options.container.parent().append(this.el);\n        this.$title = this.$(\".popover-title-label\");\n        this.$close = this.$(\".popover-close\");\n        this.$body = this.$(\".popover-content\");\n\n        // add initial content\n        this.options.body && this.append(this.options.body);\n\n        // add event to hide if click is outside of popup and not on container\n        var self = this;\n        $(\"body\").on(\"mousedown.\" + this.uid, function (e) {\n            // the 'is' for buttons that trigger popups\n            // the 'has' for icons within a button that triggers a popup\n            self.visible && !$(self.options.container).is(e.target) && !$(self.el).is(e.target) && $(self.el).has(e.target).length === 0 && self.hide();\n        });\n    },\n\n    /**\n     * Render popover\n     */\n    render: function render() {\n        this.$title.html(this.options.title);\n        this.$el.removeClass().addClass(\"ui-popover popover fade in\").addClass(this.options.placement);\n        this.$el.css(this._get_placement(this.options.placement));\n\n        // configure close option\n        var self = this;\n        if (this.options.with_close) {\n            this.$close.on(\"click\", function () {\n                self.hide();\n            }).show();\n        } else {\n            this.$close.off().hide();\n        }\n    },\n\n    /**\n     * Set the popover title\n     * @params{ String }    newTitle    - New popover title\n     */\n    title: function title(newTitle) {\n        if (newTitle !== undefined) {\n            this.options.title = newTitle;\n            this.$title.html(newTitle);\n        }\n    },\n\n    /**\n     * Show popover\n     */\n    show: function show() {\n        this.render();\n        this.$el.show();\n        this.visible = true;\n    },\n\n    /**\n     * Hide popover\n     */\n    hide: function hide() {\n        this.$el.hide();\n        this.visible = false;\n    },\n\n    /**\n     * Append new content to the popover\n     * @params{ Object }  $el - Dom element\n     */\n    append: function append($el) {\n        this.$body.append($el);\n    },\n\n    /**\n     * Remove all content\n     */\n    empty: function empty() {\n        this.$body.empty();\n    },\n\n    /**\n     * Remove popover\n     */\n    remove: function remove() {\n        $(\"body\").off(\"mousedown.\" + this.uid);\n        this.$el.remove();\n    },\n\n    /**\n     * Improve popover location/placement\n     */\n    _get_placement: function _get_placement(placement) {\n        // get popover dimensions\n        var width = this._get_width(this.$el);\n        var height = this.$el.height();\n\n        // get container details\n        var $container = this.options.container;\n        var container_width = this._get_width($container);\n        var container_height = this._get_height($container);\n        var container_position = $container.position();\n\n        // get position\n        var top;\n\n        var left;\n        top = left = 0;\n        if ([\"top\", \"bottom\"].indexOf(placement) != -1) {\n            left = container_position.left - width + (container_width + width) / 2;\n            switch (placement) {\n                case \"top\":\n                    top = container_position.top - height - 5;\n                    break;\n                case \"bottom\":\n                    top = container_position.top + container_height + 5;\n                    break;\n            }\n        } else {\n            top = container_position.top - height + (container_height + height) / 2;\n            switch (placement) {\n                case \"right\":\n                    left = container_position.left + container_width;\n                    break;\n            }\n        }\n        return { top: top, left: left };\n    },\n\n    /**\n     * Returns padding/margin corrected width\n     */\n    _get_width: function _get_width($el) {\n        return $el.width() + parseInt($el.css(\"padding-left\")) + parseInt($el.css(\"margin-left\")) + parseInt($el.css(\"padding-right\")) + parseInt($el.css(\"margin-right\"));\n    },\n\n    /**\n     * Returns padding corrected height\n     */\n    _get_height: function _get_height($el) {\n        return $el.height() + parseInt($el.css(\"padding-top\")) + parseInt($el.css(\"padding-bottom\"));\n    },\n\n    /**\n     * Return the popover template\n     */\n    _template: function _template(options) {\n        return '<div class=\"ui-popover popover fade in\">' + '<div class=\"arrow\"/>' + '<div class=\"popover-title\">' + '<div class=\"popover-title-label\"/>' + '<div class=\"popover-close fa fa-times-circle\"/>' + \"</div>\" + '<div class=\"popover-content\"/>' + \"</div>\";\n    }\n}); /**\n     * Popover wrapper\n     */\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n//==============================================================================\n/** Map of possible HDA/collection/job states to their string equivalents.\n *      A port of galaxy.model.Dataset.states.\n */\nvar STATES = {\n    // NOT ready states\n    /** is uploading and not ready */\n    UPLOAD: \"upload\",\n    /** the job that will produce the dataset queued in the runner */\n    QUEUED: \"queued\",\n    /** the job that will produce the dataset is running */\n    RUNNING: \"running\",\n    /** metadata for the dataset is being discovered/set */\n    SETTING_METADATA: \"setting_metadata\",\n\n    // ready states\n    /** was created without a tool */\n    NEW: \"new\",\n    /** has no data */\n    EMPTY: \"empty\",\n    /** has successfully completed running */\n    OK: \"ok\",\n\n    /** the job that will produce the dataset paused */\n    PAUSED: \"paused\",\n    /** metadata discovery/setting failed or errored (but otherwise ok) */\n    FAILED_METADATA: \"failed_metadata\",\n    //TODO: not in trans.app.model.Dataset.states - is in database\n    /** not accessible to the current user (i.e. due to permissions) */\n    NOT_VIEWABLE: \"noPermission\",\n    /** deleted while uploading */\n    DISCARDED: \"discarded\",\n    /** the tool producing this dataset failed */\n    ERROR: \"error\"\n};\n\nSTATES.READY_STATES = [STATES.OK, STATES.EMPTY, STATES.PAUSED, STATES.FAILED_METADATA, STATES.NOT_VIEWABLE, STATES.DISCARDED, STATES.ERROR];\n\nSTATES.NOT_READY_STATES = [STATES.UPLOAD, STATES.QUEUED, STATES.RUNNING, STATES.SETTING_METADATA, STATES.NEW];\n\n//==============================================================================\nexports.default = STATES;\n\n/***/ }),\n/* 47 */,\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A plugin for initializing select2 input items.\n * Make sure the select2 library itself is loaded beforehand.\n * Also the element to which select2 will be appended has to\n * be created before select2 initialization (and passed as option).\n */\nvar View = Backbone.View.extend({\n    // options\n    optionsDefault: {\n        css: \"\",\n        placeholder: \"No data available\",\n        data: [],\n        value: null,\n        multiple: false,\n        minimumInputLength: 0,\n        // example format of initial data: \"id:name,55:anotherrole@role.com,27:role@role.com\"\n        initialData: \"\"\n    },\n\n    // initialize\n    initialize: function initialize(options) {\n        // configure options\n        this.options = _utils2.default.merge(options, this.optionsDefault);\n\n        // create new element\n        this.setElement(this._template(this.options));\n\n        // check if container exists\n        if (!this.options.container) {\n            console.log(\"ui-select::initialize() : container not specified.\");\n            return;\n        }\n\n        // add to dom\n        this.options.container.append(this.$el);\n\n        // link selection dictionary\n        this.select_data = this.options.data;\n\n        // refresh\n        this._refresh();\n\n        if (!this.options.multiple) {\n            // initial value\n            if (this.options.value) {\n                this._setValue(this.options.value);\n            }\n\n            // add change event\n            var self = this;\n            if (this.options.onchange) {\n                this.$el.on(\"change\", function () {\n                    self.options.onchange(self.value());\n                });\n            }\n        }\n    },\n\n    // value\n    value: function value(new_value) {\n        // get current id/value\n        var before = this._getValue();\n\n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this._setValue(new_value);\n        }\n\n        // get current id/value\n        var after = this._getValue();\n\n        // fire onchange\n        if (after != before && this.options.onchange) {\n            this.options.onchange(after);\n        }\n\n        // return current value\n        return after;\n    },\n\n    // label\n    text: function text() {\n        return this.$el.select2(\"data\").text;\n    },\n\n    // disabled\n    disabled: function disabled() {\n        return !this.$el.select2(\"enable\");\n    },\n\n    // enable\n    enable: function enable() {\n        this.$el.select2(\"enable\", true);\n    },\n\n    // disable\n    disable: function disable() {\n        this.$el.select2(\"enable\", false);\n    },\n\n    // add\n    add: function add(options) {\n        // add options\n        this.select_data.push({\n            id: options.id,\n            text: options.text\n        });\n\n        // refresh\n        this._refresh();\n    },\n\n    // remove\n    del: function del(id) {\n        // search option\n        var index = this._getIndex(id);\n\n        // check if found\n        if (index != -1) {\n            // remove options\n            this.select_data.splice(index, 1);\n\n            // refresh\n            this._refresh();\n        }\n    },\n\n    // remove\n    remove: function remove() {\n        this.$el.select2(\"destroy\");\n    },\n\n    // update\n    update: function update(options) {\n        // copy options\n        this.select_data = [];\n        for (var key in options.data) {\n            this.select_data.push(options.data[key]);\n        }\n\n        // refresh\n        this._refresh();\n    },\n\n    // refresh\n    _refresh: function _refresh() {\n        // add select2 data based on type of input\n        if (!this.options.multiple) {\n            var selected = this._getValue();\n            var select_opt = {\n                data: this.select_data,\n                containerCssClass: this.options.css,\n                placeholder: this.options.placeholder,\n                dropdownAutoWidth: true\n            };\n            this.$el.select2(select_opt);\n            // select previous value (if exists)\n            this._setValue(selected);\n        } else {\n            var select_opt = {\n                multiple: this.options.multiple,\n                containerCssClass: this.options.css,\n                placeholder: this.options.placeholder,\n                minimumInputLength: this.options.minimumInputLength,\n                ajax: this.options.ajax,\n                dropdownCssClass: this.options.dropdownCssClass,\n                escapeMarkup: this.options.escapeMarkup,\n                formatResult: this.options.formatResult,\n                formatSelection: this.options.formatSelection,\n                initSelection: this.options.initSelection,\n                initialData: this.options.initialData\n            };\n            this.$el.select2(select_opt);\n        }\n    },\n\n    // get index\n    _getIndex: function _getIndex(value) {\n        // returns the index of the searched value\n        _.findIndex(this.select_data, { id: value });\n    },\n\n    // get value\n    _getValue: function _getValue() {\n        return this.$el.select2(\"val\");\n    },\n\n    // set value\n    _setValue: function _setValue(new_value) {\n        var index = this._getIndex(new_value);\n        if (index == -1) {\n            if (this.select_data.length > 0) {\n                new_value = this.select_data[0].id;\n            }\n        }\n        this.$el.select2(\"val\", new_value);\n    },\n\n    // element\n    _template: function _template(options) {\n        return \"<input type=\\\"hidden\\\" value=\\\"\" + this.options.initialData + \"\\\"/>\";\n    }\n}); // dependencies\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\"use_strict\";\n\nvar $ = _jquery2.default;\n//============================================================================\n/** Returns a jQuery object containing a clickable font-awesome button.\n *      options:\n *          tooltipConfig   : option map for bootstrap tool tip\n *          classes         : array of class names (will always be classed as icon-btn)\n *          disabled        : T/F - add the 'disabled' class?\n *          title           : tooltip/title string\n *          target          : optional href target\n *          href            : optional href\n *          faIcon          : which font awesome icon to use\n *          onclick         : function to call when the button is clicked\n */\nvar faIconButton = function faIconButton(options) {\n    options = options || {};\n    options.tooltipConfig = options.tooltipConfig || {\n        placement: \"bottom\"\n    };\n\n    options.classes = [\"icon-btn\"].concat(options.classes || []);\n    if (options.disabled) {\n        options.classes.push(\"disabled\");\n    }\n\n    var html = ['<a class=\"', options.classes.join(\" \"), '\"', options.title ? \" title=\\\"\" + options.title + \"\\\"\" : \"\", !options.disabled && options.target ? \" target=\\\"\" + options.target + \"\\\"\" : \"\", ' href=\"', !options.disabled && options.href ? options.href : \"javascript:void(0);\", '\">',\n    // could go with something less specific here - like 'html'\n    '<span class=\"fa ', options.faIcon, '\"></span>', \"</a>\"].join(\"\");\n    var $button = $(html).tooltip(options.tooltipConfig);\n    if (_.isFunction(options.onclick)) {\n        $button.click(options.onclick);\n    }\n    return $button;\n};\n\n//============================================================================\nexports.default = faIconButton;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _backbone = __webpack_require__(2);\n\nvar Backbone = _interopRequireWildcard(_backbone);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _userModel = __webpack_require__(24);\n\nvar _userModel2 = _interopRequireDefault(_userModel);\n\nvar _metricsLogger = __webpack_require__(60);\n\nvar _metricsLogger2 = _interopRequireDefault(_metricsLogger);\n\nvar _addLogging = __webpack_require__(19);\n\nvar _addLogging2 = _interopRequireDefault(_addLogging);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// TODO: move into a singleton pattern and have dependents import Galaxy\n// ============================================================================\n/** Base galaxy client-side application.\n *      Iniitializes:\n *          logger      : the logger/metrics-logger\n *          localize    : the string localizer\n *          config      : the current configuration (any k/v in\n *              galaxy.ini available from the configuration API)\n *          user        : the current user (as a mvc/user/user-model)\n */\nfunction GalaxyApp(options, bootstrapped) {\n    var self = this;\n    return self._init(options || {}, bootstrapped || {});\n}\n\n// add logging shortcuts for this object\n(0, _addLogging2.default)(GalaxyApp, \"GalaxyApp\");\n\n// a debug flag can be set via local storage and made available during script/page loading\nvar DEBUGGING_KEY = \"galaxy:debug\";\n\nvar NAMESPACE_KEY = DEBUGGING_KEY + \":namespaces\";\nvar FLATTEN_LOG_MESSAGES_KEY = DEBUGGING_KEY + \":flatten\";\n\nvar localDebugging = false;\ntry {\n    localDebugging = localStorage.getItem(DEBUGGING_KEY) == \"true\";\n} catch (storageErr) {\n    console.log((0, _localization2.default)(\"localStorage not available for debug flag retrieval\"));\n}\n\n/** initalize options and sub-components */\nGalaxyApp.prototype._init = function __init(options, bootstrapped) {\n    var self = this;\n    _.extend(self, Backbone.Events);\n    if (localDebugging) {\n        self.logger = console;\n        console.debug(\"debugging galaxy:\", \"options:\", options, \"bootstrapped:\", bootstrapped);\n    }\n\n    self._processOptions(options);\n\n    // add root and url parameters\n    self.root = options.root || \"/\";\n    self.params = options.params || {};\n    self.session_csrf_token = options.session_csrf_token || null;\n\n    self._initConfig(options.config || {});\n    self._patchGalaxy(window.Galaxy);\n\n    self._initLogger(self.options.loggerOptions || {});\n    // at this point, either logging or not and namespaces are enabled - chat it up\n    self.debug(\"GalaxyApp.options: \", self.options);\n    self.debug(\"GalaxyApp.config: \", self.config);\n    self.debug(\"GalaxyApp.logger: \", self.logger);\n\n    self._initLocale();\n    self.debug(\"GalaxyApp.localize: \", self.localize);\n\n    self.config = options.config || {};\n    self.debug(\"GalaxyApp.config: \", self.config);\n\n    self._initUser(options.user || {});\n    self.debug(\"GalaxyApp.user: \", self.user);\n\n    self._setUpListeners();\n    self.trigger(\"ready\", self);\n\n    return self;\n};\n\n/** default options */\nGalaxyApp.prototype.defaultOptions = {\n    /** monkey patch attributes from existing window.Galaxy object? */\n    patchExisting: true,\n    /** root url of this app */\n    root: \"/\",\n    session_csrf_token: null\n};\n\n/** filter to options present in defaultOptions (and default to them) */\nGalaxyApp.prototype._processOptions = function _processOptions(options) {\n    var self = this;\n    var defaults = self.defaultOptions;\n\n    self.options = {};\n    for (var k in defaults) {\n        if (defaults.hasOwnProperty(k)) {\n            self.options[k] = options.hasOwnProperty(k) ? options[k] : defaults[k];\n        }\n    }\n    return self;\n};\n\n/** parse the config and any extra info derived from it */\nGalaxyApp.prototype._initConfig = function _initConfig(config) {\n    var self = this;\n    self.config = config;\n\n    // give precendence to localdebugging for this setting\n    self.config.debug = localDebugging || self.config.debug;\n\n    return self;\n};\n\n/** add an option from options if the key matches an option in defaultOptions */\nGalaxyApp.prototype._patchGalaxy = function _patchGalaxy(patchWith) {\n    var self = this;\n    // in case req or plain script tag order has created a prev. version of the Galaxy obj...\n    if (self.options.patchExisting && patchWith) {\n        // self.debug( 'found existing Galaxy object:', patchWith );\n        // ...(for now) monkey patch any added attributes that the previous Galaxy may have had\n        //TODO: move those attributes to more formal assignment in GalaxyApp\n        for (var k in patchWith) {\n            if (patchWith.hasOwnProperty(k)) {\n                // self.debug( '\\t patching in ' + k + ' to Galaxy:', self[ k ] );\n                self[k] = patchWith[k];\n            }\n        }\n    }\n};\n\n/** set up the metrics logger (utils/metrics-logger) and pass loggerOptions */\nGalaxyApp.prototype._initLogger = function _initLogger(loggerOptions) {\n    var self = this;\n\n    // default to console logging at the debug level if the debug flag is set\n    if (self.config.debug) {\n        loggerOptions.consoleLogger = loggerOptions.consoleLogger || console;\n        loggerOptions.consoleLevel = loggerOptions.consoleLevel || _metricsLogger2.default.MetricsLogger.ALL;\n        // load any logging namespaces from localStorage if we can\n        try {\n            loggerOptions.consoleNamespaceWhitelist = localStorage.getItem(NAMESPACE_KEY).split(\",\");\n        } catch (storageErr) {}\n        try {\n            loggerOptions.consoleFlattenMessages = localStorage.getItem(FLATTEN_LOG_MESSAGES_KEY) == \"true\";\n        } catch (storageErr) {}\n        console.log(loggerOptions.consoleFlattenMessages);\n    }\n\n    self.logger = new _metricsLogger2.default.MetricsLogger(loggerOptions);\n    self.emit = {};\n    [\"log\", \"debug\", \"info\", \"warn\", \"error\", \"metric\"].map(function (i) {\n        self.emit[i] = function (data) {\n            self.logger.emit(i, arguments[0], Array.prototype.slice.call(arguments, 1));\n        };\n    });\n\n    if (self.config.debug) {\n        // add this logger to mvc's loggable mixin so that all models can use the logger\n        _baseMvc2.default.LoggableMixin.logger = self.logger;\n    }\n    return self;\n};\n\n/** add the localize fn to this object and the window namespace (as '_l') */\nGalaxyApp.prototype._initLocale = function _initLocale(options) {\n    var self = this;\n    self.debug(\"_initLocale:\", options);\n    self.localize = _localization2.default;\n    // add to window as global shortened alias\n    // TODO: temporary - remove when can require for plugins\n    window._l = self.localize;\n    return self;\n};\n\n/** set up the current user as a Backbone model (mvc/user/user-model) */\nGalaxyApp.prototype._initUser = function _initUser(userJSON) {\n    var self = this;\n    self.debug(\"_initUser:\", userJSON);\n    self.user = new _userModel2.default.User(userJSON);\n    self.user.logger = self.logger;\n    return self;\n};\n\n/** Set up DOM/jQuery/Backbone event listeners enabled for all pages */\nGalaxyApp.prototype._setUpListeners = function _setUpListeners() {\n    var self = this;\n\n    // hook to jq beforeSend to record the most recent ajax call and cache some data about it\n    /** cached info about the last ajax call made through jQuery */\n    self.lastAjax = {};\n    $(document).bind(\"ajaxSend\", function (ev, xhr, options) {\n        var data = options.data;\n        try {\n            data = JSON.parse(data);\n        } catch (err) {}\n\n        self.lastAjax = {\n            url: location.href.slice(0, -1) + options.url,\n            data: data\n        };\n        //TODO:?? we might somehow manage to *retry* ajax using either this hook or Backbone.sync\n    });\n    return self;\n};\n\n/** Turn debugging/console-output on/off by passing boolean. Pass nothing to get current setting. */\nGalaxyApp.prototype.debugging = function _debugging(setting) {\n    var self = this;\n    try {\n        if (setting === undefined) {\n            return localStorage.getItem(DEBUGGING_KEY) === \"true\";\n        }\n        if (setting) {\n            localStorage.setItem(DEBUGGING_KEY, true);\n            return true;\n        }\n\n        localStorage.removeItem(DEBUGGING_KEY);\n        // also remove all namespaces\n        self.debuggingNamespaces(null);\n    } catch (storageErr) {\n        console.log((0, _localization2.default)(\"localStorage not available for debug flag retrieval\"));\n    }\n    return false;\n};\n\n/** Add, remove, or clear namespaces from the debugging filters\n *  Pass no arguments to retrieve the existing namespaces as an array.\n *  Pass in null to clear all namespaces (all logging messages will show now).\n *  Pass in an array of strings or single string of the namespaces to filter to.\n *  Returns the new/current namespaces as an array;\n */\nGalaxyApp.prototype.debuggingNamespaces = function _debuggingNamespaces(namespaces) {\n    var self = this;\n    try {\n        if (namespaces === undefined) {\n            var csv = localStorage.getItem(NAMESPACE_KEY);\n            return typeof csv === \"string\" ? csv.split(\",\") : [];\n        } else if (namespaces === null) {\n            localStorage.removeItem(NAMESPACE_KEY);\n        } else {\n            localStorage.setItem(NAMESPACE_KEY, namespaces);\n        }\n        var newSettings = self.debuggingNamespaces();\n        if (self.logger) {\n            self.logger.options.consoleNamespaceWhitelist = newSettings;\n        }\n        return newSettings;\n    } catch (storageErr) {\n        console.log((0, _localization2.default)(\"localStorage not available for debug namespace retrieval\"));\n    }\n};\n\n/** string rep */\nGalaxyApp.prototype.toString = function toString() {\n    var userEmail = this.user ? this.user.get(\"email\") || \"(anonymous)\" : \"uninitialized\";\n    return \"GalaxyApp(\" + userEmail + \")\";\n};\n\n// ============================================================================\nexports.default = {\n    GalaxyApp: GalaxyApp\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*global window, jQuery, console */\n/*=============================================================================\nTODO:\n    while anon: logs saved to 'logs-null' - this will never post\n        unless we manually do so at/after login\n        OR prepend when userId and localStorage has 'logs-null'\n    wire up _delayPost and test\n\n=============================================================================*/\n/** @class MetricsLogger\n *\n *  Object to cache, output, and post log/metric messages to the server.\n *  Meant to be attached to the Galaxy object.\n *\n *  Log from objects by either attaching logger directly:\n *      panel.logger.metric( 'user dataset deletion', panel.user.id, hda.toJSON() )\n *  or using the LoggableMixin or addLogging function:\n *      MyBackboneModel.extend( LoggableMixin ).extend({ ... })\n *      addLogging( MyBackboneModel, 'my-backbone-model' )\n *\n *  Log from templates by calling directly from Galaxy object:\n *      Galaxy.logger.metric( 'template loaded', { ownedByUser : true });\n *\n *  If you attempt to log an un-serializable object (circular reference, window, etc.),\n *  that entry will not be cached (or sent). If you set consoleLevel and consoleLogger\n *  appropriately, a warning will be shown when this happens:\n *      > panel.metric( 'something weird with window', { window : window })\n *      !'Metrics logger could not stringify logArguments: ...'\n */\nfunction MetricsLogger(options) {\n    options = options || {};\n    var self = this;\n\n    ///** get the current user's id from bootstrapped data or options */\n    self.userId = window.bootstrapped && window.bootstrapped.user ? window.bootstrapped.user.id : null;\n    self.userId = self.userId || options.userId || null;\n\n    /** the (optional) console to emit logs to */\n    self.consoleLogger = options.consoleLogger || null;\n\n    self._init(options);\n    return self;\n}\n\n//----------------------------------------------------------------------------- defaults and constants\n// see: python std lib, logging\nMetricsLogger.ALL = 0;\nMetricsLogger.LOG = 0;\nMetricsLogger.DEBUG = 10;\nMetricsLogger.INFO = 20;\nMetricsLogger.WARN = 30;\nMetricsLogger.ERROR = 40;\n// metrics levels here?\n//MetricsLogger.MinorEvent  = 45;\n//MetricsLogger.MajorEvent  = 50;\nMetricsLogger.METRIC = 50;\nMetricsLogger.NONE = 100;\n\n/** default options - override these through the constructor */\nMetricsLogger.defaultOptions = {\n    /** if an incoming message has a level >= this, it will be cached - can also be a string (e.g. 'debug') */\n    logLevel: MetricsLogger.NONE,\n    /** if an incoming message has a level >= this, it will be output to the console */\n    consoleLevel: MetricsLogger.NONE,\n    /** the default 'namespace' or label associated with an incoming message (if none is passed) */\n    defaultNamespace: \"Galaxy\",\n    /** the namespaces output to the console (all namespaces will be output if this is falsy)\n     *  note: applies only to the console (not the event/metrics log/cache)\n     */\n    consoleNamespaceWhitelist: null,\n    /** Force all messages into simple strings. */\n    consoleFlattenMessages: false,\n    /** the prefix attached to client-side logs to distinguish them in the metrics db */\n    clientPrefix: \"client.\",\n\n    /** the maximum number of messages the cache should hold; if exceeded older messages are removed first */\n    maxCacheSize: 3000,\n    /** the number of messages accumulate before posting to the server; should be <= maxCacheSize */\n    postSize: 1000,\n    /** T/F whether to add a timestamp to incoming cached messages */\n    addTime: true,\n    /** string to prefix to userid for cache web storage */\n    cacheKeyPrefix: \"logs-\",\n\n    /** the relative url to post messages to */\n    postUrl: \"/api/metrics\",\n    /** delay before trying post again after two failures */\n    delayPostInMs: 1000 * 60 * 10,\n\n    /** an (optional) function that should return an object; used to send additional data with the metrics */\n    getPingData: undefined,\n    /** an (optional) function that will handle the servers response after successfully posting messages */\n    onServerResponse: undefined\n};\n\n//----------------------------------------------------------------------------- set up\n/** initialize the logger with options, set up instance vars and cache, and add onpageunload to window */\nMetricsLogger.prototype._init = function _init(options) {\n    var self = this;\n    self.options = {};\n    for (var k in MetricsLogger.defaultOptions) {\n        if (MetricsLogger.defaultOptions.hasOwnProperty(k)) {\n            self.options[k] = options.hasOwnProperty(k) ? options[k] : MetricsLogger.defaultOptions[k];\n        }\n    }\n    self.options.logLevel = self._parseLevel(self.options.logLevel);\n    self.options.consoleLevel = self._parseLevel(self.options.consoleLevel);\n    //self._emitToConsole( 'debug', 'MetricsLogger', 'MetricsLogger.options:', self.options );\n\n    /** is the logger currently sending? */\n    self._sending = false;\n    /** the setTimeout id if the logger POST has failed more than once */\n    self._waiting = null;\n    /** the current number of entries to send in a POST */\n    self._postSize = self.options.postSize;\n\n    self._initCache();\n\n    return self;\n};\n\n/** initialize the cache */\nMetricsLogger.prototype._initCache = function _initCache() {\n    try {\n        this.cache = new LoggingCache({\n            maxSize: this.options.maxCacheSize,\n            key: this.options.cacheKeyPrefix + this.userId\n        });\n    } catch (err) {\n        this._emitToConsole(\"warn\", \"MetricsLogger\", [\"Could not intitialize logging cache:\", err]);\n        this.options.logLevel = MetricsLogger.NONE;\n    }\n};\n\n/** return the numeric log level if level in 'none, debug, log, info, warn, error' */\nMetricsLogger.prototype._parseLevel = function _parseLevel(level) {\n    var type = typeof level === \"undefined\" ? \"undefined\" : _typeof(level);\n    if (type === \"number\") {\n        return level;\n    }\n    if (type === \"string\") {\n        var upper = level.toUpperCase();\n        if (MetricsLogger.hasOwnProperty(upper)) {\n            return MetricsLogger[upper];\n        }\n    }\n    throw new Error(\"Unknown log level: \" + level);\n};\n\n//----------------------------------------------------------------------------- main entry point\n/** record a log/message's arguments to the cache and/or the console based on level and namespace */\nMetricsLogger.prototype.emit = function emit(level, namespace, logArguments) {\n    //this._emitToConsole( 'debug', 'MetricsLogger', [ 'emit:', level, namespace, logArguments ]);\n    var self = this;\n    namespace = namespace || self.options.defaultNamespace;\n    if (!level || !logArguments) {\n        return self;\n    }\n    // add to cache if proper level\n    //TODO: respect do not track?\n    //if( !navigator.doNotTrack && level >= self.options.logLevel ){\n    level = self._parseLevel(level);\n    if (level >= self.options.logLevel) {\n        self._addToCache(level, namespace, logArguments);\n    }\n    // also emit to consoleLogger if proper level for that\n    if (self.consoleLogger && level >= self.options.consoleLevel) {\n        self._emitToConsole(level, namespace, logArguments);\n    }\n    return self;\n};\n\n//----------------------------------------------------------------------------- cache\n/** add a message to the cache and if messages.length is high enough post them to the server */\nMetricsLogger.prototype._addToCache = function _addToCache(level, namespace, logArguments) {\n    this._emitToConsole(\"debug\", \"MetricsLogger\", [\"_addToCache:\", arguments, this.options.addTime, this.cache.length()]);\n    //this._emitToConsole( 'debug', 'MetricsLogger', [ '\\t logArguments:', logArguments ]);\n    var self = this;\n    // try add to the cache and if we've got _postSize number of entries, attempt to post them to the server\n    try {\n        var newLength = self.cache.add(self._buildEntry(level, namespace, logArguments));\n        if (newLength >= self._postSize) {\n            self._postCache();\n        }\n        // discard entry if an error occurs, but warn if level set to do so\n    } catch (err) {\n        self._emitToConsole(\"warn\", \"MetricsLogger\", [\"Metrics logger could not stringify logArguments:\", namespace, logArguments]);\n        self._emitToConsole(\"error\", \"MetricsLogger\", [err]);\n    }\n    return self;\n};\n\n/** build a log cache entry object from the given level, namespace, and arguments (optionally adding timestamp */\nMetricsLogger.prototype._buildEntry = function _buildEntry(level, namespace, logArguments) {\n    this._emitToConsole(\"debug\", \"MetricsLogger\", [\"_buildEntry:\", arguments]);\n    var entry = {\n        level: level,\n        namespace: this.options.clientPrefix + namespace,\n        args: logArguments\n    };\n    if (this.options.addTime) {\n        entry.time = new Date().toISOString();\n    }\n    return entry;\n};\n\n/** post _postSize messages from the cache to the server, removing them if successful\n *      if the post fails, wait until maxCacheSize is accumulated instead and try again then\n *      in addition to the messages from the cache ('metrics'), any info from getPingData (if set) will be sent\n *      onServerResponse will be called (if set) with any response from the server\n */\nMetricsLogger.prototype._postCache = function _postCache(options) {\n    options = options || {};\n    this._emitToConsole(\"info\", \"MetricsLogger\", [\"_postCache\", options, this._postSize]);\n\n    // short circuit if we're already sending\n    if (!this.options.postUrl || this._sending) {\n        return jQuery.when({});\n    }\n\n    var self = this;\n    var postSize = options.count || self._postSize;\n\n    var // do not splice - remove after *successful* post\n    entries = self.cache.get(postSize);\n\n    var entriesLength = entries.length;\n\n    var // use the optional getPingData to add any extra info we may want to send\n    postData = typeof self.options.getPingData === \"function\" ? self.options.getPingData() : {};\n\n    //console.debug( postSize, entriesLength );\n\n    // add the metrics and send\n    postData.metrics = JSON.stringify(entries);\n    //console.debug( postData.metrics );\n    self._sending = true;\n    return jQuery.post(self.options.postUrl, postData).always(function () {\n        self._sending = false;\n    }).fail(function (xhr, status, message) {\n        // if we failed the previous time, set the next post target to the max num of entries\n        self._postSize = self.options.maxCacheSize;\n        //TODO:??\n        // log this failure to explain any gap in metrics\n        self.emit(\"error\", \"MetricsLogger\", [\"_postCache error:\", xhr.readyState, xhr.status, xhr.responseJSON || xhr.responseText]);\n        //TODO: still doesn't solve the problem that when cache == max, post will be tried on every emit\n        //TODO: see _delayPost\n    }).done(function (response) {\n        if (typeof self.options.onServerResponse === \"function\") {\n            self.options.onServerResponse(response);\n        }\n        // only remove if post successful\n        self.cache.remove(entriesLength);\n        //console.debug( 'removed entries:', entriesLength, 'size now:', self.cache.length() );\n        // if we succeeded, reset the post target to the normal num of entries\n        self._postSize = self.options.postSize;\n    });\n    // return the xhr promise\n};\n\n/** set _waiting to true and, after delayPostInMs, set it back to false */\nMetricsLogger.prototype._delayPost = function _delayPost() {\n    //TODO: this won't work between pages\n    var self = this;\n    self._waiting = setTimeout(function () {\n        self._waiting = null;\n    }, self.options.delayPostInMs);\n};\n\nfunction usefulToString(arg) {\n    var asStr = String(arg);\n    if (asStr == \"[object Object]\") {\n        asStr = JSON.stringify(arg);\n    }\n    return asStr;\n}\n\n//----------------------------------------------------------------------------- console\n/** output message to console based on level and consoleLogger type */\nMetricsLogger.prototype._emitToConsole = function _emitToConsole(level, namespace, logArguments) {\n    //console.debug( '_emitToConsole:', level, namespace, logArguments );\n    var self = this;\n\n    var whitelist = self.options.consoleNamespaceWhitelist;\n    if (!self.consoleLogger) {\n        return self;\n    }\n    // if a whitelist for namespaces is set, bail if this namespace is not in the list\n    if (whitelist && whitelist.indexOf(namespace) === -1) {\n        return self;\n    }\n\n    var args = Array.prototype.slice.call(logArguments, 0);\n    args.unshift(namespace);\n    if (self.options.consoleFlattenMessages) {\n        args = [args.map(usefulToString).join(\" \")];\n    }\n    //TODO: script location and/or source maps?\n    //TODO: branch on navigator.userAgent == AIIEEE - it only has log\n    if (level >= MetricsLogger.METRIC && typeof self.consoleLogger.info === \"function\") {\n        return self.consoleLogger.info.apply(self.consoleLogger, args);\n    } else if (level >= MetricsLogger.ERROR && typeof self.consoleLogger.error === \"function\") {\n        return self.consoleLogger.error.apply(self.consoleLogger, args);\n    } else if (level >= MetricsLogger.WARN && typeof self.consoleLogger.warn === \"function\") {\n        self.consoleLogger.warn.apply(self.consoleLogger, args);\n    } else if (level >= MetricsLogger.INFO && typeof self.consoleLogger.info === \"function\") {\n        self.consoleLogger.info.apply(self.consoleLogger, args);\n    } else if (level >= MetricsLogger.DEBUG && typeof self.consoleLogger.debug === \"function\") {\n        self.consoleLogger.debug.apply(self.consoleLogger, args);\n    } else if (typeof self.consoleLogger.log === \"function\") {\n        self.consoleLogger.log.apply(self.consoleLogger, args);\n    }\n    return self;\n};\n\n//----------------------------------------------------------------------------- shortcuts\n// generic functions when logging from non-namespaced object (e.g. templates)\n/** log to default namespace */\nMetricsLogger.prototype.log = function log() {\n    this.emit(1, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/** debug to default namespace */\nMetricsLogger.prototype.debug = function debug() {\n    this.emit(MetricsLogger.DEBUG, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/** info to default namespace */\nMetricsLogger.prototype.info = function info() {\n    this.emit(MetricsLogger.INFO, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/** warn to default namespace */\nMetricsLogger.prototype.warn = function warn() {\n    this.emit(MetricsLogger.WARN, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/** error to default namespace */\nMetricsLogger.prototype.error = function error() {\n    this.emit(MetricsLogger.ERROR, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/** metric to default namespace */\nMetricsLogger.prototype.metric = function metric() {\n    this.emit(MetricsLogger.METRIC, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/* ============================================================================\nTODO:\n    need a performance pass - the JSON un/parsing is a bit much\n\n============================================================================ */\n/** @class LoggingCache\n *  Simple implementation of cache wrapping an array.\n *\n *  Formats an entry before it's cached and only keeps options.maxSize number\n *  of entries. Older entries are deleted first.\n */\nfunction LoggingCache(options) {\n    var self = this;\n    return self._init(options || {});\n}\n\n/** default options */\nLoggingCache.defaultOptions = {\n    /** maximum number of entries to keep before discarding oldest */\n    maxSize: 5000\n};\n\n/** initialize with options */\nLoggingCache.prototype._init = function _init(options) {\n    if (!this._hasStorage()) {\n        //TODO: fall back to jstorage\n        throw new Error(\"LoggingCache needs localStorage\");\n    }\n    if (!options.key) {\n        throw new Error(\"LoggingCache needs key for localStorage\");\n    }\n    this.key = options.key;\n    this._initStorage();\n\n    this.maxSize = options.maxSize || LoggingCache.defaultOptions.maxSize;\n    return this;\n};\n\n/** tests for localStorage fns */\nLoggingCache.prototype._hasStorage = function _hasStorage() {\n    //TODO: modernizr\n    var test = \"test\";\n    try {\n        localStorage.setItem(test, test);\n        localStorage.removeItem(test);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\n/** if no localStorage set for key, initialize to empty array */\nLoggingCache.prototype._initStorage = function _initStorage() {\n    if (localStorage.getItem(this.key) === null) {\n        return this.empty();\n    }\n    return this;\n};\n\n/** add an entry to the cache, removing the oldest beforehand if size >= maxSize */\nLoggingCache.prototype.add = function add(entry) {\n    var self = this;\n    var _cache = self._fetchAndParse();\n    var overage = _cache.length + 1 - self.maxSize;\n    if (overage > 0) {\n        _cache.splice(0, overage);\n    }\n    _cache.push(entry);\n    self._unparseAndStore(_cache);\n    return _cache.length;\n};\n\n/** get the entries from localStorage and parse them */\nLoggingCache.prototype._fetchAndParse = function _fetchAndParse() {\n    var self = this;\n    return JSON.parse(localStorage.getItem(self.key));\n};\n\n/** stringify the entries and put them in localStorage */\nLoggingCache.prototype._unparseAndStore = function _unparseAndStore(entries) {\n    var self = this;\n    return localStorage.setItem(self.key, JSON.stringify(entries));\n};\n\n///** process the entry before caching */\n//LoggingCache.prototype._preprocessEntry = function _preprocessEntry( entry ){\n//    return JSON.stringify( entry );\n//};\n\n/** return the length --- oh, getters where are you? */\nLoggingCache.prototype.length = function length() {\n    return this._fetchAndParse().length;\n};\n\n/** get count number of entries starting with the oldest */\nLoggingCache.prototype.get = function get(count) {\n    return this._fetchAndParse().slice(0, count);\n};\n\n/** remove count number of entries starting with the oldest */\nLoggingCache.prototype.remove = function remove(count) {\n    var _cache = this._fetchAndParse();\n    var removed = _cache.splice(0, count);\n    this._unparseAndStore(_cache);\n    return removed;\n};\n\n/** empty/clear the entire cache */\nLoggingCache.prototype.empty = function empty() {\n    localStorage.setItem(this.key, \"[]\");\n    return this;\n};\n\n/** stringify count number of entries (but do not remove) */\nLoggingCache.prototype.stringify = function stringify(count) {\n    return JSON.stringify(this.get(count));\n};\n\n/** outputs entire cache to console */\nLoggingCache.prototype.print = function print() {\n    // popup? (really, carl? a popup?) - easier to copy/paste\n    console.log(JSON.stringify(this._fetchAndParse(), null, \"  \"));\n};\n\n//=============================================================================\nexports.default = {\n    MetricsLogger: MetricsLogger,\n    LoggingCache: LoggingCache\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _masthead = __webpack_require__(27);\n\nvar _masthead2 = _interopRequireDefault(_masthead);\n\nvar _panel = __webpack_require__(58);\n\nvar _panel2 = _interopRequireDefault(_panel);\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    el: \"body\",\n    className: \"full-content\",\n    _panelids: [\"left\", \"right\"],\n\n    initialize: function initialize(options) {\n        var self = this;\n        this.config = _.defaults(options.config || {}, {\n            message_box_visible: false,\n            message_box_content: \"\",\n            message_box_class: \"info\",\n            show_inactivity_warning: false,\n            inactivity_box_content: \"\"\n        });\n\n        // attach global objects, build mastheads\n        Galaxy.modal = this.modal = new _uiModal2.default.View();\n        Galaxy.display = this.display = function (view) {\n            if (view.title) {\n                _utils2.default.setWindowTitle(view.title);\n                view.allow_title_display = false;\n            } else {\n                _utils2.default.setWindowTitle();\n                view.allow_title_display = true;\n            }\n            self.center.display(view);\n        };\n        Galaxy.router = this.router = options.Router && new options.Router(self, options);\n        this.masthead = new _masthead2.default.View(this.config);\n        this.center = new _panel2.default.CenterPanel();\n\n        // build page template\n        this.$el.attr(\"scroll\", \"no\");\n        this.$el.html(this._template());\n        this.$(\"#masthead\").replaceWith(this.masthead.$el);\n        this.$(\"#center\").append(this.center.$el);\n        this.$el.append(this.masthead.frame.$el);\n        this.$el.append(this.modal.$el);\n        this.$messagebox = this.$(\"#messagebox\");\n        this.$inactivebox = this.$(\"#inactivebox\");\n\n        // build panels\n        this.panels = {};\n        _.each(this._panelids, function (panel_id) {\n            var panel_class_name = panel_id.charAt(0).toUpperCase() + panel_id.slice(1);\n            var panel_class = options[panel_class_name];\n            if (panel_class) {\n                var panel_instance = new panel_class(self, options);\n                self[panel_instance.toString()] = panel_instance;\n                self.panels[panel_id] = new _panel2.default.SidePanel({\n                    id: panel_id,\n                    el: self.$(\"#\" + panel_id),\n                    view: panel_instance\n                });\n            }\n        });\n        this.render();\n\n        // start the router\n        this.router && Backbone.history.start({\n            root: Galaxy.root,\n            pushState: true\n        });\n    },\n\n    render: function render() {\n        // TODO: Remove this line after select2 update\n        $(\".select2-hidden-accessible\").remove();\n        this.masthead.render();\n        this.renderMessageBox();\n        this.renderInactivityBox();\n        this.renderPanels();\n        this._checkCommunicationServerOnline();\n        return this;\n    },\n\n    /** Render message box */\n    renderMessageBox: function renderMessageBox() {\n        if (this.config.message_box_visible) {\n            var content = this.config.message_box_content || \"\";\n            var level = this.config.message_box_class || \"info\";\n            this.$el.addClass(\"has-message-box\");\n            this.$messagebox.attr(\"class\", \"panel-\" + level + \"-message\").html(content).toggle(!!content).show();\n        } else {\n            this.$el.removeClass(\"has-message-box\");\n            this.$messagebox.hide();\n        }\n        return this;\n    },\n\n    /** Render inactivity warning */\n    renderInactivityBox: function renderInactivityBox() {\n        if (this.config.show_inactivity_warning) {\n            var content = this.config.inactivity_box_content || \"\";\n            var verificationLink = $(\"<a/>\").attr(\"href\", Galaxy.root + \"user/resend_verification\").text(\"Resend verification\");\n            this.$el.addClass(\"has-inactivity-box\");\n            this.$inactivebox.html(content + \" \").append(verificationLink).toggle(!!content).show();\n        } else {\n            this.$el.removeClass(\"has-inactivity-box\");\n            this.$inactivebox.hide();\n        }\n        return this;\n    },\n\n    /** Render panels */\n    renderPanels: function renderPanels() {\n        var self = this;\n        _.each(this._panelids, function (panel_id) {\n            var panel = self.panels[panel_id];\n            if (panel) {\n                panel.render();\n            } else {\n                self.$(\"#center\").css(panel_id, 0);\n                self.$(\"#\" + panel_id).hide();\n            }\n        });\n        return this;\n    },\n\n    /** body template */\n    _template: function _template() {\n        return ['<div id=\"everything\">', '<div id=\"background\"/>', '<div id=\"masthead\"/>', '<div id=\"messagebox\"/>', '<div id=\"inactivebox\" class=\"panel-warning-message\" />', '<div id=\"left\" />', '<div id=\"center\" />', '<div id=\"right\" />', \"</div>\", '<div id=\"dd-helper\" />'].join(\"\");\n    },\n\n    toString: function toString() {\n        return \"PageLayoutView\";\n    },\n\n    /** Check if the communication server is online and show the icon otherwise hide the icon */\n    _checkCommunicationServerOnline: function _checkCommunicationServerOnline() {\n        var host = window.Galaxy.config.communication_server_host;\n        var port = window.Galaxy.config.communication_server_port;\n        var preferences = window.Galaxy.user.attributes.preferences;\n        var $chat_icon_element = $(\"#show-chat-online\");\n        /** Check if the user has deactivated the communication in it's personal settings */\n        if (preferences && [\"1\", \"true\"].indexOf(preferences.communication_server) != -1) {\n            // See if the configured communication server is available\n            $.ajax({\n                url: host + \":\" + port\n            }).success(function (data) {\n                // enable communication only when a user is logged in\n                if (window.Galaxy.user.id !== null) {\n                    if ($chat_icon_element.css(\"visibility\") === \"hidden\") {\n                        $chat_icon_element.css(\"visibility\", \"visible\");\n                    }\n                }\n            }).error(function (data) {\n                // hide the communication icon if the communication server is not available\n                $chat_icon_element.css(\"visibility\", \"hidden\");\n            });\n        } else {\n            $chat_icon_element.css(\"visibility\", \"hidden\");\n        }\n    }\n});\n\nexports.default = { View: View };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 62 */,\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar Model = Backbone.Model.extend({\n    defaults: {\n        extension: \"auto\",\n        genome: \"?\",\n        url_paste: \"\",\n        status: \"init\",\n        info: null,\n        file_name: \"\",\n        file_mode: \"\",\n        file_size: 0,\n        file_type: null,\n        file_path: \"\",\n        file_data: null,\n        percentage: 0,\n        space_to_tab: false,\n        to_posix_lines: true,\n        enabled: true\n    },\n    reset: function reset(attr) {\n        this.clear().set(this.defaults).set(attr);\n    }\n});\nvar Collection = Backbone.Collection.extend({ model: Model });\nexports.default = { Model: Model, Collection: Collection };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// =============================================================================\n/** A view on any model that has a 'tags' attribute (a list of tag strings)\n *      Incorporates the select2 jQuery plugin for tags display/editing:\n *      http://ivaynberg.github.io/select2/\n */\nvar TagsEditor = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(_baseMvc2.default.HiddenUntilActivatedViewMixin).extend({\n    tagName: \"div\",\n    className: \"tags-display\",\n    select_width: \"100%\",\n    events: {},\n\n    /** Set up listeners, parse options */\n    initialize: function initialize(options) {\n        //console.debug( this, options );\n        // only listen to the model only for changes to tags - re-render\n        this.show_editor = false;\n        if (options.usePrompt === false) {\n            this.label = \"\";\n        } else {\n            this.label = \"<label class=\\\"prompt\\\">\" + (0, _localization2.default)(\"Tags\") + \"</label>\";\n        }\n        this.workflow_mode = options.workflow_mode || false;\n        if (this.workflow_mode) {\n            this.events.click = \"showEditor\";\n            this.events.keydown = \"keydownHandler\";\n        }\n        this.hiddenUntilActivated(options.$activator, options);\n    },\n\n    /** Build the DOM elements, call select to on the created input, and set up behaviors */\n    render: function render() {\n        var self = this;\n        if (this.workflow_mode) {\n            this.$el.html(this._workflowTemplate());\n        } else {\n            this.$el.html(this._defaultTemplate());\n        }\n        this.$input().select2({\n            placeholder: \"Add tags\",\n            width: this.workflow_mode ? this.width : this.select_width,\n            tags: function tags() {\n                // initialize possible tags in the dropdown based on all the tags the user has used so far\n                return self._getTagsUsed();\n            }\n        });\n\n        this._setUpBehaviors();\n        return this;\n    },\n\n    _hashToName: function _hashToName(tag) {\n        if (tag.startsWith(\"#\")) {\n            return \"name:\" + tag.slice(1);\n        }\n        return tag;\n    },\n\n    _nameToHash: function _nameToHash(tag) {\n        if (tag.startsWith(\"name:\")) {\n            tag = \"#\" + tag.slice(5);\n        }\n        return tag;\n    },\n\n    /** @returns {String} the html text used to build the view's DOM */\n    _defaultTemplate: function _defaultTemplate() {\n        return [this.label, this._renderEditor()].join(\"\");\n    },\n\n    _workflowTemplate: function _workflowTemplate() {\n        // Shows labels by default, event handler controls whether we show tags or editor\n        return [this.show_editor ? this._renderEditor() : this._renderTags()].join(\" \");\n    },\n\n    keydownHandler: function keydownHandler(e) {\n        switch (e.which) {\n            // esc\n            case 27:\n                // hide the tag editor when pressing escape\n                this.hideEditor();\n                break;\n        }\n    },\n\n    showEditor: function showEditor() {\n        this.show_editor = true;\n        this.render();\n    },\n\n    hideEditor: function hideEditor() {\n        this.show_editor = false;\n        this.render();\n    },\n\n    _renderEditor: function _renderEditor() {\n        // set up initial tags by adding as CSV to input vals (necc. to init select2)\n        return \"<input class=\\\"tags-input\\\" value=\\\"\" + this.tagsToCSV() + \"\\\"/>\";\n    },\n\n    _renderTags: function _renderTags() {\n        var tags = this.model.get(\"tags\");\n        var addButton = \"static/images/fugue/tag--plus.png\";\n        var renderedArray = [];\n        _.each(tags, function (tag) {\n            tag = tag.indexOf(\"name:\") == 0 ? tag.slice(5) : tag;\n            var renderString = \"<span class=\\\"label label-info\\\">\" + tag + \"</span>\";\n            renderedArray.push(renderString);\n        });\n        if (renderedArray.length === 0) {\n            // If there are no tags to render we just show the add-tag-button\n            renderedArray.push(\"<img src=\" + addButton + \" class=\\\"add-tag-button\\\" title=\\\"Add tags\\\"/>\");\n        }\n        return renderedArray.join(\" \");\n    },\n\n    /** @returns {String} the sorted, comma-separated tags from the model */\n    tagsToCSV: function tagsToCSV() {\n        var self = this;\n        var tagsArray = this.model.get(\"tags\");\n        if (!_.isArray(tagsArray) || _.isEmpty(tagsArray)) {\n            return \"\";\n        }\n        return tagsArray.map(function (tag) {\n            return _.escape(self._nameToHash(tag));\n        }).sort().join(\",\");\n    },\n\n    /** @returns {jQuery} the input for this view */\n    $input: function $input() {\n        return this.$el.find(\"input.tags-input\");\n    },\n\n    /** @returns {String[]} all tags used by the current user */\n    _getTagsUsed: function _getTagsUsed() {\n        //TODO: global\n        var self = this;\n        return _.map(Galaxy.user.get(\"tags_used\"), self._nameToHash);\n    },\n\n    /** set up any event listeners on the view's DOM (mostly handled by select2) */\n    _setUpBehaviors: function _setUpBehaviors() {\n        var self = this;\n        this.$input().on(\"change\", function (event) {\n            // Modify any 'hashtag' 'nametags'\n            event.val = _.map(event.val, self._hashToName);\n            // save the model's tags in either remove or added event\n            self.model.save({ tags: event.val });\n            // if it's new, add the tag to the users tags\n            if (event.added) {\n                //??: solve weird behavior in FF on test.galaxyproject.org where\n                //  event.added.text is string object: 'String{ 0=\"o\", 1=\"n\", 2=\"e\" }'\n                self._addNewTagToTagsUsed(\"\" + event.added.text);\n            }\n        });\n    },\n\n    /** add a new tag (if not already there) to the list of all tags used by the user\n     *  @param {String} newTag  the tag to add to the list of used\n     */\n    _addNewTagToTagsUsed: function _addNewTagToTagsUsed(newTag) {\n        //TODO: global\n        var tagsUsed = Galaxy.user.get(\"tags_used\");\n        if (!_.contains(tagsUsed, newTag)) {\n            tagsUsed.push(newTag);\n            tagsUsed.sort();\n            Galaxy.user.set(\"tags_used\", tagsUsed);\n        }\n    },\n\n    /** shut down event listeners and remove this view's DOM */\n    remove: function remove() {\n        this.$input.off();\n        this.stopListening(this.model);\n        Backbone.View.prototype.remove.call(this);\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return [\"TagsEditor(\", \"\" + this.model, \")\"].join(\"\");\n    }\n});\n\nexports.default = {\n    TagsEditor: TagsEditor\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _queryStringParsing = __webpack_require__(16);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ = _jquery2.default;\n\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function initialize(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function push(url, data) {\n        data = data || {};\n        data.__identifer = Math.random().toString(36).substr(2);\n        if (!$.isEmptyObject(data)) {\n            url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            url += $.param(data, true);\n        }\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function execute(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = _queryStringParsing2.default.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function authenticate(args, name) {\n        return true;\n    },\n\n    access_denied: function access_denied() {\n        this.page.display(new _uiMisc2.default.Message({\n            status: \"danger\",\n            message: \"You must be logged in with proper credentials to make this request.\",\n            persistent: true\n        }));\n    }\n});\n\nexports.default = Router;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    options: {\n        class_check: \"fa-check-square-o\",\n        class_uncheck: \"fa-square-o\",\n        parameters: [{\n            id: \"space_to_tab\",\n            title: \"Convert spaces to tabs\"\n        }, {\n            id: \"to_posix_lines\",\n            title: \"Use POSIX standard\"\n        }]\n    },\n\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = options.model;\n        this.setElement($(\"<div/>\").addClass(\"upload-settings\"));\n        this.$el.append($(\"<div/>\").addClass(\"upload-settings-cover\"));\n        this.$el.append($(\"<table/>\").addClass(\"upload-settings-table ui-table-striped\").append(\"<tbody/>\"));\n        this.$cover = this.$(\".upload-settings-cover\");\n        this.$table = this.$(\".upload-settings-table > tbody\");\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.model.trigger(\"change\");\n    },\n\n    render: function render() {\n        var self = this;\n        this.$table.empty();\n        _.each(this.options.parameters, function (parameter) {\n            var $checkbox = $(\"<div/>\").addClass(\"upload-\" + parameter.id + \" upload-icon-button fa\").addClass(self.model.get(parameter.id) && self.options.class_check || self.options.class_uncheck).on(\"click\", function () {\n                self.model.get(\"enabled\") && self.model.set(parameter.id, !self.model.get(parameter.id));\n            });\n            self.$table.append($(\"<tr/>\").append($(\"<td/>\").append($checkbox)).append($(\"<td/>\").append(parameter.title)));\n        });\n        this.$cover[this.model.get(\"enabled\") && \"hide\" || \"show\"]();\n    }\n}); /** This renders the content of the settings popup, allowing users to specify flags i.e. for space-to-tab conversion **/\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = new Backbone.Model({\n            cls: \"upload-ftp\",\n            class_add: \"upload-icon-button fa fa-square-o\",\n            class_remove: \"upload-icon-button fa fa-check-square-o\",\n            class_partial: \"upload-icon-button fa fa-minus-square-o\",\n            help_enabled: true,\n            help_text: \"This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>\" + options.ftp_upload_site + \"</strong> using your Galaxy credentials.\",\n            collection: null,\n            onchange: function onchange() {},\n            onadd: function onadd() {},\n            onremove: function onremove() {}\n        }).set(options);\n        this.collection = this.model.get(\"collection\");\n        this.setElement(this._template());\n        this.$content = this.$(\".upload-ftp-content\");\n        this.$wait = this.$(\".upload-ftp-wait\");\n        this.$help = this.$(\".upload-ftp-help\");\n        this.$number = this.$(\".upload-ftp-number\");\n        this.$disk = this.$(\".upload-ftp-disk\");\n        this.$body = this.$(\".upload-ftp-body\");\n        this.$warning = this.$(\".upload-ftp-warning\");\n        this.$select = this.$(\".upload-ftp-select-all\");\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        this.$wait.show();\n        this.$content.hide();\n        this.$warning.hide();\n        this.$help.hide();\n        $.ajax({\n            url: Galaxy.root + \"api/remote_files\",\n            method: \"GET\",\n            success: function success(ftp_files) {\n                self.model.set(\"ftp_files\", ftp_files);\n                self._index();\n                self._renderTable();\n            },\n            error: function error() {\n                self._renderTable();\n            }\n        });\n    },\n\n    /** Fill table with ftp entries */\n    _renderTable: function _renderTable() {\n        var self = this;\n        var ftp_files = this.model.get(\"ftp_files\");\n        this.rows = [];\n        if (ftp_files && ftp_files.length > 0) {\n            this.$body.empty();\n            var size = 0;\n            _.each(ftp_files, function (ftp_file) {\n                self.rows.push(self._renderRow(ftp_file));\n                size += ftp_file.size;\n            });\n            this.$number.html(ftp_files.length + \" files\");\n            this.$disk.html(_utils2.default.bytesToString(size, true));\n            if (this.collection) {\n                this.$(\"._has_collection\").show();\n                this.$select.addClass(this.model.get(\"class_add\")).off().on(\"click\", function () {\n                    self._all();\n                });\n                this._refresh();\n            }\n            this.$content.show();\n        } else {\n            this.$warning.show();\n        }\n        this.model.get(\"help_enabled\") && this.$help.show();\n        this.$wait.hide();\n    },\n\n    /** Add row */\n    _renderRow: function _renderRow(ftp_file) {\n        var self = this;\n        var options = this.model.attributes;\n        var $it = $(this._templateRow(ftp_file));\n        var $icon = $it.find(\".icon\");\n        this.$body.append($it);\n        if (this.collection) {\n            var model_index = this.ftp_index[ftp_file.path];\n            $icon.addClass(model_index === undefined ? options.class_add : options.class_remove);\n            $it.on(\"click\", function () {\n                self._switch($icon, ftp_file);\n                self._refresh();\n            });\n        } else {\n            $it.on(\"click\", function () {\n                options.onchange(ftp_file);\n            });\n        }\n        return $icon;\n    },\n\n    /** Create ftp index */\n    _index: function _index() {\n        var self = this;\n        this.ftp_index = {};\n        this.collection && this.collection.each(function (model) {\n            if (model.get(\"file_mode\") == \"ftp\") {\n                self.ftp_index[model.get(\"file_path\")] = model.id;\n            }\n        });\n    },\n\n    /** Select all event handler */\n    _all: function _all() {\n        var options = this.model.attributes;\n        var ftp_files = this.model.get(\"ftp_files\");\n        var add = this.$select.hasClass(options.class_add);\n        for (var index in ftp_files) {\n            var ftp_file = ftp_files[index];\n            var model_index = this.ftp_index[ftp_file.path];\n            if (model_index === undefined && add || model_index !== undefined && !add) {\n                this._switch(this.rows[index], ftp_file);\n            }\n        }\n        this._refresh();\n    },\n\n    /** Handle collection changes */\n    _switch: function _switch($icon, ftp_file) {\n        $icon.removeClass();\n        var options = this.model.attributes;\n        var model_index = this.ftp_index[ftp_file.path];\n        if (model_index === undefined) {\n            var new_index = options.onadd(ftp_file);\n            $icon.addClass(options.class_remove);\n            this.ftp_index[ftp_file.path] = new_index;\n        } else {\n            options.onremove(model_index);\n            $icon.addClass(options.class_add);\n            this.ftp_index[ftp_file.path] = undefined;\n        }\n    },\n\n    /** Refresh select all button state */\n    _refresh: function _refresh() {\n        var counts = _.reduce(this.ftp_index, function (memo, element) {\n            element !== undefined && memo++;\n            return memo;\n        }, 0);\n        this.$select.removeClass();\n        if (counts == 0) {\n            this.$select.addClass(this.model.get(\"class_add\"));\n        } else {\n            this.$select.addClass(counts == this.rows.length ? this.model.get(\"class_remove\") : this.model.get(\"class_partial\"));\n        }\n    },\n\n    /** Template of row */\n    _templateRow: function _templateRow(options) {\n        return \"<tr class=\\\"upload-ftp-row\\\"><td class=\\\"_has_collection\\\" style=\\\"display: none;\\\"><div class=\\\"icon\\\"/></td><td class=\\\"ftp-name\\\">\" + _.escape(options.path) + \"</td><td class=\\\"ftp-size\\\">\" + _utils2.default.bytesToString(options.size) + \"</td><td class=\\\"ftp-time\\\">\" + options.ctime + \"</td></tr>\";\n    },\n\n    /** Template of main view */\n    _template: function _template() {\n        return \"<div class=\\\"\" + this.model.get(\"cls\") + \"\\\"><div class=\\\"upload-ftp-wait fa fa-spinner fa-spin\\\"/><div class=\\\"upload-ftp-help\\\">\" + this.model.get(\"help_text\") + \"</div><div class=\\\"upload-ftp-content\\\"><span style=\\\"whitespace: nowrap; float: left;\\\">Available files: </span><span style=\\\"whitespace: nowrap; float: right;\\\"><span class=\\\"upload-icon fa fa-file-text-o\\\"/><span class=\\\"upload-ftp-number\\\"/>&nbsp;&nbsp;<span class=\\\"upload-icon fa fa-hdd-o\\\"/><span class=\\\"upload-ftp-disk\\\"/></span><table class=\\\"grid\\\" style=\\\"float: left;\\\"><thead><tr><th class=\\\"_has_collection\\\" style=\\\"display: none;\\\"><div class=\\\"upload-ftp-select-all\\\"></th><th>Name</th><th>Size</th><th>Created</th></tr></thead><tbody class=\\\"upload-ftp-body\\\"/></table></div><div class=\\\"upload-ftp-warning warningmessage\\\">Your FTP directory does not contain any files.</div>\";\n        \"<div>\";\n    }\n}); /** This renders the content of the ftp popup **/\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiPopover = __webpack_require__(45);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** This renders a popover with extension details **/\nexports.default = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = new Backbone.Model(options);\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        var options = this.model.attributes;\n        var description = _.findWhere(options.list, {\n            id: options.extension\n        });\n        this.extension_popup && this.extension_popup.remove();\n        this.extension_popup = new _uiPopover2.default.View({\n            placement: options.placement || \"bottom\",\n            container: options.$el\n        });\n        this.extension_popup.title(options.title);\n        this.extension_popup.empty();\n        this.extension_popup.append(this._templateDescription(description));\n        this.extension_popup.show();\n    },\n\n    /** Template for extensions description */\n    _templateDescription: function _templateDescription(options) {\n        if (options.description) {\n            var tmpl = options.description;\n            if (options.description_url) {\n                tmpl += \"&nbsp;(<a href=\\\"\" + options.description_url + \"\\\" target=\\\"_blank\\\">read more</a>)\";\n            }\n            return tmpl;\n        } else {\n            return \"There is no description available for this file extension.\";\n        }\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, _) {\n\n/*\n    galaxy upload plugins - requires FormData and XMLHttpRequest\n*/\n(function ($) {\n    // add event properties\n    jQuery.event.props.push(\"dataTransfer\");\n\n    /**\n        Posts file data to the API\n    */\n    $.uploadpost = function (config) {\n        // parse options\n        var cnf = $.extend({}, {\n            data: {},\n            success: function success() {},\n            error: function error() {},\n            progress: function progress() {},\n            url: null,\n            maxfilesize: 2048,\n            error_filesize: \"File exceeds 2GB. Please use a FTP client.\",\n            error_default: \"Please make sure the file is available.\",\n            error_server: \"Upload request failed.\",\n            error_login: \"Uploads require you to log in.\"\n        }, config);\n\n        // link data\n        var data = cnf.data;\n\n        // check errors\n        if (data.error_message) {\n            cnf.error(data.error_message);\n            return;\n        }\n\n        // construct form data\n        var form = new FormData();\n        for (var key in data.payload) {\n            form.append(key, data.payload[key]);\n        }\n\n        // add files to submission\n        var sizes = 0;\n        for (var key in data.files) {\n            var d = data.files[key];\n            form.append(d.name, d.file, d.file.name);\n            sizes += d.file.size;\n        }\n\n        // check file size, unless it's an ftp file\n        if (sizes > 1048576 * cnf.maxfilesize) {\n            cnf.error(cnf.error_filesize);\n            return;\n        }\n\n        // prepare request\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", cnf.url, true);\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        // captures state changes\n        xhr.onreadystatechange = function () {\n            // check for request completed, server connection closed\n            if (xhr.readyState == xhr.DONE) {\n                // parse response\n                var response = null;\n                var extra_info = \"\";\n                if (xhr.responseText) {\n                    try {\n                        response = jQuery.parseJSON(xhr.responseText);\n                        extra_info = response.err_msg;\n                    } catch (e) {\n                        response = xhr.responseText;\n                        extra_info = response;\n                    }\n                }\n                // pass any error to the error option\n                if (xhr.status < 200 || xhr.status > 299) {\n                    var text = xhr.statusText;\n                    if (xhr.status == 403) {\n                        text = cnf.error_login;\n                    } else if (xhr.status == 0) {\n                        text = cnf.error_server;\n                    } else if (!text) {\n                        text = cnf.error_default;\n                    }\n                    cnf.error(text + \" (\" + xhr.status + \"). \" + extra_info);\n                } else {\n                    cnf.success(response);\n                }\n            }\n        };\n\n        // prepare upload progress\n        xhr.upload.addEventListener(\"progress\", function (e) {\n            if (e.lengthComputable) {\n                cnf.progress(Math.round(e.loaded * 100 / e.total));\n            }\n        }, false);\n\n        // send request\n        Galaxy.emit.debug(\"uploadbox::uploadpost()\", \"Posting following data.\", cnf);\n        xhr.send(form);\n    };\n\n    /**\n        Handles the upload events drag/drop etc.\n    */\n    $.fn.uploadinput = function (options) {\n        // initialize\n        var el = this;\n        var opts = $.extend({}, {\n            ondragover: function ondragover() {},\n            ondragleave: function ondragleave() {},\n            onchange: function onchange() {},\n            multiple: false\n        }, options);\n\n        // append hidden upload field\n        var $input = $(\"<input type=\\\"file\\\" style=\\\"display: none\\\" \" + (opts.multiple && \"multiple\" || \"\") + \"/>\");\n        el.append($input.change(function (e) {\n            opts.onchange(e.target.files);\n            $(this).val(\"\");\n        }));\n\n        // drag/drop events\n        el.on(\"drop\", function (e) {\n            opts.ondragleave(e);\n            if (e.dataTransfer) {\n                opts.onchange(e.dataTransfer.files);\n                e.preventDefault();\n            }\n        });\n        el.on(\"dragover\", function (e) {\n            e.preventDefault();\n            opts.ondragover(e);\n        });\n        el.on(\"dragleave\", function (e) {\n            e.stopPropagation();\n            opts.ondragleave(e);\n        });\n\n        // exports\n        return {\n            dialog: function dialog() {\n                $input.trigger(\"click\");\n            }\n        };\n    };\n\n    /**\n        Handles the upload queue and events such as drag/drop etc.\n    */\n    $.fn.uploadbox = function (options) {\n        // parse options\n        var opts = $.extend({}, {\n            dragover: function dragover() {},\n            dragleave: function dragleave() {},\n            announce: function announce(d) {},\n            initialize: function initialize(d) {},\n            progress: function progress(d, m) {},\n            success: function success(d, m) {},\n            error: function error(d, m) {\n                alert(m);\n            },\n            complete: function complete() {}\n        }, options);\n\n        // file queue\n        var queue = {};\n\n        // queue index/length counter\n        var queue_index = 0;\n        var queue_length = 0;\n\n        // indicates if queue is currently running\n        var queue_running = false;\n        var queue_stop = false;\n\n        // element\n        var uploadinput = $(this).uploadinput({\n            multiple: true,\n            onchange: function onchange(files) {\n                add(files);\n            },\n            ondragover: options.ondragover,\n            ondragleave: options.ondragleave\n        });\n\n        // add new files to upload queue\n        function add(files) {\n            if (files && files.length && !queue_running) {\n                var index = undefined;\n                _.each(files, function (file, key) {\n                    if (file.mode !== \"new\" && _.filter(queue, function (f) {\n                        return f.name === file.name && f.size === file.size;\n                    }).length) {\n                        file.duplicate = true;\n                    }\n                });\n                _.each(files, function (file) {\n                    if (!file.duplicate) {\n                        index = String(queue_index++);\n                        queue[index] = file;\n                        opts.announce(index, queue[index]);\n                        queue_length++;\n                    }\n                });\n                return index;\n            }\n        }\n\n        // remove file from queue\n        function remove(index) {\n            if (queue[index]) {\n                delete queue[index];\n                queue_length--;\n            }\n        }\n\n        // process an upload, recursive\n        function process() {\n            // validate\n            if (queue_length == 0 || queue_stop) {\n                queue_stop = false;\n                queue_running = false;\n                opts.complete();\n                return;\n            } else {\n                queue_running = true;\n            }\n\n            // get an identifier from the queue\n            var index = -1;\n            for (var key in queue) {\n                index = key;\n                break;\n            }\n\n            // get current file from queue\n            var file = queue[index];\n\n            // remove from queue\n            remove(index);\n\n            // create and submit data\n            $.uploadpost({\n                url: opts.url,\n                data: opts.initialize(index),\n                success: function success(message) {\n                    opts.success(index, message);\n                    process();\n                },\n                error: function error(message) {\n                    opts.error(index, message);\n                    process();\n                },\n                progress: function progress(percentage) {\n                    opts.progress(index, percentage);\n                }\n            });\n        }\n\n        /*\n            public interface\n        */\n\n        // open file browser for selection\n        function select() {\n            uploadinput.dialog();\n        }\n\n        // remove all entries from queue\n        function reset(index) {\n            for (index in queue) {\n                remove(index);\n            }\n        }\n\n        // initiate upload process\n        function start() {\n            if (!queue_running) {\n                queue_running = true;\n                process();\n            }\n        }\n\n        // stop upload process\n        function stop() {\n            queue_stop = true;\n        }\n\n        // set options\n        function configure(options) {\n            opts = $.extend({}, opts, options);\n            return opts;\n        }\n\n        // verify browser compatibility\n        function compatible() {\n            return window.File && window.FormData && window.XMLHttpRequest && window.FileList;\n        }\n\n        // export functions\n        return {\n            select: select,\n            add: add,\n            remove: remove,\n            start: start,\n            stop: stop,\n            reset: reset,\n            configure: configure,\n            compatible: compatible\n        };\n    };\n})(jQuery);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _hdcaModel = __webpack_require__(79);\n\nvar _hdcaModel2 = _interopRequireDefault(_hdcaModel);\n\nvar _states = __webpack_require__(46);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _baseCreator = __webpack_require__(121);\n\nvar _baseCreator2 = _interopRequireDefault(_baseCreator);\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _naturalSort = __webpack_require__(122);\n\nvar _naturalSort2 = _interopRequireDefault(_naturalSort);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(123);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"collections\";\n\n/*==============================================================================\nTODO:\n    use proper Element model and not just json\n    straighten out createFn, collection.createHDCA\n    possibly stop using modals for this\n    It would be neat to do a drag and drop\n\n==============================================================================*/\n/** A view for both DatasetDCEs and NestedDCDCEs\n *  (things that implement collection-model:DatasetCollectionElementMixin)\n */\nvar DatasetCollectionElementView = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n    tagName: \"li\",\n    className: \"collection-element\",\n\n    initialize: function initialize(attributes) {\n        this.element = attributes.element || {};\n        this.selected = attributes.selected || false;\n    },\n\n    render: function render() {\n        this.dragStartHandler = _.bind(this._dragstart, this);\n        this.dragEndHandler = _.bind(this._dragend, this);\n        var handle = this.$el.attr(\"data-element-id\", this.element.id).attr(\"draggable\", true).html(this.template({ element: this.element })).get(0);\n        handle.addEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.addEventListener(\"dragend\", this.dragEndHandler, false);\n        if (this.selected) {\n            this.$el.addClass(\"selected\");\n        }\n        return this;\n    },\n\n    //TODO: lots of unused space in the element - possibly load details and display them horiz.\n    template: _.template(['<a class=\"name\" title=\"', (0, _localization2.default)(\"Click to rename\"), '\" href=\"javascript:void(0)\">', \"<%- element.name %>\", \"</a>\", '<button class=\"discard btn btn-sm\" title=\"', (0, _localization2.default)(\"Remove this dataset from the list\"), '\">', (0, _localization2.default)(\"Discard\"), \"</button>\"].join(\"\")),\n\n    /** select this element and pub */\n    select: function select(toggle) {\n        this.$el.toggleClass(\"selected\", toggle);\n        this.trigger(\"select\", {\n            source: this,\n            selected: this.$el.hasClass(\"selected\")\n        });\n    },\n\n    /** animate the removal of this element and pub */\n    discard: function discard() {\n        var view = this;\n        var parentWidth = this.$el.parent().width();\n        this.$el.animate({ \"margin-right\": parentWidth }, \"fast\", function () {\n            view.trigger(\"discard\", {\n                source: view\n            });\n            view.destroy();\n        });\n    },\n\n    /** remove the DOM and any listeners */\n    destroy: function destroy() {\n        this.off();\n        this.$el.remove();\n    },\n\n    events: {\n        click: \"_click\",\n        \"click .name\": \"_clickName\",\n        \"click .discard\": \"_clickDiscard\",\n\n        dragover: \"_sendToParent\",\n        drop: \"_sendToParent\"\n    },\n\n    /** select when the li is clicked */\n    _click: function _click(ev) {\n        ev.stopPropagation();\n        this.select(ev);\n    },\n\n    /** rename a pair when the name is clicked */\n    _clickName: function _clickName(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        var promptString = [(0, _localization2.default)(\"Enter a new name for the element\"), \":\\n(\", (0, _localization2.default)(\"Note that changing the name here will not rename the dataset\"), \")\"].join(\"\");\n\n        var response = prompt((0, _localization2.default)(\"Enter a new name for the element\") + \":\", this.element.name);\n\n        if (response) {\n            this.element.name = response;\n            this.render();\n        }\n        //TODO: cancelling with ESC leads to closure of the creator...\n    },\n\n    /** discard when the discard button is clicked */\n    _clickDiscard: function _clickDiscard(ev) {\n        ev.stopPropagation();\n        this.discard();\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragstart: function _dragstart(ev) {\n        if (ev.originalEvent) {\n            ev = ev.originalEvent;\n        }\n        ev.dataTransfer.effectAllowed = \"move\";\n        ev.dataTransfer.setData(\"text/plain\", JSON.stringify(this.element));\n\n        this.$el.addClass(\"dragging\");\n        this.$el.parent().trigger(\"collection-element.dragstart\", [this]);\n    },\n\n    /** dragging for re-ordering */\n    _dragend: function _dragend(ev) {\n        this.$el.removeClass(\"dragging\");\n        this.$el.parent().trigger(\"collection-element.dragend\", [this]);\n    },\n\n    /** manually bubble up an event to the parent/container */\n    _sendToParent: function _sendToParent(ev) {\n        this.$el.parent().trigger(ev);\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return \"DatasetCollectionElementView()\";\n    }\n});\n\n// ============================================================================\n/** An interface for building collections.\n */\nvar ListCollectionCreator = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(_baseCreator2.default.CollectionCreatorMixin).extend({\n    _logNamespace: logNamespace,\n\n    /** the class used to display individual elements */\n    elementViewClass: DatasetCollectionElementView,\n    /** the class this creator will create and save */\n    collectionClass: _hdcaModel2.default.HistoryListDatasetCollection,\n    className: \"list-collection-creator collection-creator flex-row-container\",\n\n    /** minimum number of valid elements to start with in order to build a collection of this type */\n    minElements: 1,\n\n    defaultAttributes: {\n        //TODO: remove - use new collectionClass().save()\n        /** takes elements and creates the proper collection - returns a promise */\n        creationFn: function creationFn() {\n            throw new TypeError(\"no creation fn for creator\");\n        },\n        /** fn to call when the collection is created (scoped to this) */\n        oncreate: function oncreate() {},\n        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n        oncancel: function oncancel() {},\n        /** distance from list edge to begin autoscrolling list */\n        autoscrollDist: 24,\n        /** Color passed to hoverhighlight */\n        highlightClr: \"rgba( 64, 255, 255, 1.0 )\"\n    },\n\n    footerSettings: {\n        \".hide-originals\": \"hideOriginals\"\n    },\n\n    /** set up initial options, instance vars, behaviors */\n    initialize: function initialize(attributes) {\n        this.metric(\"ListCollectionCreator.initialize\", attributes);\n        var creator = this;\n        _.each(this.defaultAttributes, function (value, key) {\n            value = attributes[key] || value;\n            creator[key] = value;\n        });\n\n        /** unordered, original list - cache to allow reversal */\n        creator.initialElements = attributes.elements || [];\n\n        this._setUpCommonSettings(attributes);\n        this._instanceSetUp();\n        this._elementsSetUp();\n        this._setUpBehaviors();\n    },\n\n    /** set up instance vars */\n    _instanceSetUp: function _instanceSetUp() {\n        /** Ids of elements that have been selected by the user - to preserve over renders */\n        this.selectedIds = {};\n        /** DOM elements currently being dragged */\n        this.$dragging = null;\n        /** Used for blocking UI events during ajax/operations (don't post twice) */\n        this.blocking = false;\n    },\n\n    // ------------------------------------------------------------------------ process raw list\n    /** set up main data */\n    _elementsSetUp: function _elementsSetUp() {\n        //this.debug( '-- _dataSetUp' );\n        /** a list of invalid elements and the reasons they aren't valid */\n        this.invalidElements = [];\n        //TODO: handle fundamental problem of syncing DOM, views, and list here\n        /** data for list in progress */\n        this.workingElements = [];\n        /** views for workingElements */\n        this.elementViews = [];\n\n        // copy initial list, sort, add ids if needed\n        this.workingElements = this.initialElements.slice(0);\n        this._ensureElementIds();\n        this._validateElements();\n        this._mangleDuplicateNames();\n        this._sortElements();\n    },\n\n    /** add ids to dataset objs in initial list if none */\n    _ensureElementIds: function _ensureElementIds() {\n        this.workingElements.forEach(function (element) {\n            if (!element.hasOwnProperty(\"id\")) {\n                element.id = _.uniqueId();\n            }\n        });\n        return this.workingElements;\n    },\n\n    /** separate working list into valid and invalid elements for this collection */\n    _validateElements: function _validateElements() {\n        var creator = this;\n        var existingNames = {};\n        creator.invalidElements = [];\n\n        this.workingElements = this.workingElements.filter(function (element) {\n            var problem = creator._isElementInvalid(element);\n            if (problem) {\n                creator.invalidElements.push({\n                    element: element,\n                    text: problem\n                });\n            }\n            return !problem;\n        });\n        return this.workingElements;\n    },\n\n    /** describe what is wrong with a particular element if anything */\n    _isElementInvalid: function _isElementInvalid(element) {\n        if (element.history_content_type !== \"dataset\") {\n            return (0, _localization2.default)(\"is not a dataset\");\n        }\n        var validState = element.state === _states2.default.OK || _.contains(_states2.default.NOT_READY_STATES, element.state);\n        if (!validState) {\n            return (0, _localization2.default)(\"has errored, is paused, or is not accessible\");\n        }\n        if (element.deleted || element.purged) {\n            return (0, _localization2.default)(\"has been deleted or purged\");\n        }\n        return null;\n    },\n\n    /** mangle duplicate names using a mac-like '(counter)' addition to any duplicates */\n    _mangleDuplicateNames: function _mangleDuplicateNames() {\n        var SAFETY = 900;\n        var counter = 1;\n        var existingNames = {};\n        this.workingElements.forEach(function (element) {\n            var currName = element.name;\n            while (existingNames.hasOwnProperty(currName)) {\n                currName = element.name + \" (\" + counter + \")\";\n                counter += 1;\n                if (counter >= SAFETY) {\n                    throw new Error(\"Safety hit in while loop - thats impressive\");\n                }\n            }\n            element.name = currName;\n            existingNames[element.name] = true;\n        });\n    },\n\n    /** sort a list of elements */\n    _sortElements: function _sortElements(list) {\n        // // currently only natural sort by name\n        // this.workingElements.sort( function( a, b ){ return naturalSort( a.name, b.name ); });\n        // return this.workingElements;\n    },\n\n    // ------------------------------------------------------------------------ rendering\n    // templates : ListCollectionCreator.templates,\n    /** render the entire interface */\n    render: function render(speed, callback) {\n        //this.debug( '-- _render' );\n        if (this.workingElements.length < this.minElements) {\n            return this._renderInvalid(speed, callback);\n        }\n\n        this.$el.empty().html(this.templates.main());\n        this._renderHeader(speed);\n        this._renderMiddle(speed);\n        this._renderFooter(speed);\n        this._addPluginComponents();\n        this.$(\".collection-name\").focus();\n        this.trigger(\"rendered\", this);\n        return this;\n    },\n\n    /** render a simplified interface aimed at telling the user why they can't move forward */\n    _renderInvalid: function _renderInvalid(speed, callback) {\n        //this.debug( '-- _render' );\n        this.$el.empty().html(this.templates.invalidInitial({\n            problems: this.invalidElements,\n            elements: this.workingElements\n        }));\n        if (typeof this.oncancel === \"function\") {\n            this.$(\".cancel-create.btn\").show();\n        }\n        this.trigger(\"rendered\", this);\n        return this;\n    },\n\n    /** render the header section */\n    _renderHeader: function _renderHeader(speed, callback) {\n        var $header = this.$(\".header\").empty().html(this.templates.header()).find(\".help-content\").prepend($(this.templates.helpContent()));\n        //TODO: should only show once despite calling _renderHeader again\n        if (this.invalidElements.length) {\n            this._invalidElementsAlert();\n        }\n        return $header;\n    },\n\n    /** render the middle including the elements */\n    _renderMiddle: function _renderMiddle(speed, callback) {\n        var $middle = this.$(\".middle\").empty().html(this.templates.middle());\n        this._renderList(speed);\n        return $middle;\n    },\n\n    /** add any jQuery/bootstrap/custom plugins to elements rendered */\n    _addPluginComponents: function _addPluginComponents() {\n        this.$(\".help-content i\").hoverhighlight(\".collection-creator\", this.highlightClr);\n    },\n\n    /** build and show an alert describing any elements that could not be included due to problems */\n    _invalidElementsAlert: function _invalidElementsAlert() {\n        this._showAlert(this.templates.invalidElements({\n            problems: this.invalidElements\n        }), \"alert-warning\");\n    },\n\n    _disableNameAndCreate: function _disableNameAndCreate(disable) {\n        disable = !_.isUndefined(disable) ? disable : true;\n        if (disable) {\n            this.$(\".collection-name\").prop(\"disabled\", true);\n            this.$(\".create-collection\").toggleClass(\"disabled\", true);\n            // } else {\n            //     this.$( '.collection-name' ).prop( 'disabled', false );\n            //     this.$( '.create-collection' ).removeClass( 'disable' );\n        }\n    },\n\n    // ------------------------------------------------------------------------ rendering elements\n    /** conv. to the main list display DOM */\n    $list: function $list() {\n        return this.$(\".collection-elements\");\n    },\n\n    /** show or hide the clear selected control based on the num of selected elements */\n    _renderClearSelected: function _renderClearSelected() {\n        if (_.size(this.selectedIds)) {\n            this.$(\".collection-elements-controls > .clear-selected\").show();\n        } else {\n            this.$(\".collection-elements-controls > .clear-selected\").hide();\n        }\n    },\n\n    /** render the elements in order (or a warning if no elements found) */\n    _renderList: function _renderList(speed, callback) {\n        //this.debug( '-- _renderList' );\n        var creator = this;\n\n        var $tmp = jQuery(\"<div/>\");\n        var $list = creator.$list();\n\n        _.each(this.elementViews, function (view) {\n            view.destroy();\n            creator.removeElementView(view);\n        });\n\n        // if( !this.workingElements.length ){\n        //     this._renderNoValidElements();\n        //     return;\n        // }\n\n        creator.workingElements.forEach(function (element) {\n            var elementView = creator._createElementView(element);\n            $tmp.append(elementView.$el);\n        });\n\n        creator._renderClearSelected();\n        $list.empty().append($tmp.children());\n        _.invoke(creator.elementViews, \"render\");\n\n        if ($list.height() > $list.css(\"max-height\")) {\n            $list.css(\"border-width\", \"1px 0px 1px 0px\");\n        } else {\n            $list.css(\"border-width\", \"0px\");\n        }\n    },\n\n    /** create an element view, cache in elementViews, set up listeners, and return */\n    _createElementView: function _createElementView(element) {\n        var elementView = new this.elementViewClass({\n            //TODO: use non-generic class or not all\n            // model : COLLECTION.DatasetDCE( element )\n            element: element,\n            selected: _.has(this.selectedIds, element.id)\n        });\n        this.elementViews.push(elementView);\n        this._listenToElementView(elementView);\n        return elementView;\n    },\n\n    /** listen to any element events */\n    _listenToElementView: function _listenToElementView(view) {\n        var creator = this;\n        creator.listenTo(view, {\n            select: function select(data) {\n                var element = data.source.element;\n                if (data.selected) {\n                    creator.selectedIds[element.id] = true;\n                } else {\n                    delete creator.selectedIds[element.id];\n                }\n                creator.trigger(\"elements:select\", data);\n            },\n            discard: function discard(data) {\n                creator.trigger(\"elements:discard\", data);\n            }\n        });\n    },\n\n    /** add a new element view based on the json in element */\n    addElementView: function addElementView(element) {\n        //TODO: workingElements is sorted, add element in appropo index\n        // add element, sort elements, find element index\n        // var view = this._createElementView( element );\n        // return view;\n    },\n\n    /** stop listening to view and remove from caches */\n    removeElementView: function removeElementView(view) {\n        delete this.selectedIds[view.element.id];\n        this._renderClearSelected();\n\n        this.elementViews = _.without(this.elementViews, view);\n        this.stopListening(view);\n    },\n\n    /** render a message in the list that no elements remain to create a collection */\n    _renderNoElementsLeft: function _renderNoElementsLeft() {\n        this._disableNameAndCreate(true);\n        this.$(\".collection-elements\").append(this.templates.noElementsLeft());\n    },\n\n    // /** render a message in the list that no valid elements were found to create a collection */\n    // _renderNoValidElements : function(){\n    //     this._disableNameAndCreate( true );\n    //     this.$( '.collection-elements' ).append( this.templates.noValidElements() );\n    // },\n\n    // ------------------------------------------------------------------------ API\n    /** convert element into JSON compatible with the collections API */\n    _elementToJSON: function _elementToJSON(element) {\n        // return element.toJSON();\n        return element;\n    },\n\n    /** create the collection via the API\n     *  @returns {jQuery.xhr Object} the jquery ajax request\n     */\n    createList: function createList(name) {\n        if (!this.workingElements.length) {\n            var message = (0, _localization2.default)(\"No valid elements for final list\") + \". \";\n            message += \"<a class=\\\"cancel-create\\\" href=\\\"javascript:void(0);\\\">\" + (0, _localization2.default)(\"Cancel\") + \"</a> \";\n            message += (0, _localization2.default)(\"or\");\n            message += \" <a class=\\\"reset\\\" href=\\\"javascript:void(0);\\\">\" + (0, _localization2.default)(\"start over\") + \"</a>.\";\n            this._showAlert(message);\n            return;\n        }\n\n        var creator = this;\n\n        var elements = this.workingElements.map(function (element) {\n            return creator._elementToJSON(element);\n        });\n\n        creator.blocking = true;\n        return creator.creationFn(elements, name, creator.hideOriginals).always(function () {\n            creator.blocking = false;\n        }).fail(function (xhr, status, message) {\n            creator.trigger(\"error\", {\n                xhr: xhr,\n                status: status,\n                message: (0, _localization2.default)(\"An error occurred while creating this collection\")\n            });\n        }).done(function (response, message, xhr) {\n            creator.trigger(\"collection:created\", response, message, xhr);\n            creator.metric(\"collection:created\", response);\n            if (typeof creator.oncreate === \"function\") {\n                creator.oncreate.call(this, response, message, xhr);\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ events\n    /** set up event handlers on self */\n    _setUpBehaviors: function _setUpBehaviors() {\n        this.on(\"error\", this._errorHandler);\n\n        this.once(\"rendered\", function () {\n            this.trigger(\"rendered:initial\", this);\n        });\n\n        this.on(\"elements:select\", function (data) {\n            this._renderClearSelected();\n        });\n\n        this.on(\"elements:discard\", function (data) {\n            var element = data.source.element;\n            this.removeElementView(data.source);\n\n            this.workingElements = _.without(this.workingElements, element);\n            if (!this.workingElements.length) {\n                this._renderNoElementsLeft();\n            }\n        });\n\n        //this.on( 'all', function(){\n        //    this.info( arguments );\n        //});\n        return this;\n    },\n\n    /** handle errors with feedback and details to the user (if available) */\n    _errorHandler: function _errorHandler(data) {\n        this.error(data);\n\n        var creator = this;\n        var content = data.message || (0, _localization2.default)(\"An error occurred\");\n        if (data.xhr) {\n            var xhr = data.xhr;\n            var message = data.message;\n            if (xhr.readyState === 0 && xhr.status === 0) {\n                content += \": \" + (0, _localization2.default)(\"Galaxy could not be reached and may be updating.\") + (0, _localization2.default)(\" Try again in a few minutes.\");\n            } else if (xhr.responseJSON) {\n                content += \":<br /><pre>\" + JSON.stringify(xhr.responseJSON) + \"</pre>\";\n            } else {\n                content += \": \" + message;\n            }\n        }\n        creator._showAlert(content, \"alert-danger\");\n    },\n\n    events: {\n        // header\n        \"click .more-help\": \"_clickMoreHelp\",\n        \"click .less-help\": \"_clickLessHelp\",\n        \"click .main-help\": \"_toggleHelp\",\n        \"click .header .alert button\": \"_hideAlert\",\n\n        \"click .reset\": \"reset\",\n        \"click .clear-selected\": \"clearSelectedElements\",\n\n        // elements - selection\n        \"click .collection-elements\": \"clearSelectedElements\",\n\n        // elements - drop target\n        // 'dragenter .collection-elements': '_dragenterElements',\n        // 'dragleave .collection-elements': '_dragleaveElements',\n        \"dragover .collection-elements\": \"_dragoverElements\",\n        \"drop .collection-elements\": \"_dropElements\",\n\n        // these bubble up from the elements as custom events\n        \"collection-element.dragstart .collection-elements\": \"_elementDragstart\",\n        \"collection-element.dragend   .collection-elements\": \"_elementDragend\",\n\n        // footer\n        \"change .collection-name\": \"_changeName\",\n        \"keydown .collection-name\": \"_nameCheckForEnter\",\n        \"change .hide-originals\": \"_changeHideOriginals\",\n        \"click .cancel-create\": \"_cancelCreate\",\n        \"click .create-collection\": \"_clickCreate\" //,\n    },\n\n    // ........................................................................ elements\n    /** reset all data to the initial state */\n    reset: function reset() {\n        this._instanceSetUp();\n        this._elementsSetUp();\n        this.render();\n    },\n\n    /** deselect all elements */\n    clearSelectedElements: function clearSelectedElements(ev) {\n        this.$(\".collection-elements .collection-element\").removeClass(\"selected\");\n        this.$(\".collection-elements-controls > .clear-selected\").hide();\n    },\n\n    //_dragenterElements : function( ev ){\n    //    //this.debug( '_dragenterElements:', ev );\n    //},\n    //TODO: if selected are dragged out of the list area - remove the placeholder - cuz it won't work anyway\n    // _dragleaveElements : function( ev ){\n    //    //this.debug( '_dragleaveElements:', ev );\n    // },\n\n    /** track the mouse drag over the list adding a placeholder to show where the drop would occur */\n    _dragoverElements: function _dragoverElements(ev) {\n        //this.debug( '_dragoverElements:', ev );\n        ev.preventDefault();\n\n        var $list = this.$list();\n        this._checkForAutoscroll($list, ev.originalEvent.clientY);\n        var $nearest = this._getNearestElement(ev.originalEvent.clientY);\n\n        //TODO: no need to re-create - move instead\n        this.$(\".element-drop-placeholder\").remove();\n        var $placeholder = $('<div class=\"element-drop-placeholder\"></div>');\n        if (!$nearest.length) {\n            $list.append($placeholder);\n        } else {\n            $nearest.before($placeholder);\n        }\n    },\n\n    /** If the mouse is near enough to the list's top or bottom, scroll the list */\n    _checkForAutoscroll: function _checkForAutoscroll($element, y) {\n        var AUTOSCROLL_SPEED = 2;\n        var offset = $element.offset();\n        var scrollTop = $element.scrollTop();\n        var upperDist = y - offset.top;\n        var lowerDist = offset.top + $element.outerHeight() - y;\n        if (upperDist >= 0 && upperDist < this.autoscrollDist) {\n            $element.scrollTop(scrollTop - AUTOSCROLL_SPEED);\n        } else if (lowerDist >= 0 && lowerDist < this.autoscrollDist) {\n            $element.scrollTop(scrollTop + AUTOSCROLL_SPEED);\n        }\n    },\n\n    /** get the nearest element based on the mouse's Y coordinate.\n     *  If the y is at the end of the list, return an empty jQuery object.\n     */\n    _getNearestElement: function _getNearestElement(y) {\n        var WIGGLE = 4;\n\n        var lis = this.$(\".collection-elements li.collection-element\").toArray();\n\n        for (var i = 0; i < lis.length; i++) {\n            var $li = $(lis[i]);\n            var top = $li.offset().top;\n            var halfHeight = Math.floor($li.outerHeight() / 2) + WIGGLE;\n            if (top + halfHeight > y && top - halfHeight < y) {\n                return $li;\n            }\n        }\n        return $();\n    },\n\n    /** drop (dragged/selected elements) onto the list, re-ordering the internal list */\n    _dropElements: function _dropElements(ev) {\n        if (ev.originalEvent) {\n            ev = ev.originalEvent;\n        }\n        // both required for firefox\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"move\";\n\n        // insert before the nearest element or after the last.\n        var $nearest = this._getNearestElement(ev.clientY);\n        if ($nearest.length) {\n            this.$dragging.insertBefore($nearest);\n        } else {\n            // no nearest before - insert after last element\n            this.$dragging.insertAfter(this.$(\".collection-elements .collection-element\").last());\n        }\n        // resync the creator's list based on the new DOM order\n        this._syncOrderToDom();\n        return false;\n    },\n\n    /** resync the creator's list of elements based on the DOM order */\n    _syncOrderToDom: function _syncOrderToDom() {\n        var creator = this;\n        var newElements = [];\n        //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n        this.$(\".collection-elements .collection-element\").each(function () {\n            var id = $(this).attr(\"data-element-id\");\n\n            var element = _.findWhere(creator.workingElements, {\n                id: id\n            });\n\n            if (element) {\n                newElements.push(element);\n            } else {\n                console.error(\"missing element: \", id);\n            }\n        });\n        this.workingElements = newElements;\n        this._renderList();\n    },\n\n    /** drag communication with element sub-views: dragstart */\n    _elementDragstart: function _elementDragstart(ev, element) {\n        // auto select the element causing the event and move all selected\n        element.select(true);\n        this.$dragging = this.$(\".collection-elements .collection-element.selected\");\n    },\n\n    /** drag communication with element sub-views: dragend - remove the placeholder */\n    _elementDragend: function _elementDragend(ev, element) {\n        $(\".element-drop-placeholder\").remove();\n        this.$dragging = null;\n    },\n\n    // ------------------------------------------------------------------------ templates\n    //TODO: move to require text plugin and load these as text\n    //TODO: underscore currently unnecc. bc no vars are used\n    //TODO: better way of localizing text-nodes in long strings\n    /** underscore template fns attached to class */\n    templates: _.extend({}, _baseCreator2.default.CollectionCreatorMixin._creatorTemplates, {\n        /** the header (not including help text) */\n        header: _.template(['<div class=\"main-help well clear\">', '<a class=\"more-help\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"More help\"), \"</a>\", '<div class=\"help-content\">', '<a class=\"less-help\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Less\"), \"</a>\", \"</div>\", \"</div>\", '<div class=\"alert alert-dismissable\">', '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" ', 'title=\"', (0, _localization2.default)(\"Close and show more help\"), '\" aria-hidden=\"true\">&times;</button>', '<span class=\"alert-message\"></span>', \"</div>\"].join(\"\")),\n\n        /** the middle: element list */\n        middle: _.template(['<div class=\"collection-elements-controls\">', '<a class=\"reset\" href=\"javascript:void(0);\" ', 'title=\"', (0, _localization2.default)(\"Undo all reordering and discards\"), '\">', (0, _localization2.default)(\"Start over\"), \"</a>\", '<a class=\"clear-selected\" href=\"javascript:void(0);\" ', 'title=\"', (0, _localization2.default)(\"De-select all selected datasets\"), '\">', (0, _localization2.default)(\"Clear selected\"), \"</a>\", \"</div>\", '<div class=\"collection-elements scroll-container flex-row\">', \"</div>\"].join(\"\")),\n\n        /** creation and cancel controls */\n        footer: _.template(['<div class=\"attributes clear\">', '<div class=\"clear\">', '<label class=\"setting-prompt pull-right\">', (0, _localization2.default)(\"Hide original elements\"), \"?\", '<input class=\"hide-originals pull-right\" type=\"checkbox\" />', \"</label>\", \"</div>\", '<div class=\"clear\">', '<input class=\"collection-name form-control pull-right\" ', 'placeholder=\"', (0, _localization2.default)(\"Enter a name for your new collection\"), '\" />', '<div class=\"collection-name-prompt pull-right\">', (0, _localization2.default)(\"Name\"), \":</div>\", \"</div>\", \"</div>\", '<div class=\"actions clear vertically-spaced\">', '<div class=\"other-options pull-left\">', '<button class=\"cancel-create btn\" tabindex=\"-1\">', (0, _localization2.default)(\"Cancel\"), \"</button>\", '<div class=\"create-other btn-group dropup\">', '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">', (0, _localization2.default)(\"Create a different kind of collection\"), ' <span class=\"caret\"></span>', \"</button>\", '<ul class=\"dropdown-menu\" role=\"menu\">', '<li><a href=\"#\">', (0, _localization2.default)(\"Create a <i>single</i> pair\"), \"</a></li>\", '<li><a href=\"#\">', (0, _localization2.default)(\"Create a list of <i>unpaired</i> datasets\"), \"</a></li>\", \"</ul>\", \"</div>\", \"</div>\", '<div class=\"main-options pull-right\">', '<button class=\"create-collection btn btn-primary\">', (0, _localization2.default)(\"Create list\"), \"</button>\", \"</div>\", \"</div>\"].join(\"\")),\n\n        /** help content */\n        helpContent: _.template([\"<p>\", (0, _localization2.default)([\"Collections of datasets are permanent, ordered lists of datasets that can be passed to tools and \", \"workflows in order to have analyses done on each member of the entire group. This interface allows \", \"you to create a collection and re-order the final collection.\"].join(\"\")), \"</p>\", \"<ul>\", \"<li>\", (0, _localization2.default)([\"Rename elements in the list by clicking on \", '<i data-target=\".collection-element .name\">the existing name</i>.'].join(\"\")), \"</li>\", \"<li>\", (0, _localization2.default)([\"Discard elements from the final created list by clicking on the \", '<i data-target=\".collection-element .discard\">\"Discard\"</i> button.'].join(\"\")), \"</li>\", \"<li>\", (0, _localization2.default)([\"Reorder the list by clicking and dragging elements. Select multiple elements by clicking on \", '<i data-target=\".collection-element\">them</i> and you can then move those selected by dragging the ', \"entire group. Deselect them by clicking them again or by clicking the \", 'the <i data-target=\".clear-selected\">\"Clear selected\"</i> link.'].join(\"\")), \"</li>\", \"<li>\", (0, _localization2.default)(['Click the <i data-target=\".reset\">\"Start over\"</i> link to begin again as if you had just opened ', \"the interface.\"].join(\"\")), \"</li>\", \"<li>\", (0, _localization2.default)(['Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'].join(\"\")), \"</li>\", \"</ul><br />\", \"<p>\", (0, _localization2.default)(['Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ', 'click <i data-target=\".create-collection\">\"Create list\"</i>.'].join(\"\")), \"</p>\"].join(\"\")),\n\n        /** shown in list when all elements are discarded */\n        invalidElements: _.template([(0, _localization2.default)(\"The following selections could not be included due to problems:\"), \"<ul><% _.each( problems, function( problem ){ %>\", \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\", \"<% }); %></ul>\"].join(\"\")),\n\n        /** shown in list when all elements are discarded */\n        noElementsLeft: _.template(['<li class=\"no-elements-left-message\">', (0, _localization2.default)(\"No elements left! \"), (0, _localization2.default)(\"Would you like to \"), '<a class=\"reset\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"start over\"), \"</a>?\", \"</li>\"].join(\"\")),\n\n        /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n        invalidInitial: _.template(['<div class=\"header flex-row no-flex\">', '<div class=\"alert alert-warning\" style=\"display: block\">', '<span class=\"alert-message\">', \"<% if( _.size( problems ) ){ %>\", (0, _localization2.default)(\"The following selections could not be included due to problems\"), \":\", \"<ul><% _.each( problems, function( problem ){ %>\", \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\", \"<% }); %></ul>\", \"<% } else if( _.size( elements ) < 1 ){ %>\", (0, _localization2.default)(\"No datasets were selected\"), \".\", \"<% } %>\", \"<br />\", (0, _localization2.default)(\"At least one element is needed for the collection\"), \". \", (0, _localization2.default)(\"You may need to \"), '<a class=\"cancel-create\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"cancel\"), \"</a> \", (0, _localization2.default)(\"and reselect new elements\"), \".\", \"</span>\", \"</div>\", \"</div>\", '<div class=\"footer flex-row no-flex\">', '<div class=\"actions clear vertically-spaced\">', '<div class=\"other-options pull-left\">', '<button class=\"cancel-create btn\" tabindex=\"-1\">', (0, _localization2.default)(\"Cancel\"), \"</button>\",\n        // _l( 'Create a different kind of collection' ),\n        \"</div>\", \"</div>\", \"</div>\"].join(\"\"))\n    }),\n\n    // ------------------------------------------------------------------------ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListCollectionCreator\";\n    }\n});\n\n//=============================================================================\n/** Create a modal and load its body with the given CreatorClass creator type\n *  @returns {Deferred} resolved when creator has built a collection.\n */\nvar collectionCreatorModal = function _collectionCreatorModal(elements, options, CreatorClass) {\n    var deferred = jQuery.Deferred();\n    var modal = Galaxy.modal || new _uiModal2.default.View();\n    var creator;\n\n    options = _.defaults(options || {}, {\n        elements: elements,\n        oncancel: function oncancel() {\n            modal.hide();\n            deferred.reject(\"cancelled\");\n        },\n        oncreate: function oncreate(creator, response) {\n            modal.hide();\n            deferred.resolve(response);\n        }\n    });\n\n    creator = new CreatorClass(options);\n    modal.show({\n        title: options.title || (0, _localization2.default)(\"Create a collection\"),\n        body: creator.$el,\n        width: \"80%\",\n        height: \"100%\",\n        closing_events: true\n    });\n    creator.render();\n    window._collectionCreator = creator;\n\n    //TODO: remove modal header\n    return deferred;\n};\n\n/** List collection flavor of collectionCreatorModal. */\nvar listCollectionCreatorModal = function _listCollectionCreatorModal(elements, options) {\n    options = options || {};\n    options.title = (0, _localization2.default)(\"Create a collection from a list of datasets\");\n    return collectionCreatorModal(elements, options, ListCollectionCreator);\n};\n\n//==============================================================================\n/** Use a modal to create a list collection, then add it to the given history contents.\n *  @returns {Deferred} resolved when the collection is added to the history.\n */\nfunction createListCollection(contents, defaultHideSourceItems) {\n    var elements = contents.toJSON();\n\n    var promise = listCollectionCreatorModal(elements, {\n        defaultHideSourceItems: defaultHideSourceItems,\n        creationFn: function creationFn(elements, name, hideSourceItems) {\n            elements = elements.map(function (element) {\n                return {\n                    id: element.id,\n                    name: element.name,\n\n                    //TODO: this allows for list:list even if the filter above does not - reconcile\n                    src: element.history_content_type === \"dataset\" ? \"hda\" : \"hdca\"\n                };\n            });\n            return contents.createHDCA(elements, \"list\", name, hideSourceItems);\n        }\n    });\n\n    return promise;\n}\n\n//==============================================================================\nexports.default = {\n    DatasetCollectionElementView: DatasetCollectionElementView,\n    ListCollectionCreator: ListCollectionCreator,\n\n    collectionCreatorModal: collectionCreatorModal,\n    listCollectionCreatorModal: listCollectionCreatorModal,\n    createListCollection: createListCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _collectionModel = __webpack_require__(80);\n\nvar _collectionModel2 = _interopRequireDefault(_collectionModel);\n\nvar _historyContentModel = __webpack_require__(120);\n\nvar _historyContentModel2 = _interopRequireDefault(_historyContentModel);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*==============================================================================\n\nModels for DatasetCollections contained within a history.\n\nTODO:\n    these might be compactable to one class if some duplication with\n    collection-model is used.\n\n==============================================================================*/\nvar hcontentMixin = _historyContentModel2.default.HistoryContentMixin;\n\nvar ListDC = _collectionModel2.default.ListDatasetCollection;\nvar PairDC = _collectionModel2.default.PairDatasetCollection;\nvar ListPairedDC = _collectionModel2.default.ListPairedDatasetCollection;\nvar ListOfListsDC = _collectionModel2.default.ListOfListsDatasetCollection;\n\n//==============================================================================\n/** Override to post to contents route w/o id. */\nfunction buildHDCASave(_super) {\n    return function _save(attributes, options) {\n        if (this.isNew()) {\n            options = options || {};\n            options.url = this.urlRoot + this.get(\"history_id\") + \"/contents\";\n            attributes = attributes || {};\n            attributes.type = \"dataset_collection\";\n        }\n        return _super.call(this, attributes, options);\n    };\n}\n\n//==============================================================================\n/** @class Backbone model for List Dataset Collection within a History.\n */\nvar HistoryListDatasetCollection = ListDC.extend(hcontentMixin).extend(\n/** @lends HistoryListDatasetCollection.prototype */{\n    defaults: _.extend(_.clone(ListDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"list\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(ListDC.prototype.save),\n\n    /** String representation. */\n    toString: function toString() {\n        return \"History\" + ListDC.prototype.toString.call(this);\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for Pair Dataset Collection within a History.\n *  @constructs\n */\nvar HistoryPairDatasetCollection = PairDC.extend(hcontentMixin).extend(\n/** @lends HistoryPairDatasetCollection.prototype */{\n    defaults: _.extend(_.clone(PairDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"paired\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(PairDC.prototype.save),\n\n    /** String representation. */\n    toString: function toString() {\n        return \"History\" + PairDC.prototype.toString.call(this);\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for List of Pairs Dataset Collection within a History. */\nvar HistoryListPairedDatasetCollection = ListPairedDC.extend(hcontentMixin).extend({\n    defaults: _.extend(_.clone(ListPairedDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"list:paired\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(ListPairedDC.prototype.save),\n\n    /** String representation. */\n    toString: function toString() {\n        return \"History\" + ListPairedDC.prototype.toString.call(this);\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for List of Lists Dataset Collection within a History. */\nvar HistoryListOfListsDatasetCollection = ListOfListsDC.extend(hcontentMixin).extend({\n    defaults: _.extend(_.clone(ListOfListsDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"list:list\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(ListOfListsDC.prototype.save),\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"HistoryListOfListsDatasetCollection(\", this.get(\"name\"), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexports.default = {\n    HistoryListDatasetCollection: HistoryListDatasetCollection,\n    HistoryPairDatasetCollection: HistoryPairDatasetCollection,\n    HistoryListPairedDatasetCollection: HistoryListPairedDatasetCollection,\n    HistoryListOfListsDatasetCollection: HistoryListOfListsDatasetCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, Backbone, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _datasetModel = __webpack_require__(119);\n\nvar _datasetModel2 = _interopRequireDefault(_datasetModel);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\n/*\nNotes:\n\nTerminology:\n    DatasetCollection/DC : a container of datasets or nested DatasetCollections\n    Element/DatasetCollectionElement/DCE : an item contained in a DatasetCollection\n    HistoryDatasetCollectionAssociation/HDCA: a DatasetCollection contained in a history\n\n\nThis all seems too complex unfortunately:\n\n- Terminology collision between DatasetCollections (DCs) and Backbone Collections.\n- In the DatasetCollections API JSON, DC Elements use a 'Has A' stucture to *contain*\n    either a dataset or a nested DC. This would make the hierarchy much taller. I've\n    decided to merge the contained JSON with the DC element json - making the 'has a'\n    relation into an 'is a' relation. This seems simpler to me and allowed a lot of\n    DRY in both models and views, but may make tracking or tracing within these models\n    more difficult (since DatasetCollectionElements are now *also* DatasetAssociations\n    or DatasetCollections (nested)). This also violates the rule of thumb about\n    favoring aggregation over inheritance.\n- Currently, there are three DatasetCollection subclasses: List, Pair, and ListPaired.\n    These each should a) be usable on their own, b) be usable in the context of\n    nesting within a collection model (at least in the case of ListPaired), and\n    c) be usable within the context of other container models (like History or\n    LibraryFolder, etc.). I've tried to separate/extract classes in order to\n    handle those three situations, but it's proven difficult to do in a simple,\n    readable manner.\n- Ideally, histories and libraries would inherit from the same server models as\n    dataset collections do since they are (in essence) dataset collections themselves -\n    making the whole nested structure simpler. This would be a large, error-prone\n    refactoring and migration.\n\nMany of the classes and heirarchy are meant as extension points so, while the\nrelations and flow may be difficult to understand initially, they'll allow us to\nhandle the growth or flux dataset collection in the future (w/o actually implementing\nany YAGNI).\n\n*/\n//_________________________________________________________________________________________________ ELEMENTS\n/** @class mixin for Dataset collection elements.\n *      When collection elements are passed from the API, the underlying element is\n *          in a sub-object 'object' (IOW, a DCE representing an HDA will have HDA json in element.object).\n *      This mixin uses the constructor and parse methods to merge that JSON with the DCE attribtues\n *          effectively changing a DCE from a container to a subclass (has a --> is a).\n */\nvar DatasetCollectionElementMixin = {\n    /** default attributes used by elements in a dataset collection */\n    defaults: {\n        model_class: \"DatasetCollectionElement\",\n        element_identifier: null,\n        element_index: null,\n        element_type: null\n    },\n\n    /** merge the attributes of the sub-object 'object' into this model */\n    _mergeObject: function _mergeObject(attributes) {\n        // if we don't preserve and correct ids here, the element id becomes the object id\n        // and collision in backbone's _byId will occur and only\n        _.extend(attributes, attributes.object, {\n            element_id: attributes.id\n        });\n        delete attributes.object;\n        return attributes;\n    },\n\n    /** override to merge this.object into this */\n    constructor: function constructor(attributes, options) {\n        // console.debug( '\\t DatasetCollectionElement.constructor:', attributes, options );\n        attributes = this._mergeObject(attributes);\n        this.idAttribute = \"element_id\";\n        Backbone.Model.apply(this, arguments);\n    },\n\n    /** when the model is fetched, merge this.object into this */\n    parse: function parse(response, options) {\n        var attributes = response;\n        attributes = this._mergeObject(attributes);\n        return attributes;\n    }\n};\n\n/** @class Concrete class of Generic DatasetCollectionElement */\nvar DatasetCollectionElement = Backbone.Model.extend(_baseMvc2.default.LoggableMixin).extend(DatasetCollectionElementMixin).extend({ _logNamespace: \"collections\" });\n\n//==============================================================================\n/** @class Base/Abstract Backbone collection for Generic DCEs. */\nvar DCECollection = Backbone.Collection.extend(_baseMvc2.default.LoggableMixin).extend(\n/** @lends DCECollection.prototype */{\n    _logNamespace: \"collections\",\n\n    model: DatasetCollectionElement,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"DatasetCollectionElementCollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for a dataset collection element that is a dataset (HDA).\n */\nvar DatasetDCE = _datasetModel2.default.DatasetAssociation.extend(_baseMvc2.default.mixin(DatasetCollectionElementMixin,\n/** @lends DatasetDCE.prototype */{\n    /** url fn */\n    url: function url() {\n        // won't always be an hda\n        if (!this.has(\"history_id\")) {\n            console.warn(\"no endpoint for non-hdas within a collection yet\");\n            // (a little silly since this api endpoint *also* points at hdas)\n            return Galaxy.root + \"api/datasets\";\n        }\n        return Galaxy.root + \"api/histories/\" + this.get(\"history_id\") + \"/contents/\" + this.get(\"id\");\n    },\n\n    defaults: _.extend({}, _datasetModel2.default.DatasetAssociation.prototype.defaults, DatasetCollectionElementMixin.defaults),\n\n    _downloadQueryParameters: function _downloadQueryParameters() {\n        return \"?to_ext=\" + this.get(\"file_ext\") + \"&hdca_id=\" + this.get(\"parent_hdca_id\") + \"&element_identifier=\" + this.get(\"element_identifier\");\n    },\n\n    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n    //  - re-apply manually for now\n    /** call the mixin constructor */\n    constructor: function constructor(attributes, options) {\n        this.debug(\"\\t DatasetDCE.constructor:\", attributes, options);\n        //DATASET_MODEL.DatasetAssociation.prototype.constructor.call( this, attributes, options );\n        DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n    },\n\n    /** Does this model already contain detailed data (as opposed to just summary level data)? */\n    hasDetails: function hasDetails() {\n        return this.elements && this.elements.length;\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        var objStr = this.get(\"element_identifier\");\n        return [\"DatasetDCE(\", objStr, \")\"].join(\"\");\n    }\n}));\n\n//==============================================================================\n/** @class DCECollection of DatasetDCE's (a list of datasets, a pair of datasets).\n */\nvar DatasetDCECollection = DCECollection.extend(\n/** @lends DatasetDCECollection.prototype */{\n    model: DatasetDCE,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"DatasetDCECollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//_________________________________________________________________________________________________ COLLECTIONS\n/** @class Backbone model for Dataset Collections.\n *      The DC API returns an array of JSON objects under the attribute elements.\n *      This model:\n *          - removes that array/attribute ('elements') from the model,\n *          - creates a bbone collection (of the class defined in the 'collectionClass' attribute),\n *          - passes that json onto the bbone collection\n *          - caches the bbone collection in this.elements\n */\nvar DatasetCollection = Backbone.Model.extend(_baseMvc2.default.LoggableMixin).extend(_baseMvc2.default.SearchableModelMixin).extend(\n/** @lends DatasetCollection.prototype */{\n    _logNamespace: \"collections\",\n\n    /** default attributes for a model */\n    defaults: {\n        /* 'list', 'paired', or 'list:paired' */\n        collection_type: null,\n        //??\n        deleted: false\n    },\n\n    /** Which class to use for elements */\n    collectionClass: DCECollection,\n\n    /** set up: create elements instance var and (on changes to elements) update them  */\n    initialize: function initialize(model, options) {\n        this.debug(this + \"(DatasetCollection).initialize:\", model, options, this);\n        this.elements = this._createElementsModel();\n        this.on(\"change:elements\", function () {\n            this.log(\"change:elements\");\n            //TODO: prob. better to update the collection instead of re-creating it\n            this.elements = this._createElementsModel();\n        });\n    },\n\n    /** move elements model attribute to full collection */\n    _createElementsModel: function _createElementsModel() {\n        this.debug(this + \"._createElementsModel\", this.collectionClass, this.get(\"elements\"), this.elements);\n        //TODO: same patterns as DatasetCollectionElement _createObjectModel - refactor to BASE_MVC.hasSubModel?\n        var elements = this.get(\"elements\") || [];\n        this.unset(\"elements\", { silent: true });\n        var self = this;\n        _.each(elements, function (element, index) {\n            _.extend(element, {\n                parent_hdca_id: self.get(\"id\")\n            });\n        });\n        this.elements = new this.collectionClass(elements);\n        //this.debug( 'collectionClass:', this.collectionClass + '', this.elements );\n        return this.elements;\n    },\n\n    // ........................................................................ common queries\n    /** pass the elements back within the model json when this is serialized */\n    toJSON: function toJSON() {\n        var json = Backbone.Model.prototype.toJSON.call(this);\n        if (this.elements) {\n            json.elements = this.elements.toJSON();\n        }\n        return json;\n    },\n\n    /** Is this collection in a 'ready' state no processing (for the collection) is left\n     *  to do on the server.\n     */\n    inReadyState: function inReadyState() {\n        var populated = this.get(\"populated\");\n        return this.isDeletedOrPurged() || populated;\n    },\n\n    //TODO:?? the following are the same interface as DatasetAssociation - can we combine?\n    /** Does the DC contain any elements yet? Is a fetch() required? */\n    hasDetails: function hasDetails() {\n        return this.elements.length !== 0;\n    },\n\n    /** Given the filters, what models in this.elements would be returned? */\n    getVisibleContents: function getVisibleContents(filters) {\n        // filters unused for now\n        return this.elements;\n    },\n\n    // ........................................................................ ajax\n    /** override to use actual Dates objects for create/update times */\n    parse: function parse(response, options) {\n        var parsed = Backbone.Model.prototype.parse.call(this, response, options);\n        if (parsed.create_time) {\n            parsed.create_time = new Date(parsed.create_time);\n        }\n        if (parsed.update_time) {\n            parsed.update_time = new Date(parsed.update_time);\n        }\n        return parsed;\n    },\n\n    /** save this dataset, _Mark_ing it as deleted (just a flag) */\n    delete: function _delete(options) {\n        if (this.get(\"deleted\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: true }, options);\n    },\n    /** save this dataset, _Mark_ing it as undeleted */\n    undelete: function undelete(options) {\n        if (!this.get(\"deleted\") || this.get(\"purged\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: false }, options);\n    },\n\n    /** Is this collection deleted or purged? */\n    isDeletedOrPurged: function isDeletedOrPurged() {\n        return this.get(\"deleted\") || this.get(\"purged\");\n    },\n\n    // ........................................................................ searchable\n    /** searchable attributes for collections */\n    searchAttributes: [\"name\", \"tags\"],\n\n    // ........................................................................ misc\n    /** String representation */\n    toString: function toString() {\n        var idAndName = [this.get(\"id\"), this.get(\"name\") || this.get(\"element_identifier\")];\n        return \"DatasetCollection(\" + idAndName.join(\",\") + \")\";\n    }\n});\n\n//==============================================================================\n/** Model for a DatasetCollection containing datasets (non-nested).\n */\nvar ListDatasetCollection = DatasetCollection.extend(\n/** @lends ListDatasetCollection.prototype */{\n    /** override since we know the collection will only contain datasets */\n    collectionClass: DatasetDCECollection,\n\n    /** String representation. */\n    toString: function toString() {\n        return \"List\" + DatasetCollection.prototype.toString.call(this);\n    }\n});\n\n//==============================================================================\n/** Model for a DatasetCollection containing fwd/rev datasets (a list of 2).\n */\nvar PairDatasetCollection = ListDatasetCollection.extend(\n/** @lends PairDatasetCollection.prototype */{\n    /** String representation. */\n    toString: function toString() {\n        return \"Pair\" + DatasetCollection.prototype.toString.call(this);\n    }\n});\n\n//_________________________________________________________________________________________________ NESTED COLLECTIONS\n// this is where things get weird, man. Weird.\n//TODO: it might be possible to compact all the following...I think.\n//==============================================================================\n/** @class Backbone model for a Generic DatasetCollectionElement that is also a DatasetCollection\n *      (a nested collection). Currently only list:paired.\n */\nvar NestedDCDCE = DatasetCollection.extend(_baseMvc2.default.mixin(DatasetCollectionElementMixin,\n/** @lends NestedDCDCE.prototype */{\n    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n    //  - re-apply manually it now\n    /** call the mixin constructor */\n    constructor: function constructor(attributes, options) {\n        this.debug(\"\\t NestedDCDCE.constructor:\", attributes, options);\n        DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        var objStr = this.object ? \"\" + this.object : this.get(\"element_identifier\");\n        return [\"NestedDCDCE(\", objStr, \")\"].join(\"\");\n    }\n}));\n\n//==============================================================================\n/** @class Backbone collection containing Generic NestedDCDCE's (nested dataset collections).\n */\nvar NestedDCDCECollection = DCECollection.extend(\n/** @lends NestedDCDCECollection.prototype */{\n    /** This is a collection of nested collections */\n    model: NestedDCDCE,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"NestedDCDCECollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for a paired dataset collection within a list:paired dataset collection.\n */\nvar NestedPairDCDCE = PairDatasetCollection.extend(_baseMvc2.default.mixin(DatasetCollectionElementMixin,\n/** @lends NestedPairDCDCE.prototype */{\n    //TODO:?? possibly rename to NestedDatasetCollection?\n\n    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n    //  - re-apply manually it now\n    /** This is both a collection and a collection element - call the constructor */\n    constructor: function constructor(attributes, options) {\n        this.debug(\"\\t NestedPairDCDCE.constructor:\", attributes, options);\n        //DatasetCollection.constructor.call( this, attributes, options );\n        DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        var objStr = this.object ? \"\" + this.object : this.get(\"element_identifier\");\n        return [\"NestedPairDCDCE(\", objStr, \")\"].join(\"\");\n    }\n}));\n\n//==============================================================================\n/** @class Backbone collection for a backbone collection containing paired dataset collections.\n */\nvar NestedPairDCDCECollection = NestedDCDCECollection.extend(\n/** @lends PairDCDCECollection.prototype */{\n    /** We know this collection is composed of only nested pair collections */\n    model: NestedPairDCDCE,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"NestedPairDCDCECollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone Model for a DatasetCollection (list) that contains DatasetCollections (pairs).\n */\nvar ListPairedDatasetCollection = DatasetCollection.extend(\n/** @lends ListPairedDatasetCollection.prototype */{\n    /** list:paired is the only collection that itself contains collections */\n    collectionClass: NestedPairDCDCECollection,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"ListPairedDatasetCollection(\", this.get(\"name\"), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for a list dataset collection within a list:list dataset collection. */\nvar NestedListDCDCE = ListDatasetCollection.extend(_baseMvc2.default.mixin(DatasetCollectionElementMixin,\n/** @lends NestedListDCDCE.prototype */{\n    /** This is both a collection and a collection element - call the constructor */\n    constructor: function constructor(attributes, options) {\n        this.debug(\"\\t NestedListDCDCE.constructor:\", attributes, options);\n        DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        var objStr = this.object ? \"\" + this.object : this.get(\"element_identifier\");\n        return [\"NestedListDCDCE(\", objStr, \")\"].join(\"\");\n    }\n}));\n\n//==============================================================================\n/** @class Backbone collection containing list dataset collections. */\nvar NestedListDCDCECollection = NestedDCDCECollection.extend({\n    /** We know this collection is composed of only nested pair collections */\n    model: NestedListDCDCE,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"NestedListDCDCECollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone Model for a DatasetCollection (list) that contains other lists. */\nvar ListOfListsDatasetCollection = DatasetCollection.extend({\n    /** list:paired is the only collection that itself contains collections */\n    collectionClass: NestedListDCDCECollection,\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"ListOfListsDatasetCollection(\", this.get(\"name\"), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexports.default = {\n    ListDatasetCollection: ListDatasetCollection,\n    PairDatasetCollection: PairDatasetCollection,\n    ListPairedDatasetCollection: ListPairedDatasetCollection,\n    ListOfListsDatasetCollection: ListOfListsDatasetCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    tool: \"fa-wrench\",\n    data_input: \"fa-file-o\",\n    data_collection_input: \"fa-folder-o\",\n    subworkflow: \"fa-sitemap fa-rotate-270\",\n    pause: \"fa-pause\"\n};\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, jQuery, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _historyContents = __webpack_require__(83);\n\nvar _historyContents2 = _interopRequireDefault(_historyContents);\n\nvar _historyPreferences = __webpack_require__(84);\n\nvar _historyPreferences2 = _interopRequireDefault(_historyPreferences);\n\nvar _controlledFetchCollection = __webpack_require__(127);\n\nvar _controlledFetchCollection2 = _interopRequireDefault(_controlledFetchCollection);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\n/** @class Model for a Galaxy history resource - both a record of user\n *      tool use and a collection of the datasets those tools produced.\n *  @name History\n *  @augments Backbone.Model\n */\nvar History = Backbone.Model.extend(_baseMvc2.default.LoggableMixin).extend(_baseMvc2.default.mixin(_baseMvc2.default.SearchableModelMixin,\n/** @lends History.prototype */{\n    _logNamespace: \"history\",\n\n    /** ms between fetches when checking running jobs/datasets for updates */\n    UPDATE_DELAY: 4000,\n\n    // values from api (may need more)\n    defaults: {\n        model_class: \"History\",\n        id: null,\n        name: \"Unnamed History\",\n        state: \"new\",\n\n        deleted: false,\n        contents_active: {},\n        contents_states: {}\n    },\n\n    urlRoot: Galaxy.root + \"api/histories\",\n\n    contentsClass: _historyContents2.default.HistoryContents,\n\n    /** What model fields to search with */\n    searchAttributes: [\"name\", \"annotation\", \"tags\"],\n\n    /** Adding title and singular tag */\n    searchAliases: {\n        title: \"name\",\n        tag: \"tags\"\n    },\n\n    // ........................................................................ set up/tear down\n    /** Set up the model\n     *  @param {Object} historyJSON model data for this History\n     *  @param {Object} options     any extra settings including logger\n     */\n    initialize: function initialize(historyJSON, options) {\n        options = options || {};\n        this.logger = options.logger || null;\n        this.log(this + \".initialize:\", historyJSON, options);\n\n        /** HistoryContents collection of the HDAs contained in this history. */\n        this.contents = new this.contentsClass([], {\n            history: this,\n            historyId: this.get(\"id\"),\n            order: options.order\n        });\n\n        this._setUpListeners();\n        this._setUpCollectionListeners();\n\n        /** cached timeout id for the dataset updater */\n        this.updateTimeoutId = null;\n    },\n\n    /** set up any event listeners for this history including those to the contained HDAs\n     *  events: error:contents  if an error occurred with the contents collection\n     */\n    _setUpListeners: function _setUpListeners() {\n        // if the model's id changes ('current' or null -> an actual id), update the contents history_id\n        return this.on({\n            error: function error(model, xhr, options, msg, details) {\n                this.clearUpdateTimeout();\n            },\n            \"change:id\": function changeId(model, newId) {\n                if (this.contents) {\n                    this.contents.historyId = newId;\n                }\n            }\n        });\n    },\n\n    /** event handlers for the contents submodels */\n    _setUpCollectionListeners: function _setUpCollectionListeners() {\n        if (!this.contents) {\n            return this;\n        }\n        // bubble up errors\n        return this.listenTo(this.contents, {\n            error: function error() {\n                this.trigger.apply(this, jQuery.makeArray(arguments));\n            }\n        });\n    },\n\n    // ........................................................................ derived attributes\n    /**  */\n    contentsShown: function contentsShown() {\n        var contentsActive = this.get(\"contents_active\");\n        var shown = contentsActive.active || 0;\n        shown += this.contents.includeDeleted ? contentsActive.deleted : 0;\n        shown += this.contents.includeHidden ? contentsActive.hidden : 0;\n        return shown;\n    },\n\n    /** convert size in bytes to a more human readable version */\n    nice_size: function nice_size() {\n        var size = this.get(\"size\");\n        return size ? _utils2.default.bytesToString(size, true, 2) : (0, _localization2.default)(\"(empty)\");\n    },\n\n    /** override to add nice_size */\n    toJSON: function toJSON() {\n        return _.extend(Backbone.Model.prototype.toJSON.call(this), {\n            nice_size: this.nice_size()\n        });\n    },\n\n    /** override to allow getting nice_size */\n    get: function get(key) {\n        if (key === \"nice_size\") {\n            return this.nice_size();\n        }\n        return Backbone.Model.prototype.get.apply(this, arguments);\n    },\n\n    // ........................................................................ common queries\n    /** T/F is this history owned by the current user (Galaxy.user)\n     *      Note: that this will return false for an anon user even if the history is theirs.\n     */\n    ownedByCurrUser: function ownedByCurrUser() {\n        // no currUser\n        if (!Galaxy || !Galaxy.user) {\n            return false;\n        }\n        // user is anon or history isn't owned\n        if (Galaxy.user.isAnonymous() || Galaxy.user.id !== this.get(\"user_id\")) {\n            return false;\n        }\n        return true;\n    },\n\n    /** Return the number of running jobs assoc with this history (note: unknown === 0) */\n    numOfUnfinishedJobs: function numOfUnfinishedJobs() {\n        var unfinishedJobIds = this.get(\"non_ready_jobs\");\n        return unfinishedJobIds ? unfinishedJobIds.length : 0;\n    },\n\n    /** Return the number of running hda/hdcas in this history (note: unknown === 0) */\n    numOfUnfinishedShownContents: function numOfUnfinishedShownContents() {\n        return this.contents.runningAndActive().length || 0;\n    },\n\n    // ........................................................................ updates\n    _fetchContentRelatedAttributes: function _fetchContentRelatedAttributes() {\n        var contentRelatedAttrs = [\"size\", \"non_ready_jobs\", \"contents_active\", \"hid_counter\"];\n        return this.fetch({\n            data: $.param({\n                keys: contentRelatedAttrs.join(\",\")\n            })\n        });\n    },\n\n    /** check for any changes since the last time we updated (or fetch all if ) */\n    refresh: function refresh(options) {\n        // console.log( this + '.refresh' );\n        options = options || {};\n        var self = this;\n\n        // note if there was no previous update time, all summary contents will be fetched\n        var lastUpdateTime = self.lastUpdateTime;\n        // if we don't flip this, then a fully-fetched list will not be re-checked via fetch\n        this.contents.allFetched = false;\n        var fetchFn = self.contents.currentPage !== 0 ? function () {\n            return self.contents.fetchPage(self.contents.currentPage);\n        } : function () {\n            return self.contents.fetchUpdated(lastUpdateTime);\n        };\n        // note: if there was no previous update time, all summary contents will be fetched\n        return fetchFn().done(function (response, status, xhr) {\n            var serverResponseDatetime;\n            try {\n                serverResponseDatetime = new Date(xhr.getResponseHeader(\"Date\"));\n            } catch (err) {}\n            self.lastUpdateTime = serverResponseDatetime || new Date();\n            self.checkForUpdates(options);\n        });\n    },\n\n    /** continuously fetch updated contents every UPDATE_DELAY ms if this history's datasets or jobs are unfinished */\n    checkForUpdates: function checkForUpdates(options) {\n        // console.log( this + '.checkForUpdates' );\n        options = options || {};\n        var delay = this.UPDATE_DELAY;\n        var self = this;\n        if (!self.id) {\n            return;\n        }\n\n        function _delayThenUpdate() {\n            // prevent buildup of updater timeouts by clearing previous if any, then set new and cache id\n            self.clearUpdateTimeout();\n            self.updateTimeoutId = setTimeout(function () {\n                self.refresh(options);\n            }, delay);\n        }\n\n        // if there are still datasets in the non-ready state, recurse into this function with the new time\n        var nonReadyContentCount = this.numOfUnfinishedShownContents();\n        // console.log( 'nonReadyContentCount:', nonReadyContentCount );\n        if (nonReadyContentCount > 0) {\n            _delayThenUpdate();\n        } else {\n            // no datasets are running, but currently runnning jobs may still produce new datasets\n            // see if the history has any running jobs and continue to update if so\n            // (also update the size for the user in either case)\n            self._fetchContentRelatedAttributes().done(function (historyData) {\n                // console.log( 'non_ready_jobs:', historyData.non_ready_jobs );\n                if (self.numOfUnfinishedJobs() > 0) {\n                    _delayThenUpdate();\n                } else {\n                    // otherwise, let listeners know that all updates have stopped\n                    self.trigger(\"ready\");\n                }\n            });\n        }\n    },\n\n    /** clear the timeout and the cached timeout id */\n    clearUpdateTimeout: function clearUpdateTimeout() {\n        if (this.updateTimeoutId) {\n            clearTimeout(this.updateTimeoutId);\n            this.updateTimeoutId = null;\n        }\n    },\n\n    // ........................................................................ ajax\n    /** override to use actual Dates objects for create/update times */\n    parse: function parse(response, options) {\n        var parsed = Backbone.Model.prototype.parse.call(this, response, options);\n        if (parsed.create_time) {\n            parsed.create_time = new Date(parsed.create_time);\n        }\n        if (parsed.update_time) {\n            parsed.update_time = new Date(parsed.update_time);\n        }\n        return parsed;\n    },\n\n    /** fetch this histories data (using options) then it's contents (using contentsOptions) */\n    fetchWithContents: function fetchWithContents(options, contentsOptions) {\n        options = options || {};\n        var self = this;\n\n        // console.log( this + '.fetchWithContents' );\n        // TODO: push down to a base class\n        options.view = \"dev-detailed\";\n\n        // fetch history then use history data to fetch (paginated) contents\n        return this.fetch(options).then(function getContents(history) {\n            self.contents.history = self;\n            self.contents.setHistoryId(history.id);\n            return self.fetchContents(contentsOptions);\n        });\n    },\n\n    /** fetch this histories contents, adjusting options based on the stored history preferences */\n    fetchContents: function fetchContents(options) {\n        options = options || {};\n        var self = this;\n\n        // we're updating, reset the update time\n        self.lastUpdateTime = new Date();\n        return self.contents.fetchCurrentPage(options);\n    },\n\n    /** save this history, _Mark_ing it as deleted (just a flag) */\n    _delete: function _delete(options) {\n        if (this.get(\"deleted\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: true }, options);\n    },\n    /** purge this history, _Mark_ing it as purged and removing all dataset data from the server */\n    purge: function purge(options) {\n        if (this.get(\"purged\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: true, purged: true }, options);\n    },\n    /** save this history, _Mark_ing it as undeleted */\n    undelete: function undelete(options) {\n        if (!this.get(\"deleted\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: false }, options);\n    },\n\n    /** Make a copy of this history on the server\n     *  @param {Boolean} current    if true, set the copy as the new current history (default: true)\n     *  @param {String} name        name of new history (default: none - server sets to: Copy of <current name>)\n     *  @fires copied               passed this history and the response JSON from the copy\n     *  @returns {xhr}\n     */\n    copy: function copy(current, name, allDatasets) {\n        current = current !== undefined ? current : true;\n        if (!this.id) {\n            throw new Error(\"You must set the history ID before copying it.\");\n        }\n\n        var postData = { history_id: this.id };\n        if (current) {\n            postData.current = true;\n        }\n        if (name) {\n            postData.name = name;\n        }\n        if (!allDatasets) {\n            postData.all_datasets = false;\n        }\n        postData.view = \"dev-detailed\";\n\n        var history = this;\n        var copy = jQuery.post(this.urlRoot, postData);\n        // if current - queue to setAsCurrent before firing 'copied'\n        if (current) {\n            return copy.then(function (response) {\n                var newHistory = new History(response);\n                return newHistory.setAsCurrent().done(function () {\n                    history.trigger(\"copied\", history, response);\n                });\n            });\n        }\n        return copy.done(function (response) {\n            history.trigger(\"copied\", history, response);\n        });\n    },\n\n    setAsCurrent: function setAsCurrent() {\n        var history = this;\n\n        var xhr = jQuery.getJSON(Galaxy.root + \"history/set_as_current?id=\" + this.id);\n\n        xhr.done(function () {\n            history.trigger(\"set-as-current\", history);\n        });\n        return xhr;\n    },\n\n    // ........................................................................ misc\n    toString: function toString() {\n        return \"History(\" + this.get(\"id\") + \",\" + this.get(\"name\") + \")\";\n    }\n}));\n\n//==============================================================================\nvar _collectionSuper = _controlledFetchCollection2.default.InfinitelyScrollingCollection;\n/** @class A collection of histories (per user)\n *      that maintains the current history as the first in the collection.\n *  New or copied histories become the current history.\n */\nvar HistoryCollection = _collectionSuper.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: \"history\",\n\n    model: History,\n    /** @type {String} initial order used by collection */\n    order: \"update_time\",\n    /** @type {Number} limit used for the first fetch (or a reset) */\n    limitOnFirstFetch: 10,\n    /** @type {Number} limit used for each subsequent fetch */\n    limitPerFetch: 10,\n\n    initialize: function initialize(models, options) {\n        options = options || {};\n        this.log(\"HistoryCollection.initialize\", models, options);\n        _collectionSuper.prototype.initialize.call(this, models, options);\n\n        /** @type {boolean} should deleted histories be included */\n        this.includeDeleted = options.includeDeleted || false;\n\n        /** @type {String} encoded id of the history that's current */\n        this.currentHistoryId = options.currentHistoryId;\n\n        this.setUpListeners();\n        // note: models are sent to reset *after* this fn ends; up to this point\n        // the collection *is empty*\n    },\n\n    urlRoot: Galaxy.root + \"api/histories\",\n    url: function url() {\n        return this.urlRoot;\n    },\n\n    /** set up reflexive event handlers */\n    setUpListeners: function setUpListeners() {\n        return this.on({\n            // when a history is deleted, remove it from the collection (if optionally set to do so)\n            \"change:deleted\": function changeDeleted(history) {\n                // TODO: this becomes complicated when more filters are used\n                this.debug(\"change:deleted\", this.includeDeleted, history.get(\"deleted\"));\n                if (!this.includeDeleted && history.get(\"deleted\")) {\n                    this.remove(history);\n                }\n            },\n            // listen for a history copy, setting it to current\n            copied: function copied(original, newData) {\n                this.setCurrent(new History(newData, []));\n            },\n            // when a history is made current, track the id in the collection\n            \"set-as-current\": function setAsCurrent(history) {\n                var oldCurrentId = this.currentHistoryId;\n                this.trigger(\"no-longer-current\", oldCurrentId);\n                this.currentHistoryId = history.id;\n            }\n        });\n    },\n\n    /** override to change view */\n    _buildFetchData: function _buildFetchData(options) {\n        return _.extend(_collectionSuper.prototype._buildFetchData.call(this, options), {\n            view: \"dev-detailed\"\n        });\n    },\n\n    /** override to filter out deleted and purged */\n    _buildFetchFilters: function _buildFetchFilters(options) {\n        var superFilters = _collectionSuper.prototype._buildFetchFilters.call(this, options) || {};\n        var filters = {};\n        if (!this.includeDeleted) {\n            filters.deleted = false;\n            filters.purged = false;\n        } else {\n            // force API to return both deleted and non\n            //TODO: when the API is updated, remove this\n            filters.deleted = null;\n        }\n        return _.defaults(superFilters, filters);\n    },\n\n    /** override to fetch current as well (as it may be outside the first 10, etc.) */\n    fetchFirst: function fetchFirst(options) {\n        var self = this;\n        // TODO: batch?\n        var xhr = $.when();\n        if (this.currentHistoryId) {\n            xhr = _collectionSuper.prototype.fetchFirst.call(self, {\n                silent: true,\n                limit: 1,\n                filters: {\n                    // without these a deleted current history will return [] here and block the other xhr\n                    purged: \"\",\n                    deleted: \"\",\n                    \"encoded_id-in\": this.currentHistoryId\n                }\n            });\n        }\n        return xhr.then(function () {\n            options = options || {};\n            options.offset = 0;\n            return self.fetchMore(options);\n        });\n    },\n\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: _.extend(_.clone(_collectionSuper.prototype.comparators), {\n        name: _baseMvc2.default.buildComparator(\"name\", {\n            ascending: true\n        }),\n        \"name-dsc\": _baseMvc2.default.buildComparator(\"name\", {\n            ascending: false\n        }),\n        size: _baseMvc2.default.buildComparator(\"size\", {\n            ascending: false\n        }),\n        \"size-asc\": _baseMvc2.default.buildComparator(\"size\", {\n            ascending: true\n        })\n    }),\n\n    /** override to always have the current history first */\n    sort: function sort(options) {\n        options = options || {};\n        var silent = options.silent;\n        var currentHistory = this.remove(this.get(this.currentHistoryId));\n        _collectionSuper.prototype.sort.call(this, _.defaults({ silent: true }, options));\n        this.unshift(currentHistory, { silent: true });\n        if (!silent) {\n            this.trigger(\"sort\", this, options);\n        }\n        return this;\n    },\n\n    /** create a new history and by default set it to be the current history */\n    create: function create(data, hdas, historyOptions, xhrOptions) {\n        //TODO: .create is actually a collection function that's overridden here\n        var collection = this;\n\n        var xhr = jQuery.getJSON(Galaxy.root + \"history/create_new_current\");\n        return xhr.done(function (newData) {\n            collection.setCurrent(new History(newData, [], historyOptions || {}));\n        });\n    },\n\n    /** set the current history to the given history, placing it first in the collection.\n     *  Pass standard bbone options for use in unshift.\n     *  @triggers new-current passed history and this collection\n     */\n    setCurrent: function setCurrent(history, options) {\n        options = options || {};\n        // new histories go in the front\n        this.unshift(history, options);\n        this.currentHistoryId = history.get(\"id\");\n        if (!options.silent) {\n            this.trigger(\"new-current\", history, this);\n        }\n        return this;\n    },\n\n    toString: function toString() {\n        return \"HistoryCollection(\" + this.length + \",current:\" + this.currentHistoryId + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    History: History,\n    HistoryCollection: HistoryCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, jQuery, Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _controlledFetchCollection = __webpack_require__(127);\n\nvar _controlledFetchCollection2 = _interopRequireDefault(_controlledFetchCollection);\n\nvar _hdaModel = __webpack_require__(128);\n\nvar _hdaModel2 = _interopRequireDefault(_hdaModel);\n\nvar _hdcaModel = __webpack_require__(79);\n\nvar _hdcaModel2 = _interopRequireDefault(_hdcaModel);\n\nvar _historyPreferences = __webpack_require__(84);\n\nvar _historyPreferences2 = _interopRequireDefault(_historyPreferences);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _ajaxQueue = __webpack_require__(246);\n\nvar _ajaxQueue2 = _interopRequireDefault(_ajaxQueue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _controlledFetchCollection2.default.PaginatedCollection;\n/** @class Backbone collection for history content.\n *      NOTE: history content seems like a dataset collection, but differs in that it is mixed:\n *          each element can be either an HDA (dataset) or a DatasetCollection and co-exist on\n *          the same level.\n *      Dataset collections on the other hand are not mixed and (so far) can only contain either\n *          HDAs or child dataset collections on one level.\n *      This is why this does not inherit from any of the DatasetCollections (currently).\n */\nvar HistoryContents = _super.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: \"history\",\n\n    // ........................................................................ set up\n    limitPerPage: 500,\n\n    /** @type {Integer} how many contents per call to fetch when using progressivelyFetchDetails */\n    limitPerProgressiveFetch: 500,\n\n    /** @type {String} order used here and when fetching from server */\n    order: \"hid\",\n\n    /** root api url */\n    urlRoot: Galaxy.root + \"api/histories\",\n\n    /** complete api url */\n    url: function url() {\n        return this.urlRoot + \"/\" + this.historyId + \"/contents\";\n    },\n\n    /** Set up */\n    initialize: function initialize(models, options) {\n        options = options || {};\n        _super.prototype.initialize.call(this, models, options);\n\n        this.history = options.history || null;\n        this.setHistoryId(options.historyId || null);\n        /** @type {Boolean} does this collection contain and fetch deleted elements */\n        this.includeDeleted = options.includeDeleted || this.includeDeleted;\n        /** @type {Boolean} does this collection contain and fetch non-visible elements */\n        this.includeHidden = options.includeHidden || this.includeHidden;\n\n        // backbonejs uses collection.model.prototype.idAttribute to determine if a model is *already* in a collection\n        //  and either merged or replaced. In this case, our 'model' is a function so we need to add idAttribute\n        //  manually here - if we don't, contents will not merge but be replaced/swapped.\n        this.model.prototype.idAttribute = \"type_id\";\n    },\n\n    // ........................................................................ composite collection\n    /** since history content is a mix, override model fn into a factory, creating based on history_content_type */\n    model: function model(attrs, options) {\n        if (attrs.history_content_type === \"dataset\") {\n            return new _hdaModel2.default.HistoryDatasetAssociation(attrs, options);\n        } else if (attrs.history_content_type === \"dataset_collection\") {\n            switch (attrs.collection_type) {\n                case \"list\":\n                    return new _hdcaModel2.default.HistoryListDatasetCollection(attrs, options);\n                case \"paired\":\n                    return new _hdcaModel2.default.HistoryPairDatasetCollection(attrs, options);\n                case \"list:paired\":\n                    return new _hdcaModel2.default.HistoryListPairedDatasetCollection(attrs, options);\n                case \"list:list\":\n                    return new _hdcaModel2.default.HistoryListOfListsDatasetCollection(attrs, options);\n            }\n            // This is a hack inside a hack:\n            // Raise a plain object with validationError to fake a model.validationError\n            // (since we don't have a model to use validate with)\n            // (the outer hack being the mixed content/model function in this collection)\n            var msg = \"Unknown collection_type: \" + attrs.collection_type;\n            console.warn(msg, attrs);\n            return { validationError: msg };\n        }\n        return {\n            validationError: \"Unknown history_content_type: \" + attrs.history_content_type\n        };\n    },\n\n    setHistoryId: function setHistoryId(newId) {\n        this.historyId = newId;\n        this._setUpWebStorage();\n    },\n\n    /** Set up client side storage. Currently PersistanStorage keyed under 'history:<id>' */\n    _setUpWebStorage: function _setUpWebStorage(initialSettings) {\n        // TODO: use initialSettings\n        if (!this.historyId) {\n            return;\n        }\n        this.storage = new _historyPreferences2.default.HistoryPrefs({\n            id: _historyPreferences2.default.HistoryPrefs.historyStorageKey(this.historyId)\n        });\n        this.trigger(\"new-storage\", this.storage, this);\n\n        this.on({\n            \"include-deleted\": function includeDeleted(newVal) {\n                this.storage.includeDeleted(newVal);\n            },\n            \"include-hidden\": function includeHidden(newVal) {\n                this.storage.includeHidden(newVal);\n            }\n        });\n\n        this.includeDeleted = this.storage.includeDeleted() || false;\n        this.includeHidden = this.storage.includeHidden() || false;\n        return this;\n    },\n\n    // ........................................................................ common queries\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: _.extend(_.clone(_super.prototype.comparators), {\n        name: _baseMvc2.default.buildComparator(\"name\", { ascending: true }),\n        \"name-dsc\": _baseMvc2.default.buildComparator(\"name\", {\n            ascending: false\n        }),\n        hid: _baseMvc2.default.buildComparator(\"hid\", { ascending: false }),\n        \"hid-asc\": _baseMvc2.default.buildComparator(\"hid\", { ascending: true })\n    }),\n\n    /** Get every model in this collection not in a 'ready' state (running). */\n    running: function running() {\n        return this.filter(function (c) {\n            return !c.inReadyState();\n        });\n    },\n\n    /** return contents that are not ready and not deleted/hidden */\n    runningAndActive: function runningAndActive() {\n        return this.filter(function (c) {\n            return !c.inReadyState() && c.get(\"visible\") &&\n            // TODO: deletedOrPurged?\n            !c.get(\"deleted\");\n        });\n    },\n\n    /** Get the model with the given hid\n     *  @param {Int} hid the hid to search for\n     *  @returns {HistoryDatasetAssociation} the model with the given hid or undefined if not found\n     */\n    getByHid: function getByHid(hid) {\n        // note: there *can* be more than one content with a given hid, this finds the first based on order\n        return this.findWhere({ hid: hid });\n    },\n\n    /** return true if all contents have details */\n    haveDetails: function haveDetails() {\n        return this.all(function (c) {\n            return c.hasDetails();\n        });\n    },\n\n    // ........................................................................ hidden / deleted\n    /** return a new contents collection of only hidden items */\n    hidden: function hidden() {\n        return this.filter(function (c) {\n            return c.hidden();\n        });\n    },\n\n    /** return a new contents collection of only hidden items */\n    deleted: function deleted() {\n        return this.filter(function (c) {\n            return c.get(\"deleted\");\n        });\n    },\n\n    /** return a new contents collection of only hidden items */\n    visibleAndUndeleted: function visibleAndUndeleted() {\n        return this.filter(function (c) {\n            return c.get(\"visible\") &&\n            // TODO: deletedOrPurged?\n            !c.get(\"deleted\");\n        });\n    },\n\n    /** create a setter in order to publish the change */\n    setIncludeDeleted: function setIncludeDeleted(setting, options) {\n        if (_.isBoolean(setting) && setting !== this.includeDeleted) {\n            this.includeDeleted = setting;\n            if (_.result(options, \"silent\")) {\n                return;\n            }\n            this.trigger(\"include-deleted\", setting, this);\n        }\n    },\n\n    /** create a setter in order to publish the change */\n    setIncludeHidden: function setIncludeHidden(setting, options) {\n        if (_.isBoolean(setting) && setting !== this.includeHidden) {\n            this.includeHidden = setting;\n            options = options || {};\n            if (_.result(options, \"silent\")) {\n                return;\n            }\n            this.trigger(\"include-hidden\", setting, this);\n        }\n    },\n\n    // ........................................................................ ajax\n    // ............ controlled fetch collection\n    /** override to get expanded ids from sessionStorage and pass to API as details */\n    fetch: function fetch(options) {\n        options = options || {};\n        if (this.historyId && !options.details) {\n            var prefs = _historyPreferences2.default.HistoryPrefs.get(this.historyId).toJSON();\n            if (!_.isEmpty(prefs.expandedIds)) {\n                options.details = _.values(prefs.expandedIds).join(\",\");\n            }\n        }\n        return _super.prototype.fetch.call(this, options);\n    },\n\n    // ............. ControlledFetch stuff\n    /** override to include the API versioning flag */\n    _buildFetchData: function _buildFetchData(options) {\n        return _.extend(_super.prototype._buildFetchData.call(this, options), {\n            v: \"dev\"\n        });\n    },\n\n    /** Extend to include details and version */\n    _fetchParams: _super.prototype._fetchParams.concat([\n    // TODO: remove (the need for) both\n    /** version */\n    \"v\",\n    /** dataset ids to get full details of */\n    \"details\"]),\n\n    /** override to add deleted/hidden filters */\n    _buildFetchFilters: function _buildFetchFilters(options) {\n        var superFilters = _super.prototype._buildFetchFilters.call(this, options) || {};\n        var filters = {};\n        if (!this.includeDeleted) {\n            filters.deleted = false;\n            filters.purged = false;\n        }\n        if (!this.includeHidden) {\n            filters.visible = true;\n        }\n        return _.defaults(superFilters, filters);\n    },\n\n    // ............ paginated collection\n    getTotalItemCount: function getTotalItemCount() {\n        return this.history.contentsShown();\n    },\n\n    // ............ history contents specific ajax\n    /** override to filter requested contents to those updated after the Date 'since' */\n    fetchUpdated: function fetchUpdated(since, options) {\n        if (since) {\n            options = options || { filters: {} };\n            options.remove = false;\n            options.filters = {\n                \"update_time-ge\": since.toISOString(),\n                // workflows will produce hidden datasets (non-output datasets) that still\n                // need to be updated in the collection or they'll update forever\n                // we can remove the default visible filter by using an 'empty' value\n                visible: \"\"\n            };\n        }\n        return this.fetch(options);\n    },\n\n    /** fetch all the deleted==true contents of this collection */\n    fetchDeleted: function fetchDeleted(options) {\n        options = options || {};\n        var self = this;\n        options.filters = _.extend(options.filters, {\n            // all deleted, purged or not\n            deleted: true,\n            purged: undefined\n        });\n        options.remove = false;\n\n        self.trigger(\"fetching-deleted\", self);\n        return self.fetch(options).always(function () {\n            self.trigger(\"fetching-deleted-done\", self);\n        });\n    },\n\n    /** fetch all the visible==false contents of this collection */\n    fetchHidden: function fetchHidden(options) {\n        options = options || {};\n        var self = this;\n        options.filters = _.extend(options.filters, {\n            visible: false\n        });\n        options.remove = false;\n\n        self.trigger(\"fetching-hidden\", self);\n        return self.fetch(options).always(function () {\n            self.trigger(\"fetching-hidden-done\", self);\n        });\n    },\n\n    /** fetch detailed model data for all contents in this collection */\n    fetchAllDetails: function fetchAllDetails(options) {\n        options = options || {};\n        var detailsFlag = { details: \"all\" };\n        options.data = _.extend(options.data || {}, detailsFlag);\n        return this.fetch(options);\n    },\n\n    /** specialty fetch method for retrieving the element_counts of all hdcas in the history */\n    fetchCollectionCounts: function fetchCollectionCounts(options) {\n        options = options || {};\n        options.keys = [\"type_id\", \"element_count\"].join(\",\");\n        options.filters = _.extend(options.filters || {}, {\n            history_content_type: \"dataset_collection\"\n        });\n        options.remove = false;\n        return this.fetch(options);\n    },\n\n    // ............. quasi-batch ops\n    // TODO: to batch\n    /** helper that fetches using filterParams then calls save on each fetched using updateWhat as the save params */\n    _filterAndUpdate: function _filterAndUpdate(filterParams, updateWhat) {\n        var self = this;\n        var idAttribute = self.model.prototype.idAttribute;\n        var updateArgs = [updateWhat];\n\n        return self.fetch({ filters: filterParams, remove: false }).then(function (fetched) {\n            // convert filtered json array to model array\n            fetched = fetched.reduce(function (modelArray, currJson, i) {\n                var model = self.get(currJson[idAttribute]);\n                return model ? modelArray.concat(model) : modelArray;\n            }, []);\n            return self.ajaxQueue(\"save\", updateArgs, fetched);\n        });\n    },\n\n    /** using a queue, perform ajaxFn on each of the models in this collection */\n    ajaxQueue: function ajaxQueue(ajaxFn, args, collection) {\n        collection = collection || this.models;\n        return new _ajaxQueue2.default.AjaxQueue(collection.slice().reverse().map(function (content, i) {\n            var fn = _.isString(ajaxFn) ? content[ajaxFn] : ajaxFn;\n            return function () {\n                return fn.apply(content, args);\n            };\n        })).deferred;\n    },\n\n    /** fetch contents' details in batches of limitPerCall - note: only get searchable details here */\n    progressivelyFetchDetails: function progressivelyFetchDetails(options) {\n        options = options || {};\n        var deferred = jQuery.Deferred();\n        var self = this;\n        var limit = options.limitPerCall || self.limitPerProgressiveFetch;\n        // TODO: only fetch tags and annotations if specifically requested\n        var searchAttributes = _hdaModel2.default.HistoryDatasetAssociation.prototype.searchAttributes;\n        var detailKeys = searchAttributes.join(\",\");\n\n        function _recursivelyFetch(offset) {\n            offset = offset || 0;\n            var _options = _.extend(_.clone(options), {\n                view: \"summary\",\n                keys: detailKeys,\n                limit: limit,\n                offset: offset,\n                reset: offset === 0,\n                remove: false\n            });\n\n            _.defer(function () {\n                self.fetch.call(self, _options).fail(deferred.reject).done(function (response) {\n                    deferred.notify(response, limit, offset);\n                    if (response.length !== limit) {\n                        self.allFetched = true;\n                        deferred.resolve(response, limit, offset);\n                    } else {\n                        _recursivelyFetch(offset + limit);\n                    }\n                });\n            });\n        }\n        _recursivelyFetch();\n        return deferred;\n    },\n\n    /** does some bit of JSON represent something that can be copied into this contents collection */\n    isCopyable: function isCopyable(contentsJSON) {\n        var copyableModelClasses = [\"HistoryDatasetAssociation\", \"HistoryDatasetCollectionAssociation\"];\n        return _.isObject(contentsJSON) && contentsJSON.id && _.contains(copyableModelClasses, contentsJSON.model_class);\n    },\n\n    /** copy an existing, accessible hda into this collection */\n    copy: function copy(json) {\n        // TODO: somehow showhorn all this into 'save'\n        var id;\n\n        var type;\n        var contentType;\n        if (_.isString(json)) {\n            id = json;\n            contentType = \"hda\";\n            type = \"dataset\";\n        } else {\n            id = json.id;\n            contentType = {\n                HistoryDatasetAssociation: \"hda\",\n                LibraryDatasetDatasetAssociation: \"ldda\",\n                HistoryDatasetCollectionAssociation: \"hdca\"\n            }[json.model_class] || \"hda\";\n            type = contentType === \"hdca\" ? \"dataset_collection\" : \"dataset\";\n        }\n        var collection = this;\n\n        var xhr = jQuery.ajax(this.url(), {\n            method: \"POST\",\n            contentType: \"application/json\",\n            data: JSON.stringify({\n                content: id,\n                source: contentType,\n                type: type\n            })\n        }).done(function (response) {\n            collection.add([response], { parse: true });\n        }).fail(function (error, status, message) {\n            collection.trigger(\"error\", collection, xhr, {}, \"Error copying contents\", {\n                type: type,\n                id: id,\n                source: contentType\n            });\n        });\n\n        return xhr;\n    },\n\n    /** create a new HDCA in this collection */\n    createHDCA: function createHDCA(elementIdentifiers, collectionType, name, hideSourceItems, options) {\n        // normally collection.create returns the new model, but we need the promise from the ajax, so we fake create\n        //precondition: elementIdentifiers is an array of plain js objects\n        //  in the proper form to create the collectionType\n        var hdca = this.model({\n            history_content_type: \"dataset_collection\",\n            collection_type: collectionType,\n            history_id: this.historyId,\n            name: name,\n            hide_source_items: hideSourceItems || false,\n            // should probably be able to just send in a bunch of json here and restruct per class\n            // note: element_identifiers is now (incorrectly) an attribute\n            element_identifiers: elementIdentifiers\n            // do not create the model on the client until the ajax returns\n        });\n        return hdca.save(options);\n    },\n\n    // ........................................................................ searching\n    /** return true if all contents have the searchable attributes */\n    haveSearchDetails: function haveSearchDetails() {\n        return this.allFetched && this.all(function (content // null (which is a valid returned annotation value)\n        ) {\n            return (\n                // will return false when using content.has( 'annotation' )\n                //TODO: a bit hacky - formalize\n                _.has(content.attributes, \"annotation\")\n            );\n        });\n    },\n\n    /** return a new collection of contents whose attributes contain the substring matchesWhat */\n    matches: function matches(matchesWhat) {\n        return this.filter(function (content) {\n            return content.matches(matchesWhat);\n        });\n    },\n\n    // ........................................................................ misc\n    /** In this override, copy the historyId to the clone */\n    clone: function clone() {\n        var clone = Backbone.Collection.prototype.clone.call(this);\n        clone.historyId = this.historyId;\n        return clone;\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"HistoryContents(\", [this.historyId, this.length].join(), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexports.default = {\n    HistoryContents: HistoryContents\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2)))\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"history\";\n\n// ============================================================================\n/** session storage for individual history preferences */\nvar HistoryPrefs = _baseMvc2.default.SessionStorageModel.extend(\n/** @lends HistoryPrefs.prototype */{\n    //TODO:?? move to user prefs?\n    defaults: {\n        //TODO:?? expandedIds to array?\n        expandedIds: {},\n        show_deleted: false,\n        show_hidden: false\n    },\n\n    /** add an hda id to the hash of expanded hdas */\n    addExpanded: function addExpanded(model) {\n        //TODO: use type_id and not model\n        var current = this.get(\"expandedIds\");\n        current[model.id] = model.get(\"id\");\n        this.save(\"expandedIds\", current);\n    },\n\n    /** remove an hda id from the hash of expanded hdas */\n    removeExpanded: function removeExpanded(model) {\n        var current = this.get(\"expandedIds\");\n        delete current[model.id];\n        this.save(\"expandedIds\", current);\n    },\n\n    isExpanded: function isExpanded(contentId) {\n        return _.result(this.get(\"expandedIds\"), contentId, false);\n    },\n\n    allExpanded: function allExpanded() {\n        return _.values(this.get(\"expandedIds\"));\n    },\n\n    clearExpanded: function clearExpanded() {\n        this.set(\"expandedIds\", {});\n    },\n\n    includeDeleted: function includeDeleted(val) {\n        // moving the invocation here so other components don't need to know the key\n        // TODO: change this key later\n        if (!_.isUndefined(val)) {\n            this.set(\"show_deleted\", val);\n        }\n        return this.get(\"show_deleted\");\n    },\n\n    includeHidden: function includeHidden(val) {\n        // TODO: change this key later\n        if (!_.isUndefined(val)) {\n            this.set(\"show_hidden\", val);\n        }\n        return this.get(\"show_hidden\");\n    },\n\n    toString: function toString() {\n        return \"HistoryPrefs(\" + this.id + \")\";\n    }\n}, {\n    // ........................................................................ class vars\n    // class lvl for access w/o instantiation\n    storageKeyPrefix: \"history:\",\n\n    /** key string to store each histories settings under */\n    historyStorageKey: function historyStorageKey(historyId) {\n        if (!historyId) {\n            throw new Error(\"HistoryPrefs.historyStorageKey needs valid id: \" + historyId);\n        }\n        // single point of change\n        return HistoryPrefs.storageKeyPrefix + historyId;\n    },\n\n    /** return the existing storage for the history with the given id (or create one if it doesn't exist) */\n    get: function get(historyId) {\n        return new HistoryPrefs({\n            id: HistoryPrefs.historyStorageKey(historyId)\n        });\n    },\n\n    /** clear all history related items in sessionStorage */\n    clearAll: function clearAll(historyId) {\n        for (var key in sessionStorage) {\n            if (key.indexOf(HistoryPrefs.storageKeyPrefix) === 0) {\n                sessionStorage.removeItem(key);\n            }\n        }\n    }\n});\n\n//==============================================================================\nexports.default = {\n    HistoryPrefs: HistoryPrefs\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"list\";\n//==============================================================================\n/** A view which, when first rendered, shows only summary data/attributes, but\n *      can be expanded to show further details (and optionally fetch those\n *      details from the server).\n */\nvar ExpandableView = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: Although the reasoning behind them is different, this shares a lot with HiddenUntilActivated above: combine them\n    //PRECONDITION: model must have method hasDetails\n    //PRECONDITION: subclasses must have templates.el and templates.details\n\n    initialize: function initialize(attributes) {\n        /** are the details of this view expanded/shown or not? */\n        this.expanded = attributes.expanded || false;\n        this.log(\"\\t expanded:\", this.expanded);\n        this.fxSpeed = attributes.fxSpeed !== undefined ? attributes.fxSpeed : this.fxSpeed;\n    },\n\n    // ........................................................................ render main\n    /** jq fx speed */\n    fxSpeed: \"fast\",\n\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render: function render(speed) {\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors($newRender);\n        this._queueNewRender($newRender, speed);\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     *      If the view is already expanded, build the details as well.\n     */\n    _buildNewRender: function _buildNewRender() {\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = $(this.templates.el(this.model.toJSON(), this));\n        if (this.expanded) {\n            this.$details($newRender).replaceWith(this._renderDetails().show());\n        }\n        return $newRender;\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender: function _queueNewRender($newRender, speed) {\n        speed = speed === undefined ? this.fxSpeed : speed;\n        var view = this;\n\n        if (speed === 0) {\n            view._swapNewRender($newRender);\n            view.trigger(\"rendered\", view);\n        } else {\n            $(view).queue(\"fx\", [function (next) {\n                view.$el.fadeOut(speed, next);\n            }, function (next) {\n                view._swapNewRender($newRender);\n                next();\n            }, function (next) {\n                view.$el.fadeIn(speed, next);\n            }, function (next) {\n                view.trigger(\"rendered\", view);\n                next();\n            }]);\n        }\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender: function _swapNewRender($newRender) {\n        return this.$el.empty().attr(\"class\", _.isFunction(this.className) ? this.className() : this.className).append($newRender.children());\n    },\n\n    /** set up js behaviors, event handlers for elements within the given container\n     *  @param {jQuery} $container jq object that contains the elements to process (defaults to this.$el)\n     */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        $where = $where || this.$el;\n        // set up canned behavior on children (bootstrap, popupmenus, editable_text, etc.)\n        //make_popup_menus( $where );\n        $where.find(\"[title]\").tooltip({ placement: \"bottom\" });\n    },\n\n    // ......................................................................... details\n    /** shortcut to details DOM (as jQ) */\n    $details: function $details($where) {\n        $where = $where || this.$el;\n        return $where.find(\"> .details\");\n    },\n\n    /** build the DOM for the details and set up behaviors on it */\n    _renderDetails: function _renderDetails() {\n        var $newDetails = $(this.templates.details(this.model.toJSON(), this));\n        this._setUpBehaviors($newDetails);\n        return $newDetails;\n    },\n\n    // ......................................................................... expansion/details\n    /** Show or hide the details\n     *  @param {Boolean} expand if true, expand; if false, collapse\n     */\n    toggleExpanded: function toggleExpanded(expand) {\n        expand = expand === undefined ? !this.expanded : expand;\n        if (expand) {\n            this.expand();\n        } else {\n            this.collapse();\n        }\n        return this;\n    },\n\n    /** Render and show the full, detailed body of this view including extra data and controls.\n     *      note: if the model does not have detailed data, fetch that data before showing the body\n     *  @fires expanded when a body has been expanded\n     */\n    expand: function expand() {\n        var view = this;\n        return view._fetchModelDetails().always(function () {\n            view._expand();\n        });\n    },\n\n    /** Check for model details and, if none, fetch them.\n     *  @returns {jQuery.promise} the model.fetch.xhr if details are being fetched, an empty promise if not\n     */\n    _fetchModelDetails: function _fetchModelDetails() {\n        if (!this.model.hasDetails()) {\n            return this.model.fetch();\n        }\n        return jQuery.when();\n    },\n\n    /** Inner fn called when expand (public) has fetched the details */\n    _expand: function _expand() {\n        var view = this;\n        var $newDetails = view._renderDetails();\n        view.$details().replaceWith($newDetails);\n        // needs to be set after the above or the slide will not show\n        view.expanded = true;\n        view.$details().slideDown(view.fxSpeed, function () {\n            view.trigger(\"expanded\", view);\n        });\n    },\n\n    /** Hide the body/details of an HDA.\n     *  @fires collapsed when a body has been collapsed\n     */\n    collapse: function collapse() {\n        this.debug(this + \"(ExpandableView).collapse\");\n        var view = this;\n        view.expanded = false;\n        this.$details().slideUp(view.fxSpeed, function () {\n            view.trigger(\"collapsed\", view);\n        });\n    }\n});\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *      Inherits from Expandable, Selectable, Draggable.\n *  The DOM contains warnings, a title bar, and a series of primary action controls.\n *      Primary actions are meant to be easily accessible item functions (such as delete)\n *      that are rendered in the title bar.\n *\n *  Details are rendered when the user clicks the title bar or presses enter/space when\n *      the title bar is in focus.\n *\n *  Designed as a base class for history panel contents - but usable elsewhere (I hope).\n */\nvar ListItemView = ExpandableView.extend(_baseMvc2.default.mixin(_baseMvc2.default.SelectableViewMixin, _baseMvc2.default.DraggableViewMixin, {\n    tagName: \"div\",\n    className: \"list-item\",\n\n    /** Set up the base class and all mixins */\n    initialize: function initialize(attributes) {\n        ExpandableView.prototype.initialize.call(this, attributes);\n        _baseMvc2.default.SelectableViewMixin.initialize.call(this, attributes);\n        _baseMvc2.default.DraggableViewMixin.initialize.call(this, attributes);\n        this._setUpListeners();\n    },\n\n    /** event listeners */\n    _setUpListeners: function _setUpListeners() {\n        // hide the primary actions in the title bar when selectable and narrow\n        this.on(\"selectable\", function (isSelectable) {\n            if (isSelectable) {\n                this.$(\".primary-actions\").hide();\n            } else {\n                this.$(\".primary-actions\").show();\n            }\n        }, this);\n        return this;\n    },\n\n    // ........................................................................ rendering\n    /** In this override, call methods to build warnings, titlebar and primary actions */\n    _buildNewRender: function _buildNewRender() {\n        var $newRender = ExpandableView.prototype._buildNewRender.call(this);\n        $newRender.children(\".warnings\").replaceWith(this._renderWarnings());\n        $newRender.children(\".title-bar\").replaceWith(this._renderTitleBar());\n        $newRender.children(\".primary-actions\").append(this._renderPrimaryActions());\n        $newRender.find(\"> .title-bar .subtitle\").replaceWith(this._renderSubtitle());\n        return $newRender;\n    },\n\n    /** In this override, render the selector controls and set up dragging before the swap */\n    _swapNewRender: function _swapNewRender($newRender) {\n        ExpandableView.prototype._swapNewRender.call(this, $newRender);\n        if (this.selectable) {\n            this.showSelector(0);\n        }\n        if (this.draggable) {\n            this.draggableOn();\n        }\n        return this.$el;\n    },\n\n    /** Render any warnings the item may need to show (e.g. \"I'm deleted\") */\n    _renderWarnings: function _renderWarnings() {\n        var view = this;\n        var $warnings = $('<div class=\"warnings\"></div>');\n        var json = view.model.toJSON();\n        //TODO:! unordered (map)\n        _.each(view.templates.warnings, function (templateFn) {\n            $warnings.append($(templateFn(json, view)));\n        });\n        return $warnings;\n    },\n\n    /** Render the title bar (the main/exposed SUMMARY dom element) */\n    _renderTitleBar: function _renderTitleBar() {\n        return $(this.templates.titleBar(this.model.toJSON(), this));\n    },\n\n    /** Return an array of jQ objects containing common/easily-accessible item controls */\n    _renderPrimaryActions: function _renderPrimaryActions() {\n        // override this\n        return [];\n    },\n\n    /** Render the title bar (the main/exposed SUMMARY dom element) */\n    _renderSubtitle: function _renderSubtitle() {\n        return $(this.templates.subtitle(this.model.toJSON(), this));\n    },\n\n    // ......................................................................... events\n    /** event map */\n    events: {\n        // expand the body when the title is clicked or when in focus and space or enter is pressed\n        \"click .title-bar\": \"_clickTitleBar\",\n        \"keydown .title-bar\": \"_keyDownTitleBar\",\n        \"click .selector\": \"toggleSelect\"\n    },\n\n    /** expand when the title bar is clicked */\n    _clickTitleBar: function _clickTitleBar(event) {\n        event.stopPropagation();\n        if (event.altKey) {\n            this.toggleSelect(event);\n            if (!this.selectable) {\n                this.showSelector();\n            }\n        } else {\n            this.toggleExpanded();\n        }\n    },\n\n    /** expand when the title bar is in focus and enter or space is pressed */\n    _keyDownTitleBar: function _keyDownTitleBar(event) {\n        // bail (with propagation) if keydown and not space or enter\n        var KEYCODE_SPACE = 32;\n\n        var KEYCODE_RETURN = 13;\n        if (event && event.type === \"keydown\" && (event.keyCode === KEYCODE_SPACE || event.keyCode === KEYCODE_RETURN)) {\n            this.toggleExpanded();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"ListItemView(\" + modelString + \")\";\n    }\n}));\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListItemView.prototype.templates = function () {\n    var elTemplato = _baseMvc2.default.wrapTemplate(['<div class=\"list-element\">',\n    // errors, messages, etc.\n    '<div class=\"warnings\"></div>',\n\n    // multi-select checkbox\n    '<div class=\"selector\">', '<span class=\"fa fa-2x fa-square-o\"></span>', \"</div>\",\n    // space for title bar buttons - gen. floated to the right\n    '<div class=\"primary-actions\"></div>', '<div class=\"title-bar\"></div>',\n\n    // expandable area for more details\n    '<div class=\"details\"></div>', \"</div>\"]);\n\n    var warnings = {};\n\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate([\n    // adding a tabindex here allows focusing the title bar and the use of keydown to expand the dataset display\n    '<div class=\"title-bar clear\" tabindex=\"0\">',\n    //TODO: prob. belongs in dataset-list-item\n    '<span class=\"state-icon\"></span>', '<div class=\"title\">', '<span class=\"name\"><%- element.name %></span>', \"</div>\", '<div class=\"subtitle\"></div>', \"</div>\"], \"element\");\n\n    var subtitleTemplate = _baseMvc2.default.wrapTemplate([\n    // override this\n    '<div class=\"subtitle\"></div>']);\n\n    var detailsTemplate = _baseMvc2.default.wrapTemplate([\n    // override this\n    '<div class=\"details\"></div>']);\n\n    return {\n        el: elTemplato,\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate,\n        details: detailsTemplate\n    };\n}();\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *  *AND* can display some sub-list of it's own when expanded (e.g. dataset collections).\n *  This list will 'foldout' when the item is expanded depending on this.foldoutStyle:\n *      If 'foldout': will expand vertically to show the nested list\n *      If 'drilldown': will overlay the parent list\n *\n *  Inherits from ListItemView.\n *\n *  _renderDetails does the work of creating this.details: a sub-view that shows the nested list\n */\nvar FoldoutListItemView = ListItemView.extend({\n    /** If 'foldout': show the sub-panel inside the expanded item\n     *  If 'drilldown': only fire events and handle by pub-sub\n     *      (allow the panel containing this item to attach it, hide itself, etc.)\n     */\n    foldoutStyle: \"foldout\",\n    /** Panel view class to instantiate for the sub-panel */\n    foldoutPanelClass: null,\n\n    /** override to:\n     *      add attributes foldoutStyle and foldoutPanelClass for config poly\n     *      disrespect attributes.expanded if drilldown\n     */\n    initialize: function initialize(attributes) {\n        if (this.foldoutStyle === \"drilldown\") {\n            this.expanded = false;\n        }\n        this.foldoutStyle = attributes.foldoutStyle || this.foldoutStyle;\n        this.foldoutPanelClass = attributes.foldoutPanelClass || this.foldoutPanelClass;\n\n        ListItemView.prototype.initialize.call(this, attributes);\n        this.foldout = this._createFoldoutPanel();\n    },\n\n    /** in this override, attach the foldout panel when rendering details */\n    _renderDetails: function _renderDetails() {\n        if (this.foldoutStyle === \"drilldown\") {\n            return $();\n        }\n        var $newDetails = ListItemView.prototype._renderDetails.call(this);\n        return this._attachFoldout(this.foldout, $newDetails);\n    },\n\n    /** In this override, handle collection expansion. */\n    _createFoldoutPanel: function _createFoldoutPanel() {\n        var model = this.model;\n        var FoldoutClass = this._getFoldoutPanelClass(model);\n        var options = this._getFoldoutPanelOptions(model);\n\n        var foldout = new FoldoutClass(_.extend(options, {\n            model: model\n        }));\n\n        return foldout;\n    },\n\n    /** Stub to return proper foldout panel class */\n    _getFoldoutPanelClass: function _getFoldoutPanelClass() {\n        // override\n        return this.foldoutPanelClass;\n    },\n\n    /** Stub to return proper foldout panel options */\n    _getFoldoutPanelOptions: function _getFoldoutPanelOptions() {\n        return {\n            // propagate foldout style down\n            foldoutStyle: this.foldoutStyle,\n            fxSpeed: this.fxSpeed\n        };\n    },\n\n    /** Render the foldout panel inside the view, hiding controls */\n    _attachFoldout: function _attachFoldout(foldout, $whereTo) {\n        $whereTo = $whereTo || this.$(\"> .details\");\n        this.foldout = foldout.render(0);\n        foldout.$(\"> .controls\").hide();\n        return $whereTo.append(foldout.$el);\n    },\n\n    /** In this override, branch on foldoutStyle to show expanded */\n    expand: function expand() {\n        var view = this;\n        return view._fetchModelDetails().always(function () {\n            if (view.foldoutStyle === \"foldout\") {\n                view._expand();\n            } else if (view.foldoutStyle === \"drilldown\") {\n                view._expandByDrilldown();\n            }\n        });\n    },\n\n    /** For drilldown, set up close handler and fire expanded:drilldown\n     *      containing views can listen to this and handle other things\n     *      (like hiding themselves) by listening for expanded/collapsed:drilldown\n     */\n    _expandByDrilldown: function _expandByDrilldown() {\n        var view = this;\n        // attachment and rendering done by listener\n        view.listenTo(view.foldout, \"close\", function () {\n            view.trigger(\"collapsed:drilldown\", view, view.foldout);\n        });\n        view.trigger(\"expanded:drilldown\", view, view.foldout);\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nFoldoutListItemView.prototype.templates = function () {\n    var detailsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"details\">',\n    // override with more info (that goes above the panel)\n    \"</div>\"], \"collection\");\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        details: detailsTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    ExpandableView: ExpandableView,\n    ListItemView: ListItemView,\n    FoldoutListItemView: FoldoutListItemView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, jQuery, Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listItem = __webpack_require__(85);\n\nvar _listItem2 = _interopRequireDefault(_listItem);\n\nvar _states = __webpack_require__(46);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _faIconButton = __webpack_require__(49);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"dataset\";\n/*==============================================================================\nTODO:\n    straighten out state rendering and templates used\n    inaccessible/STATES.NOT_VIEWABLE is a special case\n    simplify button rendering\n\n==============================================================================*/\nvar _super = _listItem2.default.ListItemView;\n/** @class Read only list view for either LDDAs, HDAs, or HDADCEs.\n *      Roughly, any DatasetInstance (and not a raw Dataset).\n */\nvar DatasetListItemView = _super.extend(\n/** @lends DatasetListItemView.prototype */{\n    _logNamespace: logNamespace,\n\n    className: _super.prototype.className + \" dataset\",\n    //TODO:?? doesn't exactly match an hda's type_id\n    id: function id() {\n        return [\"dataset\", this.model.get(\"id\")].join(\"-\");\n    },\n\n    /** Set up: instance vars, options, and event handlers */\n    initialize: function initialize(attributes) {\n        if (attributes.logger) {\n            this.logger = this.model.logger = attributes.logger;\n        }\n        this.log(this + \".initialize:\", attributes);\n        _super.prototype.initialize.call(this, attributes);\n\n        /** where should pages from links be displayed? (default to new tab/window) */\n        this.linkTarget = attributes.linkTarget || \"_blank\";\n    },\n\n    /** event listeners */\n    _setUpListeners: function _setUpListeners() {\n        _super.prototype._setUpListeners.call(this);\n        var self = this;\n\n        // re-rendering on any model changes\n        return self.listenTo(self.model, {\n            change: function change(model) {\n                // if the model moved into the ready state and is expanded without details, fetch those details now\n                if (self.model.changedAttributes().state && self.model.inReadyState() && self.expanded && !self.model.hasDetails()) {\n                    // normally, will render automatically (due to fetch -> change),\n                    // but! setting_metadata sometimes doesn't cause any other changes besides state\n                    // so, not rendering causes it to seem frozen in setting_metadata state\n                    self.model.fetch({ silent: true }).done(function () {\n                        self.render();\n                    });\n                } else {\n                    if (_.has(model.changed, \"tags\") && _.keys(model.changed).length === 1) {\n                        // If only the tags have changed, rerender specifically\n                        // the titlebar region.  Otherwise default to the full\n                        // render.\n                        self.$(\".nametags\").html(self._renderNametags());\n                    } else {\n                        self.render();\n                    }\n                }\n            }\n        });\n    },\n\n    // ......................................................................... expandable\n    /** In this override, only get details if in the ready state, get rerunnable if in other states.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n    _fetchModelDetails: function _fetchModelDetails() {\n        var view = this;\n        if (view.model.inReadyState() && !view.model.hasDetails()) {\n            return view.model.fetch({ silent: true });\n        }\n        return jQuery.when();\n    },\n\n    // ......................................................................... removal\n    /** Remove this view's html from the DOM and remove all event listeners.\n     *  @param {Number or String} speed jq effect speed\n     *  @param {Function} callback      an optional function called when removal is done (scoped to this view)\n     */\n    remove: function remove(speed, callback) {\n        var view = this;\n        speed = speed || this.fxSpeed;\n        this.$el.fadeOut(speed, function () {\n            Backbone.View.prototype.remove.call(view);\n            if (callback) {\n                callback.call(view);\n            }\n        });\n    },\n\n    // ......................................................................... rendering\n    /* TODO:\n    dataset states are the issue primarily making dataset rendering complex\n        each state should have it's own way of displaying/set of details\n        often with different actions that can be applied\n    throw in deleted/purged/visible and things get complicated easily\n    I've considered (a couple of times) - creating a view for each state\n        - but recreating the view during an update...seems wrong\n    */\n    /** In this override, add the dataset state as a class for use with state-based CSS */\n    _swapNewRender: function _swapNewRender($newRender) {\n        _super.prototype._swapNewRender.call(this, $newRender);\n        if (this.model.has(\"state\")) {\n            this.$el.addClass(\"state-\" + this.model.get(\"state\"));\n        }\n        return this.$el;\n    },\n\n    // ................................................................................ titlebar\n    /** In this override, add the dataset display button. */\n    _renderPrimaryActions: function _renderPrimaryActions() {\n        // render just the display for read-only\n        return [this._renderDisplayButton()];\n    },\n\n    /** Render icon-button to display dataset data */\n    _renderDisplayButton: function _renderDisplayButton() {\n        // don't show display if not viewable or not accessible\n        var state = this.model.get(\"state\");\n        if (state === _states2.default.NOT_VIEWABLE || state === _states2.default.DISCARDED || !this.model.get(\"accessible\")) {\n            return null;\n        }\n\n        var displayBtnData = {\n            target: this.linkTarget,\n            classes: \"display-btn\"\n        };\n\n        // show a disabled display if the data's been purged\n        if (this.model.get(\"purged\")) {\n            displayBtnData.disabled = true;\n            displayBtnData.title = (0, _localization2.default)(\"Cannot display datasets removed from disk\");\n\n            // disable if still uploading\n        } else if (state === _states2.default.UPLOAD) {\n            displayBtnData.disabled = true;\n            displayBtnData.title = (0, _localization2.default)(\"This dataset must finish uploading before it can be viewed\");\n\n            // disable if still new\n        } else if (state === _states2.default.NEW) {\n            displayBtnData.disabled = true;\n            displayBtnData.title = (0, _localization2.default)(\"This dataset is not yet viewable\");\n        } else {\n            displayBtnData.title = (0, _localization2.default)(\"View data\");\n\n            // default link for dataset\n            displayBtnData.href = this.model.urls.display;\n\n            // add frame manager option onclick event\n            var self = this;\n            displayBtnData.onclick = function (ev) {\n                if (Galaxy.frame && Galaxy.frame.active) {\n                    // Add dataset to frames.\n                    Galaxy.frame.addDataset(self.model.get(\"id\"));\n                    ev.preventDefault();\n                }\n            };\n        }\n        displayBtnData.faIcon = \"fa-eye\";\n        return (0, _faIconButton2.default)(displayBtnData);\n    },\n\n    // ......................................................................... rendering details\n    /** Render the enclosing div of the hda body and, if expanded, the html in the body\n     *  @returns {jQuery} rendered DOM\n     */\n    _renderDetails: function _renderDetails() {\n        //TODO: generalize to be allow different details for each state\n\n        // no access - render nothing but a message\n        if (this.model.get(\"state\") === _states2.default.NOT_VIEWABLE) {\n            return $(this.templates.noAccess(this.model.toJSON(), this));\n        }\n\n        var $details = _super.prototype._renderDetails.call(this);\n        $details.find(\".actions .left\").empty().append(this._renderSecondaryActions());\n        $details.find(\".summary\").html(this._renderSummary()).prepend(this._renderDetailMessages());\n        $details.find(\".display-applications\").html(this._renderDisplayApplications());\n\n        this._setUpBehaviors($details);\n        return $details;\n    },\n\n    /** Defer to the appropo summary rendering fn based on state */\n    _renderSummary: function _renderSummary() {\n        var json = this.model.toJSON();\n        var summaryRenderFn = this.templates.summaries[json.state];\n        summaryRenderFn = summaryRenderFn || this.templates.summaries.unknown;\n        return summaryRenderFn(json, this);\n    },\n\n    /** Render messages to be displayed only when the details are shown */\n    _renderDetailMessages: function _renderDetailMessages() {\n        var view = this;\n        var $warnings = $('<div class=\"detail-messages\"></div>');\n        var json = view.model.toJSON();\n        //TODO:! unordered (map)\n        _.each(view.templates.detailMessages, function (templateFn) {\n            $warnings.append($(templateFn(json, view)));\n        });\n        return $warnings;\n    },\n\n    /** Render the external display application links */\n    _renderDisplayApplications: function _renderDisplayApplications() {\n        if (this.model.isDeletedOrPurged()) {\n            return \"\";\n        }\n        // render both old and new display apps using the same template\n        return [this.templates.displayApplications(this.model.get(\"display_apps\"), this), this.templates.displayApplications(this.model.get(\"display_types\"), this)].join(\"\");\n    },\n\n    // ......................................................................... secondary/details actions\n    /** A series of links/buttons for less commonly used actions: re-run, info, etc. */\n    _renderSecondaryActions: function _renderSecondaryActions() {\n        this.debug(\"_renderSecondaryActions\");\n        switch (this.model.get(\"state\")) {\n            case _states2.default.NOT_VIEWABLE:\n                return [];\n            case _states2.default.OK:\n            case _states2.default.FAILED_METADATA:\n            case _states2.default.ERROR:\n                return [this._renderDownloadButton(), this._renderShowParamsButton()];\n        }\n        return [this._renderShowParamsButton()];\n    },\n\n    /** Render icon-button to show the input and output (stdout/err) for the job that created this.\n     *  @returns {jQuery} rendered DOM\n     */\n    _renderShowParamsButton: function _renderShowParamsButton() {\n        // gen. safe to show in all cases\n        return (0, _faIconButton2.default)({\n            title: (0, _localization2.default)(\"View details\"),\n            classes: \"params-btn\",\n            href: this.model.urls.show_params,\n            target: this.linkTarget,\n            faIcon: \"fa-info-circle\",\n            onclick: function onclick(ev) {\n                if (Galaxy.frame && Galaxy.frame.active) {\n                    Galaxy.frame.add({\n                        title: \"Dataset details\",\n                        url: this.href\n                    });\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n            }\n        });\n    },\n\n    /** Render icon-button/popupmenu to download the data (and/or the associated meta files (bai, etc.)) for this.\n     *  @returns {jQuery} rendered DOM\n     */\n    _renderDownloadButton: function _renderDownloadButton() {\n        // don't show anything if the data's been purged\n        if (this.model.get(\"purged\") || !this.model.hasData()) {\n            return null;\n        }\n\n        // return either: a popupmenu with links to download assoc. meta files (if there are meta files)\n        //  or a single download icon-button (if there are no meta files)\n        if (!_.isEmpty(this.model.get(\"meta_files\"))) {\n            return this._renderMetaFileDownloadButton();\n        }\n\n        return $(['<a class=\"download-btn icon-btn\" ', 'href=\"', this.model.urls.download, \"\\\" title=\\\"\" + (0, _localization2.default)(\"Download\") + \"\\\" download>\", '<span class=\"fa fa-floppy-o\"></span>', \"</a>\"].join(\"\"));\n    },\n\n    /** Render the download button which opens a dropdown with links to download assoc. meta files (indeces, etc.) */\n    _renderMetaFileDownloadButton: function _renderMetaFileDownloadButton() {\n        var urls = this.model.urls;\n        return $(['<div class=\"metafile-dropdown dropdown\">', '<a class=\"download-btn icon-btn\" href=\"javascript:void(0)\" data-toggle=\"dropdown\"', \" title=\\\"\" + (0, _localization2.default)(\"Download\") + \"\\\">\", '<span class=\"fa fa-floppy-o\"></span>', \"</a>\", '<ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dLabel\">', \"<li><a href=\\\"\" + urls.download + \"\\\" download>\", (0, _localization2.default)(\"Download dataset\"), \"</a></li>\", _.map(this.model.get(\"meta_files\"), function (meta_file) {\n            return ['<li><a href=\"', urls.meta_download + meta_file.file_type, '\">', (0, _localization2.default)(\"Download\"), \" \", meta_file.file_type, \"</a></li>\"].join(\"\");\n        }).join(\"\\n\"), \"</ul>\", \"</div>\"].join(\"\\n\"));\n    },\n\n    _renderNametags: function _renderNametags() {\n        var tpl = _.template([\"<% _.each(_.sortBy(_.uniq(tags), function(x) { return x }), function(tag){ %>\", '<% if (tag.indexOf(\"name:\") == 0){ %>', '<span class=\"label label-info\"><%- tag.slice(5) %></span>', \"<% } %>\", \"<% }); %>\"].join(\"\"));\n        return tpl({ tags: this.model.get(\"tags\") });\n    },\n\n    // ......................................................................... misc\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .display-btn\": function clickDisplayBtn(ev) {\n            this.trigger(\"display\", this, ev);\n        },\n        \"click .params-btn\": function clickParamsBtn(ev) {\n            this.trigger(\"params\", this, ev);\n        },\n        \"click .download-btn\": function clickDownloadBtn(ev) {\n            this.trigger(\"download\", this, ev);\n        }\n    }),\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"DatasetListItemView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemView.prototype.templates = function () {\n    //TODO: move to require text! plugin\n\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        failed_metadata: _baseMvc2.default.wrapTemplate([\n        // failed metadata is rendered as a warning on an otherwise ok dataset view\n        '<% if( model.state === \"failed_metadata\" ){ %>', '<div class=\"warningmessagesmall\">', (0, _localization2.default)(\"An error occurred setting the metadata for this dataset\"), \"</div>\", \"<% } %>\"]),\n        error: _baseMvc2.default.wrapTemplate([\n        // error during index fetch - show error on dataset\n        \"<% if( model.error ){ %>\", '<div class=\"errormessagesmall\">', (0, _localization2.default)(\"There was an error getting the data for this dataset\"), \": <%- model.error %>\", \"</div>\", \"<% } %>\"]),\n        purged: _baseMvc2.default.wrapTemplate([\"<% if( model.purged ){ %>\", '<div class=\"purged-msg warningmessagesmall\">', (0, _localization2.default)(\"This dataset has been deleted and removed from disk\"), \"</div>\", \"<% } %>\"]),\n        deleted: _baseMvc2.default.wrapTemplate([\n        // deleted not purged\n        \"<% if( model.deleted && !model.purged ){ %>\", '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This dataset has been deleted\"), \"</div>\", \"<% } %>\"])\n\n        //NOTE: hidden warning is only needed for HDAs\n    });\n\n    var detailsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"details\">', '<div class=\"summary\"></div>', '<div class=\"actions clear\">', '<div class=\"left\"></div>', '<div class=\"right\"></div>', \"</div>\",\n\n    // do not display tags, annotation, display apps, or peek when deleted\n    \"<% if( !dataset.deleted && !dataset.purged ){ %>\", '<div class=\"tags-display\"></div>', '<div class=\"annotation-display\"></div>', '<div class=\"display-applications\"></div>', \"<% if( dataset.peek ){ %>\", '<pre class=\"dataset-peek\"><%= dataset.peek %></pre>', \"<% } %>\", \"<% } %>\", \"</div>\"], \"dataset\");\n\n    var noAccessTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"details\">', '<div class=\"summary\">', (0, _localization2.default)(\"You do not have permission to view this dataset\"), \"</div>\", \"</div>\"], \"dataset\");\n\n    //TODO: still toooooooooooooo complex - rework\n    var summaryTemplates = {};\n    summaryTemplates[_states2.default.OK] = summaryTemplates[_states2.default.FAILED_METADATA] = _baseMvc2.default.wrapTemplate([\"<% if( dataset.misc_blurb ){ %>\", '<div class=\"blurb\">', '<span class=\"value\"><%- dataset.misc_blurb %></span>', \"</div>\", \"<% } %>\", \"<% if( dataset.file_ext ){ %>\", '<div class=\"datatype\">', '<label class=\"prompt\">', (0, _localization2.default)(\"format\"), \"</label>\", '<span class=\"value\"><%- dataset.file_ext %></span>', \"</div>\", \"<% } %>\", \"<% if( dataset.metadata_dbkey ){ %>\", '<div class=\"dbkey\">', '<label class=\"prompt\">', (0, _localization2.default)(\"database\"), \"</label>\", '<span class=\"value\">', \"<%- dataset.metadata_dbkey %>\", \"</span>\", \"</div>\", \"<% } %>\", \"<% if( dataset.misc_info ){ %>\", '<div class=\"info\">', '<span class=\"value\"><%- dataset.misc_info %></span>', \"</div>\", \"<% } %>\"], \"dataset\");\n    summaryTemplates[_states2.default.NEW] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"This is a new dataset and not all of its data are available yet\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.NOT_VIEWABLE] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"You do not have permission to view this dataset\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.DISCARDED] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"The job creating this dataset was cancelled before completion\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.QUEUED] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"This job is waiting to run\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.RUNNING] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"This job is currently running\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.UPLOAD] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"This dataset is currently uploading\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.SETTING_METADATA] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"Metadata is being auto-detected\"), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.PAUSED] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)('This job is paused. Use the \"Resume Paused Jobs\" in the history menu to resume'), \"</div>\"], \"dataset\");\n    summaryTemplates[_states2.default.ERROR] = _baseMvc2.default.wrapTemplate([\"<% if( !dataset.purged ){ %>\", \"<div><%- dataset.misc_blurb %></div>\", \"<% } %>\", '<span class=\"help-text\">', (0, _localization2.default)(\"An error occurred with this dataset\"), \":</span>\", '<div class=\"job-error-text\"><%- dataset.misc_info %></div>'], \"dataset\");\n    summaryTemplates[_states2.default.EMPTY] = _baseMvc2.default.wrapTemplate([\"<div>\", (0, _localization2.default)(\"No data\"), \": <i><%- dataset.misc_blurb %></i></div>\"], \"dataset\");\n    summaryTemplates.unknown = _baseMvc2.default.wrapTemplate(['<div>Error: unknown dataset state: \"<%- dataset.state %>\"</div>'], \"dataset\");\n\n    // messages to be displayed only within the details section ('below the fold')\n    var detailMessageTemplates = {\n        resubmitted: _baseMvc2.default.wrapTemplate([\n        // deleted not purged\n        \"<% if( model.resubmitted ){ %>\", '<div class=\"resubmitted-msg infomessagesmall\">', (0, _localization2.default)(\"The job creating this dataset has been resubmitted\"), \"</div>\", \"<% } %>\"])\n    };\n\n    // this is applied to both old and new style display apps\n    var displayApplicationsTemplate = _baseMvc2.default.wrapTemplate([\"<% _.each( apps, function( app ){ %>\", '<div class=\"display-application\">', '<span class=\"display-application-location\"><%- app.label %></span> ', '<span class=\"display-application-links\">', \"<% _.each( app.links, function( link ){ %>\", '<a target=\"<%- link.target %>\" href=\"<%- link.href %>\">', \"<% print( _l( link.text ) ); %>\", \"</a> \", \"<% }); %>\", \"</span>\", \"</div>\", \"<% }); %>\"], \"apps\");\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        details: detailsTemplate,\n        noAccess: noAccessTemplate,\n        summaries: summaryTemplates,\n        detailMessages: detailMessageTemplates,\n        displayApplications: displayApplicationsTemplate\n    });\n}();\n\n// ============================================================================\nexports.default = {\n    DatasetListItemView: DatasetListItemView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, $, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listItem = __webpack_require__(85);\n\nvar _listItem2 = _interopRequireDefault(_listItem);\n\nvar _datasetLi = __webpack_require__(86);\n\nvar _datasetLi2 = _interopRequireDefault(_datasetLi);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar FoldoutListItemView = _listItem2.default.FoldoutListItemView;\n\nvar ListItemView = _listItem2.default.ListItemView;\n/** @class Read only view for DatasetCollection.\n */\nvar DCListItemView = FoldoutListItemView.extend(\n/** @lends DCListItemView.prototype */{\n    className: FoldoutListItemView.prototype.className + \" dataset-collection\",\n    id: function id() {\n        return [\"dataset_collection\", this.model.get(\"id\")].join(\"-\");\n    },\n\n    /** override to add linkTarget */\n    initialize: function initialize(attributes) {\n        this.linkTarget = attributes.linkTarget || \"_blank\";\n        this.hasUser = attributes.hasUser;\n        FoldoutListItemView.prototype.initialize.call(this, attributes);\n    },\n\n    /** event listeners */\n    _setUpListeners: function _setUpListeners() {\n        FoldoutListItemView.prototype._setUpListeners.call(this);\n        this.listenTo(this.model, \"change\", function (model, options) {\n            // if the model has changed deletion status render it entirely\n            if (_.has(model.changed, \"deleted\")) {\n                this.render();\n\n                // if the model has been decorated after the fact with the element count,\n                // render the subtitle where the count is displayed\n            } else if (_.has(model.changed, \"element_count\")) {\n                this.$(\"> .title-bar .subtitle\").replaceWith(this._renderSubtitle());\n            }\n        });\n    },\n\n    // ......................................................................... rendering\n    /** render a subtitle to show the user what sort of collection this is */\n    _renderSubtitle: function _renderSubtitle() {\n        return $(this.templates.subtitle(this.model.toJSON(), this));\n    },\n\n    // ......................................................................... foldout\n    /** override to add linktarget to sub-panel */\n    _getFoldoutPanelOptions: function _getFoldoutPanelOptions() {\n        var options = FoldoutListItemView.prototype._getFoldoutPanelOptions.call(this);\n        return _.extend(options, {\n            linkTarget: this.linkTarget,\n            hasUser: this.hasUser\n        });\n    },\n\n    /** override to not catch sub-panel selectors */\n    $selector: function $selector() {\n        return this.$(\"> .selector\");\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"DCListItemView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCListItemView.prototype.templates = function () {\n    var warnings = _.extend({}, FoldoutListItemView.prototype.templates.warnings, {\n        error: _baseMvc2.default.wrapTemplate([\n        // error during index fetch - show error on dataset\n        \"<% if( model.error ){ %>\", '<div class=\"errormessagesmall\">', (0, _localization2.default)(\"There was an error getting the data for this collection\"), \": <%- model.error %>\", \"</div>\", \"<% } %>\"]),\n        purged: _baseMvc2.default.wrapTemplate([\"<% if( model.purged ){ %>\", '<div class=\"purged-msg warningmessagesmall\">', (0, _localization2.default)(\"This collection has been deleted and removed from disk\"), \"</div>\", \"<% } %>\"]),\n        deleted: _baseMvc2.default.wrapTemplate([\n        // deleted not purged\n        \"<% if( model.deleted && !model.purged ){ %>\", '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This collection has been deleted\"), \"</div>\", \"<% } %>\"])\n    });\n\n    // use element identifier\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"title-bar clear\" tabindex=\"0\">', '<div class=\"title\">', '<span class=\"name\"><%- collection.element_identifier || collection.name %></span>', \"</div>\", '<div class=\"subtitle\"></div>', \"</div>\"], \"collection\");\n\n    // use element identifier\n    var subtitleTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"subtitle\">', '<% var countText = collection.element_count? ( collection.element_count + \" \" ) : \"\"; %>', '<%        if( collection.collection_type === \"list\" ){ %>', (0, _localization2.default)(\"a list of <%- countText %>datasets\"), '<% } else if( collection.collection_type === \"paired\" ){ %>', (0, _localization2.default)(\"a pair of datasets\"), '<% } else if( collection.collection_type === \"list:paired\" ){ %>', (0, _localization2.default)(\"a list of <%- countText %>dataset pairs\"), '<% } else if( collection.collection_type === \"list:list\" ){ %>', (0, _localization2.default)(\"a list of <%- countText %>dataset lists\"), \"<% } %>\", \"</div>\"], \"collection\");\n\n    return _.extend({}, FoldoutListItemView.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate\n    });\n}();\n\n//==============================================================================\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemView = ListItemView.extend(\n/** @lends DCEListItemView.prototype */{\n    /** add the DCE class to the list item */\n    className: ListItemView.prototype.className + \" dataset-collection-element\",\n\n    /** set up */\n    initialize: function initialize(attributes) {\n        if (attributes.logger) {\n            this.logger = this.model.logger = attributes.logger;\n        }\n        this.log(\"DCEListItemView.initialize:\", attributes);\n        ListItemView.prototype.initialize.call(this, attributes);\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"DCEListItemView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCEListItemView.prototype.templates = function () {\n    // use the element identifier here - since that will persist and the user will need it\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"title-bar clear\" tabindex=\"0\">', '<div class=\"title\">', '<span class=\"name\"><%- element.element_identifier %></span>', \"</div>\", '<div class=\"subtitle\"></div>', \"</div>\"], \"element\");\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n}();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemView = _datasetLi2.default.DatasetListItemView.extend(\n/** @lends DatasetDCEListItemView.prototype */{\n    className: _datasetLi2.default.DatasetListItemView.prototype.className + \" dataset-collection-element\",\n\n    /** set up */\n    initialize: function initialize(attributes) {\n        if (attributes.logger) {\n            this.logger = this.model.logger = attributes.logger;\n        }\n        this.log(\"DatasetDCEListItemView.initialize:\", attributes);\n        _datasetLi2.default.DatasetListItemView.prototype.initialize.call(this, attributes);\n    },\n\n    /** In this override, only get details if in the ready state.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n    _fetchModelDetails: function _fetchModelDetails() {\n        var view = this;\n        if (view.model.inReadyState() && !view.model.hasDetails()) {\n            return view.model.fetch({ silent: true });\n        }\n        return jQuery.when();\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"DatasetDCEListItemView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemView.prototype.templates = function () {\n    // use the element identifier here and not the dataset name\n    //TODO:?? can we steal the DCE titlebar?\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"title-bar clear\" tabindex=\"0\">', '<span class=\"state-icon\"></span>', '<div class=\"title\">', '<span class=\"name\"><%- element.element_identifier %></span>', \"</div>\", \"</div>\"], \"element\");\n\n    return _.extend({}, _datasetLi2.default.DatasetListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n}();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemView = DCListItemView.extend(\n/** @lends NestedDCDCEListItemView.prototype */{\n    className: DCListItemView.prototype.className + \" dataset-collection-element\",\n\n    /** In this override, add the state as a class for use with state-based CSS */\n    _swapNewRender: function _swapNewRender($newRender) {\n        DCListItemView.prototype._swapNewRender.call(this, $newRender);\n        var state = this.model.get(\"state\") || \"ok\";\n        this.$el.addClass(\"state-\" + state);\n        return this.$el;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"NestedDCDCEListItemView(\" + modelString + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    DCListItemView: DCListItemView,\n    DCEListItemView: DCEListItemView,\n    DatasetDCEListItemView: DatasetDCEListItemView,\n    NestedDCDCEListItemView: NestedDCDCEListItemView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _formView = __webpack_require__(22);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Generic form view */\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        this.model = new Backbone.Model(options);\n        this.url = this.model.get(\"url\");\n        this.redirect = this.model.get(\"redirect\");\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + this.url,\n            type: \"GET\"\n        }).done(function (response) {\n            var options = $.extend({}, self.model.attributes, response);\n            var form = new _formView2.default({\n                title: options.title,\n                message: options.message,\n                status: options.status || \"warning\",\n                icon: options.icon,\n                inputs: options.inputs,\n                buttons: {\n                    submit: new _uiMisc2.default.Button({\n                        tooltip: options.submit_tooltip,\n                        title: options.submit_title || \"Save\",\n                        icon: options.submit_icon || \"fa-save\",\n                        cls: \"btn btn-primary ui-clear-float\",\n                        onclick: function onclick() {\n                            self._submit(form);\n                        }\n                    })\n                }\n            });\n            self.$el.empty().append(form.$el);\n        }).fail(function (response) {\n            self.$el.empty().append(new _uiMisc2.default.Message({\n                message: \"Failed to load resource \" + self.url + \".\",\n                status: \"danger\",\n                persistent: true\n            }).$el);\n        });\n    },\n\n    _submit: function _submit(form) {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + self.url,\n            data: JSON.stringify(form.data.create()),\n            type: \"PUT\",\n            contentType: \"application/json\"\n        }).done(function (response) {\n            var success_message = {\n                message: response.message,\n                status: \"success\",\n                persistent: false\n            };\n            if (self.redirect) {\n                window.location = Galaxy.root + self.redirect + \"?\" + $.param(success_message);\n            } else {\n                form.data.matchModel(response, function (input, input_id) {\n                    form.field_list[input_id].value(input.value);\n                });\n                self._showMessage(form, success_message);\n            }\n        }).fail(function (response) {\n            self._showMessage(form, {\n                message: response.responseJSON.err_msg,\n                status: \"danger\",\n                persistent: false\n            });\n        });\n    },\n\n    _showMessage: function _showMessage(form, options) {\n        var $panel = form.$el.parents().filter(function () {\n            return [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1;\n        }).first();\n        $panel.animate({ scrollTop: 0 }, 500);\n        form.message.update(options);\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _states = __webpack_require__(46);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"dataset\";\n//==============================================================================\nvar searchableMixin = _baseMvc2.default.SearchableModelMixin;\n/** @class base model for any DatasetAssociation (HDAs, LDDAs, DatasetCollectionDAs).\n *      No knowledge of what type (HDA/LDDA/DCDA) should be needed here.\n *  The DA's are made searchable (by attribute) by mixing in SearchableModelMixin.\n */\nvar DatasetAssociation = Backbone.Model.extend(_baseMvc2.default.LoggableMixin).extend(_baseMvc2.default.mixin(searchableMixin,\n/** @lends DatasetAssociation.prototype */{\n    _logNamespace: logNamespace,\n\n    /** default attributes for a model */\n    defaults: {\n        state: _states2.default.NEW,\n        deleted: false,\n        purged: false,\n        name: \"(unnamed dataset)\",\n        accessible: true,\n        // sniffed datatype (sam, tabular, bed, etc.)\n        data_type: \"\",\n        file_ext: \"\",\n        file_size: 0,\n\n        // array of associated file types (eg. [ 'bam_index', ... ])\n        meta_files: [],\n\n        misc_blurb: \"\",\n        misc_info: \"\",\n\n        tags: []\n        // do NOT default on annotation, as this default is valid and will be passed on 'save'\n        //  which is incorrect behavior when the model is only partially fetched (annos are not passed in summary data)\n        //annotation          : ''\n    },\n\n    /** instance vars and listeners */\n    initialize: function initialize(attributes, options) {\n        this.debug(this + \"(Dataset).initialize\", attributes, options);\n\n        //!! this state is not in trans.app.model.Dataset.states - set it here -\n        if (!this.get(\"accessible\")) {\n            this.set(\"state\", _states2.default.NOT_VIEWABLE);\n        }\n\n        /** Datasets rely/use some web controllers - have the model generate those URLs on startup */\n        this.urls = this._generateUrls();\n\n        this._setUpListeners();\n    },\n\n    /** returns misc. web urls for rendering things like re-run, display, etc. */\n    _generateUrls: function _generateUrls() {\n        var id = this.get(\"id\");\n        if (!id) {\n            return {};\n        }\n        var urls = {\n            purge: \"datasets/\" + id + \"/purge_async\",\n            display: \"datasets/\" + id + \"/display/?preview=True\",\n            edit: \"datasets/edit?dataset_id=\" + id,\n            download: \"datasets/\" + id + \"/display\" + this._downloadQueryParameters(),\n            report_error: \"dataset/errors?id=\" + id,\n            rerun: \"tool_runner/rerun?id=\" + id,\n            show_params: \"datasets/\" + id + \"/show_params\",\n            visualization: \"visualization\",\n            meta_download: \"dataset/get_metadata_file?hda_id=\" + id + \"&metadata_name=\"\n        };\n        _.each(urls, function (value, key) {\n            urls[key] = Galaxy.root + value;\n        });\n        this.urls = urls;\n        return urls;\n    },\n\n    _downloadQueryParameters: function _downloadQueryParameters() {\n        return \"?to_ext=\" + this.get(\"file_ext\");\n    },\n\n    /** set up any event listeners\n     *  event: state:ready  fired when this DA moves into/is already in a ready state\n     */\n    _setUpListeners: function _setUpListeners() {\n        // if the state has changed and the new state is a ready state, fire an event\n        this.on(\"change:state\", function (currModel, newState) {\n            this.log(this + \" has changed state:\", currModel, newState);\n            if (this.inReadyState()) {\n                this.trigger(\"state:ready\", currModel, newState, this.previous(\"state\"));\n            }\n        });\n        // the download url (currently) relies on having a correct file extension\n        this.on(\"change:id change:file_ext\", function (currModel) {\n            this._generateUrls();\n        });\n    },\n\n    // ........................................................................ common queries\n    /** override to add urls */\n    toJSON: function toJSON() {\n        var json = Backbone.Model.prototype.toJSON.call(this);\n        //console.warn( 'returning json?' );\n        //return json;\n        return _.extend(json, {\n            urls: this.urls\n        });\n    },\n\n    /** Is this dataset deleted or purged? */\n    isDeletedOrPurged: function isDeletedOrPurged() {\n        return this.get(\"deleted\") || this.get(\"purged\");\n    },\n\n    /** Is this dataset in a 'ready' state; where 'Ready' states are states where no\n     *      processing (for the ds) is left to do on the server.\n     */\n    inReadyState: function inReadyState() {\n        var ready = _.contains(_states2.default.READY_STATES, this.get(\"state\"));\n        return this.isDeletedOrPurged() || ready;\n    },\n\n    /** Does this model already contain detailed data (as opposed to just summary level data)? */\n    hasDetails: function hasDetails() {\n        // if it's inaccessible assume it has everything it needs\n        if (!this.get(\"accessible\")) {\n            return true;\n        }\n        return this.has(\"annotation\");\n    },\n\n    /** Convenience function to match dataset.has_data. */\n    hasData: function hasData() {\n        return this.get(\"file_size\") > 0;\n    },\n\n    // ........................................................................ ajax\n    fetch: function fetch(options) {\n        var dataset = this;\n        return Backbone.Model.prototype.fetch.call(this, options).always(function () {\n            dataset._generateUrls();\n        });\n    },\n\n    /** override to use actual Dates objects for create/update times */\n    parse: function parse(response, options) {\n        var parsed = Backbone.Model.prototype.parse.call(this, response, options);\n        if (parsed.create_time) {\n            parsed.create_time = new Date(parsed.create_time);\n        }\n        if (parsed.update_time) {\n            parsed.update_time = new Date(parsed.update_time);\n        }\n        return parsed;\n    },\n\n    /** override to wait by default */\n    save: function save(attrs, options) {\n        options = options || {};\n        options.wait = _.isUndefined(options.wait) ? true : options.wait;\n        return Backbone.Model.prototype.save.call(this, attrs, options);\n    },\n\n    //NOTE: subclasses of DA's will need to implement url and urlRoot in order to have these work properly\n    /** save this dataset, _Mark_ing it as deleted (just a flag) */\n    delete: function _delete(options) {\n        if (this.get(\"deleted\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: true }, options);\n    },\n    /** save this dataset, _Mark_ing it as undeleted */\n    undelete: function undelete(options) {\n        if (!this.get(\"deleted\") || this.get(\"purged\")) {\n            return jQuery.when();\n        }\n        return this.save({ deleted: false }, options);\n    },\n\n    /** remove the file behind this dataset from the filesystem (if permitted) */\n    purge: function _purge(options) {\n        //TODO: use, override model.destroy, HDA.delete({ purge: true })\n        if (this.get(\"purged\")) {\n            return jQuery.when();\n        }\n        options = options || {};\n        options.url = this.urls.purge;\n\n        //TODO: ideally this would be a DELETE call to the api\n        //  using purge async for now\n        var hda = this;\n\n        var xhr = jQuery.ajax(options);\n        xhr.done(function (message, status, responseObj) {\n            hda.set({ deleted: true, purged: true });\n        });\n        xhr.fail(function (xhr, status, message) {\n            // Exception messages are hidden within error page including:  '...not allowed in this Galaxy instance.'\n            // unbury and re-add to xhr\n            var error = (0, _localization2.default)(\"Unable to purge dataset\");\n            var messageBuriedInUnfortunatelyFormattedError = \"Removal of datasets by users \" + \"is not allowed in this Galaxy instance\";\n            if (xhr.responseJSON && xhr.responseJSON.error) {\n                error = xhr.responseJSON.error;\n            } else if (xhr.responseText.indexOf(messageBuriedInUnfortunatelyFormattedError) !== -1) {\n                error = messageBuriedInUnfortunatelyFormattedError;\n            }\n            xhr.responseText = error;\n            hda.trigger(\"error\", hda, xhr, options, (0, _localization2.default)(error), {\n                error: error\n            });\n        });\n        return xhr;\n    },\n\n    // ........................................................................ searching\n    /** what attributes of an HDA will be used in a text search */\n    searchAttributes: [\"name\", \"file_ext\", \"genome_build\", \"misc_blurb\", \"misc_info\", \"annotation\", \"tags\"],\n\n    /** our attr keys don't often match the labels we display to the user - so, when using\n     *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n     *      following attr keys.\n     */\n    searchAliases: {\n        title: \"name\",\n        format: \"file_ext\",\n        database: \"genome_build\",\n        blurb: \"misc_blurb\",\n        description: \"misc_blurb\",\n        info: \"misc_info\",\n        tag: \"tags\"\n    },\n\n    // ........................................................................ misc\n    /** String representation */\n    toString: function toString() {\n        var nameAndId = this.get(\"id\") || \"\";\n        if (this.get(\"name\")) {\n            nameAndId = \"\\\"\" + this.get(\"name\") + \"\\\",\" + nameAndId;\n        }\n        return \"Dataset(\" + nameAndId + \")\";\n    }\n}));\n\n//==============================================================================\n/** @class Backbone collection for dataset associations.\n */\nvar DatasetAssociationCollection = Backbone.Collection.extend(_baseMvc2.default.LoggableMixin).extend(\n/** @lends HistoryContents.prototype */{\n    _logNamespace: logNamespace,\n\n    model: DatasetAssociation,\n\n    /** root api url */\n    urlRoot: Galaxy.root + \"api/datasets\",\n\n    /** url fn */\n    url: function url() {\n        return this.urlRoot;\n    },\n\n    // ........................................................................ common queries\n    /** Get the ids of every item in this collection\n     *  @returns array of encoded ids\n     */\n    ids: function ids() {\n        return this.map(function (item) {\n            return item.get(\"id\");\n        });\n    },\n\n    /** Get contents that are not ready\n     *  @returns array of content models\n     */\n    notReady: function notReady() {\n        return this.filter(function (content) {\n            return !content.inReadyState();\n        });\n    },\n\n    /** return true if any datasets don't have details */\n    haveDetails: function haveDetails() {\n        return this.all(function (dataset) {\n            return dataset.hasDetails();\n        });\n    },\n\n    // ........................................................................ ajax\n    /** using a queue, perform ajaxFn on each of the models in this collection */\n    ajaxQueue: function ajaxQueue(ajaxFn, options) {\n        var deferred = jQuery.Deferred();\n        var startingLength = this.length;\n        var responses = [];\n\n        if (!startingLength) {\n            deferred.resolve([]);\n            return deferred;\n        }\n\n        // use reverse order (stylistic choice)\n        var ajaxFns = this.chain().reverse().map(function (dataset, i) {\n            return function () {\n                var xhr = ajaxFn.call(dataset, options);\n                // if successful, notify using the deferred to allow tracking progress\n                xhr.done(function (response) {\n                    deferred.notify({\n                        curr: i,\n                        total: startingLength,\n                        response: response,\n                        model: dataset\n                    });\n                });\n                // (regardless of previous error or success) if not last ajax call, shift and call the next\n                //  if last fn, resolve deferred\n                xhr.always(function (response) {\n                    responses.push(response);\n                    if (ajaxFns.length) {\n                        ajaxFns.shift()();\n                    } else {\n                        deferred.resolve(responses);\n                    }\n                });\n            };\n        }).value();\n        // start the queue\n        ajaxFns.shift()();\n\n        return deferred;\n    },\n\n    // ........................................................................ sorting/filtering\n    /** return a new collection of datasets whose attributes contain the substring matchesWhat */\n    matches: function matches(matchesWhat) {\n        return this.filter(function (dataset) {\n            return dataset.matches(matchesWhat);\n        });\n    },\n\n    /** String representation. */\n    toString: function toString() {\n        return [\"DatasetAssociationCollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexports.default = {\n    DatasetAssociation: DatasetAssociation,\n    DatasetAssociationCollection: DatasetAssociationCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _states = __webpack_require__(46);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\n/** @class Mixin for HistoryContents content (HDAs, HDCAs).\n */\nvar HistoryContentMixin = {\n    /** default attributes for a model */\n    defaults: {\n        /** parent (containing) history */\n        history_id: null,\n        /** some content_type (HistoryContents can contain mixed model classes) */\n        history_content_type: null,\n        /** indicating when/what order the content was generated in the context of the history */\n        hid: null,\n        /** whether the user wants the content shown (visible) */\n        visible: true\n    },\n\n    // ........................................................................ mixed content element\n    // In order to be part of a MIXED bbone collection, we can't rely on the id\n    //  (which may collide btwn models of different classes)\n    // Instead, use type_id which prefixes the history_content_type so the bbone collection can differentiate\n    idAttribute: \"type_id\",\n\n    // ........................................................................ common queries\n    /** the more common alias of visible */\n    hidden: function hidden() {\n        return !this.get(\"visible\");\n    },\n\n    //TODO: remove\n    /** based on includeDeleted, includeHidden (gen. from the container control),\n     *      would this ds show in the list of ds's?\n     *  @param {Boolean} includeDeleted are we showing deleted hdas?\n     *  @param {Boolean} includeHidden are we showing hidden hdas?\n     */\n    isVisible: function isVisible(includeDeleted, includeHidden) {\n        var isVisible = true;\n        if (!includeDeleted && (this.get(\"deleted\") || this.get(\"purged\"))) {\n            isVisible = false;\n        }\n        if (!includeHidden && !this.get(\"visible\")) {\n            isVisible = false;\n        }\n        return isVisible;\n    },\n\n    // ........................................................................ ajax\n    //TODO?: these are probably better done on the leaf classes\n    /** history content goes through the 'api/histories' API */\n    urlRoot: Galaxy.root + \"api/histories/\",\n\n    /** full url spec. for this content */\n    url: function url() {\n        var url = this.urlRoot + this.get(\"history_id\") + \"/contents/\" + this.get(\"history_content_type\") + \"s/\" + this.get(\"id\");\n        return url;\n    },\n\n    /** save this content as not visible */\n    hide: function hide(options) {\n        if (!this.get(\"visible\")) {\n            return jQuery.when();\n        }\n        return this.save({ visible: false }, options);\n    },\n    /** save this content as visible */\n    unhide: function unhide(options) {\n        if (this.get(\"visible\")) {\n            return jQuery.when();\n        }\n        return this.save({ visible: true }, options);\n    },\n\n    // ........................................................................ misc\n    toString: function toString() {\n        return [this.get(\"type_id\"), this.get(\"hid\"), this.get(\"name\")].join(\":\");\n    }\n};\n\n//==============================================================================\nexports.default = {\n    HistoryContentMixin: HistoryContentMixin\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/* For presentation-related functionality shared across collection creators.\n   Particularily overlapping functionality related to name processing and help.\n*/\nvar CollectionCreatorMixin = {\n    /** add (or clear if clear is truthy) a validation warning to the DOM element described in what */\n    _validationWarning: function _validationWarning(what, clear) {\n        var VALIDATION_CLASS = \"validation-warning\";\n        if (what === \"name\") {\n            what = this.$(\".collection-name\").add(this.$(\".collection-name-prompt\"));\n            this.$(\".collection-name\").focus().select();\n        }\n        if (clear) {\n            what = what || this.$(\".\" + VALIDATION_CLASS);\n            what.removeClass(VALIDATION_CLASS);\n        } else {\n            what.addClass(VALIDATION_CLASS);\n        }\n    },\n\n    _changeHideOriginals: function _changeHideOriginals(ev) {\n        this.hideOriginals = this.$(\".hide-originals\").prop(\"checked\");\n    },\n\n    // ........................................................................ footer\n    /** handle a collection name change */\n    _changeName: function _changeName(ev) {\n        this._validationWarning(\"name\", !!this._getName());\n    },\n\n    /** check for enter key press when in the collection name and submit */\n    _nameCheckForEnter: function _nameCheckForEnter(ev) {\n        if (ev.keyCode === 13 && !this.blocking) {\n            this._clickCreate();\n        }\n    },\n\n    /** get the current collection name */\n    _getName: function _getName() {\n        return _.escape(this.$(\".collection-name\").val());\n    },\n\n    // ........................................................................ header\n    /** expand help */\n    _clickMoreHelp: function _clickMoreHelp(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").addClass(\"expanded\");\n        this.$(\".more-help\").hide();\n    },\n    /** collapse help */\n    _clickLessHelp: function _clickLessHelp(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").removeClass(\"expanded\");\n        this.$(\".more-help\").show();\n    },\n    /** toggle help */\n    _toggleHelp: function _toggleHelp(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").toggleClass(\"expanded\");\n        this.$(\".more-help\").toggle();\n    },\n\n    /** show an alert on the top of the interface containing message (alertClass is bootstrap's alert-*) */\n    _showAlert: function _showAlert(message, alertClass) {\n        alertClass = alertClass || \"alert-danger\";\n        this.$(\".main-help\").hide();\n        this.$(\".header .alert\").attr(\"class\", \"alert alert-dismissable\").addClass(alertClass).show().find(\".alert-message\").html(message);\n    },\n    /** hide the alerts at the top */\n    _hideAlert: function _hideAlert(message) {\n        this.$(\".main-help\").show();\n        this.$(\".header .alert\").hide();\n    },\n\n    _cancelCreate: function _cancelCreate(ev) {\n        if (typeof this.oncancel === \"function\") {\n            this.oncancel.call(this);\n        }\n    },\n\n    /** attempt to create the current collection */\n    _clickCreate: function _clickCreate(ev) {\n        var name = this._getName();\n        if (!name) {\n            this._validationWarning(\"name\");\n        } else if (!this.blocking) {\n            this.createList(name);\n        }\n    },\n\n    _setUpCommonSettings: function _setUpCommonSettings(attributes) {\n        this.hideOriginals = attributes.defaultHideSourceItems || false;\n    },\n\n    /** render the footer, completion controls, and cancel controls */\n    _renderFooter: function _renderFooter(speed, callback) {\n        var self = this;\n        var $footer = this.$(\".footer\").empty().html(this.templates.footer());\n        _.each(this.footerSettings, function (property, selector) {\n            self.$(selector).prop(\"checked\", self[property]);\n        });\n        if (typeof this.oncancel === \"function\") {\n            this.$(\".cancel-create.btn\").show();\n        }\n        return $footer;\n    },\n\n    _creatorTemplates: {\n        main: _.template(['<div class=\"header flex-row no-flex\"></div>', '<div class=\"middle flex-row flex-row-container\"></div>', '<div class=\"footer flex-row no-flex\"></div>'].join(\"\"))\n    }\n};\n\n//==============================================================================\nexports.default = {\n    CollectionCreatorMixin: CollectionCreatorMixin\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Alphanumeric/natural sort fn\nfunction naturalSort(a, b) {\n    // setup temp-scope variables for comparison evauluation\n    var re = /(-?[0-9\\.]+)/g;\n\n    var x = a.toString().toLowerCase() || \"\";\n    var y = b.toString().toLowerCase() || \"\";\n    var nC = String.fromCharCode(0);\n    var xN = x.replace(re, nC + \"$1\" + nC).split(nC);\n    var yN = y.replace(re, nC + \"$1\" + nC).split(nC);\n    var xD = new Date(x).getTime();\n    var yD = xD ? new Date(y).getTime() : null;\n    // natural sorting of dates\n    if (yD) {\n        if (xD < yD) {\n            return -1;\n        } else if (xD > yD) {\n            return 1;\n        }\n    }\n\n    // natural sorting through split numeric strings and default strings\n    var oFxNcL;\n\n    var oFyNcL;\n    for (var cLoc = 0, numS = Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {\n        oFxNcL = parseFloat(xN[cLoc]) || xN[cLoc];\n        oFyNcL = parseFloat(yN[cLoc]) || yN[cLoc];\n        if (oFxNcL < oFyNcL) {\n            return -1;\n        } else if (oFxNcL > oFyNcL) {\n            return 1;\n        }\n    }\n    return 0;\n}\n\nexports.default = naturalSort;\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\"use_strict\";\n\nvar $ = _jquery2.default;\n//=============================================================================\n\n_jquery2.default.fn.extend({\n    hoverhighlight: function $hoverhighlight(scope, color) {\n        scope = scope || \"body\";\n        if (!this.length) {\n            return this;\n        }\n\n        $(this).each(function () {\n            var $this = $(this);\n            var targetSelector = $this.data(\"target\");\n\n            if (targetSelector) {\n                $this.mouseover(function (ev) {\n                    $(targetSelector, scope).css({\n                        background: color\n                    });\n                }).mouseout(function (ev) {\n                    $(targetSelector).css({\n                        background: \"\"\n                    });\n                });\n            }\n        });\n        return this;\n    }\n});\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _deferred = __webpack_require__(97);\n\nvar _deferred2 = _interopRequireDefault(_deferred);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _formView = __webpack_require__(22);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _formData = __webpack_require__(100);\n\nvar _formData2 = _interopRequireDefault(_formData);\n\nvar _toolFormBase = __webpack_require__(47);\n\nvar _toolFormBase2 = _interopRequireDefault(_toolFormBase);\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _webhooks = __webpack_require__(13);\n\nvar _webhooks2 = _interopRequireDefault(_webhooks);\n\nvar _workflowIcons = __webpack_require__(81);\n\nvar _workflowIcons2 = _interopRequireDefault(_workflowIcons);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.modal = parent.Galaxy.modal || new _uiModal2.default.View();\n        this.model = options && options.model || new Backbone.Model(options);\n        this.deferred = new _deferred2.default();\n        this.setElement($(\"<div/>\").addClass(\"ui-form-composite\").append(this.$message = $(\"<div/>\")).append(this.$header = $(\"<div/>\")).append(this.$steps = $(\"<div/>\")));\n        $(\"body\").append(this.$el);\n        this._configure();\n        this.render();\n        $(window).resize(function () {\n            self._refresh();\n        });\n    },\n\n    /** Refresh height of scrollable div below header, handle scrolling by lazy loading steps */\n    _refresh: function _refresh(step_index) {\n        var margin = _.reduce(this.$el.children(), function (memo, child) {\n            return memo + $(child).outerHeight();\n        }, 0) - this.$steps.height() + 90;\n        this.$steps.css(\"height\", $(window).height() - margin);\n    },\n\n    /** Configures form/step options for each workflow step */\n    _configure: function _configure() {\n        var self = this;\n        this.forms = [];\n        this.steps = [];\n        this.links = [];\n        this.parms = [];\n        _.each(this.model.get(\"steps\"), function (step, i) {\n            Galaxy.emit.debug(\"tool-form-composite::initialize()\", i + \" : Preparing workflow step.\");\n            var icon = _workflowIcons2.default[step.step_type];\n            var title = parseInt(i + 1) + \": \" + (step.step_label || step.step_name);\n            if (step.annotation) {\n                title += \" - \" + step.annotation;\n            }\n            if (step.step_version) {\n                title += \" (Galaxy Version \" + step.step_version + \")\";\n            }\n            step = _utils2.default.merge({\n                index: i,\n                fixed_title: _.escape(title),\n                icon: icon || \"\",\n                help: null,\n                citations: null,\n                collapsible: true,\n                collapsed: i > 0 && !self._isDataStep(step),\n                sustain_version: true,\n                sustain_repeats: true,\n                sustain_conditionals: true,\n                narrow: true,\n                text_enable: \"Edit\",\n                text_disable: \"Undo\",\n                cls_enable: \"fa fa-edit\",\n                cls_disable: \"fa fa-undo\",\n                errors: step.messages,\n                initial_errors: true,\n                cls: \"ui-portlet-narrow\",\n                hide_operations: true,\n                needs_refresh: false,\n                always_refresh: step.step_type != \"tool\"\n            }, step);\n            self.steps[i] = step;\n            self.links[i] = [];\n            self.parms[i] = {};\n        });\n\n        // build linear index of step input pairs\n        _.each(this.steps, function (step, i) {\n            _formData2.default.visitInputs(step.inputs, function (input, name) {\n                self.parms[i][name] = input;\n            });\n        });\n\n        // iterate through data input modules and collect linked sub steps\n        _.each(this.steps, function (step, i) {\n            _.each(step.output_connections, function (output_connection) {\n                _.each(self.steps, function (sub_step, j) {\n                    sub_step.step_index === output_connection.input_step_index && self.links[i].push(sub_step);\n                });\n            });\n        });\n\n        // convert all connected data inputs to hidden fields with proper labels,\n        // and track the linked source step\n        _.each(this.steps, function (step, i) {\n            _.each(self.steps, function (sub_step, j) {\n                var connections_by_name = {};\n                _.each(step.output_connections, function (connection) {\n                    sub_step.step_index === connection.input_step_index && (connections_by_name[connection.input_name] = connection);\n                });\n                _.each(self.parms[j], function (input, name) {\n                    var connection = connections_by_name[name];\n                    if (connection) {\n                        input.type = \"hidden\";\n                        input.help = input.step_linked ? input.help + \", \" : \"\";\n                        input.help += \"Output dataset '\" + connection.output_name + \"' from step \" + (parseInt(i) + 1);\n                        input.step_linked = input.step_linked || [];\n                        input.step_linked.push(step);\n                    }\n                });\n            });\n        });\n\n        // identify and configure workflow parameters\n        var wp_count = 0;\n        this.wp_inputs = {};\n        function _handleWorkflowParameter(value, callback) {\n            var re = /\\$\\{(.+?)\\}/g;\n            var match;\n            while (match = re.exec(String(value))) {\n                var wp_name = match[1];\n                callback(self.wp_inputs[wp_name] = self.wp_inputs[wp_name] || {\n                    label: wp_name,\n                    name: wp_name,\n                    type: \"text\",\n                    color: \"hsl( \" + ++wp_count * 100 + \", 70%, 30% )\",\n                    style: \"ui-form-wp-source\",\n                    links: []\n                });\n            }\n        }\n        _.each(this.steps, function (step, i) {\n            _.each(self.parms[i], function (input, name) {\n                _handleWorkflowParameter(input.value, function (wp_input) {\n                    wp_input.links.push(step);\n                    input.wp_linked = true;\n                    input.type = \"text\";\n                    input.backdrop = true;\n                    input.style = \"ui-form-wp-target\";\n                });\n            });\n            _.each(step.post_job_actions, function (pja) {\n                _.each(pja.action_arguments, function (arg) {\n                    _handleWorkflowParameter(arg, function () {});\n                });\n            });\n        });\n\n        // select fields are shown for dynamic fields if all putative data inputs are available,\n        // or if an explicit reference is specified as data_ref and available\n        _.each(this.steps, function (step, i) {\n            if (step.step_type == \"tool\") {\n                var data_resolved = true;\n                _formData2.default.visitInputs(step.inputs, function (input, name, context) {\n                    var is_runtime_value = input.value && input.value.__class__ == \"RuntimeValue\";\n                    var is_data_input = [\"data\", \"data_collection\"].indexOf(input.type) != -1;\n                    var data_ref = context[input.data_ref];\n                    input.step_linked && !self._isDataStep(input.step_linked) && (data_resolved = false);\n                    input.options && (input.options.length == 0 && !data_resolved || input.wp_linked) && (input.is_workflow = true);\n                    data_ref && (input.is_workflow = data_ref.step_linked && !self._isDataStep(data_ref.step_linked) || input.wp_linked);\n                    (is_data_input || input.value && input.value.__class__ == \"RuntimeValue\" && !input.step_linked) && (step.collapsed = false);\n                    is_runtime_value && (input.value = input.default_value);\n                    input.flavor = \"workflow\";\n                    if (!is_runtime_value && !is_data_input && input.type !== \"hidden\" && !input.wp_linked) {\n                        if (input.optional || !_utils2.default.isEmpty(input.value) && input.value !== \"\") {\n                            input.collapsible_value = input.value;\n                            input.collapsible_preview = true;\n                        }\n                    }\n                });\n            }\n        });\n    },\n\n    render: function render() {\n        var self = this;\n        this.deferred.reset();\n        this._renderHeader();\n        this._renderMessage();\n        this._renderParameters();\n        this._renderHistory();\n        _.each(this.steps, function (step) {\n            self._renderStep(step);\n        });\n    },\n\n    /** Render header */\n    _renderHeader: function _renderHeader() {\n        var self = this;\n        this.execute_btn = new _uiMisc2.default.Button({\n            icon: \"fa-check\",\n            title: \"Run workflow\",\n            cls: \"btn btn-primary\",\n            onclick: function onclick() {\n                self._execute();\n            }\n        });\n        this.$header.addClass(\"ui-form-header\").empty().append(new _uiMisc2.default.Label({\n            title: \"Workflow: \" + this.model.get(\"name\")\n        }).$el).append(this.execute_btn.$el);\n    },\n\n    /** Render message */\n    _renderMessage: function _renderMessage() {\n        this.$message.empty();\n        if (this.model.get(\"has_upgrade_messages\")) {\n            this.$message.append(new _uiMisc2.default.Message({\n                message: \"Some tools in this workflow may have changed since it was last saved or some errors were found. The workflow may still run, but any new options will have default values. Please review the messages below to make a decision about whether the changes will affect your analysis.\",\n                status: \"warning\",\n                persistent: true,\n                fade: false\n            }).$el);\n        }\n        var step_version_changes = this.model.get(\"step_version_changes\");\n        if (step_version_changes && step_version_changes.length > 0) {\n            this.$message.append(new _uiMisc2.default.Message({\n                message: \"Some tools are being executed with different versions compared to those available when this workflow was last saved because the other versions are not or no longer available on this Galaxy instance. To upgrade your workflow and dismiss this message simply edit the workflow and re-save it.\",\n                status: \"warning\",\n                persistent: true,\n                fade: false\n            }).$el);\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderParameters: function _renderParameters() {\n        var self = this;\n        this.wp_form = null;\n        if (!_.isEmpty(this.wp_inputs)) {\n            this.wp_form = new _formView2.default({\n                title: \"<b>Workflow Parameters</b>\",\n                inputs: this.wp_inputs,\n                cls: \"ui-portlet-narrow\",\n                onchange: function onchange() {\n                    _.each(self.wp_form.input_list, function (input_def, i) {\n                        _.each(input_def.links, function (step) {\n                            self._refreshStep(step);\n                        });\n                    });\n                }\n            });\n            this._append(this.$steps.empty(), this.wp_form.$el);\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderHistory: function _renderHistory() {\n        this.history_form = new _formView2.default({\n            cls: \"ui-portlet-narrow\",\n            title: \"<b>History Options</b>\",\n            inputs: [{\n                type: \"conditional\",\n                name: \"new_history\",\n                test_param: {\n                    name: \"check\",\n                    label: \"Send results to a new history\",\n                    type: \"boolean\",\n                    value: \"false\",\n                    help: \"\"\n                },\n                cases: [{\n                    value: \"true\",\n                    inputs: [{\n                        name: \"name\",\n                        label: \"History name\",\n                        type: \"text\",\n                        value: this.model.get(\"name\")\n                    }]\n                }]\n            }]\n        });\n        this._append(this.$steps, this.history_form.$el);\n    },\n\n    /** Render step */\n    _renderStep: function _renderStep(step) {\n        var self = this;\n        var form = null;\n        this.deferred.execute(function (promise) {\n            self.$steps.addClass(\"ui-steps\");\n            if (step.step_type == \"tool\") {\n                step.postchange = function (process, form) {\n                    var self = this;\n                    var current_state = {\n                        tool_id: step.id,\n                        tool_version: step.version,\n                        inputs: $.extend(true, {}, form.data.create())\n                    };\n                    form.wait(true);\n                    Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Sending current state.\", current_state);\n                    _utils2.default.request({\n                        type: \"POST\",\n                        url: Galaxy.root + \"api/tools/\" + step.id + \"/build\",\n                        data: current_state,\n                        success: function success(data) {\n                            form.update(data);\n                            form.wait(false);\n                            Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Received new model.\", data);\n                            process.resolve();\n                        },\n                        error: function error(response) {\n                            Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Refresh request failed.\", response);\n                            process.reject();\n                        }\n                    });\n                };\n                form = new _toolFormBase2.default(step);\n                if (step.post_job_actions && step.post_job_actions.length) {\n                    form.portlet.append($(\"<div/>\").addClass(\"ui-form-element-disabled\").append($(\"<div/>\").addClass(\"ui-form-title\").html(\"<b>Job Post Actions</b>\")).append($(\"<div/>\").addClass(\"ui-form-preview\").html(_.reduce(step.post_job_actions, function (memo, value) {\n                        return memo + \" \" + value.short_str;\n                    }, \"\"))));\n                }\n            } else {\n                var is_simple_input = [\"data_input\", \"data_collection_input\"].indexOf(step.step_type) != -1;\n                _.each(step.inputs, function (input) {\n                    input.flavor = \"module\";\n                    input.hide_label = is_simple_input;\n                });\n                form = new _formView2.default(_utils2.default.merge({\n                    title: step.fixed_title,\n                    onchange: function onchange() {\n                        _.each(self.links[step.index], function (link) {\n                            self._refreshStep(link);\n                        });\n                    },\n                    inputs: step.inputs && step.inputs.length > 0 ? step.inputs : [{\n                        type: \"hidden\",\n                        name: \"No options available.\",\n                        ignore: null\n                    }]\n                }, step));\n            }\n            self.forms[step.index] = form;\n            self._append(self.$steps, form.$el);\n            self._refresh();\n            step.needs_refresh && self._refreshStep(step);\n            form.portlet[!self.show_progress ? \"enable\" : \"disable\"]();\n            self.show_progress && self.execute_btn.model.set({\n                wait: true,\n                wait_text: \"Preparing...\",\n                percentage: (step.index + 1) * 100.0 / self.steps.length\n            });\n            Galaxy.emit.debug(\"tool-form-composite::initialize()\", step.index + \" : Workflow step state ready.\", step);\n            setTimeout(function () {\n                promise.resolve();\n            }, 0);\n        });\n    },\n\n    /** Refreshes step values from source step values */\n    _refreshStep: function _refreshStep(step) {\n        var self = this;\n        var form = this.forms[step.index];\n        if (form) {\n            _.each(self.parms[step.index], function (input, name) {\n                if (input.step_linked || input.wp_linked) {\n                    var field = form.field_list[form.data.match(name)];\n                    if (field) {\n                        var new_value = undefined;\n                        if (input.step_linked) {\n                            new_value = { values: [] };\n                            _.each(input.step_linked, function (source_step) {\n                                if (self._isDataStep(source_step)) {\n                                    var value = self.forms[source_step.index].data.create().input;\n                                    value && _.each(value.values, function (v) {\n                                        new_value.values.push(v);\n                                    });\n                                }\n                            });\n                            if (!input.multiple && new_value.values.length > 0) {\n                                new_value = {\n                                    values: [new_value.values[0]]\n                                };\n                            }\n                        } else if (input.wp_linked) {\n                            new_value = input.value;\n                            var re = /\\$\\{(.+?)\\}/g;\n                            var match;\n                            while (match = re.exec(input.value)) {\n                                var wp_field = self.wp_form.field_list[self.wp_form.data.match(match[1])];\n                                var wp_value = wp_field && wp_field.value();\n                                if (wp_value) {\n                                    new_value = new_value.split(match[0]).join(wp_value);\n                                }\n                            }\n                        }\n                        if (new_value !== undefined) {\n                            field.value(new_value);\n                        }\n                    }\n                }\n            });\n            form.trigger(\"change\");\n        } else {\n            step.needs_refresh = true;\n        }\n    },\n\n    /** Refresh the history after job submission while form is shown */\n    _refreshHistory: function _refreshHistory() {\n        var self = this;\n        var history = parent.Galaxy && parent.Galaxy.currHistoryPanel && parent.Galaxy.currHistoryPanel.model;\n        this._refresh_history && clearTimeout(this._refresh_history);\n        if (history) {\n            history.refresh().success(function () {\n                if (history.numOfUnfinishedShownContents() === 0) {\n                    self._refresh_history = setTimeout(function () {\n                        self._refreshHistory();\n                    }, history.UPDATE_DELAY);\n                }\n            });\n        }\n    },\n\n    /** Build remaining steps */\n    _execute: function _execute() {\n        var self = this;\n        this.show_progress = true;\n        this._enabled(false);\n        this.deferred.execute(function (promise) {\n            setTimeout(function () {\n                promise.resolve();\n                self._submit();\n            }, 0);\n        });\n    },\n\n    /** Validate and submit workflow */\n    _submit: function _submit() {\n        var self = this;\n        var history_form_data = this.history_form.data.create();\n        var job_def = {\n            new_history_name: history_form_data[\"new_history|name\"] ? history_form_data[\"new_history|name\"] : null,\n            history_id: !history_form_data[\"new_history|name\"] ? this.model.get(\"history_id\") : null,\n            replacement_params: this.wp_form ? this.wp_form.data.create() : {},\n            parameters: {},\n            // Tool form will submit flat maps for each parameter\n            // (e.g. \"repeat_0|cond|param\": \"foo\" instead of nested\n            // data structures).\n            parameters_normalized: true,\n            // Tool form always wants a list of invocations back\n            // so that inputs can be batched.\n            batch: true\n        };\n        var validated = true;\n        for (var i in this.forms) {\n            var form = this.forms[i];\n            var job_inputs = form.data.create();\n            var step = self.steps[i];\n            var step_index = step.step_index;\n            form.trigger(\"reset\");\n            for (var job_input_id in job_inputs) {\n                var input_value = job_inputs[job_input_id];\n                var input_id = form.data.match(job_input_id);\n                var input_field = form.field_list[input_id];\n                var input_def = form.input_list[input_id];\n                if (!input_def.step_linked) {\n                    if (this._isDataStep(step)) {\n                        validated = input_value && input_value.values && input_value.values.length > 0;\n                    } else {\n                        validated = input_def.optional || input_def.is_workflow && input_value !== \"\" || !input_def.is_workflow && input_value !== null;\n                    }\n                    if (!validated) {\n                        form.highlight(input_id);\n                        break;\n                    }\n                    job_def.parameters[step_index] = job_def.parameters[step_index] || {};\n                    job_def.parameters[step_index][job_input_id] = job_inputs[job_input_id];\n                }\n            }\n            if (!validated) {\n                break;\n            }\n        }\n        if (!validated) {\n            self._enabled(true);\n            Galaxy.emit.debug(\"tool-form-composite::submit()\", \"Validation failed.\", job_def);\n        } else {\n            Galaxy.emit.debug(\"tool-form-composite::submit()\", \"Validation complete.\", job_def);\n            _utils2.default.request({\n                type: \"POST\",\n                url: Galaxy.root + \"api/workflows/\" + this.model.id + \"/invocations\",\n                data: job_def,\n                success: function success(response) {\n                    Galaxy.emit.debug(\"tool-form-composite::submit\", \"Submission successful.\", response);\n                    self.$el.children().hide();\n                    self.$el.append(self._templateSuccess(response));\n\n                    // Show Webhook if job is running\n                    if ($.isArray(response) && response.length > 0) {\n                        self.$el.append($(\"<div/>\", { id: \"webhook-view\" }));\n                        var WebhookApp = new _webhooks2.default.WebhookView({\n                            urlRoot: Galaxy.root + \"api/webhooks/workflow\",\n                            toolId: job_def.tool_id,\n                            toolVersion: job_def.tool_version\n                        });\n                    }\n\n                    self._refreshHistory();\n                },\n                error: function error(response) {\n                    Galaxy.emit.debug(\"tool-form-composite::submit\", \"Submission failed.\", response);\n                    var input_found = false;\n                    if (response && response.err_data) {\n                        for (var i in self.forms) {\n                            var form = self.forms[i];\n                            var step_related_errors = response.err_data[form.model.get(\"step_index\")];\n                            if (step_related_errors) {\n                                var error_messages = form.data.matchResponse(step_related_errors);\n                                for (var input_id in error_messages) {\n                                    form.highlight(input_id, error_messages[input_id]);\n                                    input_found = true;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (!input_found) {\n                        self.modal.show({\n                            title: \"Workflow submission failed\",\n                            body: self._templateError(job_def, response && response.err_msg),\n                            buttons: {\n                                Close: function Close() {\n                                    self.modal.hide();\n                                }\n                            }\n                        });\n                    }\n                },\n                complete: function complete() {\n                    self._enabled(true);\n                }\n            });\n        }\n    },\n\n    /** Append new dom to body */\n    _append: function _append($container, $el) {\n        $container.append(\"<p/>\").append($el);\n    },\n\n    /** Set enabled/disabled state */\n    _enabled: function _enabled(enabled) {\n        this.execute_btn.model.set({\n            wait: !enabled,\n            wait_text: \"Sending...\",\n            percentage: -1\n        });\n        this.wp_form && this.wp_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        this.history_form && this.history_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        _.each(this.forms, function (form) {\n            form && form.portlet[enabled ? \"enable\" : \"disable\"]();\n        });\n    },\n\n    /** Is data input module/step */\n    _isDataStep: function _isDataStep(steps) {\n        var lst = $.isArray(steps) ? steps : [steps];\n        for (var i = 0; i < lst.length; i++) {\n            var step = lst[i];\n            if (!step || !step.step_type || !step.step_type.startsWith(\"data\")) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    /** Templates */\n    _templateSuccess: function _templateSuccess(response) {\n        if ($.isArray(response) && response.length > 0) {\n            return $(\"<div/>\").addClass(\"donemessagelarge\").append($(\"<p/>\").html(\"Successfully invoked workflow <b>\" + _utils2.default.sanitize(this.model.get(\"name\")) + \"</b>\" + (response.length > 1 ? \" <b>\" + response.length + \" times</b>\" : \"\") + \".\")).append($(\"<p/>\").append(\"<b/>\").text(\"You can check the status of queued jobs and view the resulting data by refreshing the History pane. When the job has been run the status will change from 'running' to 'finished' if completed successfully or 'error' if problems were encountered.\"));\n        } else {\n            return this._templateError(response, \"Invalid success response. No invocations found.\");\n        }\n    },\n\n    _templateError: function _templateError(response, err_msg) {\n        return $(\"<div/>\").addClass(\"errormessagelarge\").append($(\"<p/>\").text(\"The server could not complete the request. Please contact the Galaxy Team if this error persists. \" + (JSON.stringify(err_msg) || \"\"))).append($(\"<pre/>\").text(JSON.stringify(response, null, 4)));\n    }\n}); /** This is the run workflow tool form view. */\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, jQuery, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _errorModal = __webpack_require__(126);\n\nvar _errorModal2 = _interopRequireDefault(_errorModal);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\n/**\n * A dialog/modal that allows copying a user history or 'importing' from user\n * another. Generally called via historyCopyDialog below.\n * @type {Object}\n */\nvar CopyDialog = {\n    // language related strings/fns\n    defaultName: _.template(\"Copy of '<%- name %>'\"),\n    title: _.template((0, _localization2.default)(\"Copying history\") + \" \\\"<%- name %>\\\"\"),\n    submitLabel: (0, _localization2.default)(\"Copy\"),\n    errorMessage: (0, _localization2.default)(\"History could not be copied.\"),\n    progressive: (0, _localization2.default)(\"Copying history\"),\n    activeLabel: (0, _localization2.default)(\"Copy only the active, non-deleted datasets\"),\n    allLabel: (0, _localization2.default)(\"Copy all datasets including deleted ones\"),\n    anonWarning: (0, _localization2.default)(\"As an anonymous user, unless you login or register, you will lose your current history \") + (0, _localization2.default)(\"after copying this history. \"),\n\n    // template for modal body\n    _template: _.template([\n    //TODO: remove inline styles\n    // show a warning message for losing current to anon users\n    \"<% if( isAnon ){ %>\", '<div class=\"warningmessage\">', \"<%- anonWarning %>\", (0, _localization2.default)(\"You can\"), ' <a href=\"/user/login\">', (0, _localization2.default)(\"login here\"), \"</a> \", (0, _localization2.default)(\"or\"), \" \", ' <a href=\"/user/create\">', (0, _localization2.default)(\"register here\"), \"</a>.\", \"</div>\", \"<% } %>\", \"<form>\", '<label for=\"copy-modal-title\">', (0, _localization2.default)(\"Enter a title for the new history\"), \":\", \"</label><br />\",\n    // TODO: could use required here and the form validators\n    // NOTE: use unescaped here if escaped in the modal function below\n    '<input id=\"copy-modal-title\" class=\"form-control\" style=\"width: 100%\" value=\"<%= name %>\" />', '<p class=\"invalid-title bg-danger\" style=\"color: red; margin: 8px 0px 8px 0px; display: none\">', (0, _localization2.default)(\"Please enter a valid history title\"), \"</p>\",\n    // if allowAll, add the option to copy deleted datasets, too\n    \"<% if( allowAll ){ %>\", \"<br />\", \"<p>\", (0, _localization2.default)(\"Choose which datasets from the original history to include:\"), \"</p>\",\n    // copy non-deleted is the default\n    '<input name=\"copy-what\" type=\"radio\" id=\"copy-non-deleted\" value=\"copy-non-deleted\" ', '<% if( copyWhat === \"copy-non-deleted\" ){ print( \"checked\" ); } %>/>', '<label for=\"copy-non-deleted\"> <%- activeLabel %></label>', \"<br />\", '<input name=\"copy-what\" type=\"radio\" id=\"copy-all\" value=\"copy-all\" ', '<% if( copyWhat === \"copy-all\" ){ print( \"checked\" ); } %>/>', '<label for=\"copy-all\"> <%- allLabel %></label>', \"<% } %>\", \"</form>\"].join(\"\")),\n\n    // empty modal body and let the user know the copy is happening\n    _showAjaxIndicator: function _showAjaxIndicator() {\n        var indicator = \"<p><span class=\\\"fa fa-spinner fa-spin\\\"></span> \" + this.progressive + \"...</p>\";\n        this.modal.$(\".modal-body\").empty().append(indicator).css({ \"margin-top\": \"8px\" });\n    },\n\n    // (sorta) public interface - display the modal, render the form, and potentially copy the history\n    // returns a jQuery.Deferred done->history copied, fail->user cancelled\n    dialog: function _dialog(modal, history, options) {\n        options = options || {};\n\n        var dialog = this;\n        var deferred = jQuery.Deferred();\n\n        var // TODO: getting a little byzantine here\n        defaultCopyNameFn = options.nameFn || this.defaultName;\n\n        var defaultCopyName = defaultCopyNameFn({\n            name: history.get(\"name\")\n        });\n\n        var // TODO: these two might be simpler as one 3 state option (all,active,no-choice)\n        defaultCopyWhat = options.allDatasets ? \"copy-all\" : \"copy-non-deleted\";\n\n        var allowAll = !_.isUndefined(options.allowAll) ? options.allowAll : true;\n\n        var autoClose = !_.isUndefined(options.autoClose) ? options.autoClose : true;\n\n        this.modal = modal;\n\n        // validate the name and copy if good\n        function checkNameAndCopy() {\n            var name = modal.$(\"#copy-modal-title\").val();\n            if (!name) {\n                modal.$(\".invalid-title\").show();\n                return;\n            }\n            // get further settings, shut down and indicate the ajax call, then hide and resolve/reject\n            var copyAllDatasets = modal.$('input[name=\"copy-what\"]:checked').val() === \"copy-all\";\n            modal.$(\"button\").prop(\"disabled\", true);\n            dialog._showAjaxIndicator();\n            history.copy(true, name, copyAllDatasets).done(function (response) {\n                deferred.resolve(response);\n            }).fail(function (xhr, status, message) {\n                var options = {\n                    name: name,\n                    copyAllDatasets: copyAllDatasets\n                };\n                _errorModal2.default.ajaxErrorModal(history, xhr, options, dialog.errorMessage);\n                deferred.rejectWith(deferred, arguments);\n            }).done(function () {\n                if (autoClose) {\n                    modal.hide();\n                }\n            });\n        }\n\n        var originalClosingCallback = options.closing_callback;\n        modal.show(_.extend(options, {\n            title: this.title({ name: history.get(\"name\") }),\n            body: $(dialog._template({\n                name: defaultCopyName,\n                isAnon: Galaxy.user.isAnonymous(),\n                allowAll: allowAll,\n                copyWhat: defaultCopyWhat,\n                activeLabel: this.activeLabel,\n                allLabel: this.allLabel,\n                anonWarning: this.anonWarning\n            })),\n            buttons: _.object([[(0, _localization2.default)(\"Cancel\"), function () {\n                modal.hide();\n            }], [this.submitLabel, checkNameAndCopy]]),\n            height: \"auto\",\n            closing_events: true,\n            closing_callback: function _historyCopyClose(cancelled) {\n                if (cancelled) {\n                    deferred.reject({ cancelled: true });\n                }\n                if (originalClosingCallback) {\n                    originalClosingCallback(cancelled);\n                }\n            }\n        }));\n\n        // set the default dataset copy, autofocus the title, and set up for a simple return\n        modal.$(\"#copy-modal-title\").focus().select();\n        modal.$(\"#copy-modal-title\").on(\"keydown\", function (ev) {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                checkNameAndCopy();\n            }\n        });\n\n        return deferred;\n    }\n};\n\n//==============================================================================\n// maintain the (slight) distinction between copy and import\n/**\n * Subclass CopyDialog to use the import language.\n */\nvar ImportDialog = _.extend({}, CopyDialog, {\n    defaultName: _.template(\"imported: <%- name %>\"),\n    title: _.template((0, _localization2.default)(\"Importing history\") + \" \\\"<%- name %>\\\"\"),\n    submitLabel: (0, _localization2.default)(\"Import\"),\n    errorMessage: (0, _localization2.default)(\"History could not be imported.\"),\n    progressive: (0, _localization2.default)(\"Importing history\"),\n    activeLabel: (0, _localization2.default)(\"Import only the active, non-deleted datasets\"),\n    allLabel: (0, _localization2.default)(\"Import all datasets including deleted ones\"),\n    anonWarning: (0, _localization2.default)(\"As an anonymous user, unless you login or register, you will lose your current history \") + (0, _localization2.default)(\"after importing this history. \")\n});\n\n//==============================================================================\n/**\n * Main interface for both history import and history copy dialogs.\n * @param  {Backbone.Model} history     the history to copy\n * @param  {Object}         options     a hash\n * @return {jQuery.Deferred}            promise that fails on close and succeeds on copy\n *\n * options:\n *     (this object is also passed to the modal used to display the dialog and accepts modal options)\n *     {Function} nameFn    if defined, use this to build the default name shown to the user\n *                          (the fn is passed: {name: <original history's name>})\n *     {bool} useImport     if true, use the 'import' language (instead of Copy)\n *     {bool} allowAll      if true, allow the user to choose between copying all datasets and\n *                          only non-deleted datasets\n *     {String} allDatasets default initial checked radio button: 'copy-all' or 'copy-non-deleted',\n */\nvar historyCopyDialog = function historyCopyDialog(history, options) {\n    options = options || {};\n    // create our own modal if Galaxy doesn't have one (mako tab without use_panels)\n    var modal = window.parent.Galaxy.modal || new _uiModal2.default.View({});\n    return options.useImport ? ImportDialog.dialog(modal, history, options) : CopyDialog.dialog(modal, history, options);\n};\n\n//==============================================================================\nexports.default = historyCopyDialog;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//TODO: toastr is another possibility - I didn't see where I might add details, tho\n\n/* ============================================================================\nError modals meant to replace the o-so-easy alerts.\n\nThese are currently styled as errormessages but use the Galaxy.modal\ninfrastructure to be shown/closed. They're capable of showing details in a\ntogglable dropdown and the details are formatted in a pre.\n\nExample:\n    errorModal( 'Heres a message', 'A Title', { some_details: 'here' });\n    errorModal( 'Heres a message' ); // no details, title is 'Error'\n\nThere are three specialized forms:\n    offlineErrorModal       a canned response for when there's no connection\n    badGatewayErrorModal    canned response for when Galaxy is restarting\n    ajaxErrorModal          plugable into any Backbone class as an\n        error event handler by accepting the error args: model, xhr, options\n\nExamples:\n    if( navigator.offLine ){ offlineErrorModal(); }\n    if( xhr.status === 502 ){ badGatewayErrorModal(); }\n    this.listenTo( this.model, 'error', ajaxErrorModal );\n\n============================================================================ */\n\nvar CONTACT_MSG = (0, _localization2.default)(\"Please contact a Galaxy administrator if the problem persists.\");\nvar DEFAULT_AJAX_ERR_MSG = (0, _localization2.default)(\"An error occurred while updating information with the server.\");\nvar DETAILS_MSG = (0, _localization2.default)(\"The following information can assist the developers in finding the source of the error:\");\n\n/** private helper that builds the modal and handles adding details */\nfunction _errorModal(message, title, details) {\n    // create and return the modal, adding details button only if needed\n    Galaxy.modal.show({\n        title: title,\n        body: message,\n        closing_events: true,\n        buttons: {\n            Ok: function Ok() {\n                Galaxy.modal.hide();\n            }\n        }\n    });\n    Galaxy.modal.$el.addClass(\"error-modal\");\n\n    if (details) {\n        Galaxy.modal.$(\".error-details\").add(Galaxy.modal.$('button:contains(\"Details\")')).remove();\n        $(\"<div/>\").addClass(\"error-details\").hide().appendTo(Galaxy.modal.$(\".modal-content\")).append([$(\"<p/>\").text(DETAILS_MSG), $(\"<pre/>\").text(JSON.stringify(details, null, \"  \"))]);\n\n        $(\"<button id=\\\"button-1\\\" class=\\\"pull-left\\\">\" + (0, _localization2.default)(\"Details\") + \"</button>\").appendTo(Galaxy.modal.$(\".buttons\")).click(function () {\n            Galaxy.modal.$(\".error-details\").toggle();\n        });\n    }\n    return Galaxy.modal;\n}\n\n/** Display a modal showing an error message but fallback to alert if there's no modal */\nfunction errorModal(message, title, details) {\n    if (!message) {\n        return;\n    }\n\n    message = (0, _localization2.default)(message);\n    title = (0, _localization2.default)(title) || (0, _localization2.default)(\"Error:\");\n    if (window.Galaxy && Galaxy.modal) {\n        return _errorModal(message, title, details);\n    }\n\n    alert(title + \"\\n\\n\" + message);\n    console.log(\"error details:\", JSON.stringify(details));\n}\n\n// ----------------------------------------------------------------------------\n/** display a modal when the user may be offline */\nfunction offlineErrorModal() {\n    return errorModal((0, _localization2.default)(\"You appear to be offline. Please check your connection and try again.\"), (0, _localization2.default)(\"Offline?\"));\n}\n\n// ----------------------------------------------------------------------------\n/** 502 messages that should be displayed when galaxy is restarting */\nfunction badGatewayErrorModal() {\n    return errorModal((0, _localization2.default)(\"Galaxy is currently unreachable. Please try again in a few minutes.\") + \" \" + CONTACT_MSG, (0, _localization2.default)(\"Cannot connect to Galaxy\"));\n}\n\n// ----------------------------------------------------------------------------\n/** display a modal (with details) about a failed Backbone ajax operation */\nfunction ajaxErrorModal(model, xhr, options, message, title) {\n    message = message || DEFAULT_AJAX_ERR_MSG;\n    message += \" \" + CONTACT_MSG;\n    title = title || (0, _localization2.default)(\"An error occurred\");\n    var details = _ajaxDetails(model, xhr, options);\n    return errorModal(message, title, details);\n}\n\n/** build details which may help debugging the ajax call */\nfunction _ajaxDetails(model, xhr, options) {\n    return {\n        //TODO: still can't manage Raven id\n        raven: _.result(window.Raven, \"lastEventId\"),\n        userAgent: navigator.userAgent,\n        onLine: navigator.onLine,\n        version: _.result(Galaxy.config, \"version_major\"),\n        xhr: _.omit(xhr, _.functions(xhr)),\n        options: _.omit(options, \"xhr\"),\n        // add ajax data from Galaxy object cache\n        url: _.result(Galaxy.lastAjax, \"url\"),\n        data: _.result(Galaxy.lastAjax, \"data\"),\n        // backbone stuff (auto-redacting email for user)\n        model: _.result(model, \"toJSON\", \"\" + model),\n        user: _.omit(_.result(Galaxy.user, \"toJSON\"), \"email\")\n    };\n}\n\n//=============================================================================\nexports.default = {\n    errorModal: errorModal,\n    offlineErrorModal: offlineErrorModal,\n    badGatewayErrorModal: badGatewayErrorModal,\n    ajaxErrorModal: ajaxErrorModal\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _underscore = __webpack_require__(1);\n\nvar _ = _interopRequireWildcard(_underscore);\n\nvar _backbone = __webpack_require__(2);\n\nvar Backbone = _interopRequireWildcard(_backbone);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n//=============================================================================\n/**\n * A Collection that can be limited/offset/re-ordered/filtered.\n * @type {Backbone.Collection}\n */\nvar ControlledFetchCollection = Backbone.Collection.extend({\n    /** call setOrder on initialization to build the comparator based on options */\n    initialize: function initialize(models, options) {\n        Backbone.Collection.prototype.initialize.call(this, models, options);\n        this.setOrder(options.order || this.order, { silent: true });\n    },\n\n    /** set up to track order changes and re-sort when changed */\n    _setUpListeners: function _setUpListeners() {\n        return this.on({\n            \"changed-order\": this.sort\n        });\n    },\n\n    /** override to provide order and offsets based on instance vars, set limit if passed,\n     *  and set allFetched/fire 'all-fetched' when xhr returns\n     */\n    fetch: function fetch(options) {\n        options = this._buildFetchOptions(options);\n        Galaxy.debug(\"fetch options:\", options);\n        return Backbone.Collection.prototype.fetch.call(this, options);\n    },\n\n    /** build ajax data/parameters from options */\n    _buildFetchOptions: function _buildFetchOptions(options) {\n        // note: we normally want options passed in to override the defaults built here\n        // so most of these fns will generate defaults\n        options = _.clone(options) || {};\n        var self = this;\n\n        // jquery ajax option; allows multiple q/qv for filters (instead of 'q[]')\n        options.traditional = true;\n\n        // options.data\n        // we keep limit, offset, etc. in options *as well as move it into data* because:\n        // - it makes fetch calling convenient to add it to a single options map (instead of as mult. args)\n        // - it allows the std. event handlers (for fetch, etc.) to have access\n        //   to the pagination options too\n        //      (i.e. this.on( 'sync', function( options ){ if( options.limit ){ ... } }))\n        // however, when we send to xhr/jquery we copy them to data also so that they become API query params\n        options.data = options.data || self._buildFetchData(options);\n        Galaxy.debug(\"data:\", options.data);\n\n        // options.data.filters --> options.data.q, options.data.qv\n        var filters = this._buildFetchFilters(options);\n        Galaxy.debug(\"filters:\", filters);\n        if (!_.isEmpty(filters)) {\n            _.extend(options.data, this._fetchFiltersToAjaxData(filters));\n        }\n        Galaxy.debug(\"data:\", options.data);\n        return options;\n    },\n\n    /** Build the dictionary to send to fetch's XHR as data */\n    _buildFetchData: function _buildFetchData(options) {\n        var defaults = {};\n        if (this.order) {\n            defaults.order = this.order;\n        }\n        return _.defaults(_.pick(options, this._fetchParams), defaults);\n    },\n\n    /** These attribute keys are valid params to fetch/API-index */\n    _fetchParams: [\n    /** model dependent string to control the order of models returned */\n    \"order\",\n    /** limit the number of models returned from a fetch */\n    \"limit\",\n    /** skip this number of models when fetching */\n    \"offset\",\n    /** what series of attributes to return (model dependent) */\n    \"view\",\n    /** individual keys to return for the models (see api/histories.index) */\n    \"keys\"],\n\n    /** add any needed filters here based on collection state */\n    _buildFetchFilters: function _buildFetchFilters(options) {\n        // override\n        return _.clone(options.filters || {});\n    },\n\n    /** Convert dictionary filters to qqv style arrays */\n    _fetchFiltersToAjaxData: function _fetchFiltersToAjaxData(filters) {\n        // return as a map so ajax.data can extend from it\n        var filterMap = {\n            q: [],\n            qv: []\n        };\n        _.each(filters, function (v, k) {\n            // don't send if filter value is empty\n            if (v === undefined || v === \"\") {\n                return;\n            }\n            // json to python\n            if (v === true) {\n                v = \"True\";\n            }\n            if (v === false) {\n                v = \"False\";\n            }\n            if (v === null) {\n                v = \"None\";\n            }\n            // map to k/v arrays (q/qv)\n            filterMap.q.push(k);\n            filterMap.qv.push(v);\n        });\n        return filterMap;\n    },\n\n    /** override to reset allFetched flag to false */\n    reset: function reset(models, options) {\n        this.allFetched = false;\n        return Backbone.Collection.prototype.reset.call(this, models, options);\n    },\n\n    // ........................................................................ order\n    order: null,\n\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: {\n        update_time: _baseMvc2.default.buildComparator(\"update_time\", {\n            ascending: false\n        }),\n        \"update_time-asc\": _baseMvc2.default.buildComparator(\"update_time\", {\n            ascending: true\n        }),\n        create_time: _baseMvc2.default.buildComparator(\"create_time\", {\n            ascending: false\n        }),\n        \"create_time-asc\": _baseMvc2.default.buildComparator(\"create_time\", {\n            ascending: true\n        })\n    },\n\n    /** set the order and comparator for this collection then sort with the new order\n     *  @event 'changed-order' passed the new order and the collection\n     */\n    setOrder: function setOrder(order, options) {\n        options = options || {};\n        var collection = this;\n        var comparator = collection.comparators[order];\n        if (_.isUndefined(comparator)) {\n            throw new Error(\"unknown order: \" + order);\n        }\n        // if( _.isUndefined( comparator ) ){ return; }\n        if (comparator === collection.comparator) {\n            return;\n        }\n\n        collection.order = order;\n        collection.comparator = comparator;\n\n        if (!options.silent) {\n            collection.trigger(\"changed-order\", options);\n        }\n        return collection;\n    }\n});\n\n//=============================================================================\n/**\n *\n */\nvar PaginatedCollection = ControlledFetchCollection.extend({\n    /** @type {Number} limit used for each page's fetch */\n    limitPerPage: 500,\n\n    initialize: function initialize(models, options) {\n        ControlledFetchCollection.prototype.initialize.call(this, models, options);\n        this.currentPage = options.currentPage || 0;\n    },\n\n    getTotalItemCount: function getTotalItemCount() {\n        return this.length;\n    },\n\n    shouldPaginate: function shouldPaginate() {\n        return this.getTotalItemCount() >= this.limitPerPage;\n    },\n\n    getLastPage: function getLastPage() {\n        return Math.floor(this.getTotalItemCount() / this.limitPerPage);\n    },\n\n    getPageCount: function getPageCount() {\n        return this.getLastPage() + 1;\n    },\n\n    getPageLimitOffset: function getPageLimitOffset(pageNum) {\n        pageNum = this.constrainPageNum(pageNum);\n        return {\n            limit: this.limitPerPage,\n            offset: pageNum * this.limitPerPage\n        };\n    },\n\n    constrainPageNum: function constrainPageNum(pageNum) {\n        return Math.max(0, Math.min(pageNum, this.getLastPage()));\n    },\n\n    /** fetch the next page of data */\n    fetchPage: function fetchPage(pageNum, options) {\n        var self = this;\n        pageNum = self.constrainPageNum(pageNum);\n        self.currentPage = pageNum;\n        options = _.defaults(options || {}, self.getPageLimitOffset(pageNum));\n\n        self.trigger(\"fetching-more\");\n        return self.fetch(options).always(function () {\n            self.trigger(\"fetching-more-done\");\n        });\n    },\n\n    fetchCurrentPage: function fetchCurrentPage(options) {\n        return this.fetchPage(this.currentPage, options);\n    },\n\n    fetchPrevPage: function fetchPrevPage(options) {\n        return this.fetchPage(this.currentPage - 1, options);\n    },\n\n    fetchNextPage: function fetchNextPage(options) {\n        return this.fetchPage(this.currentPage + 1, options);\n    }\n});\n\n//=============================================================================\n/**\n * A Collection that will load more elements without reseting.\n */\nvar InfinitelyScrollingCollection = ControlledFetchCollection.extend({\n    /** @type {Number} limit used for the first fetch (or a reset) */\n    limitOnFirstFetch: null,\n    /** @type {Number} limit used for each subsequent fetch */\n    limitPerFetch: 100,\n\n    initialize: function initialize(models, options) {\n        ControlledFetchCollection.prototype.initialize.call(this, models, options);\n        /** @type {Integer} number of contents to return from the first fetch */\n        this.limitOnFirstFetch = options.limitOnFirstFetch || this.limitOnFirstFetch;\n        /** @type {Integer} limit for every fetch after the first */\n        this.limitPerFetch = options.limitPerFetch || this.limitPerFetch;\n        /** @type {Boolean} are all contents fetched? */\n        this.allFetched = false;\n        /** @type {Integer} what was the offset of the last content returned */\n        this.lastFetched = options.lastFetched || 0;\n    },\n\n    /** build ajax data/parameters from options */\n    _buildFetchOptions: function _buildFetchOptions(options) {\n        // options (options for backbone.fetch and jquery.ajax generally)\n        // backbone option; false here to make fetching an addititive process\n        options.remove = options.remove || false;\n        return ControlledFetchCollection.prototype._buildFetchOptions.call(this, options);\n    },\n\n    /** fetch the first 'page' of data */\n    fetchFirst: function fetchFirst(options) {\n        Galaxy.debug(\"ControlledFetchCollection.fetchFirst:\", options);\n        options = options ? _.clone(options) : {};\n        this.allFetched = false;\n        this.lastFetched = 0;\n        return this.fetchMore(_.defaults(options, {\n            reset: true,\n            limit: this.limitOnFirstFetch\n        }));\n    },\n\n    /** fetch the next page of data */\n    fetchMore: function fetchMore(options) {\n        Galaxy.debug(\"ControlledFetchCollection.fetchMore:\", options);\n        options = _.clone(options || {});\n        var collection = this;\n\n        Galaxy.debug(\"fetchMore, options.reset:\", options.reset);\n        if (!options.reset && collection.allFetched) {\n            return jQuery.when();\n        }\n\n        // TODO: this fails in the edge case where\n        //  the first fetch offset === limit (limit 4, offset 4, collection.length 4)\n        if (options.reset) {\n            options.offset = 0;\n        } else if (options.offset === undefined) {\n            options.offset = collection.lastFetched;\n        }\n        var limit = options.limit = options.limit || collection.limitPerFetch || null;\n        Galaxy.debug(\"fetchMore, limit:\", limit, \"offset:\", options.offset);\n\n        collection.trigger(\"fetching-more\");\n        return collection.fetch(options).always(function () {\n            collection.trigger(\"fetching-more-done\");\n        })\n        // maintain allFetched flag and trigger if all were fetched this time\n        .done(function _postFetchMore(fetchedData) {\n            var numFetched = _.isArray(fetchedData) ? fetchedData.length : 0;\n            collection.lastFetched += numFetched;\n            Galaxy.debug(\"fetchMore, lastFetched:\", collection.lastFetched);\n            // anything less than a full page means we got all there is to get\n            if (!limit || numFetched < limit) {\n                collection.allFetched = true;\n                collection.trigger(\"all-fetched\", this);\n            }\n        });\n    },\n\n    /** fetch all the collection */\n    fetchAll: function fetchAll(options) {\n        // whitelist options to prevent allowing limit/offset/filters\n        // (use vanilla fetch instead)\n        options = options || {};\n        var self = this;\n        options = _.pick(options, \"silent\");\n        options.filters = {};\n        return self.fetch(options).done(function () {\n            self.allFetched = true;\n            self.trigger(\"all-fetched\", self);\n        });\n    }\n});\n\n//==============================================================================\nexports.default = {\n    ControlledFetchCollection: ControlledFetchCollection,\n    PaginatedCollection: PaginatedCollection,\n    InfinitelyScrollingCollection: InfinitelyScrollingCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _datasetModel = __webpack_require__(119);\n\nvar _datasetModel2 = _interopRequireDefault(_datasetModel);\n\nvar _historyContentModel = __webpack_require__(120);\n\nvar _historyContentModel2 = _interopRequireDefault(_historyContentModel);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _datasetModel2.default.DatasetAssociation;\n\nvar hcontentMixin = _historyContentModel2.default.HistoryContentMixin;\n/** @class (HDA) model for a Galaxy dataset contained in and related to a history.\n */\nvar HistoryDatasetAssociation = _super.extend(_baseMvc2.default.mixin(hcontentMixin,\n/** @lends HistoryDatasetAssociation.prototype */{\n    /** default attributes for a model */\n    defaults: _.extend({}, _super.prototype.defaults, hcontentMixin.defaults, {\n        history_content_type: \"dataset\",\n        model_class: \"HistoryDatasetAssociation\"\n    })\n}));\n\n//==============================================================================\nexports.default = {\n    HistoryDatasetAssociation: HistoryDatasetAssociation\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listItem = __webpack_require__(85);\n\nvar _listItem2 = _interopRequireDefault(_listItem);\n\nvar _loadingIndicator = __webpack_require__(249);\n\nvar _loadingIndicator2 = _interopRequireDefault(_loadingIndicator);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(130);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"list\";\n/* ============================================================================\nTODO:\n\n============================================================================ */\n/** @class View for a list/collection of models and the sub-views of those models.\n *      Sub-views must (at least have the interface if not) inherit from ListItemView.\n *      (For a list panel that also includes some 'container' model (History->HistoryContents)\n *      use ModelWithListPanel)\n *\n *  Allows for:\n *      searching collection/sub-views\n *      selecting/multi-selecting sub-views\n *\n *  Currently used:\n *      for dataset/dataset-choice\n *      as superclass of ModelListPanel\n */\nvar ListPanel = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(\n/** @lends ListPanel.prototype */{\n    _logNamespace: logNamespace,\n\n    /** class to use for constructing the sub-views */\n    viewClass: _listItem2.default.ListItemView,\n    /** class to used for constructing collection of sub-view models */\n    collectionClass: Backbone.Collection,\n\n    tagName: \"div\",\n    className: \"list-panel\",\n\n    /** (in ms) that jquery effects will use */\n    fxSpeed: \"fast\",\n\n    /** string to display when the collection has no contents */\n    emptyMsg: (0, _localization2.default)(\"This list is empty\"),\n    /** displayed when no items match the search terms */\n    noneFoundMsg: (0, _localization2.default)(\"No matching items found\"),\n    /** string used for search placeholder */\n    searchPlaceholder: (0, _localization2.default)(\"search\"),\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the list\n     */\n    initialize: function initialize(attributes, options) {\n        attributes = attributes || {};\n        // set the logger if requested\n        if (attributes.logger) {\n            this.logger = attributes.logger;\n        }\n        this.log(this + \".initialize:\", attributes);\n\n        // ---- instance vars\n        /** how quickly should jquery fx run? */\n        this.fxSpeed = _.has(attributes, \"fxSpeed\") ? attributes.fxSpeed : this.fxSpeed;\n\n        /** filters for displaying subviews */\n        this.filters = [];\n        /** current search terms */\n        this.searchFor = attributes.searchFor || \"\";\n\n        /** loading indicator */\n        // this.indicator = new LoadingIndicator( this.$el );\n\n        /** currently showing selectors on items? */\n        this.selecting = attributes.selecting !== undefined ? attributes.selecting : true;\n        //this.selecting = false;\n\n        /** cached selected item.model.ids to persist btwn renders */\n        this.selected = attributes.selected || [];\n        /** the last selected item.model.id */\n        this.lastSelected = null;\n\n        /** are sub-views draggable */\n        this.dragItems = attributes.dragItems || false;\n\n        /** list item view class (when passed models) */\n        this.viewClass = attributes.viewClass || this.viewClass;\n\n        /** list item views */\n        this.views = [];\n        /** list item models */\n        this.collection = attributes.collection || this._createDefaultCollection();\n\n        /** filter fns run over collection items to see if they should show in the list */\n        this.filters = attributes.filters || [];\n\n        /** override $scrollContainer fn via attributes - fn should return jq for elem to call scrollTo on */\n        this.$scrollContainer = attributes.$scrollContainer || this.$scrollContainer;\n\n        /** @type {String} generic title */\n        this.title = attributes.title || \"\";\n        /** @type {String} generic subtitle */\n        this.subtitle = attributes.subtitle || \"\";\n\n        this._setUpListeners();\n    },\n\n    // ------------------------------------------------------------------------ listeners\n    /** create any event listeners for the list */\n    _setUpListeners: function _setUpListeners() {\n        this.off();\n\n        //TODO: move errorHandler down into list-view from history-view or\n        //  pass to global error handler (Galaxy)\n        this.on({\n            error: function error(model, xhr, options, msg, details) {\n                //this.errorHandler( model, xhr, options, msg, details );\n                console.error(model, xhr, options, msg, details);\n            },\n            // show hide the loading indicator\n            loading: function loading() {\n                this._showLoadingIndicator(\"loading...\", 40);\n            },\n            \"loading-done\": function loadingDone() {\n                this._hideLoadingIndicator(40);\n            }\n        });\n\n        // throw the first render up as a diff namespace using once (for outside consumption)\n        this.once(\"rendered\", function () {\n            this.trigger(\"rendered:initial\", this);\n        });\n\n        this._setUpCollectionListeners();\n        this._setUpViewListeners();\n        return this;\n    },\n\n    /** create and return a collection for when none is initially passed */\n    _createDefaultCollection: function _createDefaultCollection() {\n        // override\n        return new this.collectionClass([]);\n    },\n\n    /** listening for collection events */\n    _setUpCollectionListeners: function _setUpCollectionListeners() {\n        this.log(this + \"._setUpCollectionListeners\", this.collection);\n        this.stopListening(this.collection);\n\n        // bubble up error events\n        this.listenTo(this.collection, {\n            error: function error(model, xhr, options, msg, details) {\n                this.trigger(\"error\", model, xhr, options, msg, details);\n            },\n            update: function update(collection, options) {\n                var changes = options.changes;\n                // console.info( collection + ', update:', changes, '\\noptions:', options );\n                // more than one: render everything\n                if (options.renderAll || changes.added.length + changes.removed.length > 1) {\n                    return this.renderItems();\n                }\n                // otherwise, let the single add/remove handlers do it\n                if (changes.added.length === 1) {\n                    return this.addItemView(_.first(changes.added), collection, options);\n                }\n                if (changes.removed.length === 1) {\n                    return this.removeItemView(_.first(changes.removed), collection, options);\n                }\n            }\n        });\n        return this;\n    },\n\n    /** listening for sub-view events that bubble up with the 'view:' prefix */\n    _setUpViewListeners: function _setUpViewListeners() {\n        this.log(this + \"._setUpViewListeners\");\n\n        // shift to select a range\n        this.on({\n            \"view:selected\": function viewSelected(view, ev) {\n                if (ev && ev.shiftKey && this.lastSelected) {\n                    var lastSelectedView = this.viewFromModelId(this.lastSelected);\n                    if (lastSelectedView) {\n                        this.selectRange(view, lastSelectedView);\n                    }\n                } else if (ev && ev.altKey && !this.selecting) {\n                    this.showSelectors();\n                }\n                this.selected.push(view.model.id);\n                this.lastSelected = view.model.id;\n            },\n\n            \"view:de-selected\": function viewDeSelected(view, ev) {\n                this.selected = _.without(this.selected, view.model.id);\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ rendering\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render: function render(speed) {\n        this.log(this + \".render\", speed);\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors($newRender);\n        this._queueNewRender($newRender, speed);\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el. */\n    _buildNewRender: function _buildNewRender() {\n        this.debug(this + \"(ListPanel)._buildNewRender\");\n        var $newRender = $(this.templates.el({}, this));\n        this._renderControls($newRender);\n        this._renderTitle($newRender);\n        this._renderSubtitle($newRender);\n        this._renderSearch($newRender);\n        this.renderItems($newRender);\n        return $newRender;\n    },\n\n    /** Build a temp div containing the new children for the view's $el. */\n    _renderControls: function _renderControls($newRender) {\n        this.debug(this + \"(ListPanel)._renderControls\");\n        var $controls = $(this.templates.controls({}, this));\n        $newRender.find(\".controls\").replaceWith($controls);\n        return $controls;\n    },\n\n    /** return a jQuery object containing the title DOM */\n    _renderTitle: function _renderTitle($where) {\n        //$where = $where || this.$el;\n        //$where.find( '.title' ).replaceWith( ... )\n    },\n\n    /** return a jQuery object containing the subtitle DOM (if any) */\n    _renderSubtitle: function _renderSubtitle($where) {\n        //$where = $where || this.$el;\n        //$where.find( '.title' ).replaceWith( ... )\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender: function _queueNewRender($newRender, speed) {\n        speed = speed === undefined ? this.fxSpeed : speed;\n        var panel = this;\n        panel.log(\"_queueNewRender:\", $newRender, speed);\n\n        $(panel).queue(\"fx\", [function (next) {\n            panel.$el.fadeOut(speed, next);\n        }, function (next) {\n            panel._swapNewRender($newRender);\n            next();\n        }, function (next) {\n            panel.$el.fadeIn(speed, next);\n        }, function (next) {\n            panel.trigger(\"rendered\", panel);\n            next();\n        }]);\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender: function _swapNewRender($newRender) {\n        this.$el.empty().attr(\"class\", this.className).append($newRender.children());\n        if (this.selecting) {\n            this.showSelectors(0);\n        }\n        return this;\n    },\n\n    /** Set up any behaviors, handlers (ep. plugins) that need to be called when the entire view has been built but\n     *  not attached to the page yet.\n     */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        $where = $where || this.$el;\n        this.$controls($where).find(\"[title]\").tooltip();\n        // set up the pupup for actions available when multi selecting\n        this._renderMultiselectActionMenu($where);\n        return this;\n    },\n\n    /** render a menu containing the actions available to sets of selected items */\n    _renderMultiselectActionMenu: function _renderMultiselectActionMenu($where) {\n        $where = $where || this.$el;\n        var $menu = $where.find(\".list-action-menu\");\n        var actions = this.multiselectActions();\n        if (!actions.length) {\n            return $menu.empty();\n        }\n\n        var $newMenu = $(['<div class=\"list-action-menu btn-group\">', '<button class=\"list-action-menu-btn btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">', (0, _localization2.default)(\"For all selected\"), \"...\", \"</button>\", '<ul class=\"dropdown-menu pull-right\" role=\"menu\">', \"</ul>\", \"</div>\"].join(\"\"));\n        var $actions = actions.map(function (action) {\n            var html = ['<li><a href=\"javascript:void(0);\">', action.html, \"</a></li>\"].join(\"\");\n            return $(html).click(function (ev) {\n                ev.preventDefault();\n                return action.func(ev);\n            });\n        });\n        $newMenu.find(\"ul\").append($actions);\n        $menu.replaceWith($newMenu);\n        return $newMenu;\n    },\n\n    /** return a list of plain objects used to render multiselect actions menu. Each object should have:\n     *      html: an html string used as the anchor contents\n     *      func: a function called when the anchor is clicked (passed the click event)\n     */\n    multiselectActions: function multiselectActions() {\n        return [];\n    },\n\n    // ------------------------------------------------------------------------ sub-$element shortcuts\n    /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n    $scrollContainer: function $scrollContainer($where) {\n        // override or set via attributes.$scrollContainer\n        return ($where || this.$el).parent().parent();\n    },\n    /** convenience selector for the section that displays the list controls */\n    $controls: function $controls($where) {\n        return ($where || this.$el).find(\"> .controls\");\n    },\n    /** list-items: where the subviews are contained in the view's dom */\n    $list: function $list($where) {\n        return ($where || this.$el).find(\"> .list-items\");\n    },\n    /** container where list messages are attached */\n    $messages: function $messages($where) {\n        //TODO: controls isn't really correct here (only for ModelListPanel)\n        return ($where || this.$el).find(\"> .controls .messages\");\n    },\n    /** the message displayed when no views can be shown (no views, none matching search) */\n    $emptyMessage: function $emptyMessage($where) {\n        return ($where || this.$el).find(\"> .empty-message\");\n    },\n\n    // ------------------------------------------------------------------------ hda sub-views\n    /** render the subviews for the list's collection */\n    renderItems: function renderItems($whereTo) {\n        $whereTo = $whereTo || this.$el;\n        var panel = this;\n        panel.log(this + \".renderItems\", $whereTo);\n\n        var $list = panel.$list($whereTo);\n        panel.freeViews();\n        // console.log( 'views freed' );\n        //TODO:? cache and re-use views?\n        var shownModels = panel._filterCollection();\n        // console.log( 'models filtered:', shownModels );\n\n        panel.views = shownModels.map(function (itemModel) {\n            var view = panel._createItemView(itemModel);\n            return view;\n        });\n\n        $list.empty();\n        // console.log( 'list emptied' );\n        if (panel.views.length) {\n            panel._attachItems($whereTo);\n            // console.log( 'items attached' );\n        }\n        panel._renderEmptyMessage($whereTo).toggle(!panel.views.length);\n        panel.trigger(\"views:ready\", panel.views);\n\n        // console.log( '------------------------------------------- rendering items' );\n        return panel.views;\n    },\n\n    /** Filter the collection to only those models that should be currently viewed */\n    _filterCollection: function _filterCollection() {\n        // override this\n        var panel = this;\n        return panel.collection.filter(_.bind(panel._filterItem, panel));\n    },\n\n    /** Should the model be viewable in the current state?\n     *     Checks against this.filters and this.searchFor\n     */\n    _filterItem: function _filterItem(model) {\n        // override this\n        var panel = this;\n        return _.every(panel.filters.map(function (fn) {\n            return fn.call(model);\n        })) && (!panel.searchFor || model.matchesAll(panel.searchFor));\n    },\n\n    /** Create a view for a model and set up it's listeners */\n    _createItemView: function _createItemView(model) {\n        var ViewClass = this._getItemViewClass(model);\n        var options = _.extend(this._getItemViewOptions(model), {\n            model: model\n        });\n        var view = new ViewClass(options);\n        this._setUpItemViewListeners(view);\n        return view;\n    },\n\n    /** Free a view for a model. Note: does not remove it from the DOM */\n    _destroyItemView: function _destroyItemView(view) {\n        this.stopListening(view);\n        this.views = _.without(this.views, view);\n    },\n\n    _destroyItemViews: function _destroyItemViews(view) {\n        var self = this;\n        self.views.forEach(function (v) {\n            self.stopListening(v);\n        });\n        self.views = [];\n        return self;\n    },\n\n    /** free any sub-views the list has */\n    freeViews: function freeViews() {\n        return this._destroyItemViews();\n    },\n\n    /** Get the bbone view class based on the model */\n    _getItemViewClass: function _getItemViewClass(model) {\n        // override this\n        return this.viewClass;\n    },\n\n    /** Get the options passed to the new view based on the model */\n    _getItemViewOptions: function _getItemViewOptions(model) {\n        // override this\n        return {\n            //logger      : this.logger,\n            fxSpeed: this.fxSpeed,\n            expanded: false,\n            selectable: this.selecting,\n            selected: _.contains(this.selected, model.id),\n            draggable: this.dragItems\n        };\n    },\n\n    /** Set up listeners for new models */\n    _setUpItemViewListeners: function _setUpItemViewListeners(view) {\n        var panel = this;\n        // send all events to the panel, re-namspaceing them with the view prefix\n        this.listenTo(view, \"all\", function () {\n            var args = Array.prototype.slice.call(arguments, 0);\n            args[0] = \"view:\" + args[0];\n            panel.trigger.apply(panel, args);\n        });\n\n        // drag multiple - hijack ev.setData to add all selected items\n        this.listenTo(view, \"draggable:dragstart\", function (ev, v) {\n            //TODO: set multiple drag data here\n            var json = {};\n\n            var selected = this.getSelectedModels();\n            if (selected.length) {\n                json = selected.toJSON();\n            } else {\n                json = [v.model.toJSON()];\n            }\n            ev.dataTransfer.setData(\"text\", JSON.stringify(json));\n            //ev.dataTransfer.setDragImage( v.el, 60, 60 );\n        }, this);\n\n        return panel;\n    },\n\n    /** Attach views in this.views to the model based on $whereTo */\n    _attachItems: function _attachItems($whereTo) {\n        var self = this;\n        // console.log( '_attachItems:', $whereTo, this.$list( $whereTo ) );\n        //ASSUMES: $list has been emptied\n        this.$list($whereTo).append(this.views.map(function (view) {\n            return self._renderItemView$el(view);\n        }));\n        return this;\n    },\n\n    /** get a given subview's $el (or whatever may wrap it) and return it */\n    _renderItemView$el: function _renderItemView$el(view) {\n        // useful to wrap and override\n        return view.render(0).$el;\n    },\n\n    /** render the empty/none-found message */\n    _renderEmptyMessage: function _renderEmptyMessage($whereTo) {\n        this.debug(\"_renderEmptyMessage\", $whereTo, this.searchFor);\n        var text = this.searchFor ? this.noneFoundMsg : this.emptyMsg;\n        return this.$emptyMessage($whereTo).text(text);\n    },\n\n    /** expand all item views */\n    expandAll: function expandAll() {\n        _.each(this.views, function (view) {\n            view.expand();\n        });\n    },\n\n    /** collapse all item views */\n    collapseAll: function collapseAll() {\n        _.each(this.views, function (view) {\n            view.collapse();\n        });\n    },\n\n    // ------------------------------------------------------------------------ collection/views syncing\n    /** Add a view (if the model should be viewable) to the panel */\n    addItemView: function addItemView(model, collection, options) {\n        // console.log( this + '.addItemView:', model );\n        var panel = this;\n        // get the index of the model in the list of filtered models shown by this list\n        // in order to insert the view in the proper place\n        //TODO:? potentially expensive\n        var modelIndex = panel._filterCollection().indexOf(model);\n        if (modelIndex === -1) {\n            return undefined;\n        }\n        var view = panel._createItemView(model);\n        // console.log( 'adding and rendering:', modelIndex, view.toString() );\n\n        $(view).queue(\"fx\", [function (next) {\n            // hide the empty message first if only view\n            if (panel.$emptyMessage().is(\":visible\")) {\n                panel.$emptyMessage().fadeOut(panel.fxSpeed, next);\n            } else {\n                next();\n            }\n        }, function (next) {\n            panel._attachView(view, modelIndex);\n            next();\n        }]);\n        return view;\n    },\n\n    /** internal fn to add view (to both panel.views and panel.$list) */\n    _attachView: function _attachView(view, modelIndex, useFx) {\n        // console.log( this + '._attachView:', view, modelIndex, useFx );\n        useFx = _.isUndefined(useFx) ? true : useFx;\n        modelIndex = modelIndex || 0;\n        var panel = this;\n\n        // use the modelIndex to splice into views and insert at the proper index in the DOM\n        panel.views.splice(modelIndex, 0, view);\n        panel._insertIntoListAt(modelIndex, panel._renderItemView$el(view).hide());\n\n        panel.trigger(\"view:attached\", view);\n        if (useFx) {\n            view.$el.slideDown(panel.fxSpeed, function () {\n                panel.trigger(\"view:attached:rendered\");\n            });\n        } else {\n            view.$el.show();\n            panel.trigger(\"view:attached:rendered\");\n        }\n        return view;\n    },\n\n    /** insert a jq object as a child of list-items at the specified *DOM index* */\n    _insertIntoListAt: function _insertIntoListAt(index, $what) {\n        // console.log( this + '._insertIntoListAt:', index, $what );\n        var $list = this.$list();\n        if (index === 0) {\n            $list.prepend($what);\n        } else {\n            $list.children().eq(index - 1).after($what);\n        }\n        return $what;\n    },\n\n    /** Remove a view from the panel (if found) */\n    removeItemView: function removeItemView(model, collection, options) {\n        var panel = this;\n        var view = _.find(panel.views, function (v) {\n            return v.model === model;\n        });\n        if (!view) {\n            return undefined;\n        }\n        panel.views = _.without(panel.views, view);\n        panel.trigger(\"view:removed\", view);\n\n        // potentially show the empty message if no views left\n        // use anonymous queue here - since remove can happen multiple times\n        $({}).queue(\"fx\", [function (next) {\n            view.$el.fadeOut(panel.fxSpeed, next);\n        }, function (next) {\n            view.remove();\n            panel.trigger(\"view:removed:rendered\");\n            if (!panel.views.length) {\n                panel._renderEmptyMessage().fadeIn(panel.fxSpeed, next);\n            } else {\n                next();\n            }\n        }]);\n        return view;\n    },\n\n    /** get views based on model.id */\n    viewFromModelId: function viewFromModelId(id) {\n        return _.find(this.views, function (v) {\n            return v.model.id === id;\n        });\n    },\n\n    /** get views based on model */\n    viewFromModel: function viewFromModel(model) {\n        return model ? this.viewFromModelId(model.id) : undefined;\n    },\n\n    /** get views based on model properties */\n    viewsWhereModel: function viewsWhereModel(properties) {\n        return this.views.filter(function (view) {\n            return _.isMatch(view.model.attributes, properties);\n        });\n    },\n\n    /** A range of views between (and including) viewA and viewB */\n    viewRange: function viewRange(viewA, viewB) {\n        if (viewA === viewB) {\n            return viewA ? [viewA] : [];\n        }\n\n        var indexA = this.views.indexOf(viewA);\n        var indexB = this.views.indexOf(viewB);\n\n        // handle not found\n        if (indexA === -1 || indexB === -1) {\n            if (indexA === indexB) {\n                return [];\n            }\n            return indexA === -1 ? [viewB] : [viewA];\n        }\n        // reverse if indeces are\n        //note: end inclusive\n        return indexA < indexB ? this.views.slice(indexA, indexB + 1) : this.views.slice(indexB, indexA + 1);\n    },\n\n    // ------------------------------------------------------------------------ searching\n    /** render a search input for filtering datasets shown\n     *      (see SearchableMixin in base-mvc for implementation of the actual searching)\n     *      return will start the search\n     *      esc will clear the search\n     *      clicking the clear button will clear the search\n     *      uses searchInput in ui.js\n     */\n    _renderSearch: function _renderSearch($where) {\n        $where.find(\".controls .search-input\").searchInput({\n            placeholder: this.searchPlaceholder,\n            initialVal: this.searchFor,\n            onfirstsearch: _.bind(this._firstSearch, this),\n            onsearch: _.bind(this.searchItems, this),\n            onclear: _.bind(this.clearSearch, this)\n        });\n        return $where;\n    },\n\n    /** What to do on the first search entered */\n    _firstSearch: function _firstSearch(searchFor) {\n        // override to load model details if necc.\n        this.log(\"onFirstSearch\", searchFor);\n        return this.searchItems(searchFor);\n    },\n\n    /** filter view list to those that contain the searchFor terms */\n    searchItems: function searchItems(searchFor, force) {\n        this.log(\"searchItems\", searchFor, this.searchFor, force);\n        if (!force && this.searchFor === searchFor) {\n            return this;\n        }\n        this.searchFor = searchFor;\n        this.renderItems();\n        this.trigger(\"search:searching\", searchFor, this);\n        var $search = this.$(\"> .controls .search-query\");\n        if ($search.val() !== searchFor) {\n            $search.val(searchFor);\n        }\n        return this;\n    },\n\n    /** clear the search filters and show all views that are normally shown */\n    clearSearch: function clearSearch(searchFor) {\n        //this.log( 'onSearchClear', this );\n        this.searchFor = \"\";\n        this.trigger(\"search:clear\", this);\n        this.$(\"> .controls .search-query\").val(\"\");\n        this.renderItems();\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ selection\n    /** @type Integer when the number of list item views is >= to this, don't animate selectors */\n    THROTTLE_SELECTOR_FX_AT: 20,\n\n    /** show selectors on all visible itemViews and associated controls */\n    showSelectors: function showSelectors(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        this.selecting = true;\n        this.$(\".list-actions\").slideDown(speed);\n        speed = this.views.length >= this.THROTTLE_SELECTOR_FX_AT ? 0 : speed;\n        _.each(this.views, function (view) {\n            view.showSelector(speed);\n        });\n        //this.selected = [];\n        //this.lastSelected = null;\n    },\n\n    /** hide selectors on all visible itemViews and associated controls */\n    hideSelectors: function hideSelectors(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        this.selecting = false;\n        this.$(\".list-actions\").slideUp(speed);\n        speed = this.views.length >= this.THROTTLE_SELECTOR_FX_AT ? 0 : speed;\n        _.each(this.views, function (view) {\n            view.hideSelector(speed);\n        });\n        this.selected = [];\n        this.lastSelected = null;\n    },\n\n    /** show or hide selectors on all visible itemViews and associated controls */\n    toggleSelectors: function toggleSelectors() {\n        if (!this.selecting) {\n            this.showSelectors();\n        } else {\n            this.hideSelectors();\n        }\n    },\n\n    /** select all visible items */\n    selectAll: function selectAll(event) {\n        _.each(this.views, function (view) {\n            view.select(event);\n        });\n    },\n\n    /** deselect all visible items */\n    deselectAll: function deselectAll(event) {\n        this.lastSelected = null;\n        _.each(this.views, function (view) {\n            view.deselect(event);\n        });\n    },\n\n    /** select a range of datasets between A and B */\n    selectRange: function selectRange(viewA, viewB) {\n        var range = this.viewRange(viewA, viewB);\n        _.each(range, function (view) {\n            view.select();\n        });\n        return range;\n    },\n\n    /** return an array of all currently selected itemViews */\n    getSelectedViews: function getSelectedViews() {\n        return _.filter(this.views, function (v) {\n            return v.selected;\n        });\n    },\n\n    /** return a collection of the models of all currenly selected items */\n    getSelectedModels: function getSelectedModels() {\n        // console.log( '(getSelectedModels)' );\n        return new this.collection.constructor(_.map(this.getSelectedViews(), function (view) {\n            return view.model;\n        }));\n    },\n\n    // ------------------------------------------------------------------------ loading indicator\n    /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n    _showLoadingIndicator: function _showLoadingIndicator(msg, speed, callback) {\n        this.debug(\"_showLoadingIndicator\", this.indicator, msg, speed, callback);\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        if (!this.indicator) {\n            this.indicator = new _loadingIndicator2.default(this.$el);\n            this.debug(\"\\t created\", this.indicator);\n        }\n        if (!this.$el.is(\":visible\")) {\n            this.indicator.show(0, callback);\n        } else {\n            this.$el.fadeOut(speed);\n            this.indicator.show(msg, speed, callback);\n        }\n    },\n\n    /** hide the loading indicator */\n    _hideLoadingIndicator: function _hideLoadingIndicator(speed, callback) {\n        this.debug(\"_hideLoadingIndicator\", this.indicator, speed, callback);\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        if (this.indicator) {\n            this.indicator.hide(speed, callback);\n        }\n    },\n\n    // ------------------------------------------------------------------------ scrolling\n    /** get the current scroll position of the panel in its parent */\n    scrollPosition: function scrollPosition() {\n        return this.$scrollContainer().scrollTop();\n    },\n\n    /** set the current scroll position of the panel in its parent */\n    scrollTo: function scrollTo(pos, speed) {\n        speed = speed || 0;\n        this.$scrollContainer().animate({ scrollTop: pos }, speed);\n        return this;\n    },\n\n    /** Scrolls the panel to the top. */\n    scrollToTop: function scrollToTop(speed) {\n        return this.scrollTo(0, speed);\n    },\n\n    /** scroll to the given view in list-items */\n    scrollToItem: function scrollToItem(view, speed) {\n        if (!view) {\n            return this;\n        }\n        return this;\n    },\n\n    /** Scrolls the panel to show the content with the given id. */\n    scrollToId: function scrollToId(id, speed) {\n        return this.scrollToItem(this.viewFromModelId(id), speed);\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events: {\n        \"click .select-all\": \"selectAll\",\n        \"click .deselect-all\": \"deselectAll\"\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString: function toString() {\n        return \"ListPanel(\" + this.collection + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListPanel.prototype.templates = function () {\n    var elTemplate = _baseMvc2.default.wrapTemplate([\n    // temp container\n    \"<div>\", '<div class=\"controls\"></div>', '<div class=\"list-items\"></div>', '<div class=\"empty-message infomessagesmall\"></div>', \"</div>\"]);\n\n    var controlsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"controls\">', '<div class=\"title\">', '<div class=\"name\"><%- view.title %></div>', \"</div>\", '<div class=\"subtitle\"><%- view.subtitle %></div>',\n    // buttons, controls go here\n    '<div class=\"actions\"></div>',\n    // deleted msg, etc.\n    '<div class=\"messages\"></div>', '<div class=\"search\">', '<div class=\"search-input\"></div>', \"</div>\",\n\n    // show when selectors are shown\n    '<div class=\"list-actions\">', '<div class=\"btn-group\">', '<button class=\"select-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"All\"), \"</button>\", '<button class=\"deselect-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"None\"), \"</button>\", \"</div>\", '<div class=\"list-action-menu btn-group\">', \"</div>\", \"</div>\", \"</div>\"]);\n\n    return {\n        el: elTemplate,\n        controls: controlsTemplate\n    };\n}();\n\n//=============================================================================\n/** View for a model that has a sub-collection (e.g. History, DatasetCollection)\n *  Allows:\n *      the model to be reset\n *      auto assign panel.collection to panel.model[ panel.modelCollectionKey ]\n *\n */\nvar ModelListPanel = ListPanel.extend({\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey: \"contents\",\n\n    initialize: function initialize(attributes) {\n        ListPanel.prototype.initialize.call(this, attributes);\n        this.selecting = attributes.selecting !== undefined ? attributes.selecting : false;\n\n        this.setModel(this.model, attributes);\n    },\n\n    /** release/free/shutdown old models and set up panel for new models\n     *  @fires new-model with the panel as parameter\n     */\n    setModel: function setModel(model, attributes) {\n        attributes = attributes || {};\n        this.debug(this + \".setModel:\", model, attributes);\n\n        this.freeModel();\n        this.freeViews();\n\n        if (model) {\n            var oldModelId = this.model ? this.model.get(\"id\") : null;\n\n            // set up the new model with user, logger, storage, events\n            this.model = model;\n            if (this.logger) {\n                this.model.logger = this.logger;\n            }\n            this._setUpModelListeners();\n\n            //TODO: relation btwn model, collection becoming tangled here\n            // free the collection, and assign the new collection to either\n            //  the model[ modelCollectionKey ], attributes.collection, or an empty vanilla collection\n            this.stopListening(this.collection);\n            this.collection = this.model[this.modelCollectionKey] || attributes.collection || this._createDefaultCollection();\n            this._setUpCollectionListeners();\n\n            if (oldModelId && model.get(\"id\") !== oldModelId) {\n                this.trigger(\"new-model\", this);\n            }\n        }\n        return this;\n    },\n\n    /** free the current model and all listeners for it, free any views for the model */\n    freeModel: function freeModel() {\n        // stop/release the previous model, and clear cache to sub-views\n        if (this.model) {\n            this.stopListening(this.model);\n            //TODO: see base-mvc\n            //this.model.free();\n            //this.model = null;\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ listening\n    /** listening for model events */\n    _setUpModelListeners: function _setUpModelListeners() {\n        // override\n        this.log(this + \"._setUpModelListeners\", this.model);\n        // bounce model errors up to the panel\n        this.listenTo(this.model, \"error\", function () {\n            var args = Array.prototype.slice.call(arguments, 0);\n            //args.unshift( 'model:error' );\n            args.unshift(\"error\");\n            this.trigger.apply(this, args);\n        }, this);\n\n        // debugging\n        if (this.logger) {\n            this.listenTo(this.model, \"all\", function (event) {\n                this.info(this + \"(model)\", event, arguments);\n            });\n        }\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     */\n    _renderControls: function _renderControls($newRender) {\n        this.debug(this + \"(ModelListPanel)._renderControls\");\n        var json = this.model ? this.model.toJSON() : {};\n        var $controls = $(this.templates.controls(json, this));\n        $newRender.find(\".controls\").replaceWith($controls);\n        return $controls;\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString: function toString() {\n        return \"ModelListPanel(\" + this.model + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nModelListPanel.prototype.templates = function () {\n    var controlsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"controls\">', '<div class=\"title\">',\n    //TODO: this is really the only difference - consider factoring titlebar out\n    '<div class=\"name\"><%- model.name %></div>', \"</div>\", '<div class=\"subtitle\"><%- view.subtitle %></div>', '<div class=\"actions\"></div>', '<div class=\"messages\"></div>', '<div class=\"search\">', '<div class=\"search-input\"></div>', \"</div>\", '<div class=\"list-actions\">', '<div class=\"btn-group\">', '<button class=\"select-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"All\"), \"</button>\", '<button class=\"deselect-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"None\"), \"</button>\", \"</div>\", '<div class=\"list-action-menu btn-group\">', \"</div>\", \"</div>\", \"</div>\"]);\n\n    return _.extend(_.clone(ListPanel.prototype.templates), {\n        controls: controlsTemplate\n    });\n}();\n\n//=============================================================================\nexports.default = {\n    ListPanel: ListPanel,\n    ModelListPanel: ModelListPanel\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\"use_strict\";\n\nvar $ = _jquery2.default;\nvar _l = window._l || function (s) {\n    return s;\n};\n\n//TODO: consolidate with tool menu functionality, use there\n\n/** searchInput: (jQuery plugin)\n *      Creates a search input, a clear button, and loading indicator\n *      within the selected node.\n *\n *      When the user either presses return or enters some minimal number\n *      of characters, a callback is called. Pressing ESC when the input\n *      is focused will clear the input and call a separate callback.\n */\nfunction searchInput(parentNode, options) {\n    var KEYCODE_ESC = 27;\n    var KEYCODE_RETURN = 13;\n    var $parentNode = $(parentNode);\n    var firstSearch = true;\n\n    var defaults = {\n        initialVal: \"\",\n        name: \"search\",\n        placeholder: \"search\",\n        classes: \"\",\n        onclear: function onclear() {},\n        onfirstsearch: null,\n        onsearch: function onsearch(inputVal) {},\n        minSearchLen: 0,\n        escWillClear: true,\n        oninit: function oninit() {}\n    };\n\n    // .................................................................... input rendering and events\n    // visually clear the search, trigger an event, and call the callback\n    function clearSearchInput(event) {\n        var $input = $(this).parent().children(\"input\");\n        $input.val(\"\").trigger(\"searchInput.clear\").blur();\n        options.onclear();\n    }\n\n    // search for searchTerms, trigger an event, call the appropo callback (based on whether this is the first)\n    function search(event, searchTerms) {\n        if (!searchTerms) {\n            return clearSearchInput();\n        }\n        $(this).trigger(\"search.search\", searchTerms);\n        if (typeof options.onfirstsearch === \"function\" && firstSearch) {\n            firstSearch = false;\n            options.onfirstsearch(searchTerms);\n        } else {\n            options.onsearch(searchTerms);\n        }\n    }\n\n    // .................................................................... input rendering and events\n    function inputTemplate() {\n        // class search-query is bootstrap 2.3 style that now lives in base.less\n        return ['<input type=\"text\" name=\"', options.name, '\" placeholder=\"', options.placeholder, '\" ', 'class=\"search-query ', options.classes, '\" ', \"/>\"].join(\"\");\n    }\n\n    // the search input that responds to keyboard events and displays the search value\n    function $input() {\n        return $(inputTemplate())\n        // select all text on a focus\n        .focus(function (event) {\n            $(this).select();\n        })\n        // attach behaviors to esc, return if desired, search on some min len string\n        .keyup(function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            // esc key will clear if desired\n            if (event.which === KEYCODE_ESC && options.escWillClear) {\n                clearSearchInput.call(this, event);\n            } else {\n                var searchTerms = $(this).val();\n                // return key or the search string len > minSearchLen (if not 0) triggers search\n                if (event.which === KEYCODE_RETURN || options.minSearchLen && searchTerms.length >= options.minSearchLen) {\n                    search.call(this, event, searchTerms);\n                }\n            }\n        }).val(options.initialVal);\n    }\n\n    // .................................................................... clear button rendering and events\n    // a button for clearing the search bar, placed on the right hand side\n    function $clearBtn() {\n        return $(['<span class=\"search-clear fa fa-times-circle\" ', 'title=\"', _l(\"clear search (esc)\"), '\"></span>'].join(\"\")).tooltip({ placement: \"bottom\" }).click(function (event) {\n            clearSearchInput.call(this, event);\n        });\n    }\n\n    // .................................................................... loadingIndicator rendering\n    // a button for clearing the search bar, placed on the right hand side\n    function $loadingIndicator() {\n        return $(['<span class=\"search-loading fa fa-spinner fa-spin\" ', 'title=\"', _l(\"loading...\"), '\"></span>'].join(\"\")).hide().tooltip({ placement: \"bottom\" });\n    }\n\n    // .................................................................... commands\n    // visually swap the load, clear buttons\n    function toggleLoadingIndicator() {\n        $parentNode.find(\".search-loading\").toggle();\n        $parentNode.find(\".search-clear\").toggle();\n    }\n\n    // .................................................................... init\n    // string command (not constructor)\n    if (_jquery2.default.type(options) === \"string\") {\n        if (options === \"toggle-loading\") {\n            toggleLoadingIndicator();\n        }\n        return $parentNode;\n    }\n\n    // initial render\n    if (_jquery2.default.type(options) === \"object\") {\n        options = _jquery2.default.extend(true, {}, defaults, options);\n    }\n    //NOTE: prepended\n    return $parentNode.addClass(\"search-input\").prepend([$input(), $clearBtn(), $loadingIndicator()]);\n}\n\n// as jq plugin\n_jquery2.default.fn.extend({\n    searchInput: function $searchInput(options) {\n        return this.each(function () {\n            return searchInput(this, options);\n        });\n    }\n});\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _datasetLi = __webpack_require__(86);\n\nvar _datasetLi2 = _interopRequireDefault(_datasetLi);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _datasetLi2.default.DatasetListItemView;\n/** @class Read only view for HistoryDatasetAssociation.\n *      Since there are no controls on the HDAView to hide the dataset,\n *      the primary thing this class does (currently) is override templates\n *      to render the HID.\n */\nvar HDAListItemView = _super.extend(\n/** @lends HDAListItemView.prototype */{\n    className: _super.prototype.className + \" history-content\",\n\n    initialize: function initialize(attributes, options) {\n        _super.prototype.initialize.call(this, attributes, options);\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"HDAListItemView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemView.prototype.templates = function () {\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate([\n    // adding the hid display to the title\n    '<div class=\"title-bar clear\" tabindex=\"0\">', '<span class=\"state-icon\"></span>', '<div class=\"title\">',\n    //TODO: remove whitespace and use margin-right\n    '<span class=\"hid\"><%- dataset.hid %></span> ', '<span class=\"name\"><%- dataset.name %></span>', \"</div>\", \"</br>\", '<span class=\"nametags\">', \"<% _.each(_.sortBy(_.uniq(dataset.tags), function(x) { return x }), function(tag){ %>\", '<% if (tag.indexOf(\"name:\") == 0){ %>', '<span class=\"label label-info\"><%- tag.slice(5) %></span>', \"<% } %>\", \"<% }); %>\", \"</span>\", \"</div>\"], \"dataset\");\n\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: _baseMvc2.default.wrapTemplate([\n        // add a warning when hidden\n        \"<% if( !dataset.visible ){ %>\", '<div class=\"hidden-msg warningmessagesmall\">', (0, _localization2.default)(\"This dataset has been hidden\"), \"</div>\", \"<% } %>\"], \"dataset\")\n    });\n\n    return _.extend({}, _super.prototype.templates, {\n        titleBar: titleBarTemplate,\n        warnings: warnings\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    HDAListItemView: HDAListItemView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _states = __webpack_require__(46);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _collectionLi = __webpack_require__(87);\n\nvar _collectionLi2 = _interopRequireDefault(_collectionLi);\n\nvar _collectionView = __webpack_require__(133);\n\nvar _collectionView2 = _interopRequireDefault(_collectionView);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _collectionLi2.default.DCListItemView;\n/** @class Read only view for HistoryDatasetCollectionAssociation (a dataset collection inside a history).\n */\nvar HDCAListItemView = _super.extend(\n/** @lends HDCAListItemView.prototype */{\n    className: _super.prototype.className + \" history-content\",\n\n    /** event listeners */\n    _setUpListeners: function _setUpListeners() {\n        _super.prototype._setUpListeners.call(this);\n        this.listenTo(this.model, {\n            \"change:tags change:populated change:visible\": function changeTagsChangePopulatedChangeVisible(model, options) {\n                this.render();\n            }\n        });\n    },\n\n    /** Override to provide the proper collections panels as the foldout */\n    _getFoldoutPanelClass: function _getFoldoutPanelClass() {\n        switch (this.model.get(\"collection_type\")) {\n            case \"list\":\n                return _collectionView2.default.ListCollectionView;\n            case \"paired\":\n                return _collectionView2.default.PairCollectionView;\n            case \"list:paired\":\n                return _collectionView2.default.ListOfPairsCollectionView;\n            case \"list:list\":\n                return _collectionView2.default.ListOfListsCollectionView;\n        }\n        throw new TypeError(\"Uknown collection_type: \" + this.model.get(\"collection_type\"));\n    },\n\n    /** In this override, add the state as a class for use with state-based CSS */\n    _swapNewRender: function _swapNewRender($newRender) {\n        _super.prototype._swapNewRender.call(this, $newRender);\n        //TODO: model currently has no state\n        var state = !this.model.get(\"populated\") ? _states2.default.RUNNING : _states2.default.OK;\n        //if( this.model.has( 'state' ) ){\n        this.$el.addClass(\"state-\" + state);\n        //}\n        return this.$el;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"HDCAListItemView(\" + modelString + \")\";\n    }\n});\n\n/** underscore templates */\nHDCAListItemView.prototype.templates = function () {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: _baseMvc2.default.wrapTemplate([\n        // add a warning when hidden\n        \"<% if( !collection.visible ){ %>\", '<div class=\"hidden-msg warningmessagesmall\">', (0, _localization2.default)(\"This collection has been hidden\"), \"</div>\", \"<% } %>\"], \"collection\")\n    });\n\n    // could steal this from hda-base (or use mixed content)\n    var titleBarTemplate = _baseMvc2.default.wrapTemplate([\n    // adding the hid display to the title\n    '<div class=\"title-bar clear\" tabindex=\"0\">', '<span class=\"state-icon\"></span>', '<div class=\"title\">',\n    //TODO: remove whitespace and use margin-right\n    '<span class=\"hid\"><%- collection.hid %></span> ', '<span class=\"name\"><%- collection.name %></span>', \"</div>\", '<div class=\"subtitle\"></div>', '<span class=\"nametags\">', \"<% _.each(_.sortBy(_.uniq(collection.tags), function(x) { return x }), function(tag){ %>\", '<% if (tag.indexOf(\"name:\") == 0){ %>', '<span class=\"label label-info\"><%- tag.slice(5) %></span>', \"<% } %>\", \"<% }); %>\", \"</span>\", \"</div>\"], \"collection\");\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    HDCAListItemView: HDCAListItemView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listView = __webpack_require__(129);\n\nvar _listView2 = _interopRequireDefault(_listView);\n\nvar _collectionModel = __webpack_require__(80);\n\nvar _collectionModel2 = _interopRequireDefault(_collectionModel);\n\nvar _collectionLi = __webpack_require__(87);\n\nvar _collectionLi2 = _interopRequireDefault(_collectionLi);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"collections\";\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class non-editable, read-only View/Controller for a dataset collection.\n */\nvar _super = _listView2.default.ModelListPanel;\nvar CollectionView = _super.extend(\n/** @lends CollectionView.prototype */{\n    //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n    _logNamespace: logNamespace,\n\n    className: _super.prototype.className + \" dataset-collection-panel\",\n\n    /** sub view class used for datasets */\n    DatasetDCEViewClass: _collectionLi2.default.DatasetDCEListItemView,\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLi2.default.NestedDCDCEListItemView,\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey: \"elements\",\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the panel\n     */\n    initialize: function initialize(attributes) {\n        _super.prototype.initialize.call(this, attributes);\n        this.linkTarget = attributes.linkTarget || \"_blank\";\n\n        this.hasUser = attributes.hasUser;\n        /** A stack of panels that currently cover or hide this panel */\n        this.panelStack = [];\n        /** The text of the link to go back to the panel containing this one */\n        this.parentName = attributes.parentName;\n        /** foldout or drilldown */\n        this.foldoutStyle = attributes.foldoutStyle || \"foldout\";\n        this.downloadUrl = Galaxy.root + \"api/dataset_collections/\" + this.model.attributes.id + \"/download\";\n    },\n\n    _queueNewRender: function _queueNewRender($newRender, speed) {\n        speed = speed === undefined ? this.fxSpeed : speed;\n        var panel = this;\n        panel.log(\"_queueNewRender:\", $newRender, speed);\n\n        // TODO: jquery@1.12 doesn't change display when the elem has display: flex\n        // this causes display: block for those elems after the use of show/hide animations\n        // animations are removed from this view for now until fixed\n        panel._swapNewRender($newRender);\n        panel.trigger(\"rendered\", panel);\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** In this override, use model.getVisibleContents */\n    _filterCollection: function _filterCollection() {\n        //TODO: should *not* be model.getVisibleContents - visibility is not model related\n        return this.model.getVisibleContents();\n    },\n\n    /** override to return proper view class based on element_type */\n    _getItemViewClass: function _getItemViewClass(model) {\n        //this.debug( this + '._getItemViewClass:', model );\n        //TODO: subclasses use DCEViewClass - but are currently unused - decide\n        switch (model.get(\"element_type\")) {\n            case \"hda\":\n                return this.DatasetDCEViewClass;\n            case \"dataset_collection\":\n                return this.NestedDCDCEViewClass;\n        }\n        throw new TypeError(\"Unknown element type:\", model.get(\"element_type\"));\n    },\n\n    /** override to add link target and anon */\n    _getItemViewOptions: function _getItemViewOptions(model) {\n        var options = _super.prototype._getItemViewOptions.call(this, model);\n        return _.extend(options, {\n            linkTarget: this.linkTarget,\n            hasUser: this.hasUser,\n            //TODO: could move to only nested: list:paired\n            foldoutStyle: this.foldoutStyle\n        });\n    },\n\n    // ------------------------------------------------------------------------ collection sub-views\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners: function _setUpItemViewListeners(view) {\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call(panel, view);\n\n        // use pub-sub to: handle drilldown expansion and collapse\n        panel.listenTo(view, {\n            \"expanded:drilldown\": function expandedDrilldown(v, drilldown) {\n                this._expandDrilldownPanel(drilldown);\n            },\n            \"collapsed:drilldown\": function collapsedDrilldown(v, drilldown) {\n                this._collapseDrilldownPanel(drilldown);\n            }\n        });\n        return this;\n    },\n\n    /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n    _expandDrilldownPanel: function _expandDrilldownPanel(drilldown) {\n        this.panelStack.push(drilldown);\n        // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n        this.$(\"> .controls\").add(this.$list()).hide();\n        drilldown.parentName = this.model.get(\"name\");\n        this.$el.append(drilldown.render().$el);\n    },\n\n    /** Handle drilldown close by freeing the panel and re-rendering this panel */\n    _collapseDrilldownPanel: function _collapseDrilldownPanel(drilldown) {\n        this.panelStack.pop();\n        this.render();\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events: {\n        \"click .navigation .back\": \"close\"\n    },\n\n    /** close/remove this collection panel */\n    close: function close(event) {\n        this.remove();\n        this.trigger(\"close\");\n    },\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"CollectionView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//------------------------------------------------------------------------------ TEMPLATES\nCollectionView.prototype.templates = function () {\n    var controlsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"controls\">', '<div class=\"navigation\">', '<a class=\"back\" href=\"javascript:void(0)\">', '<span class=\"fa fa-icon fa-angle-left\"></span>', (0, _localization2.default)(\"Back to \"), \"<%- view.parentName %>\", \"</a>\", \"</div>\", '<div class=\"title\">', '<div class=\"name\"><%- collection.name || collection.element_identifier %></div>', '<div class=\"subtitle\">', '<% if( collection.collection_type === \"list\" ){ %>', (0, _localization2.default)(\"a list of datasets\"), '<% } else if( collection.collection_type === \"paired\" ){ %>', (0, _localization2.default)(\"a pair of datasets\"), '<% } else if( collection.collection_type === \"list:paired\" ){ %>', (0, _localization2.default)(\"a list of paired datasets\"), '<% } else if( collection.collection_type === \"list:list\" ){ %>', (0, _localization2.default)(\"a list of dataset lists\"), \"<% } %>\", \"</div>\", \"</div>\", '<div class=\"tags-display\"></div>', '<div class=\"actions\">', '<a class=\"download-btn icon-btn\" ', 'href=\"<%- view.downloadUrl %>', '\" title=\"\" download=\"\" data-original-title=\"Download Collection\">', '<span class=\"fa fa-floppy-o\"></span>', \"</a>\", \"</div>\", \"</div>\"], \"collection\");\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        controls: controlsTemplate\n    });\n}();\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionView = CollectionView.extend(\n/** @lends ListCollectionView.prototype */{\n    //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n    /** sub view class used for datasets */\n    DatasetDCEViewClass: _collectionLi2.default.DatasetDCEListItemView,\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListCollectionView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionView = ListCollectionView.extend(\n/** @lends PairCollectionView.prototype */{\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"PairCollectionView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListOfPairsCollectionView = CollectionView.extend(\n/** @lends ListOfPairsCollectionView.prototype */{\n    //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLi2.default.NestedDCDCEListItemView.extend({\n        foldoutPanelClass: PairCollectionView\n    }),\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListOfPairsCollectionView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a list of lists dataset collection. */\nvar ListOfListsCollectionView = CollectionView.extend({\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLi2.default.NestedDCDCEListItemView.extend({\n        foldoutPanelClass: PairCollectionView\n    }),\n\n    /** string rep */\n    toString: function toString() {\n        return \"ListOfListsCollectionView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    CollectionView: CollectionView,\n    ListCollectionView: ListCollectionView,\n    PairCollectionView: PairCollectionView,\n    ListOfPairsCollectionView: ListOfPairsCollectionView,\n    ListOfListsCollectionView: ListOfListsCollectionView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _states = __webpack_require__(46);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _datasetLi = __webpack_require__(86);\n\nvar _datasetLi2 = _interopRequireDefault(_datasetLi);\n\nvar _tag = __webpack_require__(67);\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _annotation = __webpack_require__(135);\n\nvar _annotation2 = _interopRequireDefault(_annotation);\n\nvar _faIconButton = __webpack_require__(49);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _datasetLi2.default.DatasetListItemView;\n/** @class Editing view for DatasetAssociation.\n */\nvar DatasetListItemEdit = _super.extend(\n/** @lends DatasetListItemEdit.prototype */{\n    /** set up: options */\n    initialize: function initialize(attributes) {\n        _super.prototype.initialize.call(this, attributes);\n        this.hasUser = attributes.hasUser;\n\n        /** allow user purge of dataset files? */\n        this.purgeAllowed = attributes.purgeAllowed || false;\n\n        //TODO: move to HiddenUntilActivatedViewMixin\n        /** should the tags editor be shown or hidden initially? */\n        this.tagsEditorShown = attributes.tagsEditorShown || false;\n        /** should the tags editor be shown or hidden initially? */\n        this.annotationEditorShown = attributes.annotationEditorShown || false;\n    },\n\n    // ......................................................................... titlebar actions\n    /** In this override, add the other two primary actions: edit and delete */\n    _renderPrimaryActions: function _renderPrimaryActions() {\n        var actions = _super.prototype._renderPrimaryActions.call(this);\n        if (this.model.get(\"state\") === _states2.default.NOT_VIEWABLE) {\n            return actions;\n        }\n        // render the display, edit attr and delete icon-buttons\n        return _super.prototype._renderPrimaryActions.call(this).concat([this._renderEditButton(), this._renderDeleteButton()]);\n    },\n\n    //TODO: move titleButtons into state renderers, remove state checks in the buttons\n\n    /** Render icon-button to edit the attributes (format, permissions, etc.) this dataset. */\n    _renderEditButton: function _renderEditButton() {\n        var self = this;\n        // don't show edit while uploading, in-accessible\n        // DO show if in error (ala previous history panel)\n        if (this.model.get(\"state\") === _states2.default.DISCARDED || !this.model.get(\"accessible\")) {\n            return null;\n        }\n        var purged = this.model.get(\"purged\");\n        var deleted = this.model.get(\"deleted\");\n\n        var editBtnData = {\n            title: (0, _localization2.default)(\"Edit attributes\"),\n            href: Galaxy.root + \"datasets/edit?dataset_id=\" + this.model.attributes.id,\n            faIcon: \"fa-pencil\",\n            classes: \"edit-btn\",\n            onclick: function onclick(ev) {\n                if (Galaxy.router) {\n                    ev.preventDefault();\n                    Galaxy.router.push(\"datasets/edit\", {\n                        dataset_id: self.model.attributes.id\n                    });\n                }\n            }\n        };\n\n        // disable if purged or deleted and explain why in the tooltip\n        if (deleted || purged) {\n            editBtnData.disabled = true;\n            if (purged) {\n                editBtnData.title = (0, _localization2.default)(\"Cannot edit attributes of datasets removed from disk\");\n            } else if (deleted) {\n                editBtnData.title = (0, _localization2.default)(\"Undelete dataset to edit attributes\");\n            }\n\n            // disable if still uploading or new\n        } else if (_.contains([_states2.default.UPLOAD, _states2.default.NEW], this.model.get(\"state\"))) {\n            editBtnData.disabled = true;\n            editBtnData.title = (0, _localization2.default)(\"This dataset is not yet editable\");\n        }\n        return (0, _faIconButton2.default)(editBtnData);\n    },\n\n    /** Render icon-button to delete this hda. */\n    _renderDeleteButton: function _renderDeleteButton() {\n        // don't show delete if...\n        if (!this.model.get(\"accessible\")) {\n            return null;\n        }\n\n        var self = this;\n        var deletedAlready = this.model.isDeletedOrPurged();\n        return (0, _faIconButton2.default)({\n            title: !deletedAlready ? (0, _localization2.default)(\"Delete\") : (0, _localization2.default)(\"Dataset is already deleted\"),\n            disabled: deletedAlready,\n            faIcon: \"fa-times\",\n            classes: \"delete-btn\",\n            onclick: function onclick() {\n                // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                self.model[\"delete\"]();\n            }\n        });\n    },\n\n    // ......................................................................... details\n    /** In this override, add tags and annotations controls, make the ? dbkey a link to editing page */\n    _renderDetails: function _renderDetails() {\n        //TODO: generalize to be allow different details for each state\n        var $details = _super.prototype._renderDetails.call(this);\n\n        var state = this.model.get(\"state\");\n\n        if (!this.model.isDeletedOrPurged() && _.contains([_states2.default.OK, _states2.default.FAILED_METADATA], state)) {\n            this._renderTags($details);\n            this._renderAnnotation($details);\n            this._makeDbkeyEditLink($details);\n        }\n\n        this._setUpBehaviors($details);\n        return $details;\n    },\n\n    /**************************************************************************\n     * Render help button to show tool help text without rerunning the tool.\n     * Issue #2100\n     */\n    _renderToolHelpButton: function _renderToolHelpButton() {\n        var datasetID = this.model.attributes.dataset_id;\n        var jobID = this.model.attributes.creating_job;\n        var self = this;\n\n        var parseToolBuild = function parseToolBuild(data) {\n            var helpString = \"<div id=\\\"thdiv-\" + datasetID + \"\\\" class=\\\"toolhelp\\\">\";\n            if (data.name && data.help) {\n                helpString += \"<strong>Tool help for \" + data.name + \"</strong><hr/>\";\n                helpString += data.help;\n            } else {\n                helpString += \"<strong>Tool help is unavailable for this dataset.</strong><hr/>\";\n            }\n            helpString += \"</div>\";\n            self.$el.find(\".details\").append($.parseHTML(helpString));\n        };\n        var parseToolID = function parseToolID(data) {\n            $.ajax({\n                url: Galaxy.root + \"api/tools/\" + data.tool_id + \"/build\"\n            }).done(function (data) {\n                parseToolBuild(data);\n            }).fail(function () {\n                parseToolBuild({});\n            });\n        };\n        if (Galaxy.user.id === null) {\n            return null;\n        }\n        return (0, _faIconButton2.default)({\n            title: (0, _localization2.default)(\"Tool Help\"),\n            classes: \"icon-btn\",\n            href: \"#\",\n            faIcon: \"fa-question\",\n            onclick: function onclick() {\n                var divString = \"thdiv-\" + datasetID;\n                if (self.$el.find(\".toolhelp\").length > 0) {\n                    self.$el.find(\".toolhelp\").toggle();\n                } else {\n                    $.ajax({\n                        url: Galaxy.root + \"api/jobs/\" + jobID\n                    }).done(function (data) {\n                        parseToolID(data);\n                    }).fail(function () {\n                        console.log(\"Failed at recovering job information from the  Galaxy API for job id \\\"\" + jobID + \"\\\".\");\n                    });\n                }\n            }\n        });\n    },\n    //*************************************************************************\n\n    /** Add less commonly used actions in the details section based on state */\n    _renderSecondaryActions: function _renderSecondaryActions() {\n        var actions = _super.prototype._renderSecondaryActions.call(this);\n        switch (this.model.get(\"state\")) {\n            case _states2.default.UPLOAD:\n            case _states2.default.NOT_VIEWABLE:\n                return actions;\n            case _states2.default.ERROR:\n                // error button comes first\n                actions.unshift(this._renderErrButton());\n                return actions.concat([this._renderRerunButton(), this._renderToolHelpButton()]);\n            case _states2.default.OK:\n            case _states2.default.FAILED_METADATA:\n                return actions.concat([this._renderRerunButton(), this._renderVisualizationsButton(), this._renderToolHelpButton()]);\n        }\n        return actions.concat([this._renderRerunButton(), this._renderToolHelpButton()]);\n    },\n\n    /** Render icon-button to report an error on this dataset to the galaxy admin. */\n    _renderErrButton: function _renderErrButton() {\n        var self = this;\n        return (0, _faIconButton2.default)({\n            title: (0, _localization2.default)(\"View or report this error\"),\n            href: Galaxy.root + \"datasets/error?dataset_id=\" + this.model.attributes.id,\n            classes: \"report-error-btn\",\n            faIcon: \"fa-bug\",\n            onclick: function onclick(ev) {\n                if (Galaxy.router) {\n                    ev.preventDefault();\n                    Galaxy.router.push(\"datasets/error\", {\n                        dataset_id: self.model.attributes.id\n                    });\n                }\n            }\n        });\n    },\n\n    /** Render icon-button to re-run the job that created this dataset. */\n    _renderRerunButton: function _renderRerunButton() {\n        var creating_job = this.model.get(\"creating_job\");\n        if (this.model.get(\"rerunnable\")) {\n            return (0, _faIconButton2.default)({\n                title: (0, _localization2.default)(\"Run this job again\"),\n                href: this.model.urls.rerun,\n                classes: \"rerun-btn\",\n                target: this.linkTarget,\n                faIcon: \"fa-refresh\",\n                onclick: function onclick(ev) {\n                    if (Galaxy.router) {\n                        ev.preventDefault();\n                        Galaxy.router.push(\"/\", {\n                            job_id: creating_job\n                        });\n                    }\n                }\n            });\n        }\n    },\n\n    /** Render an icon-button or popupmenu of links based on the applicable visualizations */\n    _renderVisualizationsButton: function _renderVisualizationsButton() {\n        //TODO: someday - lazyload visualizations\n        var visualizations = this.model.get(\"visualizations\");\n        if (this.model.isDeletedOrPurged() || !this.hasUser || !this.model.hasData() || _.isEmpty(visualizations)) {\n            return null;\n        }\n        if (!_.isObject(visualizations[0])) {\n            this.warn(\"Visualizations have been switched off\");\n            return null;\n        }\n\n        var $visualizations = $(this.templates.visualizations(visualizations, this));\n        //HACK: need to re-write those directed at galaxy_main with linkTarget\n        $visualizations.find('[target=\"galaxy_main\"]').attr(\"target\", this.linkTarget);\n        // use addBack here to include the root $visualizations elem (for the case of 1 visualization)\n        this._addScratchBookFn($visualizations.find(\".visualization-link\").addBack(\".visualization-link\"));\n        return $visualizations;\n    },\n\n    /** add scratchbook functionality to visualization links */\n    _addScratchBookFn: function _addScratchBookFn($links) {\n        var li = this;\n        $links.click(function (ev) {\n            if (Galaxy.frame && Galaxy.frame.active) {\n                Galaxy.frame.add({\n                    title: \"Visualization\",\n                    url: $(this).attr(\"href\")\n                });\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n        });\n    },\n\n    //TODO: if possible move these to readonly view - but display the owner's tags/annotation (no edit)\n    /** Render the tags list/control */\n    _renderTags: function _renderTags($where) {\n        if (!this.hasUser) {\n            return;\n        }\n        var view = this;\n        this.tagsEditor = new _tag2.default.TagsEditor({\n            model: this.model,\n            el: $where.find(\".tags-display\"),\n            onshowFirstTime: function onshowFirstTime() {\n                this.render();\n            },\n            // persist state on the hda view (and not the editor) since these are currently re-created each time\n            onshow: function onshow() {\n                view.tagsEditorShown = true;\n            },\n            onhide: function onhide() {\n                view.tagsEditorShown = false;\n            },\n            $activator: (0, _faIconButton2.default)({\n                title: (0, _localization2.default)(\"Edit dataset tags\"),\n                classes: \"tag-btn\",\n                faIcon: \"fa-tags\"\n            }).appendTo($where.find(\".actions .right\"))\n        });\n        if (this.tagsEditorShown) {\n            this.tagsEditor.toggle(true);\n        }\n    },\n\n    /** Render the annotation display/control */\n    _renderAnnotation: function _renderAnnotation($where) {\n        if (!this.hasUser) {\n            return;\n        }\n        var view = this;\n        this.annotationEditor = new _annotation2.default.AnnotationEditor({\n            model: this.model,\n            el: $where.find(\".annotation-display\"),\n            onshowFirstTime: function onshowFirstTime() {\n                this.render();\n            },\n            // persist state on the hda view (and not the editor) since these are currently re-created each time\n            onshow: function onshow() {\n                view.annotationEditorShown = true;\n            },\n            onhide: function onhide() {\n                view.annotationEditorShown = false;\n            },\n            $activator: (0, _faIconButton2.default)({\n                title: (0, _localization2.default)(\"Edit dataset annotation\"),\n                classes: \"annotate-btn\",\n                faIcon: \"fa-comment\"\n            }).appendTo($where.find(\".actions .right\"))\n        });\n        if (this.annotationEditorShown) {\n            this.annotationEditor.toggle(true);\n        }\n    },\n\n    /** If the format/dbkey/genome_build isn't set, make the display a link to the edit page */\n    _makeDbkeyEditLink: function _makeDbkeyEditLink($details) {\n        // make the dbkey a link to editing\n        if (this.model.get(\"metadata_dbkey\") === \"?\" && !this.model.isDeletedOrPurged()) {\n            var editableDbkey = $('<a class=\"value\">?</a>').attr(\"href\", this.model.urls.edit).attr(\"target\", \"_top\");\n            $details.find(\".dbkey .value\").replaceWith(editableDbkey);\n        }\n    },\n\n    // ......................................................................... events\n    /** event map */\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .undelete-link\": \"_clickUndeleteLink\",\n        \"click .purge-link\": \"_clickPurgeLink\",\n\n        \"click .edit-btn\": function clickEditBtn(ev) {\n            this.trigger(\"edit\", this, ev);\n        },\n        \"click .delete-btn\": function clickDeleteBtn(ev) {\n            this.trigger(\"delete\", this, ev);\n        },\n        \"click .rerun-btn\": function clickRerunBtn(ev) {\n            this.trigger(\"rerun\", this, ev);\n        },\n        \"click .report-err-btn\": function clickReportErrBtn(ev) {\n            this.trigger(\"report-err\", this, ev);\n        },\n        \"click .visualization-btn\": function clickVisualizationBtn(ev) {\n            this.trigger(\"visualize\", this, ev);\n        },\n        \"click .dbkey a\": function clickDbkeyA(ev) {\n            this.trigger(\"edit\", this, ev);\n        }\n    }),\n\n    /** listener for item undelete (in the messages section) */\n    _clickUndeleteLink: function _clickUndeleteLink(ev) {\n        this.model.undelete();\n        return false;\n    },\n\n    /** listener for item purge (in the messages section) */\n    _clickPurgeLink: function _clickPurgeLink(ev) {\n        if (confirm((0, _localization2.default)(\"This will permanently remove the data in your dataset. Are you sure?\"))) {\n            this.model.purge();\n        }\n        return false;\n    },\n\n    // ......................................................................... misc\n    /** string rep */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"HDAEditView(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemEdit.prototype.templates = function () {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        failed_metadata: _baseMvc2.default.wrapTemplate([\n        // in this override, provide a link to the edit page\n        '<% if( dataset.state === \"failed_metadata\" ){ %>', '<div class=\"failed_metadata-warning warningmessagesmall\">', (0, _localization2.default)(\"An error occurred setting the metadata for this dataset\"), '<br /><a href=\"<%- dataset.urls.edit %>\" target=\"_top\">', (0, _localization2.default)(\"Set it manually or retry auto-detection\"), \"</a>\", \"</div>\", \"<% } %>\"], \"dataset\"),\n\n        deleted: _baseMvc2.default.wrapTemplate([\n        // in this override, provide links to undelete or purge the dataset\n        \"<% if( dataset.deleted && !dataset.purged ){ %>\",\n        // deleted not purged\n        '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This dataset has been deleted\"), '<br /><a class=\"undelete-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Undelete it\"), \"</a>\", \"<% if( view.purgeAllowed ){ %>\", '<br /><a class=\"purge-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Permanently remove it from disk\"), \"</a>\", \"<% } %>\", \"</div>\", \"<% } %>\"], \"dataset\")\n    });\n\n    var visualizationsTemplate = _baseMvc2.default.wrapTemplate([\"<% if( visualizations.length === 1 ){ %>\", '<a class=\"visualization-link icon-btn\" href=\"<%- visualizations[0].href %>\"', ' target=\"<%- visualizations[0].target %>\" title=\"', (0, _localization2.default)(\"Visualize in\"), ' <%- visualizations[0].html %>\">', '<span class=\"fa fa-bar-chart-o\"></span>', \"</a>\", \"<% } else { %>\", '<div class=\"visualizations-dropdown dropdown icon-btn\">', '<a data-toggle=\"dropdown\" title=\"', (0, _localization2.default)(\"Visualize\"), '\">', '<span class=\"fa fa-bar-chart-o\"></span>', \"</a>\", '<ul class=\"dropdown-menu\" role=\"menu\">', \"<% _.each( visualizations, function( visualization ){ %>\", '<li><a class=\"visualization-link\" href=\"<%- visualization.href %>\"', ' target=\"<%- visualization.target %>\">', \"<%- visualization.html %>\", \"</a></li>\", \"<% }); %>\", \"</ul>\", \"</div>\", \"<% } %>\"], \"visualizations\");\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        visualizations: visualizationsTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    DatasetListItemEdit: DatasetListItemEdit\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(15);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// =============================================================================\n/** A view on any model that has a 'annotation' attribute\n */\nvar AnnotationEditor = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(_baseMvc2.default.HiddenUntilActivatedViewMixin).extend({\n    tagName: \"div\",\n    className: \"annotation-display\",\n\n    /** Set up listeners, parse options */\n    initialize: function initialize(options) {\n        options = options || {};\n        this.tooltipConfig = options.tooltipConfig || {\n            placement: \"bottom\"\n        };\n        //console.debug( this, options );\n        // only listen to the model only for changes to annotations\n        this.listenTo(this.model, \"change:annotation\", function () {\n            this.render();\n        });\n        this.hiddenUntilActivated(options.$activator, options);\n    },\n\n    /** Build the DOM elements, call select to on the created input, and set up behaviors */\n    render: function render() {\n        var view = this;\n        this.$el.html(this._template());\n\n        //TODO: handle empties better\n        this.$annotation().make_text_editable({\n            use_textarea: true,\n            on_finish: function on_finish(newAnnotation) {\n                view.$annotation().text(newAnnotation);\n                view.model.save({ annotation: newAnnotation }, { silent: true }).fail(function () {\n                    view.$annotation().text(view.model.previous(\"annotation\"));\n                });\n            }\n        });\n        return this;\n    },\n\n    /** @returns {String} the html text used to build the view's DOM */\n    _template: function _template() {\n        var annotation = this.model.get(\"annotation\");\n        return [\n        //TODO: make prompt optional\n        '<label class=\"prompt\">', (0, _localization2.default)(\"Annotation\"), \"</label>\",\n        // set up initial tags by adding as CSV to input vals (necc. to init select2)\n        '<div class=\"annotation\">', _.escape(annotation), \"</div>\"].join(\"\");\n    },\n\n    /** @returns {jQuery} the main element for this view */\n    $annotation: function $annotation() {\n        return this.$el.find(\".annotation\");\n    },\n\n    /** shut down event listeners and remove this view's DOM */\n    remove: function remove() {\n        this.$annotation.off();\n        this.stopListening(this.model);\n        Backbone.View.prototype.remove.call(this);\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return [\"AnnotationEditor(\", \"\" + this.model, \")\"].join(\"\");\n    }\n});\n// =============================================================================\nexports.default = {\n    AnnotationEditor: AnnotationEditor\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */,\n/* 184 */,\n/* 185 */,\n/* 186 */,\n/* 187 */,\n/* 188 */,\n/* 189 */,\n/* 190 */,\n/* 191 */,\n/* 192 */,\n/* 193 */,\n/* 194 */,\n/* 195 */,\n/* 196 */,\n/* 197 */,\n/* 198 */,\n/* 199 */,\n/* 200 */,\n/* 201 */,\n/* 202 */,\n/* 203 */,\n/* 204 */,\n/* 205 */,\n/* 206 */,\n/* 207 */,\n/* 208 */,\n/* 209 */,\n/* 210 */,\n/* 211 */,\n/* 212 */,\n/* 213 */,\n/* 214 */,\n/* 215 */,\n/* 216 */,\n/* 217 */,\n/* 218 */,\n/* 219 */,\n/* 220 */,\n/* 221 */,\n/* 222 */,\n/* 223 */,\n/* 224 */,\n/* 225 */,\n/* 226 */,\n/* 227 */,\n/* 228 */,\n/* 229 */,\n/* 230 */,\n/* 231 */,\n/* 232 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_) {\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _galaxy = __webpack_require__(59);\n\nvar _galaxy2 = _interopRequireDefault(_galaxy);\n\nvar _router = __webpack_require__(73);\n\nvar _router2 = _interopRequireDefault(_router);\n\nvar _toolPanel = __webpack_require__(233);\n\nvar _toolPanel2 = _interopRequireDefault(_toolPanel);\n\nvar _historyPanel = __webpack_require__(243);\n\nvar _historyPanel2 = _interopRequireDefault(_historyPanel);\n\nvar _page = __webpack_require__(61);\n\nvar _page2 = _interopRequireDefault(_page);\n\nvar _toolForm = __webpack_require__(26);\n\nvar _toolForm2 = _interopRequireDefault(_toolForm);\n\nvar _formWrapper = __webpack_require__(88);\n\nvar _formWrapper2 = _interopRequireDefault(_formWrapper);\n\nvar _userPreferences = __webpack_require__(257);\n\nvar _userPreferences2 = _interopRequireDefault(_userPreferences);\n\nvar _userCustomBuilds = __webpack_require__(258);\n\nvar _userCustomBuilds2 = _interopRequireDefault(_userCustomBuilds);\n\nvar _tours = __webpack_require__(94);\n\nvar _tours2 = _interopRequireDefault(_tours);\n\nvar _gridView = __webpack_require__(12);\n\nvar _gridView2 = _interopRequireDefault(_gridView);\n\nvar _gridShared = __webpack_require__(259);\n\nvar _gridShared2 = _interopRequireDefault(_gridShared);\n\nvar _workflow = __webpack_require__(260);\n\nvar _workflow2 = _interopRequireDefault(_workflow);\n\nvar _historyList = __webpack_require__(262);\n\nvar _historyList2 = _interopRequireDefault(_historyList);\n\nvar _toolFormComposite = __webpack_require__(124);\n\nvar _toolFormComposite2 = _interopRequireDefault(_toolFormComposite);\n\nvar _queryStringParsing = __webpack_require__(16);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _datasetError = __webpack_require__(263);\n\nvar _datasetError2 = _interopRequireDefault(_datasetError);\n\nvar _datasetEditAttributes = __webpack_require__(264);\n\nvar _datasetEditAttributes2 = _interopRequireDefault(_datasetEditAttributes);\n\nvar _citations = __webpack_require__(101);\n\nvar _citations2 = _interopRequireDefault(_citations);\n\nvar _vue = __webpack_require__(64);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $ = _jquery2.default;\n\n\n/** define the 'Analyze Data'/analysis/main/home page for Galaxy\n *  * has a masthead\n *  * a left tool menu to allow the user to load tools in the center panel\n *  * a right history menu that shows the user's current data\n *  * a center panel\n *  Both panels (generally) persist while the center panel shows any\n *  UI needed for the current step of an analysis, like:\n *      * tool forms to set tool parameters,\n *      * tables showing the contents of datasets\n *      * etc.\n */\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new _galaxy2.default.GalaxyApp(options, bootstrapped);\n    Galaxy.debug(\"analysis app\");\n\n    /** Routes */\n    var AnalysisRouter = _router2.default.extend({\n        routes: {\n            \"(/)\": \"home\",\n            \"(/)root*\": \"home\",\n            \"(/)tours(/)(:tour_id)\": \"show_tours\",\n            \"(/)user(/)\": \"show_user\",\n            \"(/)user(/)(:form_id)\": \"show_user_form\",\n            \"(/)workflow(/)\": \"show_workflows\",\n            \"(/)workflow/run(/)\": \"show_run\",\n            \"(/)pages(/)create(/)\": \"show_pages_create\",\n            \"(/)pages(/)edit(/)\": \"show_pages_edit\",\n            \"(/)pages(/)(:action_id)\": \"show_pages\",\n            \"(/)visualizations(/)edit(/)\": \"show_visualizations_edit\",\n            \"(/)visualizations/(:action_id)\": \"show_visualizations\",\n            \"(/)workflows/list_published(/)\": \"show_workflows_published\",\n            \"(/)histories(/)citations(/)\": \"show_history_citations\",\n            \"(/)histories(/)rename(/)\": \"show_histories_rename\",\n            \"(/)histories(/)permissions(/)\": \"show_histories_permissions\",\n            \"(/)histories(/)(:action_id)\": \"show_histories\",\n            \"(/)datasets(/)list(/)\": \"show_datasets\",\n            \"(/)workflow/import_workflow\": \"show_import_workflow\",\n            \"(/)custom_builds\": \"show_custom_builds\",\n            \"(/)datasets/edit\": \"show_dataset_edit_attributes\",\n            \"(/)datasets/error\": \"show_dataset_error\"\n        },\n\n        require_login: [\"show_user\", \"show_user_form\", \"show_workflows\"],\n\n        authenticate: function authenticate(args, name) {\n            return Galaxy.user && Galaxy.user.id || this.require_login.indexOf(name) == -1;\n        },\n\n        show_tours: function show_tours(tour_id) {\n            if (tour_id) {\n                _tours2.default.giveTour(tour_id);\n            } else {\n                this.page.display(new _tours2.default.ToursView());\n            }\n        },\n\n        show_user: function show_user() {\n            this.page.display(new _userPreferences2.default.View());\n        },\n\n        show_user_form: function show_user_form(form_id) {\n            var model = new _userPreferences2.default.Model({\n                user_id: Galaxy.params.id\n            });\n            this.page.display(new _formWrapper2.default.View(model.get(form_id)));\n        },\n\n        show_visualizations: function show_visualizations(action_id) {\n            this.page.display(new _gridShared2.default.View({\n                action_id: action_id,\n                plural: \"Visualizations\",\n                item: \"visualization\"\n            }));\n        },\n\n        show_visualizations_edit: function show_visualizations_edit() {\n            this.page.display(new _formWrapper2.default.View({\n                url: \"visualization/edit?id=\" + _queryStringParsing2.default.get(\"id\"),\n                redirect: \"visualizations/list\"\n            }));\n        },\n\n        show_workflows_published: function show_workflows_published() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"workflow/list_published\",\n                dict_format: true\n            }));\n        },\n\n        show_histories: function show_histories(action_id) {\n            this.page.display(new _historyList2.default.View({ action_id: action_id }));\n        },\n\n        show_history_citations: function show_history_citations() {\n            var citationInstance = _vue2.default.extend(_citations2.default);\n            var vm = document.createElement(\"div\");\n            this.page.display(vm);\n            new citationInstance({ propsData: { id: _queryStringParsing2.default.get(\"id\"), source: \"histories\" } }).$mount(vm);\n        },\n\n        show_histories_rename: function show_histories_rename() {\n            this.page.display(new _formWrapper2.default.View({\n                url: \"history/rename?id=\" + _queryStringParsing2.default.get(\"id\"),\n                redirect: \"histories/list\"\n            }));\n        },\n\n        show_histories_permissions: function show_histories_permissions() {\n            this.page.display(new _formWrapper2.default.View({\n                url: \"history/permissions?id=\" + _queryStringParsing2.default.get(\"id\"),\n                redirect: \"histories/list\"\n            }));\n        },\n\n        show_datasets: function show_datasets() {\n            this.page.display(new _gridView2.default({\n                url_base: Galaxy.root + \"dataset/list\",\n                dict_format: true\n            }));\n        },\n\n        show_pages: function show_pages(action_id) {\n            this.page.display(new _gridShared2.default.View({\n                action_id: action_id,\n                plural: \"Pages\",\n                item: \"page\"\n            }));\n        },\n\n        show_pages_create: function show_pages_create() {\n            this.page.display(new _formWrapper2.default.View({\n                url: \"page/create\",\n                redirect: \"pages/list\"\n            }));\n        },\n\n        show_pages_edit: function show_pages_edit() {\n            this.page.display(new _formWrapper2.default.View({\n                url: \"page/edit?id=\" + _queryStringParsing2.default.get(\"id\"),\n                redirect: \"pages/list\"\n            }));\n        },\n\n        show_workflows: function show_workflows() {\n            this.page.display(new _workflow2.default.View());\n        },\n\n        show_run: function show_run() {\n            this._loadWorkflow();\n        },\n\n        show_import_workflow: function show_import_workflow() {\n            this.page.display(new _workflow2.default.ImportWorkflowView());\n        },\n\n        show_custom_builds: function show_custom_builds() {\n            var _this = this;\n\n            var historyPanel = this.page.historyPanel.historyView;\n            if (!historyPanel || !historyPanel.model || !historyPanel.model.id) {\n                window.setTimeout(function () {\n                    _this.show_custom_builds();\n                }, 500);\n                return;\n            }\n            this.page.display(new _userCustomBuilds2.default.View());\n        },\n\n        show_dataset_edit_attributes: function show_dataset_edit_attributes() {\n            this.page.display(new _datasetEditAttributes2.default.View());\n        },\n\n        show_dataset_error: function show_dataset_error() {\n            this.page.display(new _datasetError2.default.View());\n        },\n\n        /**  */\n        home: function home(params) {\n            // TODO: to router, remove Globals\n            // load a tool by id (tool_id) or rerun a previous tool execution (job_id)\n            if (params.tool_id || params.job_id) {\n                if (params.tool_id === \"upload1\") {\n                    this.page.toolPanel.upload.show();\n                    this._loadCenterIframe(\"welcome\");\n                } else {\n                    this._loadToolForm(params);\n                }\n            } else {\n                // show the workflow run form\n                if (params.workflow_id) {\n                    this._loadWorkflow();\n                    // load the center iframe with controller.action: galaxy.org/?m_c=history&m_a=list -> history/list\n                } else if (params.m_c) {\n                    this._loadCenterIframe(params.m_c + \"/\" + params.m_a);\n                    // show the workflow run form\n                } else {\n                    this._loadCenterIframe(\"welcome\");\n                }\n            }\n        },\n\n        /** load the center panel with a tool form described by the given params obj */\n        _loadToolForm: function _loadToolForm(params) {\n            //TODO: load tool form code async\n            params.id = decodeURIComponent(params.tool_id);\n            this.page.display(new _toolForm2.default.View(params));\n        },\n\n        /** load the center panel iframe using the given url */\n        _loadCenterIframe: function _loadCenterIframe(url, root) {\n            root = root || Galaxy.root;\n            url = root + url;\n            this.page.$(\"#galaxy_main\").prop(\"src\", url);\n        },\n\n        /** load workflow by its url in run mode */\n        _loadWorkflow: function _loadWorkflow() {\n            var _this2 = this;\n\n            _utils2.default.get({\n                url: Galaxy.root + \"api/workflows/\" + _utils2.default.getQueryString(\"id\") + \"/download?style=run\",\n                success: function success(response) {\n                    _this2.page.display(new _toolFormComposite2.default.View(response));\n                },\n                error: function error(response) {\n                    var error_msg = response.err_msg || \"Error occurred while loading the resource.\";\n                    var options = {\n                        message: error_msg,\n                        status: \"danger\",\n                        persistent: true\n                    };\n                    _this2.page.display(new _uiMisc2.default.Message(options));\n                }\n            });\n        }\n    });\n\n    // render and start the router\n    $(function () {\n        Galaxy.page = new _page2.default.View(_.extend(options, {\n            Left: _toolPanel2.default,\n            Right: _historyPanel2.default,\n            Router: AnalysisRouter\n        }));\n    });\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _tools = __webpack_require__(25);\n\nvar _tools2 = _interopRequireDefault(_tools);\n\nvar _uploadView = __webpack_require__(234);\n\nvar _uploadView2 = _interopRequireDefault(_uploadView);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nvar _toolFormComposite = __webpack_require__(124);\n\nvar _toolFormComposite2 = _interopRequireDefault(_toolFormComposite);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ToolPanel = Backbone.View.extend({\n    initialize: function initialize(page, options) {\n        // access configuration options\n        var config = options.config;\n        this.root = options.root;\n\n        /** @type {Object[]} descriptions of user's workflows to be shown in the tool menu */\n        this.stored_workflow_menu_entries = config.stored_workflow_menu_entries || [];\n\n        // create tool search, tool panel, and tool panel view.\n        var tool_search = new _tools2.default.ToolSearch({\n            hidden: false\n        });\n        var tools = new _tools2.default.ToolCollection(config.toolbox);\n        this.tool_panel = new _tools2.default.ToolPanel({\n            tool_search: tool_search,\n            tools: tools,\n            layout: config.toolbox_in_panel\n        });\n        this.tool_panel_view = new _tools2.default.ToolPanelView({\n            model: this.tool_panel\n        });\n\n        // add upload modal\n        this.upload_button = new _uploadView2.default({\n            nginx_upload_path: config.nginx_upload_path,\n            ftp_upload_site: config.ftp_upload_site,\n            default_genome: config.default_genome,\n            default_extension: config.default_extension\n        });\n\n        // add uploader button to Galaxy object\n        Galaxy.upload = this.upload_button;\n\n        // components for panel definition\n        this.model = new Backbone.Model({\n            title: (0, _localization2.default)(\"Tools\"),\n            buttons: [this.upload_button]\n        });\n\n        // build body template\n        this.setElement(this._template());\n    },\n\n    render: function render() {\n        // if there are tools, render panel and display everything\n        var self = this;\n        if (this.tool_panel.get(\"layout\").size() > 0) {\n            this.$el.prepend(this.tool_panel_view.$el);\n            this.tool_panel_view.render();\n        }\n        // build the dom for the workflow portion of the tool menu\n        // add internal workflow list\n        self.$(\"#internal-workflows\").append(self._templateAllWorkflow({\n            title: (0, _localization2.default)(\"All workflows\"),\n            href: \"workflow\"\n        }));\n        _.each(this.stored_workflow_menu_entries, function (menu_entry) {\n            self.$(\"#internal-workflows\").append(self._templateWorkflowLink({\n                title: menu_entry.stored_workflow.name,\n                href: \"workflow/run?id=\" + menu_entry.encoded_stored_workflow_id\n            }));\n        });\n    },\n\n    /** build a link to one tool */\n    _templateTool: function _templateTool(tool) {\n        return ['<div class=\"toolTitle\">', '<a href=\"', this.root, tool.href, '\" target=\"galaxy_main\">', tool.title, \"</a>\", \"</div>\"].join(\"\");\n    },\n\n    /** build a link to 'All Workflows' */\n    _templateAllWorkflow: function _templateAllWorkflow(tool) {\n        return ['<div class=\"toolTitle\">',\n        // global\n        '<a href=\"', Galaxy.root, tool.href, '\">', tool.title, \"</a>\", \"</div>\"].join(\"\");\n    },\n\n    /** build links to workflows in toolpanel */\n    _templateWorkflowLink: function _templateWorkflowLink(wf) {\n        return ['<div class=\"toolTitle\">', \"<a class=\\\"\" + wf.cls + \" \\\" href=\\\"\", Galaxy.root, wf.href, '\">', wf.title, \"</a>\", \"</div>\"].join(\"\");\n    },\n\n    /** override to include inital menu dom and workflow section */\n    _template: function _template() {\n        return ['<div class=\"toolMenuContainer\">', '<div class=\"toolMenu\" style=\"display: none\">', '<div id=\"search-no-results\" style=\"display: none; padding-top: 5px\">', \"<em><strong>\", (0, _localization2.default)(\"Search did not match any tools.\"), \"</strong></em>\", \"</div>\", \"</div>\", '<div class=\"toolSectionPad\"/>', '<div class=\"toolSectionPad\"/>', '<div class=\"toolSectionTitle\" id=\"title_XXinternalXXworkflow\">', \"<span>\", (0, _localization2.default)(\"Workflows\"), \"</span>\", \"</div>\", '<div id=\"internal-workflows\" class=\"toolSectionBody\">', '<div class=\"toolSectionBg\"/>', \"</div>\", \"</div>\"].join(\"\");\n    },\n\n    toString: function toString() {\n        return \"toolPanel\";\n    }\n});\n\nexports.default = ToolPanel;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiModal = __webpack_require__(7);\n\nvar _uiModal2 = _interopRequireDefault(_uiModal);\n\nvar _uiTabs = __webpack_require__(21);\n\nvar _uiTabs2 = _interopRequireDefault(_uiTabs);\n\nvar _uploadButton = __webpack_require__(235);\n\nvar _uploadButton2 = _interopRequireDefault(_uploadButton);\n\nvar _defaultView = __webpack_require__(236);\n\nvar _defaultView2 = _interopRequireDefault(_defaultView);\n\nvar _compositeView = __webpack_require__(239);\n\nvar _compositeView2 = _interopRequireDefault(_compositeView);\n\nvar _collectionView = __webpack_require__(241);\n\nvar _collectionView2 = _interopRequireDefault(_collectionView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    options: {\n        nginx_upload_path: \"\",\n        ftp_upload_site: \"n/a\",\n        default_genome: \"?\",\n        default_extension: \"auto\",\n        height: 500,\n        width: 900,\n        auto: {\n            id: \"auto\",\n            text: \"Auto-detect\",\n            description: \"This system will try to detect the file type automatically. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be.  You can also upload compressed files, which will automatically be decompressed.\"\n        }\n    },\n\n    // contains all available dataset extensions/types\n    list_extensions: [],\n\n    // contains all available genomes\n    list_genomes: [],\n\n    initialize: function initialize(options) {\n        var self = this;\n        this.options = _utils2.default.merge(options, this.options);\n\n        // create view for upload/progress button\n        this.ui_button = new _uploadButton2.default.View({\n            onclick: function onclick(e) {\n                e.preventDefault();\n                self.show();\n            },\n            onunload: function onunload() {\n                var percentage = self.ui_button.model.get(\"percentage\", 0);\n                if (percentage > 0 && percentage < 100) {\n                    return \"Several uploads are queued.\";\n                }\n            }\n        });\n\n        // set element to button view\n        this.setElement(this.ui_button.$el);\n\n        // load extensions\n        var self = this;\n        _utils2.default.get({\n            url: Galaxy.root + \"api/datatypes?extension_only=False\",\n            success: function success(datatypes) {\n                for (var key in datatypes) {\n                    self.list_extensions.push({\n                        id: datatypes[key].extension,\n                        text: datatypes[key].extension,\n                        description: datatypes[key].description,\n                        description_url: datatypes[key].description_url,\n                        composite_files: datatypes[key].composite_files\n                    });\n                }\n                self.list_extensions.sort(function (a, b) {\n                    var a_text = a.text && a.text.toLowerCase();\n                    var b_text = b.text && b.text.toLowerCase();\n                    return a_text > b_text ? 1 : a_text < b_text ? -1 : 0;\n                });\n                if (!self.options.datatypes_disable_auto) {\n                    self.list_extensions.unshift(self.options.auto);\n                }\n            }\n        });\n\n        // load genomes\n        _utils2.default.get({\n            url: Galaxy.root + \"api/genomes\",\n            success: function success(genomes) {\n                for (var key in genomes) {\n                    self.list_genomes.push({\n                        id: genomes[key][1],\n                        text: genomes[key][0]\n                    });\n                }\n                self.list_genomes.sort(function (a, b) {\n                    if (a.id == self.options.default_genome) {\n                        return -1;\n                    }\n                    if (b.id == self.options.default_genome) {\n                        return 1;\n                    }\n                    return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\n                });\n            }\n        });\n    },\n\n    /** Show/hide upload dialog */\n    show: function show() {\n        var self = this;\n        if (!Galaxy.currHistoryPanel || !Galaxy.currHistoryPanel.model) {\n            window.setTimeout(function () {\n                self.show();\n            }, 500);\n            return;\n        }\n        this.current_user = Galaxy.user.id;\n        if (!this.modal) {\n            this.tabs = new _uiTabs2.default.View();\n            this.default_view = new _defaultView2.default(this);\n            this.tabs.add({\n                id: \"regular\",\n                title: \"Regular\",\n                $el: this.default_view.$el\n            });\n            this.composite_view = new _compositeView2.default(this);\n            this.tabs.add({\n                id: \"composite\",\n                title: \"Composite\",\n                $el: this.composite_view.$el\n            });\n            this.collection_view = new _collectionView2.default(this);\n            this.tabs.add({\n                id: \"collection\",\n                title: \"Collection\",\n                $el: this.collection_view.$el\n            });\n            this.modal = new _uiModal2.default.View({\n                title: \"Download from web or upload from disk\",\n                body: this.tabs.$el,\n                height: this.options.height,\n                width: this.options.width,\n                closing_events: true,\n                title_separator: false\n            });\n        }\n        this.modal.show();\n    },\n\n    /** Refresh user and current history */\n    currentHistory: function currentHistory() {\n        return this.current_user && Galaxy.currHistoryPanel.model.get(\"id\");\n    },\n\n    /** Get ftp configuration */\n    currentFtp: function currentFtp() {\n        return this.current_user && this.options.ftp_upload_site;\n    },\n\n    /**\n     * Package API data from array of models\n     * @param{Array} items - Upload items/rows filtered from a collection\n     */\n    toData: function toData(items, history_id) {\n        // create dictionary for data submission\n        var data = {\n            payload: {\n                tool_id: \"upload1\",\n                history_id: history_id || this.currentHistory(),\n                inputs: {}\n            },\n            files: [],\n            error_message: null\n        };\n        // add upload tools input data\n        if (items && items.length > 0) {\n            var inputs = {\n                file_count: items.length,\n                dbkey: items[0].get(\"genome\", \"?\"),\n                file_type: items[0].get(\"extension\", \"auto\")\n            };\n            for (var index in items) {\n                var it = items[index];\n                it.set(\"status\", \"running\");\n                if (it.get(\"file_size\") > 0) {\n                    var prefix = \"files_\" + index + \"|\";\n                    inputs[prefix + \"type\"] = \"upload_dataset\";\n                    inputs[prefix + \"space_to_tab\"] = it.get(\"space_to_tab\") && \"Yes\" || null;\n                    inputs[prefix + \"to_posix_lines\"] = it.get(\"to_posix_lines\") && \"Yes\" || null;\n                    inputs[prefix + \"dbkey\"] = it.get(\"genome\", null);\n                    inputs[prefix + \"file_type\"] = it.get(\"extension\", null);\n                    switch (it.get(\"file_mode\")) {\n                        case \"new\":\n                            inputs[prefix + \"url_paste\"] = it.get(\"url_paste\");\n                            break;\n                        case \"ftp\":\n                            inputs[prefix + \"ftp_files\"] = it.get(\"file_path\");\n                            break;\n                        case \"local\":\n                            data.files.push({\n                                name: prefix + \"file_data\",\n                                file: it.get(\"file_data\")\n                            });\n                    }\n                } else {\n                    data.error_message = \"Upload content incomplete.\";\n                    it.set(\"status\", \"error\");\n                    it.set(\"info\", data.error_message);\n                    break;\n                }\n            }\n            data.payload.inputs = JSON.stringify(inputs);\n        }\n        return data;\n    }\n}); /** Upload app contains the upload progress button and upload modal, compiles model data for API request **/\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/** View for upload/progress bar button */\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.model = options && options.model || new Backbone.Model({\n            icon: \"fa-upload\",\n            tooltip: \"Download from URL or upload files from disk\",\n            label: \"Load Data\",\n            percentage: 0,\n            status: \"\",\n            onunload: function onunload() {},\n            onclick: function onclick() {}\n        }).set(options);\n        this.setElement(this._template());\n        this.$progress = this.$(\".progress-bar\");\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n        $(window).on(\"beforeunload\", function () {\n            return self.model.get(\"onunload\")();\n        });\n    },\n\n    render: function render() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el.off(\"click\").on(\"click\", function (e) {\n            options.onclick(e);\n        }).tooltip({\n            title: this.model.get(\"tooltip\"),\n            placement: \"bottom\"\n        });\n        this.$progress.removeClass().addClass(\"progress-bar\").addClass(\"progress-bar-notransition\").addClass(options.status != \"\" && \"progress-bar-\" + options.status).css({ width: options.percentage + \"%\" });\n    },\n\n    /** Template */\n    _template: function _template() {\n        return '<div class=\"upload-button\">' + '<div class=\"progress\">' + '<div class=\"progress-bar\"/>' + '<a class=\"panel-header-button\" href=\"javascript:void(0)\" id=\"tool-panel-upload-button\">' + '<span class=\"fa fa-upload\"/>' + \"</a>\" + \"</div>\" + \"</div>\";\n    }\n});\nexports.default = { View: View };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadModel = __webpack_require__(63);\n\nvar _uploadModel2 = _interopRequireDefault(_uploadModel);\n\nvar _defaultRow = __webpack_require__(237);\n\nvar _defaultRow2 = _interopRequireDefault(_defaultRow);\n\nvar _uploadFtp2 = __webpack_require__(75);\n\nvar _uploadFtp3 = _interopRequireDefault(_uploadFtp2);\n\nvar _uploadExtension = __webpack_require__(76);\n\nvar _uploadExtension2 = _interopRequireDefault(_uploadExtension);\n\nvar _uiPopover = __webpack_require__(45);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiSelect = __webpack_require__(48);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _lazyLimited = __webpack_require__(238);\n\nvar _lazyLimited2 = _interopRequireDefault(_lazyLimited);\n\n__webpack_require__(77);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Renders contents of the default uploader */\nexports.default = Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new _uploadModel2.default.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function reset() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function initialize(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n\n        // build template\n        this.setElement(this._template());\n        this.$uploadbox = this.$(\".upload-box\");\n        this.$uploadtable = this.$(\".upload-table\");\n\n        // append buttons to dom\n        this.btnLocal = new _uiMisc2.default.Button({\n            id: \"btn-local\",\n            title: \"Choose local file\",\n            onclick: function onclick() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new _uiMisc2.default.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP file\",\n            onclick: function onclick() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new _uiMisc2.default.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function onclick() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new _uiMisc2.default.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function onclick() {\n                self._eventStart();\n            }\n        });\n        this.btnStop = new _uiMisc2.default.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function onclick() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new _uiMisc2.default.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function onclick() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new _uiMisc2.default.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function onclick() {\n                self.app.modal.hide();\n            }\n        });\n        _.each([this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnClose], function (button) {\n            self.$(\".upload-buttons\").prepend(button.$el);\n        });\n\n        // file upload\n        this.uploadbox = this.$uploadbox.uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function announce(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function initialize(index) {\n                return self.app.toData([self.collection.get(index)], self.history_id);\n            },\n            progress: function progress(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function success(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function error(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function complete() {\n                self._eventComplete();\n            },\n            ondragover: function ondragover() {\n                self.$uploadbox.addClass(\"highlight\");\n            },\n            ondragleave: function ondragleave() {\n                self.$uploadbox.removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new _uiPopover2.default.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new _uiSelect2.default.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function (ext) {\n                return !ext.composite_files;\n            }),\n            value: this.options.default_extension,\n            onchange: function onchange(extension) {\n                self._changeExtension(extension);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\").on(\"click\", function (e) {\n            new _uploadExtension2.default({\n                $el: $(e.target),\n                title: self.select_extension.text(),\n                extension: self.select_extension.value(),\n                list: self.list_extensions,\n                placement: \"top\"\n            });\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // genome extension\n        this.select_genome = new _uiSelect2.default.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function onchange(genome) {\n                self._changeGenome(genome);\n            }\n        });\n\n        // Lazy load helper\n        this.loader = new _lazyLimited2.default({\n            $container: this.$uploadbox,\n            collection: this.collection,\n            new_content: function new_content(model) {\n                var upload_row = new _defaultRow2.default(self, { model: model });\n                self.$uploadtable.find(\"> tbody:first\").append(upload_row.$el);\n                upload_row.render();\n                return upload_row;\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", function (model) {\n            self._eventRemove(model);\n        });\n        this.render();\n    },\n\n    render: function render() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message = \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = \"You added \" + this.counter.announce + \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n            } else {\n                message = \"Please wait...\" + this.counter.announce + \" out of \" + this.counter.running + \" remaining.\";\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset = this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n        var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function _eventAnnounce(index, file) {\n        this.counter.announce++;\n        var new_model = new _uploadModel2.default.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file\n        });\n        this.render();\n        this.collection.add(new_model);\n    },\n\n    /** Progress */\n    _eventProgress: function _eventProgress(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n    },\n\n    /** Success */\n    _eventSuccess: function _eventSuccess(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\" });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this.render();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function _eventError(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this.render();\n    },\n\n    /** Queue is done */\n    _eventComplete: function _eventComplete() {\n        this.collection.each(function (model) {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this.render();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function _eventRemove(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this.render();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function _eventFtp() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(new _uploadFtp3.default({\n                collection: this.collection,\n                ftp_upload_site: this.ftp_upload_site,\n                onadd: function onadd(ftp_file) {\n                    return self.uploadbox.add([{\n                        mode: \"ftp\",\n                        name: ftp_file.path,\n                        size: ftp_file.size,\n                        path: ftp_file.path\n                    }]);\n                },\n                onremove: function onremove(model_index) {\n                    self.collection.remove(model_index);\n                }\n            }).$el);\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function _eventCreate() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function _eventStart() {\n        if (this.counter.announce != 0 && this.counter.running == 0) {\n            // prepare upload process\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each(function (model) {\n                if (model.get(\"status\") == \"init\") {\n                    model.set(\"status\", \"queued\");\n                    self.upload_size += model.get(\"file_size\");\n                }\n            });\n            this.ui_button.model.set({\n                percentage: 0,\n                status: \"success\"\n            });\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n\n            // package ftp files separately, and remove them from queue\n            this._uploadFtp();\n\n            // queue remaining files\n            this.uploadbox.start();\n            this.render();\n        }\n    },\n\n    /** Pause upload process */\n    _eventStop: function _eventStop() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function _eventReset() {\n        if (this.counter.running == 0) {\n            var self = this;\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this.render();\n        }\n    },\n\n    /** Update extension for all models */\n    _changeExtension: function _changeExtension(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"init\" && (model.get(\"extension\") == self.options.default_extension || !defaults_only)) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update genome for all models */\n    _changeGenome: function _changeGenome(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"init\" && (model.get(\"genome\") == self.options.default_genome || !defaults_only)) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Package and upload ftp files in a single request */\n    _uploadFtp: function _uploadFtp() {\n        var self = this;\n        var list = [];\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"queued\" && model.get(\"file_mode\") == \"ftp\") {\n                self.uploadbox.remove(model.id);\n                list.push(model);\n            }\n        });\n        if (list.length > 0) {\n            $.uploadpost({\n                data: this.app.toData(list),\n                url: this.app.options.nginx_upload_path,\n                success: function success(message) {\n                    _.each(list, function (model) {\n                        self._eventSuccess(model.id);\n                    });\n                },\n                error: function error(message) {\n                    _.each(list, function (model) {\n                        self._eventError(model.id, message);\n                    });\n                }\n            });\n        }\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function _uploadPercentage(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function _template() {\n        return '<div class=\"upload-view-default\">' + '<div class=\"upload-top\">' + '<h6 class=\"upload-top-info\"/>' + \"</div>\" + '<div class=\"upload-box\">' + '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' + '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' + \"<thead>\" + \"<tr>\" + \"<th>Name</th>\" + \"<th>Size</th>\" + \"<th>Type</th>\" + \"<th>Genome</th>\" + \"<th>Settings</th>\" + \"<th>Status</th>\" + \"<th/>\" + \"</tr>\" + \"</thead>\" + \"<tbody/>\" + \"</table>\" + \"</div>\" + '<div class=\"upload-footer\">' + '<span class=\"upload-footer-title\">Type (set all):</span>' + '<span class=\"upload-footer-extension\"/>' + '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' + '<span class=\"upload-footer-title\">Genome (set all):</span>' + '<span class=\"upload-footer-genome\"/>' + \"</div>\" + '<div class=\"upload-buttons\"/>' + \"</div>\";\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadModel = __webpack_require__(63);\n\nvar _uploadModel2 = _interopRequireDefault(_uploadModel);\n\nvar _uploadSettings = __webpack_require__(74);\n\nvar _uploadSettings2 = _interopRequireDefault(_uploadSettings);\n\nvar _uiPopover = __webpack_require__(45);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiSelect = __webpack_require__(48);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function initialize(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new _uiPopover2.default.View({\n            title: \"Upload configuration\",\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // create select genomes\n        this.select_genome = new _uiSelect2.default.View({\n            css: \"upload-genome\",\n            data: self.app.list_genomes,\n            container: this.$(\".upload-genome\"),\n            value: default_genome,\n            onchange: function onchange(genome) {\n                self.model.set(\"genome\", genome);\n            }\n        });\n\n        // create select extension\n        this.select_extension = new _uiSelect2.default.View({\n            css: \"upload-extension\",\n            data: self.app.list_extensions,\n            container: this.$(\".upload-extension\"),\n            value: default_extension,\n            onchange: function onchange(extension) {\n                self.model.set(\"extension\", extension);\n            }\n        });\n\n        // initialize genome and extension values\n        this.model.set({\n            genome: default_genome,\n            extension: default_extension\n        });\n\n        // handle click event\n        this.$symbol.on(\"click\", function () {\n            self._removeRow();\n        });\n\n        // handle extension info popover\n        this.$(\".upload-extension-info\").on(\"click\", function (e) {\n            self.app.showExtensionInfo({\n                $el: $(e.target),\n                title: self.select_extension.text(),\n                extension: self.select_extension.value()\n            });\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // handle settings popover\n        this.$settings.on(\"click\", function (e) {\n            self._showSettings();\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", function (e) {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", function () {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", function () {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", function () {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:genome\", function () {\n            self._refreshGenome();\n        });\n        this.listenTo(this.model, \"change:extension\", function () {\n            self._refreshExtension();\n        });\n        this.listenTo(this.model, \"change:file_size\", function () {\n            self._refreshFileSize();\n        });\n    },\n\n    render: function render() {\n        this._refreshType();\n        this._refreshPercentage();\n        this._refreshStatus();\n        this._refreshInfo();\n        this._refreshGenome();\n        this._refreshExtension();\n        this._refreshFileSize();\n    },\n\n    /** Remove view */\n    remove: function remove() {\n        this.select_genome.remove();\n        this.select_extension.remove();\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    /** Render type */\n    _refreshType: function _refreshType() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(_utils2.default.bytesToString(options.file_size));\n        this.$mode.removeClass().addClass(\"upload-mode\").addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text.css({\n                width: this.$el.width() - 16 + \"px\",\n                top: this.$el.height() - 8 + \"px\"\n            }).show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Update extension */\n    _refreshExtension: function _refreshExtension() {\n        this.select_extension.value(this.model.get(\"extension\"));\n    },\n\n    /** Update genome */\n    _refreshGenome: function _refreshGenome() {\n        this.select_genome.value(this.model.get(\"genome\"));\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function _refreshInfo() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function _refreshPercentage() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: percentage + \"%\" });\n        this.$percentage.html(percentage != 100 ? percentage + \"%\" : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function _refreshStatus() {\n        var status = this.model.get(\"status\");\n        this.$symbol.removeClass().addClass(\"upload-symbol\").addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (enabled) {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        } else {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        }\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function _refreshFileSize() {\n        this.$size.html(_utils2.default.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function _removeRow() {\n        if ([\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !== -1) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function _showSettings() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new _uploadSettings2.default(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function _template(options) {\n        return \"<tr id=\\\"upload-row-\" + options.id + \"\\\" class=\\\"upload-row\\\"><td><div class=\\\"upload-text-column\\\"><div class=\\\"upload-mode\\\"/><div class=\\\"upload-title\\\"/><div class=\\\"upload-text\\\"><div class=\\\"upload-text-info\\\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div><textarea class=\\\"upload-text-content form-control\\\"/></div></div></td><td><div class=\\\"upload-size\\\"/></td><td><div class=\\\"upload-extension\\\" style=\\\"float: left;\\\"/>&nbsp;&nbsp<div class=\\\"upload-extension-info upload-icon-button fa fa-search\\\"/></td><td><div class=\\\"upload-genome\\\"/></td><td><div class=\\\"upload-settings upload-icon-button fa fa-gear\\\"/></td><td><div class=\\\"upload-info\\\"><div class=\\\"upload-info-text\\\"/><div class=\\\"upload-info-progress progress\\\"><div class=\\\"upload-progress-bar progress-bar progress-bar-success\\\"/><div class=\\\"upload-percentage\\\">0%</div></div></div></td><td><div class=\\\"upload-symbol \" + this.status_classes.init + \"\\\"/></td></tr>\";\n    }\n}); /** Renders the default uploader rows */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/** Contains helpers to limit/lazy load views for backbone views */\n\nexports.default = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.$container = options.$container;\n        this.collection = options.collection;\n        this.new_content = options.new_content;\n        this.max = options.max || 50;\n        this.content_list = {};\n        this.$message = $(\"<div/>\").addClass(\"ui-limitloader\").append(\"...only the first \" + this.max + \" entries are visible.\");\n        this.$container.append(this.$message);\n        this.listenTo(this.collection, \"reset\", this._reset, this);\n        this.listenTo(this.collection, \"add\", this._refresh, this);\n        this.listenTo(this.collection, \"remove\", this._remove, this);\n    },\n\n    /** Checks if the limit has been reached */\n    _done: function _done() {\n        var done = _.size(this.content_list) > this.max;\n        this.$message[done ? \"show\" : \"hide\"]();\n        return done;\n    },\n\n    /** Remove all content */\n    _reset: function _reset() {\n        _.each(this.content_list, function (content) {\n            content.remove();\n        });\n        this.content_list = {};\n        this.$message.hide();\n    },\n\n    /** Remove content */\n    _remove: function _remove(model) {\n        var model_id = model.id;\n        var content = this.content_list[model_id];\n        if (content) {\n            content.remove();\n            delete this.content_list[model_id];\n        }\n        this._refresh();\n    },\n\n    /** Refreshes container content by adding new views if visible */\n    _refresh: function _refresh() {\n        if (!this._done()) {\n            for (var i in this.collection.models) {\n                var model = this.collection.models[i];\n                var view = this.content_list[model.id];\n                if (!this.content_list[model.id]) {\n                    var content = this.new_content(model);\n                    this.content_list[model.id] = content;\n                    if (this._done()) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadModel = __webpack_require__(63);\n\nvar _uploadModel2 = _interopRequireDefault(_uploadModel);\n\nvar _compositeRow = __webpack_require__(240);\n\nvar _compositeRow2 = _interopRequireDefault(_compositeRow);\n\nvar _uploadExtension = __webpack_require__(76);\n\nvar _uploadExtension2 = _interopRequireDefault(_uploadExtension);\n\nvar _uiPopover = __webpack_require__(45);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiSelect = __webpack_require__(48);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    collection: new _uploadModel2.default.Collection(),\n    initialize: function initialize(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // create button section\n        this.btnStart = new _uiMisc2.default.Button({\n            title: \"Start\",\n            onclick: function onclick() {\n                self._eventStart();\n            }\n        });\n        this.btnClose = new _uiMisc2.default.Button({\n            title: \"Close\",\n            onclick: function onclick() {\n                self.app.modal.hide();\n            }\n        });\n\n        // append buttons to dom\n        _.each([this.btnStart, this.btnClose], function (button) {\n            self.$(\".upload-buttons\").prepend(button.$el);\n        });\n\n        // select extension\n        this.select_extension = new _uiSelect2.default.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function (ext) {\n                return ext.composite_files;\n            }),\n            onchange: function onchange(extension) {\n                self.collection.reset();\n                var details = _.findWhere(self.list_extensions, {\n                    id: extension\n                });\n                if (details && details.composite_files) {\n                    _.each(details.composite_files, function (item) {\n                        self.collection.add({\n                            id: self.collection.size(),\n                            file_desc: item.description || item.name\n                        });\n                    });\n                }\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\").on(\"click\", function (e) {\n            new _uploadExtension2.default({\n                $el: $(e.target),\n                title: self.select_extension.text(),\n                extension: self.select_extension.value(),\n                list: self.list_extensions,\n                placement: \"top\"\n            });\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // genome extension\n        this.select_genome = new _uiSelect2.default.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome\n        });\n\n        // listener for collection triggers on change in composite datatype and extension selection\n        this.listenTo(this.collection, \"add\", function (model) {\n            self._eventAnnounce(model);\n        });\n        this.listenTo(this.collection, \"change add\", function () {\n            self.render();\n        });\n        this.select_extension.options.onchange(this.select_extension.value());\n        this.render();\n    },\n\n    render: function render() {\n        var model = this.collection.first();\n        if (model && model.get(\"status\") == \"running\") {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        } else {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        }\n        if (this.collection.where({ status: \"ready\" }).length == this.collection.length && this.collection.length > 0) {\n            this.btnStart.enable();\n            this.btnStart.$el.addClass(\"btn-primary\");\n        } else {\n            this.btnStart.disable();\n            this.btnStart.$el.removeClass(\"btn-primary\");\n        }\n        this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n    },\n\n    //\n    // upload events / process pipeline\n    //\n\n    /** Builds the basic ui with placeholder rows for each composite data type file */\n    _eventAnnounce: function _eventAnnounce(model) {\n        var upload_row = new _compositeRow2.default(this, { model: model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n        upload_row.render();\n    },\n\n    /** Start upload process */\n    _eventStart: function _eventStart() {\n        var self = this;\n        this.collection.each(function (model) {\n            model.set({\n                genome: self.select_genome.value(),\n                extension: self.select_extension.value()\n            });\n        });\n        $.uploadpost({\n            url: this.app.options.nginx_upload_path,\n            data: this.app.toData(this.collection.filter()),\n            success: function success(message) {\n                self._eventSuccess(message);\n            },\n            error: function error(message) {\n                self._eventError(message);\n            },\n            progress: function progress(percentage) {\n                self._eventProgress(percentage);\n            }\n        });\n    },\n\n    /** Refresh progress state */\n    _eventProgress: function _eventProgress(percentage) {\n        this.collection.each(function (it) {\n            it.set(\"percentage\", percentage);\n        });\n    },\n\n    /** Refresh success state */\n    _eventSuccess: function _eventSuccess(message) {\n        this.collection.each(function (it) {\n            it.set(\"status\", \"success\");\n        });\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Refresh error state */\n    _eventError: function _eventError(message) {\n        this.collection.each(function (it) {\n            it.set({ status: \"error\", info: message });\n        });\n    },\n\n    /** Load html template */\n    _template: function _template() {\n        return '<div class=\"upload-view-composite\">' + '<div class=\"upload-top\">' + '<h6 class=\"upload-top-info\"/>' + \"</div>\" + '<div class=\"upload-box\">' + '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' + \"<thead>\" + \"<tr>\" + \"<th/>\" + \"<th/>\" + \"<th>Description</th>\" + \"<th>Name</th>\" + \"<th>Size</th>\" + \"<th>Settings</th>\" + \"<th>Status</th>\" + \"</tr>\" + \"</thead>\" + \"<tbody/>\" + \"</table>\" + \"</div>\" + '<div class=\"upload-footer\">' + '<span class=\"upload-footer-title\">Composite Type:</span>' + '<span class=\"upload-footer-extension\"/>' + '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' + '<span class=\"upload-footer-title\">Genome/Build:</span>' + '<span class=\"upload-footer-genome\"/>' + \"</div>\" + '<div class=\"upload-buttons\"/>' + \"</div>\";\n    }\n}); /** Renders contents of the composite uploader */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadSettings = __webpack_require__(74);\n\nvar _uploadSettings2 = _interopRequireDefault(_uploadSettings);\n\nvar _uploadFtp = __webpack_require__(75);\n\nvar _uploadFtp2 = _interopRequireDefault(_uploadFtp);\n\nvar _uiPopover = __webpack_require__(45);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _uiSelect = __webpack_require__(48);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\n__webpack_require__(77);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-mode fa fa-exclamation text-primary\",\n        ready: \"upload-mode fa fa-check text-success\",\n        running: \"upload-mode fa fa-spinner fa-spin\",\n        success: \"upload-mode fa fa-check\",\n        error: \"upload-mode fa fa-exclamation-triangle\"\n    },\n\n    initialize: function initialize(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template());\n        this.$source = this.$(\".upload-source\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$status = this.$(\".upload-status\");\n        this.$text = this.$(\".upload-text\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$file_name = this.$(\".upload-file-name\");\n        this.$file_desc = this.$(\".upload-file-desc\");\n        this.$file_size = this.$(\".upload-file-size\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // build upload functions\n        this.uploadinput = this.$el.uploadinput({\n            ondragover: function ondragover() {\n                self.model.get(\"enabled\") && self.$el.addClass(\"warning\");\n            },\n            ondragleave: function ondragleave() {\n                self.$el.removeClass(\"warning\");\n            },\n            onchange: function onchange(files) {\n                if (self.model.get(\"status\") != \"running\" && files && files.length > 0) {\n                    self.model.reset({\n                        file_data: files[0],\n                        file_name: files[0].name,\n                        file_size: files[0].size,\n                        file_mode: files[0].mode || \"local\"\n                    });\n                    self._refreshReady();\n                }\n            }\n        });\n\n        // source selection popup\n        this.button_menu = new _uiMisc2.default.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: \"Select\",\n            pull: \"left\"\n        });\n        this.$source.append(this.button_menu.$el);\n        this.button_menu.addMenu({\n            icon: \"fa-laptop\",\n            title: \"Choose local file\",\n            onclick: function onclick() {\n                self.uploadinput.dialog();\n            }\n        });\n        if (this.app.ftp_upload_site) {\n            this.button_menu.addMenu({\n                icon: \"fa-folder-open-o\",\n                title: \"Choose FTP file\",\n                onclick: function onclick() {\n                    self._showFtp();\n                }\n            });\n        }\n        this.button_menu.addMenu({\n            icon: \"fa-edit\",\n            title: \"Paste/Fetch data\",\n            onclick: function onclick() {\n                self.model.reset({\n                    file_mode: \"new\",\n                    file_name: \"New File\"\n                });\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new _uiPopover2.default.View({\n            title: \"Choose FTP file:\",\n            container: this.$source.find(\".ui-button-menu\"),\n            placement: \"right\"\n        });\n\n        // append popup to settings icon\n        this.settings = new _uiPopover2.default.View({\n            title: \"Upload configuration\",\n            container: this.$settings,\n            placement: \"bottom\"\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", function (e) {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n            self._refreshReady();\n        });\n\n        // handle settings popover\n        this.$settings.on(\"click\", function (e) {\n            self._showSettings();\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", function () {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", function () {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", function () {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_name\", function () {\n            self._refreshFileName();\n        });\n        this.listenTo(this.model, \"change:file_mode\", function () {\n            self._refreshMode();\n        });\n        this.listenTo(this.model, \"change:file_size\", function () {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", function () {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", function () {\n            self.remove();\n        });\n    },\n\n    render: function render() {\n        this.$el.attr(\"id\", \"upload-row-\" + this.model.id);\n        this.$file_name.html(_.escape(this.model.get(\"file_name\") || \"-\"));\n        this.$file_desc.html(this.model.get(\"file_desc\") || \"Unavailable\");\n        this.$file_size.html(_utils2.default.bytesToString(this.model.get(\"file_size\")));\n        this.$status.removeClass().addClass(this.status_classes.init);\n    },\n\n    /** Remove view */\n    remove: function remove() {\n        // call the base class remove method\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    //\n    // handle model events\n    //\n\n    /** Refresh ready or not states */\n    _refreshReady: function _refreshReady() {\n        this.app.collection.each(function (model) {\n            model.set(\"status\", model.get(\"file_size\") > 0 && \"ready\" || \"init\");\n        });\n    },\n\n    /** Refresh mode and e.g. show/hide textarea field */\n    _refreshMode: function _refreshMode() {\n        var file_mode = this.model.get(\"file_mode\");\n        if (file_mode == \"new\") {\n            this.height = this.$el.height();\n            this.$text.css({\n                width: this.$el.width() - 16 + \"px\",\n                top: this.$el.height() - 8 + \"px\"\n            }).show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$text_content.val(\"\").trigger(\"keyup\");\n        } else {\n            this.$el.height(this.height);\n            this.$text.hide();\n        }\n    },\n\n    /** Refresh information */\n    _refreshInfo: function _refreshInfo() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage */\n    _refreshPercentage: function _refreshPercentage() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        if (percentage != 0) {\n            this.$progress_bar.css({ width: percentage + \"%\" });\n        } else {\n            this.$progress_bar.addClass(\"no-transition\");\n            this.$progress_bar.css({ width: \"0%\" });\n            this.$progress_bar[0].offsetHeight;\n            this.$progress_bar.removeClass(\"no-transition\");\n        }\n        this.$percentage.html(percentage != 100 ? percentage + \"%\" : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function _refreshStatus() {\n        var status = this.model.get(\"status\");\n        this.$status.removeClass().addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status != \"running\");\n        this.$text_content.attr(\"disabled\", !this.model.get(\"enabled\"));\n        this.$el.removeClass(\"success danger warning\");\n        if (status == \"running\" || status == \"ready\") {\n            this.model.set(\"percentage\", 0);\n        }\n        this.$source.find(\".button\")[status == \"running\" ? \"addClass\" : \"removeClass\"](\"disabled\");\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.model.set(\"percentage\", 100);\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.model.set(\"percentage\", 0);\n            this.$info_progress.hide();\n            this.$info_text.show();\n        } else {\n            this.$info_progress.show();\n            this.$info_text.hide();\n        }\n    },\n\n    /** File name */\n    _refreshFileName: function _refreshFileName() {\n        this.$file_name.html(this.model.get(\"file_name\") || \"-\");\n    },\n\n    /** File size */\n    _refreshFileSize: function _refreshFileSize() {\n        this.$file_size.html(_utils2.default.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Show/hide ftp popup */\n    _showFtp: function _showFtp() {\n        if (!this.ftp.visible) {\n            var self = this;\n            this.ftp.empty();\n            this.ftp.append(new _uploadFtp2.default({\n                ftp_upload_site: this.app.ftp_upload_site,\n                onchange: function onchange(ftp_file) {\n                    self.ftp.hide();\n                    if (self.model.get(\"status\") != \"running\" && ftp_file) {\n                        self.model.reset({\n                            file_mode: \"ftp\",\n                            file_name: ftp_file.path,\n                            file_size: ftp_file.size,\n                            file_path: ftp_file.path\n                        });\n                        self._refreshReady();\n                    }\n                }\n            }).$el);\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Show/hide settings popup */\n    _showSettings: function _showSettings() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new _uploadSettings2.default(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** Template */\n    _template: function _template() {\n        return '<tr class=\"upload-row\">' + \"<td>\" + '<div class=\"upload-source\"/>' + '<div class=\"upload-text-column\">' + '<div class=\"upload-text\">' + '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' + '<textarea class=\"upload-text-content form-control\"/>' + \"</div>\" + \"</div>\" + \"</td>\" + \"<td>\" + '<div class=\"upload-status\"/>' + \"</td>\" + \"<td>\" + '<div class=\"upload-file-desc upload-title\"/>' + \"</td>\" + \"<td>\" + '<div class=\"upload-file-name upload-title\"/>' + \"</td>\" + \"<td>\" + '<div class=\"upload-file-size upload-size\"/>' + \"</td>\" + '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' + \"<td>\" + '<div class=\"upload-info\">' + '<div class=\"upload-info-text\"/>' + '<div class=\"upload-info-progress progress\">' + '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' + '<div class=\"upload-percentage\">0%</div>' + \"</div>\" + \"</div>\" + \"</td>\" + \"</tr>\";\n    }\n}); /** Renders the composite upload row view */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadModel = __webpack_require__(63);\n\nvar _uploadModel2 = _interopRequireDefault(_uploadModel);\n\nvar _collectionRow = __webpack_require__(242);\n\nvar _collectionRow2 = _interopRequireDefault(_collectionRow);\n\nvar _uploadFtp = __webpack_require__(75);\n\nvar _uploadFtp2 = _interopRequireDefault(_uploadFtp);\n\nvar _uploadExtension = __webpack_require__(76);\n\nvar _uploadExtension2 = _interopRequireDefault(_uploadExtension);\n\nvar _uiPopover = __webpack_require__(45);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiSelect = __webpack_require__(48);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _listCollectionCreator = __webpack_require__(78);\n\nvar _listCollectionCreator2 = _interopRequireDefault(_listCollectionCreator);\n\n__webpack_require__(77);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Renders contents of the collection uploader */\nexports.default = Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new _uploadModel2.default.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function reset() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function initialize(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // append buttons to dom\n        this.btnLocal = new _uiMisc2.default.Button({\n            id: \"btn-local\",\n            title: \"Choose local files\",\n            onclick: function onclick() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new _uiMisc2.default.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP files\",\n            onclick: function onclick() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new _uiMisc2.default.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function onclick() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new _uiMisc2.default.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function onclick() {\n                self._eventStart();\n            }\n        });\n        this.btnBuild = new _uiMisc2.default.Button({\n            id: \"btn-build\",\n            title: \"Build\",\n            onclick: function onclick() {\n                self._eventBuild();\n            }\n        });\n        this.btnStop = new _uiMisc2.default.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function onclick() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new _uiMisc2.default.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function onclick() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new _uiMisc2.default.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function onclick() {\n                self.app.modal.hide();\n            }\n        });\n        _.each([this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnBuild, this.btnClose], function (button) {\n            self.$(\".upload-buttons\").prepend(button.$el);\n        });\n\n        // file upload\n        this.uploadbox = this.$(\".upload-box\").uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function announce(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function initialize(index) {\n                return self.app.toData([self.collection.get(index)], self.history_id);\n            },\n            progress: function progress(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function success(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function error(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function complete() {\n                self._eventComplete();\n            },\n            ondragover: function ondragover() {\n                self.$(\".upload-box\").addClass(\"highlight\");\n            },\n            ondragleave: function ondragleave() {\n                self.$(\".upload-box\").removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new _uiPopover2.default.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new _uiSelect2.default.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, function (ext) {\n                return !ext.composite_files;\n            }),\n            value: this.options.default_extension,\n            onchange: function onchange(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        this.collectionType = \"list\";\n        this.select_collection = new _uiSelect2.default.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-collection-type\"),\n            data: [{ id: \"list\", text: \"List\" }, { id: \"paired\", text: \"Paired\" }, { id: \"list:paired\", text: \"List of Pairs\" }],\n            value: \"list\",\n            onchange: function onchange(collectionType) {\n                self.updateCollectionType(collectionType);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\").on(\"click\", function (e) {\n            new _uploadExtension2.default({\n                $el: $(e.target),\n                title: self.select_extension.text(),\n                extension: self.select_extension.value(),\n                list: self.list_extensions,\n                placement: \"top\"\n            });\n        }).on(\"mousedown\", function (e) {\n            e.preventDefault();\n        });\n\n        // genome extension\n        this.select_genome = new _uiSelect2.default.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function onchange(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", function (model) {\n            self._eventRemove(model);\n        });\n        this._updateScreen();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function _eventAnnounce(index, file) {\n        this.counter.announce++;\n        var new_model = new _uploadModel2.default.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file,\n            extension: this.select_extension.value(),\n            genome: this.select_genome.value()\n        });\n        this.collection.add(new_model);\n        var upload_row = new _collectionRow2.default(this, { model: new_model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this._updateScreen();\n        upload_row.render();\n    },\n\n    /** Progress */\n    _eventProgress: function _eventProgress(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n    },\n\n    /** Success */\n    _eventSuccess: function _eventSuccess(index, message) {\n        // var hdaId = message[\"outputs\"][0][\"id\"];\n        var hids = _.pluck(message[\"outputs\"], \"hid\");\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\", hids: hids });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this._updateScreen();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function _eventError(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this._updateScreen();\n    },\n\n    /** Queue is done */\n    _eventComplete: function _eventComplete() {\n        this.collection.each(function (model) {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this._updateScreen();\n    },\n\n    _eventBuild: function _eventBuild() {\n        var allHids = [];\n        _.forEach(this.collection.models, function (upload) {\n            allHids.push.apply(allHids, upload.get(\"hids\"));\n        });\n        var models = _.map(allHids, function (hid) {\n            return Galaxy.currHistoryPanel.collection.getByHid(hid);\n        });\n        var selection = new Galaxy.currHistoryPanel.collection.constructor(models);\n        // I'm building the selection wrong because I need to set this historyId directly.\n        selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n        Galaxy.currHistoryPanel.buildCollection(this.collectionType, selection, true);\n        this.counter.running = 0;\n        this._updateScreen();\n        this._eventReset();\n        this.app.modal.hide();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function _eventRemove(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function _eventFtp() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(new _uploadFtp2.default({\n                collection: this.collection,\n                ftp_upload_site: this.ftp_upload_site,\n                onadd: function onadd(ftp_file) {\n                    return self.uploadbox.add([{\n                        mode: \"ftp\",\n                        name: ftp_file.path,\n                        size: ftp_file.size,\n                        path: ftp_file.path\n                    }]);\n                },\n                onremove: function onremove(model_index) {\n                    self.collection.remove(model_index);\n                }\n            }).$el);\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function _eventCreate() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function _eventStart() {\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"init\") {\n                model.set(\"status\", \"queued\");\n                self.upload_size += model.get(\"file_size\");\n            }\n        });\n        this.ui_button.model.set({ percentage: 0, status: \"success\" });\n        this.counter.running = this.counter.announce;\n        this.history_id = this.app.currentHistory();\n        this.uploadbox.start();\n        this._updateScreen();\n    },\n\n    /** Pause upload process */\n    _eventStop: function _eventStop() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function _eventReset() {\n        if (this.counter.running == 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this._updateScreen();\n        }\n    },\n\n    /** Update extension for all models */\n    updateExtension: function updateExtension(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"init\" && (model.get(\"extension\") == self.options.default_extension || !defaults_only)) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function updateCollectionType(collectionType) {\n        var self = this;\n        this.collectionType = collectionType;\n    },\n\n    /** Update genome for all models */\n    updateGenome: function updateGenome(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function (model) {\n            if (model.get(\"status\") == \"init\" && (model.get(\"genome\") == self.options.default_genome || !defaults_only)) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Set screen */\n    _updateScreen: function _updateScreen() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message = \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = \"You added \" + this.counter.announce + \" file(s) to the queue. Add more files or click 'Start' to proceed.\";\n            } else {\n                message = \"Please wait...\" + this.counter.announce + \" out of \" + this.counter.running + \" remaining.\";\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset = this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n        var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n        var enable_build = this.counter.running == 0 && this.counter.announce == 0 && this.counter.success > 0 && this.counter.error == 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function _uploadPercentage(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function _template() {\n        return '<div class=\"upload-view-default\">' + '<div class=\"upload-top\">' + '<h6 class=\"upload-top-info\"/>' + \"</div>\" + '<div class=\"upload-box\">' + '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' + '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' + \"<thead>\" + \"<tr>\" + \"<th>Name</th>\" + \"<th>Size</th>\" + \"<th>Status</th>\" + \"<th/>\" + \"</tr>\" + \"</thead>\" + \"<tbody/>\" + \"</table>\" + \"</div>\" + '<div class=\"upload-footer\">' + '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' + '<span class=\"upload-footer-collection-type\"/>' + '<span class=\"upload-footer-title-compressed\">File Type:</span>' + '<span class=\"upload-footer-extension\"/>' + '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' + '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' + '<span class=\"upload-footer-genome\"/>' + \"</div>\" + '<div class=\"upload-buttons\"/>' + \"</div>\";\n    }\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uploadModel = __webpack_require__(63);\n\nvar _uploadModel2 = _interopRequireDefault(_uploadModel);\n\nvar _uploadSettings = __webpack_require__(74);\n\nvar _uploadSettings2 = _interopRequireDefault(_uploadSettings);\n\nvar _uiPopover = __webpack_require__(45);\n\nvar _uiPopover2 = _interopRequireDefault(_uiPopover);\n\nvar _uiSelect = __webpack_require__(48);\n\nvar _uiSelect2 = _interopRequireDefault(_uiSelect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function initialize(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title-extended\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new _uiPopover2.default.View({\n            title: \"Upload configuration\",\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // handle click event\n        this.$symbol.on(\"click\", function () {\n            self._removeRow();\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", function (e) {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", function () {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", function () {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", function () {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_size\", function () {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", function () {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", function () {\n            self.remove();\n        });\n    },\n\n    render: function render() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(_utils2.default.bytesToString(options.file_size));\n        this.$mode.removeClass().addClass(\"upload-mode\").addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text.css({\n                width: this.$el.width() - 16 + \"px\",\n                top: this.$el.height() - 8 + \"px\"\n            }).show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function _refreshInfo() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(\"<strong>Failed: </strong>\" + info).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function _refreshPercentage() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: percentage + \"%\" });\n        this.$percentage.html(percentage != 100 ? percentage + \"%\" : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function _refreshStatus() {\n        var status = this.model.get(\"status\");\n        this.$symbol.removeClass().addClass(\"upload-symbol\").addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function _refreshFileSize() {\n        this.$size.html(_utils2.default.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function _removeRow() {\n        if ([\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !== -1) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function _showSettings() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new _uploadSettings2.default(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function _template(options) {\n        return \"<tr id=\\\"upload-row-\" + options.id + \"\\\" class=\\\"upload-row\\\"><td><div class=\\\"upload-text-column\\\"><div class=\\\"upload-mode\\\"/><div class=\\\"upload-title-extended\\\"/><div class=\\\"upload-text\\\"><div class=\\\"upload-text-info\\\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div><textarea class=\\\"upload-text-content form-control\\\"/></div></div></td><td><div class=\\\"upload-size\\\"/></td><td><div class=\\\"upload-info\\\"><div class=\\\"upload-info-text\\\"/><div class=\\\"upload-info-progress progress\\\"><div class=\\\"upload-progress-bar progress-bar progress-bar-success\\\"/><div class=\\\"upload-percentage\\\">0%</div></div></div></td><td><div class=\\\"upload-symbol \" + this.status_classes.init + \"\\\"/></td></tr>\";\n    }\n}); /** Renders the collection uploader rows */\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _optionsMenu = __webpack_require__(244);\n\nvar _optionsMenu2 = _interopRequireDefault(_optionsMenu);\n\nvar _historyViewEditCurrent = __webpack_require__(245);\n\nvar _historyViewEditCurrent2 = _interopRequireDefault(_historyViewEditCurrent);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** the right hand panel in the analysis page that shows the current history */\nvar HistoryPanel = Backbone.View.extend({\n    initialize: function initialize(page, options) {\n        var self = this;\n        this.userIsAnonymous = Galaxy.user.isAnonymous();\n        this.allow_user_dataset_purge = options.config.allow_user_dataset_purge;\n        this.root = options.root;\n\n        // view of the current history\n        this.historyView = new _historyViewEditCurrent2.default.CurrentHistoryView({\n            className: _historyViewEditCurrent2.default.CurrentHistoryView.prototype.className + \" middle\",\n            purgeAllowed: this.allow_user_dataset_purge,\n            linkTarget: \"galaxy_main\"\n        });\n\n        // add history panel to Galaxy object\n        Galaxy.currHistoryPanel = this.historyView;\n        Galaxy.currHistoryPanel.listenToGalaxy(Galaxy);\n\n        // build buttons\n        this.buttonRefresh = new _uiMisc2.default.ButtonLink({\n            id: \"history-refresh-button\",\n            title: \"Refresh history\",\n            cls: \"panel-header-button\",\n            icon: \"fa fa-refresh\",\n            onclick: function onclick() {\n                self.historyView.loadCurrentHistory();\n            }\n        });\n        this.buttonOptions = new _uiMisc2.default.ButtonLink({\n            id: \"history-options-button\",\n            title: \"History options\",\n            cls: \"panel-header-button\",\n            target: \"galaxy_main\",\n            icon: \"fa fa-cog\",\n            href: this.root + \"root/history_options\"\n        });\n        this.buttonViewMulti = new _uiMisc2.default.ButtonLink({\n            id: \"history-view-multi-button\",\n            title: \"View all histories\",\n            cls: \"panel-header-button\",\n            icon: \"fa fa-columns\",\n            href: this.root + \"history/view_multiple\"\n        });\n\n        // define components\n        this.model = new Backbone.Model({\n            cls: \"history-right-panel\",\n            title: (0, _localization2.default)(\"History\"),\n            buttons: [this.buttonRefresh, this.buttonOptions, this.buttonViewMulti]\n        });\n\n        // build body template and connect history view\n        this.setElement(this._template());\n        this.historyView.setElement(this.$el);\n        this.historyView.connectToQuotaMeter(Galaxy.quotaMeter);\n        this.historyView.loadCurrentHistory();\n\n        // fetch to update the quota meter adding 'current' for any anon-user's id\n        Galaxy.listenTo(this.historyView, \"history-size-change\", function () {\n            Galaxy.user.fetch({\n                url: Galaxy.user.urlRoot() + \"/\" + (Galaxy.user.id || \"current\")\n            });\n        });\n    },\n\n    render: function render() {\n        this.optionsMenu = (0, _optionsMenu2.default)(this.buttonOptions.$el, {\n            anonymous: this.userIsAnonymous,\n            purgeAllowed: this.allow_user_dataset_purge,\n            root: this.root\n        });\n        this.buttonViewMulti.$el[!this.userIsAnonymous ? \"show\" : \"hide\"]();\n    },\n\n    /** add history view div */\n    _template: function _template(data) {\n        return ['<div id=\"current-history-panel\" class=\"history-panel middle\"/>'].join(\"\");\n    },\n\n    toString: function toString() {\n        return \"historyPanel\";\n    }\n});\n\nexports.default = HistoryPanel;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _popupMenu = __webpack_require__(20);\n\nvar _popupMenu2 = _interopRequireDefault(_popupMenu);\n\nvar _copyDialog = __webpack_require__(125);\n\nvar _copyDialog2 = _interopRequireDefault(_copyDialog);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nvar _webhooks = __webpack_require__(13);\n\nvar _webhooks2 = _interopRequireDefault(_webhooks);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// ============================================================================\nvar menu = [{\n    html: (0, _localization2.default)(\"History Lists\"),\n    header: true\n}, {\n    html: (0, _localization2.default)(\"Saved Histories\"),\n    href: \"histories/list\",\n    target: \"_top\"\n}, {\n    html: (0, _localization2.default)(\"Histories Shared with Me\"),\n    href: \"histories/list_shared\",\n    target: \"_top\"\n}, {\n    html: (0, _localization2.default)(\"Current History\"),\n    header: true,\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Create New\"),\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel) {\n            Galaxy.currHistoryPanel.createNewHistory();\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Copy History\"),\n    func: function func() {\n        (0, _copyDialog2.default)(Galaxy.currHistoryPanel.model).done(function () {\n            Galaxy.currHistoryPanel.loadCurrentHistory();\n        });\n    }\n}, {\n    html: (0, _localization2.default)(\"Share or Publish\"),\n    href: \"history/sharing\"\n}, {\n    html: (0, _localization2.default)(\"Show Structure\"),\n    href: \"history/display_structured\",\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Extract Workflow\"),\n    href: \"workflow/build_from_current_history\"\n}, {\n    html: (0, _localization2.default)(\"Delete\"),\n    anon: true,\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel && confirm((0, _localization2.default)(\"Really delete the current history?\"))) {\n            Galaxy.currHistoryPanel.model._delete().done(function () {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Delete Permanently\"),\n    purge: true,\n    anon: true,\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel && confirm((0, _localization2.default)(\"Really delete the current history permanently? This cannot be undone.\"))) {\n            Galaxy.currHistoryPanel.model.purge().done(function () {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Dataset Actions\"),\n    header: true,\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Copy Datasets\"),\n    href: \"dataset/copy_datasets\"\n}, {\n    html: (0, _localization2.default)(\"Dataset Security\"),\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel && Galaxy.router) {\n            Galaxy.router.push(\"/histories/permissions?id=\" + Galaxy.currHistoryPanel.model.id);\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Resume Paused Jobs\"),\n    href: \"history/resume_paused_jobs?current=True\",\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Collapse Expanded Datasets\"),\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel) {\n            Galaxy.currHistoryPanel.collapseAll();\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Unhide Hidden Datasets\"),\n    anon: true,\n    func: function func() {\n        // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n        if (Galaxy && Galaxy.currHistoryPanel && confirm((0, _localization2.default)(\"Really unhide all hidden datasets?\"))) {\n            $.post(Galaxy.root + \"history/adjust_hidden\", { user_action: \"unhide\" }, function () {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Delete Hidden Datasets\"),\n    anon: true,\n    func: function func() {\n        // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n        if (Galaxy && Galaxy.currHistoryPanel && confirm((0, _localization2.default)(\"Really delete all hidden datasets?\"))) {\n            $.post(Galaxy.root + \"history/adjust_hidden\", { user_action: \"delete\" }, function () {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Purge Deleted Datasets\"),\n    confirm: (0, _localization2.default)(\"Really delete all deleted datasets permanently? This cannot be undone.\"),\n    href: \"history/purge_deleted_datasets\",\n    purge: true,\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Downloads\"),\n    header: true\n}, {\n    html: (0, _localization2.default)(\"Export Tool Citations\"),\n    anon: true,\n    func: function func() {\n        if (Galaxy && Galaxy.currHistoryPanel && Galaxy.router) {\n            Galaxy.router.push(\"/histories/citations?id=\" + Galaxy.currHistoryPanel.model.id);\n        }\n    }\n}, {\n    html: (0, _localization2.default)(\"Export History to File\"),\n    href: \"history/export_archive?preview=True\",\n    anon: true\n}, {\n    html: (0, _localization2.default)(\"Other Actions\"),\n    header: true\n}, {\n    html: (0, _localization2.default)(\"Import from File\"),\n    href: \"history/import_archive\"\n}];\n\n// Webhooks\n_webhooks2.default.add({\n    url: \"api/webhooks/history-menu/all\",\n    async: false, // (hypothetically) slows down the performance\n    callback: function callback(webhooks) {\n        var webhooks_menu = [];\n\n        $.each(webhooks.models, function (index, model) {\n            var webhook = model.toJSON();\n            if (webhook.activate) {\n                webhooks_menu.push({\n                    html: (0, _localization2.default)(webhook.config.title),\n                    // func: function() {},\n                    anon: true\n                });\n            }\n        });\n\n        if (webhooks_menu.length > 0) {\n            webhooks_menu.unshift({\n                html: (0, _localization2.default)(\"Webhooks\"),\n                header: true\n            });\n            $.merge(menu, webhooks_menu);\n        }\n    }\n});\n\nfunction buildMenu(isAnon, purgeAllowed, urlRoot) {\n    return _.clone(menu).filter(function (menuOption) {\n        if (isAnon && !menuOption.anon) {\n            return false;\n        }\n        if (!purgeAllowed && menuOption.purge) {\n            return false;\n        }\n\n        //TODO:?? hard-coded galaxy_main\n        if (menuOption.href) {\n            menuOption.href = urlRoot + menuOption.href;\n            menuOption.target = menuOption.target || \"galaxy_main\";\n        }\n\n        if (menuOption.confirm) {\n            menuOption.func = function () {\n                if (confirm(menuOption.confirm)) {\n                    galaxy_main.location = menuOption.href;\n                }\n            };\n        }\n        return true;\n    });\n}\n\nvar create = function create($button, options) {\n    options = options || {};\n    var isAnon = options.anonymous === undefined ? true : options.anonymous;\n    var purgeAllowed = options.purgeAllowed || false;\n    var menu = buildMenu(isAnon, purgeAllowed, Galaxy.root);\n    //console.debug( 'menu:', menu );\n    return new _popupMenu2.default($button, menu);\n};\n\n// ============================================================================\nexports.default = create;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, $, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _historyModel = __webpack_require__(82);\n\nvar _historyModel2 = _interopRequireDefault(_historyModel);\n\nvar _historyViewEdit = __webpack_require__(247);\n\nvar _historyViewEdit2 = _interopRequireDefault(_historyViewEdit);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// ============================================================================\n/** session storage for history panel preferences (and to maintain state)\n */\nvar HistoryViewPrefs = _baseMvc2.default.SessionStorageModel.extend(\n/** @lends HistoryViewPrefs.prototype */{\n    defaults: {\n        /** should the tags editor be shown or hidden initially? */\n        tagsEditorShown: false,\n        /** should the annotation editor be shown or hidden initially? */\n        annotationEditorShown: false,\n        ///** what is the currently focused content (dataset or collection) in the current history?\n        // *      (the history panel will highlight and scroll to the focused content view)\n        // */\n        //focusedContentId : null\n        /** Current scroll position */\n        scrollPosition: 0\n    },\n    toString: function toString() {\n        return \"HistoryViewPrefs(\" + JSON.stringify(this.toJSON()) + \")\";\n    }\n});\n\n/** key string to store panel prefs (made accessible on class so you can access sessionStorage directly) */\nHistoryViewPrefs.storageKey = function storageKey() {\n    return \"history-panel\";\n};\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = _historyViewEdit2.default.HistoryViewEdit;\n// used in root/index.mako\n/** @class View/Controller for the user's current history model as used in the history\n *      panel (current right hand panel) of the analysis page.\n *\n *  The only history panel that:\n *      will poll for updates.\n *      displays datasets in reverse hid order.\n */\nvar CurrentHistoryView = _super.extend(\n/** @lends CurrentHistoryView.prototype */{\n    className: _super.prototype.className + \" current-history-panel\",\n\n    /** override to use drilldown (and not foldout) for how collections are displayed */\n    HDCAViewClass: _super.prototype.HDCAViewClass.extend({\n        foldoutStyle: \"drilldown\"\n    }),\n\n    emptyMsg: [(0, _localization2.default)(\"This history is empty\"), \". \", (0, _localization2.default)(\"You can \"), '<a class=\"uploader-link\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"load your own data\"), \"</a>\", (0, _localization2.default)(\" or \"), '<a class=\"get-data-link\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"get data from an external source\"), \"</a>\"].join(\"\"),\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events */\n    initialize: function initialize(attributes) {\n        attributes = attributes || {};\n\n        // ---- persistent preferences\n        /** maintain state / preferences over page loads */\n        this.preferences = new HistoryViewPrefs(_.extend({\n            id: HistoryViewPrefs.storageKey()\n        }, _.pick(attributes, _.keys(HistoryViewPrefs.prototype.defaults))));\n\n        _super.prototype.initialize.call(this, attributes);\n\n        /** sub-views that will overlay this panel (collections) */\n        this.panelStack = [];\n\n        /** id of currently focused content */\n        this.currentContentId = attributes.currentContentId || null;\n        //NOTE: purposely not sent to localstorage since panel recreation roughly lines up with a reset of this value\n    },\n\n    /** Override to cache the current scroll position with a listener */\n    _setUpListeners: function _setUpListeners() {\n        _super.prototype._setUpListeners.call(this);\n\n        var panel = this;\n        // reset scroll position when there's a new history\n        this.on(\"new-model\", function () {\n            panel.preferences.set(\"scrollPosition\", 0);\n        });\n    },\n\n    // ------------------------------------------------------------------------ loading history/item models\n    // TODO: next three more appropriate moved to the app level\n    /** (re-)loads the user's current history & contents w/ details */\n    loadCurrentHistory: function loadCurrentHistory() {\n        return this.loadHistory(null, {\n            url: Galaxy.root + \"history/current_history_json\"\n        });\n    },\n\n    /** loads a history & contents w/ details and makes them the current history */\n    switchToHistory: function switchToHistory(historyId, attributes) {\n        if (Galaxy.user.isAnonymous()) {\n            this.trigger(\"error\", (0, _localization2.default)(\"You must be logged in to switch histories\"), (0, _localization2.default)(\"Anonymous user\"));\n            return $.when();\n        }\n        return this.loadHistory(historyId, {\n            url: Galaxy.root + \"history/set_as_current?id=\" + historyId\n        });\n    },\n\n    /** creates a new history on the server and sets it as the user's current history */\n    createNewHistory: function createNewHistory(attributes) {\n        if (Galaxy.user.isAnonymous()) {\n            this.trigger(\"error\", (0, _localization2.default)(\"You must be logged in to create histories\"), (0, _localization2.default)(\"Anonymous user\"));\n            return $.when();\n        }\n        return this.loadHistory(null, {\n            url: Galaxy.root + \"history/create_new_current\"\n        });\n    },\n\n    /** release/free/shutdown old models and set up panel for new models */\n    setModel: function setModel(model, attributes, render) {\n        _super.prototype.setModel.call(this, model, attributes, render);\n        if (this.model && this.model.id) {\n            this.log(\"checking for updates\");\n            this.model.checkForUpdates();\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ history/content event listening\n    /** listening for history events */\n    _setUpModelListeners: function _setUpModelListeners() {\n        _super.prototype._setUpModelListeners.call(this);\n        // re-broadcast any model change events so that listeners don't have to re-bind to each history\n        return this.listenTo(this.model, {\n            \"change:nice_size change:size\": function changeNice_sizeChangeSize() {\n                this.trigger(\"history-size-change\", this, this.model, arguments);\n            },\n            \"change:id\": function changeId() {\n                this.once(\"loading-done\", function () {\n                    this.model.checkForUpdates();\n                });\n            }\n        });\n    },\n\n    /** listening for collection events */\n    _setUpCollectionListeners: function _setUpCollectionListeners() {\n        _super.prototype._setUpCollectionListeners.call(this);\n        // if a hidden item is created (gen. by a workflow), moves thru the updater to the ready state,\n        //  then: remove it from the collection if the panel is set to NOT show hidden datasets\n        this.listenTo(this.collection, \"state:ready\", function (model, newState, oldState) {\n            if (!model.get(\"visible\") && !this.collection.storage.includeHidden()) {\n                this.removeItemView(model);\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** override to add a handler to capture the scroll position when the parent scrolls */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        $where = $where || this.$el;\n        // console.log( '_setUpBehaviors', this.$scrollContainer( $where ).get(0), this.$list( $where ) );\n        // we need to call this in _setUpBehaviors which is called after render since the $el\n        // may not be attached to $el.parent and $scrollContainer() may not work\n        var panel = this;\n        _super.prototype._setUpBehaviors.call(panel, $where);\n\n        // cache the handler to remove and re-add so we don't pile up the handlers\n        if (!this._debouncedScrollCaptureHandler) {\n            this._debouncedScrollCaptureHandler = _.debounce(function scrollCapture() {\n                // cache the scroll position (only if visible)\n                if (panel.$el.is(\":visible\")) {\n                    panel.preferences.set(\"scrollPosition\", $(this).scrollTop());\n                }\n            }, 40);\n        }\n\n        panel.$scrollContainer($where).off(\"scroll\", this._debouncedScrollCaptureHandler).on(\"scroll\", this._debouncedScrollCaptureHandler);\n        return panel;\n    },\n\n    /** In this override, handle null models and move the search input to the top */\n    _buildNewRender: function _buildNewRender() {\n        if (!this.model) {\n            return $();\n        }\n        var $newRender = _super.prototype._buildNewRender.call(this);\n        $newRender.find(\".search\").prependTo($newRender.find(\"> .controls\"));\n        this._renderQuotaMessage($newRender);\n        return $newRender;\n    },\n\n    /** render the message displayed when a user is over quota and can't run jobs */\n    _renderQuotaMessage: function _renderQuotaMessage($whereTo) {\n        $whereTo = $whereTo || this.$el;\n        return $(this.templates.quotaMsg({}, this)).prependTo($whereTo.find(\".messages\"));\n    },\n\n    /** In this override, get and set current panel preferences when editor is used */\n    _renderTags: function _renderTags($where) {\n        var panel = this;\n        // render tags and show/hide based on preferences\n        _super.prototype._renderTags.call(panel, $where);\n        if (panel.preferences.get(\"tagsEditorShown\")) {\n            panel.tagsEditor.toggle(true);\n        }\n        // store preference when shown or hidden\n        panel.listenTo(panel.tagsEditor, \"hiddenUntilActivated:shown hiddenUntilActivated:hidden\", function (tagsEditor) {\n            panel.preferences.set(\"tagsEditorShown\", tagsEditor.hidden);\n        });\n    },\n\n    /** In this override, get and set current panel preferences when editor is used */\n    _renderAnnotation: function _renderAnnotation($where) {\n        var panel = this;\n        // render annotation and show/hide based on preferences\n        _super.prototype._renderAnnotation.call(panel, $where);\n        if (panel.preferences.get(\"annotationEditorShown\")) {\n            panel.annotationEditor.toggle(true);\n        }\n        // store preference when shown or hidden\n        panel.listenTo(panel.annotationEditor, \"hiddenUntilActivated:shown hiddenUntilActivated:hidden\", function (annotationEditor) {\n            panel.preferences.set(\"annotationEditorShown\", annotationEditor.hidden);\n        });\n    },\n\n    /** Override to scroll to cached position (in prefs) after swapping */\n    _swapNewRender: function _swapNewRender($newRender) {\n        _super.prototype._swapNewRender.call(this, $newRender);\n        var panel = this;\n        _.delay(function () {\n            var pos = panel.preferences.get(\"scrollPosition\");\n            if (pos) {\n                panel.scrollTo(pos, 0);\n            }\n        }, 10);\n        //TODO: is this enough of a delay on larger histories?\n\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** Override to add the current-content highlight class to currentContentId's view */\n    _attachItems: function _attachItems($whereTo) {\n        _super.prototype._attachItems.call(this, $whereTo);\n        var panel = this;\n        if (panel.currentContentId) {\n            panel._setCurrentContentById(panel.currentContentId);\n        }\n        return this;\n    },\n\n    /** Override to remove any drill down panels */\n    addItemView: function addItemView(model, collection, options) {\n        var view = _super.prototype.addItemView.call(this, model, collection, options);\n        if (!view) {\n            return view;\n        }\n        if (this.panelStack.length) {\n            return this._collapseDrilldownPanel();\n        }\n        return view;\n    },\n\n    // ------------------------------------------------------------------------ collection sub-views\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners: function _setUpItemViewListeners(view) {\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call(panel, view);\n        // use pub-sub to: handle drilldown expansion and collapse\n        return panel.listenTo(view, {\n            \"expanded:drilldown\": function expandedDrilldown(v, drilldown) {\n                this._expandDrilldownPanel(drilldown);\n            },\n            \"collapsed:drilldown\": function collapsedDrilldown(v, drilldown) {\n                this._collapseDrilldownPanel(drilldown);\n            }\n        });\n    },\n\n    /** display 'current content': add a visible highlight and store the id of a content item */\n    setCurrentContent: function setCurrentContent(view) {\n        this.$(\".history-content.current-content\").removeClass(\"current-content\");\n        if (view) {\n            view.$el.addClass(\"current-content\");\n            this.currentContentId = view.model.id;\n        } else {\n            this.currentContentId = null;\n        }\n    },\n\n    /** find the view with the id and then call setCurrentContent on it */\n    _setCurrentContentById: function _setCurrentContentById(id) {\n        var view = this.viewFromModelId(id) || null;\n        this.setCurrentContent(view);\n    },\n\n    /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n    _expandDrilldownPanel: function _expandDrilldownPanel(drilldown) {\n        this.panelStack.push(drilldown);\n        // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n        this.$controls().add(this.$list()).hide();\n        drilldown.parentName = this.model.get(\"name\");\n        drilldown.delegateEvents().render().$el.appendTo(this.$el);\n    },\n\n    /** Handle drilldown close by freeing the panel and re-rendering this panel */\n    _collapseDrilldownPanel: function _collapseDrilldownPanel(drilldown) {\n        this.panelStack.pop();\n        //TODO: MEM: free the panel\n        this.$controls().add(this.$list()).show();\n    },\n\n    // ........................................................................ panel events\n    /** event map */\n    events: _.extend(_.clone(_super.prototype.events), {\n        // the two links in the empty message\n        \"click .uploader-link\": function clickUploaderLink(ev) {\n            Galaxy.upload.show(ev);\n        },\n        \"click .get-data-link\": function clickGetDataLink(ev) {\n            var $toolMenu = $(\".toolMenuContainer\");\n            $toolMenu.parent().scrollTop(0);\n            $toolMenu.find('span:contains(\"Get Data\")').click();\n        }\n    }),\n\n    // ........................................................................ external objects/MVC\n    listenToGalaxy: function listenToGalaxy(galaxy) {\n        this.listenTo(galaxy, {\n            // when the galaxy_main iframe is loaded with a new page,\n            // compare the url to the following list and if there's a match\n            // pull the id from url and indicate in the history view that\n            // the dataset with that id is the 'current'ly active dataset\n            \"center-frame:load\": function centerFrameLoad(data) {\n                var pathToMatch = data.fullpath;\n                var hdaId = null;\n                var useToURLRegexMap = {\n                    display: /datasets\\/([a-f0-9]+)\\/display/,\n                    edit: /datasets\\/([a-f0-9]+)\\/edit/,\n                    report_error: /dataset\\/errors\\?id=([a-f0-9]+)/,\n                    rerun: /tool_runner\\/rerun\\?id=([a-f0-9]+)/,\n                    show_params: /datasets\\/([a-f0-9]+)\\/show_params/\n                    // no great way to do this here? (leave it in the dataset event handlers above?)\n                    // 'visualization' : 'visualization',\n                };\n                _.find(useToURLRegexMap, function (regex, use) {\n                    // grab the more specific match result (1), save, and use it as the find flag\n                    hdaId = _.result(pathToMatch.match(regex), 1);\n                    return hdaId;\n                });\n                // need to type mangle to go from web route to history contents\n                this._setCurrentContentById(hdaId ? \"dataset-\" + hdaId : null);\n            },\n            // when the center panel is given a new view, clear the current indicator\n            \"center-panel:load\": function centerPanelLoad(view) {\n                this._setCurrentContentById();\n            }\n        });\n    },\n\n    //TODO: remove quota meter from panel and remove this\n    /** add listeners to an external quota meter (mvc/user/user-quotameter.js) */\n    connectToQuotaMeter: function connectToQuotaMeter(quotaMeter) {\n        if (!quotaMeter) {\n            return this;\n        }\n        // show/hide the 'over quota message' in the history when the meter tells it to\n        this.listenTo(quotaMeter, \"quota:over\", this.showQuotaMessage);\n        this.listenTo(quotaMeter, \"quota:under\", this.hideQuotaMessage);\n\n        // having to add this to handle re-render of hview while overquota (the above do not fire)\n        this.on(\"rendered rendered:initial\", function () {\n            if (quotaMeter && quotaMeter.isOverQuota()) {\n                this.showQuotaMessage();\n            }\n        });\n        return this;\n    },\n\n    /** Override to preserve the quota message */\n    clearMessages: function clearMessages(ev) {\n        var $target = !_.isUndefined(ev) ? $(ev.currentTarget) : this.$messages().children('[class$=\"message\"]');\n        $target = $target.not(\".quota-message\");\n        $target.fadeOut(this.fxSpeed, function () {\n            $(this).remove();\n        });\n        return this;\n    },\n\n    /** Show the over quota message (which happens to be in the history panel).\n     */\n    showQuotaMessage: function showQuotaMessage() {\n        var $msg = this.$(\".quota-message\");\n        if ($msg.is(\":hidden\")) {\n            $msg.slideDown(this.fxSpeed);\n        }\n    },\n\n    /** Hide the over quota message (which happens to be in the history panel).\n     */\n    hideQuotaMessage: function hideQuotaMessage() {\n        var $msg = this.$(\".quota-message\");\n        if (!$msg.is(\":hidden\")) {\n            $msg.slideUp(this.fxSpeed);\n        }\n    },\n\n    // ........................................................................ options menu\n    //TODO: remove to batch\n    /** unhide any hidden datasets */\n    unhideHidden: function unhideHidden() {\n        var self = this;\n        if (confirm((0, _localization2.default)(\"Really unhide all hidden datasets?\"))) {\n            // get all hidden, regardless of deleted/purged\n            return self.model.contents._filterAndUpdate({ visible: false, deleted: \"\", purged: \"\" }, { visible: true }).done(function () {\n                // TODO: would be better to render these as they're unhidden instead of all at once\n                if (!self.model.contents.includeHidden) {\n                    self.renderItems();\n                }\n            });\n        }\n        return jQuery.when();\n    },\n\n    /** delete any hidden datasets */\n    deleteHidden: function deleteHidden() {\n        var self = this;\n        if (confirm((0, _localization2.default)(\"Really delete all hidden datasets?\"))) {\n            return self.model.contents._filterAndUpdate(\n            // get all hidden, regardless of deleted/purged\n            { visible: false, deleted: \"\", purged: \"\" },\n            // both delete *and* unhide them\n            { deleted: true, visible: true });\n        }\n        return jQuery.when();\n    },\n\n    /** Return a string rep of the history */\n    toString: function toString() {\n        return \"CurrentHistoryView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//------------------------------------------------------------------------------ TEMPLATES\nCurrentHistoryView.prototype.templates = function () {\n    var quotaMsgTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"quota-message errormessage\">', (0, _localization2.default)(\"You are over your disk quota\"), \". \", (0, _localization2.default)(\"Tool execution is on hold until your disk usage drops below your allocated quota\"), \".\", \"</div>\"], \"history\");\n    return _.extend(_.clone(_super.prototype.templates), {\n        quotaMsg: quotaMsgTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    CurrentHistoryView: CurrentHistoryView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//ASSUMES: jquery\n//=============================================================================\n/** @class AjaxQueue\n *  Class that allows queueing functions that return jQuery promises (such\n *  as ajax calls). Each function waits for the previous to complete before\n *  being called\n *\n *  @constructor accepts a list of functions and automatically begins\n *      processing them\n */\nvar AjaxQueue = function () {\n    function AjaxQueue(initialFunctions) {\n        _classCallCheck(this, AjaxQueue);\n\n        /** the main deferred for the entire queue - note: also sends notifications of progress */\n        this.deferred = jQuery.Deferred();\n        /** the queue array of functions */\n        this.queue = [];\n        /** cache the response from each deferred call - error or success */\n        this.responses = [];\n        /** total number of fn's to process */\n        this.numToProcess = 0;\n        /** is the queue processing/waiting for any calls to return? */\n        this.running = false;\n\n        this.init(initialFunctions || []);\n        this.start();\n    }\n\n    /** add all fns in initialFunctions (if any) to the queue */\n\n\n    _createClass(AjaxQueue, [{\n        key: \"init\",\n        value: function init(initialFunctions) {\n            var _this = this;\n\n            initialFunctions.forEach(function (fn) {\n                _this.add(fn);\n            });\n        }\n    }, {\n        key: \"add\",\n        value: function add(fn) {\n            var _this2 = this;\n\n            var index = this.queue.length;\n            this.numToProcess += 1;\n\n            this.queue.push(function () {\n                var fnIndex = index;\n                var xhr = fn();\n                // if successful, notify using the deferred to allow tracking progress\n                xhr.done(function (response) {\n                    _this2.deferred.notify({\n                        curr: fnIndex,\n                        total: _this2.numToProcess,\n                        response: response\n                    });\n                });\n                // (regardless of previous error or success) if not last ajax call, shift and call the next\n                //  if last fn, resolve deferred\n                xhr.always(function (response) {\n                    _this2.responses.push(response);\n                    if (_this2.queue.length) {\n                        _this2.queue.shift()();\n                    } else {\n                        _this2.stop();\n                    }\n                });\n            });\n            return this;\n        }\n    }, {\n        key: \"start\",\n        value: function start() {\n            if (this.queue.length) {\n                this.running = true;\n                this.queue.shift()();\n            }\n            return this;\n        }\n\n        /** stop the queue\n         *  @param {boolean} causeFail  cause an error/fail on the main deferred\n         *  @param {String} msg         message to send when rejecting the main deferred\n         */\n\n    }, {\n        key: \"stop\",\n        value: function stop(causeFail, msg) {\n            //TODO: doesn't abort current call\n            this.running = false;\n            this.queue = [];\n            if (causeFail) {\n                //TODO: spliced args instead\n                this.deferred.reject(msg);\n            } else {\n                this.deferred.resolve(this.responses);\n            }\n            this.numToProcess = 0;\n            this.deferred = jQuery.Deferred();\n            return this;\n        }\n\n        // only a handful of the deferred interface for now - possible YAGNI\n        /** implement done from the jq deferred interface */\n\n    }, {\n        key: \"done\",\n        value: function done(fn) {\n            return this.deferred.done(fn);\n        }\n\n        /** implement fail from the jq deferred interface */\n\n    }, {\n        key: \"fail\",\n        value: function fail(fn) {\n            return this.deferred.fail(fn);\n        }\n\n        /** implement always from the jq deferred interface */\n\n    }, {\n        key: \"always\",\n        value: function always(fn) {\n            return this.deferred.always(fn);\n        }\n\n        /** implement progress from the jq deferred interface */\n\n    }, {\n        key: \"progress\",\n        value: function progress(fn) {\n            return this.deferred.progress(fn);\n        }\n\n        /** shortcut constructor / fire and forget\n         *  @returns {Deferred} the queue's main deferred\n         */\n\n    }], [{\n        key: \"create\",\n        value: function create(initialFunctions) {\n            return new AjaxQueue(initialFunctions).deferred;\n        }\n    }]);\n\n    return AjaxQueue;\n}();\n\n//=============================================================================\n/** @class NamedAjaxQueue\n *  @augments AjaxQueue\n *  Allows associating a name with a deferring fn and prevents adding deferring\n *  fns if the name has already been used. Useful to prevent build up of duplicate\n *  async calls.\n *  Both the array initialFunctions sent to constructor and any added later with\n *  add() should be objects (NOT functions) of the form:\n *  { name: some unique id,\n *    fn:   the deferring fn or ajax call }\n */\n\n\nvar NamedAjaxQueue = function (_AjaxQueue) {\n    _inherits(NamedAjaxQueue, _AjaxQueue);\n\n    function NamedAjaxQueue(initialFunctions) {\n        _classCallCheck(this, NamedAjaxQueue);\n\n        var _this3 = _possibleConstructorReturn(this, (NamedAjaxQueue.__proto__ || Object.getPrototypeOf(NamedAjaxQueue)).call(this, initialFunctions));\n\n        _this3.names = {};\n        return _this3;\n    }\n\n    /** add the obj.fn to the queue if obj.name hasn't been used before */\n\n\n    _createClass(NamedAjaxQueue, [{\n        key: \"add\",\n        value: function add(obj) {\n            if (!(obj.hasOwnProperty(\"name\") && obj.hasOwnProperty(\"fn\"))) {\n                throw new Error(\"NamedAjaxQueue.add requires an object with both \\\"name\\\" and \\\"fn\\\": \" + JSON.stringify(obj));\n            }\n            if (this.names.hasOwnProperty(obj.name)) {\n                //console.warn( 'name has been used:', obj.name );\n                return;\n            }\n            this.names[obj.name] = true;\n            return _get(NamedAjaxQueue.prototype.__proto__ || Object.getPrototypeOf(NamedAjaxQueue.prototype), \"add\", this).call(this, obj.fn);\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            this.names = {};\n            return this;\n        }\n\n        /** shortcut constructor / fire and forget\n         *  @returns {Deferred} the queue's main deferred\n         */\n\n    }], [{\n        key: \"create\",\n        value: function create(initialFunctions) {\n            return new NamedAjaxQueue(initialFunctions).deferred;\n        }\n    }]);\n\n    return NamedAjaxQueue;\n}(AjaxQueue);\n\n//=============================================================================\n\n\nexports.default = {\n    AjaxQueue: AjaxQueue,\n    NamedAjaxQueue: NamedAjaxQueue\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _historyView = __webpack_require__(248);\n\nvar _historyView2 = _interopRequireDefault(_historyView);\n\nvar _historyContents = __webpack_require__(83);\n\nvar _historyContents2 = _interopRequireDefault(_historyContents);\n\nvar _states = __webpack_require__(46);\n\nvar _states2 = _interopRequireDefault(_states);\n\nvar _hdaModel = __webpack_require__(128);\n\nvar _hdaModel2 = _interopRequireDefault(_hdaModel);\n\nvar _hdaLiEdit = __webpack_require__(250);\n\nvar _hdaLiEdit2 = _interopRequireDefault(_hdaLiEdit);\n\nvar _hdcaLiEdit = __webpack_require__(251);\n\nvar _hdcaLiEdit2 = _interopRequireDefault(_hdcaLiEdit);\n\nvar _tag = __webpack_require__(67);\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _annotation = __webpack_require__(135);\n\nvar _annotation2 = _interopRequireDefault(_annotation);\n\nvar _listCollectionCreator = __webpack_require__(78);\n\nvar _listCollectionCreator2 = _interopRequireDefault(_listCollectionCreator);\n\nvar _pairCollectionCreator = __webpack_require__(254);\n\nvar _pairCollectionCreator2 = _interopRequireDefault(_pairCollectionCreator);\n\nvar _listOfPairsCollectionCreator = __webpack_require__(255);\n\nvar _listOfPairsCollectionCreator2 = _interopRequireDefault(_listOfPairsCollectionCreator);\n\nvar _faIconButton = __webpack_require__(49);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _popupMenu = __webpack_require__(20);\n\nvar _popupMenu2 = _interopRequireDefault(_popupMenu);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(15);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = _historyView2.default.HistoryView;\n// base class for history-view-edit-current and used as-is in history/view.mako\n/** @class Editable View/Controller for the history model.\n *\n *  Allows:\n *      (everything HistoryView allows)\n *      changing the name\n *      displaying and editing tags and annotations\n *      multi-selection and operations on mulitple content items\n */\nvar HistoryViewEdit = _super.extend(\n/** @lends HistoryViewEdit.prototype */{\n    /** class to use for constructing the HistoryDatasetAssociation views */\n    HDAViewClass: _hdaLiEdit2.default.HDAListItemEdit,\n    /** class to use for constructing the HistoryDatasetCollectionAssociation views */\n    HDCAViewClass: _hdcaLiEdit2.default.HDCAListItemEdit,\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes\n     */\n    initialize: function initialize(attributes) {\n        attributes = attributes || {};\n        _super.prototype.initialize.call(this, attributes);\n\n        // ---- set up instance vars\n        /** editor for tags - sub-view */\n        this.tagsEditor = null;\n\n        /** enable drag and drop - sub-view */\n        this.dragItems = true;\n\n        /** editor for annotations - sub-view */\n        this.annotationEditor = null;\n\n        /** allow user purge of dataset files? */\n        this.purgeAllowed = attributes.purgeAllowed || false;\n\n        // states/modes the panel can be in\n        /** is the panel currently showing the dataset selection controls? */\n        this.annotationEditorShown = attributes.annotationEditorShown || false;\n        this.tagsEditorShown = attributes.tagsEditorShown || false;\n    },\n\n    /** Override to handle history as drag-drop target */\n    _setUpListeners: function _setUpListeners() {\n        _super.prototype._setUpListeners.call(this);\n        return this.on({\n            \"droptarget:drop\": function droptargetDrop(ev, data) {\n                // process whatever was dropped and re-hide the drop target\n                this.dataDropped(data);\n                this.dropTargetOff();\n            },\n            \"view:attached view:removed\": function viewAttachedViewRemoved() {\n                this._renderCounts();\n            },\n            \"search:loading-progress\": this._renderSearchProgress,\n            \"search:searching\": this._renderSearchFindings\n        });\n    },\n\n    // ------------------------------------------------------------------------ listeners\n    /** listening for history and HDA events */\n    _setUpModelListeners: function _setUpModelListeners() {\n        _super.prototype._setUpModelListeners.call(this);\n        this.listenTo(this.model, \"change:size\", this.updateHistoryDiskSize);\n        return this;\n    },\n\n    /** listening for collection events */\n    _setUpCollectionListeners: function _setUpCollectionListeners() {\n        _super.prototype._setUpCollectionListeners.call(this);\n        this.listenTo(this.collection, {\n            \"change:deleted\": this._handleItemDeletedChange,\n            \"change:visible\": this._handleItemVisibleChange,\n            \"change:purged\": function changePurged(model) {\n                // hafta get the new nice-size w/o the purged model\n                this.model.fetch();\n            },\n            // loading indicators for deleted/hidden\n            \"fetching-deleted\": function fetchingDeleted(collection) {\n                this.$(\"> .controls .deleted-count\").html(\"<i>\" + (0, _localization2.default)(\"loading...\") + \"</i>\");\n            },\n            \"fetching-hidden\": function fetchingHidden(collection) {\n                this.$(\"> .controls .hidden-count\").html(\"<i>\" + (0, _localization2.default)(\"loading...\") + \"</i>\");\n            },\n            \"fetching-deleted-done fetching-hidden-done\": this._renderCounts\n        });\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** In this override, add tag and annotation editors and a btn to toggle the selectors */\n    _buildNewRender: function _buildNewRender() {\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = _super.prototype._buildNewRender.call(this);\n        if (!this.model) {\n            return $newRender;\n        }\n\n        if (Galaxy && Galaxy.user && Galaxy.user.id && Galaxy.user.id === this.model.get(\"user_id\")) {\n            this._renderTags($newRender);\n            this._renderAnnotation($newRender);\n        }\n        return $newRender;\n    },\n\n    /** Update the history size display (curr. upper right of panel). */\n    updateHistoryDiskSize: function updateHistoryDiskSize() {\n        this.$(\".history-size\").text(this.model.get(\"nice_size\"));\n    },\n\n    /** override to render counts when the items are rendered */\n    renderItems: function renderItems($whereTo) {\n        var views = _super.prototype.renderItems.call(this, $whereTo);\n        if (!this.searchFor) {\n            this._renderCounts($whereTo);\n        } else {\n            this._renderSearchFindings($whereTo);\n        }\n        return views;\n    },\n\n    /** override to show counts, what's deleted/hidden, and links to toggle those */\n    _renderCounts: function _renderCounts($whereTo) {\n        $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n        var html = this.templates.counts(this.model.toJSON(), this);\n        return $whereTo.find(\"> .controls .subtitle\").html(html);\n    },\n\n    /** render the tags sub-view controller */\n    _renderTags: function _renderTags($where) {\n        var panel = this;\n        this.tagsEditor = new _tag2.default.TagsEditor({\n            model: this.model,\n            el: $where.find(\".controls .tags-display\"),\n            onshowFirstTime: function onshowFirstTime() {\n                this.render();\n            },\n            // show hide sub-view tag editors when this is shown/hidden\n            onshow: function onshow() {\n                panel.toggleHDATagEditors(true, panel.fxSpeed);\n            },\n            onhide: function onhide() {\n                panel.toggleHDATagEditors(false, panel.fxSpeed);\n            },\n            $activator: (0, _faIconButton2.default)({\n                title: (0, _localization2.default)(\"Edit history tags\"),\n                classes: \"history-tag-btn\",\n                faIcon: \"fa-tags\"\n            }).appendTo($where.find(\".controls .actions\"))\n        });\n    },\n    /** render the annotation sub-view controller */\n    _renderAnnotation: function _renderAnnotation($where) {\n        var panel = this;\n        this.annotationEditor = new _annotation2.default.AnnotationEditor({\n            model: this.model,\n            el: $where.find(\".controls .annotation-display\"),\n            onshowFirstTime: function onshowFirstTime() {\n                this.render();\n            },\n            // show hide sub-view view annotation editors when this is shown/hidden\n            onshow: function onshow() {\n                panel.toggleHDAAnnotationEditors(true, panel.fxSpeed);\n            },\n            onhide: function onhide() {\n                panel.toggleHDAAnnotationEditors(false, panel.fxSpeed);\n            },\n            $activator: (0, _faIconButton2.default)({\n                title: (0, _localization2.default)(\"Edit history annotation\"),\n                classes: \"history-annotate-btn\",\n                faIcon: \"fa-comment\"\n            }).appendTo($where.find(\".controls .actions\"))\n        });\n    },\n\n    /** Set up HistoryViewEdit js/widget behaviours\n     *  In this override, make the name editable\n     */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        $where = $where || this.$el;\n        _super.prototype._setUpBehaviors.call(this, $where);\n        if (!this.model) {\n            return;\n        }\n\n        // anon users shouldn't have access to any of the following\n        if (!Galaxy.user || Galaxy.user.isAnonymous() || Galaxy.user.id !== this.model.get(\"user_id\")) {\n            return;\n        }\n\n        var panel = this;\n        var nameSelector = \"> .controls .name\";\n        $where.find(nameSelector).attr(\"title\", (0, _localization2.default)(\"Click to rename history\")).tooltip({ placement: \"bottom\" }).make_text_editable({\n            on_finish: function on_finish(newName) {\n                var previousName = panel.model.get(\"name\");\n                if (newName && newName !== previousName) {\n                    panel.$el.find(nameSelector).text(newName);\n                    panel.model.save({ name: newName }).fail(function () {\n                        panel.$el.find(nameSelector).text(panel.model.previous(\"name\"));\n                    });\n                } else {\n                    panel.$el.find(nameSelector).text(previousName);\n                }\n            }\n        });\n    },\n\n    /** return a new popup menu for choosing a multi selection action\n     *  ajax calls made for multiple datasets are queued\n     */\n    multiselectActions: function multiselectActions() {\n        var panel = this;\n\n        var actions = [{\n            html: (0, _localization2.default)(\"Hide datasets\"),\n            func: function func() {\n                var action = _hdaModel2.default.HistoryDatasetAssociation.prototype.hide;\n                panel.getSelectedModels().ajaxQueue(action);\n            }\n        }, {\n            html: (0, _localization2.default)(\"Unhide datasets\"),\n            func: function func() {\n                var action = _hdaModel2.default.HistoryDatasetAssociation.prototype.unhide;\n                panel.getSelectedModels().ajaxQueue(action);\n            }\n        }, {\n            html: (0, _localization2.default)(\"Delete datasets\"),\n            func: function func() {\n                var action = _hdaModel2.default.HistoryDatasetAssociation.prototype[\"delete\"];\n                panel.getSelectedModels().ajaxQueue(action);\n            }\n        }, {\n            html: (0, _localization2.default)(\"Undelete datasets\"),\n            func: function func() {\n                var action = _hdaModel2.default.HistoryDatasetAssociation.prototype.undelete;\n                panel.getSelectedModels().ajaxQueue(action);\n            }\n        }];\n\n        if (panel.purgeAllowed) {\n            actions.push({\n                html: (0, _localization2.default)(\"Permanently delete datasets\"),\n                func: function func() {\n                    if (confirm((0, _localization2.default)(\"This will permanently remove the data in your datasets. Are you sure?\"))) {\n                        var action = _hdaModel2.default.HistoryDatasetAssociation.prototype.purge;\n                        panel.getSelectedModels().ajaxQueue(action);\n                    }\n                }\n            });\n        }\n        actions = actions.concat(panel._collectionActions());\n        return actions;\n    },\n\n    /**   */\n    _collectionActions: function _collectionActions() {\n        var panel = this;\n        return [{\n            html: (0, _localization2.default)(\"Build Dataset List\"),\n            func: function func() {\n                panel.buildCollection(\"list\");\n            }\n        },\n        // TODO: Only show quick pair if two things selected.\n        {\n            html: (0, _localization2.default)(\"Build Dataset Pair\"),\n            func: function func() {\n                panel.buildCollection(\"paired\");\n            }\n        }, {\n            html: (0, _localization2.default)(\"Build List of Dataset Pairs\"),\n            func: function func() {\n                panel.buildCollection(\"list:paired\");\n            }\n        }];\n    },\n\n    buildCollection: function buildCollection(collectionType, selection, hideSourceItems) {\n        var panel = this;\n        var selection = selection || panel.getSelectedModels();\n        var hideSourceItems = hideSourceItems || false;\n        var createFunc;\n        if (collectionType == \"list\") {\n            createFunc = _listCollectionCreator2.default.createListCollection;\n        } else if (collectionType == \"paired\") {\n            createFunc = _pairCollectionCreator2.default.createPairCollection;\n        } else if (collectionType == \"list:paired\") {\n            createFunc = _listOfPairsCollectionCreator2.default.createListOfPairsCollection;\n        } else {\n            console.warn(\"Unknown collectionType encountered \" + collectionType);\n        }\n        createFunc(selection, hideSourceItems).done(function () {\n            panel.model.refresh();\n        });\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** In this override, add purgeAllowed and whether tags/annotation editors should be shown */\n    _getItemViewOptions: function _getItemViewOptions(model) {\n        var options = _super.prototype._getItemViewOptions.call(this, model);\n        _.extend(options, {\n            purgeAllowed: this.purgeAllowed,\n            tagsEditorShown: this.tagsEditor && !this.tagsEditor.hidden,\n            annotationEditorShown: this.annotationEditor && !this.annotationEditor.hidden\n        });\n        return options;\n    },\n\n    /** If this item is deleted and we're not showing deleted items, remove the view\n     *  @param {Model} the item model to check\n     */\n    _handleItemDeletedChange: function _handleItemDeletedChange(itemModel) {\n        if (itemModel.get(\"deleted\")) {\n            this._handleItemDeletion(itemModel);\n        } else {\n            this._handleItemUndeletion(itemModel);\n        }\n        this._renderCounts();\n    },\n\n    _handleItemDeletion: function _handleItemDeletion(itemModel) {\n        var contentsShown = this.model.get(\"contents_active\");\n        contentsShown.deleted += 1;\n        contentsShown.active -= 1;\n        if (!this.model.contents.includeDeleted) {\n            this.removeItemView(itemModel);\n        }\n        this.model.set(\"contents_active\", contentsShown);\n    },\n\n    _handleItemUndeletion: function _handleItemUndeletion(itemModel) {\n        var contentsShown = this.model.get(\"contents_active\");\n        contentsShown.deleted -= 1;\n        if (!this.model.contents.includeDeleted) {\n            contentsShown.active -= 1;\n        }\n        this.model.set(\"contents_active\", contentsShown);\n    },\n\n    /** If this item is hidden and we're not showing hidden items, remove the view\n     *  @param {Model} the item model to check\n     */\n    _handleItemVisibleChange: function _handleItemVisibleChange(itemModel) {\n        if (itemModel.hidden()) {\n            this._handleItemHidden(itemModel);\n        } else {\n            this._handleItemUnhidden(itemModel);\n        }\n        this._renderCounts();\n    },\n\n    _handleItemHidden: function _handleItemHidden(itemModel) {\n        var contentsShown = this.model.get(\"contents_active\");\n        contentsShown.hidden += 1;\n        contentsShown.active -= 1;\n        if (!this.model.contents.includeHidden) {\n            this.removeItemView(itemModel);\n        }\n        this.model.set(\"contents_active\", contentsShown);\n    },\n\n    _handleItemUnhidden: function _handleItemUnhidden(itemModel) {\n        var contentsShown = this.model.get(\"contents_active\");\n        contentsShown.hidden -= 1;\n        if (!this.model.contents.includeHidden) {\n            contentsShown.active -= 1;\n        }\n        this.model.set(\"contents_active\", contentsShown);\n    },\n\n    /** toggle the visibility of each content's tagsEditor applying all the args sent to this function */\n    toggleHDATagEditors: function toggleHDATagEditors(showOrHide, speed) {\n        _.each(this.views, function (view) {\n            if (view.tagsEditor) {\n                view.tagsEditor.toggle(showOrHide, speed);\n            }\n        });\n    },\n\n    /** toggle the visibility of each content's annotationEditor applying all the args sent to this function */\n    toggleHDAAnnotationEditors: function toggleHDAAnnotationEditors(showOrHide, speed) {\n        _.each(this.views, function (view) {\n            if (view.annotationEditor) {\n                view.annotationEditor.toggle(showOrHide, speed);\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .show-selectors-btn\": \"toggleSelectors\",\n        \"click .toggle-deleted-link\": function clickToggleDeletedLink(ev) {\n            this.toggleShowDeleted();\n        },\n        \"click .toggle-hidden-link\": function clickToggleHiddenLink(ev) {\n            this.toggleShowHidden();\n        }\n    }),\n\n    // ------------------------------------------------------------------------ search\n    _renderSearchProgress: function _renderSearchProgress(limit, offset) {\n        var stop = limit + offset;\n        return this.$(\"> .controls .subtitle\").html([\"<i>\", (0, _localization2.default)(\"Searching \"), stop, \"/\", this.model.contentsShown(), \"</i>\"].join(\"\"));\n    },\n\n    /** override to display number found in subtitle */\n    _renderSearchFindings: function _renderSearchFindings($whereTo) {\n        $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n        var html = this.templates.found(this.model.toJSON(), this);\n        $whereTo.find(\"> .controls .subtitle\").html(html);\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ as drop target\n    /** turn all the drag and drop handlers on and add some help text above the drop area */\n    dropTargetOn: function dropTargetOn() {\n        if (this.dropTarget) {\n            return this;\n        }\n        this.dropTarget = true;\n\n        //TODO: to init\n        var dropHandlers = {\n            dragenter: _.bind(this.dragenter, this),\n            dragover: _.bind(this.dragover, this),\n            dragleave: _.bind(this.dragleave, this),\n            drop: _.bind(this.drop, this)\n        };\n\n        var $dropTarget = this._renderDropTarget();\n        this.$list().before([this._renderDropTargetHelp(), $dropTarget]);\n        for (var evName in dropHandlers) {\n            if (dropHandlers.hasOwnProperty(evName)) {\n                //console.debug( evName, dropHandlers[ evName ] );\n                $dropTarget.on(evName, dropHandlers[evName]);\n            }\n        }\n        return this;\n    },\n\n    /** render a box to serve as a 'drop here' area on the history */\n    _renderDropTarget: function _renderDropTarget() {\n        this.$(\".history-drop-target\").remove();\n        return $(\"<div/>\").addClass(\"history-drop-target\");\n    },\n\n    /** tell the user how it works  */\n    _renderDropTargetHelp: function _renderDropTargetHelp() {\n        this.$(\".history-drop-target-help\").remove();\n        return $(\"<div/>\").addClass(\"history-drop-target-help\").text((0, _localization2.default)(\"Drag datasets here to copy them to the current history\"));\n    },\n\n    /** shut down drag and drop event handlers and remove drop target */\n    dropTargetOff: function dropTargetOff() {\n        if (!this.dropTarget) {\n            return this;\n        }\n        //this.log( 'dropTargetOff' );\n        this.dropTarget = false;\n        var dropTarget = this.$(\".history-drop-target\").get(0);\n        for (var evName in this._dropHandlers) {\n            if (this._dropHandlers.hasOwnProperty(evName)) {\n                dropTarget.off(evName, this._dropHandlers[evName]);\n            }\n        }\n        this.$(\".history-drop-target\").remove();\n        this.$(\".history-drop-target-help\").remove();\n        return this;\n    },\n    /** toggle the target on/off */\n    dropTargetToggle: function dropTargetToggle() {\n        if (this.dropTarget) {\n            this.dropTargetOff();\n        } else {\n            this.dropTargetOn();\n        }\n        return this;\n    },\n\n    dragenter: function dragenter(ev) {\n        //console.debug( 'dragenter:', this, ev );\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.$(\".history-drop-target\").css(\"border\", \"2px solid black\");\n    },\n    dragover: function dragover(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n    },\n    dragleave: function dragleave(ev) {\n        //console.debug( 'dragleave:', this, ev );\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.$(\".history-drop-target\").css(\"border\", \"1px dashed black\");\n    },\n    /** when (text) is dropped try to parse as json and trigger an event */\n    drop: function drop(ev) {\n        ev.preventDefault();\n        //ev.stopPropagation();\n\n        var self = this;\n        var dataTransfer = ev.originalEvent.dataTransfer;\n        var data = dataTransfer.getData(\"text\");\n\n        dataTransfer.dropEffect = \"move\";\n        try {\n            data = JSON.parse(data);\n        } catch (err) {\n            self.warn(\"error parsing JSON from drop:\", data);\n        }\n\n        self.trigger(\"droptarget:drop\", ev, data, self);\n        return false;\n    },\n\n    /** handler that copies data into the contents */\n    dataDropped: function dataDropped(data) {\n        var self = this;\n        // HDA: dropping will copy it to the history\n        if (_.isObject(data) && data.model_class === \"HistoryDatasetAssociation\" && data.id) {\n            if (self.contents.currentPage !== 0) {\n                return self.contents.fetchPage(0).then(function () {\n                    return self.model.contents.copy(data.id);\n                });\n            }\n            return self.model.contents.copy(data.id);\n        }\n        return jQuery.when();\n    },\n\n    // ........................................................................ misc\n    /** Return a string rep of the history */\n    toString: function toString() {\n        return \"HistoryViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryViewEdit.prototype.templates = function () {\n    var countsTemplate = _baseMvc2.default.wrapTemplate([\"<% var shown = Math.max( view.views.length, history.contents_active.active ) %>\", \"<% if( shown ){ %>\", '<span class=\"shown-count\">', \"<%- shown %> \", (0, _localization2.default)(\"shown\"), \"</span>\", \"<% } %>\", \"<% if( history.contents_active.deleted ){ %>\", '<span class=\"deleted-count\">', \"<% if( view.model.contents.includeDeleted ){ %>\", '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"hide deleted\"), \"</a>\", \"<% } else { %>\", \"<%- history.contents_active.deleted %> \", '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"deleted\"), \"</a>\", \"<% } %>\", \"</span>\", \"<% } %>\", \"<% if( history.contents_active.hidden ){ %>\", '<span class=\"hidden-count\">', \"<% if( view.model.contents.includeHidden ){ %>\", '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"hide hidden\"), \"</a>\", \"<% } else { %>\", \"<%- history.contents_active.hidden %> \", '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"hidden\"), \"</a>\", \"<% } %>\", \"</span>\", \"<% } %>\"], \"history\");\n\n    var foundTemplate = _baseMvc2.default.wrapTemplate([(0, _localization2.default)(\"Found\"), \" <%- view.views.length %>, \", \"<% if( history.contents_active.deleted ){ %>\", \"<% if( view.model.contents.includeDeleted ){ %>\", '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"hide deleted\"), \"</a>, \", \"<% } else { %>\", '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"show deleted\"), \"</a>, \", \"<% } %>\", \"<% } %>\", \"<% if( history.contents_active.hidden ){ %>\", \"<% if( view.model.contents.includeHidden ){ %>\", '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"hide hidden\"), \"</a>\", \"<% } else { %>\", '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"show hidden\"), \"</a>\", \"<% } %>\", \"<% } %>\"], \"history\");\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        counts: countsTemplate,\n        found: foundTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    HistoryViewEdit: HistoryViewEdit\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(_, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listView = __webpack_require__(129);\n\nvar _listView2 = _interopRequireDefault(_listView);\n\nvar _historyModel = __webpack_require__(82);\n\nvar _historyModel2 = _interopRequireDefault(_historyModel);\n\nvar _historyContents = __webpack_require__(83);\n\nvar _historyContents2 = _interopRequireDefault(_historyContents);\n\nvar _historyPreferences = __webpack_require__(84);\n\nvar _historyPreferences2 = _interopRequireDefault(_historyPreferences);\n\nvar _hdaLi = __webpack_require__(131);\n\nvar _hdaLi2 = _interopRequireDefault(_hdaLi);\n\nvar _hdcaLi = __webpack_require__(132);\n\nvar _hdcaLi2 = _interopRequireDefault(_hdcaLi);\n\nvar _userModel = __webpack_require__(24);\n\nvar _userModel2 = _interopRequireDefault(_userModel);\n\nvar _errorModal = __webpack_require__(126);\n\nvar _errorModal2 = _interopRequireDefault(_errorModal);\n\nvar _faIconButton = __webpack_require__(49);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(130);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class  non-editable, read-only View/Controller for a history model.\n *  Allows:\n *      changing the loaded history\n *      displaying data, info, and download\n *      tracking history attrs: size, tags, annotations, name, etc.\n *  Does not allow:\n *      changing the name\n */\nvar _super = _listView2.default.ModelListPanel;\nvar HistoryView = _super.extend(\n/** @lends HistoryView.prototype */{\n    _logNamespace: \"history\",\n\n    /** class to use for constructing the HDA views */\n    HDAViewClass: _hdaLi2.default.HDAListItemView,\n    /** class to use for constructing the HDCA views */\n    HDCAViewClass: _hdcaLi2.default.HDCAListItemView,\n    /** class to used for constructing collection of sub-view models */\n    collectionClass: _historyContents2.default.HistoryContents,\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey: \"contents\",\n\n    tagName: \"div\",\n    className: _super.prototype.className + \" history-panel\",\n\n    /** string to display when the collection is empty */\n    emptyMsg: (0, _localization2.default)(\"This history is empty\"),\n    /** displayed when no items match the search terms */\n    noneFoundMsg: (0, _localization2.default)(\"No matching datasets found\"),\n    /** string used for search placeholder */\n    searchPlaceholder: (0, _localization2.default)(\"search datasets\"),\n\n    /** @type {Number} ms to wait after history load to fetch/decorate hdcas with element_count */\n    FETCH_COLLECTION_COUNTS_DELAY: 2000,\n\n    // ......................................................................... SET UP\n    /** Set up the view, bind listeners.\n     *  @param {Object} attributes optional settings for the panel\n     */\n    initialize: function initialize(attributes) {\n        _super.prototype.initialize.call(this, attributes);\n        // ---- instance vars\n        // control contents/behavior based on where (and in what context) the panel is being used\n        /** where should pages from links be displayed? (default to new tab/window) */\n        this.linkTarget = attributes.linkTarget || \"_blank\";\n\n        /** timeout id for detailed fetch of collection counts, etc... */\n        this.detailedFetchTimeoutId = null;\n    },\n\n    /** create and return a collection for when none is initially passed */\n    _createDefaultCollection: function _createDefaultCollection() {\n        // override\n        return new this.collectionClass([], {\n            history: this.model\n        });\n    },\n\n    /** In this override, clear the update timer on the model */\n    freeModel: function freeModel() {\n        _super.prototype.freeModel.call(this);\n        if (this.model) {\n            this.model.clearUpdateTimeout();\n        }\n        this._clearDetailedFetchTimeout();\n        return this;\n    },\n\n    /** clear the timeout and the cached timeout id */\n    _clearDetailedFetchTimeout: function _clearDetailedFetchTimeout() {\n        if (this.detailedFetchTimeoutId) {\n            clearTimeout(this.detailedFetchTimeoutId);\n            this.detailedFetchTimeoutId = null;\n        }\n    },\n\n    /** create any event listeners for the panel\n     *  @fires: rendered:initial    on the first render\n     *  @fires: empty-history       when switching to a history with no contents or creating a new history\n     */\n    _setUpListeners: function _setUpListeners() {\n        _super.prototype._setUpListeners.call(this);\n        this.on({\n            error: function error(model, xhr, options, msg, details) {\n                this.errorHandler(model, xhr, options, msg, details);\n            },\n            \"loading-done\": function loadingDone() {\n                var self = this;\n                // after the initial load, decorate with more time consuming fields (like HDCA element_counts)\n                self.detailedFetchTimeoutId = _.delay(function () {\n                    self.detailedFetchTimeoutId = null;\n                    self.model.contents.fetchCollectionCounts();\n                }, self.FETCH_COLLECTION_COUNTS_DELAY);\n            },\n            \"views:ready view:attached view:removed\": function viewsReadyViewAttachedViewRemoved(view) {\n                this._renderSelectButton();\n            },\n            \"view:attached\": function viewAttached(view) {\n                this.scrollTo(0);\n            }\n        });\n        // this.on( 'all', function(){ console.debug( arguments ); });\n    },\n\n    // ------------------------------------------------------------------------ loading history/hda models\n    /** load the history with the given id then it's contents, sending ajax options to both */\n    loadHistory: function loadHistory(historyId, options, contentsOptions) {\n        contentsOptions = _.extend(contentsOptions || { silent: true });\n        this.info(\"loadHistory:\", historyId, options, contentsOptions);\n        var self = this;\n        self.setModel(new _historyModel2.default.History({ id: historyId }));\n\n        contentsOptions.silent = true;\n        self.trigger(\"loading\");\n        return self.model.fetchWithContents(options, contentsOptions).always(function () {\n            self.render();\n            self.trigger(\"loading-done\");\n        });\n    },\n\n    /** convenience alias to the model. Updates the item list only (not the history) */\n    refreshContents: function refreshContents(options) {\n        if (this.model) {\n            return this.model.refresh(options);\n        }\n        // may have callbacks - so return an empty promise\n        return $.when();\n    },\n\n    /** Override to reset web storage when the id changes (since it needs the id) */\n    _setUpCollectionListeners: function _setUpCollectionListeners() {\n        _super.prototype._setUpCollectionListeners.call(this);\n        return this.listenTo(this.collection, {\n            // 'all' : function(){ console.log( this.collection + ':', arguments ); },\n            \"fetching-more\": function fetchingMore() {\n                this._toggleContentsLoadingIndicator(true);\n                this.$emptyMessage().hide();\n            },\n            \"fetching-more-done\": function fetchingMoreDone() {\n                this._toggleContentsLoadingIndicator(false);\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n    _showLoadingIndicator: function _showLoadingIndicator(msg, speed, callback) {\n        var $indicator = $('<div class=\"loading-indicator\"/>');\n        this.$el.html($indicator.text(msg).slideDown(!_.isUndefined(speed) ? speed : this.fxSpeed));\n    },\n\n    /** hide the loading indicator */\n    _hideLoadingIndicator: function _hideLoadingIndicator(speed) {\n        // make speed a bit slower to compensate for slow rendering of up to 500 contents\n        this.$(\".loading-indicator\").slideUp(!_.isUndefined(speed) ? speed : this.fxSpeed + 200, function () {\n            $(this).remove();\n        });\n    },\n\n    /** In this override, add a btn to toggle the selectors */\n    _buildNewRender: function _buildNewRender() {\n        var $newRender = _super.prototype._buildNewRender.call(this);\n        this._renderSelectButton($newRender);\n        return $newRender;\n    },\n\n    /** button for starting select mode */\n    _renderSelectButton: function _renderSelectButton($where) {\n        $where = $where || this.$el;\n        // do not render selector option if no actions\n        if (!this.multiselectActions().length) {\n            return null;\n        }\n        // do not render (and remove even) if nothing to select\n        if (!this.views.length) {\n            this.hideSelectors();\n            $where.find(\".controls .actions .show-selectors-btn\").remove();\n            return null;\n        }\n        // don't bother rendering if there's one already\n        var $existing = $where.find(\".controls .actions .show-selectors-btn\");\n        if ($existing.length) {\n            return $existing;\n        }\n\n        return (0, _faIconButton2.default)({\n            title: (0, _localization2.default)(\"Operations on multiple datasets\"),\n            classes: \"show-selectors-btn\",\n            faIcon: \"fa-check-square-o\"\n        }).prependTo($where.find(\".controls .actions\"));\n    },\n\n    /** override to avoid showing intial empty message using contents_active */\n    _renderEmptyMessage: function _renderEmptyMessage($whereTo) {\n        var self = this;\n        var $emptyMsg = self.$emptyMessage($whereTo);\n\n        var empty = self.model.get(\"contents_active\").active <= 0;\n        if (empty) {\n            return $emptyMsg.empty().append(self.emptyMsg).show();\n        } else if (self.searchFor && self.model.contents.haveSearchDetails() && !self.views.length) {\n            return $emptyMsg.empty().append(self.noneFoundMsg).show();\n        }\n        $emptyMsg.hide();\n        return $();\n    },\n\n    /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n    $scrollContainer: function $scrollContainer($where) {\n        // override or set via attributes.$scrollContainer\n        return this.$list($where);\n    },\n\n    // ------------------------------------------------------------------------ subviews\n    _toggleContentsLoadingIndicator: function _toggleContentsLoadingIndicator(show) {\n        if (!show) {\n            this.$list().find(\".contents-loading-indicator\").remove();\n        } else {\n            this.$list().html('<div class=\"contents-loading-indicator\">' + '<span class=\"fa fa-2x fa-spinner fa-spin\"/></div>');\n        }\n    },\n\n    /** override to render pagination also */\n    renderItems: function renderItems($whereTo) {\n        // console.log( this + '.renderItems-----------------', new Date() );\n        $whereTo = $whereTo || this.$el;\n        var self = this;\n        var $list = self.$list($whereTo);\n\n        // TODO: bootstrap hack to remove orphaned tooltips\n        $(\".tooltip\").remove();\n\n        $list.empty();\n        self.views = [];\n\n        var models = self._filterCollection();\n        if (models.length) {\n            self._renderPagination($whereTo);\n            self.views = self._renderSomeItems(models, $list);\n        } else {\n            // TODO: consolidate with _renderPagination above by (???) passing in models/length?\n            $whereTo.find(\"> .controls .list-pagination\").empty();\n        }\n        self._renderEmptyMessage($whereTo).toggle(!models.length);\n\n        self.trigger(\"views:ready\", self.views);\n        return self.views;\n    },\n\n    /** render pagination controls if not searching and contents says we're paginating */\n    _renderPagination: function _renderPagination($whereTo) {\n        var $paginationControls = $whereTo.find(\"> .controls .list-pagination\");\n        if (this.searchFor || !this.model.contents.shouldPaginate()) return $paginationControls.empty();\n\n        $paginationControls.html(this.templates.pagination({\n            // pagination is 1-based for the user\n            current: this.model.contents.currentPage + 1,\n            last: this.model.contents.getLastPage() + 1\n        }, this));\n        $paginationControls.find(\"select.pages\").tooltip();\n        return $paginationControls;\n    },\n\n    /** render a subset of the entire collection (client-side pagination) */\n    _renderSomeItems: function _renderSomeItems(models, $list) {\n        var self = this;\n        var views = [];\n        $list.append(models.map(function (m) {\n            var view = self._createItemView(m);\n            views.push(view);\n            return self._renderItemView$el(view);\n        }));\n        return views;\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** in this override, check if the contents would also display based on includeDeleted/hidden */\n    _filterItem: function _filterItem(model) {\n        var self = this;\n        var contents = self.model.contents;\n        return (contents.includeHidden || !model.hidden()) && (contents.includeDeleted || !model.isDeletedOrPurged()) && _super.prototype._filterItem.call(self, model);\n    },\n\n    /** In this override, since history contents are mixed,\n     *      get the appropo view class based on history_content_type\n     */\n    _getItemViewClass: function _getItemViewClass(model) {\n        var contentType = model.get(\"history_content_type\");\n        switch (contentType) {\n            case \"dataset\":\n                return this.HDAViewClass;\n            case \"dataset_collection\":\n                return this.HDCAViewClass;\n        }\n        throw new TypeError(\"Unknown history_content_type: \" + contentType);\n    },\n\n    /** in this override, add a linktarget, and expand if id is in web storage */\n    _getItemViewOptions: function _getItemViewOptions(model) {\n        var options = _super.prototype._getItemViewOptions.call(this, model);\n        return _.extend(options, {\n            linkTarget: this.linkTarget,\n            expanded: this.model.contents.storage.isExpanded(model.id),\n            hasUser: this.model.ownedByCurrUser()\n        });\n    },\n\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners: function _setUpItemViewListeners(view) {\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call(panel, view);\n        //TODO: send from content view: this.model.collection.storage.addExpanded\n        // maintain a list of items whose bodies are expanded\n        return panel.listenTo(view, {\n            expanded: function expanded(v) {\n                panel.model.contents.storage.addExpanded(v.model);\n            },\n            collapsed: function collapsed(v) {\n                panel.model.contents.storage.removeExpanded(v.model);\n            }\n        });\n    },\n\n    /** override to remove expandedIds from webstorage */\n    collapseAll: function collapseAll() {\n        this.model.contents.storage.clearExpanded();\n        _super.prototype.collapseAll.call(this);\n    },\n\n    // ------------------------------------------------------------------------ selection\n    /** Override to correctly set the historyId of the new collection */\n    getSelectedModels: function getSelectedModels() {\n        var collection = _super.prototype.getSelectedModels.call(this);\n        collection.historyId = this.collection.historyId;\n        return collection;\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .show-selectors-btn\": \"toggleSelectors\",\n        \"click > .controls .prev\": \"_clickPrevPage\",\n        \"click > .controls .next\": \"_clickNextPage\",\n        \"change > .controls .pages\": \"_changePageSelect\",\n        // allow (error) messages to be clicked away\n        \"click .messages [class$=message]\": \"clearMessages\"\n    }),\n\n    _clickPrevPage: function _clickPrevPage(ev) {\n        this.model.clearUpdateTimeout();\n        this.model.contents.fetchPrevPage();\n    },\n\n    _clickNextPage: function _clickNextPage(ev) {\n        this.model.clearUpdateTimeout();\n        this.model.contents.fetchNextPage();\n    },\n\n    _changePageSelect: function _changePageSelect(ev) {\n        this.model.clearUpdateTimeout();\n        var page = $(ev.currentTarget).val();\n        this.model.contents.fetchPage(page);\n    },\n\n    /** Toggle and store the deleted visibility and re-render items\n     * @returns {Boolean} new setting\n     */\n    toggleShowDeleted: function toggleShowDeleted(show, options) {\n        show = show !== undefined ? show : !this.model.contents.includeDeleted;\n        var self = this;\n        var contents = self.model.contents;\n        contents.setIncludeDeleted(show, options);\n        self.trigger(\"show-deleted\", show);\n\n        contents.fetchCurrentPage({ renderAll: true });\n        return show;\n    },\n\n    /** Toggle and store whether to render explicity hidden contents\n     * @returns {Boolean} new setting\n     */\n    toggleShowHidden: function toggleShowHidden(show, store, options) {\n        // console.log( 'toggleShowHidden', show, store );\n        show = show !== undefined ? show : !this.model.contents.includeHidden;\n        var self = this;\n        var contents = self.model.contents;\n        contents.setIncludeHidden(show, options);\n        self.trigger(\"show-hidden\", show);\n\n        contents.fetchCurrentPage({ renderAll: true });\n        return show;\n    },\n\n    /** On the first search, if there are no details - load them, then search */\n    _firstSearch: function _firstSearch(searchFor) {\n        var self = this;\n        var inputSelector = \"> .controls .search-input\";\n        this.log(\"onFirstSearch\", searchFor);\n\n        // if the contents already have enough details to search, search and return now\n        if (self.model.contents.haveSearchDetails()) {\n            self.searchItems(searchFor);\n            return;\n        }\n\n        // otherwise, load the details progressively here\n        self.$(inputSelector).searchInput(\"toggle-loading\");\n        // set this now so that only results will show during progress\n        self.searchFor = searchFor;\n        var xhr = self.model.contents.progressivelyFetchDetails({ silent: true }).progress(function (response, limit, offset) {\n            self.renderItems();\n            self.trigger(\"search:loading-progress\", limit, offset);\n        }).always(function () {\n            self.$el.find(inputSelector).searchInput(\"toggle-loading\");\n        }).done(function () {\n            self.searchItems(searchFor, \"force\");\n        });\n    },\n\n    /** clear the search filters and show all views that are normally shown */\n    clearSearch: function clearSearch(searchFor) {\n        var self = this;\n        if (!self.searchFor) return self;\n        //self.log( 'onSearchClear', self );\n        self.searchFor = \"\";\n        self.trigger(\"search:clear\", self);\n        self.$(\"> .controls .search-query\").val(\"\");\n        // NOTE: silent + render prevents collection update event with merge only\n        // - which causes an empty page due to event handler above\n        self.model.contents.fetchCurrentPage({ silent: true }).done(function () {\n            self.renderItems();\n        });\n        return self;\n    },\n\n    // ........................................................................ error handling\n    /** Event handler for errors (from the panel, the history, or the history's contents)\n     *  Alternately use two strings for model and xhr to use custom message and title (respectively)\n     *  @param {Model or View} model    the (Backbone) source of the error\n     *  @param {XMLHTTPRequest} xhr     any ajax obj. assoc. with the error\n     *  @param {Object} options         the options map commonly used with bbone ajax\n     */\n    errorHandler: function errorHandler(model, xhr, options) {\n        //TODO: to mixin or base model\n        // interrupted ajax or no connection\n        if (xhr && xhr.status === 0 && xhr.readyState === 0) {\n            // return ERROR_MODAL.offlineErrorModal();\n            // fail silently\n            return;\n        }\n        // otherwise, leave something to report in the console\n        this.error(model, xhr, options);\n        // and feedback to a modal\n        // if sent two strings (and possibly details as 'options'), use those as message and title\n        if (_.isString(model) && _.isString(xhr)) {\n            var message = model;\n            var title = xhr;\n            return _errorModal2.default.errorModal(message, title, options);\n        }\n        // bad gateway\n        // TODO: possibly to global handler\n        if (xhr && xhr.status === 502) {\n            return _errorModal2.default.badGatewayErrorModal();\n        }\n        return _errorModal2.default.ajaxErrorModal(model, xhr, options);\n    },\n\n    /** Remove all messages from the panel. */\n    clearMessages: function clearMessages(ev) {\n        var $target = !_.isUndefined(ev) ? $(ev.currentTarget) : this.$messages().children('[class$=\"message\"]');\n        $target.fadeOut(this.fxSpeed, function () {\n            $(this).remove();\n        });\n        return this;\n    },\n\n    // ........................................................................ scrolling\n    /** Scrolls the panel to show the content sub-view with the given hid.\n     *  @param {Integer} hid    the hid of item to scroll into view\n     *  @returns {HistoryView} the panel\n     */\n    scrollToHid: function scrollToHid(hid) {\n        return this.scrollToItem(_.first(this.viewsWhereModel({ hid: hid })));\n    },\n\n    // ........................................................................ misc\n    /** utility for adding -st, -nd, -rd, -th to numbers */\n    ordinalIndicator: function ordinalIndicator(number) {\n        var numStr = \"\" + number;\n        switch (numStr.charAt(numStr.length - 1)) {\n            case \"1\":\n                return numStr + \"st\";\n            case \"2\":\n                return numStr + \"nd\";\n            case \"3\":\n                return numStr + \"rd\";\n            default:\n                return numStr + \"th\";\n        }\n    },\n\n    /** Return a string rep of the history */\n    toString: function toString() {\n        return \"HistoryView(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryView.prototype.templates = function () {\n    var mainTemplate = _baseMvc2.default.wrapTemplate([\n    // temp container\n    \"<div>\", '<div class=\"controls\"></div>', '<ul class=\"list-items\"></ul>', '<div class=\"empty-message infomessagesmall\"></div>', \"</div>\"]);\n\n    var controlsTemplate = _baseMvc2.default.wrapTemplate(['<div class=\"controls\">', '<div class=\"title\">', '<div class=\"name\"><%- history.name %></div>', \"</div>\", '<div class=\"subtitle\"></div>', '<div class=\"history-size\"><%- history.nice_size %></div>', '<div class=\"actions\"></div>', '<div class=\"messages\">', \"<% if( history.deleted && history.purged ){ %>\", '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This history has been purged and deleted\"), \"</div>\", \"<% } else if( history.deleted ){ %>\", '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This history has been deleted\"), \"</div>\", \"<% } else if( history.purged ){ %>\", '<div class=\"deleted-msg warningmessagesmall\">', (0, _localization2.default)(\"This history has been purged\"), \"</div>\", \"<% } %>\", \"<% if( history.message ){ %>\",\n    // should already be localized\n    '<div class=\"<%= history.message.level || \"info\" %>messagesmall\">', \"<%= history.message.text %>\", \"</div>\", \"<% } %>\", \"</div>\",\n\n    // add tags and annotations\n    '<div class=\"tags-display\"></div>', '<div class=\"annotation-display\"></div>', '<div class=\"search\">', '<div class=\"search-input\"></div>', \"</div>\", '<div class=\"list-actions\">', '<div class=\"btn-group\">', '<button class=\"select-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"All\"), \"</button>\", '<button class=\"deselect-all btn btn-default\"', 'data-mode=\"select\">', (0, _localization2.default)(\"None\"), \"</button>\", \"</div>\", '<div class=\"list-action-menu btn-group\">', \"</div>\", \"</div>\", '<div class=\"list-pagination form-inline\"></div>', \"</div>\"], \"history\");\n\n    var paginationTemplate = _baseMvc2.default.wrapTemplate(['<button class=\"prev\" <%- pages.current === 1 ? \"disabled\" : \"\" %>>previous</button>', '<select class=\"pages form-control\" ', 'title=\"', (0, _localization2.default)(\"Click to open and select a page. Begin typing a page number to select it\"), '\">', \"<% _.range( 1, pages.last + 1 ).forEach( function( i ){ %>\", '<option value=\"<%- i - 1 %>\" <%- i === pages.current ? \"selected\" : \"\" %>>', \"<%- view.ordinalIndicator( i ) %> of <%- pages.last %> pages\", \"</option>\", \"<% }); %>\", \"</select>\", '<button class=\"next\" <%- pages.current === pages.last ? \"disabled\" : \"\" %>>next</button>'], \"pages\");\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        el: mainTemplate,\n        controls: controlsTemplate,\n        pagination: paginationTemplate\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    HistoryView: HistoryView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\"use_strict\";\n\nvar $ = _jquery2.default;\n//TODO: too specific to history panel\nfunction LoadingIndicator($where, options) {\n    var self = this;\n    // defaults\n    options = _jquery2.default.extend({\n        cover: false\n    }, options || {});\n\n    function render() {\n        var html = ['<div class=\"loading-indicator\">', '<div class=\"loading-indicator-text\">', '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>', '<span class=\"loading-indicator-message\">loading...</span>', \"</div>\", \"</div>\"].join(\"\\n\");\n\n        var $indicator = $(html).hide().css(options.css || {\n            position: \"fixed\"\n        });\n\n        var $text = $indicator.children(\".loading-indicator-text\");\n\n        if (options.cover) {\n            $indicator.css({\n                \"z-index\": 2,\n                top: $where.css(\"top\"),\n                bottom: $where.css(\"bottom\"),\n                left: $where.css(\"left\"),\n                right: $where.css(\"right\"),\n                opacity: 0.5,\n                \"background-color\": \"white\",\n                \"text-align\": \"center\"\n            });\n            $text = $indicator.children(\".loading-indicator-text\").css({\n                \"margin-top\": \"20px\"\n            });\n        } else {\n            $text = $indicator.children(\".loading-indicator-text\").css({\n                margin: \"12px 0px 0px 10px\",\n                opacity: \"0.85\",\n                color: \"grey\"\n            });\n            $text.children(\".loading-indicator-message\").css({\n                margin: \"0px 8px 0px 0px\",\n                \"font-style\": \"italic\"\n            });\n        }\n        return $indicator;\n    }\n\n    self.show = function (msg, speed, callback) {\n        msg = msg || \"loading...\";\n        speed = speed || \"fast\";\n        // remove previous\n        $where.parent().find(\".loading-indicator\").remove();\n        // since position is fixed - we insert as sibling\n        self.$indicator = render().insertBefore($where);\n        self.message(msg);\n        self.$indicator.fadeIn(speed, callback);\n        return self;\n    };\n\n    self.message = function (msg) {\n        self.$indicator.find(\"i\").text(msg);\n    };\n\n    self.hide = function (speed, callback) {\n        speed = speed || \"fast\";\n        if (self.$indicator && self.$indicator.length) {\n            self.$indicator.fadeOut(speed, function () {\n                self.$indicator.remove();\n                if (callback) {\n                    callback();\n                }\n            });\n        } else {\n            if (callback) {\n                callback();\n            }\n        }\n        return self;\n    };\n    return self;\n}\n\n//============================================================================\nexports.default = LoadingIndicator;\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _datasetLiEdit = __webpack_require__(134);\n\nvar _datasetLiEdit2 = _interopRequireDefault(_datasetLiEdit);\n\nvar _hdaLi = __webpack_require__(131);\n\nvar _hdaLi2 = _interopRequireDefault(_hdaLi);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _datasetLiEdit2.default.DatasetListItemEdit;\n/** @class Editing view for HistoryDatasetAssociation.\n */\nvar HDAListItemEdit = _super.extend(\n/** @lends HDAListItemEdit.prototype */{\n    className: _super.prototype.className + \" history-content\",\n\n    /** In this override, only get details if in the ready state, get rerunnable if in other states.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n    _fetchModelDetails: function _fetchModelDetails() {\n        var view = this;\n        if (view.model.inReadyState() && !view.model.hasDetails()) {\n            return view.model.fetch({ silent: true });\n\n            // special case the need for the rerunnable and creating_job attributes\n            // needed for rendering re-run button on queued, running datasets\n        } else if (!view.model.has(\"rerunnable\")) {\n            return view.model.fetch({\n                silent: true,\n                data: {\n                    // only fetch rerunnable and creating_job to keep overhead down\n                    keys: [\"rerunnable\", \"creating_job\"].join(\",\")\n                }\n            });\n        }\n        return jQuery.when();\n    },\n\n    /** event map */\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .unhide-link\": function clickUnhideLink(ev) {\n            this.model.unhide();\n            return false;\n        }\n    }),\n\n    /** string rep */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"HDAListItemEdit(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemEdit.prototype.templates = function () {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: _baseMvc2.default.wrapTemplate([\"<% if( !dataset.visible ){ %>\",\n        // add a link to unhide a dataset\n        '<div class=\"hidden-msg warningmessagesmall\">', (0, _localization2.default)(\"This dataset has been hidden\"), '<br /><a class=\"unhide-link\" a href=\"javascript:void(0);\">', (0, _localization2.default)(\"Unhide it\"), \"</a>\", \"</div>\", \"<% } %>\"], \"dataset\")\n    });\n\n    return _.extend({}, _super.prototype.templates, {\n        //NOTE: *steal* the HDAListItemView titleBar\n        titleBar: _hdaLi2.default.HDAListItemView.prototype.templates.titleBar,\n        warnings: warnings\n    });\n}();\n\n//==============================================================================\nexports.default = {\n    HDAListItemEdit: HDAListItemEdit\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _hdcaLi = __webpack_require__(132);\n\nvar _hdcaLi2 = _interopRequireDefault(_hdcaLi);\n\nvar _collectionViewEdit = __webpack_require__(252);\n\nvar _collectionViewEdit2 = _interopRequireDefault(_collectionViewEdit);\n\nvar _faIconButton = __webpack_require__(49);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar _super = _hdcaLi2.default.HDCAListItemView;\n/** @class Editing view for HistoryDatasetCollectionAssociation.\n */\nvar HDCAListItemEdit = _super.extend(\n/** @lends HDCAListItemEdit.prototype */{\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** Override to return editable versions of the collection panels */\n    _getFoldoutPanelClass: function _getFoldoutPanelClass() {\n        switch (this.model.get(\"collection_type\")) {\n            case \"list\":\n                return _collectionViewEdit2.default.ListCollectionViewEdit;\n            case \"paired\":\n                return _collectionViewEdit2.default.PairCollectionViewEdit;\n            case \"list:paired\":\n                return _collectionViewEdit2.default.ListOfPairsCollectionViewEdit;\n            case \"list:list\":\n                return _collectionViewEdit2.default.ListOfListsCollectionViewEdit;\n        }\n        throw new TypeError(\"Uknown collection_type: \" + this.model.get(\"collection_type\"));\n    },\n\n    // ......................................................................... delete\n    /** In this override, add the delete button. */\n    _renderPrimaryActions: function _renderPrimaryActions() {\n        this.log(this + \"._renderPrimaryActions\");\n        // render the display, edit attr and delete icon-buttons\n        return _super.prototype._renderPrimaryActions.call(this).concat([this._renderDeleteButton()]);\n    },\n\n    /** Render icon-button to delete this collection. */\n    _renderDeleteButton: function _renderDeleteButton() {\n        var self = this;\n        var deleted = this.model.get(\"deleted\");\n        return (0, _faIconButton2.default)({\n            title: deleted ? (0, _localization2.default)(\"Dataset collection is already deleted\") : (0, _localization2.default)(\"Delete\"),\n            classes: \"delete-btn\",\n            faIcon: \"fa-times\",\n            disabled: deleted,\n            onclick: function onclick() {\n                // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                self.model[\"delete\"]();\n            }\n        });\n    },\n\n    // ......................................................................... misc\n    /** string rep */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"HDCAListItemEdit(\" + modelString + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    HDCAListItemEdit: HDCAListItemEdit\n};\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _collectionView = __webpack_require__(133);\n\nvar _collectionView2 = _interopRequireDefault(_collectionView);\n\nvar _collectionModel = __webpack_require__(80);\n\nvar _collectionModel2 = _interopRequireDefault(_collectionModel);\n\nvar _collectionLiEdit = __webpack_require__(253);\n\nvar _collectionLiEdit2 = _interopRequireDefault(_collectionLiEdit);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _tag = __webpack_require__(67);\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _faIconButton = __webpack_require__(49);\n\nvar _faIconButton2 = _interopRequireDefault(_faIconButton);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(15);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class editable View/Controller for a dataset collection.\n */\nvar _super = _collectionView2.default.CollectionView;\nvar CollectionViewEdit = _super.extend(\n/** @lends CollectionView.prototype */{\n    //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** sub view class used for datasets */\n    DatasetDCEViewClass: _collectionLiEdit2.default.DatasetDCEListItemEdit,\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLiEdit2.default.NestedDCDCEListItemEdit,\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the panel\n     */\n    initialize: function initialize(attributes) {\n        _super.prototype.initialize.call(this, attributes);\n    },\n\n    /** In this override, make the collection name editable\n     */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        $where = $where || this.$el;\n        _super.prototype._setUpBehaviors.call(this, $where);\n        if (!this.model) {\n            return;\n        }\n\n        // anon users shouldn't have access to any of the following\n        if (!Galaxy.user || Galaxy.user.isAnonymous()) {\n            return;\n        }\n\n        this.tagsEditorShown = true;\n\n        //TODO: extract\n        var panel = this;\n\n        var nameSelector = \"> .controls .name\";\n        $where.find(nameSelector).attr(\"title\", (0, _localization2.default)(\"Click to rename collection\")).tooltip({ placement: \"bottom\" }).make_text_editable({\n            on_finish: function on_finish(newName) {\n                var previousName = panel.model.get(\"name\");\n                if (newName && newName !== previousName) {\n                    panel.$el.find(nameSelector).text(newName);\n                    panel.model.save({ name: newName }).fail(function () {\n                        panel.$el.find(nameSelector).text(panel.model.previous(\"name\"));\n                    });\n                } else {\n                    panel.$el.find(nameSelector).text(previousName);\n                }\n            }\n        });\n        this.tagsEditor = new _tag2.default.TagsEditor({\n            model: this.model,\n            el: $where.find(\".tags-display\"),\n            onshowFirstTime: function onshowFirstTime() {\n                this.render();\n            },\n            usePrompt: false\n        });\n        this.tagsEditor.toggle(true);\n    },\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"CollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionViewEdit = CollectionViewEdit.extend(\n/** @lends ListCollectionView.prototype */{\n    //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n    /** sub view class used for datasets */\n    DatasetDCEViewClass: _collectionLiEdit2.default.DatasetDCEListItemEdit,\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListCollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class Editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionViewEdit = ListCollectionViewEdit.extend(\n/** @lends PairCollectionViewEdit.prototype */{\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"PairCollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class Editable (roughly since these collections are immutable),\n *  View/Controller for a dataset collection.\n */\nvar NestedPairCollectionViewEdit = PairCollectionViewEdit.extend(\n/** @lends NestedPairCollectionViewEdit.prototype */{\n    /** Override to remove the editable text from the name/identifier - these collections are considered immutable */\n    _setUpBehaviors: function _setUpBehaviors($where) {\n        _super.prototype._setUpBehaviors.call(this, $where);\n    },\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"NestedPairCollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class editable, View/Controller for a list of pairs dataset collection. */\nvar ListOfPairsCollectionViewEdit = CollectionViewEdit.extend(\n/** @lends ListOfPairsCollectionView.prototype */{\n    //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLiEdit2.default.NestedDCDCEListItemEdit.extend({\n        foldoutPanelClass: NestedPairCollectionViewEdit\n    }),\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListOfPairsCollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n// =============================================================================\n/** @class View/Controller for a list of lists dataset collection. */\nvar ListOfListsCollectionViewEdit = CollectionViewEdit.extend(\n/** @lends ListOfListsCollectionView.prototype */{\n    //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: _collectionLiEdit2.default.NestedDCDCEListItemEdit.extend({\n        foldoutPanelClass: NestedPairCollectionViewEdit\n    }),\n\n    // ........................................................................ misc\n    /** string rep */\n    toString: function toString() {\n        return \"ListOfListsCollectionViewEdit(\" + (this.model ? this.model.get(\"name\") : \"\") + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    CollectionViewEdit: CollectionViewEdit,\n    ListCollectionViewEdit: ListCollectionViewEdit,\n    PairCollectionViewEdit: PairCollectionViewEdit,\n    ListOfPairsCollectionViewEdit: ListOfPairsCollectionViewEdit,\n    ListOfListsCollectionViewEdit: ListOfListsCollectionViewEdit\n};\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(jQuery, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _collectionLi = __webpack_require__(87);\n\nvar _collectionLi2 = _interopRequireDefault(_collectionLi);\n\nvar _datasetLiEdit = __webpack_require__(134);\n\nvar _datasetLiEdit2 = _interopRequireDefault(_datasetLiEdit);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//==============================================================================\nvar DCListItemView = _collectionLi2.default.DCListItemView;\n/** @class Edit view for DatasetCollection.\n */\nvar DCListItemEdit = DCListItemView.extend(\n/** @lends DCListItemEdit.prototype */{\n    /** override to add linkTarget */\n    initialize: function initialize(attributes) {\n        DCListItemView.prototype.initialize.call(this, attributes);\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"DCListItemEdit(\" + modelString + \")\";\n    }\n});\n\n//==============================================================================\nvar DCEListItemView = _collectionLi2.default.DCEListItemView;\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemEdit = DCEListItemView.extend(\n/** @lends DCEListItemEdit.prototype */{\n    //TODO: this might be expendable - compacted with HDAListItemView\n\n    /** set up */\n    initialize: function initialize(attributes) {\n        DCEListItemView.prototype.initialize.call(this, attributes);\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"DCEListItemEdit(\" + modelString + \")\";\n    }\n});\n\n//==============================================================================\n// NOTE: this does not inherit from DatasetDCEListItemView as you would expect\n//TODO: but should - if we can find something simpler than using diamond\n/** @class Editable view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemEdit = _datasetLiEdit2.default.DatasetListItemEdit.extend(\n/** @lends DatasetDCEListItemEdit.prototype */{\n    /** set up */\n    initialize: function initialize(attributes) {\n        _datasetLiEdit2.default.DatasetListItemEdit.prototype.initialize.call(this, attributes);\n    },\n\n    // NOTE: this does not inherit from DatasetDCEListItemView - so we duplicate this here\n    //TODO: fix\n    /** In this override, only get details if in the ready state.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n    _fetchModelDetails: function _fetchModelDetails() {\n        var view = this;\n        if (view.model.inReadyState() && !view.model.hasDetails()) {\n            return view.model.fetch({ silent: true });\n        }\n        return jQuery.when();\n    },\n\n    /** Override to remove delete button */\n    _renderDeleteButton: function _renderDeleteButton() {\n        return null;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"DatasetDCEListItemEdit(\" + modelString + \")\";\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemEdit.prototype.templates = function () {\n    return _.extend({}, _datasetLiEdit2.default.DatasetListItemEdit.prototype.templates, {\n        titleBar: _collectionLi2.default.DatasetDCEListItemView.prototype.templates.titleBar\n    });\n}();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemEdit = _collectionLi2.default.NestedDCDCEListItemView.extend(\n/** @lends NestedDCDCEListItemEdit.prototype */{\n    /** String representation */\n    toString: function toString() {\n        var modelString = this.model ? \"\" + this.model : \"(no model)\";\n        return \"NestedDCDCEListItemEdit(\" + modelString + \")\";\n    }\n});\n\n//==============================================================================\nexports.default = {\n    DCListItemEdit: DCListItemEdit,\n    DCEListItemEdit: DCEListItemEdit,\n    DatasetDCEListItemEdit: DatasetDCEListItemEdit,\n    NestedDCDCEListItemEdit: NestedDCDCEListItemEdit\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, jQuery) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _listCollectionCreator = __webpack_require__(78);\n\nvar _listCollectionCreator2 = _interopRequireDefault(_listCollectionCreator);\n\nvar _hdcaModel = __webpack_require__(79);\n\nvar _hdcaModel2 = _interopRequireDefault(_hdcaModel);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"collections\";\n/*==============================================================================\nTODO:\n    the paired creator doesn't really mesh with the list creator as parent\n        it may be better to make an abstract super class for both\n    composites may inherit from this (or vis-versa)\n    PairedDatasetCollectionElementView doesn't make a lot of sense\n\n==============================================================================*/\n/**  */\nvar PairedDatasetCollectionElementView = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n    tagName: \"li\",\n    className: \"collection-element\",\n\n    initialize: function initialize(attributes) {\n        this.element = attributes.element || {};\n        this.identifier = attributes.identifier;\n    },\n\n    render: function render() {\n        this.$el.attr(\"data-element-id\", this.element.id).html(this.template({\n            identifier: this.identifier,\n            element: this.element\n        }));\n        return this;\n    },\n\n    //TODO: lots of unused space in the element - possibly load details and display them horiz.\n    template: _.template(['<span class=\"identifier\"><%- identifier %></span>', '<span class=\"name\"><%- element.name %></span>'].join(\"\")),\n\n    /** remove the DOM and any listeners */\n    destroy: function destroy() {\n        this.off();\n        this.$el.remove();\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return \"DatasetCollectionElementView()\";\n    }\n});\n\n// ============================================================================\nvar _super = _listCollectionCreator2.default.ListCollectionCreator;\n\n/** An interface for building collections.\n */\nvar PairCollectionCreator = _super.extend({\n    /** the class used to display individual elements */\n    elementViewClass: PairedDatasetCollectionElementView,\n    /** the class this creator will create and save */\n    collectionClass: _hdcaModel2.default.HistoryPairDatasetCollection,\n    className: \"pair-collection-creator collection-creator flex-row-container\",\n\n    /** override to no-op */\n    _mangleDuplicateNames: function _mangleDuplicateNames() {},\n\n    // TODO: this whole pattern sucks. There needs to be two classes of problem area:\n    //      bad inital choices and\n    //      when the user has painted his/her self into a corner during creation/use-of-the-creator\n    /** render the entire interface */\n    render: function render(speed, callback) {\n        if (this.workingElements.length === 2) {\n            return _super.prototype.render.call(this, speed, callback);\n        }\n        return this._renderInvalid(speed, callback);\n    },\n\n    // ------------------------------------------------------------------------ rendering elements\n    /** render forward/reverse */\n    _renderList: function _renderList(speed, callback) {\n        //this.debug( '-- _renderList' );\n        //precondition: there are two valid elements in workingElements\n        var creator = this;\n\n        var $tmp = jQuery(\"<div/>\");\n        var $list = creator.$list();\n\n        // lose the original views, create the new, append all at once, then call their renders\n        _.each(this.elementViews, function (view) {\n            view.destroy();\n            creator.removeElementView(view);\n        });\n        $tmp.append(creator._createForwardElementView().$el);\n        $tmp.append(creator._createReverseElementView().$el);\n        $list.empty().append($tmp.children());\n        _.invoke(creator.elementViews, \"render\");\n    },\n\n    /** create the forward element view */\n    _createForwardElementView: function _createForwardElementView() {\n        return this._createElementView(this.workingElements[0], {\n            identifier: \"forward\"\n        });\n    },\n\n    /** create the forward element view */\n    _createReverseElementView: function _createReverseElementView() {\n        return this._createElementView(this.workingElements[1], {\n            identifier: \"reverse\"\n        });\n    },\n\n    /** create an element view, cache in elementViews, and return */\n    _createElementView: function _createElementView(element, options) {\n        var elementView = new this.elementViewClass(_.extend(options, {\n            element: element\n        }));\n        this.elementViews.push(elementView);\n        return elementView;\n    },\n\n    /** swap the forward, reverse elements and re-render */\n    swap: function swap() {\n        this.workingElements = [this.workingElements[1], this.workingElements[0]];\n        this._renderList();\n    },\n\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .swap\": \"swap\"\n    }),\n\n    // ------------------------------------------------------------------------ templates\n    //TODO: move to require text plugin and load these as text\n    //TODO: underscore currently unnecc. bc no vars are used\n    //TODO: better way of localizing text-nodes in long strings\n    /** underscore template fns attached to class */\n    templates: _.extend(_.clone(_super.prototype.templates), {\n        /** the middle: element list */\n        middle: _.template(['<div class=\"collection-elements-controls\">', '<a class=\"swap\" href=\"javascript:void(0);\" title=\"', (0, _localization2.default)(\"Swap forward and reverse datasets\"), '\">', (0, _localization2.default)(\"Swap\"), \"</a>\", \"</div>\", '<div class=\"collection-elements scroll-container flex-row\">', \"</div>\"].join(\"\")),\n\n        /** help content */\n        helpContent: _.template([\"<p>\", (0, _localization2.default)([\"Pair collections are permanent collections containing two datasets: one forward and one reverse. \", \"Often these are forward and reverse reads. The pair collections can be passed to tools and \", \"workflows in order to have analyses done on both datasets. This interface allows \", \"you to create a pair, name it, and swap which is forward and which reverse.\"].join(\"\")), \"</p>\", \"<ul>\", \"<li>\", (0, _localization2.default)(['Click the <i data-target=\".swap\">\"Swap\"</i> link to make your forward dataset the reverse ', \"and the reverse dataset forward.\"].join(\"\")), \"</li>\", \"<li>\", (0, _localization2.default)(['Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'].join(\"\")), \"</li>\", \"</ul><br />\", \"<p>\", (0, _localization2.default)(['Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ', 'click <i data-target=\".create-collection\">\"Create list\"</i>.'].join(\"\")), \"</p>\"].join(\"\")),\n\n        /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n        invalidInitial: _.template(['<div class=\"header flex-row no-flex\">', '<div class=\"alert alert-warning\" style=\"display: block\">', '<span class=\"alert-message\">', \"<% if( _.size( problems ) ){ %>\", (0, _localization2.default)(\"The following selections could not be included due to problems\"), \"<ul><% _.each( problems, function( problem ){ %>\", \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\", \"<% }); %></ul>\", \"<% } else if( _.size( elements ) === 0 ){ %>\", (0, _localization2.default)(\"No datasets were selected\"), \".\", \"<% } else if( _.size( elements ) === 1 ){ %>\", (0, _localization2.default)(\"Only one dataset was selected\"), \": <%- elements[0].name %>\", \"<% } else if( _.size( elements ) > 2 ){ %>\", (0, _localization2.default)(\"Too many datasets were selected\"), ': <%- _.pluck( elements, \"name\" ).join( \", \") %>', \"<% } %>\", \"<br />\", (0, _localization2.default)(\"Two (and only two) elements are needed for the pair\"), \". \", (0, _localization2.default)(\"You may need to \"), '<a class=\"cancel-create\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"cancel\"), \"</a> \", (0, _localization2.default)(\"and reselect new elements\"), \".\", \"</span>\", \"</div>\", \"</div>\", '<div class=\"footer flex-row no-flex\">', '<div class=\"actions clear vertically-spaced\">', '<div class=\"other-options pull-left\">', '<button class=\"cancel-create btn\" tabindex=\"-1\">', (0, _localization2.default)(\"Cancel\"), \"</button>\",\n        // _l( 'Create a different kind of collection' ),\n        \"</div>\", \"</div>\", \"</div>\"].join(\"\"))\n    }),\n\n    // ------------------------------------------------------------------------ misc\n    /** string rep */\n    toString: function toString() {\n        return \"PairCollectionCreator\";\n    }\n});\n\n//==============================================================================\n/** List collection flavor of collectionCreatorModal. */\nvar pairCollectionCreatorModal = function _pairCollectionCreatorModal(elements, options) {\n    options = options || {};\n    options.title = (0, _localization2.default)(\"Create a collection from a pair of datasets\");\n    return _listCollectionCreator2.default.collectionCreatorModal(elements, options, PairCollectionCreator);\n};\n\n//==============================================================================\n/** Use a modal to create a pair collection, then add it to the given history contents.\n *  @returns {Deferred} resolved when the collection is added to the history.\n */\nfunction createPairCollection(contents, defaultHideSourceItems) {\n    var elements = contents.toJSON();\n\n    var promise = pairCollectionCreatorModal(elements, {\n        defaultHideSourceItems: defaultHideSourceItems,\n        creationFn: function creationFn(elements, name, hideSourceItems) {\n            elements = [{ name: \"forward\", src: \"hda\", id: elements[0].id }, { name: \"reverse\", src: \"hda\", id: elements[1].id }];\n            return contents.createHDCA(elements, \"paired\", name, hideSourceItems);\n        }\n    });\n\n    return promise;\n}\n\n//==============================================================================\nexports.default = {\n    PairCollectionCreator: PairCollectionCreator,\n    pairCollectionCreatorModal: pairCollectionCreatorModal,\n    createPairCollection: createPairCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, jQuery, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _levenshtein = __webpack_require__(256);\n\nvar _levenshtein2 = _interopRequireDefault(_levenshtein);\n\nvar _naturalSort = __webpack_require__(122);\n\nvar _naturalSort2 = _interopRequireDefault(_naturalSort);\n\nvar _baseCreator = __webpack_require__(121);\n\nvar _baseCreator2 = _interopRequireDefault(_baseCreator);\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nvar _localization = __webpack_require__(4);\n\nvar _localization2 = _interopRequireDefault(_localization);\n\n__webpack_require__(123);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar logNamespace = \"collections\";\n/* ============================================================================\nTODO:\n\n\nPROGRAMMATICALLY:\ncurrPanel.once( 'rendered', function(){\n    currPanel.showSelectors();\n    currPanel.selectAll();\n    _.last( currPanel.actionsPopup.options ).func();\n});\n\n============================================================================ */\n/** A view for paired datasets in the collections creator.\n */\nvar PairView = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    tagName: \"li\",\n    className: \"dataset paired\",\n\n    initialize: function initialize(attributes) {\n        this.pair = attributes.pair || {};\n    },\n\n    template: _.template(['<span class=\"forward-dataset-name flex-column\"><%- pair.forward.name %></span>', '<span class=\"pair-name-column flex-column\">', '<span class=\"pair-name\"><%- pair.name %></span>', \"</span>\", '<span class=\"reverse-dataset-name flex-column\"><%- pair.reverse.name %></span>'].join(\"\")),\n\n    render: function render() {\n        this.dragStartHandler = _.bind(this._dragstart, this);\n        this.dragEndHandler = _.bind(this._dragend, this);\n        var handle = this.$el.attr(\"draggable\", true).data(\"pair\", this.pair).html(this.template({ pair: this.pair })).addClass(\"flex-column-container\").get(0);\n        handle.addEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.addEventListener(\"dragend\", this.dragEndHandler, false);\n        return this;\n    },\n\n    events: {\n        dragover: \"_sendToParent\",\n        drop: \"_sendToParent\"\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragstart: function _dragstart(ev) {\n        ev.currentTarget.style.opacity = \"0.4\";\n        if (ev.originalEvent) {\n            ev = ev.originalEvent;\n        }\n\n        ev.dataTransfer.effectAllowed = \"move\";\n        ev.dataTransfer.setData(\"text/plain\", JSON.stringify(this.pair));\n\n        this.$el.parent().trigger(\"pair.dragstart\", [this]);\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragend: function _dragend(ev) {\n        ev.currentTarget.style.opacity = \"1.0\";\n        this.$el.parent().trigger(\"pair.dragend\", [this]);\n    },\n\n    /** manually bubble up an event to the parent/container */\n    _sendToParent: function _sendToParent(ev) {\n        this.$el.parent().trigger(ev);\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return \"PairView(\" + this.pair.name + \")\";\n    }\n});\n\n// ============================================================================\n/** returns an autopair function that uses the provided options.match function */\nfunction autoPairFnBuilder(options) {\n    options = options || {};\n    options.createPair = options.createPair || function _defaultCreatePair(params) {\n        params = params || {};\n        var a = params.listA.splice(params.indexA, 1)[0];\n        var b = params.listB.splice(params.indexB, 1)[0];\n        var aInBIndex = params.listB.indexOf(a);\n        var bInAIndex = params.listA.indexOf(b);\n        if (aInBIndex !== -1) {\n            params.listB.splice(aInBIndex, 1);\n        }\n        if (bInAIndex !== -1) {\n            params.listA.splice(bInAIndex, 1);\n        }\n        return this._pair(a, b, { silent: true });\n    };\n    // compile these here outside of the loop\n    var _regexps = [];\n    function getRegExps() {\n        if (!_regexps.length) {\n            _regexps = [new RegExp(this.filters[0]), new RegExp(this.filters[1])];\n        }\n        return _regexps;\n    }\n    // mangle params as needed\n    options.preprocessMatch = options.preprocessMatch || function _defaultPreprocessMatch(params) {\n        var regexps = getRegExps.call(this);\n        return _.extend(params, {\n            matchTo: params.matchTo.name.replace(regexps[0], \"\"),\n            possible: params.possible.name.replace(regexps[1], \"\")\n        });\n    };\n\n    return function _strategy(params) {\n        this.debug(\"autopair _strategy ---------------------------\");\n        params = params || {};\n        var listA = params.listA;\n        var listB = params.listB;\n        var indexA = 0;\n        var indexB;\n\n        var bestMatch = {\n            score: 0.0,\n            index: null\n        };\n\n        var paired = [];\n        //console.debug( 'params:', JSON.stringify( params, null, '  ' ) );\n        this.debug(\"starting list lens:\", listA.length, listB.length);\n        this.debug(\"bestMatch (starting):\", JSON.stringify(bestMatch, null, \"  \"));\n\n        while (indexA < listA.length) {\n            var matchTo = listA[indexA];\n            bestMatch.score = 0.0;\n\n            for (indexB = 0; indexB < listB.length; indexB++) {\n                var possible = listB[indexB];\n                this.debug(indexA + \":\" + matchTo.name);\n                this.debug(indexB + \":\" + possible.name);\n\n                // no matching with self\n                if (listA[indexA] !== listB[indexB]) {\n                    bestMatch = options.match.call(this, options.preprocessMatch.call(this, {\n                        matchTo: matchTo,\n                        possible: possible,\n                        index: indexB,\n                        bestMatch: bestMatch\n                    }));\n                    this.debug(\"bestMatch:\", JSON.stringify(bestMatch, null, \"  \"));\n                    if (bestMatch.score === 1.0) {\n                        this.debug(\"breaking early due to perfect match\");\n                        break;\n                    }\n                }\n            }\n            var scoreThreshold = options.scoreThreshold.call(this);\n            this.debug(\"scoreThreshold:\", scoreThreshold);\n            this.debug(\"bestMatch.score:\", bestMatch.score);\n\n            if (bestMatch.score >= scoreThreshold) {\n                //console.debug( 'autoPairFnBuilder.strategy', listA[ indexA ].name, listB[ bestMatch.index ].name );\n                paired.push(options.createPair.call(this, {\n                    listA: listA,\n                    indexA: indexA,\n                    listB: listB,\n                    indexB: bestMatch.index\n                }));\n                //console.debug( 'list lens now:', listA.length, listB.length );\n            } else {\n                indexA += 1;\n            }\n            if (!listA.length || !listB.length) {\n                return paired;\n            }\n        }\n        this.debug(\"paired:\", JSON.stringify(paired, null, \"  \"));\n        this.debug(\"autopair _strategy ---------------------------\");\n        return paired;\n    };\n}\n\n// ============================================================================\n/** An interface for building collections of paired datasets.\n */\nvar PairedCollectionCreator = Backbone.View.extend(_baseMvc2.default.LoggableMixin).extend(_baseCreator2.default.CollectionCreatorMixin).extend({\n    _logNamespace: logNamespace,\n\n    className: \"list-of-pairs-collection-creator collection-creator flex-row-container\",\n\n    /** set up initial options, instance vars, behaviors, and autopair (if set to do so) */\n    initialize: function initialize(attributes) {\n        this.metric(\"PairedCollectionCreator.initialize\", attributes);\n        //this.debug( '-- PairedCollectionCreator:', attributes );\n\n        attributes = _.defaults(attributes, {\n            datasets: [],\n            filters: this.DEFAULT_FILTERS,\n            automaticallyPair: true,\n            strategy: \"lcs\",\n            matchPercentage: 0.9,\n            twoPassAutopairing: true\n        });\n\n        /** unordered, original list */\n        this.initialList = attributes.datasets;\n\n        /** is this from a history? if so, what's its id? */\n        this.historyId = attributes.historyId;\n\n        /** which filters should be used initially? (String[2] or name in commonFilters) */\n        this.filters = this.commonFilters[attributes.filters] || this.commonFilters[this.DEFAULT_FILTERS];\n        if (_.isArray(attributes.filters)) {\n            this.filters = attributes.filters;\n        }\n\n        /** try to auto pair the unpaired datasets on load? */\n        this.automaticallyPair = attributes.automaticallyPair;\n\n        /** what method to use for auto pairing (will be passed aggression level) */\n        this.strategy = this.strategies[attributes.strategy] || this.strategies[this.DEFAULT_STRATEGY];\n        if (_.isFunction(attributes.strategy)) {\n            this.strategy = attributes.strategy;\n        }\n\n        /** distance/mismatch level allowed for autopairing */\n        this.matchPercentage = attributes.matchPercentage;\n\n        /** try to autopair using simple first, then this.strategy on the remainder */\n        this.twoPassAutopairing = attributes.twoPassAutopairing;\n\n        /** remove file extensions (\\.*) from created pair names? */\n        this.removeExtensions = true;\n        //this.removeExtensions = false;\n\n        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n        this.oncancel = attributes.oncancel;\n        /** fn to call when the collection is created (scoped to this) */\n        this.oncreate = attributes.oncreate;\n\n        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n        this.autoscrollDist = attributes.autoscrollDist || 24;\n\n        /** is the unpaired panel shown? */\n        this.unpairedPanelHidden = false;\n        /** is the paired panel shown? */\n        this.pairedPanelHidden = false;\n\n        /** DOM elements currently being dragged */\n        this.$dragging = null;\n\n        /** Used for blocking UI events during ajax/operations (don't post twice) */\n        this.blocking = false;\n\n        this._setUpCommonSettings(attributes);\n        this._setUpBehaviors();\n        this._dataSetUp();\n    },\n\n    /** map of common filter pairs by name */\n    commonFilters: {\n        illumina: [\"_1\", \"_2\"],\n        Rs: [\"_R1\", \"_R2\"]\n    },\n    /** which commonFilter to use by default */\n    DEFAULT_FILTERS: \"illumina\",\n\n    /** map of name->fn for autopairing */\n    strategies: {\n        simple: \"autopairSimple\",\n        lcs: \"autopairLCS\",\n        levenshtein: \"autopairLevenshtein\"\n    },\n    /** default autopair strategy name */\n    DEFAULT_STRATEGY: \"lcs\",\n\n    // ------------------------------------------------------------------------ process raw list\n    /** set up main data: cache initialList, sort, and autopair */\n    _dataSetUp: function _dataSetUp() {\n        //this.debug( '-- _dataSetUp' );\n\n        this.paired = [];\n        this.unpaired = [];\n\n        this.selectedIds = [];\n\n        // sort initial list, add ids if needed, and save new working copy to unpaired\n        this._sortInitialList();\n        this._ensureIds();\n        this.unpaired = this.initialList.slice(0);\n\n        if (this.automaticallyPair) {\n            this.autoPair();\n            this.once(\"rendered:initial\", function () {\n                this.trigger(\"autopair\");\n            });\n        }\n    },\n\n    /** sort initial list */\n    _sortInitialList: function _sortInitialList() {\n        //this.debug( '-- _sortInitialList' );\n        this._sortDatasetList(this.initialList);\n    },\n\n    /** sort a list of datasets */\n    _sortDatasetList: function _sortDatasetList(list) {\n        // currently only natural sort by name\n        list.sort(function (a, b) {\n            return (0, _naturalSort2.default)(a.name, b.name);\n        });\n        return list;\n    },\n\n    /** add ids to dataset objs in initial list if none */\n    _ensureIds: function _ensureIds() {\n        this.initialList.forEach(function (dataset) {\n            if (!dataset.hasOwnProperty(\"id\")) {\n                dataset.id = _.uniqueId();\n            }\n        });\n        return this.initialList;\n    },\n\n    /** split initial list into two lists, those that pass forward filters & those passing reverse */\n    _splitByFilters: function _splitByFilters() {\n        var regexFilters = this.filters.map(function (stringFilter) {\n            return new RegExp(stringFilter);\n        });\n\n        var split = [[], []];\n\n        function _filter(unpaired, filter) {\n            return filter.test(unpaired.name);\n            //return dataset.name.indexOf( filter ) >= 0;\n        }\n        this.unpaired.forEach(function _filterEach(unpaired) {\n            // 90% of the time this seems to work, but:\n            //TODO: this treats *all* strings as regex which may confuse people - possibly check for // surrounding?\n            //  would need explanation in help as well\n            regexFilters.forEach(function (filter, i) {\n                if (_filter(unpaired, filter)) {\n                    split[i].push(unpaired);\n                }\n            });\n        });\n        return split;\n    },\n\n    /** add a dataset to the unpaired list in it's proper order */\n    _addToUnpaired: function _addToUnpaired(dataset) {\n        var _this = this;\n\n        // currently, unpaired is natural sorted by name, use binary search to find insertion point\n        var binSearchSortedIndex = function binSearchSortedIndex(low, hi) {\n            if (low === hi) {\n                return low;\n            }\n\n            var mid = Math.floor((hi - low) / 2) + low;\n\n            var compared = (0, _naturalSort2.default)(dataset.name, _this.unpaired[mid].name);\n\n            if (compared < 0) {\n                return binSearchSortedIndex(low, mid);\n            } else if (compared > 0) {\n                return binSearchSortedIndex(mid + 1, hi);\n            }\n            // walk the equal to find the last\n            while (_this.unpaired[mid] && _this.unpaired[mid].name === dataset.name) {\n                mid++;\n            }\n            return mid;\n        };\n\n        this.unpaired.splice(binSearchSortedIndex(0, this.unpaired.length), 0, dataset);\n    },\n\n    // ------------------------------------------------------------------------ auto pairing\n    /** two passes to automatically create pairs:\n     *  use both simpleAutoPair, then the fn mentioned in strategy\n     */\n    autoPair: function autoPair(strategy) {\n        // split first using exact matching\n        var split = this._splitByFilters();\n\n        var paired = [];\n        if (this.twoPassAutopairing) {\n            paired = this.autopairSimple({\n                listA: split[0],\n                listB: split[1]\n            });\n            split = this._splitByFilters();\n        }\n\n        // uncomment to see printlns while running tests\n        //this.debug = function(){ console.log.apply( console, arguments ); };\n\n        // then try the remainder with something less strict\n        strategy = strategy || this.strategy;\n        split = this._splitByFilters();\n        paired = paired.concat(this[strategy].call(this, {\n            listA: split[0],\n            listB: split[1]\n        }));\n        return paired;\n    },\n\n    /** autopair by exact match */\n    autopairSimple: autoPairFnBuilder({\n        scoreThreshold: function scoreThreshold() {\n            return 0.6;\n        },\n        match: function _match(params) {\n            params = params || {};\n            if (params.matchTo === params.possible) {\n                return {\n                    index: params.index,\n                    score: 1.0\n                };\n            }\n            return params.bestMatch;\n        }\n    }),\n\n    /** autopair by levenshtein edit distance scoring */\n    autopairLevenshtein: autoPairFnBuilder({\n        scoreThreshold: function scoreThreshold() {\n            return this.matchPercentage;\n        },\n        match: function _matches(params) {\n            params = params || {};\n\n            var distance = (0, _levenshtein2.default)(params.matchTo, params.possible);\n\n            var score = 1.0 - distance / Math.max(params.matchTo.length, params.possible.length);\n\n            if (score > params.bestMatch.score) {\n                return {\n                    index: params.index,\n                    score: score\n                };\n            }\n            return params.bestMatch;\n        }\n    }),\n\n    /** autopair by longest common substrings scoring */\n    autopairLCS: autoPairFnBuilder({\n        scoreThreshold: function scoreThreshold() {\n            return this.matchPercentage;\n        },\n        match: function _matches(params) {\n            params = params || {};\n\n            var match = this._naiveStartingAndEndingLCS(params.matchTo, params.possible).length;\n\n            var score = match / Math.max(params.matchTo.length, params.possible.length);\n\n            if (score > params.bestMatch.score) {\n                return {\n                    index: params.index,\n                    score: score\n                };\n            }\n            return params.bestMatch;\n        }\n    }),\n\n    /** return the concat'd longest common prefix and suffix from two strings */\n    _naiveStartingAndEndingLCS: function _naiveStartingAndEndingLCS(s1, s2) {\n        var fwdLCS = \"\";\n        var revLCS = \"\";\n        var i = 0;\n        var j = 0;\n        while (i < s1.length && i < s2.length) {\n            if (s1[i] !== s2[i]) {\n                break;\n            }\n            fwdLCS += s1[i];\n            i += 1;\n        }\n        if (i === s1.length) {\n            return s1;\n        }\n        if (i === s2.length) {\n            return s2;\n        }\n\n        i = s1.length - 1;\n        j = s2.length - 1;\n        while (i >= 0 && j >= 0) {\n            if (s1[i] !== s2[j]) {\n                break;\n            }\n            revLCS = [s1[i], revLCS].join(\"\");\n            i -= 1;\n            j -= 1;\n        }\n        return fwdLCS + revLCS;\n    },\n\n    // ------------------------------------------------------------------------ pairing / unpairing\n    /** create a pair from fwd and rev, removing them from unpaired, and placing the new pair in paired */\n    _pair: function _pair(fwd, rev, options) {\n        options = options || {};\n        this.debug(\"_pair:\", fwd, rev);\n        var pair = this._createPair(fwd, rev, options.name);\n        this.paired.push(pair);\n        this.unpaired = _.without(this.unpaired, fwd, rev);\n        if (!options.silent) {\n            this.trigger(\"pair:new\", pair);\n        }\n        return pair;\n    },\n\n    /** create a pair Object from fwd and rev, adding the name attribute (will guess if not given) */\n    _createPair: function _createPair(fwd, rev, name) {\n        // ensure existance and don't pair something with itself\n        if (!(fwd && rev) || fwd === rev) {\n            throw new Error(\"Bad pairing: \" + [JSON.stringify(fwd), JSON.stringify(rev)]);\n        }\n        name = name || this._guessNameForPair(fwd, rev);\n        return { forward: fwd, name: name, reverse: rev };\n    },\n\n    /** try to find a good pair name for the given fwd and rev datasets */\n    _guessNameForPair: function _guessNameForPair(fwd, rev, removeExtensions) {\n        removeExtensions = removeExtensions !== undefined ? removeExtensions : this.removeExtensions;\n        var fwdName = fwd.name;\n        var revName = rev.name;\n\n        var lcs = this._naiveStartingAndEndingLCS(fwdName.replace(new RegExp(this.filters[0]), \"\"), revName.replace(new RegExp(this.filters[1]), \"\"));\n\n        if (removeExtensions) {\n            var lastDotIndex = lcs.lastIndexOf(\".\");\n            if (lastDotIndex > 0) {\n                var extension = lcs.slice(lastDotIndex, lcs.length);\n                lcs = lcs.replace(extension, \"\");\n                fwdName = fwdName.replace(extension, \"\");\n                revName = revName.replace(extension, \"\");\n            }\n        }\n        return lcs || fwdName + \" & \" + revName;\n    },\n\n    /** unpair a pair, removing it from paired, and adding the fwd,rev datasets back into unpaired */\n    _unpair: function _unpair(pair, options) {\n        options = options || {};\n        if (!pair) {\n            throw new Error(\"Bad pair: \" + JSON.stringify(pair));\n        }\n        this.paired = _.without(this.paired, pair);\n        this._addToUnpaired(pair.forward);\n        this._addToUnpaired(pair.reverse);\n\n        if (!options.silent) {\n            this.trigger(\"pair:unpair\", [pair]);\n        }\n        return pair;\n    },\n\n    /** unpair all paired datasets */\n    unpairAll: function unpairAll() {\n        var pairs = [];\n        while (this.paired.length) {\n            pairs.push(this._unpair(this.paired[0], { silent: true }));\n        }\n        this.trigger(\"pair:unpair\", pairs);\n    },\n\n    // ------------------------------------------------------------------------ API\n    /** convert a pair into JSON compatible with the collections API */\n    _pairToJSON: function _pairToJSON(pair, src) {\n        src = src || \"hda\";\n        //TODO: consider making this the pair structure when created instead\n        return {\n            collection_type: \"paired\",\n            src: \"new_collection\",\n            name: pair.name,\n            element_identifiers: [{\n                name: \"forward\",\n                id: pair.forward.id,\n                src: src\n            }, {\n                name: \"reverse\",\n                id: pair.reverse.id,\n                src: src\n            }]\n        };\n    },\n\n    /** create the collection via the API\n     *  @returns {jQuery.xhr Object}    the jquery ajax request\n     */\n    createList: function createList(name) {\n        var self = this;\n\n        var url = Galaxy.root + \"api/histories/\" + this.historyId + \"/contents/dataset_collections\";\n\n        //TODO: use ListPairedCollection.create()\n        var ajaxData = {\n            type: \"dataset_collection\",\n            collection_type: \"list:paired\",\n            hide_source_items: self.hideOriginals || false,\n            name: _.escape(name || self.$(\".collection-name\").val()),\n            element_identifiers: self.paired.map(function (pair) {\n                return self._pairToJSON(pair);\n            })\n        };\n        //this.debug( JSON.stringify( ajaxData ) );\n        self.blocking = true;\n        return jQuery.ajax(url, {\n            type: \"POST\",\n            contentType: \"application/json\",\n            dataType: \"json\",\n            data: JSON.stringify(ajaxData)\n        }).always(function () {\n            self.blocking = false;\n        }).fail(function (xhr, status, message) {\n            self._ajaxErrHandler(xhr, status, message);\n        }).done(function (response, message, xhr) {\n            //this.info( 'ok', response, message, xhr );\n            self.trigger(\"collection:created\", response, message, xhr);\n            self.metric(\"collection:created\", response);\n            if (typeof self.oncreate === \"function\") {\n                self.oncreate.call(this, response, message, xhr);\n            }\n        });\n    },\n\n    /** handle ajax errors with feedback and details to the user (if available) */\n    _ajaxErrHandler: function _ajaxErrHandler(xhr, status, message) {\n        this.error(xhr, status, message);\n        var self = this;\n        var content = (0, _localization2.default)(\"An error occurred while creating this collection\");\n        if (xhr) {\n            if (xhr.readyState === 0 && xhr.status === 0) {\n                content += \": \" + (0, _localization2.default)(\"Galaxy could not be reached and may be updating.\") + (0, _localization2.default)(\" Try again in a few minutes.\");\n            } else if (xhr.responseJSON) {\n                content += \"<br /><pre>\" + JSON.stringify(xhr.responseJSON) + \"</pre>\";\n            } else {\n                content += \": \" + message;\n            }\n        }\n        self._showAlert(content, \"alert-danger\");\n    },\n\n    // ------------------------------------------------------------------------ rendering\n    /** render the entire interface */\n    render: function render(speed, callback) {\n        //this.debug( '-- _render' );\n        //this.$el.empty().html( this.templates.main() );\n        this.$el.empty().html(this.templates.main());\n        this._renderHeader(speed);\n        this._renderMiddle(speed);\n        this._renderFooter(speed);\n        this._addPluginComponents();\n        this.trigger(\"rendered\", this);\n        return this;\n    },\n\n    /** render the header section */\n    _renderHeader: function _renderHeader(speed, callback) {\n        //this.debug( '-- _renderHeader' );\n        var $header = this.$(\".header\").empty().html(this.templates.header()).find(\".help-content\").prepend($(this.templates.helpContent()));\n\n        this._renderFilters();\n        return $header;\n    },\n    /** fill the filter inputs with the filter values */\n    _renderFilters: function _renderFilters() {\n        return this.$(\".forward-column .column-header input\").val(this.filters[0]).add(this.$(\".reverse-column .column-header input\").val(this.filters[1]));\n    },\n\n    /** render the middle including unpaired and paired sections (which may be hidden) */\n    _renderMiddle: function _renderMiddle(speed, callback) {\n        var $middle = this.$(\".middle\").empty().html(this.templates.middle());\n\n        // (re-) hide the un/paired panels based on instance vars\n        if (this.unpairedPanelHidden) {\n            this.$(\".unpaired-columns\").hide();\n        } else if (this.pairedPanelHidden) {\n            this.$(\".paired-columns\").hide();\n        }\n\n        this._renderUnpaired();\n        this._renderPaired();\n        return $middle;\n    },\n    /** render the unpaired section, showing datasets accrd. to filters, update the unpaired counts */\n    _renderUnpaired: function _renderUnpaired(speed, callback) {\n        //this.debug( '-- _renderUnpaired' );\n        var self = this;\n\n        var $fwd;\n        var $rev;\n        var $prd = [];\n        var split = this._splitByFilters();\n        // update unpaired counts\n        this.$(\".forward-column .title\").text([split[0].length, (0, _localization2.default)(\"unpaired forward\")].join(\" \"));\n        this.$(\".forward-column .unpaired-info\").text(this._renderUnpairedDisplayStr(this.unpaired.length - split[0].length));\n        this.$(\".reverse-column .title\").text([split[1].length, (0, _localization2.default)(\"unpaired reverse\")].join(\" \"));\n        this.$(\".reverse-column .unpaired-info\").text(this._renderUnpairedDisplayStr(this.unpaired.length - split[1].length));\n\n        this.$(\".unpaired-columns .column-datasets\").empty();\n\n        // show/hide the auto pair button if any unpaired are left\n        this.$(\".autopair-link\").toggle(this.unpaired.length !== 0);\n        if (this.unpaired.length === 0) {\n            this._renderUnpairedEmpty();\n            return;\n        }\n\n        // create the dataset dom arrays\n        $rev = split[1].map(function (dataset, i) {\n            // if there'll be a fwd dataset across the way, add a button to pair the row\n            if (split[0][i] !== undefined && split[0][i] !== dataset) {\n                $prd.push(self._renderPairButton());\n            }\n            return self._renderUnpairedDataset(dataset);\n        });\n        $fwd = split[0].map(function (dataset) {\n            return self._renderUnpairedDataset(dataset);\n        });\n\n        if (!$fwd.length && !$rev.length) {\n            this._renderUnpairedNotShown();\n            return;\n        }\n        // add to appropo cols\n        //TODO: not the best way to render - consider rendering the entire unpaired-columns section in a fragment\n        //  and swapping out that\n        this.$(\".unpaired-columns .forward-column .column-datasets\").append($fwd).add(this.$(\".unpaired-columns .paired-column .column-datasets\").append($prd)).add(this.$(\".unpaired-columns .reverse-column .column-datasets\").append($rev));\n        this._adjUnpairedOnScrollbar();\n    },\n    /** return a string to display the count of filtered out datasets */\n    _renderUnpairedDisplayStr: function _renderUnpairedDisplayStr(numFiltered) {\n        return [\"(\", numFiltered, \" \", (0, _localization2.default)(\"filtered out\"), \")\"].join(\"\");\n    },\n    /** return an unattached jQuery DOM element to represent an unpaired dataset */\n    _renderUnpairedDataset: function _renderUnpairedDataset(dataset) {\n        //TODO: to underscore template\n        return $(\"<li/>\").attr(\"id\", \"dataset-\" + dataset.id).addClass(\"dataset unpaired\").attr(\"draggable\", true).addClass(dataset.selected ? \"selected\" : \"\").append($(\"<span/>\").addClass(\"dataset-name\").text(dataset.name))\n        //??\n        .data(\"dataset\", dataset);\n    },\n    /** render the button that may go between unpaired datasets, allowing the user to pair a row */\n    _renderPairButton: function _renderPairButton() {\n        //TODO: *not* a dataset - don't pretend like it is\n        return $(\"<li/>\").addClass(\"dataset unpaired\").append($(\"<span/>\").addClass(\"dataset-name\").text((0, _localization2.default)(\"Pair these datasets\")));\n    },\n    /** a message to display when no unpaired left */\n    _renderUnpairedEmpty: function _renderUnpairedEmpty() {\n        //this.debug( '-- renderUnpairedEmpty' );\n        var $msg = $('<div class=\"empty-message\"></div>').text(\"(\" + (0, _localization2.default)(\"no remaining unpaired datasets\") + \")\");\n        this.$(\".unpaired-columns .paired-column .column-datasets\").empty().prepend($msg);\n        return $msg;\n    },\n    /** a message to display when no unpaired can be shown with the current filters */\n    _renderUnpairedNotShown: function _renderUnpairedNotShown() {\n        //this.debug( '-- renderUnpairedEmpty' );\n        var $msg = $('<div class=\"empty-message\"></div>').text(\"(\" + (0, _localization2.default)(\"no datasets were found matching the current filters\") + \")\");\n        this.$(\".unpaired-columns .paired-column .column-datasets\").empty().prepend($msg);\n        return $msg;\n    },\n    /** try to detect if the unpaired section has a scrollbar and adjust left column for better centering of all */\n    _adjUnpairedOnScrollbar: function _adjUnpairedOnScrollbar() {\n        var $unpairedColumns = this.$(\".unpaired-columns\").last();\n\n        var $firstDataset = this.$(\".unpaired-columns .reverse-column .dataset\").first();\n\n        if (!$firstDataset.length) {\n            return;\n        }\n\n        var ucRight = $unpairedColumns.offset().left + $unpairedColumns.outerWidth();\n\n        var dsRight = $firstDataset.offset().left + $firstDataset.outerWidth();\n\n        var rightDiff = Math.floor(ucRight) - Math.floor(dsRight);\n        //this.debug( 'rightDiff:', ucRight, '-', dsRight, '=', rightDiff );\n        this.$(\".unpaired-columns .forward-column\").css(\"margin-left\", rightDiff > 0 ? rightDiff : 0);\n    },\n\n    /** render the paired section and update counts of paired datasets */\n    _renderPaired: function _renderPaired(speed, callback) {\n        //this.debug( '-- _renderPaired' );\n        this.$(\".paired-column-title .title\").text([this.paired.length, (0, _localization2.default)(\"paired\")].join(\" \"));\n        // show/hide the unpair all link\n        this.$(\".unpair-all-link\").toggle(this.paired.length !== 0);\n        if (this.paired.length === 0) {\n            this._renderPairedEmpty();\n            return;\n            //TODO: would be best to return here (the $columns)\n        } else {\n            // show/hide 'remove extensions link' when any paired and they seem to have extensions\n            this.$(\".remove-extensions-link\").show();\n        }\n\n        this.$(\".paired-columns .column-datasets\").empty();\n        var self = this;\n        this.paired.forEach(function (pair, i) {\n            //TODO: cache these?\n            var pairView = new PairView({ pair: pair });\n            self.$(\".paired-columns .column-datasets\").append(pairView.render().$el).append(['<button class=\"unpair-btn\">', '<span class=\"fa fa-unlink\" title=\"', (0, _localization2.default)(\"Unpair\"), '\"></span>', \"</button>\"].join(\"\"));\n        });\n    },\n    /** a message to display when none paired */\n    _renderPairedEmpty: function _renderPairedEmpty() {\n        var $msg = $('<div class=\"empty-message\"></div>').text(\"(\" + (0, _localization2.default)(\"no paired datasets yet\") + \")\");\n        this.$(\".paired-columns .column-datasets\").empty().prepend($msg);\n        return $msg;\n    },\n\n    footerSettings: {\n        \".hide-originals\": \"hideOriginals\",\n        \".remove-extensions\": \"removeExtensions\"\n    },\n\n    /** add any jQuery/bootstrap/custom plugins to elements rendered */\n    _addPluginComponents: function _addPluginComponents() {\n        this._chooseFiltersPopover(\".choose-filters-link\");\n        this.$(\".help-content i\").hoverhighlight(\".collection-creator\", \"rgba( 64, 255, 255, 1.0 )\");\n    },\n\n    /** build a filter selection popover allowing selection of common filter pairs */\n    _chooseFiltersPopover: function _chooseFiltersPopover(selector) {\n        function filterChoice(val1, val2) {\n            return ['<button class=\"filter-choice btn\" ', 'data-forward=\"', val1, '\" data-reverse=\"', val2, '\">', (0, _localization2.default)(\"Forward\"), \": \", val1, \", \", (0, _localization2.default)(\"Reverse\"), \": \", val2, \"</button>\"].join(\"\");\n        }\n        var $popoverContent = $(_.template(['<div class=\"choose-filters\">', '<div class=\"help\">', (0, _localization2.default)(\"Choose from the following filters to change which unpaired reads are shown in the display\"), \":</div>\", _.values(this.commonFilters).map(function (filterSet) {\n            return filterChoice(filterSet[0], filterSet[1]);\n        }).join(\"\"), \"</div>\"].join(\"\"))({}));\n\n        return this.$(selector).popover({\n            container: \".collection-creator\",\n            placement: \"bottom\",\n            html: true,\n            //animation   : false,\n            content: $popoverContent\n        });\n    },\n\n    /** add (or clear if clear is truthy) a validation warning to what */\n    _validationWarning: function _validationWarning(what, clear) {\n        var VALIDATION_CLASS = \"validation-warning\";\n        if (what === \"name\") {\n            what = this.$(\".collection-name\").add(this.$(\".collection-name-prompt\"));\n            this.$(\".collection-name\").focus().select();\n        }\n        if (clear) {\n            what = what || this.$(\".\" + VALIDATION_CLASS);\n            what.removeClass(VALIDATION_CLASS);\n        } else {\n            what.addClass(VALIDATION_CLASS);\n        }\n    },\n\n    // ------------------------------------------------------------------------ events\n    /** set up event handlers on self */\n    _setUpBehaviors: function _setUpBehaviors() {\n        this.once(\"rendered\", function () {\n            this.trigger(\"rendered:initial\", this);\n        });\n\n        this.on(\"pair:new\", function () {\n            //TODO: ideally only re-render the columns (or even elements) involved\n            this._renderUnpaired();\n            this._renderPaired();\n\n            // scroll to bottom where new pairs are added\n            //TODO: this doesn't seem to work - innerHeight sticks at 133...\n            //  may have to do with improper flex columns\n            //var $pairedView = this.$( '.paired-columns' );\n            //$pairedView.scrollTop( $pairedView.innerHeight() );\n            //this.debug( $pairedView.height() )\n            this.$(\".paired-columns\").scrollTop(8000000);\n        });\n        this.on(\"pair:unpair\", function (pairs) {\n            //TODO: ideally only re-render the columns (or even elements) involved\n            this._renderUnpaired();\n            this._renderPaired();\n            this.splitView();\n        });\n\n        this.on(\"filter-change\", function () {\n            this.filters = [this.$(\".forward-unpaired-filter input\").val(), this.$(\".reverse-unpaired-filter input\").val()];\n            this.metric(\"filter-change\", this.filters);\n            this._renderFilters();\n            this._renderUnpaired();\n        });\n\n        this.on(\"autopair\", function () {\n            this._renderUnpaired();\n            this._renderPaired();\n\n            var message;\n            var msgClass = null;\n            if (this.paired.length) {\n                msgClass = \"alert-success\";\n                message = this.paired.length + \" \" + (0, _localization2.default)(\"pairs created\");\n                if (!this.unpaired.length) {\n                    message += \": \" + (0, _localization2.default)(\"all datasets have been successfully paired\");\n                    this.hideUnpaired();\n                    this.$(\".collection-name\").focus();\n                }\n            } else {\n                message = (0, _localization2.default)([\"Could not automatically create any pairs from the given dataset names.\", \"You may want to choose or enter different filters and try auto-pairing again.\", \"Close this message using the X on the right to view more help.\"].join(\" \"));\n            }\n            this._showAlert(message, msgClass);\n        });\n\n        //this.on( 'all', function(){\n        //    this.info( arguments );\n        //});\n        return this;\n    },\n\n    events: {\n        // header\n        \"click .more-help\": \"_clickMoreHelp\",\n        \"click .less-help\": \"_clickLessHelp\",\n        \"click .main-help\": \"_toggleHelp\",\n        \"click .header .alert button\": \"_hideAlert\",\n        \"click .forward-column .column-title\": \"_clickShowOnlyUnpaired\",\n        \"click .reverse-column .column-title\": \"_clickShowOnlyUnpaired\",\n        \"click .unpair-all-link\": \"_clickUnpairAll\",\n        //TODO: this seems kinda backasswards - re-sending jq event as a backbone event, can we listen directly?\n        \"change .forward-unpaired-filter input\": function changeForwardUnpairedFilterInput(ev) {\n            this.trigger(\"filter-change\");\n        },\n        \"focus .forward-unpaired-filter input\": function focusForwardUnpairedFilterInput(ev) {\n            $(ev.currentTarget).select();\n        },\n        \"click .autopair-link\": \"_clickAutopair\",\n        \"click .choose-filters .filter-choice\": \"_clickFilterChoice\",\n        \"click .clear-filters-link\": \"_clearFilters\",\n        \"change .reverse-unpaired-filter input\": function changeReverseUnpairedFilterInput(ev) {\n            this.trigger(\"filter-change\");\n        },\n        \"focus .reverse-unpaired-filter input\": function focusReverseUnpairedFilterInput(ev) {\n            $(ev.currentTarget).select();\n        },\n        // unpaired\n        \"click .forward-column .dataset.unpaired\": \"_clickUnpairedDataset\",\n        \"click .reverse-column .dataset.unpaired\": \"_clickUnpairedDataset\",\n        \"click .paired-column .dataset.unpaired\": \"_clickPairRow\",\n        \"click .unpaired-columns\": \"clearSelectedUnpaired\",\n        \"mousedown .unpaired-columns .dataset\": \"_mousedownUnpaired\",\n        // divider\n        \"click .paired-column-title\": \"_clickShowOnlyPaired\",\n        \"mousedown .flexible-partition-drag\": \"_startPartitionDrag\",\n        // paired\n        \"click .paired-columns .dataset.paired\": \"selectPair\",\n        \"click .paired-columns\": \"clearSelectedPaired\",\n        \"click .paired-columns .pair-name\": \"_clickPairName\",\n        \"click .unpair-btn\": \"_clickUnpair\",\n        // paired - drop target\n        //'dragenter .paired-columns'                 : '_dragenterPairedColumns',\n        //'dragleave .paired-columns .column-datasets': '_dragleavePairedColumns',\n        \"dragover .paired-columns .column-datasets\": \"_dragoverPairedColumns\",\n        \"drop .paired-columns .column-datasets\": \"_dropPairedColumns\",\n\n        \"pair.dragstart .paired-columns .column-datasets\": \"_pairDragstart\",\n        \"pair.dragend   .paired-columns .column-datasets\": \"_pairDragend\",\n\n        // footer\n        \"change .remove-extensions\": function changeRemoveExtensions(ev) {\n            this.toggleExtensions();\n        },\n        \"change .collection-name\": \"_changeName\",\n        \"keydown .collection-name\": \"_nameCheckForEnter\",\n        \"change .hide-originals\": \"_changeHideOriginals\",\n        \"click .cancel-create\": \"_cancelCreate\",\n        \"click .create-collection\": \"_clickCreate\" //,\n    },\n\n    /** toggle between showing only unpaired and split view */\n    _clickShowOnlyUnpaired: function _clickShowOnlyUnpaired(ev) {\n        //this.debug( 'click unpaired', ev.currentTarget );\n        if (this.$(\".paired-columns\").is(\":visible\")) {\n            this.hidePaired();\n        } else {\n            this.splitView();\n        }\n    },\n    /** toggle between showing only paired and split view */\n    _clickShowOnlyPaired: function _clickShowOnlyPaired(ev) {\n        //this.debug( 'click paired' );\n        if (this.$(\".unpaired-columns\").is(\":visible\")) {\n            this.hideUnpaired();\n        } else {\n            this.splitView();\n        }\n    },\n\n    /** hide unpaired, show paired */\n    hideUnpaired: function hideUnpaired(speed, callback) {\n        this.unpairedPanelHidden = true;\n        this.pairedPanelHidden = false;\n        this._renderMiddle(speed, callback);\n    },\n    /** hide paired, show unpaired */\n    hidePaired: function hidePaired(speed, callback) {\n        this.unpairedPanelHidden = false;\n        this.pairedPanelHidden = true;\n        this._renderMiddle(speed, callback);\n    },\n    /** show both paired and unpaired (splitting evenly) */\n    splitView: function splitView(speed, callback) {\n        this.unpairedPanelHidden = this.pairedPanelHidden = false;\n        this._renderMiddle(speed, callback);\n        return this;\n    },\n\n    /** unpair all paired and do other super neat stuff which I'm not really sure about yet... */\n    _clickUnpairAll: function _clickUnpairAll(ev) {\n        this.metric(\"unpairAll\");\n        this.unpairAll();\n    },\n\n    /** attempt to autopair */\n    _clickAutopair: function _clickAutopair(ev) {\n        var paired = this.autoPair();\n        this.metric(\"autopair\", paired.length, this.unpaired.length);\n        this.trigger(\"autopair\");\n    },\n\n    /** set the filters based on the data attributes of the button click target */\n    _clickFilterChoice: function _clickFilterChoice(ev) {\n        var $selected = $(ev.currentTarget);\n        this.$(\".forward-unpaired-filter input\").val($selected.data(\"forward\"));\n        this.$(\".reverse-unpaired-filter input\").val($selected.data(\"reverse\"));\n        this._hideChooseFilters();\n        this.trigger(\"filter-change\");\n    },\n\n    /** hide the choose filters popover */\n    _hideChooseFilters: function _hideChooseFilters() {\n        //TODO: update bootstrap and remove the following hack\n        //  see also: https://github.com/twbs/bootstrap/issues/10260\n        this.$(\".choose-filters-link\").popover(\"hide\");\n        this.$(\".popover\").css(\"display\", \"none\");\n    },\n\n    /** clear both filters */\n    _clearFilters: function _clearFilters(ev) {\n        this.$(\".forward-unpaired-filter input\").val(\"\");\n        this.$(\".reverse-unpaired-filter input\").val(\"\");\n        this.trigger(\"filter-change\");\n    },\n\n    // ........................................................................ unpaired\n    /** select an unpaired dataset */\n    _clickUnpairedDataset: function _clickUnpairedDataset(ev) {\n        ev.stopPropagation();\n        return this.toggleSelectUnpaired($(ev.currentTarget));\n    },\n\n    /** Toggle the selection of an unpaired dataset representation.\n     *  @param [jQuery] $dataset        the unpaired dataset dom rep to select\n     *  @param [Boolean] options.force  if defined, force selection based on T/F; otherwise, toggle\n     */\n    toggleSelectUnpaired: function toggleSelectUnpaired($dataset, options) {\n        options = options || {};\n        var dataset = $dataset.data(\"dataset\");\n\n        var select = options.force !== undefined ? options.force : !$dataset.hasClass(\"selected\");\n\n        //this.debug( id, options.force, $dataset, dataset );\n        if (!$dataset.length || dataset === undefined) {\n            return $dataset;\n        }\n\n        if (select) {\n            $dataset.addClass(\"selected\");\n            if (!options.waitToPair) {\n                this.pairAllSelected();\n            }\n        } else {\n            $dataset.removeClass(\"selected\");\n            //delete dataset.selected;\n        }\n        return $dataset;\n    },\n\n    /** pair all the currently selected unpaired datasets */\n    pairAllSelected: function pairAllSelected(options) {\n        options = options || {};\n        var self = this;\n        var fwds = [];\n        var revs = [];\n        var pairs = [];\n        self.$(\".unpaired-columns .forward-column .dataset.selected\").each(function () {\n            fwds.push($(this).data(\"dataset\"));\n        });\n        self.$(\".unpaired-columns .reverse-column .dataset.selected\").each(function () {\n            revs.push($(this).data(\"dataset\"));\n        });\n        fwds.length = revs.length = Math.min(fwds.length, revs.length);\n        //this.debug( fwds );\n        //this.debug( revs );\n        fwds.forEach(function (fwd, i) {\n            try {\n                pairs.push(self._pair(fwd, revs[i], { silent: true }));\n            } catch (err) {\n                //TODO: preserve selected state of those that couldn't be paired\n                //TODO: warn that some could not be paired\n                self.error(err);\n            }\n        });\n        if (pairs.length && !options.silent) {\n            this.trigger(\"pair:new\", pairs);\n        }\n        return pairs;\n    },\n\n    /** clear the selection on all unpaired datasets */\n    clearSelectedUnpaired: function clearSelectedUnpaired() {\n        this.$(\".unpaired-columns .dataset.selected\").removeClass(\"selected\");\n    },\n\n    /** when holding down the shift key on a click, 'paint' the moused over datasets as selected */\n    _mousedownUnpaired: function _mousedownUnpaired(ev) {\n        if (ev.shiftKey) {\n            var self = this;\n            var $startTarget = $(ev.target).addClass(\"selected\");\n\n            var moveListener = function moveListener(ev) {\n                self.$(ev.target).filter(\".dataset\").addClass(\"selected\");\n            };\n\n            $startTarget.parent().on(\"mousemove\", moveListener);\n\n            // on any mouseup, stop listening to the move and try to pair any selected\n            $(document).one(\"mouseup\", function (ev) {\n                $startTarget.parent().off(\"mousemove\", moveListener);\n                self.pairAllSelected();\n            });\n        }\n    },\n\n    /** attempt to pair two datasets directly across from one another */\n    _clickPairRow: function _clickPairRow(ev) {\n        //if( !ev.currentTarget ){ return true; }\n        var rowIndex = $(ev.currentTarget).index();\n\n        var fwd = $(\".unpaired-columns .forward-column .dataset\").eq(rowIndex).data(\"dataset\");\n\n        var rev = $(\".unpaired-columns .reverse-column .dataset\").eq(rowIndex).data(\"dataset\");\n\n        //this.debug( 'row:', rowIndex, fwd, rev );\n        this._pair(fwd, rev);\n    },\n\n    // ........................................................................ divider/partition\n    /** start dragging the visible divider/partition between unpaired and paired panes */\n    _startPartitionDrag: function _startPartitionDrag(ev) {\n        var self = this;\n        var startingY = ev.pageY;\n        //this.debug( 'partition drag START:', ev );\n        $(\"body\").css(\"cursor\", \"ns-resize\");\n        self.$(\".flexible-partition-drag\").css(\"color\", \"black\");\n\n        function endDrag(ev) {\n            self.$(\".flexible-partition-drag\").css(\"color\", \"\");\n            $(\"body\").css(\"cursor\", \"\").unbind(\"mousemove\", trackMouse);\n        }\n        function trackMouse(ev) {\n            var offset = ev.pageY - startingY;\n            if (!self.adjPartition(offset)) {\n                $(\"body\").trigger(\"mouseup\");\n            }\n            self._adjUnpairedOnScrollbar();\n            startingY += offset;\n        }\n        $(\"body\").mousemove(trackMouse);\n        $(\"body\").one(\"mouseup\", endDrag);\n    },\n\n    /** adjust the parition up/down +/-adj pixels */\n    adjPartition: function adjPartition(adj) {\n        var $unpaired = this.$(\".unpaired-columns\");\n        var $paired = this.$(\".paired-columns\");\n        var unpairedHi = parseInt($unpaired.css(\"height\"), 10);\n        var pairedHi = parseInt($paired.css(\"height\"), 10);\n        //this.debug( adj, 'hi\\'s:', unpairedHi, pairedHi, unpairedHi + adj, pairedHi - adj );\n\n        unpairedHi = Math.max(10, unpairedHi + adj);\n        pairedHi = pairedHi - adj;\n\n        var movingUpwards = adj < 0;\n        // when the divider gets close to the top - lock into hiding the unpaired section\n        if (movingUpwards) {\n            if (this.unpairedPanelHidden) {\n                return false;\n            } else if (unpairedHi <= 10) {\n                this.hideUnpaired();\n                return false;\n            }\n        } else {\n            if (this.unpairedPanelHidden) {\n                $unpaired.show();\n                this.unpairedPanelHidden = false;\n            }\n        }\n\n        // when the divider gets close to the bottom - lock into hiding the paired section\n        if (!movingUpwards) {\n            if (this.pairedPanelHidden) {\n                return false;\n            } else if (pairedHi <= 15) {\n                this.hidePaired();\n                return false;\n            }\n        } else {\n            if (this.pairedPanelHidden) {\n                $paired.show();\n                this.pairedPanelHidden = false;\n            }\n        }\n\n        $unpaired.css({\n            height: unpairedHi + \"px\",\n            flex: \"0 0 auto\"\n        });\n        return true;\n    },\n\n    // ........................................................................ paired\n    /** select a pair when clicked */\n    selectPair: function selectPair(ev) {\n        ev.stopPropagation();\n        $(ev.currentTarget).toggleClass(\"selected\");\n    },\n\n    /** deselect all pairs */\n    clearSelectedPaired: function clearSelectedPaired(ev) {\n        this.$(\".paired-columns .dataset.selected\").removeClass(\"selected\");\n    },\n\n    /** rename a pair when the pair name is clicked */\n    _clickPairName: function _clickPairName(ev) {\n        ev.stopPropagation();\n        var $name = $(ev.currentTarget);\n        var $pair = $name.parent().parent();\n        var index = $pair.index(\".dataset.paired\");\n        var pair = this.paired[index];\n        var response = prompt(\"Enter a new name for the pair:\", pair.name);\n        if (response) {\n            pair.name = response;\n            // set a flag (which won't be passed in json creation) for manual naming so we don't overwrite these\n            //  when adding/removing extensions\n            //hackish\n            pair.customizedName = true;\n            $name.text(pair.name);\n        }\n    },\n\n    /** unpair this pair */\n    _clickUnpair: function _clickUnpair(ev) {\n        //if( !ev.currentTarget ){ return true; }\n        var pairIndex = Math.floor($(ev.currentTarget).index(\".unpair-btn\"));\n        //this.debug( 'pair:', pairIndex );\n        this._unpair(this.paired[pairIndex]);\n    },\n\n    // ........................................................................ paired - drag and drop re-ordering\n    //_dragenterPairedColumns : function( ev ){\n    //    this.debug( '_dragenterPairedColumns:', ev );\n    //},\n    //_dragleavePairedColumns : function( ev ){\n    //    //this.debug( '_dragleavePairedColumns:', ev );\n    //},\n    /** track the mouse drag over the paired list adding a placeholder to show where the drop would occur */\n    _dragoverPairedColumns: function _dragoverPairedColumns(ev) {\n        //this.debug( '_dragoverPairedColumns:', ev );\n        ev.preventDefault();\n\n        var $list = this.$(\".paired-columns .column-datasets\");\n        this._checkForAutoscroll($list, ev.originalEvent.clientY);\n        //this.debug( ev.originalEvent.clientX, ev.originalEvent.clientY );\n        var $nearest = this._getNearestPairedDatasetLi(ev.originalEvent.clientY);\n\n        $(\".element-drop-placeholder\").remove();\n        var $placeholder = $('<div class=\"element-drop-placeholder\"></div>');\n        if (!$nearest.length) {\n            $list.append($placeholder);\n        } else {\n            $nearest.before($placeholder);\n        }\n    },\n\n    /** If the mouse is near enough to the list's top or bottom, scroll the list */\n    _checkForAutoscroll: function _checkForAutoscroll($element, y) {\n        var AUTOSCROLL_SPEED = 2;\n        var offset = $element.offset();\n        var scrollTop = $element.scrollTop();\n        var upperDist = y - offset.top;\n        var lowerDist = offset.top + $element.outerHeight() - y;\n        //this.debug( '_checkForAutoscroll:', scrollTop, upperDist, lowerDist );\n        if (upperDist >= 0 && upperDist < this.autoscrollDist) {\n            $element.scrollTop(scrollTop - AUTOSCROLL_SPEED);\n        } else if (lowerDist >= 0 && lowerDist < this.autoscrollDist) {\n            $element.scrollTop(scrollTop + AUTOSCROLL_SPEED);\n        }\n    },\n\n    /** get the nearest *previous* paired dataset PairView based on the mouse's Y coordinate.\n     *      If the y is at the end of the list, return an empty jQuery object.\n     */\n    _getNearestPairedDatasetLi: function _getNearestPairedDatasetLi(y) {\n        var WIGGLE = 4;\n        var lis = this.$(\".paired-columns .column-datasets li\").toArray();\n        for (var i = 0; i < lis.length; i++) {\n            var $li = $(lis[i]);\n            var top = $li.offset().top;\n            var halfHeight = Math.floor($li.outerHeight() / 2) + WIGGLE;\n            if (top + halfHeight > y && top - halfHeight < y) {\n                //this.debug( y, top + halfHeight, top - halfHeight )\n                return $li;\n            }\n        }\n        return $();\n    },\n    /** drop (dragged/selected PairViews) onto the list, re-ordering both the DOM and the internal array of pairs */\n    _dropPairedColumns: function _dropPairedColumns(ev) {\n        // both required for firefox\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = \"move\";\n\n        var $nearest = this._getNearestPairedDatasetLi(ev.originalEvent.clientY);\n        if ($nearest.length) {\n            this.$dragging.insertBefore($nearest);\n        } else {\n            // no nearest before - insert after last element (unpair button)\n            this.$dragging.insertAfter(this.$(\".paired-columns .unpair-btn\").last());\n        }\n        // resync the creator's list of paired based on the new DOM order\n        this._syncPairsToDom();\n        return false;\n    },\n    /** resync the creator's list of paired based on the DOM order of pairs */\n    _syncPairsToDom: function _syncPairsToDom() {\n        var newPaired = [];\n        //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n        this.$(\".paired-columns .dataset.paired\").each(function () {\n            newPaired.push($(this).data(\"pair\"));\n        });\n        //this.debug( newPaired );\n        this.paired = newPaired;\n        this._renderPaired();\n    },\n    /** drag communication with pair sub-views: dragstart */\n    _pairDragstart: function _pairDragstart(ev, pair) {\n        //this.debug( '_pairDragstart', ev, pair )\n        // auto select the pair causing the event and move all selected\n        pair.$el.addClass(\"selected\");\n        var $selected = this.$(\".paired-columns .dataset.selected\");\n        this.$dragging = $selected;\n    },\n    /** drag communication with pair sub-views: dragend - remove the placeholder */\n    _pairDragend: function _pairDragend(ev, pair) {\n        //this.debug( '_pairDragend', ev, pair )\n        $(\".element-drop-placeholder\").remove();\n        this.$dragging = null;\n    },\n\n    // ........................................................................ footer\n    toggleExtensions: function toggleExtensions(force) {\n        var self = this;\n        self.removeExtensions = force !== undefined ? force : !self.removeExtensions;\n\n        _.each(self.paired, function (pair) {\n            // don't overwrite custom names\n            if (pair.customizedName) {\n                return;\n            }\n            pair.name = self._guessNameForPair(pair.forward, pair.reverse);\n        });\n\n        self._renderPaired();\n        self._renderFooter();\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** debug a dataset list */\n    _printList: function _printList(list) {\n        var self = this;\n        _.each(list, function (e) {\n            if (list === self.paired) {\n                self._printPair(e);\n            } else {\n                self.debug(e);\n            }\n        });\n    },\n\n    /** print a pair Object */\n    _printPair: function _printPair(pair) {\n        this.debug(pair.forward.name, pair.reverse.name, \": ->\", pair.name);\n    },\n\n    /** string rep */\n    toString: function toString() {\n        return \"PairedCollectionCreator\";\n    },\n\n    templates: _.extend({}, _baseCreator2.default.CollectionCreatorMixin._creatorTemplates, {\n        /** the header (not including help text) */\n        header: _.template(['<div class=\"main-help well clear\">', '<a class=\"more-help\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"More help\"), \"</a>\", '<div class=\"help-content\">', '<a class=\"less-help\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Less\"), \"</a>\", \"</div>\", \"</div>\", '<div class=\"alert alert-dismissable\">', '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>', '<span class=\"alert-message\"></span>', \"</div>\", '<div class=\"column-headers vertically-spaced flex-column-container\">', '<div class=\"forward-column flex-column column\">', '<div class=\"column-header\">', '<div class=\"column-title\">', '<span class=\"title\">', (0, _localization2.default)(\"Unpaired forward\"), \"</span>\", '<span class=\"title-info unpaired-info\"></span>', \"</div>\", '<div class=\"unpaired-filter forward-unpaired-filter pull-left\">', '<input class=\"search-query\" placeholder=\"', (0, _localization2.default)(\"Filter this list\"), '\" />', \"</div>\", \"</div>\", \"</div>\", '<div class=\"paired-column flex-column no-flex column\">', '<div class=\"column-header\">', '<a class=\"choose-filters-link\" href=\"javascript:void(0)\">', (0, _localization2.default)(\"Choose filters\"), \"</a>\", '<a class=\"clear-filters-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Clear filters\"), \"</a><br />\", '<a class=\"autopair-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Auto-pair\"), \"</a>\", \"</div>\", \"</div>\", '<div class=\"reverse-column flex-column column\">', '<div class=\"column-header\">', '<div class=\"column-title\">', '<span class=\"title\">', (0, _localization2.default)(\"Unpaired reverse\"), \"</span>\", '<span class=\"title-info unpaired-info\"></span>', \"</div>\", '<div class=\"unpaired-filter reverse-unpaired-filter pull-left\">', '<input class=\"search-query\" placeholder=\"', (0, _localization2.default)(\"Filter this list\"), '\" />', \"</div>\", \"</div>\", \"</div>\", \"</div>\"].join(\"\")),\n\n        /** the middle: unpaired, divider, and paired */\n        middle: _.template([\n        // contains two flex rows (rows that fill available space) and a divider btwn\n        '<div class=\"unpaired-columns flex-column-container scroll-container flex-row\">', '<div class=\"forward-column flex-column column\">', '<ol class=\"column-datasets\"></ol>', \"</div>\", '<div class=\"paired-column flex-column no-flex column\">', '<ol class=\"column-datasets\"></ol>', \"</div>\", '<div class=\"reverse-column flex-column column\">', '<ol class=\"column-datasets\"></ol>', \"</div>\", \"</div>\", '<div class=\"flexible-partition\">', '<div class=\"flexible-partition-drag\" title=\"', (0, _localization2.default)(\"Drag to change\"), '\"></div>', '<div class=\"column-header\">', '<div class=\"column-title paired-column-title\">', '<span class=\"title\"></span>', \"</div>\", '<a class=\"unpair-all-link\" href=\"javascript:void(0);\">', (0, _localization2.default)(\"Unpair all\"), \"</a>\", \"</div>\", \"</div>\", '<div class=\"paired-columns flex-column-container scroll-container flex-row\">', '<ol class=\"column-datasets\"></ol>', \"</div>\"].join(\"\")),\n\n        /** creation and cancel controls */\n        footer: _.template(['<div class=\"attributes clear\">', '<div class=\"clear\">', '<label class=\"setting-prompt pull-right\">', (0, _localization2.default)(\"Hide original elements\"), \"?\", '<input class=\"hide-originals pull-right\" type=\"checkbox\" />', \"</label>\", '<label class=\"setting-prompt pull-right\">', (0, _localization2.default)(\"Remove file extensions from pair names\"), \"?\", '<input class=\"remove-extensions pull-right\" type=\"checkbox\" />', \"</label>\", \"</div>\", '<div class=\"clear\">', '<input class=\"collection-name form-control pull-right\" ', 'placeholder=\"', (0, _localization2.default)(\"Enter a name for your new list\"), '\" />', '<div class=\"collection-name-prompt pull-right\">', (0, _localization2.default)(\"Name\"), \":</div>\", \"</div>\", \"</div>\", '<div class=\"actions clear vertically-spaced\">', '<div class=\"other-options pull-left\">', '<button class=\"cancel-create btn\" tabindex=\"-1\">', (0, _localization2.default)(\"Cancel\"), \"</button>\", '<div class=\"create-other btn-group dropup\">', '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">', (0, _localization2.default)(\"Create a different kind of collection\"), ' <span class=\"caret\"></span>', \"</button>\", '<ul class=\"dropdown-menu\" role=\"menu\">', '<li><a href=\"#\">', (0, _localization2.default)(\"Create a <i>single</i> pair\"), \"</a></li>\", '<li><a href=\"#\">', (0, _localization2.default)(\"Create a list of <i>unpaired</i> datasets\"), \"</a></li>\", \"</ul>\", \"</div>\", \"</div>\", '<div class=\"main-options pull-right\">', '<button class=\"create-collection btn btn-primary\">', (0, _localization2.default)(\"Create list\"), \"</button>\", \"</div>\", \"</div>\"].join(\"\")),\n\n        /** help content */\n        helpContent: _.template([\"<p>\", (0, _localization2.default)([\"Collections of paired datasets are ordered lists of dataset pairs (often forward and reverse reads). \", \"These collections can be passed to tools and workflows in order to have analyses done on each member of \", \"the entire group. This interface allows you to create a collection, choose which datasets are paired, \", \"and re-order the final collection.\"].join(\"\")), \"</p>\", \"<p>\", (0, _localization2.default)(['Unpaired datasets are shown in the <i data-target=\".unpaired-columns\">unpaired section</i> ', \"(hover over the underlined words to highlight below). \", 'Paired datasets are shown in the <i data-target=\".paired-columns\">paired section</i>.', \"<ul>To pair datasets, you can:\", \"<li>Click a dataset in the \", '<i data-target=\".unpaired-columns .forward-column .column-datasets,', '.unpaired-columns .forward-column\">forward column</i> ', \"to select it then click a dataset in the \", '<i data-target=\".unpaired-columns .reverse-column .column-datasets,', '.unpaired-columns .reverse-column\">reverse column</i>.', \"</li>\", '<li>Click one of the \"Pair these datasets\" buttons in the ', '<i data-target=\".unpaired-columns .paired-column .column-datasets,', '.unpaired-columns .paired-column\">middle column</i> ', \"to pair the datasets in a particular row.\", \"</li>\", '<li>Click <i data-target=\".autopair-link\">\"Auto-pair\"</i> ', \"to have your datasets automatically paired based on name.\", \"</li>\", \"</ul>\"].join(\"\")), \"</p>\", \"<p>\", (0, _localization2.default)([\"<ul>You can filter what is shown in the unpaired sections by:\", \"<li>Entering partial dataset names in either the \", '<i data-target=\".forward-unpaired-filter input\">forward filter</i> or ', '<i data-target=\".reverse-unpaired-filter input\">reverse filter</i>.', \"</li>\", \"<li>Choosing from a list of preset filters by clicking the \", '<i data-target=\".choose-filters-link\">\"Choose filters\" link</i>.', \"</li>\", \"<li>Entering regular expressions to match dataset names. See: \", '<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\"', ' target=\"_blank\">MDN\\'s JavaScript Regular Expression Tutorial</a>. ', \"Note: forward slashes (\\\\) are not needed.\", \"</li>\", \"<li>Clearing the filters by clicking the \", '<i data-target=\".clear-filters-link\">\"Clear filters\" link</i>.', \"</li>\", \"</ul>\"].join(\"\")), \"</p>\", \"<p>\", (0, _localization2.default)([\"To unpair individual dataset pairs, click the \", '<i data-target=\".unpair-btn\">unpair buttons ( <span class=\"fa fa-unlink\"></span> )</i>. ', 'Click the <i data-target=\".unpair-all-link\">\"Unpair all\" link</i> to unpair all pairs.'].join(\"\")), \"</p>\", \"<p>\", (0, _localization2.default)(['You can include or remove the file extensions (e.g. \".fastq\") from your pair names by toggling the ', '<i data-target=\".remove-extensions-prompt\">\"Remove file extensions from pair names?\"</i> control.'].join(\"\")), \"</p>\", \"<p>\", (0, _localization2.default)(['Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ', 'click <i data-target=\".create-collection\">\"Create list\"</i>. ', \"(Note: you do not have to pair all unpaired datasets to finish.)\"].join(\"\")), \"</p>\"].join(\"\"))\n    })\n});\n\n//=============================================================================\n/** a modal version of the paired collection creator */\nvar pairedCollectionCreatorModal = function _pairedCollectionCreatorModal(datasets, options) {\n    var deferred = jQuery.Deferred();\n    var creator;\n\n    options = _.defaults(options || {}, {\n        datasets: datasets,\n        oncancel: function oncancel() {\n            Galaxy.modal.hide();\n            deferred.reject(\"cancelled\");\n        },\n        oncreate: function oncreate(creator, response) {\n            Galaxy.modal.hide();\n            deferred.resolve(response);\n        }\n    });\n\n    if (!window.Galaxy || !Galaxy.modal) {\n        throw new Error(\"Galaxy or Galaxy.modal not found\");\n    }\n\n    creator = new PairedCollectionCreator(options);\n    Galaxy.modal.show({\n        title: \"Create a collection of paired datasets\",\n        body: creator.$el,\n        width: \"80%\",\n        height: \"800px\",\n        closing_events: true\n    });\n    creator.render();\n    window.creator = creator;\n\n    //TODO: remove modal header\n    return deferred;\n};\n\n//=============================================================================\nfunction createListOfPairsCollection(collection, defaultHideSourceItems) {\n    var elements = collection.toJSON();\n    //TODO: validate elements\n    return pairedCollectionCreatorModal(elements, {\n        historyId: collection.historyId,\n        defaultHideSourceItems: defaultHideSourceItems\n    });\n}\n\n//=============================================================================\nexports.default = {\n    PairedCollectionCreator: PairedCollectionCreator,\n    pairedCollectionCreatorModal: pairedCollectionCreatorModal,\n    createListOfPairsCollection: createListOfPairsCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0), __webpack_require__(0)))\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n//=============================================================================\n/**\n(Imported for edit distance algorith. From: https://gist.github.com/andrei-m/982927)\nCopyright (c) 2011 Andrei Mackenzie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n// Compute the edit distance between the two given strings\n//exports.getEditDistance = function(a, b){\nfunction levenshteinDistance(a, b) {\n    if (a.length === 0) {\n        return b.length;\n    }\n    if (b.length === 0) {\n        return a.length;\n    }\n\n    var matrix = [];\n\n    // increment along the first column of each row\n    var i;\n    for (i = 0; i <= b.length; i++) {\n        matrix[i] = [i];\n    }\n\n    // increment each column in the first row\n    var j;\n    for (j = 0; j <= a.length; j++) {\n        matrix[0][j] = j;\n    }\n\n    // Fill in the rest of the matrix\n    for (i = 1; i <= b.length; i++) {\n        for (j = 1; j <= a.length; j++) {\n            if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            } else {\n                matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution\n                Math.min(matrix[i][j - 1] + 1, // insertion\n                matrix[i - 1][j] + 1)); // deletion\n            }\n        }\n    }\n\n    //console.debug( '\\t\\t levenshteinDistance', a, b, matrix[b.length][a.length] );\n    return matrix[b.length][a.length];\n}\n\n//=============================================================================\nexports.default = levenshteinDistance;\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _formView = __webpack_require__(22);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _queryStringParsing = __webpack_require__(16);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Contains descriptive dictionaries describing user forms */\nvar Model = Backbone.Model.extend({\n    initialize: function initialize(options) {\n        options = options || {};\n        options.user_id = options.user_id || Galaxy.user.id;\n        this.set({\n            user_id: options.user_id,\n            information: {\n                title: \"Manage information\",\n                description: \"Edit your email, addresses and custom parameters or change your username.\",\n                url: \"api/users/\" + options.user_id + \"/information/inputs\",\n                icon: \"fa-user\",\n                redirect: \"user\"\n            },\n            password: {\n                title: \"Change password\",\n                description: \"Allows you to change your login credentials.\",\n                icon: \"fa-unlock-alt\",\n                url: \"api/users/\" + options.user_id + \"/password/inputs\",\n                submit_title: \"Save password\",\n                redirect: \"user\"\n            },\n            communication: {\n                title: \"Change communication settings\",\n                description: \"Enable or disable the communication feature to chat with other users.\",\n                url: \"api/users/\" + options.user_id + \"/communication/inputs\",\n                icon: \"fa-comments-o\",\n                redirect: \"user\"\n            },\n            permissions: {\n                title: \"Set dataset permissions for new histories\",\n                description: \"Grant others default access to newly created histories. Changes made here will only affect histories created after these settings have been stored.\",\n                url: \"api/users/\" + options.user_id + \"/permissions/inputs\",\n                icon: \"fa-users\",\n                submit_title: \"Save permissions\",\n                redirect: \"user\"\n            },\n            api_key: {\n                title: \"Manage API key\",\n                description: \"Access your current API key or create a new one.\",\n                url: \"api/users/\" + options.user_id + \"/api_key/inputs\",\n                icon: \"fa-key\",\n                submit_title: \"Create a new key\",\n                submit_icon: \"fa-check\"\n            },\n            toolbox_filters: {\n                title: \"Manage Toolbox filters\",\n                description: \"Customize your Toolbox by displaying or omitting sets of Tools.\",\n                url: \"api/users/\" + options.user_id + \"/toolbox_filters/inputs\",\n                icon: \"fa-filter\",\n                submit_title: \"Save filters\",\n                redirect: \"user\"\n            },\n            openids: {\n                title: \"Manage OpenIDs\",\n                description: \"Associate OpenIDs with your account.\",\n                icon: \"fa-openid\",\n                onclick: function onclick() {\n                    window.location.href = Galaxy.root + \"user/openid_manage?cntrller=user&use_panels=True\";\n                }\n            },\n            custom_builds: {\n                title: \"Manage custom builds\",\n                description: \"Add or remove custom builds using history datasets.\",\n                icon: \"fa-cubes\",\n                onclick: function onclick() {\n                    window.location.href = Galaxy.root + \"custom_builds\";\n                }\n            },\n            logout: {\n                title: \"Sign out\",\n                description: \"Click here to sign out of all sessions.\",\n                icon: \"fa-sign-out\",\n                onclick: function onclick() {\n                    Galaxy.modal.show({\n                        title: \"Sign out\",\n                        body: \"Do you want to continue and sign out of all active sessions?\",\n                        buttons: {\n                            Cancel: function Cancel() {\n                                Galaxy.modal.hide();\n                            },\n                            \"Sign out\": function SignOut() {\n                                window.location.href = Galaxy.root + \"user/logout?session_csrf_token=\" + Galaxy.session_csrf_token;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n});\n\n/** View of the main user preference panel with links to individual user forms */\n/** User Preferences view */\nvar View = Backbone.View.extend({\n    title: \"User Preferences\",\n    initialize: function initialize() {\n        this.model = new Model();\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function render() {\n        var self = this;\n        var config = Galaxy.config;\n        $.getJSON(Galaxy.root + \"api/users/\" + Galaxy.user.id, function (data) {\n            self.$preferences = $(\"<div/>\").addClass(\"ui-panel\").append($(\"<h2/>\").append(\"User preferences\")).append($(\"<p/>\").append(\"You are logged in as <strong>\" + _.escape(data.email) + \"</strong>.\")).append(self.$table = $(\"<table/>\").addClass(\"ui-panel-table\"));\n            var message = _queryStringParsing2.default.get(\"message\");\n            var status = _queryStringParsing2.default.get(\"status\");\n            if (message && status) {\n                self.$preferences.prepend(new _uiMisc2.default.Message({ message: message, status: status }).$el);\n            }\n            if (!config.use_remote_user) {\n                self._addLink(\"information\");\n                self._addLink(\"password\");\n            }\n            if (config.enable_communication_server) {\n                self._addLink(\"communication\");\n            }\n            self._addLink(\"custom_builds\");\n            self._addLink(\"permissions\");\n            self._addLink(\"api_key\");\n            if (config.has_user_tool_filters) {\n                self._addLink(\"toolbox_filters\");\n            }\n            if (config.enable_openid && !config.use_remote_user) {\n                self._addLink(\"openids\");\n            }\n            if (Galaxy.session_csrf_token) {\n                self._addLink(\"logout\");\n            }\n            self.$preferences.append(self._templateFooter(data));\n            self.$el.empty().append(self.$preferences);\n        });\n    },\n\n    _addLink: function _addLink(action) {\n        var options = this.model.get(action);\n        var $row = $(this._templateLink(options));\n        var $a = $row.find(\"a\");\n        if (options.onclick) {\n            $a.on(\"click\", function () {\n                options.onclick();\n            });\n        } else {\n            $a.attr(\"href\", Galaxy.root + \"user/\" + action);\n        }\n        this.$table.append($row);\n    },\n\n    _templateLink: function _templateLink(options) {\n        return \"<tr><td><div class=\\\"ui-panel-icon fa \" + options.icon + \"\\\"></td><td><a class=\\\"ui-panel-anchor\\\" href=\\\"javascript:void(0)\\\">\" + options.title + \"</a><div class=\\\"ui-form-info\\\">\" + options.description + \"</div></td></tr>\";\n    },\n\n    _templateFooter: function _templateFooter(options) {\n        return \"<p class=\\\"ui-panel-footer\\\">You are using <strong>\" + options.nice_total_disk_usage + \"</strong> of disk space in this Galaxy instance. \" + (Galaxy.config.enable_quotas ? \"Your disk quota is: <strong>\" + options.quota + \"</strong>. \" : \"\") + \"Is your usage more than expected? See the <a href=\\\"https://galaxyproject.org/learn/managing-datasets/\\\" target=\\\"_blank\\\">documentation</a> for tips on how to find all of the data in your account.</p>\";\n    }\n});\n\nexports.default = {\n    View: View,\n    Model: Model\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _formView = __webpack_require__(22);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nvar _uiTable = __webpack_require__(98);\n\nvar _uiTable2 = _interopRequireDefault(_uiTable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** This class renders the chart configuration form. */\nvar Collection = Backbone.Collection.extend({\n    comparator: function comparator(a, b) {\n        a = a.get(\"name\");\n        b = b.get(\"name\");\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n});\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        var history_id = Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n        this.model = new Backbone.Model();\n        this.model.url = Galaxy.root + \"api/histories/\" + history_id + \"/custom_builds_metadata\";\n        this.collection = new Collection();\n        this.collection.url = Galaxy.root + \"api/users/\" + Galaxy.user.id + \"/custom_builds\";\n        this.message = new _uiMisc2.default.Message({});\n        this.installed_builds = new _uiMisc2.default.Select.View({\n            optional: true,\n            onchange: function onchange() {\n                self.installed_builds.value(null);\n            },\n            empty_text: \"List of available builds:\",\n            error_text: \"No system installed builds available.\"\n        });\n        this.table = new _uiTable2.default.View({ cls: \"grid\", selectable: false });\n        this.table.addHeader(\"Name\");\n        this.table.addHeader(\"Key\");\n        this.table.addHeader(\"Number of chroms/contigs\");\n        this.table.addHeader(\"\");\n        this.table.appendHeader();\n        this.setElement($(\"<div/>\").append($(\"<h4/>\").text(\"Current Custom Builds\")).append(this.table.$el).append(this.$installed = $(\"<div/>\").append($(\"<h4/>\").text(\"System Installed Builds\").addClass(\"ui-margin-top\")).append(this.installed_builds.$el)).append($(\"<h4/>\").text(\"Add a Custom Build\").addClass(\"ui-margin-top\")).append($(\"<span/>\").addClass(\"ui-column\").append($(\"<div/>\").addClass(\"ui-column-left\").append(this.message.$el).append(this.$form = $(\"<div/>\").addClass(\"ui-margin-top\"))).append(this.$help = $(\"<div/>\").addClass(\"ui-column-right\"))));\n        this.listenTo(this.collection, \"add remove reset\", function () {\n            self._renderTable();\n        });\n        this.listenTo(this.model, \"change\", function () {\n            self._renderForm();\n        });\n        this.collection.fetch();\n        this.model.fetch();\n    },\n\n    render: function render() {\n        this._renderTable();\n        this._renderForm();\n    },\n\n    _renderTable: function _renderTable() {\n        var self = this;\n        this.table.delAll();\n        this.collection.sort();\n        this.collection.each(function (model) {\n            self.table.add(model.get(\"name\"));\n            self.table.add(model.id);\n            self.table.add(model.get(\"count\") !== undefined ? model.get(\"count\") : \"Processing...\");\n            self.table.add(new _uiMisc2.default.ButtonIcon({\n                icon: \"fa-trash-o\",\n                cls: \"ui-button-icon-plain\",\n                tooltip: \"Delete custom build.\",\n                onclick: function onclick() {\n                    model.destroy();\n                }\n            }).$el);\n            self.table.append(model.id);\n        });\n    },\n\n    _renderForm: function _renderForm() {\n        var self = this;\n        var initial_type = \"fasta\";\n        var form = new _formView2.default({\n            inputs: [{\n                type: \"text\",\n                name: \"name\",\n                label: \"Name\",\n                help: \"Specify a build name e.g. Hamster.\"\n            }, {\n                type: \"text\",\n                name: \"id\",\n                label: \"Key\",\n                help: \"Specify a build key e.g. hamster_v1.\"\n            }, {\n                name: \"len\",\n                type: \"conditional\",\n                test_param: {\n                    name: \"type\",\n                    label: \"Definition\",\n                    help: \"Provide the data source.\",\n                    type: \"select\",\n                    value: initial_type,\n                    data: [{\n                        value: \"fasta\",\n                        label: \"FASTA-file from history\"\n                    }, {\n                        value: \"file\",\n                        label: \"Len-file from disk\"\n                    }, {\n                        value: \"text\",\n                        label: \"Len-file by copy/paste\"\n                    }]\n                },\n                cases: [{\n                    value: \"fasta\",\n                    inputs: [{\n                        type: \"select\",\n                        name: \"value\",\n                        label: \"FASTA-file\",\n                        data: this.model.get(\"fasta_hdas\")\n                    }]\n                }, {\n                    value: \"file\",\n                    inputs: [{\n                        type: \"upload\",\n                        name: \"value\",\n                        label: \"Len-file\",\n                        data: this.model.get(\"len_hdas\")\n                    }]\n                }, {\n                    value: \"text\",\n                    inputs: [{\n                        type: \"text\",\n                        area: true,\n                        name: \"value\",\n                        label: \"Edit/Paste\"\n                    }]\n                }]\n            }],\n            buttons: {\n                save: new _uiMisc2.default.Button({\n                    icon: \"fa-save\",\n                    tooltip: \"Create new Build\",\n                    title: \"Save\",\n                    cls: \"btn btn-primary ui-clear-float\",\n                    onclick: function onclick() {\n                        var data = form.data.create();\n                        if (!data.id || !data.name) {\n                            self.message.update({\n                                message: \"All inputs are required.\",\n                                status: \"danger\"\n                            });\n                        } else {\n                            self.collection.create(data, {\n                                wait: true,\n                                success: function success(response) {\n                                    if (response.get(\"message\")) {\n                                        self.message.update({\n                                            message: response.get(\"message\"),\n                                            status: \"warning\"\n                                        });\n                                    } else {\n                                        self.message.update({\n                                            message: \"Successfully added a new custom build.\",\n                                            status: \"success\"\n                                        });\n                                    }\n                                },\n                                error: function error(response, err) {\n                                    var message = err && err.responseJSON && err.responseJSON.err_msg;\n                                    self.message.update({\n                                        message: message || \"Failed to create custom build.\",\n                                        status: \"danger\"\n                                    });\n                                }\n                            });\n                        }\n                    }\n                })\n            },\n            onchange: function onchange() {\n                var input_id = form.data.match(\"len|type\");\n                if (input_id) {\n                    var input_field = form.field_list[input_id];\n                    self._renderHelp(input_field.value());\n                }\n            }\n        });\n        this.$form.empty().append(form.$el);\n        var installed_builds = this.model.get(\"installed_builds\");\n        if (installed_builds && installed_builds.length) {\n            this.$installed.show();\n            this.installed_builds.update(this.model.get(\"installed_builds\"));\n        } else {\n            this.$installed.hide();\n        }\n        this._renderHelp(initial_type);\n    },\n\n    _renderHelp: function _renderHelp(len_type) {\n        this.$help.empty().addClass(\"alert alert-info\").html(len_type == \"fasta\" ? this._templateFasta() : this._templateLen());\n    },\n\n    _templateLen: function _templateLen() {\n        return \"<h4>Length Format</h4>\" + \"<p>\" + \"The length format is two-column, separated by whitespace, of the form:\" + \"<pre>chrom/contig   length of chrom/contig</pre>\" + \"</p>\" + \"<p>\" + \"For example, the first few entries of <em>mm9.len</em> are as follows:\" + \"<pre>\" + \"chr1    197195432\\n\" + \"chr2    181748087\\n\" + \"chr3    159599783\\n\" + \"chr4    155630120\\n\" + \"chr5    152537259\" + \"</pre>\" + \"</p>\" + \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" + \"to set the maximum basepair of the track browser. You may either upload a .len file\" + \"of this format (Len File option), or directly enter the information into the box \" + \"(Len Entry option).</p>\";\n    },\n\n    _templateFasta: function _templateFasta() {\n        return \"<h4>FASTA format</h4>\" + \"<p>\" + \"This is a multi-fasta file from your current history that provides the genome\" + \"sequences for each chromosome/contig in your build.\" + \"</p>\" + \"<p>\" + \"Here is a snippet from an example multi-fasta file:\" + \"<pre>\" + \">chr1\\n\" + \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" + \">chr2\\n\" + \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" + \"...\" + \"</pre>\" + \"</p>\";\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _gridView = __webpack_require__(12);\n\nvar _gridView2 = _interopRequireDefault(_gridView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar View = Backbone.View.extend({\n    initialize: function initialize(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model(options);\n        this.item = this.model.get(\"item\");\n        this.title = this.model.get(\"plural\");\n        $.ajax({\n            url: Galaxy.root + this.item + \"/\" + this.model.get(\"action_id\") + \"?\" + $.param(Galaxy.params),\n            success: function success(response) {\n                response[\"dict_format\"] = true;\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function render() {\n        var grid = new _gridView2.default(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n        this.$el.append(this._templateShared());\n    },\n\n    _templateShared: function _templateShared() {\n        var self = this;\n        var $tmpl = $(\"<div><h2>\" + this.model.get(\"plural\") + \" shared with you by others</h2></div>\");\n        var options = this.model.attributes;\n        if (options.shared_by_others && options.shared_by_others.length > 0) {\n            var $table = $('<table class=\"colored\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">' + '<tr class=\"header\">' + \"<th>Title</th>\" + \"<th>Owner</th>\" + \"</tr>\" + \"</table>\");\n            _.each(options.shared_by_others, function (it, index) {\n                var display_url = Galaxy.root + self.item + \"/display_by_username_and_slug?username=\" + it.username + \"&slug=\" + it.slug;\n                $table.append(\"<tr><td><a href=\\\"\" + display_url + \"\\\">\" + _.escape(it.title) + \"</a></td><td>\" + _.escape(it.username) + \"</td></tr>\");\n            });\n            $tmpl.append($table);\n        } else {\n            $tmpl.append(\"No \" + this.model.get(\"plural\").toLowerCase() + \" have been shared with you.\");\n        }\n        return $tmpl;\n    }\n}); /** This class renders the grid list with shared section. */\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toastr = __webpack_require__(65);\n\nvar mod_toastr = _interopRequireWildcard(_toastr);\n\nvar _tag = __webpack_require__(67);\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _workflowModel = __webpack_require__(261);\n\nvar _workflowModel2 = _interopRequireDefault(_workflowModel);\n\nvar _queryStringParsing = __webpack_require__(16);\n\nvar _queryStringParsing2 = _interopRequireDefault(_queryStringParsing);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/** View of the individual workflows */\n/** Workflow view */\nvar WorkflowItemView = Backbone.View.extend({\n    tagName: \"tr\", // name of (orphan) root tag in this.el\n    initialize: function initialize() {\n        _.bindAll(this, \"render\", \"_rowTemplate\", \"renderTagEditor\", \"_templateActions\", \"removeWorkflow\", \"copyWorkflow\"); // every function that uses 'this' as the current object should be in here\n        mod_toastr.options.timeOut = 1500;\n    },\n\n    events: {\n        \"click #show-in-tool-panel\": \"showInToolPanel\",\n        \"click #delete-workflow\": \"removeWorkflow\",\n        \"click #rename-workflow\": \"renameWorkflow\",\n        \"click #copy-workflow\": \"copyWorkflow\"\n    },\n\n    render: function render() {\n        $(this.el).html(this._rowTemplate());\n        return this;\n    },\n\n    showInToolPanel: function showInToolPanel() {\n        this.model.set(\"show_in_tool_panel\", !this.model.get(\"show_in_tool_panel\"));\n        this.model.save();\n        // This reloads the whole page, so that the workflow appears in the tool panel.\n        // Ideally we would notify only the tool panel of a change\n        window.location = Galaxy.root + \"workflow\";\n    },\n\n    removeWorkflow: function removeWorkflow() {\n        var wfName = this.model.get(\"name\");\n        if (window.confirm(\"Are you sure you want to delete workflow '\" + wfName + \"'?\")) {\n            this.model.destroy({\n                success: function success() {\n                    mod_toastr.success(\"Successfully deleted workflow '\" + wfName + \"'\");\n                }\n            });\n            this.remove();\n        }\n    },\n\n    renameWorkflow: function renameWorkflow() {\n        var oldName = this.model.get(\"name\");\n        var newName = window.prompt(\"Enter a new Name for workflow '\" + oldName + \"'\", oldName);\n        if (newName) {\n            this.model.save({ name: newName }, {\n                success: function success() {\n                    mod_toastr.success(\"Successfully renamed workflow '\" + oldName + \"' to '\" + newName + \"'\");\n                }\n            });\n            this.render();\n        }\n    },\n\n    copyWorkflow: function copyWorkflow() {\n        var self = this;\n        var oldName = this.model.get(\"name\");\n        $.getJSON(this.model.urlRoot + \"/\" + this.model.id + \"/download\", function (wfJson) {\n            var newName = \"Copy of \" + oldName;\n            var currentOwner = self.model.get(\"owner\");\n            if (currentOwner != Galaxy.user.attributes.username) {\n                newName += \" shared by user \" + currentOwner;\n            }\n            wfJson.name = newName;\n            self.collection.create(wfJson, {\n                at: 0,\n                wait: true,\n                success: function success() {\n                    mod_toastr.success(\"Successfully copied workflow '\" + oldName + \"' to '\" + newName + \"'\");\n                },\n                error: function error(model, resp, options) {\n                    // signature seems to have changed over the course of backbone dev\n                    // see https://github.com/jashkenas/backbone/issues/2606#issuecomment-19289483\n                    mod_toastr.error(options.errorThrown);\n                }\n            });\n        }).error(function (jqXHR, textStatus, errorThrown) {\n            mod_toastr.error(jqXHR.responseJSON.err_msg);\n        });\n    },\n\n    _rowTemplate: function _rowTemplate() {\n        var show = this.model.get(\"show_in_tool_panel\");\n        var wfId = this.model.id;\n        var checkboxHtml = \"<input id=\\\"show-in-tool-panel\\\" type=\\\"checkbox\\\" class=\\\"show-in-tool-panel\\\" \" + (show ? \"checked=\\\"\" + show + \"\\\"\" : \"\") + \" value=\\\"\" + wfId + \"\\\">\";\n        var trHtml = \"<td><div class=\\\"dropdown\\\"><button class=\\\"menubutton\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\" + _.escape(this.model.get(\"name\")) + \"<span class=\\\"caret\\\"></span></button>\" + this._templateActions() + \"</div></td><td><span><div class=\\\"\" + wfId + \" tags-display\\\"></div></td><td>\" + (this.model.get(\"owner\") === Galaxy.user.attributes.username ? \"You\" : this.model.get(\"owner\")) + \"</span></td><td>\" + this.model.get(\"number_of_steps\") + \"</td><td>\" + (this.model.get(\"published\") ? \"Yes\" : \"No\") + \"</td><td>\" + checkboxHtml + \"</td>\";\n        return trHtml;\n    },\n\n    renderTagEditor: function renderTagEditor() {\n        var TagEditor = new _tag2.default.TagsEditor({\n            model: this.model,\n            el: $.find(\".\" + this.model.id + \".tags-display\"),\n            workflow_mode: true\n        });\n        TagEditor.toggle(true);\n        TagEditor.render();\n    },\n\n    /** Template for user actions for workflows */\n    _templateActions: function _templateActions() {\n        if (this.model.get(\"owner\") === Galaxy.user.attributes.username) {\n            return \"<ul class=\\\"dropdown-menu action-dpd\\\"><li><a href=\\\"\" + Galaxy.root + \"workflow/editor?id=\" + this.model.id + \"\\\">Edit</a></li><li><a href=\\\"\" + Galaxy.root + \"workflow/run?id=\" + this.model.id + \"\\\">Run</a></li><li><a href=\\\"\" + Galaxy.root + \"workflow/sharing?id=\" + this.model.id + \"\\\">Share</a></li><li><a href=\\\"\" + Galaxy.root + \"api/workflows/\" + this.model.id + \"/download?format=json-download\\\">Download</a></li><li><a id=\\\"copy-workflow\\\" style=\\\"cursor: pointer;\\\">Copy</a></li><li><a id=\\\"rename-workflow\\\" style=\\\"cursor: pointer;\\\">Rename</a></li><li><a href=\\\"\" + Galaxy.root + \"workflow/display_by_id?id=\" + this.model.id + \"\\\">View</a></li><li><a id=\\\"delete-workflow\\\" style=\\\"cursor: pointer;\\\">Delete</a></li></ul>\";\n        } else {\n            return \"<ul class=\\\"dropdown-menu action-dpd\\\"><li><a href=\\\"\" + Galaxy.root + \"workflow/display_by_username_and_slug?username=\" + this.model.get(\"owner\") + \"&slug=\" + this.model.get(\"slug\") + \"\\\">View</a></li><li><a href=\\\"\" + Galaxy.root + \"workflow/run?id=\" + this.model.id + \"\\\">Run</a></li><li><a id=\\\"copy-workflow\\\" style=\\\"cursor: pointer;\\\">Copy</a></li><li><a class=\\\"link-confirm-shared-\" + this.model.id + \"\\\" href=\\\"\" + Galaxy.root + \"workflow/sharing?unshare_me=True&id=\" + this.model.id + \"\\\">Remove</a></li></ul>\";\n        }\n    }\n});\n\n/** View of the main workflow list page */\nvar WorkflowListView = Backbone.View.extend({\n    title: \"Workflows\",\n    initialize: function initialize() {\n        this.setElement(\"<div/>\");\n        _.bindAll(this, \"adjustActiondropdown\");\n        this.collection = new _workflowModel2.default.WorkflowCollection();\n        this.collection.fetch().done(this.render());\n        this.collection.bind(\"add\", this.appendItem);\n        this.collection.on(\"sync\", this.render, this);\n    },\n\n    events: {\n        dragleave: \"unhighlightDropZone\",\n        drop: \"drop\",\n        dragover: function dragover(ev) {\n            $(\".hidden_description_layer\").addClass(\"dragover\");\n            $(\".menubutton\").addClass(\"background-none\");\n            ev.preventDefault();\n        }\n    },\n\n    unhighlightDropZone: function unhighlightDropZone() {\n        $(\".hidden_description_layer\").removeClass(\"dragover\");\n        $(\".menubutton\").removeClass(\"background-none\");\n    },\n\n    drop: function drop(e) {\n        // TODO: check that file is valid galaxy workflow\n        this.unhighlightDropZone();\n        e.preventDefault();\n        var files = e.dataTransfer.files;\n        var self = this;\n        for (var i = 0, f; f = files[i]; i++) {\n            self.readWorkflowFiles(f);\n        }\n    },\n\n    readWorkflowFiles: function readWorkflowFiles(f) {\n        var self = this;\n        var reader = new FileReader();\n        reader.onload = function (theFile) {\n            var wf_json;\n            try {\n                wf_json = JSON.parse(reader.result);\n            } catch (e) {\n                mod_toastr.error(\"Could not read file '\" + f.name + \"'. Verify it is a valid Galaxy workflow\");\n                wf_json = null;\n            }\n            if (wf_json) {\n                self.collection.create(wf_json, {\n                    at: 0,\n                    wait: true,\n                    success: function success() {\n                        mod_toastr.success(\"Successfully imported workflow '\" + wf_json.name + \"'\");\n                    },\n                    error: function error(model, resp, options) {\n                        mod_toastr.error(options.errorThrown);\n                    }\n                });\n            }\n        };\n        reader.readAsText(f, \"utf-8\");\n    },\n\n    _showArgErrors: _.once(function () {\n        // Parse args out of params, display if there's a message.\n        var msg_text = _queryStringParsing2.default.get(\"message\");\n        var msg_status = _queryStringParsing2.default.get(\"status\");\n        if (msg_status === \"error\") {\n            mod_toastr.error(_.escape(msg_text || \"Unknown Error, please report this to an administrator.\"));\n        } else if (msg_text) {\n            mod_toastr.info(_.escape(msg_text));\n        }\n    }),\n\n    render: function render() {\n        // Add workflow header\n        var header = this._templateHeader();\n        // Add the actions buttons\n        var templateActions = this._templateActionButtons();\n        var tableTemplate = this._templateWorkflowTable();\n        this.$el.html(header + templateActions + tableTemplate);\n        var self = this;\n        _(this.collection.models).each(function (item) {\n            // in case collection is not empty\n            self.appendItem(item);\n            self.confirmDelete(item);\n        }, this);\n        var minQueryLength = 3;\n        this.searchWorkflow(this.$(\".search-wf\"), this.$(\".workflow-search tr\"), minQueryLength);\n        this.adjustActiondropdown();\n        this._showArgErrors();\n        return this;\n    },\n\n    appendItem: function appendItem(item) {\n        var workflowItemView = new WorkflowItemView({\n            model: item,\n            collection: this.collection\n        });\n        $(\".workflow-search\").append(workflowItemView.render().el);\n        workflowItemView.renderTagEditor();\n    },\n\n    /** Add confirm box before removing/unsharing workflow */\n    confirmDelete: function confirmDelete(workflow) {\n        var $el_shared_wf_link = this.$(\".link-confirm-shared-\" + workflow.id);\n        $el_shared_wf_link.click(function () {\n            return window.confirm(\"Are you sure you want to remove the shared workflow '\" + workflow.attributes.name + \"'?\");\n        });\n    },\n\n    /** Implement client side workflow search/filtering */\n    searchWorkflow: function searchWorkflow($el_searchinput, $el_tabletr, min_querylen) {\n        $el_searchinput.on(\"keyup\", function () {\n            var query = $(this).val();\n            // Filter when query is at least 3 characters\n            // otherwise show all rows\n            if (query.length >= min_querylen) {\n                // Ignore the query's case using 'i'\n                var regular_expression = new RegExp(query, \"i\");\n                $el_tabletr.hide();\n                $el_tabletr.filter(function () {\n                    // Apply regular expression on each row's text\n                    // and show when there is a match\n                    return regular_expression.test($(this).text());\n                }).show();\n            } else {\n                $el_tabletr.show();\n            }\n        });\n    },\n\n    /** Ajust the position of dropdown with respect to table */\n    adjustActiondropdown: function adjustActiondropdown() {\n        $(this.el).on(\"show.bs.dropdown\", function () {\n            $(this.el).css(\"overflow\", \"inherit\");\n        });\n        $(this.el).on(\"hide.bs.dropdown\", function () {\n            $(this.el).css(\"overflow\", \"auto\");\n        });\n    },\n\n    /** Template for no workflow */\n    _templateNoWorkflow: function _templateNoWorkflow() {\n        return '<div class=\"wf-nodata\"> You have no workflows. </div>';\n    },\n\n    /** Template for actions buttons */\n    _templateActionButtons: function _templateActionButtons() {\n        return \"<ul class=\\\"manage-table-actions\\\"><li><input class=\\\"search-wf form-control\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" placeholder=\\\"search for workflow...\\\"></li><li><a class=\\\"action-button fa fa-plus wf-action\\\" id=\\\"new-workflow\\\" title=\\\"Create new workflow\\\" href=\\\"\" + Galaxy.root + \"workflow/create\\\"></a></li><li><a class=\\\"action-button fa fa-upload wf-action\\\" id=\\\"import-workflow\\\" title=\\\"Upload or import workflow\\\" href=\\\"\" + Galaxy.root + \"workflow/import_workflow\\\"></a></li></ul>\";\n    },\n\n    /** Template for workflow table */\n    _templateWorkflowTable: function _templateWorkflowTable() {\n        var tableHtml = '<table class=\"table colored\"><thead>' + '<tr class=\"header\">' + \"<th>Name</th>\" + \"<th>Tags</th>\" + \"<th>Owner</th>\" + \"<th># of Steps</th>\" + \"<th>Published</th>\" + \"<th>Show in tools panel</th>\" + \"</tr></thead>\";\n        return tableHtml + \"<tbody class=\\\"workflow-search \\\"><div class=\\\"hidden_description_layer\\\"><p>Drop workflow files here to import</p></tbody></table></div>\";\n    },\n\n    /** Main template */\n    _templateHeader: function _templateHeader() {\n        return '<div class=\"page-container\">' + '<div class=\"user-workflows wf\">' + '<div class=\"response-message\"></div>' + \"<h2>Your workflows</h2>\" + \"</div>\" + \"</div>\";\n    }\n});\n\nvar ImportWorkflowView = Backbone.View.extend({\n    initialize: function initialize() {\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    /** Open page to import workflow */\n    render: function render() {\n        var self = this;\n        $.getJSON(Galaxy.root + \"workflow/upload_import_workflow\", function (options) {\n            self.$el.empty().append(self._mainTemplate(options));\n        });\n    },\n\n    /** Template for the import workflow page */\n    _mainTemplate: function _mainTemplate(options) {\n        return \"<div class='toolForm'><div class='toolFormTitle'>Import Galaxy workflow</div><div class='toolFormBody'><form name='import_workflow' id='import_workflow' action='\" + Galaxy.root + \"workflow/upload_import_workflow' enctype='multipart/form-data' method='POST'><div class='form-row'><label>Galaxy workflow URL:</label><input type='text' name='url' class='input-url' value='\" + options.url + \"' size='40'><div class='toolParamHelp' style='clear: both;'>If the workflow is accessible via a URL, enter the URL above and click <b>Import</b>.</div><div style='clear: both'></div></div><div class='form-row'><label>Galaxy workflow file:</label><div class='form-row-input'><input type='file' name='file_data' class='input-file'/></div><div class='toolParamHelp' style='clear: both;'>If the workflow is in a file on your computer, choose it and then click <b>Import</b>.</div><div style='clear: both'></div></div><div class='form-row'><input type='submit' class='primary-button wf-import' name='import_button' value='Import'></div></form><hr/><div class='form-row'><label>Import a Galaxy workflow from myExperiment:</label><div class='form-row-input'><a href='\" + options.myexperiment_target_url + \"'> Visit myExperiment</a></div><div class='toolParamHelp' style='clear: both;'>Click the link above to visit myExperiment and browse for Galaxy workflows.</div><div style='clear: both'></div></div></div></div>\";\n    }\n});\n\nexports.default = {\n    View: WorkflowListView,\n    ImportWorkflowView: ImportWorkflowView\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseMvc = __webpack_require__(5);\n\nvar _baseMvc2 = _interopRequireDefault(_baseMvc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* global Backbone */\n// workflow model\n\nvar logNamespace = \"workflow\";\n//==============================================================================\n/** @class model for a single workflow.\n *  @name WorkflowItem\n *  @augments Backbone.Model\n */\nvar WorkflowItem = Backbone.Model.extend(_baseMvc2.default.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    urlRoot: Galaxy.root + \"api/workflows\",\n\n    toJSON: function toJSON() {\n        // need to overwrite this as endpoint expects the 'workflow' key in payload\n        return { workflow: this.attributes };\n    }\n});\n\n//==============================================================================\n/** @class collection for workflows.\n *  @name WorkflowCollection\n *  @augments Backbone.Collection\n */\nvar WorkflowCollection = Backbone.Collection.extend({\n    model: WorkflowItem,\n    url: Galaxy.root + \"api/workflows\"\n});\n\n//==============================================================================\n\nexports.default = {\n    WorkflowItem: WorkflowItem,\n    WorkflowCollection: WorkflowCollection\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _gridView = __webpack_require__(12);\n\nvar _gridView2 = _interopRequireDefault(_gridView);\n\nvar _historyModel = __webpack_require__(82);\n\nvar _historyModel2 = _interopRequireDefault(_historyModel);\n\nvar _copyDialog = __webpack_require__(125);\n\nvar _copyDialog2 = _interopRequireDefault(_copyDialog);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** This class renders the grid list. */\nvar View = Backbone.View.extend({\n    title: \"Histories\",\n    initialize: function initialize(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model();\n        _utils2.default.get({\n            url: Galaxy.root + \"history/\" + options.action_id + \"?\" + $.param(Galaxy.params),\n            success: function success(response) {\n                response[\"dict_format\"] = true;\n                _.each(response[\"operations\"], function (operation) {\n                    if (operation.label == \"Copy\") {\n                        operation.onclick = function (id) {\n                            self._showCopyDialog(id);\n                        };\n                    }\n                });\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function render() {\n        var grid = new _gridView2.default(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n    },\n\n    _showCopyDialog: function _showCopyDialog(id) {\n        var history = new _historyModel2.default.History({ id: id });\n        history.fetch().fail(function () {\n            alert(\"History could not be fetched. Please contact an administrator\");\n        }).done(function () {\n            (0, _copyDialog2.default)(history, {}).done(function () {\n                if (window.parent && window.parent.Galaxy && window.parent.Galaxy.currHistoryPanel) {\n                    window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                }\n                window.location.reload(true);\n            });\n        });\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _formView = __webpack_require__(22);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Dataset edit attributes view */\nvar View = Backbone.View.extend({\n    initialize: function initialize() {\n        this.setElement(\"<div/>\");\n        this.model = new Backbone.Model({\n            dataset_id: Galaxy.params.dataset_id\n        });\n        this.render();\n    },\n\n    // Fetch data for the selected dataset and\n    render: function render() {\n        var data_url = Galaxy.root + \"api/datasets/\" + this.model.get(\"dataset_id\");\n\n        var self = this;\n\n        _utils2.default.get({\n            url: data_url,\n            success: function success(dataset) {\n                var job_url = Galaxy.root + \"api/jobs/\" + dataset.creating_job + \"?full=True\";\n                _utils2.default.get({\n                    url: job_url,\n                    success: function success(job) {\n                        var job_url = Galaxy.root + \"api/jobs/\" + dataset.creating_job + \"?full=True\";\n                        self.render_error_page(self, dataset, job);\n                    },\n                    error: function error(response) {\n                        var error_response = {\n                            status: \"error\",\n                            message: \"Error occured while loading the job.\",\n                            persistent: true,\n                            cls: \"errormessage\"\n                        };\n                        self.display_message(error_response, self.$(\".response-message\"));\n                    }\n                });\n            },\n            error: function error(response) {\n                var error_response = {\n                    status: \"error\",\n                    message: \"Error occured while loading the dataset.\",\n                    persistent: true,\n                    cls: \"errormessage\"\n                };\n                self.display_message(error_response, self.$(\".response-message\"));\n            }\n        });\n    },\n\n    /** Render the view */\n    render_error_page: function render_error_page(self, dataset, job) {\n        self.$el.empty().append(self._templateHeader());\n        self.$el.append(\"<h2>Dataset Error</h2>\");\n        self.$el.append(\"<p>An error occured while running the tool <b>\" + job.tool_id + \"</b>.</p>\");\n        self.$el.append(\"<p>Tool execution generated the following messages:</p>\");\n        self.$el.append(\"<pre class=\\\"code\\\">\" + job.stderr + \"</pre>\");\n        self.$el.append(\"<h2>Report This Error</pre>\");\n        self.$el.append(\"<p>Usually the local Galaxy administrators regularly review errors that occur on the server. However, if you would like to provide additional information (such as what you were trying to do when the error occurred) and a contact e-mail address, we will be better able to investigate your problem and get back to you.</p>\");\n        self.$el.append(self._getBugFormTemplate(dataset, job));\n    },\n\n    /** Display actions messages */\n    display_message: function display_message(response, $el, doNotClear, safe) {\n        if (!safe) {\n            if (doNotClear) {\n                $el.append(new _uiMisc2.default.Message(response).$el);\n            } else {\n                $el.empty().html(new _uiMisc2.default.Message(response).$el);\n            }\n        } else {\n            if (doNotClear) {\n                $el.append(new _uiMisc2.default.UnescapedMessage(response).$el);\n            } else {\n                $el.empty().html(new _uiMisc2.default.UnescapedMessage(response).$el);\n            }\n        }\n    },\n\n    /** Main template */\n    _templateHeader: function _templateHeader() {\n        return '<div class=\"page-container edit-attr\">' + '<div class=\"response-message\"></div>' + \"</div>\";\n    },\n\n    /** Convert tab template */\n    _getBugFormTemplate: function _getBugFormTemplate(dataset, job) {\n        var self = this;\n        var inputs = [{\n            help: \"Your email address\",\n            options: [],\n            type: \"text\",\n            name: \"email\",\n            label: \"Your email\",\n            value: Galaxy.user.get(\"email\")\n        }, {\n            help: \"Any additional comments you can provide regarding what you were doing at the time of the bug.\",\n            options: [],\n            type: \"text\",\n            area: true,\n            name: \"message\",\n            label: \"Message\"\n        }];\n\n        // TODO\n        /*\n        if (false && response.any_public) {\n            inputs.push({\n                name: \"public_consent\",\n                label: \"Public Disclosure Consent\",\n                help:\n                    \"This Galaxy is configured to report to one or more error reporting backends that public to the world. By selecting 'yes', you acknowledge that this bug report will be made public.\",\n                value: String(Boolean(false)),\n                options: [],\n                type: \"boolean\"\n            });\n        }\n        */\n\n        var form = new _formView2.default({\n            title: \"Error Report\",\n            inputs: inputs,\n            buttons: {\n                save: new _uiMisc2.default.Button({\n                    icon: \"fa-bug\",\n                    title: \"Report\",\n                    cls: \"ui-button btn btn-primary\",\n                    floating: \"clear\",\n                    onclick: function onclick() {\n                        var form_data = form.data.create();\n                        var url = Galaxy.root + \"api/jobs/\" + job.id + \"/error\";\n                        form_data.dataset_id = dataset.id;\n                        self.submit(form_data, url);\n                    }\n                })\n            }\n        });\n        return form.$el;\n    },\n\n    /** Make ajax request */\n    submit: function submit(form_data, url) {\n        var self = this;\n        // Some required metadata\n        $.ajax({\n            type: \"POST\",\n            url: url,\n            data: form_data,\n            success: function success(response) {\n                // Clear out the div\n                self.$el.empty().append(self._templateHeader());\n                // And display the messages.\n                response.messages.forEach(function (message) {\n                    self.display_message({\n                        status: message[1],\n                        message: message[0],\n                        persistent: true\n                    }, self.$(\".response-message\"), true, true);\n                });\n            },\n            error: function error(response) {\n                var error_response = {\n                    status: \"error\",\n                    message: \"Error occured while saving. Please fill all the required fields and try again.\",\n                    persistent: true,\n                    cls: \"errormessage\"\n                };\n                self.display_message(error_response, self.$(\".response-message\"));\n            }\n        });\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0)))\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = __webpack_require__(3);\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _uiTabs = __webpack_require__(21);\n\nvar _uiTabs2 = _interopRequireDefault(_uiTabs);\n\nvar _uiMisc = __webpack_require__(6);\n\nvar _uiMisc2 = _interopRequireDefault(_uiMisc);\n\nvar _formView = __webpack_require__(22);\n\nvar _formView2 = _interopRequireDefault(_formView);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Dataset edit attributes view */\nvar View = Backbone.View.extend({\n    initialize: function initialize() {\n        this.setElement(\"<div/>\");\n        this.model = new Backbone.Model({\n            dataset_id: Galaxy.params.dataset_id\n        });\n        this.message = new _uiMisc2.default.Message({ persistent: true });\n        this.tabs = this._createTabs();\n        this.$el.append($(\"<h4/>\").append(\"Edit dataset attributes\")).append(this.message.$el).append(\"<p/>\").append(this.tabs.$el).hide();\n        this.render();\n    },\n\n    /** fetch data for the selected dataset and build forms */\n    render: function render() {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + \"dataset/get_edit?dataset_id=\" + self.model.get(\"dataset_id\"),\n            success: function success(response) {\n                !self.initial_message && self.message.update(response);\n                self.initial_message = true;\n                _.each(self.forms, function (form, key) {\n                    form.model.set(\"inputs\", response[key + \"_inputs\"]);\n                    form.model.set(\"hide_operations\", response[key + \"_disable\"]);\n                    form.render();\n                });\n                self.$el.show();\n            },\n            error: function error(response) {\n                var err_msg = response.responseJSON && response.responseJSON.err_msg;\n                self.message.update({\n                    status: \"danger\",\n                    message: err_msg || \"Error occured while loading the dataset.\"\n                });\n            }\n        });\n    },\n\n    /** submit data to backend to update attributes */\n    _submit: function _submit(operation, form) {\n        var self = this;\n        var data = form.data.create();\n        data.dataset_id = this.model.get(\"dataset_id\");\n        data.operation = operation;\n        $.ajax({\n            type: \"PUT\",\n            url: Galaxy.root + \"dataset/set_edit\",\n            data: data,\n            success: function success(response) {\n                self.message.update(response);\n                self.render();\n                self._reloadHistory();\n            },\n            error: function error(response) {\n                var err_msg = response.responseJSON && response.responseJSON.err_msg;\n                self.message.update({\n                    status: \"danger\",\n                    message: err_msg || \"Error occured while editing the dataset attributes.\"\n                });\n            }\n        });\n    },\n\n    /** create tabs for different dataset attribute categories*/\n    _createTabs: function _createTabs() {\n        this.forms = {\n            attribute: this._getAttribute(),\n            conversion: this._getConversion(),\n            datatype: this._getDatatype(),\n            permission: this._getPermission()\n        };\n        var tabs = new _uiTabs2.default.View();\n        tabs.add({\n            id: \"attribute\",\n            title: \"Attributes\",\n            icon: \"fa fa-bars\",\n            tooltip: \"Edit dataset attributes\",\n            $el: this.forms.attribute.$el\n        });\n        tabs.add({\n            id: \"convert\",\n            title: \"Convert\",\n            icon: \"fa-gear\",\n            tooltip: \"Convert to new format\",\n            $el: this.forms.conversion.$el\n        });\n        tabs.add({\n            id: \"datatype\",\n            title: \"Datatypes\",\n            icon: \"fa-database\",\n            tooltip: \"Change data type\",\n            $el: this.forms.datatype.$el\n        });\n        tabs.add({\n            id: \"permissions\",\n            title: \"Permissions\",\n            icon: \"fa-user\",\n            tooltip: \"Permissions\",\n            $el: this.forms.permission.$el\n        });\n        return tabs;\n    },\n\n    /** edit main attributes form */\n    _getAttribute: function _getAttribute() {\n        var self = this;\n        var form = new _formView2.default({\n            title: \"Edit attributes\",\n            operations: {\n                submit_attributes: new _uiMisc2.default.ButtonIcon({\n                    tooltip: \"Save attributes of the dataset.\",\n                    icon: \"fa-floppy-o\",\n                    title: \"Save\",\n                    onclick: function onclick() {\n                        self._submit(\"attributes\", form);\n                    }\n                }),\n                submit_autodetect: new _uiMisc2.default.ButtonIcon({\n                    tooltip: \"This will inspect the dataset and attempt to correct the values of fields if they are not accurate.\",\n                    icon: \"fa-undo\",\n                    title: \"Auto-detect\",\n                    onclick: function onclick() {\n                        self._submit(\"autodetect\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** datatype conversion form */\n    _getConversion: function _getConversion() {\n        var self = this;\n        var form = new _formView2.default({\n            title: \"Convert to new format\",\n            operations: {\n                submit_conversion: new _uiMisc2.default.ButtonIcon({\n                    tooltip: \"Convert the datatype to a new format.\",\n                    title: \"Convert datatype\",\n                    icon: \"fa-exchange\",\n                    onclick: function onclick() {\n                        self._submit(\"conversion\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** change datatype form */\n    _getDatatype: function _getDatatype() {\n        var self = this;\n        var form = new _formView2.default({\n            title: \"Change datatype\",\n            operations: {\n                submit_datatype: new _uiMisc2.default.ButtonIcon({\n                    tooltip: \"Change the datatype to a new type.\",\n                    title: \"Change datatype\",\n                    icon: \"fa-exchange\",\n                    onclick: function onclick() {\n                        self._submit(\"datatype\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** dataset permissions form */\n    _getPermission: function _getPermission() {\n        var self = this;\n        var form = new _formView2.default({\n            title: \"Manage dataset permissions\",\n            operations: {\n                submit_permission: new _uiMisc2.default.ButtonIcon({\n                    tooltip: \"Save permissions.\",\n                    title: \"Save permissions\",\n                    icon: \"fa-floppy-o \",\n                    onclick: function onclick() {\n                        self._submit(\"permission\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** reload Galaxy's history after updating dataset's attributes */\n    _reloadHistory: function _reloadHistory() {\n        if (window.Galaxy) {\n            window.Galaxy.currHistoryPanel.loadCurrentHistory();\n        }\n    }\n});\n\nexports.default = {\n    View: View\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(0), __webpack_require__(1)))\n\n/***/ })\n],[232]);\n\n\n// WEBPACK FOOTER //\n// analysis.bundled.js","import * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\nimport addLogging from \"utils/add-logging\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/** @class Mixin to add logging capabilities to an object.\n *      Designed to allow switching an objects log output off/on at one central\n *      statement. Can be used with plain browser console (or something more\n *      complex like an AJAX logger).\n *  <br />NOTE: currently only uses the console.debug log function\n *  (as opposed to debug, error, warn, etc.)\n *  @name LoggableMixin\n *\n *  @example\n *  // Add to your models/views at the definition using chaining:\n *      var MyModel = Backbone.Model.extend( LoggableMixin ).extend({ // ... });\n *\n *  // or - more explicitly AFTER the definition:\n *      var MyModel = Backbone.Model.extend({\n *          logger  : console\n *          // ...\n *          this.log( '$#%& it! - broken already...' );\n *      })\n *      _.extend( MyModel.prototype, LoggableMixin )\n *\n */\nvar LoggableMixin = /** @lends LoggableMixin# */ {\n    // replace null with console (if available) to see all logs for a particular view/model\n    /** The logging object whose log function will be used to output\n     *      messages. Null will supress all logging. Commonly set to console.\n     */\n    logger: null,\n    /** @type {String} a namespace for filtering/focusing log output */\n    _logNamespace: \".\"\n};\naddLogging(LoggableMixin);\n\n//==============================================================================\n/** Backbone model that syncs to the browser's sessionStorage API.\n *      This all largely happens behind the scenes and no special calls are required.\n */\nvar SessionStorageModel = Backbone.Model.extend({\n    initialize: function(initialAttrs) {\n        // check for sessionStorage and error if no id is provided\n        this._checkEnabledSessionStorage();\n        if (!initialAttrs.id) {\n            throw new Error(\"SessionStorageModel requires an id in the initial attributes\");\n        }\n        this.id = initialAttrs.id;\n\n        // load existing from storage (if any), clear any attrs set by bbone before init is called,\n        //  layer initial over existing and defaults, and save\n        var existing = !this.isNew() ? this._read(this) : {};\n        this.clear({ silent: true });\n        this.save(_.extend({}, this.defaults, existing, initialAttrs), {\n            silent: true\n        });\n\n        // save on any change to it immediately\n        this.on(\"change\", function() {\n            this.save();\n        });\n    },\n\n    _checkEnabledSessionStorage: function() {\n        try {\n            return window.sessionStorage.length >= 0;\n        } catch (err) {\n            alert(\"Please enable cookies in your browser for this Galaxy site\");\n            return false;\n        }\n    },\n\n    /** override of bbone sync to save to sessionStorage rather than REST\n     *      bbone options (success, errror, etc.) should still apply\n     */\n    sync: function(method, model, options) {\n        if (!options.silent) {\n            model.trigger(\"request\", model, {}, options);\n        }\n        var returned = {};\n        switch (method) {\n            case \"create\":\n                returned = this._create(model);\n                break;\n            case \"read\":\n                returned = this._read(model);\n                break;\n            case \"update\":\n                returned = this._update(model);\n                break;\n            case \"delete\":\n                returned = this._delete(model);\n                break;\n        }\n        if (returned !== undefined || returned !== null) {\n            if (options.success) {\n                options.success();\n            }\n        } else {\n            if (options.error) {\n                options.error();\n            }\n        }\n        return returned;\n    },\n\n    /** set storage to the stringified item */\n    _create: function(model) {\n        try {\n            var json = model.toJSON();\n            var set = sessionStorage.setItem(model.id, JSON.stringify(json));\n            return set === null ? set : json;\n            // DOMException is thrown in Safari if in private browsing mode and sessionStorage is attempted:\n            // http://stackoverflow.com/questions/14555347\n            // TODO: this could probably use a more general soln - like detecting priv. mode + safari => non-ajaxing Model\n        } catch (err) {\n            if (!(err instanceof DOMException && navigator.userAgent.indexOf(\"Safari\") > -1)) {\n                throw err;\n            }\n        }\n        return null;\n    },\n\n    /** read and parse json from storage */\n    _read: function(model) {\n        return JSON.parse(sessionStorage.getItem(model.id));\n    },\n\n    /** set storage to the item (alias to create) */\n    _update: function(model) {\n        return model._create(model);\n    },\n\n    /** remove the item from storage */\n    _delete: function(model) {\n        return sessionStorage.removeItem(model.id);\n    },\n\n    /** T/F whether sessionStorage contains the model's id (data is present) */\n    isNew: function() {\n        return !sessionStorage.hasOwnProperty(this.id);\n    },\n\n    _log: function() {\n        return JSON.stringify(this.toJSON(), null, \"  \");\n    },\n    toString: function() {\n        return `SessionStorageModel(${this.id})`;\n    }\n});\n(() => {\n    SessionStorageModel.prototype = _.omit(SessionStorageModel.prototype, \"url\", \"urlRoot\");\n})();\n\n//==============================================================================\n/** Function that allows mixing of hashs into bbone MVC while showing the mixins first\n *      (before the more local class overrides/hash).\n *      Basically, a simple reversal of param order on _.defaults() - to show mixins in top of definition.\n *  @example:\n *      var NewModel = Something.extend( mixin( MyMixinA, MyMixinB, { ... myVars : ... }) );\n *\n *  NOTE: this does not combine any hashes (like events, etc.) and you're expected to handle that\n */\nfunction mixin(mixinHash1, /* mixinHash2, etc: ... variadic */ propsHash) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    var lastArg = args.pop();\n    args.unshift(lastArg);\n    return _.defaults.apply(_, args);\n}\n\n//==============================================================================\n/** A mixin for models that allow T/F/Matching to their attributes - useful when\n *      searching or filtering collections of models.\n * @example:\n *      see hda-model for searchAttribute and searchAliases definition examples.\n *      see history-contents.matches for how collections are filtered\n *      and see readonly-history-view.searchHdas for how user input is connected to the filtering\n */\nvar SearchableModelMixin = {\n    /** what attributes of an HDA will be used in a text search */\n    searchAttributes: [\n        // override\n    ],\n\n    /** our attr keys don't often match the labels we display to the user - so, when using\n     *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n     *      following attr keys.\n     */\n    searchAliases: {\n        // override\n    },\n\n    /** search the attribute with key attrKey for the string searchFor; T/F if found */\n    searchAttribute: function(attrKey, searchFor) {\n        var attrVal = this.get(attrKey);\n        //this.debug( 'searchAttribute', attrKey, attrVal, searchFor );\n        // bail if empty searchFor or unsearchable values\n        if (!searchFor || (attrVal === undefined || attrVal === null)) {\n            return false;\n        }\n        // pass to sep. fn for deep search of array attributes\n        if (_.isArray(attrVal)) {\n            return this._searchArrayAttribute(attrVal, searchFor);\n        }\n        return (\n            attrVal\n                .toString()\n                .toLowerCase()\n                .indexOf(searchFor.toLowerCase()) !== -1\n        );\n    },\n\n    /** deep(er) search for array attributes; T/F if found */\n    _searchArrayAttribute: function(array, searchFor) {\n        //this.debug( '_searchArrayAttribute', array, searchFor );\n        searchFor = searchFor.toLowerCase();\n        //precondition: searchFor has already been validated as non-empty string\n        //precondition: assumes only 1 level array\n        //TODO: could possibly break up searchFor more (CSV...)\n        return _.any(\n            array,\n            elem =>\n                elem\n                    .toString()\n                    .toLowerCase()\n                    .indexOf(searchFor.toLowerCase()) !== -1\n        );\n    },\n\n    /** search all searchAttributes for the string searchFor,\n     *      returning a list of keys of attributes that contain searchFor\n     */\n    search: function(searchFor) {\n        var model = this;\n        return _.filter(this.searchAttributes, key => model.searchAttribute(key, searchFor));\n    },\n\n    /** alias of search, but returns a boolean; accepts attribute specifiers where\n     *      the attributes searched can be narrowed to a single attribute using\n     *      the form: matches( 'genome_build=hg19' )\n     *      (the attribute keys allowed can also be aliases to the true attribute key;\n     *          see searchAliases above)\n     *  @param {String} term   plain text or ATTR_SPECIFIER sep. key=val pair\n     *  @returns {Boolean} was term found in (any) attribute(s)\n     */\n    matches: function(term) {\n        var ATTR_SPECIFIER = \"=\";\n        var split = term.split(ATTR_SPECIFIER);\n        // attribute is specified - search only that\n        if (split.length >= 2) {\n            var attrKey = split[0];\n            attrKey = this.searchAliases[attrKey] || attrKey;\n            return this.searchAttribute(attrKey, split[1]);\n        }\n        // no attribute is specified - search all attributes in searchAttributes\n        return !!this.search(term).length;\n    },\n\n    /** an implicit AND search for all terms; IOW, a model must match all terms given\n     *      where terms is a whitespace separated value string.\n     *      e.g. given terms of: 'blah bler database=hg19'\n     *          an HDA would have to have attributes containing blah AND bler AND a genome_build == hg19\n     *      To include whitespace in terms: wrap the term in double quotations (name=\"blah bler\").\n     */\n    matchesAll: function(terms) {\n        var model = this;\n        // break the terms up by whitespace and filter out the empty strings\n        terms = terms.match(/(\".*\"|\\w*=\".*\"|\\S*)/g).filter(s => !!s);\n        return _.all(terms, term => {\n            term = term.replace(/\"/g, \"\");\n            return model.matches(term);\n        });\n    }\n};\n\n//==============================================================================\n/** A view that renders hidden and shows when some activator is clicked.\n *      options:\n *          showFn: the effect used to show/hide the View (defaults to jq.toggle)\n *          $elementShown: some jqObject (defaults to this.$el) to be shown/hidden\n *          onShowFirstTime: fn called the first time the view is shown\n *          onshow: fn called every time the view is shown\n *          onhide: fn called every time the view is hidden\n *      events:\n *          hiddenUntilActivated:shown (the view is passed as an arg)\n *          hiddenUntilActivated:hidden (the view is passed as an arg)\n *      instance vars:\n *          view.hidden {boolean} is the view in the hidden state\n */\nvar HiddenUntilActivatedViewMixin = /** @lends hiddenUntilActivatedMixin# */ {\n    //TODO: since this is a mixin, consider moving toggle, hidden into HUAVOptions\n\n    /** call this in your initialize to set up the mixin\n     *  @param {jQuery} $activator the 'button' that's clicked to show/hide the view\n     *  @param {Object} hash with mixin options\n     */\n    hiddenUntilActivated: function($activator, options) {\n        // call this in your view's initialize fn\n        options = options || {};\n        //TODO: flesh out options - show them all here\n        this.HUAVOptions = {\n            $elementShown: this.$el,\n            showFn: jQuery.prototype.toggle,\n            showSpeed: \"fast\"\n        };\n        _.extend(this.HUAVOptions, options || {});\n        /** has this been shown already (and onshowFirstTime called)? */\n        this.HUAVOptions.hasBeenShown = this.HUAVOptions.$elementShown.is(\":visible\");\n        this.hidden = this.isHidden();\n\n        if ($activator) {\n            var mixin = this;\n            $activator.on(\"click\", ev => {\n                mixin.toggle(mixin.HUAVOptions.showSpeed);\n            });\n        }\n    },\n\n    //TODO:?? remove? use .hidden?\n    /** returns T/F if the view is hidden */\n    isHidden: function() {\n        return this.HUAVOptions.$elementShown.is(\":hidden\");\n    },\n\n    /** toggle the hidden state, show/hide $elementShown, call onshow/hide, trigger events */\n    toggle: function() {\n        //TODO: more specific name - toggle is too general\n        // can be called manually as well with normal toggle arguments\n        //TODO: better as a callback (when the show/hide is actually done)\n        // show\n        if (this.hidden) {\n            // fire the optional fns on the first/each showing - good for render()\n            if (!this.HUAVOptions.hasBeenShown) {\n                if (_.isFunction(this.HUAVOptions.onshowFirstTime)) {\n                    this.HUAVOptions.hasBeenShown = true;\n                    this.HUAVOptions.onshowFirstTime.call(this);\n                }\n            }\n            if (_.isFunction(this.HUAVOptions.onshow)) {\n                this.HUAVOptions.onshow.call(this);\n                this.trigger(\"hiddenUntilActivated:shown\", this);\n            }\n            this.hidden = false;\n\n            // hide\n        } else {\n            if (_.isFunction(this.HUAVOptions.onhide)) {\n                this.HUAVOptions.onhide.call(this);\n                this.trigger(\"hiddenUntilActivated:hidden\", this);\n            }\n            this.hidden = true;\n        }\n        return this.HUAVOptions.showFn.apply(this.HUAVOptions.$elementShown, arguments);\n    }\n};\n\n//==============================================================================\n/** Mixin for views that can be dragged and dropped\n *      Allows for the drag behavior to be turned on/off, setting/removing jQuery event\n *          handlers each time.\n *      dataTransfer data is set to the JSON string of the view's model.toJSON\n *      Override '$dragHandle' to define the draggable DOM sub-element.\n */\nvar DraggableViewMixin = {\n    /** set up instance vars to track whether this view is currently draggable */\n    initialize: function(attributes) {\n        /** is the body of this hda view expanded/not? */\n        this.draggable = attributes.draggable || false;\n    },\n\n    /** what part of the view's DOM triggers the dragging */\n    $dragHandle: function() {\n        //TODO: make abstract/general - move this to listItem\n        // override to the element you want to be your view's handle\n        return this.$(\".title-bar\");\n    },\n\n    /** toggle whether this view is draggable */\n    toggleDraggable: function() {\n        if (this.draggable) {\n            this.draggableOff();\n        } else {\n            this.draggableOn();\n        }\n    },\n\n    /** allow the view to be dragged, set up event handlers */\n    draggableOn: function() {\n        this.draggable = true;\n        this.dragStartHandler = _.bind(this._dragStartHandler, this);\n        this.dragEndHandler = _.bind(this._dragEndHandler, this);\n\n        var handle = this.$dragHandle()\n            .attr(\"draggable\", true)\n            .get(0);\n        handle.addEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.addEventListener(\"dragend\", this.dragEndHandler, false);\n    },\n\n    /** turn of view dragging and remove event listeners */\n    draggableOff: function() {\n        this.draggable = false;\n        var handle = this.$dragHandle()\n            .attr(\"draggable\", false)\n            .get(0);\n        handle.removeEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.removeEventListener(\"dragend\", this.dragEndHandler, false);\n    },\n\n    /** sets the dataTransfer data to the model's toJSON\n     *  @fires draggable:dragstart (bbone event) which is passed the event and this view\n     */\n    _dragStartHandler: function(event) {\n        event.dataTransfer.effectAllowed = \"move\";\n        //ASSUMES: this.model\n        //TODO: all except IE: should be 'application/json', IE: must be 'text'\n        event.dataTransfer.setData(\"text\", JSON.stringify(this.model.toJSON()));\n        this.trigger(\"draggable:dragstart\", event, this);\n        return false;\n    },\n\n    /** handle the dragend\n     *  @fires draggable:dragend (bbone event) which is passed the event and this view\n     */\n    _dragEndHandler: function(event) {\n        this.trigger(\"draggable:dragend\", event, this);\n        return false;\n    }\n};\n\n//==============================================================================\n/** Mixin that allows a view to be selected (gen. from a list).\n *      Selection controls ($selector) may be hidden/shown/toggled.\n *          The bbone event 'selectable' is fired when the controls are shown/hidden (passed T/F).\n *      Default rendering is a font-awesome checkbox.\n *      Default selector is '.selector' within the view's $el.\n *      The bbone events 'selected' and 'de-selected' are fired when the $selector is clicked.\n *          Both events are passed the view and the (jQuery) event.\n */\nvar SelectableViewMixin = {\n    /** Set up instance state vars for whether the selector is shown and whether the view has been selected */\n    initialize: function(attributes) {\n        /** is the view currently in selection mode? */\n        this.selectable = attributes.selectable || false;\n        /** is the view currently selected? */\n        this.selected = attributes.selected || false;\n    },\n\n    /** $el sub-element where the selector is rendered and what can be clicked to select. */\n    $selector: function() {\n        return this.$(\".selector\");\n    },\n\n    /** How the selector is rendered - defaults to font-awesome checkbox */\n    _renderSelected: function() {\n        // override\n        this.$selector()\n            .find(\"span\")\n            .toggleClass(\"fa-check-square-o\", this.selected)\n            .toggleClass(\"fa-square-o\", !this.selected);\n    },\n\n    /** Toggle whether the selector is shown */\n    toggleSelector: function() {\n        //TODO: use this.selectable\n        if (!this.$selector().is(\":visible\")) {\n            this.showSelector();\n        } else {\n            this.hideSelector();\n        }\n    },\n\n    /** Display the selector control.\n     *  @param {Number} a jQuery fx speed\n     *  @fires: selectable which is passed true (IOW, the selector is shown) and the view\n     */\n    showSelector: function(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        // make sure selected state is represented properly\n        this.selectable = true;\n        this.trigger(\"selectable\", true, this);\n        this._renderSelected();\n        if (speed) {\n            this.$selector().show(speed);\n        } else {\n            this.$selector().show();\n        }\n    },\n\n    /** remove the selector control\n     *  @param {Number} a jQuery fx speed\n     *  @fires: selectable which is passed false (IOW, the selector is not shown) and the view\n     */\n    hideSelector: function(speed) {\n        speed = speed !== undefined ? speed : this.fxSpeed;\n        // reverse the process from showSelect\n        this.selectable = false;\n        this.trigger(\"selectable\", false, this);\n        if (speed) {\n            this.$selector().hide(speed);\n        } else {\n            this.$selector().hide();\n        }\n    },\n\n    /** Toggle whether the view is selected */\n    toggleSelect: function(event) {\n        if (this.selected) {\n            this.deselect(event);\n        } else {\n            this.select(event);\n        }\n    },\n\n    /** Select this view and re-render the selector control to show it\n     *  @param {Event} a jQuery event that caused the selection\n     *  @fires: selected which is passed the view and the DOM event that triggered it (optionally)\n     */\n    select: function(event) {\n        // switch icon, set selected, and trigger event\n        if (!this.selected) {\n            this.trigger(\"selected\", this, event);\n            this.selected = true;\n            this._renderSelected();\n        }\n        return false;\n    },\n\n    /** De-select this view and re-render the selector control to show it\n     *  @param {Event} a jQuery event that caused the selection\n     *  @fires: de-selected which is passed the view and the DOM event that triggered it (optionally)\n     */\n    deselect: function(event) {\n        // switch icon, set selected, and trigger event\n        if (this.selected) {\n            this.trigger(\"de-selected\", this, event);\n            this.selected = false;\n            this._renderSelected();\n        }\n        return false;\n    }\n};\n\n//==============================================================================\n/** Return an underscore template fn from an array of strings.\n *  @param {String[]} template      the template strings to compile into the underscore template fn\n *  @param {String} jsonNamespace   an optional namespace for the json data passed in (defaults to 'model')\n *  @returns {Function} the (wrapped) underscore template fn\n *      The function accepts:\n *\n *  The template strings can access:\n *      the json/model hash using model (\"<%- model.myAttr %>) using the jsonNamespace above\n *      _l: the localizer function\n *      view (if passed): ostensibly, the view using the template (handy for view instance vars)\n *      Because they're namespaced, undefined attributes will not throw an error.\n *\n *  @example:\n *      templateBler : BASE_MVC.wrapTemplate([\n *          '<div class=\"myclass <%- mynamespace.modelClass %>\">',\n *              '<span><% print( _l( mynamespace.message ) ); %>:<%= view.status %></span>'\n *          '</div>'\n *      ], 'mynamespace' )\n *\n *  Meant to be called in a View's definition in order to compile only once.\n *\n */\nfunction wrapTemplate(template, jsonNamespace) {\n    jsonNamespace = jsonNamespace || \"model\";\n    var templateFn = _.template(template.join(\"\"));\n    return (json, view) => {\n        var templateVars = { view: view || {}, _l: _l };\n        templateVars[jsonNamespace] = json || {};\n        return templateFn(templateVars);\n    };\n}\n\n//==============================================================================\n/** Return a comparator function for sorted Collections */\nfunction buildComparator(attribute_name, options) {\n    options = options || {};\n    var ascending = options.ascending ? 1 : -1;\n    return function __comparator(a, b) {\n        a = a.get(attribute_name);\n        b = b.get(attribute_name);\n        return (a < b ? -1 : a > b ? 1 : 0) * ascending;\n    };\n}\n\n//==============================================================================\nexport default {\n    LoggableMixin: LoggableMixin,\n    SessionStorageModel: SessionStorageModel,\n    mixin: mixin,\n    SearchableModelMixin: SearchableModelMixin,\n    HiddenUntilActivatedViewMixin: HiddenUntilActivatedViewMixin,\n    DraggableViewMixin: DraggableViewMixin,\n    SelectableViewMixin: SelectableViewMixin,\n    wrapTemplate: wrapTemplate,\n    buildComparator: buildComparator\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/base-mvc.js","// Additional dependencies: jQuery, underscore.\nimport Modal from \"mvc/ui/ui-modal\";\nimport Frames from \"mvc/ui/ui-frames\";\nimport mod_icon_btn from \"mvc/ui/icon-button\";\n/**\n * Dataset metedata.\n */\nvar DatasetMetadata = Backbone.Model.extend({});\n\n/**\n * A dataset. In Galaxy, datasets are associated with a history, so\n * this object is also known as a HistoryDatasetAssociation.\n */\nvar Dataset = Backbone.Model.extend({\n    defaults: {\n        id: \"\",\n        type: \"\",\n        name: \"\",\n        hda_ldda: \"hda\",\n        metadata: null\n    },\n\n    initialize: function() {\n        // Metadata can be passed in as a model or a set of attributes; if it's\n        // already a model, there's no need to set metadata.\n        if (!this.get(\"metadata\")) {\n            this._set_metadata();\n        }\n\n        // Update metadata on change.\n        this.on(\"change\", this._set_metadata, this);\n    },\n\n    _set_metadata: function() {\n        var metadata = new DatasetMetadata();\n\n        // Move metadata from dataset attributes to metadata object.\n        _.each(\n            _.keys(this.attributes),\n            function(k) {\n                if (k.indexOf(\"metadata_\") === 0) {\n                    // Found metadata.\n                    var new_key = k.split(\"metadata_\")[1];\n                    metadata.set(new_key, this.attributes[k]);\n                    delete this.attributes[k];\n                }\n            },\n            this\n        );\n\n        // Because this is an internal change, silence it.\n        this.set(\"metadata\", metadata, { silent: true });\n    },\n\n    /**\n     * Returns dataset metadata for a given attribute.\n     */\n    get_metadata: function(attribute) {\n        return this.attributes.metadata.get(attribute);\n    },\n\n    urlRoot: `${Galaxy.root}api/datasets`\n});\n\n/**\n * A tabular dataset. This object extends dataset to provide incremental chunked data.\n */\nvar TabularDataset = Dataset.extend({\n    defaults: _.extend({}, Dataset.prototype.defaults, {\n        chunk_url: null,\n        first_data_chunk: null,\n        offset: 0,\n        at_eof: false\n    }),\n\n    initialize: function(options) {\n        Dataset.prototype.initialize.call(this);\n\n        // If first data chunk is available, next chunk is 1.\n        if (this.attributes.first_data_chunk) {\n            this.attributes.offset = this.attributes.first_data_chunk.offset;\n        }\n        this.attributes.chunk_url = `${Galaxy.root}dataset/display?dataset_id=${this.id}`;\n        this.attributes.url_viz = `${Galaxy.root}visualization`;\n    },\n\n    /**\n     * Returns a jQuery Deferred object that resolves to the next data chunk or null if at EOF.\n     */\n    get_next_chunk: function() {\n        // If already at end of file, do nothing.\n        if (this.attributes.at_eof) {\n            return null;\n        }\n\n        // Get next chunk.\n        var self = this;\n\n        var next_chunk = $.Deferred();\n        $.getJSON(this.attributes.chunk_url, {\n            offset: self.attributes.offset\n        }).success(chunk => {\n            var rval;\n            if (chunk.ck_data !== \"\") {\n                // Found chunk.\n                rval = chunk;\n                self.attributes.offset = chunk.offset;\n            } else {\n                // At EOF.\n                self.attributes.at_eof = true;\n                rval = null;\n            }\n            next_chunk.resolve(rval);\n        });\n\n        return next_chunk;\n    }\n});\n\nvar DatasetCollection = Backbone.Collection.extend({\n    model: Dataset\n});\n\n/**\n * Provides a base for table-based, dynamic view of a tabular dataset.\n * Do not instantiate directly; use either TopLevelTabularDatasetChunkedView\n * or EmbeddedTabularDatasetChunkedView.\n */\nvar TabularDatasetChunkedView = Backbone.View.extend({\n    /**\n     * Initialize view and, importantly, set a scroll element.\n     */\n    initialize: function(options) {\n        // Row count for rendering.\n        this.row_count = 0;\n        this.loading_chunk = false;\n\n        // load trackster button\n        new TabularButtonTracksterView({\n            model: options.model,\n            $el: this.$el\n        });\n    },\n\n    expand_to_container: function() {\n        if (this.$el.height() < this.scroll_elt.height()) {\n            this.attempt_to_fetch();\n        }\n    },\n\n    attempt_to_fetch: function(func) {\n        var self = this;\n        if (!this.loading_chunk && this.scrolled_to_bottom()) {\n            this.loading_chunk = true;\n            this.loading_indicator.show();\n            $.when(self.model.get_next_chunk()).then(result => {\n                if (result) {\n                    self._renderChunk(result);\n                    self.loading_chunk = false;\n                }\n                self.loading_indicator.hide();\n                self.expand_to_container();\n            });\n        }\n    },\n\n    render: function() {\n        // Add loading indicator.\n        this.loading_indicator = $(\"<div/>\").attr(\"id\", \"loading_indicator\");\n        this.$el.append(this.loading_indicator);\n\n        // Add data table and header.\n        var data_table = $(\"<table/>\").attr({\n            id: \"content_table\",\n            cellpadding: 0\n        });\n        this.$el.append(data_table);\n        var column_names = this.model.get_metadata(\"column_names\");\n        var header_container = $(\"<thead/>\").appendTo(data_table);\n        var header_row = $(\"<tr/>\").appendTo(header_container);\n        if (column_names) {\n            header_row.append(`<th>${column_names.join(\"</th><th>\")}</th>`);\n        } else {\n            for (var j = 1; j <= this.model.get_metadata(\"columns\"); j++) {\n                header_row.append(`<th>${j}</th>`);\n            }\n        }\n\n        // Render first chunk.\n        var self = this;\n\n        var first_chunk = this.model.get(\"first_data_chunk\");\n        if (first_chunk) {\n            // First chunk is bootstrapped, so render now.\n            this._renderChunk(first_chunk);\n        } else {\n            // No bootstrapping, so get first chunk and then render.\n            $.when(self.model.get_next_chunk()).then(result => {\n                self._renderChunk(result);\n            });\n        }\n\n        // -- Show new chunks during scrolling. --\n\n        // Set up chunk loading when scrolling using the scrolling element.\n        this.scroll_elt.scroll(() => {\n            self.attempt_to_fetch();\n        });\n    },\n\n    /**\n     * Returns true if user has scrolled to the bottom of the view.\n     */\n    scrolled_to_bottom: function() {\n        return false;\n    },\n\n    // -- Helper functions. --\n\n    _renderCell: function(cell_contents, index, colspan) {\n        var $cell = $(\"<td>\").text(cell_contents);\n        var column_types = this.model.get_metadata(\"column_types\");\n        if (colspan !== undefined) {\n            $cell.attr(\"colspan\", colspan).addClass(\"stringalign\");\n        } else if (column_types) {\n            if (index < column_types.length) {\n                if (column_types[index] === \"str\" || column_types[index] === \"list\") {\n                    /* Left align all str columns, right align the rest */\n                    $cell.addClass(\"stringalign\");\n                }\n            }\n        }\n        return $cell;\n    },\n\n    _renderRow: function(line) {\n        // Check length of cells to ensure this is a complete row.\n        var cells = line.split(\"\\t\");\n\n        var row = $(\"<tr>\");\n        var num_columns = this.model.get_metadata(\"columns\");\n\n        if (this.row_count % 2 !== 0) {\n            row.addClass(\"dark_row\");\n        }\n\n        if (cells.length === num_columns) {\n            _.each(\n                cells,\n                function(cell_contents, index) {\n                    row.append(this._renderCell(cell_contents, index));\n                },\n                this\n            );\n        } else if (cells.length > num_columns) {\n            // SAM file or like format with optional metadata included.\n            _.each(\n                cells.slice(0, num_columns - 1),\n                function(cell_contents, index) {\n                    row.append(this._renderCell(cell_contents, index));\n                },\n                this\n            );\n            row.append(this._renderCell(cells.slice(num_columns - 1).join(\"\\t\"), num_columns - 1));\n        } else if (cells.length === 1) {\n            // Comment line, just return the one cell.\n            row.append(this._renderCell(line, 0, num_columns));\n        } else {\n            // cells.length is greater than one, but less than num_columns.  Render cells and pad tds.\n            // Possibly a SAM file or like format with optional metadata missing.\n            // Could also be a tabular file with a line with missing columns.\n            _.each(\n                cells,\n                function(cell_contents, index) {\n                    row.append(this._renderCell(cell_contents, index));\n                },\n                this\n            );\n            _.each(_.range(num_columns - cells.length), () => {\n                row.append($(\"<td>\"));\n            });\n        }\n\n        this.row_count++;\n        return row;\n    },\n\n    _renderChunk: function(chunk) {\n        var data_table = this.$el.find(\"table\");\n        _.each(\n            chunk.ck_data.split(\"\\n\"),\n            function(line, index) {\n                if (line !== \"\") {\n                    data_table.append(this._renderRow(line));\n                }\n            },\n            this\n        );\n    }\n});\n\n/**\n * Tabular view that is placed at the top level of page. Scrolling occurs\n * view top-level elements outside of view.\n */\nvar TopLevelTabularDatasetChunkedView = TabularDatasetChunkedView.extend({\n    initialize: function(options) {\n        TabularDatasetChunkedView.prototype.initialize.call(this, options);\n\n        // Scrolling happens in top-level elements.\n        var scroll_elt = _.find(this.$el.parents(), p => $(p).css(\"overflow\") === \"auto\");\n\n        // If no scrolling element found, use window.\n        if (!scroll_elt) {\n            scroll_elt = window;\n        }\n\n        // Wrap scrolling element for easy access.\n        this.scroll_elt = $(scroll_elt);\n    },\n\n    /**\n     * Returns true if user has scrolled to the bottom of the view.\n     */\n    scrolled_to_bottom: function() {\n        return this.$el.height() - this.scroll_elt.scrollTop() - this.scroll_elt.height() <= 0;\n    }\n});\n\n/**\n * Tabular view tnat is embedded in a page. Scrolling occurs in view's el.\n */\nvar EmbeddedTabularDatasetChunkedView = TabularDatasetChunkedView.extend({\n    initialize: function(options) {\n        TabularDatasetChunkedView.prototype.initialize.call(this, options);\n\n        // Because view is embedded, set up div to do scrolling.\n        this.scroll_elt = this.$el.css({\n            position: \"relative\",\n            overflow: \"scroll\",\n            height: options.height || \"500px\"\n        });\n    },\n\n    /**\n     * Returns true if user has scrolled to the bottom of the view.\n     */\n    scrolled_to_bottom: function() {\n        return this.$el.scrollTop() + this.$el.innerHeight() >= this.el.scrollHeight;\n    }\n});\n\n/** Button for trackster visualization */\nvar TabularButtonTracksterView = Backbone.View.extend({\n    // gene region columns\n    col: {\n        chrom: null,\n        start: null,\n        end: null\n    },\n\n    // url for trackster\n    url_viz: null,\n\n    // dataset id\n    dataset_id: null,\n\n    // database key\n    genome_build: null,\n\n    // data type\n    file_ext: null,\n\n    // backbone initialize\n    initialize: function(options) {\n        // check if environment is available\n        var Galaxy = parent.Galaxy;\n\n        // link galaxy modal or create one\n        if (Galaxy && Galaxy.modal) {\n            this.modal = Galaxy.modal;\n        }\n\n        // link galaxy frames\n        if (Galaxy && Galaxy.frame) {\n            this.frame = Galaxy.frame;\n        }\n\n        // check\n        if (!this.modal || !this.frame) {\n            return;\n        }\n\n        // model/metadata\n        var model = options.model;\n        var metadata = model.get(\"metadata\");\n\n        // check for datatype\n        if (!model.get(\"file_ext\")) {\n            return;\n        }\n\n        // get data type\n        this.file_ext = model.get(\"file_ext\");\n\n        // check for bed-file format\n        if (this.file_ext == \"bed\") {\n            // verify that metadata exists\n            if (metadata.get(\"chromCol\") && metadata.get(\"startCol\") && metadata.get(\"endCol\")) {\n                // read in columns\n                this.col.chrom = metadata.get(\"chromCol\") - 1;\n                this.col.start = metadata.get(\"startCol\") - 1;\n                this.col.end = metadata.get(\"endCol\") - 1;\n            } else {\n                console.log(\"TabularButtonTrackster : Bed-file metadata incomplete.\");\n                return;\n            }\n        }\n\n        // check for vcf-file format\n        if (this.file_ext == \"vcf\") {\n            // search array\n            function search(str, array) {\n                for (var j = 0; j < array.length; j++) if (array[j].match(str)) return j;\n                return -1;\n            }\n\n            // load\n            this.col.chrom = search(\"Chrom\", metadata.get(\"column_names\"));\n            this.col.start = search(\"Pos\", metadata.get(\"column_names\"));\n            this.col.end = null;\n\n            // verify that metadata exists\n            if (this.col.chrom == -1 || this.col.start == -1) {\n                console.log(\"TabularButtonTrackster : VCF-file metadata incomplete.\");\n                return;\n            }\n        }\n\n        // check\n        if (this.col.chrom === undefined) {\n            return;\n        }\n\n        // get dataset id\n        if (model.id) {\n            this.dataset_id = model.id;\n        } else {\n            console.log(\"TabularButtonTrackster : Dataset identification is missing.\");\n            return;\n        }\n\n        // get url\n        if (model.get(\"url_viz\")) {\n            this.url_viz = model.get(\"url_viz\");\n        } else {\n            console.log(\"TabularButtonTrackster : Url for visualization controller is missing.\");\n            return;\n        }\n\n        // get genome_build / database key\n        if (model.get(\"genome_build\")) {\n            this.genome_build = model.get(\"genome_build\");\n        }\n\n        // create the icon\n        var btn_viz = new mod_icon_btn.IconButtonView({\n            model: new mod_icon_btn.IconButton({\n                title: \"Visualize\",\n                icon_class: \"chart_curve\",\n                id: \"btn_viz\"\n            })\n        });\n\n        // set element\n        this.setElement(options.$el);\n\n        // add to element\n        this.$el.append(btn_viz.render().$el);\n\n        // hide the button\n        this.hide();\n    },\n\n    /** Add event handlers */\n    events: {\n        \"mouseover tr\": \"show\",\n        mouseleave: \"hide\"\n    },\n\n    // show button\n    show: function(e) {\n        var self = this;\n\n        // is numeric\n        function is_numeric(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n\n        // check\n        if (this.col.chrom === null) return;\n\n        // get selected data line\n        var row = $(e.target).parent();\n\n        // verify that location has been found\n        var chrom = row\n            .children()\n            .eq(this.col.chrom)\n            .html();\n        var start = row\n            .children()\n            .eq(this.col.start)\n            .html();\n\n        // end is optional\n        var end = this.col.end\n            ? row\n                  .children()\n                  .eq(this.col.end)\n                  .html()\n            : start;\n\n        // double check location\n        if (!chrom.match(\"^#\") && chrom !== \"\" && is_numeric(start)) {\n            // get target gene region\n            var btn_viz_pars = {\n                dataset_id: this.dataset_id,\n                gene_region: `${chrom}:${start}-${end}`\n            };\n\n            // get button position\n            var offset = row.offset();\n            var left = offset.left - 10;\n            var top = offset.top - $(window).scrollTop() + 3;\n\n            // update css\n            $(\"#btn_viz\").css({\n                position: \"fixed\",\n                top: `${top}px`,\n                left: `${left}px`\n            });\n            $(\"#btn_viz\").off(\"click\");\n            $(\"#btn_viz\").click(() => {\n                self.frame.add({\n                    title: \"Trackster\",\n                    url: `${self.url_viz}/trackster?${$.param(btn_viz_pars)}`\n                });\n            });\n\n            // show the button\n            $(\"#btn_viz\").show();\n        } else {\n            // hide the button\n            $(\"#btn_viz\").hide();\n        }\n    },\n\n    /** hide button */\n    hide: function() {\n        this.$(\"#btn_viz\").hide();\n    }\n});\n\n// -- Utility functions. --\n\n/**\n * Create a model, attach it to a view, render view, and attach it to a parent element.\n */\nvar createModelAndView = (model, view, model_config, parent_elt) => {\n    // Create model, view.\n    var a_view = new view({\n        model: new model(model_config)\n    });\n\n    // Render view and add to parent element.\n    a_view.render();\n    if (parent_elt) {\n        parent_elt.append(a_view.$el);\n    }\n\n    return a_view;\n};\n\n/**\n * Create a tabular dataset chunked view (and requisite tabular dataset model)\n * and appends to parent_elt.\n */\nvar createTabularDatasetChunkedView = options => {\n    // If no model, create and set model from dataset config.\n    if (!options.model) {\n        options.model = new TabularDataset(options.dataset_config);\n    }\n\n    var parent_elt = options.parent_elt;\n    var embedded = options.embedded;\n\n    // Clean up options so that only needed options are passed to view.\n    delete options.embedded;\n    delete options.parent_elt;\n    delete options.dataset_config;\n\n    // Create and set up view.\n    var view = embedded\n        ? new EmbeddedTabularDatasetChunkedView(options)\n        : new TopLevelTabularDatasetChunkedView(options);\n    view.render();\n\n    if (parent_elt) {\n        parent_elt.append(view.$el);\n        // If we're sticking this in another element, once it's appended check\n        // to make sure we've filled enough space.\n        // Without this, the scroll elements don't work.\n        view.expand_to_container();\n    }\n\n    return view;\n};\n\nexport default {\n    Dataset: Dataset,\n    TabularDataset: TabularDataset,\n    DatasetCollection: DatasetCollection,\n    TabularDatasetChunkedView: TabularDatasetChunkedView,\n    createTabularDatasetChunkedView: createTabularDatasetChunkedView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/data.js","import * as _ from \"libs/underscore\";\nimport data_mod from \"mvc/dataset/data\";\nimport util_mod from \"viz/trackster/util\";\nimport config_mod from \"utils/config\";\nimport GridView from \"mvc/grid/grid-view\";\nimport Tabs from \"mvc/ui/ui-tabs\";\nimport Ui from \"mvc/ui/ui-misc\";\n/**\n * Mixin for returning custom JSON representation from toJSON. Class attribute to_json_keys defines a set of attributes\n * to include in the representation; to_json_mappers defines mappers for returned objects.\n */\nvar CustomToJSON = {\n    /**\n     * Returns JSON representation of object using to_json_keys and to_json_mappers.\n     */\n    toJSON: function() {\n        var self = this;\n        var json = {};\n        _.each(self.constructor.to_json_keys, k => {\n            var val = self.get(k);\n            if (k in self.constructor.to_json_mappers) {\n                val = self.constructor.to_json_mappers[k](val, self);\n            }\n            json[k] = val;\n        });\n        return json;\n    }\n};\n\n/**\n * Model, view, and controller objects for Galaxy visualization framework.\n *\n * Models have no references to views, instead using events to indicate state\n * changes; this is advantageous because multiple views can use the same object\n * and models can be used without views.\n */\n\n/**\n * Use a popup grid to select datasets from histories or libraries. After datasets are selected,\n * track definitions are obtained from the server and the success_fn is called with the list of\n * definitions for selected datasets.\n */\nvar select_datasets = (filters, success_fn) => {\n    // history dataset selection tab\n    var history_grid = new GridView({\n        url_base: `${Galaxy.root}visualization/list_history_datasets`,\n        filters: filters,\n        dict_format: true,\n        embedded: true\n    });\n\n    // library dataset selection tab\n    var library_grid = new GridView({\n        url_base: `${Galaxy.root}visualization/list_library_datasets`,\n        dict_format: true,\n        embedded: true\n    });\n\n    // build tabs\n    var tabs = new Tabs.View();\n    tabs.add({\n        id: \"histories\",\n        title: \"Histories\",\n        $el: $(\"<div/>\").append(history_grid.$el)\n    });\n    tabs.add({\n        id: \"libraries\",\n        title: \"Libraries\",\n        $el: $(\"<div/>\").append(library_grid.$el)\n    });\n\n    // modal\n    Galaxy.modal.show({\n        title: \"Select datasets for new tracks\",\n        body: tabs.$el,\n        closing_events: true,\n        buttons: {\n            Cancel: function() {\n                Galaxy.modal.hide();\n            },\n            Add: function() {\n                var requests = [];\n                tabs.$(\"input.grid-row-select-checkbox[name=id]:checked\").each(function() {\n                    window.console.log($(this).val());\n                    requests[requests.length] = $.ajax({\n                        url: `${Galaxy.root}api/datasets/${$(this).val()}`,\n                        dataType: \"json\",\n                        data: {\n                            data_type: \"track_config\",\n                            hda_ldda: tabs.current() == \"histories\" ? \"hda\" : \"ldda\"\n                        }\n                    });\n                });\n                // To preserve order, wait until there are definitions for all tracks and then add\n                // them sequentially.\n                $.when.apply($, requests).then(function() {\n                    // jQuery always returns an Array for arguments, so need to look at first element\n                    // to determine whether multiple requests were made and consequently how to\n                    // map arguments to track definitions.\n                    var track_defs = arguments[0] instanceof Array ? $.map(arguments, arg => arg[0]) : [arguments[0]];\n                    success_fn(track_defs);\n                });\n                Galaxy.modal.hide();\n            }\n        }\n    });\n};\n\n// --------- Models ---------\n\n/**\n * Canvas manager is used to create canvases for browsers as well as providing a pattern cache\n */\nvar CanvasManager = function(default_font) {\n    this.default_font = default_font !== undefined ? default_font : \"9px Monaco, Lucida Console, monospace\";\n\n    this.dummy_canvas = this.new_canvas();\n    this.dummy_context = this.dummy_canvas.getContext(\"2d\");\n    this.dummy_context.font = this.default_font;\n\n    this.char_width_px = this.dummy_context.measureText(\"A\").width;\n\n    this.patterns = {};\n\n    // FIXME: move somewhere to make this more general\n    this.load_pattern(\"right_strand\", \"/visualization/strand_right.png\");\n    this.load_pattern(\"left_strand\", \"/visualization/strand_left.png\");\n    this.load_pattern(\"right_strand_inv\", \"/visualization/strand_right_inv.png\");\n    this.load_pattern(\"left_strand_inv\", \"/visualization/strand_left_inv.png\");\n};\n\n_.extend(CanvasManager.prototype, {\n    load_pattern: function(key, path) {\n        var patterns = this.patterns;\n        var dummy_context = this.dummy_context;\n        var image = new Image();\n        image.src = `${Galaxy.root}static/images${path}`;\n        image.onload = () => {\n            patterns[key] = dummy_context.createPattern(image, \"repeat\");\n        };\n    },\n    get_pattern: function(key) {\n        return this.patterns[key];\n    },\n    new_canvas: function() {\n        var canvas = $(\"<canvas/>\")[0];\n        // Keep a reference back to the manager\n        canvas.manager = this;\n        return canvas;\n    }\n});\n\n/**\n * Generic cache that handles key/value pairs. Keys can be any object that can be\n * converted to a String and compared.\n */\nvar Cache = Backbone.Model.extend({\n    defaults: {\n        num_elements: 20,\n        // Objects in cache; indexes into cache are strings of keys.\n        obj_cache: null,\n        // key_ary contains keys for objects in cache.\n        key_ary: null\n    },\n\n    initialize: function(options) {\n        this.clear();\n    },\n\n    /**\n     * Get an element from the cache using its key.\n     */\n    get_elt: function(key) {\n        var obj_cache = this.attributes.obj_cache;\n        var key_ary = this.attributes.key_ary;\n        var key_str = key.toString();\n\n        var index = _.indexOf(key_ary, k => k.toString() === key_str);\n\n        // Update cache.\n        if (index !== -1) {\n            // Object is in cache, so update it.\n            if (obj_cache[key_str].stale) {\n                // Object is stale: remove key and object.\n                key_ary.splice(index, 1);\n                delete obj_cache[key_str];\n            } else {\n                // Move key to back because it is most recently used.\n                this.move_key_to_end(key, index);\n            }\n        }\n\n        return obj_cache[key_str];\n    },\n\n    /**\n     * Put an element into the cache.\n     */\n    set_elt: function(key, value) {\n        var obj_cache = this.attributes.obj_cache;\n        var key_ary = this.attributes.key_ary;\n        var key_str = key.toString();\n        var num_elements = this.attributes.num_elements;\n\n        // Update keys, objects.\n        if (!obj_cache[key_str]) {\n            // Add object to cache.\n\n            if (key_ary.length >= num_elements) {\n                // Cache full, so remove first element.\n                var deleted_key = key_ary.shift();\n                delete obj_cache[deleted_key.toString()];\n            }\n\n            // Add key.\n            key_ary.push(key);\n        }\n\n        // Add object.\n        obj_cache[key_str] = value;\n        return value;\n    },\n\n    /**\n     * Move key to end of cache. Keys are removed from the front, so moving a key to the end\n     * delays the key's removal.\n     */\n    move_key_to_end: function(key, index) {\n        this.attributes.key_ary.splice(index, 1);\n        this.attributes.key_ary.push(key);\n    },\n\n    /**\n     * Clear all elements from the cache.\n     */\n    clear: function() {\n        this.attributes.obj_cache = {};\n        this.attributes.key_ary = [];\n    },\n\n    /** Returns the number of elements in the cache. */\n    size: function() {\n        return this.attributes.key_ary.length;\n    },\n\n    /** Returns key most recently added to cache. */\n    most_recently_added: function() {\n        return this.size() === 0\n            ? null\n            : // Most recent key is at the end of key array.\n              this.attributes.key_ary[this.attributes.key_ary.length - 1];\n    }\n});\n\n/**\n * Data manager for genomic data. Data is connected to and queryable by genomic regions.\n */\nvar GenomeDataManager = Cache.extend({\n    defaults: _.extend({}, Cache.prototype.defaults, {\n        dataset: null,\n        genome: null,\n        init_data: null,\n        min_region_size: 200,\n        filters_manager: null,\n        data_type: \"data\",\n        data_mode_compatible: function(entry, mode) {\n            return true;\n        },\n        can_subset: function(entry) {\n            return false;\n        }\n    }),\n\n    /**\n     * Initialization.\n     */\n    initialize: function(options) {\n        Cache.prototype.initialize.call(this);\n\n        // Set initial entries in data manager.\n        var initial_entries = this.get(\"init_data\");\n        if (initial_entries) {\n            this.add_data(initial_entries);\n        }\n    },\n\n    /**\n     * Add data entries to manager; each entry should be a dict with attributes region (key), data, and data_type.\n     * If necessary, manager size is increased to hold all data.\n     */\n    add_data: function(entries) {\n        // Increase size to accomodate all entries.\n        if (this.get(\"num_elements\") < entries.length) {\n            this.set(\"num_elements\", entries.length);\n        }\n\n        // Put data into manager.\n        var self = this;\n        _.each(entries, entry => {\n            self.set_data(entry.region, entry);\n        });\n    },\n\n    /**\n     * Returns deferred that resolves to true when dataset is ready (or false if dataset\n     * cannot be used).\n     */\n    data_is_ready: function() {\n        var dataset = this.get(\"dataset\");\n        var ready_deferred = $.Deferred();\n\n        var // If requesting raw data, query dataset state; if requesting (converted) data,\n        // need to query converted datasets state.\n        query_type =\n            this.get(\"data_type\") === \"raw_data\"\n                ? \"state\"\n                : this.get(\"data_type\") === \"data\" ? \"converted_datasets_state\" : \"error\";\n\n        var ss_deferred = new util_mod.ServerStateDeferred({\n            ajax_settings: {\n                url: this.get(\"dataset\").url(),\n                data: {\n                    hda_ldda: dataset.get(\"hda_ldda\"),\n                    data_type: query_type\n                },\n                dataType: \"json\"\n            },\n            interval: 5000,\n            success_fn: function(response) {\n                return response !== \"pending\";\n            }\n        });\n\n        $.when(ss_deferred.go()).then(response => {\n            ready_deferred.resolve(response === \"ok\" || response === \"data\");\n        });\n        return ready_deferred;\n    },\n\n    /**\n     * Perform a feature search from server; returns Deferred object that resolves when data is available.\n     */\n    search_features: function(query) {\n        var dataset = this.get(\"dataset\");\n\n        var params = {\n            query: query,\n            hda_ldda: dataset.get(\"hda_ldda\"),\n            data_type: \"features\"\n        };\n\n        return $.getJSON(dataset.url(), params);\n    },\n\n    /**\n     * Load data from server and manages data entries. Adds a Deferred to manager\n     * for region; when data becomes available, replaces Deferred with data.\n     * Returns the Deferred that resolves when data is available.\n     */\n    load_data: function(region, mode, resolution, extra_params) {\n        // Setup data request params.\n        var dataset = this.get(\"dataset\");\n\n        var params = {\n            data_type: this.get(\"data_type\"),\n            chrom: region.get(\"chrom\"),\n            low: region.get(\"start\"),\n            high: region.get(\"end\"),\n            mode: mode,\n            resolution: resolution,\n            hda_ldda: dataset.get(\"hda_ldda\")\n        };\n\n        $.extend(params, extra_params);\n\n        // Add track filters to params.\n        var filters_manager = this.get(\"filters_manager\");\n        if (filters_manager) {\n            var filter_names = [];\n            var filters = filters_manager.filters;\n            for (var i = 0; i < filters.length; i++) {\n                filter_names.push(filters[i].name);\n            }\n            params.filter_cols = JSON.stringify(filter_names);\n        }\n\n        // Do request.\n        var manager = this;\n\n        var entry = $.getJSON(dataset.url(), params, result => {\n            // Add region to the result.\n            result.region = region;\n            manager.set_data(region, result);\n        });\n\n        this.set_data(region, entry);\n        return entry;\n    },\n\n    /**\n     * Get data from dataset.\n     */\n    get_data: function(region, mode, resolution, extra_params) {\n        // Look for entry and return if it's a deferred or if data available is compatible with mode.\n        var entry = this.get_elt(region);\n        if (entry && (util_mod.is_deferred(entry) || this.get(\"data_mode_compatible\")(entry, mode))) {\n            return entry;\n        }\n\n        //\n        // Look in cache for data that can be used.\n        // TODO: this logic could be improved if the visualization knew whether\n        // the data was \"index\" or \"data.\"\n        //\n        var key_ary = this.get(\"key_ary\");\n\n        var obj_cache = this.get(\"obj_cache\");\n        var entry_region;\n        var is_subregion;\n        for (var i = 0; i < key_ary.length; i++) {\n            entry_region = key_ary[i];\n\n            if (entry_region.contains(region)) {\n                is_subregion = true;\n\n                // This entry has data in the requested range. Return if data\n                // is compatible and can be subsetted.\n                entry = obj_cache[entry_region.toString()];\n                if (\n                    util_mod.is_deferred(entry) ||\n                    (this.get(\"data_mode_compatible\")(entry, mode) && this.get(\"can_subset\")(entry))\n                ) {\n                    this.move_key_to_end(entry_region, i);\n\n                    // If there's data, subset it.\n                    if (!util_mod.is_deferred(entry)) {\n                        var subset_entry = this.subset_entry(entry, region);\n                        this.set_data(region, subset_entry);\n                        entry = subset_entry;\n                    }\n\n                    return entry;\n                }\n            }\n        }\n\n        // FIXME: There _may_ be instances where region is a subregion of another entry but cannot be\n        // subsetted. For these cases, do not increase length because region will never be found (and\n        // an infinite loop will occur.)\n        // If needed, extend region to make it minimum size.\n        if (!is_subregion && region.length() < this.attributes.min_region_size) {\n            // IDEA: alternative heuristic is to find adjacent cache entry to region and use that to extend.\n            // This would prevent bad extensions when zooming in/out while still preserving the behavior\n            // below.\n\n            // Use copy of region to avoid changing actual region.\n            region = region.copy();\n\n            // Use heuristic to extend region: extend relative to last data request.\n            var last_request = this.most_recently_added();\n            if (!last_request || region.get(\"start\") > last_request.get(\"start\")) {\n                // This request is after the last request, so extend right.\n                region.set(\"end\", region.get(\"start\") + this.attributes.min_region_size);\n            } else {\n                // This request is after the last request, so extend left.\n                region.set(\"start\", region.get(\"end\") - this.attributes.min_region_size);\n            }\n\n            // Trim region to avoid invalid coordinates.\n            region.set(\"genome\", this.attributes.genome);\n            region.trim();\n        }\n\n        return this.load_data(region, mode, resolution, extra_params);\n    },\n\n    /**\n     * Alias for set_elt for readbility.\n     */\n    set_data: function(region, entry) {\n        this.set_elt(region, entry);\n    },\n\n    /** \"Deep\" data request; used as a parameter for DataManager.get_more_data() */\n    DEEP_DATA_REQ: \"deep\",\n\n    /** \"Broad\" data request; used as a parameter for DataManager.get_more_data() */\n    BROAD_DATA_REQ: \"breadth\",\n\n    /**\n     * Gets more data for a region using either a depth-first or a breadth-first approach.\n     */\n    get_more_data: function(region, mode, resolution, extra_params, req_type) {\n        var cur_data = this._mark_stale(region);\n        if (!(cur_data && this.get(\"data_mode_compatible\")(cur_data, mode))) {\n            console.log(\"ERROR: problem with getting more data: current data is not compatible\");\n            return;\n        }\n\n        //\n        // Set parameters based on request type.\n        //\n        var query_low = region.get(\"start\");\n        if (req_type === this.DEEP_DATA_REQ) {\n            // Use same interval but set start_val to skip data that's already in cur_data.\n            $.extend(extra_params, {\n                start_val: cur_data.data.length + 1\n            });\n        } else if (req_type === this.BROAD_DATA_REQ) {\n            // To get past an area of extreme feature depth, set query low to be after either\n            // (a) the maximum high or HACK/FIXME (b) the end of the last feature returned.\n            query_low = (cur_data.max_high ? cur_data.max_high : cur_data.data[cur_data.data.length - 1][2]) + 1;\n        }\n        var query_region = region.copy().set(\"start\", query_low);\n\n        //\n        // Get additional data, append to current data, and set new data. Use a custom deferred object\n        // to signal when new data is available.\n        //\n        var data_manager = this;\n\n        var new_data_request = this.load_data(query_region, mode, resolution, extra_params);\n\n        var new_data_available = $.Deferred();\n        // load_data sets cache to new_data_request, but use custom deferred object so that signal and data\n        // is all data, not just new data.\n        this.set_data(region, new_data_available);\n        $.when(new_data_request).then(result => {\n            // Update data and message.\n            if (result.data) {\n                result.data = cur_data.data.concat(result.data);\n                if (result.max_low) {\n                    result.max_low = cur_data.max_low;\n                }\n                if (result.message) {\n                    // HACK: replace number in message with current data length. Works but is ugly.\n                    result.message = result.message.replace(/[0-9]+/, result.data.length);\n                }\n            }\n            data_manager.set_data(region, result);\n            new_data_available.resolve(result);\n        });\n        return new_data_available;\n    },\n\n    /**\n     * Returns true if more detailed data can be obtained for entry.\n     */\n    can_get_more_detailed_data: function(region) {\n        var cur_data = this.get_elt(region);\n\n        // Can only get more detailed data for bigwig data that has less than 8000 data points.\n        // Summary tree returns *way* too much data, and 8000 data points ~ 500KB.\n        return cur_data.dataset_type === \"bigwig\" && cur_data.data.length < 8000;\n    },\n\n    /**\n     * Returns more detailed data for an entry.\n     */\n    get_more_detailed_data: function(region, mode, resolution, detail_multiplier, extra_params) {\n        // Mark current entry as stale.\n        var cur_data = this._mark_stale(region);\n        if (!cur_data) {\n            console.log(\"ERROR getting more detailed data: no current data\");\n            return;\n        }\n\n        if (!extra_params) {\n            extra_params = {};\n        }\n\n        // Use additional parameters to get more detailed data.\n        if (cur_data.dataset_type === \"bigwig\") {\n            // FIXME: constant should go somewhere.\n            extra_params.num_samples = 1000 * detail_multiplier;\n        }\n\n        return this.load_data(region, mode, resolution, extra_params);\n    },\n\n    /**\n     * Marks cache data as stale.\n     */\n    _mark_stale: function(region) {\n        var entry = this.get_elt(region);\n        if (!entry) {\n            console.log(\"ERROR: no data to mark as stale: \", this.get(\"dataset\"), region.toString());\n        }\n        entry.stale = true;\n        return entry;\n    },\n\n    /**\n     * Returns an array of data with each entry representing one chromosome/contig\n     * of data or, if data is not available, returns a Deferred that resolves to the\n     * data when it becomes available.\n     */\n    get_genome_wide_data: function(genome) {\n        // -- Get all data. --\n\n        var self = this;\n\n        var all_data_available = true;\n\n        var //  Map chromosome info into genome data.\n        gw_data = _.map(genome.get(\"chroms_info\").chrom_info, chrom_info => {\n            var chrom_data = self.get_elt(\n                new GenomeRegion({\n                    chrom: chrom_info.chrom,\n                    start: 0,\n                    end: chrom_info.len\n                })\n            );\n\n            // Set flag if data is not available.\n            if (!chrom_data) {\n                all_data_available = false;\n            }\n\n            return chrom_data;\n        });\n\n        // -- If all data is available, return it. --\n        if (all_data_available) {\n            return gw_data;\n        }\n\n        // -- All data is not available, so load from server. --\n\n        var deferred = $.Deferred();\n        $.getJSON(this.get(\"dataset\").url(), { data_type: \"genome_data\" }, genome_wide_data => {\n            self.add_data(genome_wide_data.data);\n            deferred.resolve(genome_wide_data.data);\n        });\n\n        return deferred;\n    },\n\n    /**\n     * Returns entry with only data in the subregion.\n     */\n    subset_entry: function(entry, subregion) {\n        // Dictionary from entry type to function for subsetting data.\n        var subset_fns = {\n            bigwig: function(data, subregion) {\n                return _.filter(\n                    data,\n                    data_point => data_point[0] >= subregion.get(\"start\") && data_point[0] <= subregion.get(\"end\")\n                );\n            },\n            refseq: function(data, subregion) {\n                var seq_start = subregion.get(\"start\") - entry.region.get(\"start\");\n                return entry.data.slice(seq_start, seq_start + subregion.length());\n            }\n        };\n\n        // Subset entry if there is a function for subsetting and regions are not the same.\n        var subregion_data = entry.data;\n        if (!entry.region.same(subregion) && entry.dataset_type in subset_fns) {\n            subregion_data = subset_fns[entry.dataset_type](entry.data, subregion);\n        }\n\n        // Return entry with subregion's data.\n        return {\n            region: subregion,\n            data: subregion_data,\n            dataset_type: entry.dataset_type\n        };\n    }\n});\n\nvar GenomeReferenceDataManager = GenomeDataManager.extend({\n    initialize: function(options) {\n        // Use generic object in place of dataset and set urlRoot to fetch data.\n        var dataset_placeholder = new Backbone.Model();\n        dataset_placeholder.urlRoot = options.data_url;\n        this.set(\"dataset\", dataset_placeholder);\n    },\n\n    load_data: function(region, mode, resolution, extra_params) {\n        // Fetch data if region is not too large.\n        return region.length() <= 100000\n            ? GenomeDataManager.prototype.load_data.call(this, region, mode, resolution, extra_params)\n            : { data: null, region: region };\n    }\n});\n\n/**\n * A genome build.\n */\nvar Genome = Backbone.Model.extend({\n    defaults: {\n        name: null,\n        key: null,\n        chroms_info: null\n    },\n\n    initialize: function(options) {\n        this.id = options.dbkey;\n    },\n\n    /**\n     * Shorthand for getting to chromosome information.\n     */\n    get_chroms_info: function() {\n        return this.attributes.chroms_info.chrom_info;\n    },\n\n    /**\n     * Returns a GenomeRegion object denoting a complete chromosome.\n     */\n    get_chrom_region: function(chr_name) {\n        // FIXME: use findWhere in underscore 1.4\n        var chrom_info = _.find(this.get_chroms_info(), chrom_info => chrom_info.chrom === chr_name);\n        return new GenomeRegion({\n            chrom: chrom_info.chrom,\n            end: chrom_info.len\n        });\n    },\n\n    /** Returns the length of a chromosome. */\n    get_chrom_len: function(chr_name) {\n        // FIXME: use findWhere in underscore 1.4\n        return _.find(this.get_chroms_info(), chrom_info => chrom_info.chrom === chr_name).len;\n    }\n});\n\n/**\n * A genomic region.\n */\nvar GenomeRegion = Backbone.Model.extend(\n    {\n        defaults: {\n            chrom: null,\n            start: 0,\n            end: 0,\n            str_val: null,\n            genome: null\n        },\n\n        /**\n         * Returns true if this region is the same as a given region.\n         * It does not test the genome right now.\n         */\n        same: function(region) {\n            return (\n                this.attributes.chrom === region.get(\"chrom\") &&\n                this.attributes.start === region.get(\"start\") &&\n                this.attributes.end === region.get(\"end\")\n            );\n        },\n\n        /**\n         * If from_str specified, use it to initialize attributes.\n         */\n        initialize: function(options) {\n            if (options.from_str) {\n                var pieces = options.from_str.split(\":\");\n                var chrom = pieces[0];\n                var start_end = pieces[1].split(\"-\");\n                this.set({\n                    chrom: chrom,\n                    start: parseInt(start_end[0], 10),\n                    end: parseInt(start_end[1], 10)\n                });\n            }\n\n            // Keep a copy of region's string value for fast lookup.\n            this.attributes.str_val = `${this.get(\"chrom\")}:${this.get(\"start\")}-${this.get(\"end\")}`;\n\n            // Set str_val on attribute change.\n            this.on(\n                \"change\",\n                function() {\n                    this.attributes.str_val = `${this.get(\"chrom\")}:${this.get(\"start\")}-${this.get(\"end\")}`;\n                },\n                this\n            );\n        },\n\n        copy: function() {\n            return new GenomeRegion({\n                chrom: this.get(\"chrom\"),\n                start: this.get(\"start\"),\n                end: this.get(\"end\")\n            });\n        },\n\n        length: function() {\n            return this.get(\"end\") - this.get(\"start\");\n        },\n\n        /** Returns region in canonical form chrom:start-end */\n        toString: function() {\n            return this.attributes.str_val;\n        },\n\n        toJSON: function() {\n            return {\n                chrom: this.get(\"chrom\"),\n                start: this.get(\"start\"),\n                end: this.get(\"end\")\n            };\n        },\n\n        /**\n         * Compute the type of overlap between this region and another region. The overlap is computed relative to the given/second region;\n         * hence, OVERLAP_START indicates that the first region overlaps the start (but not the end) of the second region.\n         */\n        compute_overlap: function(a_region) {\n            var first_chrom = this.get(\"chrom\");\n            var second_chrom = a_region.get(\"chrom\");\n            var first_start = this.get(\"start\");\n            var second_start = a_region.get(\"start\");\n            var first_end = this.get(\"end\");\n            var second_end = a_region.get(\"end\");\n            var overlap;\n\n            // Compare chroms.\n            if (first_chrom && second_chrom && first_chrom !== second_chrom) {\n                return GenomeRegion.overlap_results.DIF_CHROMS;\n            }\n\n            // Compare regions.\n            if (first_start < second_start) {\n                if (first_end < second_start) {\n                    overlap = GenomeRegion.overlap_results.BEFORE;\n                } else if (first_end < second_end) {\n                    overlap = GenomeRegion.overlap_results.OVERLAP_START;\n                } else {\n                    // first_end >= second_end\n                    overlap = GenomeRegion.overlap_results.CONTAINS;\n                }\n            } else if (first_start > second_start) {\n                if (first_start > second_end) {\n                    overlap = GenomeRegion.overlap_results.AFTER;\n                } else if (first_end <= second_end) {\n                    overlap = GenomeRegion.overlap_results.CONTAINED_BY;\n                } else {\n                    overlap = GenomeRegion.overlap_results.OVERLAP_END;\n                }\n            } else {\n                // first_start === second_start\n                overlap =\n                    first_end >= second_end\n                        ? GenomeRegion.overlap_results.CONTAINS\n                        : GenomeRegion.overlap_results.CONTAINED_BY;\n            }\n\n            return overlap;\n        },\n\n        /**\n         * Trim a region to match genome's constraints.\n         */\n        trim: function(genome) {\n            // Assume that all chromosome/contigs start at 0.\n            if (this.attributes.start < 0) {\n                this.attributes.start = 0;\n            }\n\n            // Only try to trim the end if genome is set.\n            if (this.attributes.genome) {\n                var chrom_len = this.attributes.genome.get_chrom_len(this.attributes.chrom);\n                if (this.attributes.end > chrom_len) {\n                    this.attributes.end = chrom_len - 1;\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * Returns true if this region contains a given region.\n         */\n        contains: function(a_region) {\n            return this.compute_overlap(a_region) === GenomeRegion.overlap_results.CONTAINS;\n        },\n\n        /**\n         * Returns true if regions overlap.\n         */\n        overlaps: function(a_region) {\n            return (\n                _.intersection(\n                    [this.compute_overlap(a_region)],\n                    [\n                        GenomeRegion.overlap_results.DIF_CHROMS,\n                        GenomeRegion.overlap_results.BEFORE,\n                        GenomeRegion.overlap_results.AFTER\n                    ]\n                ).length === 0\n            );\n        }\n    },\n    {\n        overlap_results: {\n            DIF_CHROMS: 1000,\n            BEFORE: 1001,\n            CONTAINS: 1002,\n            OVERLAP_START: 1003,\n            OVERLAP_END: 1004,\n            CONTAINED_BY: 1005,\n            AFTER: 1006\n        }\n    }\n);\n\nvar GenomeRegionCollection = Backbone.Collection.extend({\n    model: GenomeRegion\n});\n\n/**\n * A genome browser bookmark.\n */\nvar BrowserBookmark = Backbone.Model.extend({\n    defaults: {\n        region: null,\n        note: \"\"\n    },\n\n    initialize: function(options) {\n        this.set(\"region\", new GenomeRegion(options.region));\n    }\n});\n\n/**\n * Bookmarks collection.\n */\nvar BrowserBookmarkCollection = Backbone.Collection.extend({\n    model: BrowserBookmark\n});\n\n/**\n * A track of data in a genome visualization.\n */\n// TODO: rename to Track and merge with Trackster's Track object.\nvar BackboneTrack = Backbone.Model.extend(CustomToJSON).extend(\n    {\n        defaults: {\n            mode: \"Auto\"\n        },\n\n        initialize: function(options) {\n            this.set(\"dataset\", new data_mod.Dataset(options.dataset));\n\n            // -- Set up config settings. --\n            var models = [\n                {\n                    key: \"name\",\n                    default_value: this.get(\"dataset\").get(\"name\")\n                },\n                { key: \"color\" },\n                {\n                    key: \"min_value\",\n                    label: \"Min Value\",\n                    type: \"float\",\n                    default_value: 0\n                },\n                {\n                    key: \"max_value\",\n                    label: \"Max Value\",\n                    type: \"float\",\n                    default_value: 1\n                }\n            ];\n\n            this.set(\"config\", config_mod.ConfigSettingCollection.from_models_and_saved_values(models, options.prefs));\n\n            // -- Set up data manager. --\n            var preloaded_data = this.get(\"preloaded_data\");\n            if (preloaded_data) {\n                preloaded_data = preloaded_data.data;\n            } else {\n                preloaded_data = [];\n            }\n            this.set(\n                \"data_manager\",\n                new GenomeDataManager({\n                    dataset: this.get(\"dataset\"),\n                    init_data: preloaded_data\n                })\n            );\n        }\n    },\n    {\n        // This definition matches that produced by to_dict() methods in tracks.js\n        to_json_keys: [\"track_type\", \"dataset\", \"prefs\", \"mode\", \"filters\", \"tool_state\"],\n        to_json_mappers: {\n            prefs: function(p, self) {\n                if (_.size(p) === 0) {\n                    p = {\n                        name: self\n                            .get(\"config\")\n                            .get(\"name\")\n                            .get(\"value\"),\n                        color: self\n                            .get(\"config\")\n                            .get(\"color\")\n                            .get(\"value\")\n                    };\n                }\n                return p;\n            },\n            dataset: function(d) {\n                return {\n                    id: d.id,\n                    hda_ldda: d.get(\"hda_ldda\")\n                };\n            }\n        }\n    }\n);\n\nvar BackboneTrackCollection = Backbone.Collection.extend({\n    model: BackboneTrack\n});\n\n/**\n * A visualization.\n */\nvar Visualization = Backbone.Model.extend({\n    defaults: {\n        title: \"\",\n        type: \"\"\n    },\n\n    urlRoot: `${Galaxy.root}api/visualizations`,\n\n    /**\n     * POSTs visualization's JSON to its URL using the parameter 'vis_json'\n     * Note: This is necessary because (a) Galaxy requires keyword args and\n     * (b) Galaxy does not handle PUT now.\n     */\n    save: function() {\n        return $.ajax({\n            url: this.url(),\n            type: \"POST\",\n            dataType: \"json\",\n            data: {\n                vis_json: JSON.stringify(this)\n            }\n        });\n    }\n});\n\n/**\n * A visualization of genome data.\n */\nvar GenomeVisualization = Visualization.extend(CustomToJSON).extend(\n    {\n        defaults: _.extend({}, Visualization.prototype.defaults, {\n            dbkey: \"\",\n            drawables: null,\n            bookmarks: null,\n            viewport: null\n        }),\n\n        initialize: function(options) {\n            // Replace drawables with tracks.\n            this.set(\"drawables\", new BackboneTrackCollection(options.tracks));\n\n            var models = [];\n            this.set(\"config\", config_mod.ConfigSettingCollection.from_models_and_saved_values(models, options.prefs));\n\n            // Clear track and data definitions to avoid storing large objects.\n            this.unset(\"tracks\");\n            this.get(\"drawables\").each(d => {\n                d.unset(\"preloaded_data\");\n            });\n        },\n\n        /**\n         * Add a track or array of tracks to the visualization.\n         */\n        add_tracks: function(tracks) {\n            this.get(\"drawables\").add(tracks);\n        }\n    },\n    {\n        // This definition matches that produced by to_dict() methods in tracks.js\n        to_json_keys: [\"view\", \"viewport\", \"bookmarks\"],\n\n        to_json_mappers: {\n            view: function(dummy, self) {\n                return {\n                    obj_type: \"View\",\n                    prefs: {\n                        name: self.get(\"title\"),\n                        content_visible: true\n                    },\n                    drawables: self.get(\"drawables\")\n                };\n            }\n        }\n    }\n);\n\n/**\n * -- Routers --\n */\n\n/**\n * Router for track browser.\n */\nvar TrackBrowserRouter = Backbone.Router.extend({\n    initialize: function(options) {\n        this.view = options.view;\n\n        // Can't put regular expression in routes dictionary.\n        // NOTE: parentheses are used to denote parameters returned to callback.\n        this.route(/([\\w]+)$/, \"change_location\");\n        this.route(/([\\w\\+]+\\:[\\d,]+-[\\d,]+)$/, \"change_location\");\n\n        // Handle navigate events from view.\n        var self = this;\n        self.view.on(\"navigate\", new_loc => {\n            self.navigate(new_loc);\n        });\n    },\n\n    change_location: function(new_loc) {\n        this.view.go_to(new_loc);\n    }\n});\n\nexport default {\n    BackboneTrack: BackboneTrack,\n    BrowserBookmark: BrowserBookmark,\n    BrowserBookmarkCollection: BrowserBookmarkCollection,\n    Cache: Cache,\n    CanvasManager: CanvasManager,\n    Genome: Genome,\n    GenomeDataManager: GenomeDataManager,\n    GenomeRegion: GenomeRegion,\n    GenomeRegionCollection: GenomeRegionCollection,\n    GenomeVisualization: GenomeVisualization,\n    GenomeReferenceDataManager: GenomeReferenceDataManager,\n    TrackBrowserRouter: TrackBrowserRouter,\n    Visualization: Visualization,\n    select_datasets: select_datasets\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/viz/visualization.js","/**\n * Stringifies a number adding commas for digit grouping as per North America.\n */\nfunction commatize(number) {\n    number += \"\"; // Convert to string\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(number)) {\n        number = number.replace(rgx, \"$1\" + \",\" + \"$2\");\n    }\n    return number;\n}\n\n/**\n * Helper to determine if object is jQuery deferred.\n */\nvar is_deferred = d => \"promise\" in d;\n\n/**\n * Implementation of a server-state based deferred. Server is repeatedly polled, and when\n * condition is met, deferred is resolved.\n */\nvar ServerStateDeferred = Backbone.Model.extend({\n    defaults: {\n        ajax_settings: {},\n        interval: 1000,\n        success_fn: function(result) {\n            return true;\n        }\n    },\n\n    /**\n     * Returns a deferred that resolves when success function returns true.\n     */\n    go: function() {\n        var deferred = $.Deferred();\n        var self = this;\n        var ajax_settings = self.get(\"ajax_settings\");\n        var success_fn = self.get(\"success_fn\");\n        var interval = self.get(\"interval\");\n\n        var _go = () => {\n            $.ajax(ajax_settings).success(result => {\n                if (success_fn(result)) {\n                    // Result is good, so resolve.\n                    deferred.resolve(result);\n                } else {\n                    // Result not good, try again.\n                    setTimeout(_go, interval);\n                }\n            });\n        };\n\n        _go();\n        return deferred;\n    }\n});\n\n/**\n * Returns a random color in hexadecimal format that is sufficiently different from a single color\n * or set of colors.\n * @param colors a color or list of colors in the format '#RRGGBB'\n */\nvar get_random_color = colors => {\n    // Default for colors is white.\n    if (!colors) {\n        colors = \"#ffffff\";\n    }\n\n    // If needed, create list of colors.\n    if (typeof colors === \"string\") {\n        colors = [colors];\n    }\n\n    // Convert colors to numbers.\n    for (var i = 0; i < colors.length; i++) {\n        colors[i] = parseInt(colors[i].slice(1), 16);\n    }\n\n    // -- Perceived brightness and difference formulas are from\n    // -- http://www.w3.org/WAI/ER/WD-AERT/#color-contrast\n\n    // Compute perceived color brightness (based on RGB-YIQ transformation):\n    var brightness = (r, g, b) => (r * 299 + g * 587 + b * 114) / 1000;\n\n    // Compute color difference:\n    var difference = (r1, g1, b1, r2, g2, b2) =>\n        Math.max(r1, r2) -\n        Math.min(r1, r2) +\n        (Math.max(g1, g2) - Math.min(g1, g2)) +\n        (Math.max(b1, b2) - Math.min(b1, b2));\n\n    // Create new random color.\n    var new_color;\n\n    var nr;\n    var ng;\n    var nb;\n    var other_color;\n    var or;\n    var og;\n    var ob;\n    var n_brightness;\n    var o_brightness;\n    var diff;\n    var ok = false;\n    var num_tries = 0;\n    do {\n        // New color is never white b/c random in [0,1)\n        new_color = Math.round(Math.random() * 0xffffff);\n        nr = (new_color & 0xff0000) >> 16;\n        ng = (new_color & 0x00ff00) >> 8;\n        nb = new_color & 0x0000ff;\n        n_brightness = brightness(nr, ng, nb);\n        ok = true;\n        for (i = 0; i < colors.length; i++) {\n            other_color = colors[i];\n            or = (other_color & 0xff0000) >> 16;\n            og = (other_color & 0x00ff00) >> 8;\n            ob = other_color & 0x0000ff;\n            o_brightness = brightness(or, og, ob);\n            diff = difference(nr, ng, nb, or, og, ob);\n            // These thresholds may need to be adjusted. Brightness difference range is 125;\n            // color difference range is 500.\n            if (Math.abs(n_brightness - o_brightness) < 40 || diff < 200) {\n                ok = false;\n                break;\n            }\n        }\n\n        num_tries++;\n    } while (!ok && num_tries <= 10);\n\n    // Add 0x1000000 to left pad number with 0s.\n    return `#${(0x1000000 + new_color).toString(16).substr(1, 6)}`;\n};\n\nexport default {\n    commatize: commatize,\n    is_deferred: is_deferred,\n    ServerStateDeferred: ServerStateDeferred,\n    get_random_color: get_random_color\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/viz/trackster/util.js","import * as _ from \"libs/underscore\";\nimport util_mod from \"viz/trackster/util\";\nimport config_mod from \"utils/config\";\n/**\n * A configuration setting. Currently key is used as id.\n */\nvar ConfigSetting = Backbone.Model.extend({\n    initialize: function(options) {\n        // Use key as id for now.\n        var key = this.get(\"key\");\n        this.set(\"id\", key);\n\n        // Set defaults based on key.\n        var defaults = _.find(\n            [\n                {\n                    key: \"name\",\n                    label: \"Name\",\n                    type: \"text\",\n                    default_value: \"\"\n                },\n                {\n                    key: \"color\",\n                    label: \"Color\",\n                    type: \"color\",\n                    default_value: null\n                },\n                {\n                    key: \"min_value\",\n                    label: \"Min Value\",\n                    type: \"float\",\n                    default_value: null\n                },\n                {\n                    key: \"max_value\",\n                    label: \"Max Value\",\n                    type: \"float\",\n                    default_value: null\n                },\n                {\n                    key: \"mode\",\n                    type: \"string\",\n                    default_value: this.mode,\n                    hidden: true\n                },\n                {\n                    key: \"height\",\n                    type: \"int\",\n                    default_value: 32,\n                    hidden: true\n                },\n                {\n                    key: \"pos_color\",\n                    label: \"Positive Color\",\n                    type: \"color\",\n                    default_value: \"#FF8C00\"\n                },\n                {\n                    key: \"neg_color\",\n                    label: \"Negative Color\",\n                    type: \"color\",\n                    default_value: \"#4169E1\"\n                },\n                {\n                    key: \"block_color\",\n                    label: \"Block color\",\n                    type: \"color\",\n                    default_value: null\n                },\n                {\n                    key: \"label_color\",\n                    label: \"Label color\",\n                    type: \"color\",\n                    default_value: \"black\"\n                },\n                {\n                    key: \"show_insertions\",\n                    label: \"Show insertions\",\n                    type: \"bool\",\n                    default_value: false\n                },\n                {\n                    key: \"show_counts\",\n                    label: \"Show summary counts\",\n                    type: \"bool\",\n                    default_value: true\n                },\n                {\n                    key: \"reverse_strand_color\",\n                    label: \"Antisense strand color\",\n                    type: \"color\",\n                    default_value: null\n                },\n                {\n                    key: \"show_differences\",\n                    label: \"Show differences only\",\n                    type: \"bool\",\n                    default_value: true\n                }\n            ],\n            s => s.key === key\n        );\n        if (defaults) {\n            this.set(_.extend({}, defaults, options));\n        }\n\n        if (this.get(\"value\") === undefined && this.get(\"default_value\") !== undefined) {\n            // Use default to set value (if present).\n            this.set_value(this.get(\"default_value\"));\n\n            // If no default value for color config, set random color.\n            if (!this.get(\"value\") && this.get(\"type\") === \"color\") {\n                // For color setting, set random color.\n                this.set(\"value\", util_mod.get_random_color());\n            }\n        }\n    },\n\n    /**\n     * Cast and set value. This should be instead of\n     *  setting.set('value', new_value)\n     */\n    set_value: function(value, options) {\n        var type = this.get(\"type\");\n\n        if (type === \"float\") {\n            value = parseFloat(value);\n        } else if (type === \"int\") {\n            value = parseInt(value, 10);\n        }\n        // TODO: handle casting from string to bool?\n\n        this.set({ value: value }, options);\n    }\n});\n\n/**\n * Collection of config settings.\n */\nvar ConfigSettingCollection = Backbone.Collection.extend(\n    {\n        model: ConfigSetting,\n\n        /**\n         * Save settings as a dictionary of key-value pairs.\n         * This function is needed for backwards compatibility.\n         */\n        to_key_value_dict: function() {\n            var rval = {};\n            this.each(setting => {\n                rval[setting.get(\"key\")] = setting.get(\"value\");\n            });\n\n            return rval;\n        },\n\n        /**\n         * Returns value for a given key. Returns undefined if there is no setting with the specified key.\n         */\n        get_value: function(key) {\n            var s = this.get(key);\n            if (s) {\n                return s.get(\"value\");\n            }\n\n            return undefined;\n        },\n\n        /**\n         * Set value for a setting.\n         */\n        set_value: function(key, value, options) {\n            var s = this.get(key);\n            if (s) {\n                return s.set_value(value, options);\n            }\n\n            return undefined;\n        },\n\n        /**\n         * Set default value for a setting.\n         */\n        set_default_value: function(key, default_value) {\n            var s = this.get(key);\n            if (s) {\n                return s.set(\"default_value\", default_value);\n            }\n\n            return undefined;\n        }\n    },\n    {\n        /**\n         * Utility function that creates a ConfigSettingsCollection from a set of models\n         * and a saved_values dictionary.\n         */\n        from_models_and_saved_values: function(models, saved_values) {\n            // If there are saved values, copy models and update with saved values.\n            if (saved_values) {\n                models = _.map(models, m => _.extend({}, m, { value: saved_values[m.key] }));\n            }\n\n            return new ConfigSettingCollection(models);\n        }\n    }\n);\n\n/**\n * Viewer for config settings collection.\n */\nvar ConfigSettingCollectionView = Backbone.View.extend({\n    className: \"config-settings-view\",\n\n    /**\n     * Renders form for editing configuration settings.\n     */\n    render: function() {\n        var container = this.$el;\n\n        this.collection.each((param, index) => {\n            // Hidden params have no representation in the form\n            if (param.get(\"hidden\")) {\n                return;\n            }\n\n            // Build row for param.\n            var id = `param_${index}`;\n\n            var type = param.get(\"type\");\n            var value = param.get(\"value\");\n            var row = $(\"<div class='form-row' />\").appendTo(container);\n            row.append(\n                $(\"<label />\")\n                    .attr(\"for\", id)\n                    .text(`${param.get(\"label\")}:`)\n            );\n            // Draw parameter as checkbox\n            if (type === \"bool\") {\n                row.append(\n                    $('<input type=\"checkbox\" />')\n                        .attr(\"id\", id)\n                        .attr(\"name\", id)\n                        .attr(\"checked\", value)\n                );\n            } else if (type === \"text\") {\n                // Draw parameter as textbox\n                row.append(\n                    $('<input type=\"text\"/>')\n                        .attr(\"id\", id)\n                        .val(value)\n                        .click(function() {\n                            $(this).select();\n                        })\n                );\n            } else if (type === \"select\") {\n                // Draw parameter as select area\n                var select = $(\"<select />\").attr(\"id\", id);\n                _.each(param.get(\"options\"), option => {\n                    $(\"<option/>\")\n                        .text(option.label)\n                        .attr(\"value\", option.value)\n                        .appendTo(select);\n                });\n                select.val(value);\n                row.append(select);\n            } else if (type === \"color\") {\n                // Draw parameter as color picker\n                var container_div = $(\"<div/>\").appendTo(row);\n\n                var input = $(\"<input />\")\n                    .attr(\"id\", id)\n                    .attr(\"name\", id)\n                    .val(value)\n                    .css(\"float\", \"left\")\n                    .appendTo(container_div)\n                    .click(function(e) {\n                        // Hide other pickers.\n                        $(\".tooltip\").removeClass(\"in\");\n\n                        // Show input's color picker.\n                        var tip = $(this)\n                            .siblings(\".tooltip\")\n                            .addClass(\"in\");\n                        tip\n                            .css({\n                                // left: $(this).position().left + ( $(input).width() / 2 ) - 60,\n                                // top: $(this).position().top + $(this.height)\n                                left: $(this).position().left + $(this).width() + 5,\n                                top: $(this).position().top - $(tip).height() / 2 + $(this).height() / 2\n                            })\n                            .show();\n\n                        // Click management:\n\n                        // Keep showing tip if clicking in tip.\n                        tip.click(e => {\n                            e.stopPropagation();\n                        });\n\n                        // Hide tip if clicking outside of tip.\n                        $(document).bind(\"click.color-picker\", () => {\n                            tip.hide();\n                            $(document).unbind(\"click.color-picker\");\n                        });\n\n                        // No propagation to avoid triggering document click (and tip hiding) above.\n                        e.stopPropagation();\n                    });\n\n                var // Icon for setting a new random color; behavior set below.\n                new_color_icon = $(\"<a href='javascript:void(0)'/>\")\n                    .addClass(\"icon-button arrow-circle\")\n                    .appendTo(container_div)\n                    .attr(\"title\", \"Set new random color\")\n                    .tooltip();\n\n                var // Color picker in tool tip style.\n                tip = $(\"<div class='tooltip right' style='position: absolute;' />\")\n                    .appendTo(container_div)\n                    .hide();\n\n                var // Inner div for padding purposes\n                tip_inner = $(\"<div class='tooltip-inner' style='text-align: inherit'></div>\").appendTo(tip);\n\n                var tip_arrow = $(\"<div class='tooltip-arrow'></div>\").appendTo(tip);\n\n                var farb_obj = $.farbtastic(tip_inner, {\n                    width: 100,\n                    height: 100,\n                    callback: input,\n                    color: value\n                });\n\n                // Clear floating.\n                container_div.append($(\"<div/>\").css(\"clear\", \"both\"));\n\n                // Use function to fix farb_obj value.\n                (fixed_farb_obj => {\n                    new_color_icon.click(() => {\n                        fixed_farb_obj.setColor(util_mod.get_random_color());\n                    });\n                })(farb_obj);\n            } else {\n                row.append(\n                    $(\"<input />\")\n                        .attr(\"id\", id)\n                        .attr(\"name\", id)\n                        .val(value)\n                );\n            }\n            // Help text\n            if (param.help) {\n                row.append($(\"<div class='help'/>\").text(param.help));\n            }\n        });\n\n        return this;\n    },\n\n    /**\n     * Render view in modal.\n     */\n    render_in_modal: function(title) {\n        // Set up handlers for cancel, ok button and for handling esc key.\n        var self = this;\n\n        var cancel_fn = () => {\n            Galaxy.modal.hide();\n            $(window).unbind(\"keypress.check_enter_esc\");\n        };\n\n        var ok_fn = () => {\n            Galaxy.modal.hide();\n            $(window).unbind(\"keypress.check_enter_esc\");\n            self.update_from_form();\n        };\n\n        var check_enter_esc = e => {\n            if ((e.keyCode || e.which) === 27) {\n                // Escape key\n                cancel_fn();\n            } else if ((e.keyCode || e.which) === 13) {\n                // Enter key\n                ok_fn();\n            }\n        };\n\n        // Set keypress handler.\n        $(window).bind(\"keypress.check_enter_esc\", check_enter_esc);\n\n        // Show modal.\n        if (this.$el.children().length === 0) {\n            this.render();\n        }\n        Galaxy.modal.show({\n            title: title || \"Configure\",\n            body: this.$el,\n            buttons: {\n                Cancel: cancel_fn,\n                OK: ok_fn\n            }\n        });\n    },\n\n    /**\n     * Update settings with new values entered via form.\n     */\n    update_from_form: function() {\n        var self = this;\n        this.collection.each((setting, index) => {\n            if (!setting.get(\"hidden\")) {\n                // Set value from view.\n                var id = `param_${index}`;\n                var value = self.$el.find(`#${id}`).val();\n                if (setting.get(\"type\") === \"bool\") {\n                    value = self.$el.find(`#${id}`).is(\":checked\");\n                }\n                setting.set_value(value);\n            }\n        });\n    }\n});\n\nexport default {\n    ConfigSetting: ConfigSetting,\n    ConfigSettingCollection: ConfigSettingCollection,\n    ConfigSettingCollectionView: ConfigSettingCollectionView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/config.js","// This is necessary so that, when nested arrays are used in ajax/post/get methods, square brackets ('[]') are\n// not appended to the identifier of a nested array.\njQuery.ajaxSettings.traditional = true;\n\n// dependencies\nimport Utils from \"utils/utils\";\nimport GridModel from \"mvc/grid/grid-model\";\nimport Templates from \"mvc/grid/grid-template\";\nimport PopupMenu from \"mvc/ui/popup-menu\";\n// grid view\nexport default Backbone.View.extend({\n    // model\n    grid: null,\n\n    // Initialize\n    initialize: function(grid_config) {\n        this.grid = new GridModel();\n        this.dict_format = grid_config.dict_format;\n        this.title = grid_config.title;\n        var self = this;\n        window.add_tag_to_grid_filter = (tag_name, tag_value) => {\n            // Put tag name and value together.\n            var tag = tag_name + (tag_value !== undefined && tag_value !== \"\" ? `:${tag_value}` : \"\");\n            var advanced_search = $(\"#advanced-search\").is(\":visible\");\n            if (!advanced_search) {\n                $(\"#standard-search\").slideToggle(\"fast\");\n                $(\"#advanced-search\").slideToggle(\"fast\");\n            }\n            self.add_filter_condition(\"tags\", tag);\n        };\n\n        // set element\n        if (this.dict_format) {\n            this.setElement(\"<div/>\");\n            if (grid_config.url_base && !grid_config.items) {\n                var url_data = grid_config.url_data || {};\n                _.each(grid_config.filters, (v, k) => {\n                    url_data[`f-${k}`] = v;\n                });\n                $.ajax({\n                    url: `${grid_config.url_base}?${$.param(url_data)}`,\n                    success: function(response) {\n                        response.embedded = grid_config.embedded;\n                        response.filters = grid_config.filters || {};\n                        self.init_grid(response);\n                    }\n                });\n            } else {\n                this.init_grid(grid_config);\n            }\n        } else {\n            this.setElement(\"#grid-container\");\n            this.init_grid(grid_config);\n        }\n\n        // fix padding\n        if (grid_config.use_panels) {\n            $(\"#center\").css({\n                padding: \"10px\",\n                overflow: \"auto\"\n            });\n        }\n    },\n\n    // refresh frames\n    handle_refresh: function(refresh_frames) {\n        if (refresh_frames) {\n            if ($.inArray(\"history\", refresh_frames) > -1) {\n                if (window.top.Galaxy && window.top.Galaxy.currHistoryPanel) {\n                    window.top.Galaxy.currHistoryPanel.loadCurrentHistory();\n                }\n            }\n        }\n    },\n\n    // Initialize\n    init_grid: function(grid_config) {\n        this.grid.set(grid_config);\n\n        // get options\n        var options = this.grid.attributes;\n\n        if (this.allow_title_display && options.title) {\n            Utils.setWindowTitle(options.title);\n        }\n        // handle refresh requests\n        this.handle_refresh(options.refresh_frames);\n\n        // strip protocol and domain\n        var url = this.grid.get(\"url_base\");\n        url = url.replace(/^.*\\/\\/[^\\/]+/, \"\");\n        this.grid.set(\"url_base\", url);\n\n        // append main template\n        this.$el.html(Templates.grid(options));\n\n        // update div contents\n        this.$el.find(\"#grid-table-header\").html(Templates.header(options));\n        this.$el.find(\"#grid-table-body\").html(Templates.body(options));\n        this.$el.find(\"#grid-table-footer\").html(Templates.footer(options));\n\n        // update message\n        if (options.message) {\n            this.$el.find(\"#grid-message\").html(Templates.message(options));\n            var self = this;\n            if (options.use_hide_message) {\n                setTimeout(() => {\n                    self.$el.find(\"#grid-message\").html(\"\");\n                }, 5000);\n            }\n        }\n\n        // configure elements\n        this.init_grid_elements();\n        this.init_grid_controls();\n\n        // attach global event handler\n        // TODO: redundant (the onload/standard page handlers do this) - but needed because these are constructed after page ready\n        init_refresh_on_change();\n    },\n\n    // Initialize grid controls\n    init_grid_controls: function() {\n        // link\n        var self = this;\n\n        // Initialize grid operation button.\n        this.$el.find(\".operation-button\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                self.submit_operation(this);\n                return false;\n            });\n        });\n\n        // Initialize text filters to select text on click and use normal font when user is typing.\n        this.$el.find(\"input[type=text]\").each(function() {\n            $(this).off();\n            $(this)\n                .click(function() {\n                    $(this).select();\n                })\n                .keyup(function() {\n                    $(this).css(\"font-style\", \"normal\");\n                });\n        });\n\n        // Initialize sort links.\n        this.$el.find(\".sort-link\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                self.set_sort_condition($(this).attr(\"sort_key\"));\n                return false;\n            });\n        });\n\n        // Initialize text filters.\n        this.$el.find(\".text-filter-form\").each(function() {\n            $(this).off();\n            $(this).submit(function() {\n                var column_key = $(this).attr(\"column_key\");\n                var text_input_obj = $(`#input-${column_key}-filter`);\n                var text_input = text_input_obj.val();\n                text_input_obj.val(\"\");\n                self.add_filter_condition(column_key, text_input);\n                return false;\n            });\n        });\n\n        // Initialize categorical filters.\n        this.$el.find(\".text-filter-val > a\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                // Remove visible element.\n                $(this)\n                    .parent()\n                    .remove();\n\n                // Remove filter condition.\n                self.remove_filter_condition($(this).attr(\"filter_key\"), $(this).attr(\"filter_val\"));\n\n                // Return\n                return false;\n            });\n        });\n\n        // Initialize categorical filters.\n        this.$el.find(\".categorical-filter > a\").each(function() {\n            $(this).off();\n            $(this).click(function() {\n                self.set_categorical_filter($(this).attr(\"filter_key\"), $(this).attr(\"filter_val\"));\n                return false;\n            });\n        });\n\n        // Initialize standard, advanced search toggles.\n        this.$el.find(\".advanced-search-toggle\").each(function() {\n            $(this).off();\n            $(this).click(() => {\n                self.$el.find(\"#standard-search\").slideToggle(\"fast\");\n                self.$el.find(\"#advanced-search\").slideToggle(\"fast\");\n                return false;\n            });\n        });\n\n        // Add event to check all box\n        this.$el.find(\"#check_all\").off();\n        this.$el.find(\"#check_all\").on(\"click\", () => {\n            self.check_all_items();\n        });\n    },\n\n    // Initialize grid elements.\n    init_grid_elements: function() {\n        // Initialize grid selection checkboxes.\n        this.$el.find(\".grid\").each(function() {\n            var checkboxes = $(this).find(\"input.grid-row-select-checkbox\");\n            var check_count = $(this).find(\"span.grid-selected-count\");\n            var update_checked = () => {\n                check_count.text($(checkboxes).filter(\":checked\").length);\n            };\n\n            $(checkboxes).each(function() {\n                $(this).change(update_checked);\n            });\n            update_checked();\n        });\n\n        // Initialize ratings.\n        if (this.$el.find(\".community_rating_star\").length !== 0) this.$el.find(\".community_rating_star\").rating({});\n\n        // get options\n        var options = this.grid.attributes;\n        var self = this;\n\n        //\n        // add page click events\n        //\n        this.$el.find(\".page-link > a\").each(function() {\n            $(this).click(function() {\n                self.set_page($(this).attr(\"page_num\"));\n                return false;\n            });\n        });\n\n        //\n        // add inbound/outbound events\n        //\n        this.$el.find(\".use-target\").each(function() {\n            $(this).click(function(e) {\n                self.execute({\n                    href: $(this).attr(\"href\"),\n                    target: $(this).attr(\"target\")\n                });\n                return false;\n            });\n        });\n\n        // empty grid?\n        var items_length = options.items.length;\n        if (items_length == 0) {\n            return;\n        }\n\n        // add operation popup menus\n        _.each(options.items, (item, index) => {\n            var button = self.$(`#grid-${index}-popup`).off();\n            var popup = new PopupMenu(button);\n            _.each(options[\"operations\"], operation => {\n                self._add_operation(popup, operation, item);\n            });\n        });\n    },\n\n    /** Add an operation to the items menu */\n    _add_operation: function(popup, operation, item) {\n        var self = this;\n        var settings = item.operation_config[operation.label];\n        if (settings.allowed && operation.allow_popup) {\n            popup.addItem({\n                html: operation.label,\n                href: settings.url_args,\n                target: settings.target,\n                confirmation_text: operation.confirm,\n                func: function(e) {\n                    e.preventDefault();\n                    var label = $(e.target).html();\n                    if (operation.onclick) {\n                        operation.onclick(item.encode_id);\n                    } else {\n                        self.execute(this.findItemByHtml(label));\n                    }\n                }\n            });\n        }\n    },\n\n    // Add a condition to the grid filter; this adds the condition and refreshes the grid.\n    add_filter_condition: function(name, value) {\n        // Do nothing is value is empty.\n        if (value === \"\") {\n            return false;\n        }\n\n        // Add condition to grid.\n        this.grid.add_filter(name, value, true);\n\n        // Add button that displays filter and provides a button to delete it.\n        var t = $(Templates.filter_element(name, value));\n        var self = this;\n        t.click(function() {\n            // Remove visible element.\n            $(this).remove();\n\n            // Remove filter condition.\n            self.remove_filter_condition(name, value);\n        });\n\n        // append to container\n        var container = this.$el.find(`#${name}-filtering-criteria`);\n        container.append(t);\n\n        // execute\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Remove a condition to the grid filter; this adds the condition and refreshes the grid.\n    remove_filter_condition: function(name, value) {\n        // Remove filter condition.\n        this.grid.remove_filter(name, value);\n\n        // Execute\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set sort condition for grid.\n    set_sort_condition: function(col_key) {\n        // Set new sort condition. New sort is col_key if sorting new column; if reversing sort on\n        // currently sorted column, sort is reversed.\n        var cur_sort = this.grid.get(\"sort_key\");\n        var new_sort = col_key;\n        if (cur_sort.indexOf(col_key) !== -1) {\n            // Reverse sort.\n            if (cur_sort.substring(0, 1) !== \"-\") {\n                new_sort = `-${col_key}`;\n            }\n        }\n\n        // Remove sort arrows elements.\n        this.$el.find(\".sort-arrow\").remove();\n\n        // Add sort arrow element to new sort column.\n        var sort_arrow = new_sort.substring(0, 1) == \"-\" ? \"&uarr;\" : \"&darr;\";\n        var t = $(`<span>${sort_arrow}</span>`).addClass(\"sort-arrow\");\n\n        // Add to header\n        this.$el.find(`#${col_key}-header`).append(t);\n\n        // Update grid.\n        this.grid.set(\"sort_key\", new_sort);\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set new value for categorical filter.\n    set_categorical_filter: function(name, new_value) {\n        // Update filter hyperlinks to reflect new filter value.\n        var category_filter = this.grid.get(\"categorical_filters\")[name];\n\n        var cur_value = this.grid.get(\"filters\")[name];\n        var self = this;\n        this.$el.find(`.${name}-filter`).each(function() {\n            var text = $.trim($(this).text());\n            var filter = category_filter[text];\n            var filter_value = filter[name];\n            if (filter_value == new_value) {\n                // Remove filter link since grid will be using this filter. It is assumed that\n                // this element has a single child, a hyperlink/anchor with text.\n                $(this).empty();\n                $(this).addClass(\"current-filter\");\n                $(this).append(text);\n            } else if (filter_value == cur_value) {\n                // Add hyperlink for this filter since grid will no longer be using this filter. It is assumed that\n                // this element has a single child, a hyperlink/anchor.\n                $(this).empty();\n                var t = $(`<a href=\"#\">${text}</a>`);\n                t.click(() => {\n                    self.set_categorical_filter(name, filter_value);\n                });\n                $(this).removeClass(\"current-filter\");\n                $(this).append(t);\n            }\n        });\n\n        // Update grid.\n        this.grid.add_filter(name, new_value);\n        this.go_page_one();\n        this.execute();\n    },\n\n    // Set page to view.\n    set_page: function(new_page) {\n        // Update page hyperlink to reflect new page.\n        var self = this;\n        this.$el.find(\".page-link\").each(function() {\n            var id = $(this).attr(\"id\");\n\n            var // Id has form 'page-link-<page_num>\n            page_num = parseInt(id.split(\"-\")[2], 10);\n\n            var cur_page = self.grid.get(\"cur_page\");\n            var text;\n            if (page_num === new_page) {\n                // Remove link to page since grid will be on this page. It is assumed that\n                // this element has a single child, a hyperlink/anchor with text.\n                text = $(this)\n                    .children()\n                    .text();\n                $(this).empty();\n                $(this).addClass(\"inactive-link\");\n                $(this).text(text);\n            } else if (page_num === cur_page) {\n                // Add hyperlink to this page since grid will no longer be on this page. It is assumed that\n                // this element has a single child, a hyperlink/anchor.\n                text = $(this).text();\n                $(this).empty();\n                $(this).removeClass(\"inactive-link\");\n                var t = $(`<a href=\"#\">${text}</a>`);\n                t.click(() => {\n                    self.set_page(page_num);\n                });\n                $(this).append(t);\n            }\n        });\n\n        if (new_page === \"all\") {\n            this.grid.set(\"cur_page\", new_page);\n        } else {\n            this.grid.set(\"cur_page\", parseInt(new_page, 10));\n        }\n        this.execute();\n    },\n\n    // confirmation/submission of operation request\n    submit_operation: function(operation_button, confirmation_text) {\n        // identify operation\n        var operation_name = $(operation_button).val();\n\n        // verify in any item is selected\n        var number_of_checked_ids = this.$el.find('input[name=\"id\"]:checked').length;\n        if (!number_of_checked_ids > 0) {\n            return false;\n        }\n\n        // Check to see if there's grid confirmation text for this operation\n        var operation = _.findWhere(this.grid.attributes.operations, {\n            label: operation_name\n        });\n        if (operation && !confirmation_text) {\n            confirmation_text = operation.confirm || \"\";\n        }\n\n        // collect ids\n        var item_ids = [];\n        this.$el.find(\"input[name=id]:checked\").each(function() {\n            item_ids.push($(this).val());\n        });\n\n        // execute operation\n        var options = {\n            operation: operation_name,\n            id: item_ids,\n            confirmation_text: confirmation_text\n        };\n        if (operation.target == \"top\" || operation.target == \"center\") {\n            options = _.extend(options, {\n                href: operation.href,\n                target: operation.target\n            });\n        }\n        this.execute(options);\n        return true;\n    },\n\n    check_all_items: function() {\n        var check = this.$(\".grid-row-select-checkbox\");\n        var state = this.$(\"#check_all\").prop(\"checked\");\n        _.each(check, c => {\n            $(c).prop(\"checked\", state);\n        });\n        this.init_grid_elements();\n    },\n\n    // Go back to page one; this is useful when a filter is applied.\n    go_page_one: function() {\n        // Need to go back to page 1 if not showing all.\n        var cur_page = this.grid.get(\"cur_page\");\n        if (cur_page !== null && cur_page !== undefined && cur_page !== \"all\") {\n            this.grid.set(\"cur_page\", 1);\n        }\n    },\n\n    //\n    // execute operations and hyperlink requests\n    //\n    execute: function(options) {\n        // get url\n        var id = null;\n        var href = null;\n        var operation = null;\n        var confirmation_text = null;\n        var target = null;\n\n        // check for options\n        if (options) {\n            // get options\n            href = options.href;\n            operation = options.operation;\n            id = options.id;\n            confirmation_text = options.confirmation_text;\n            target = options.target;\n\n            // check if input contains the operation tag\n            if (href !== undefined && href.indexOf(\"operation=\") != -1) {\n                // Get operation, id in hyperlink's href.\n                var href_parts = href.split(\"?\");\n                if (href_parts.length > 1) {\n                    var href_parms_str = href_parts[1];\n                    var href_parms = href_parms_str.split(\"&\");\n                    for (var index = 0; index < href_parms.length; index++) {\n                        if (href_parms[index].indexOf(\"operation\") != -1) {\n                            // Found operation parm; get operation value.\n                            operation = href_parms[index].split(\"=\")[1];\n                            operation = operation.replace(/\\+/g, \" \");\n                        } else if (href_parms[index].indexOf(\"id\") != -1) {\n                            // Found id parm; get id value.\n                            id = href_parms[index].split(\"=\")[1];\n                        }\n                    }\n                }\n            }\n        }\n\n        // check for operation details\n        if (operation && id) {\n            // show confirmation box\n            if (\n                confirmation_text &&\n                confirmation_text != \"\" &&\n                confirmation_text != \"None\" &&\n                confirmation_text != \"null\"\n            )\n                if (!confirm(confirmation_text)) return false;\n\n            // use small characters for operation?!\n            operation = operation.toLowerCase();\n\n            // Update grid.\n            this.grid.set({\n                operation: operation,\n                item_ids: id\n            });\n\n            // Do operation. If operation cannot be performed asynchronously, redirect to location.\n            if (target == \"top\") {\n                window.top.location = `${href}?${$.param(this.grid.get_url_data())}`;\n            } else if (target == \"center\") {\n                $(\"#galaxy_main\").attr(\"src\", `${href}?${$.param(this.grid.get_url_data())}`);\n            } else if (this.grid.can_async_op(operation) || this.dict_format) {\n                this.update_grid();\n            } else {\n                this.go_to(target, href);\n            }\n\n            // done\n            return false;\n        }\n\n        // refresh grid\n        if (href) {\n            this.go_to(target, href);\n            return false;\n        }\n\n        // refresh grid\n        if (this.grid.get(\"async\") || this.dict_format) {\n            this.update_grid();\n        } else {\n            this.go_to(target, href);\n        }\n\n        // done\n        return false;\n    },\n\n    // go to url\n    go_to: function(target, href) {\n        // get aysnc status\n        var async = this.grid.get(\"async\");\n        this.grid.set(\"async\", false);\n\n        // get slide status\n        var advanced_search = this.$el.find(\"#advanced-search\").is(\":visible\");\n        this.grid.set(\"advanced_search\", advanced_search);\n\n        // get default url\n        if (!href) {\n            href = `${this.grid.get(\"url_base\")}?${$.param(this.grid.get_url_data())}`;\n        }\n\n        // clear grid of transient request attributes.\n        this.grid.set({\n            operation: undefined,\n            item_ids: undefined,\n            async: async\n        });\n        switch (target) {\n            case \"center\":\n                $(\"#galaxy_main\").attr(\"src\", href);\n                break;\n            case \"top\":\n                window.top.location = href;\n                break;\n            default:\n                window.location = href;\n        }\n    },\n\n    // Update grid.\n    update_grid: function() {\n        // If there's an operation, do POST; otherwise, do GET.\n        var method = this.grid.get(\"operation\") ? \"POST\" : \"GET\";\n\n        // Show overlay to indicate loading and prevent user actions.\n        this.$el.find(\".loading-elt-overlay\").show();\n        var self = this;\n        $.ajax({\n            type: method,\n            url: self.grid.get(\"url_base\"),\n            data: self.grid.get_url_data(),\n            error: function(response) {\n                alert(\"Grid refresh failed\");\n            },\n            success: function(response_text) {\n                // backup\n                var embedded = self.grid.get(\"embedded\");\n                var insert = self.grid.get(\"insert\");\n                var advanced_search = self.$el.find(\"#advanced-search\").is(\":visible\");\n\n                // request new configuration\n                var json = self.dict_format ? response_text : $.parseJSON(response_text);\n\n                // update\n                json.embedded = embedded;\n                json.insert = insert;\n                json.advanced_search = advanced_search;\n\n                // Initialize new grid config\n                self.init_grid(json);\n\n                // Hide loading overlay.\n                self.$el.find(\".loading-elt-overlay\").hide();\n            },\n            complete: function() {\n                // Clear grid of transient request attributes.\n                self.grid.set({\n                    operation: undefined,\n                    item_ids: undefined\n                });\n            }\n        });\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/grid/grid-view.js","/**\n  Webhooks\n**/\n\nvar WebhookModel = Backbone.Model.extend({\n    defaults: {\n        activate: false\n    }\n});\n\nvar Webhooks = Backbone.Collection.extend({\n    model: WebhookModel\n});\n\nvar WebhookView = Backbone.View.extend({\n    el: \"#webhook-view\",\n\n    initialize: function(options) {\n        var me = this;\n        var toolId = options.toolId || \"\";\n        var toolVersion = options.toolVersion || \"\";\n\n        this.$el.attr(\"tool_id\", toolId);\n        this.$el.attr(\"tool_version\", toolVersion);\n\n        this.model = new WebhookModel();\n        this.model.urlRoot = options.urlRoot;\n        this.model.fetch({\n            success: function() {\n                me.render();\n            }\n        });\n    },\n\n    render: function() {\n        var webhook = this.model.toJSON();\n\n        this.$el.html(`<div id=\"${webhook.name}\"></div>`);\n        if (webhook.styles)\n            $(\"<style/>\", { type: \"text/css\" })\n                .text(webhook.styles)\n                .appendTo(\"head\");\n        if (webhook.script)\n            $(\"<script/>\", { type: \"text/javascript\" })\n                .text(webhook.script)\n                .appendTo(\"head\");\n\n        return this;\n    }\n});\n\nvar add = options => {\n    var webhooks = new Webhooks();\n\n    webhooks.url = Galaxy.root + options.url;\n    webhooks.fetch({\n        async: options.async ? options.async : true,\n        success: options.callback\n    });\n};\n\nexport default {\n    Webhooks: Webhooks,\n    WebhookView: WebhookView,\n    add: add\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/webhooks.js","/** Frame view */\nvar FrameView = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.setElement($(\"<div/>\").addClass(\"corner frame\"));\n        this.$el\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"f-header corner\")\n                    .append($(\"<div/>\").addClass(\"f-title\"))\n                    .append(\n                        $(\"<div/>\")\n                            .addClass(\"f-icon f-close fa fa-close\")\n                            .tooltip({\n                                title: \"Close\",\n                                placement: \"bottom\"\n                            })\n                    )\n            )\n            .append($(\"<div/>\").addClass(\"f-content\"))\n            .append(\n                $(\"<div/>\")\n                    .addClass(\"f-resize f-icon corner fa fa-expand\")\n                    .tooltip({ title: \"Resize\" })\n            )\n            .append($(\"<div/>\").addClass(\"f-cover\"));\n        this.$header = this.$(\".f-header\");\n        this.$title = this.$(\".f-title\");\n        this.$content = this.$(\".f-content\");\n        this.render();\n        this.listenTo(this.model, \"change\", this.render, this);\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$title.html(options.title || \"\");\n        this.$header.find(\".f-icon-left\").remove();\n        _.each(options.menu, option => {\n            var $option = $(\"<div/>\")\n                .addClass(\"f-icon-left\")\n                .addClass(option.icon);\n            if (_.isFunction(option.disabled) && option.disabled()) {\n                $option.attr(\"disabled\", true);\n            } else {\n                $option\n                    .on(\"click\", () => {\n                        option.onclick(self);\n                    })\n                    .tooltip({\n                        title: option.tooltip,\n                        placement: \"bottom\"\n                    });\n            }\n            self.$header.append($option);\n        });\n        if (options.url) {\n            this.$content.html(\n                $(\"<iframe/>\")\n                    .addClass(\"f-iframe\")\n                    .attr(\"scrolling\", \"auto\")\n                    .attr(\"src\", `${options.url + (options.url.indexOf(\"?\") === -1 ? \"?\" : \"&\")}widget=True`)\n            );\n        } else if (options.content) {\n            _.isFunction(options.content) ? options.content(self.$content) : self.$content.html(options.content);\n        }\n    }\n});\n\n/** Scratchbook viewer */\nvar View = Backbone.View.extend({\n    defaultOptions: {\n        frame: {\n            // default frame size in cells\n            cols: 6,\n            rows: 3\n        },\n        rows: 1000, // maximum number of rows\n        cell: 130, // cell size in px\n        margin: 5, // margin between frames\n        scroll: 5, // scroll speed\n        top_min: 40, // top margin\n        frame_max: 9, // maximum number of frames\n        visible: true // initial visibility\n    },\n\n    cols: 0, // number of columns\n    top: 0, // scroll/element top\n    top_max: 0, // viewport scrolling state\n    frame_z: 0, // frame z-index\n    frame_counter: 0, // frame counter\n    frame_uid: 0, // unique frame id counter\n    frame_list: {}, // list of all frames\n    frame_shadow: null, // frame shown as placeholder when moving active frames\n    visible: false, // flag indicating if scratchbook viewer is visible or not\n    event: {}, // dictionary keeping track of current event\n\n    initialize: function(options) {\n        var self = this;\n        this.options = _.defaults(options || {}, this.defaultOptions);\n        this.visible = this.options.visible;\n        this.top = this.top_max = this.options.top_min;\n        this.setElement(\n            $(\"<div/>\")\n                .addClass(\"galaxy-frame\")\n                .append($(\"<div/>\").addClass(\"frame-background\"))\n                .append($(\"<div/>\").addClass(\"frame-menu frame-scroll-up fa fa-chevron-up fa-2x\"))\n                .append($(\"<div/>\").addClass(\"frame-menu frame-scroll-down fa fa-chevron-down fa-2x\"))\n        );\n\n        // initialize shadow to guiding drag/resize events\n        this.frame_shadow = new Backbone.View({\n            el: $(\"<div/>\").addClass(\"corner frame-shadow\")\n        });\n        this.$el.append(this.frame_shadow.$el);\n        this._frameInit(this.frame_shadow, \"#frame-shadow\");\n        this._frameResize(this.frame_shadow, { width: 0, height: 0 });\n        this.frame_list[\"#frame-shadow\"] = this.frame_shadow;\n\n        // initialize panel\n        this.visible ? this.show() : this.hide();\n        this._panelRefresh();\n        $(window).resize(() => {\n            self.visible && self._panelRefresh();\n        });\n    },\n\n    /** Render */\n    render: function() {\n        this.$(\".frame-scroll-up\")[(this.top != this.options.top_min && \"show\") || \"hide\"]();\n        this.$(\".frame-scroll-down\")[(this.top != this.top_max && \"show\") || \"hide\"]();\n    },\n\n    /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  url     : loaded into an iframe\n     *  content : content is treated as a function or raw HTML, function is passed a single\n     *              argument that is the frame's content DOM element\n     */\n    add: function(options) {\n        if (this.frame_counter >= this.options.frame_max) {\n            Galaxy.modal.show({\n                title: \"Warning\",\n                body: `You have reached the maximum number of allowed frames (${this.options.frame_max}).`,\n                buttons: {\n                    Close: function() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n        } else {\n            var frame_id = `#frame-${this.frame_uid++}`;\n            if ($(frame_id).length !== 0) {\n                Galaxy.modal.show({\n                    title: \"Error\",\n                    body: \"This frame already exists. This page might contain multiple frame managers.\",\n                    buttons: {\n                        Close: function() {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            } else {\n                // initialize new frame elements\n                this.top = this.options.top_min;\n                var frame = new FrameView(options);\n                this.$el.append(frame.$el);\n\n                // set dimensions\n                options.width = this._toPixelCoord(\"width\", this.options.frame.cols);\n                options.height = this._toPixelCoord(\"height\", this.options.frame.rows);\n\n                // set default z-index and add to ui and frame list\n                this.frame_z = parseInt(frame.$el.css(\"z-index\"));\n                this.frame_list[frame_id] = frame;\n                this.frame_counter++;\n                this._frameInit(frame, frame_id);\n                this._frameResize(frame, {\n                    width: options.width,\n                    height: options.height\n                });\n                this._frameInsert(frame, { top: 0, left: 0 }, true);\n                !this.visible && this.show();\n                this.trigger(\"add\");\n            }\n        }\n    },\n\n    /** Remove a frame */\n    del: function(frame) {\n        var self = this;\n        var $frame = frame.$el;\n        $frame.fadeOut(\"fast\", () => {\n            $frame.remove();\n            delete self.frame_list[frame.id];\n            self.frame_counter--;\n            self._panelRefresh(true);\n            self._panelAnimationComplete();\n            self.trigger(\"remove\");\n        });\n    },\n\n    /** Show panel */\n    show: function() {\n        this.visible = true;\n        this.$el.fadeIn(\"fast\");\n        this.trigger(\"show\");\n    },\n\n    /** Hide panel */\n    hide: function() {\n        if (!this.event.type) {\n            this.visible = false;\n            this.$el.fadeOut(\"fast\", function() {\n                $(this).hide();\n            });\n            this.trigger(\"hide\");\n        }\n    },\n\n    /** Returns the number of frames */\n    length: function() {\n        return this.frame_counter;\n    },\n\n    /*\n        EVENT HANDLING\n    */\n    events: {\n        // global frame events\n        mousemove: \"_eventFrameMouseMove\",\n        mouseup: \"_eventFrameMouseUp\",\n        mouseleave: \"_eventFrameMouseUp\",\n        mousewheel: \"_eventPanelScroll\",\n        DOMMouseScroll: \"_eventPanelScroll\",\n\n        // events fixed to elements\n        \"mousedown .frame\": \"_eventFrameMouseDown\",\n        \"mousedown .frame-background\": \"_eventHide\",\n        \"mousedown .frame-scroll-up\": \"_eventPanelScroll_up\",\n        \"mousedown .frame-scroll-down\": \"_eventPanelScroll_down\",\n        \"mousedown .f-close\": \"_eventFrameClose\"\n    },\n\n    /** Start drag/resize event */\n    _eventFrameMouseDown: function(e) {\n        $(\".tooltip\").hide();\n        if (!this.event.type) {\n            if ($(e.target).hasClass(\"f-header\") || $(e.target).hasClass(\"f-title\")) {\n                this.event.type = \"drag\";\n            }\n            if ($(e.target).hasClass(\"f-resize\")) {\n                this.event.type = \"resize\";\n            }\n            if (this.event.type) {\n                e.preventDefault();\n                this.event.target = this._frameIdentify(e.target);\n                this.event.xy = {\n                    x: e.originalEvent.pageX,\n                    y: e.originalEvent.pageY\n                };\n                this._frameDragStart(this.event.target);\n            }\n        }\n    },\n\n    /** Processes drag/resize events */\n    _eventFrameMouseMove: function(e) {\n        if (this.event.type) {\n            // get mouse motion and delta\n            var event_xy_new = {\n                x: e.originalEvent.pageX,\n                y: e.originalEvent.pageY\n            };\n            var event_xy_delta = {\n                x: event_xy_new.x - this.event.xy.x,\n                y: event_xy_new.y - this.event.xy.y\n            };\n            this.event.xy = event_xy_new;\n\n            // get current screen position and size of frame\n            var p = this._frameScreen(this.event.target);\n\n            // drag/resize event\n            if (this.event.type == \"resize\") {\n                p.width += event_xy_delta.x;\n                p.height += event_xy_delta.y;\n                var min_dim = this.options.cell - this.options.margin - 1;\n                p.width = Math.max(p.width, min_dim);\n                p.height = Math.max(p.height, min_dim);\n                this._frameResize(this.event.target, p);\n                p.width = this._toGridCoord(\"width\", p.width) + 1;\n                p.height = this._toGridCoord(\"height\", p.height) + 1;\n                p.width = this._toPixelCoord(\"width\", p.width);\n                p.height = this._toPixelCoord(\"height\", p.height);\n                this._frameResize(this.frame_shadow, p);\n                this._frameInsert(this.frame_shadow, {\n                    top: this._toGridCoord(\"top\", p.top),\n                    left: this._toGridCoord(\"left\", p.left)\n                });\n            } else if (this.event.type == \"drag\") {\n                p.left += event_xy_delta.x;\n                p.top += event_xy_delta.y;\n                this._frameOffset(this.event.target, p);\n                var l = {\n                    top: this._toGridCoord(\"top\", p.top),\n                    left: this._toGridCoord(\"left\", p.left)\n                };\n                l.left !== 0 && l.left++;\n                this._frameInsert(this.frame_shadow, l);\n            }\n        }\n    },\n\n    /** Stop drag/resize events */\n    _eventFrameMouseUp: function(e) {\n        if (this.event.type) {\n            this._frameDragStop(this.event.target);\n            this.event.type = null;\n        }\n    },\n\n    /** Destroy a frame */\n    _eventFrameClose: function(e) {\n        if (!this.event.type) {\n            e.preventDefault();\n            this.del(this._frameIdentify(e.target));\n        }\n    },\n\n    /** Hide all frames */\n    _eventHide: function(e) {\n        !this.event.type && this.hide();\n    },\n\n    /** Fired when scrolling occurs on panel */\n    _eventPanelScroll: function(e) {\n        if (!this.event.type && this.visible) {\n            // Stop propagation if scrolling is happening inside a frame.\n            // TODO: could propagate scrolling if at top/bottom of frame.\n            var frames = $(e.srcElement).parents(\".frame\");\n            if (frames.length !== 0) {\n                e.stopPropagation();\n            } else {\n                e.preventDefault();\n                this._panelScroll(e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3);\n            }\n        }\n    },\n\n    /** Handle scroll up event */\n    _eventPanelScroll_up: function(e) {\n        if (!this.event.type) {\n            e.preventDefault();\n            this._panelScroll(-this.options.scroll);\n        }\n    },\n\n    /** Handle scroll down */\n    _eventPanelScroll_down: function(e) {\n        if (!this.event.type) {\n            e.preventDefault();\n            this._panelScroll(this.options.scroll);\n        }\n    },\n\n    /*\n        FRAME EVENTS SUPPORT\n    */\n\n    /** Identify the target frame */\n    _frameIdentify: function(target) {\n        return this.frame_list[\n            `#${$(target)\n                .closest(\".frame\")\n                .attr(\"id\")}`\n        ];\n    },\n\n    /** Provides drag support */\n    _frameDragStart: function(frame) {\n        this._frameFocus(frame, true);\n        var p = this._frameScreen(frame);\n        this._frameResize(this.frame_shadow, p);\n        this._frameGrid(this.frame_shadow, frame.grid_location);\n        frame.grid_location = null;\n        this.frame_shadow.$el.show();\n        $(\".f-cover\").show();\n    },\n\n    /** Removes drag support */\n    _frameDragStop: function(frame) {\n        this._frameFocus(frame, false);\n        var p = this._frameScreen(this.frame_shadow);\n        this._frameResize(frame, p);\n        this._frameGrid(frame, this.frame_shadow.grid_location, true);\n        this.frame_shadow.grid_location = null;\n        this.frame_shadow.$el.hide();\n        $(\".f-cover\").hide();\n        this._panelAnimationComplete();\n    },\n\n    /*\n        GRID/PIXEL CONVERTER\n    */\n\n    /** Converts a pixel to a grid dimension */\n    _toGridCoord: function(type, px) {\n        var sign = type == \"width\" || type == \"height\" ? 1 : -1;\n        type == \"top\" && (px -= this.top);\n        return parseInt((px + sign * this.options.margin) / this.options.cell, 10);\n    },\n\n    /** Converts a grid to a pixels dimension */\n    _toPixelCoord: function(type, g) {\n        var sign = type == \"width\" || type == \"height\" ? 1 : -1;\n        var px = g * this.options.cell - sign * this.options.margin;\n        type == \"top\" && (px += this.top);\n        return px;\n    },\n\n    /** Converts a pixel to a grid coordinate set */\n    _toGrid: function(px) {\n        return {\n            top: this._toGridCoord(\"top\", px.top),\n            left: this._toGridCoord(\"left\", px.left),\n            width: this._toGridCoord(\"width\", px.width),\n            height: this._toGridCoord(\"height\", px.height)\n        };\n    },\n\n    /** Converts a pixel to a grid coordinate set */\n    _toPixel: function(g) {\n        return {\n            top: this._toPixelCoord(\"top\", g.top),\n            left: this._toPixelCoord(\"left\", g.left),\n            width: this._toPixelCoord(\"width\", g.width),\n            height: this._toPixelCoord(\"height\", g.height)\n        };\n    },\n\n    /* \n        COLLISION DETECTION\n    */\n\n    /** Check collisions for a grid coordinate set */\n    _isCollision: function(g) {\n        function is_collision_pair(a, b) {\n            return !(\n                a.left > b.left + b.width - 1 ||\n                a.left + a.width - 1 < b.left ||\n                a.top > b.top + b.height - 1 ||\n                a.top + a.height - 1 < b.top\n            );\n        }\n        for (var i in this.frame_list) {\n            var frame = this.frame_list[i];\n            if (frame.grid_location !== null && is_collision_pair(g, frame.grid_location)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /** Return location/grid rank */\n    _locationRank: function(loc) {\n        return loc.top * this.cols + loc.left;\n    },\n\n    /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n    /** Refresh panel */\n    _panelRefresh: function(animate) {\n        this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n        this._frameInsert(null, null, animate);\n    },\n\n    /** Complete panel animation / frames not moving */\n    _panelAnimationComplete: function() {\n        var self = this;\n        $(\".frame\")\n            .promise()\n            .done(() => {\n                self._panelScroll(0, true);\n            });\n    },\n\n    /** Scroll panel */\n    _panelScroll: function(delta, animate) {\n        var top_new = this.top - this.options.scroll * delta;\n        top_new = Math.max(top_new, this.top_max);\n        top_new = Math.min(top_new, this.options.top_min);\n        if (this.top != top_new) {\n            for (var i in this.frame_list) {\n                var frame = this.frame_list[i];\n                if (frame.grid_location !== null) {\n                    var screen_location = {\n                        top: frame.screen_location.top - (this.top - top_new),\n                        left: frame.screen_location.left\n                    };\n                    this._frameOffset(frame, screen_location, animate);\n                }\n            }\n            this.top = top_new;\n        }\n        this.render();\n    },\n\n    /*\n        FRAME FUNCTIONS\n    */\n\n    /** Initialize a new frame */\n    _frameInit: function(frame, id) {\n        frame.id = id;\n        frame.screen_location = {};\n        frame.grid_location = {};\n        frame.grid_rank = null;\n        frame.$el.attr(\"id\", id.substring(1));\n    },\n\n    /** Insert frame at given location */\n    _frameInsert: function(frame, new_loc, animate) {\n        var self = this;\n        var place_list = [];\n        if (frame) {\n            frame.grid_location = null;\n            place_list.push([frame, this._locationRank(new_loc)]);\n        }\n        _.each(this.frame_list, f => {\n            if (f.grid_location !== null) {\n                f.grid_location = null;\n                place_list.push([f, f.grid_rank]);\n            }\n        });\n        place_list.sort((a, b) => (a[1] < b[1] ? -1 : a[1] > b[1] ? 1 : 0));\n        _.each(place_list, place => {\n            self._framePlace(place[0], animate);\n        });\n        this.top_max = 0;\n        _.each(this.frame_list, f => {\n            if (f.grid_location !== null) {\n                self.top_max = Math.max(self.top_max, f.grid_location.top + f.grid_location.height);\n            }\n        });\n        this.top_max = $(window).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n        this.top_max = Math.min(this.top_max, this.options.top_min);\n        this.render();\n    },\n\n    /** Naive frame placement */\n    _framePlace: function(frame, animate) {\n        frame.grid_location = null;\n        var g = this._toGrid(this._frameScreen(frame));\n        var done = false;\n        for (var i = 0; i < this.options.rows; i++) {\n            for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n                g.top = i;\n                g.left = j;\n                if (!this._isCollision(g)) {\n                    done = true;\n                    break;\n                }\n            }\n            if (done) {\n                break;\n            }\n        }\n        if (done) {\n            this._frameGrid(frame, g, animate);\n        } else {\n            console.log(\"Grid dimensions exceeded.\");\n        }\n    },\n\n    /** Handle frame focussing */\n    _frameFocus: function(frame, has_focus) {\n        frame.$el.css(\"z-index\", this.frame_z + (has_focus ? 1 : 0));\n    },\n\n    /** New left/top position frame */\n    _frameOffset: function(frame, p, animate) {\n        frame.screen_location.left = p.left;\n        frame.screen_location.top = p.top;\n        if (animate) {\n            this._frameFocus(frame, true);\n            var self = this;\n            frame.$el.animate({ top: p.top, left: p.left }, \"fast\", () => {\n                self._frameFocus(frame, false);\n            });\n        } else {\n            frame.$el.css({ top: p.top, left: p.left });\n        }\n    },\n\n    /** Resize frame */\n    _frameResize: function(frame, p) {\n        frame.$el.css({ width: p.width, height: p.height });\n        frame.screen_location.width = p.width;\n        frame.screen_location.height = p.height;\n    },\n\n    /** Push frame to new grid location */\n    _frameGrid: function(frame, l, animate) {\n        frame.grid_location = l;\n        this._frameOffset(frame, this._toPixel(l), animate);\n        frame.grid_rank = this._locationRank(l);\n    },\n\n    /** Get frame dimensions */\n    _frameScreen: function(frame) {\n        var p = frame.screen_location;\n        return {\n            top: p.top,\n            left: p.left,\n            width: p.width,\n            height: p.height\n        };\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-frames.js","//=============================================================================\n/**\n * backbone model for icon buttons\n */\nvar IconButton = Backbone.Model.extend({\n    defaults: {\n        title: \"\",\n        icon_class: \"\",\n        on_click: null,\n        menu_options: null,\n        is_menu_button: true,\n        id: null,\n        href: null,\n        target: null,\n        enabled: true,\n        visible: true,\n        tooltip_config: {}\n    }\n});\n\n/**\n *  backbone view for icon buttons\n */\nvar IconButtonView = Backbone.View.extend({\n    initialize: function() {\n        // better rendering this way\n        this.model.attributes.tooltip_config = { placement: \"bottom\" };\n        this.model.bind(\"change\", this.render, this);\n    },\n\n    render: function() {\n        // hide tooltip\n        this.$el.tooltip(\"hide\");\n\n        var new_elem = this.template(this.model.toJSON());\n        // configure tooltip\n        new_elem.tooltip(this.model.get(\"tooltip_config\"));\n        this.$el.replaceWith(new_elem);\n        this.setElement(new_elem);\n        return this;\n    },\n\n    events: {\n        click: \"click\"\n    },\n\n    click: function(event) {\n        // if on_click pass to that function\n        if (_.isFunction(this.model.get(\"on_click\"))) {\n            this.model.get(\"on_click\")(event);\n            return false;\n        }\n        // otherwise, bubble up ( to href or whatever )\n        return true;\n    },\n\n    // generate html element\n    template: function(options) {\n        var buffer = `title=\"${options.title}\" class=\"icon-button`;\n\n        if (options.is_menu_button) {\n            buffer += \" menu-button\";\n        }\n\n        buffer += ` ${options.icon_class}`;\n\n        if (!options.enabled) {\n            buffer += \"_disabled\";\n        }\n\n        // close class tag\n        buffer += '\"';\n\n        if (options.id) {\n            buffer += ` id=\"${options.id}\"`;\n        }\n\n        buffer += ` href=\"${options.href}\"`;\n        // add target for href\n        if (options.target) {\n            buffer += ` target=\"${options.target}\"`;\n        }\n        // set visibility\n        if (!options.visible) {\n            buffer += ' style=\"display: none;\"';\n        }\n\n        // enabled/disabled\n        if (options.enabled) {\n            buffer = `<a ${buffer}/>`;\n        } else {\n            buffer = `<span ${buffer}/>`;\n        }\n\n        // return element\n        return $(buffer);\n    }\n});\n\n// define collection\nvar IconButtonCollection = Backbone.Collection.extend({\n    model: IconButton\n});\n\n/**\n * menu with multiple icon buttons\n * views are not needed nor used for individual buttons\n */\nvar IconButtonMenuView = Backbone.View.extend({\n    tagName: \"div\",\n\n    initialize: function() {\n        this.render();\n    },\n\n    render: function() {\n        // initialize icon buttons\n        var self = this;\n        this.collection.each(button => {\n            // create and add icon button to menu\n            var elt = $(\"<a/>\")\n                .attr(\"href\", \"javascript:void(0)\")\n                .attr(\"title\", button.attributes.title)\n                .addClass(\"icon-button menu-button\")\n                .addClass(button.attributes.icon_class)\n                .appendTo(self.$el)\n                .click(button.attributes.on_click);\n\n            // configure tooltip\n            if (button.attributes.tooltip_config) {\n                elt.tooltip(button.attributes.tooltip_config);\n            }\n\n            // add popup menu to icon\n            var menu_options = button.get(\"options\");\n            if (menu_options) {\n                make_popupmenu(elt, menu_options);\n            }\n        });\n\n        // return\n        return this;\n    }\n});\n\n/**\n * Returns an IconButtonMenuView for the provided configuration.\n * Configuration is a list of dictionaries where each dictionary\n * defines an icon button. Each dictionary must have the following\n * elements: icon_class, title, and on_click.\n */\nvar create_icon_buttons_menu = (config, global_config) => {\n    // initialize global configuration\n    if (!global_config) global_config = {};\n\n    // create and initialize menu\n    var buttons = new IconButtonCollection(\n        _.map(config, button_config => new IconButton(_.extend(button_config, global_config)))\n    );\n\n    // return menu\n    return new IconButtonMenuView({ collection: buttons });\n};\n\n//=============================================================================\nexport default {\n    IconButton: IconButton,\n    IconButtonView: IconButtonView,\n    IconButtonCollection: IconButtonCollection,\n    IconButtonMenuView: IconButtonMenuView,\n    create_icon_buttons_menu: create_icon_buttons_menu\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/icon-button.js","//==============================================================================\nvar LOGGING_FNS = [\"log\", \"debug\", \"info\", \"warn\", \"error\", \"metric\"];\n/** adds logging functions to an obj.prototype (or obj directly) adding a namespace for filtering\n *  @param {Object} obj\n *  @param {String} namespace\n */\nfunction addLogging(obj, namespace) {\n    var addTo = obj.prototype !== undefined ? obj.prototype : obj;\n    if (namespace !== undefined) {\n        addTo._logNamespace = namespace;\n    }\n    //yagni?: without this, may not capture Galaxy.config.debug and add Galaxy.logger properly\n    // if( window.Galaxy && window.Galaxy.config && window.Galaxy.config.debug ){\n    //     addTo.logger = window.Galaxy.logger;\n    // }\n\n    // give the object each\n    LOGGING_FNS.forEach(logFn => {\n        addTo[logFn] = function() {\n            if (!this.logger) {\n                return undefined;\n            }\n            if (this.logger.emit) {\n                return this.logger.emit(logFn, this._logNamespace, arguments);\n            }\n            if (this.logger[logFn]) {\n                //TODO:! there has to be a way to get the lineno/file into this\n                // http://stackoverflow.com/questions/13815640/a-proper-wrapper-for-console-log-with-correct-line-number\n                // http://www.paulirish.com/2009/log-a-lightweight-wrapper-for-consolelog/\n                return this.logger[logFn].apply(this.logger, arguments);\n            }\n            return undefined;\n        };\n    });\n    return obj;\n}\n\n//==============================================================================\nexport default addLogging;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/add-logging.js","// =============================================================================\n/**\n * view for a popup menu\n */\nvar PopupMenu = Backbone.View.extend({\n    //TODO: maybe better as singleton off the Galaxy obj\n    /** Cache the desired button element and options, set up the button click handler\n     *  NOTE: attaches this view as HTML/jQ data on the button for later use.\n     */\n    initialize: function($button, options) {\n        // default settings\n        this.$button = $button;\n        if (!this.$button.length) {\n            this.$button = $(\"<div/>\");\n        }\n        this.options = options || [];\n        this.$button.data(\"popupmenu\", this);\n\n        // set up button click -> open menu behavior\n        var menu = this;\n        this.$button.click(event => {\n            // if there's already a menu open, remove it\n            $(\".popmenu-wrapper\").remove();\n            menu._renderAndShow(event);\n            return false;\n        });\n    },\n\n    // render the menu, append to the page body at the click position, and set up the 'click-away' handlers, show\n    _renderAndShow: function(clickEvent) {\n        this.render();\n        this.$el\n            .appendTo(\"body\")\n            .css(this._getShownPosition(clickEvent))\n            .show();\n        this._setUpCloseBehavior();\n    },\n\n    // render the menu\n    // this menu doesn't attach itself to the DOM ( see _renderAndShow )\n    render: function() {\n        // render the menu body absolute and hidden, fill with template\n        this.$el\n            .addClass(\"popmenu-wrapper\")\n            .hide()\n            .css({ position: \"absolute\" })\n            .html(this.template(this.$button.attr(\"id\"), this.options));\n\n        // set up behavior on each link/anchor elem\n        if (this.options.length) {\n            var menu = this;\n            //precondition: there should be one option per li\n            this.$el.find(\"li\").each(function(i, li) {\n                var option = menu.options[i];\n\n                // if the option has 'func', call that function when the anchor is clicked\n                if (option.func) {\n                    $(this)\n                        .children(\"a.popupmenu-option\")\n                        .click(event => {\n                            option.func.call(menu, event, option);\n                            // We must preventDefault otherwise clicking \"cancel\"\n                            // on a purge or something still navigates and causes\n                            // the action.\n                            event.preventDefault();\n                            // bubble up so that an option click will call the close behavior\n                        });\n                }\n            });\n        }\n        return this;\n    },\n\n    template: function(id, options) {\n        return ['<ul id=\"', id, '-menu\" class=\"dropdown-menu\">', this._templateOptions(options), \"</ul>\"].join(\"\");\n    },\n\n    _templateOptions: function(options) {\n        if (!options.length) {\n            return \"<li>(no options)</li>\";\n        }\n        return _.map(options, option => {\n            if (option.divider) {\n                return '<li class=\"divider\"></li>';\n            } else if (option.header) {\n                return ['<li class=\"head\"><a href=\"javascript:void(0);\">', option.html, \"</a></li>\"].join(\"\");\n            }\n            var href = option.href || \"javascript:void(0);\";\n            var target = option.target ? ` target=\"${option.target}\"` : \"\";\n\n            var check = option.checked ? '<span class=\"fa fa-check\"></span>' : \"\";\n\n            return [\n                '<li><a class=\"popupmenu-option\" href=\"',\n                href,\n                '\"',\n                target,\n                \">\",\n                check,\n                option.html,\n                \"</a></li>\"\n            ].join(\"\");\n        }).join(\"\");\n    },\n\n    // get the absolute position/offset for the menu\n    _getShownPosition: function(clickEvent) {\n        // display menu horiz. centered on click...\n        var menuWidth = this.$el.width();\n        var x = clickEvent.pageX - menuWidth / 2;\n\n        // adjust to handle horiz. scroll and window dimensions ( draw entirely on visible screen area )\n        x = Math.min(x, $(document).scrollLeft() + $(window).width() - menuWidth - 5);\n        x = Math.max(x, $(document).scrollLeft() + 5);\n        return {\n            top: clickEvent.pageY,\n            left: x\n        };\n    },\n\n    // bind an event handler to all available frames so that when anything is clicked\n    // the menu is removed from the DOM and the event handler unbinds itself\n    _setUpCloseBehavior: function() {\n        var menu = this;\n        //TODO: alternately: focus hack, blocking overlay, jquery.blockui\n\n        // function to close popup and unbind itself\n        function closePopup(event) {\n            $(document).off(\"click.close_popup\");\n            if (window && window.parent !== window) {\n                try {\n                    $(window.parent.document).off(\"click.close_popup\");\n                } catch (err) {}\n            } else {\n                try {\n                    $(\"iframe#galaxy_main\")\n                        .contents()\n                        .off(\"click.close_popup\");\n                } catch (err) {}\n            }\n            menu.remove();\n        }\n\n        $(\"html\").one(\"click.close_popup\", closePopup);\n        if (window && window.parent !== window) {\n            try {\n                $(window.parent.document)\n                    .find(\"html\")\n                    .one(\"click.close_popup\", closePopup);\n            } catch (err) {}\n        } else {\n            try {\n                $(\"iframe#galaxy_main\")\n                    .contents()\n                    .one(\"click.close_popup\", closePopup);\n            } catch (err) {}\n        }\n    },\n\n    // add a menu option/item at the given index\n    addItem: function(item, index) {\n        // append to end if no index\n        index = index >= 0 ? index : this.options.length;\n        this.options.splice(index, 0, item);\n        return this;\n    },\n\n    // remove a menu option/item at the given index\n    removeItem: function(index) {\n        if (index >= 0) {\n            this.options.splice(index, 1);\n        }\n        return this;\n    },\n\n    // search for a menu option by its html\n    findIndexByHtml: function(html) {\n        for (var i = 0; i < this.options.length; i++) {\n            if (_.has(this.options[i], \"html\") && this.options[i].html === html) {\n                return i;\n            }\n        }\n        return null;\n    },\n\n    // search for a menu option by its html\n    findItemByHtml: function(html) {\n        return this.options[this.findIndexByHtml(html)];\n    },\n\n    // string representation\n    toString: function() {\n        return \"PopupMenu\";\n    }\n});\n/** shortcut to new for when you don't need to preserve the ref */\nPopupMenu.create = function _create($button, options) {\n    return new PopupMenu($button, options);\n};\n\n// -----------------------------------------------------------------------------\n// the following class functions are bridges from the original make_popupmenu and make_popup_menus\n// to the newer backbone.js PopupMenu\n\n/** Create a PopupMenu from simple map initial_options activated by clicking button_element.\n *      Converts initial_options to object array used by PopupMenu.\n *  @param {jQuery|DOMElement} button_element element which, when clicked, activates menu\n *  @param {Object} initial_options map of key -> values, where\n *      key is option text, value is fn to call when option is clicked\n *  @returns {PopupMenu} the PopupMenu created\n */\nPopupMenu.make_popupmenu = (button_element, initial_options) => {\n    var convertedOptions = [];\n    _.each(initial_options, (optionVal, optionKey) => {\n        var newOption = { html: optionKey };\n\n        // keys with null values indicate: header\n        if (optionVal === null) {\n            // !optionVal? (null only?)\n            newOption.header = true;\n\n            // keys with function values indicate: a menu option\n        } else if (jQuery.type(optionVal) === \"function\") {\n            newOption.func = optionVal;\n        }\n        //TODO:?? any other special optionVals?\n        // there was no divider option originally\n        convertedOptions.push(newOption);\n    });\n    return new PopupMenu($(button_element), convertedOptions);\n};\n\n/** Find all anchors in $parent (using selector) and covert anchors into a PopupMenu options map.\n *  @param {jQuery} $parent the element that contains the links to convert to options\n *  @param {String} selector jq selector string to find links\n *  @returns {Object[]} the options array to initialize a PopupMenu\n */\n//TODO: lose parent and selector, pass in array of links, use map to return options\nPopupMenu.convertLinksToOptions = ($parent, selector) => {\n    $parent = $($parent);\n    selector = selector || \"a\";\n    var options = [];\n    $parent.find(selector).each((elem, i) => {\n        var option = {};\n        var $link = $(elem);\n\n        // convert link text to the option text (html) and the href into the option func\n        option.html = $link.text();\n        if ($link.attr(\"href\")) {\n            var linkHref = $link.attr(\"href\");\n            var linkTarget = $link.attr(\"target\");\n            var confirmText = $link.attr(\"confirm\");\n\n            option.func = () => {\n                // if there's a \"confirm\" attribute, throw up a confirmation dialog, and\n                //  if the user cancels - do nothing\n                if (confirmText && !confirm(confirmText)) {\n                    return;\n                }\n\n                // if there's no confirm attribute, or the user accepted the confirm dialog:\n                switch (linkTarget) {\n                    // relocate the center panel\n                    case \"_parent\":\n                        window.parent.location = linkHref;\n                        break;\n\n                    // relocate the entire window\n                    case \"_top\":\n                        window.top.location = linkHref;\n                        break;\n\n                    // relocate this panel\n                    default:\n                        window.location = linkHref;\n                }\n            };\n        }\n        options.push(option);\n    });\n    return options;\n};\n\n/** Create a single popupmenu from existing DOM button and anchor elements\n *  @param {jQuery} $buttonElement the element that when clicked will open the menu\n *  @param {jQuery} $menuElement the element that contains the anchors to convert into a menu\n *  @param {String} menuElementLinkSelector jq selector string used to find anchors to be made into menu options\n *  @returns {PopupMenu} the PopupMenu (Backbone View) that can render, control the menu\n */\nPopupMenu.fromExistingDom = ($buttonElement, $menuElement, menuElementLinkSelector) => {\n    $buttonElement = $($buttonElement);\n    $menuElement = $($menuElement);\n    var options = PopupMenu.convertLinksToOptions($menuElement, menuElementLinkSelector);\n    // we're done with the menu (having converted it to an options map)\n    $menuElement.remove();\n    return new PopupMenu($buttonElement, options);\n};\n\n/** Create all popupmenus within a document or a more specific element\n *  @param {DOMElement} parent the DOM element in which to search for popupmenus to build (defaults to document)\n *  @param {String} menuSelector jq selector string to find popupmenu menu elements (defaults to \"div[popupmenu]\")\n *  @param {Function} buttonSelectorBuildFn the function to build the jq button selector.\n *      Will be passed $menuElement, parent.\n *      (Defaults to return '#' + $menuElement.attr( 'popupmenu' ); )\n *  @returns {PopupMenu[]} array of popupmenus created\n */\nPopupMenu.make_popup_menus = (parent, menuSelector, buttonSelectorBuildFn) => {\n    parent = parent || document;\n    // orig. Glx popupmenu menus have a (non-std) attribute 'popupmenu'\n    //  which contains the id of the button that activates the menu\n    menuSelector = menuSelector || \"div[popupmenu]\";\n    // default to (orig. Glx) matching button to menu by using the popupmenu attr of the menu as the id of the button\n    buttonSelectorBuildFn = buttonSelectorBuildFn || (($menuElement, parent) => `#${$menuElement.attr(\"popupmenu\")}`);\n\n    // aggregate and return all PopupMenus\n    var popupMenusCreated = [];\n    $(parent)\n        .find(menuSelector)\n        .each(function() {\n            var $menuElement = $(this);\n\n            var $buttonElement = $(parent).find(buttonSelectorBuildFn($menuElement, parent));\n\n            popupMenusCreated.push(PopupMenu.fromDom($buttonElement, $menuElement));\n            $buttonElement.addClass(\"popup\");\n        });\n    return popupMenusCreated;\n};\n\n// =============================================================================\nexport default PopupMenu;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/popup-menu.js","/**\n *  Renders tabs e.g. used in the charts editor, behaves similar to repeat and section rendering\n */\nimport Utils from \"utils/utils\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.collection = new Backbone.Collection();\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                onchange: null,\n                visible: true\n            }).set(options);\n        this.setElement($(this._template()));\n        this.$nav = this.$(\".tab-navigation\");\n        this.$content = this.$(\".tab-content\");\n        this.$el.on(\"click\", () => {\n            $(\".tooltip\").hide();\n        });\n        this.render();\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.listenTo(this.collection, \"add\", this._add, this);\n        this.listenTo(this.collection, \"remove\", this._remove, this);\n        this.listenTo(this.collection, \"change\", this._change, this);\n        this.listenTo(this.collection, \"reset\", this._reset, this);\n        this.listenTo(this.collection, \"add remove reset\", this.render, this);\n    },\n\n    render: function() {\n        var id = this.model.get(\"current\");\n        id = this.$(`#${id}`).length > 0 ? id : this.first();\n        if (id) {\n            this.$nav.children().removeClass(\"active\");\n            this.$content.children().removeClass(\"active\");\n            this.$(`#tab-${id}`).addClass(\"active\");\n            this.$(`#${id}`).addClass(\"active\");\n        }\n        this.$el[this.model.get(\"visible\") ? \"fadeIn\" : \"fadeOut\"](\"fast\");\n        this.$nav[this.size() > 1 ? \"show\" : \"hide\"]();\n    },\n\n    /** Returns tab id for currently shown tab */\n    current: function() {\n        return this.model.get(\"current\");\n    },\n\n    /** Show tab view and highlight a tab by id */\n    show: function(id) {\n        if (id) {\n            this.model.set({ current: id, visible: true });\n            this.model.get(\"onchange\") && this.model.get(\"onchange\")(id);\n        }\n    },\n\n    /** Hide tab view */\n    hide: function() {\n        this.model.set(\"visible\", false);\n    },\n\n    /** Returns first tab */\n    first: function() {\n        var model = this.collection.first();\n        return model && model.id;\n    },\n\n    /** Returns current number of tabs */\n    size: function() {\n        return this.collection.length;\n    },\n\n    /** Adds a new tab */\n    add: function(options) {\n        this.collection.add(options);\n    },\n\n    /** Delete tab */\n    del: function(id) {\n        this.collection.remove(id);\n    },\n\n    /** Delete all tabs */\n    delAll: function() {\n        this.collection.reset();\n    },\n\n    /** Show tab */\n    showTab: function(id) {\n        this.collection.get(id).set(\"hidden\", false);\n    },\n\n    /** Hide tab */\n    hideTab: function(id) {\n        this.collection.get(id).set(\"hidden\", true);\n    },\n\n    /** Adds a new tab */\n    _add: function(tab_model) {\n        var self = this;\n        var options = tab_model.attributes;\n        this.$content.append(\n            $(\"<div/>\")\n                .attr(\"id\", options.id)\n                .addClass(\"tab-pane\")\n                .append(options.$el)\n        );\n        this.$nav.append(\n            $(this._template_tab(options))\n                .show()\n                .tooltip({\n                    title: options.tooltip,\n                    placement: \"bottom\",\n                    container: self.$el\n                })\n                .on(\"click\", e => {\n                    e.preventDefault();\n                    self.show(options.id);\n                })\n        );\n        if (this.size() == 1) {\n            this.show(options.id);\n        }\n    },\n\n    /** Delete tab */\n    _remove: function(tab_model) {\n        this.$(`#tab-${tab_model.id}`).remove();\n        this.$(`#${tab_model.id}`).remove();\n    },\n\n    /** Reset collection */\n    _reset: function() {\n        this.$nav.empty();\n        this.$content.empty();\n    },\n\n    /** Change tab */\n    _change: function(tab_model) {\n        this.$(`#tab-${tab_model.id}`)[tab_model.get(\"hidden\") ? \"hide\" : \"show\"]();\n    },\n\n    /** Main template */\n    _template: function() {\n        return $(\"<div/>\")\n            .addClass(\"ui-tabs tabbable tabs-left\")\n            .append($(\"<ul/>\").addClass(\"tab-navigation nav nav-tabs\"))\n            .append($(\"<div/>\").addClass(\"tab-content\"));\n    },\n\n    /** Tab template */\n    _template_tab: function(options) {\n        var $tmpl = $(\"<li/>\")\n            .addClass(\"tab-element\")\n            .attr(\"id\", `tab-${options.id}`)\n            .append($(\"<a/>\").attr(\"id\", `tab-title-link-${options.id}`));\n        var $href = $tmpl.find(\"a\");\n        options.icon &&\n            $href.append(\n                $(\"<i/>\")\n                    .addClass(\"tab-icon fa\")\n                    .addClass(options.icon)\n            );\n        $href.append(\n            $(\"<span/>\")\n                .attr(\"id\", `tab-title-text-${options.id}`)\n                .addClass(\"tab-title-text\")\n                .append(options.title)\n        );\n        return $tmpl;\n    }\n});\n\nexport default { View: View };\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-tabs.js","import * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\nimport baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"user\";\n//==============================================================================\n/** @class Model for a Galaxy user (including anonymous users).\n *  @name User\n */\nvar User = Backbone.Model.extend(baseMVC.LoggableMixin).extend(\n    /** @lends User.prototype */ {\n        _logNamespace: logNamespace,\n\n        /** API location for this resource */\n        urlRoot: function() {\n            return `${Galaxy.root}api/users`;\n        },\n\n        /** Model defaults\n         *  Note: don't check for anon-users with the username as the default is '(anonymous user)'\n         *      a safer method is if( !user.get( 'email' ) ) -> anon user\n         */\n        defaults: /** @lends User.prototype */ {\n            id: null,\n            username: `(${_l(\"anonymous user\")})`,\n            email: \"\",\n            total_disk_usage: 0,\n            nice_total_disk_usage: \"\",\n            quota_percent: null,\n            is_admin: false\n        },\n\n        /** Set up and bind events\n         *  @param {Object} data Initial model data.\n         */\n        initialize: function(data) {\n            this.log(\"User.initialize:\", data);\n\n            this.on(\"loaded\", function(model, resp) {\n                this.log(`${this} has loaded:`, model, resp);\n            });\n            this.on(\"change\", function(model, data) {\n                this.log(`${this} has changed:`, model, data.changes);\n            });\n        },\n\n        isAnonymous: function() {\n            return !this.get(\"email\");\n        },\n\n        isAdmin: function() {\n            return this.get(\"is_admin\");\n        },\n\n        /** Load a user with the API using an id.\n         *      If getting an anonymous user or no access to a user id, pass the User.CURRENT_ID_STR\n         *      (e.g. 'current') and the API will return the current transaction's user data.\n         *  @param {String} idOrCurrent encoded user id or the User.CURRENT_ID_STR\n         *  @param {Object} options hash to pass to Backbone.Model.fetch. Can contain success, error fns.\n         *  @fires loaded when the model has been loaded from the API, passing the newModel and AJAX response.\n         */\n        loadFromApi: function(idOrCurrent, options) {\n            idOrCurrent = idOrCurrent || User.CURRENT_ID_STR;\n\n            options = options || {};\n            var model = this;\n            var userFn = options.success;\n\n            /** @ignore */\n            options.success = (newModel, response) => {\n                model.trigger(\"loaded\", newModel, response);\n                if (userFn) {\n                    userFn(newModel, response);\n                }\n            };\n\n            // requests for the current user must have a sep. constructed url (fetch don't work, ma)\n            if (idOrCurrent === User.CURRENT_ID_STR) {\n                options.url = `${this.urlRoot}/${User.CURRENT_ID_STR}`;\n            }\n            return Backbone.Model.prototype.fetch.call(this, options);\n        },\n\n        /** Clears all data from the sessionStorage.\n         */\n        clearSessionStorage: function() {\n            for (var key in sessionStorage) {\n                //TODO: store these under the user key so we don't have to do this\n                // currently only history\n                if (key.indexOf(\"history:\") === 0) {\n                    sessionStorage.removeItem(key);\n                } else if (key === \"history-panel\") {\n                    sessionStorage.removeItem(key);\n                }\n            }\n        },\n\n        /** string representation */\n        toString: function() {\n            var userInfo = [this.get(\"username\")];\n            if (this.get(\"id\")) {\n                userInfo.unshift(this.get(\"id\"));\n                userInfo.push(this.get(\"email\"));\n            }\n            return `User(${userInfo.join(\":\")})`;\n        }\n    }\n);\n\n// string to send to tell server to return this transaction's user (see api/users.py)\nUser.CURRENT_ID_STR = \"current\";\n\n// class method to load the current user via the api and return that model\nUser.getCurrentUserFromApi = options => {\n    var currentUser = new User();\n    currentUser.loadFromApi(User.CURRENT_ID_STR, options);\n    return currentUser;\n};\n\n// (stub) collection for users (shouldn't be common unless admin UI)\nvar UserCollection = Backbone.Collection.extend(baseMVC.LoggableMixin).extend({\n    model: User,\n    urlRoot: function() {\n        return `${Galaxy.root}api/users`;\n    }\n    //logger  : console,\n});\n\n//==============================================================================\nexport default {\n    User: User\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/user/user-model.js","/**\n * Model, view, and controller objects for Galaxy tools and tool panel.\n */\n\nimport * as _ from \"libs/underscore\";\nimport util from \"viz/trackster/util\";\nimport data from \"mvc/dataset/data\";\nimport ToolForm from \"mvc/tool/tool-form\";\n\n/**\n * Mixin for tracking model visibility.\n */\nvar VisibilityMixin = {\n    hidden: false,\n\n    show: function() {\n        this.set(\"hidden\", false);\n    },\n\n    hide: function() {\n        this.set(\"hidden\", true);\n    },\n\n    toggle: function() {\n        this.set(\"hidden\", !this.get(\"hidden\"));\n    },\n\n    is_visible: function() {\n        return !this.attributes.hidden;\n    }\n};\n\n/**\n * A tool parameter.\n */\nvar ToolParameter = Backbone.Model.extend({\n    defaults: {\n        name: null,\n        label: null,\n        type: null,\n        value: null,\n        html: null,\n        num_samples: 5\n    },\n\n    initialize: function(options) {\n        this.attributes.html = unescape(this.attributes.html);\n    },\n\n    copy: function() {\n        return new ToolParameter(this.toJSON());\n    },\n\n    set_value: function(value) {\n        this.set(\"value\", value || \"\");\n    }\n});\n\nvar ToolParameterCollection = Backbone.Collection.extend({\n    model: ToolParameter\n});\n\n/**\n * A data tool parameter.\n */\nvar DataToolParameter = ToolParameter.extend({});\n\n/**\n * An integer tool parameter.\n */\nvar IntegerToolParameter = ToolParameter.extend({\n    set_value: function(value) {\n        this.set(\"value\", parseInt(value, 10));\n    },\n\n    /**\n     * Returns samples from a tool input.\n     */\n    get_samples: function() {\n        return d3.scale\n            .linear()\n            .domain([this.get(\"min\"), this.get(\"max\")])\n            .ticks(this.get(\"num_samples\"));\n    }\n});\n\nvar FloatToolParameter = IntegerToolParameter.extend({\n    set_value: function(value) {\n        this.set(\"value\", parseFloat(value));\n    }\n});\n\n/**\n * A select tool parameter.\n */\nvar SelectToolParameter = ToolParameter.extend({\n    /**\n     * Returns tool options.\n     */\n    get_samples: function() {\n        return _.map(this.get(\"options\"), option => option[0]);\n    }\n});\n\n// Set up dictionary of parameter types.\nToolParameter.subModelTypes = {\n    integer: IntegerToolParameter,\n    float: FloatToolParameter,\n    data: DataToolParameter,\n    select: SelectToolParameter\n};\n\n/**\n * A Galaxy tool.\n */\nvar Tool = Backbone.Model.extend({\n    // Default attributes.\n    defaults: {\n        id: null,\n        name: null,\n        description: null,\n        target: null,\n        inputs: [],\n        outputs: []\n    },\n\n    urlRoot: `${Galaxy.root}api/tools`,\n\n    initialize: function(options) {\n        // Set parameters.\n        this.set(\n            \"inputs\",\n            new ToolParameterCollection(\n                _.map(options.inputs, p => {\n                    var p_class = ToolParameter.subModelTypes[p.type] || ToolParameter;\n                    return new p_class(p);\n                })\n            )\n        );\n    },\n\n    /**\n     *\n     */\n    toJSON: function() {\n        var rval = Backbone.Model.prototype.toJSON.call(this);\n\n        // Convert inputs to JSON manually.\n        rval.inputs = this.get(\"inputs\").map(i => i.toJSON());\n        return rval;\n    },\n\n    /**\n     * Removes inputs of a particular type; this is useful because not all inputs can be handled by\n     * client and server yet.\n     */\n    remove_inputs: function(types) {\n        var tool = this;\n\n        var incompatible_inputs = tool.get(\"inputs\").filter(input => types.indexOf(input.get(\"type\")) !== -1);\n\n        tool.get(\"inputs\").remove(incompatible_inputs);\n    },\n\n    /**\n     * Returns object copy, optionally including only inputs that can be sampled.\n     */\n    copy: function(only_samplable_inputs) {\n        var copy = new Tool(this.toJSON());\n\n        // Return only samplable inputs if flag is set.\n        if (only_samplable_inputs) {\n            var valid_inputs = new Backbone.Collection();\n            copy.get(\"inputs\").each(input => {\n                if (input.get_samples()) {\n                    valid_inputs.push(input);\n                }\n            });\n            copy.set(\"inputs\", valid_inputs);\n        }\n\n        return copy;\n    },\n\n    apply_search_results: function(results) {\n        _.indexOf(results, this.attributes.id) !== -1 ? this.show() : this.hide();\n        return this.is_visible();\n    },\n\n    /**\n     * Set a tool input's value.\n     */\n    set_input_value: function(name, value) {\n        this.get(\"inputs\")\n            .find(input => input.get(\"name\") === name)\n            .set(\"value\", value);\n    },\n\n    /**\n     * Set many input values at once.\n     */\n    set_input_values: function(inputs_dict) {\n        var self = this;\n        _.each(_.keys(inputs_dict), input_name => {\n            self.set_input_value(input_name, inputs_dict[input_name]);\n        });\n    },\n\n    /**\n     * Run tool; returns a Deferred that resolves to the tool's output(s).\n     */\n    run: function() {\n        return this._run();\n    },\n\n    /**\n     * Rerun tool using regions and a target dataset.\n     */\n    rerun: function(target_dataset, regions) {\n        return this._run({\n            action: \"rerun\",\n            target_dataset_id: target_dataset.id,\n            regions: regions\n        });\n    },\n\n    /**\n     * Returns input dict for tool's inputs.\n     */\n    get_inputs_dict: function() {\n        var input_dict = {};\n        this.get(\"inputs\").each(input => {\n            input_dict[input.get(\"name\")] = input.get(\"value\");\n        });\n        return input_dict;\n    },\n\n    /**\n     * Run tool; returns a Deferred that resolves to the tool's output(s).\n     * NOTE: this method is a helper method and should not be called directly.\n     */\n    _run: function(additional_params) {\n        // Create payload.\n        var payload = _.extend(\n            {\n                tool_id: this.id,\n                inputs: this.get_inputs_dict()\n            },\n            additional_params\n        );\n\n        // Because job may require indexing datasets, use server-side\n        // deferred to ensure that job is run. Also use deferred that\n        // resolves to outputs from tool.\n        var run_deferred = $.Deferred();\n\n        var ss_deferred = new util.ServerStateDeferred({\n            ajax_settings: {\n                url: this.urlRoot,\n                data: JSON.stringify(payload),\n                dataType: \"json\",\n                contentType: \"application/json\",\n                type: \"POST\"\n            },\n            interval: 2000,\n            success_fn: function(response) {\n                return response !== \"pending\";\n            }\n        });\n\n        // Run job and resolve run_deferred to tool outputs.\n        $.when(ss_deferred.go()).then(result => {\n            run_deferred.resolve(new data.DatasetCollection(result));\n        });\n        return run_deferred;\n    }\n});\n_.extend(Tool.prototype, VisibilityMixin);\n\n/**\n * Tool view.\n */\nvar ToolView = Backbone.View.extend({});\n\n/**\n * Wrap collection of tools for fast access/manipulation.\n */\nvar ToolCollection = Backbone.Collection.extend({\n    model: Tool\n});\n\n/**\n * Label or section header in tool panel.\n */\nvar ToolSectionLabel = Backbone.Model.extend(VisibilityMixin);\n\n/**\n * Section of tool panel with elements (labels and tools).\n */\nvar ToolSection = Backbone.Model.extend({\n    defaults: {\n        elems: [],\n        open: false\n    },\n\n    clear_search_results: function() {\n        _.each(this.attributes.elems, elt => {\n            elt.show();\n        });\n\n        this.show();\n        this.set(\"open\", false);\n    },\n\n    apply_search_results: function(results) {\n        var all_hidden = true;\n        var cur_label;\n        _.each(this.attributes.elems, elt => {\n            if (elt instanceof ToolSectionLabel) {\n                cur_label = elt;\n                cur_label.hide();\n            } else if (elt instanceof Tool) {\n                if (elt.apply_search_results(results)) {\n                    all_hidden = false;\n                    if (cur_label) {\n                        cur_label.show();\n                    }\n                }\n            }\n        });\n\n        if (all_hidden) {\n            this.hide();\n        } else {\n            this.show();\n            this.set(\"open\", true);\n        }\n    }\n});\n_.extend(ToolSection.prototype, VisibilityMixin);\n\n/**\n * Tool search that updates results when query is changed. Result value of null\n * indicates that query was not run; if not null, results are from search using\n * query.\n */\nvar ToolSearch = Backbone.Model.extend({\n    defaults: {\n        search_hint_string: \"search tools\",\n        min_chars_for_search: 3,\n        clear_btn_url: \"\",\n        visible: true,\n        query: \"\",\n        results: null,\n        // ESC (27) will clear the input field and tool search filters\n        clear_key: 27\n    },\n\n    urlRoot: `${Galaxy.root}api/tools`,\n\n    initialize: function() {\n        this.on(\"change:query\", this.do_search);\n    },\n\n    /**\n     * Do the search and update the results.\n     */\n    do_search: function() {\n        var query = this.attributes.query;\n\n        // If query is too short, do not search.\n        if (query.length < this.attributes.min_chars_for_search) {\n            this.set(\"results\", null);\n            return;\n        }\n\n        // Do search via AJAX.\n        var q = query;\n        // Stop previous ajax-request\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        // Start a new ajax-request in X ms\n        $(\"#search-clear-btn\").hide();\n        $(\"#search-spinner\").show();\n        var self = this;\n        this.timer = setTimeout(() => {\n            // log the search to analytics if present\n            if (typeof ga !== \"undefined\") {\n                ga(\"send\", \"pageview\", `${Galaxy.root}?q=${q}`);\n            }\n            $.get(\n                self.urlRoot,\n                { q: q },\n                data => {\n                    self.set(\"results\", data);\n                    $(\"#search-spinner\").hide();\n                    $(\"#search-clear-btn\").show();\n                },\n                \"json\"\n            );\n        }, 400);\n    },\n\n    clear_search: function() {\n        this.set(\"query\", \"\");\n        this.set(\"results\", null);\n    }\n});\n_.extend(ToolSearch.prototype, VisibilityMixin);\n\n/**\n * Tool Panel.\n */\nvar ToolPanel = Backbone.Model.extend({\n    initialize: function(options) {\n        this.attributes.tool_search = options.tool_search;\n        this.attributes.tool_search.on(\"change:results\", this.apply_search_results, this);\n        this.attributes.tools = options.tools;\n        this.attributes.layout = new Backbone.Collection(this.parse(options.layout));\n    },\n\n    /**\n     * Parse tool panel dictionary and return collection of tool panel elements.\n     */\n    parse: function(response) {\n        // Recursive function to parse tool panel elements.\n        var self = this;\n\n        var // Helper to recursively parse tool panel.\n        parse_elt = elt_dict => {\n            var type = elt_dict.model_class;\n            // There are many types of tools; for now, anything that ends in 'Tool'\n            // is treated as a generic tool.\n            if (type.indexOf(\"Tool\") === type.length - 4) {\n                return self.attributes.tools.get(elt_dict.id);\n            } else if (type === \"ToolSection\") {\n                // Parse elements.\n                var elems = _.map(elt_dict.elems, parse_elt);\n                elt_dict.elems = elems;\n                return new ToolSection(elt_dict);\n            } else if (type === \"ToolSectionLabel\") {\n                return new ToolSectionLabel(elt_dict);\n            }\n        };\n\n        return _.map(response, parse_elt);\n    },\n\n    clear_search_results: function() {\n        this.get(\"layout\").each(panel_elt => {\n            if (panel_elt instanceof ToolSection) {\n                panel_elt.clear_search_results();\n            } else {\n                // Label or tool, so just show.\n                panel_elt.show();\n            }\n        });\n    },\n\n    apply_search_results: function() {\n        var results = this.get(\"tool_search\").get(\"results\");\n        if (results === null) {\n            this.clear_search_results();\n            return;\n        }\n\n        var cur_label = null;\n        this.get(\"layout\").each(panel_elt => {\n            if (panel_elt instanceof ToolSectionLabel) {\n                cur_label = panel_elt;\n                cur_label.hide();\n            } else if (panel_elt instanceof Tool) {\n                if (panel_elt.apply_search_results(results)) {\n                    if (cur_label) {\n                        cur_label.show();\n                    }\n                }\n            } else {\n                // Starting new section, so clear current label.\n                cur_label = null;\n                panel_elt.apply_search_results(results);\n            }\n        });\n    }\n});\n\n/**\n * View classes for Galaxy tools and tool panel.\n *\n * Views use the templates defined below for rendering. Views update as needed\n * based on (a) model/collection events and (b) user interactions; in this sense,\n * they are controllers are well and the HTML is the real view in the MVC architecture.\n */\n\n/**\n * Base view that handles visibility based on model's hidden attribute.\n */\nvar BaseView = Backbone.View.extend({\n    initialize: function() {\n        this.model.on(\"change:hidden\", this.update_visible, this);\n        this.update_visible();\n    },\n    update_visible: function() {\n        this.model.attributes.hidden ? this.$el.hide() : this.$el.show();\n    }\n});\n\n/**\n * Link to a tool.\n */\nvar ToolLinkView = BaseView.extend({\n    tagName: \"div\",\n\n    render: function() {\n        // create element\n        var $link = $(\"<div/>\");\n        $link.append(templates.tool_link(this.model.toJSON()));\n\n        var formStyle = this.model.get(\"form_style\", null);\n        // open upload dialog for upload tool\n        if (this.model.id === \"upload1\") {\n            $link.find(\"a\").on(\"click\", e => {\n                e.preventDefault();\n                Galaxy.upload.show();\n            });\n        } else if (formStyle === \"regular\") {\n            // regular tools\n            var self = this;\n            $link.find(\"a\").on(\"click\", e => {\n                e.preventDefault();\n                Galaxy.router.push(\"/\", {\n                    tool_id: self.model.id,\n                    version: self.model.get(\"version\")\n                });\n            });\n        }\n\n        // add element\n        this.$el.append($link);\n        return this;\n    }\n});\n\n/**\n * Panel label/section header.\n */\nvar ToolSectionLabelView = BaseView.extend({\n    tagName: \"div\",\n    className: \"toolPanelLabel\",\n\n    render: function() {\n        this.$el.append($(\"<span/>\").text(this.model.attributes.text));\n        return this;\n    }\n});\n\n/**\n * Panel section.\n */\nvar ToolSectionView = BaseView.extend({\n    tagName: \"div\",\n    className: \"toolSectionWrapper\",\n\n    initialize: function() {\n        BaseView.prototype.initialize.call(this);\n        this.model.on(\"change:open\", this.update_open, this);\n    },\n\n    render: function() {\n        // Build using template.\n        this.$el.append(templates.panel_section(this.model.toJSON()));\n\n        // Add tools to section.\n        var section_body = this.$el.find(\".toolSectionBody\");\n        _.each(this.model.attributes.elems, elt => {\n            if (elt instanceof Tool) {\n                var tool_view = new ToolLinkView({\n                    model: elt,\n                    className: \"toolTitle\"\n                });\n                tool_view.render();\n                section_body.append(tool_view.$el);\n            } else if (elt instanceof ToolSectionLabel) {\n                var label_view = new ToolSectionLabelView({\n                    model: elt\n                });\n                label_view.render();\n                section_body.append(label_view.$el);\n            } else {\n                // TODO: handle nested section bodies?\n            }\n        });\n        return this;\n    },\n\n    events: {\n        \"click .toolSectionTitle > a\": \"toggle\"\n    },\n\n    /**\n     * Toggle visibility of tool section.\n     */\n    toggle: function() {\n        this.model.set(\"open\", !this.model.attributes.open);\n    },\n\n    /**\n     * Update whether section is open or close.\n     */\n    update_open: function() {\n        this.model.attributes.open\n            ? this.$el.children(\".toolSectionBody\").slideDown(\"fast\")\n            : this.$el.children(\".toolSectionBody\").slideUp(\"fast\");\n    }\n});\n\nvar ToolSearchView = Backbone.View.extend({\n    tagName: \"div\",\n    id: \"tool-search\",\n    className: \"bar\",\n\n    events: {\n        click: \"focus_and_select\",\n        \"keyup :input\": \"query_changed\",\n        \"change :input\": \"query_changed\",\n        \"click #search-clear-btn\": \"clear\"\n    },\n\n    render: function() {\n        this.$el.append(templates.tool_search(this.model.toJSON()));\n        if (!this.model.is_visible()) {\n            this.$el.hide();\n        }\n\n        // Adjust top for issue 2907 depending on whether the messagebox is visible.\n        if ($(\"#messagebox\").is(\":visible\")) {\n            this.$el.css(\"top\", \"95px\");\n        }\n\n        this.$el.find(\"[title]\").tooltip();\n        return this;\n    },\n\n    focus_and_select: function() {\n        this.$el\n            .find(\":input\")\n            .focus()\n            .select();\n    },\n\n    clear: function() {\n        this.model.clear_search();\n        this.$el.find(\":input\").val(\"\");\n        this.focus_and_select();\n        return false;\n    },\n\n    query_changed: function(evData) {\n        // check for the 'clear key' (ESC) first\n        if (this.model.attributes.clear_key && this.model.attributes.clear_key === evData.which) {\n            this.clear();\n            return false;\n        }\n        this.model.set(\"query\", this.$el.find(\":input\").val());\n    }\n});\n\n/**\n * Tool panel view. Events triggered include:\n * tool_link_click(click event, tool_model)\n */\nvar ToolPanelView = Backbone.View.extend({\n    tagName: \"div\",\n    className: \"toolMenu\",\n\n    /**\n     * Set up view.\n     */\n    initialize: function() {\n        this.model.get(\"tool_search\").on(\"change:results\", this.handle_search_results, this);\n    },\n\n    render: function() {\n        var self = this;\n\n        // Render search.\n        var search_view = new ToolSearchView({\n            model: this.model.get(\"tool_search\")\n        });\n        search_view.render();\n        self.$el.append(search_view.$el);\n\n        // Render panel.\n        this.model.get(\"layout\").each(panel_elt => {\n            if (panel_elt instanceof ToolSection) {\n                var section_title_view = new ToolSectionView({\n                    model: panel_elt\n                });\n                section_title_view.render();\n                self.$el.append(section_title_view.$el);\n            } else if (panel_elt instanceof Tool) {\n                var tool_view = new ToolLinkView({\n                    model: panel_elt,\n                    className: \"toolTitleNoSection\"\n                });\n                tool_view.render();\n                self.$el.append(tool_view.$el);\n            } else if (panel_elt instanceof ToolSectionLabel) {\n                var label_view = new ToolSectionLabelView({\n                    model: panel_elt\n                });\n                label_view.render();\n                self.$el.append(label_view.$el);\n            }\n        });\n\n        // Setup tool link click eventing.\n        self.$el.find(\"a.tool-link\").click(function(e) {\n            // Tool id is always the first class.\n            var tool_id = $(this)\n                .attr(\"class\")\n                .split(/\\s+/)[0];\n\n            var tool = self.model.get(\"tools\").get(tool_id);\n\n            self.trigger(\"tool_link_click\", e, tool);\n        });\n\n        return this;\n    },\n\n    handle_search_results: function() {\n        var results = this.model.get(\"tool_search\").get(\"results\");\n        if (results && results.length === 0) {\n            $(\"#search-no-results\").show();\n        } else {\n            $(\"#search-no-results\").hide();\n        }\n    }\n});\n\n/**\n * View for working with a tool: setting parameters and inputs and executing the tool.\n */\nvar ToolFormView = Backbone.View.extend({\n    className: \"toolForm\",\n\n    render: function() {\n        this.$el.children().remove();\n        this.$el.append(templates.tool_form(this.model.toJSON()));\n    }\n});\n\n/**\n * Integrated tool menu + tool execution.\n */\nvar IntegratedToolMenuAndView = Backbone.View.extend({\n    className: \"toolMenuAndView\",\n\n    initialize: function() {\n        this.tool_panel_view = new ToolPanelView({\n            collection: this.collection\n        });\n        this.tool_form_view = new ToolFormView();\n    },\n\n    render: function() {\n        // Render and append tool panel.\n        this.tool_panel_view.render();\n        this.tool_panel_view.$el.css(\"float\", \"left\");\n        this.$el.append(this.tool_panel_view.$el);\n\n        // Append tool form view.\n        this.tool_form_view.$el.hide();\n        this.$el.append(this.tool_form_view.$el);\n\n        // On tool link click, show tool.\n        var self = this;\n        this.tool_panel_view.on(\"tool_link_click\", (e, tool) => {\n            // Prevents click from activating link:\n            e.preventDefault();\n            // Show tool that was clicked on:\n            self.show_tool(tool);\n        });\n    },\n\n    /**\n     * Fetch and display tool.\n     */\n    show_tool: function(tool) {\n        var self = this;\n        tool.fetch().done(() => {\n            self.tool_form_view.model = tool;\n            self.tool_form_view.render();\n            self.tool_form_view.$el.show();\n            $(\"#left\").width(\"650px\");\n        });\n    }\n});\n\n// TODO: move into relevant views\nvar templates = {\n    // the search bar at the top of the tool panel\n    tool_search: _.template(\n        [\n            '<input id=\"tool-search-query\" class=\"search-query parent-width\" name=\"query\" ',\n            'placeholder=\"<%- search_hint_string %>\" autocomplete=\"off\" type=\"text\" />',\n            '<a id=\"search-clear-btn\" title=\"clear search (esc)\"> </a>',\n            //TODO: replace with icon\n            '<span id=\"search-spinner\" class=\"search-spinner fa fa-spinner fa-spin\"></span>'\n        ].join(\"\")\n    ),\n\n    // the category level container in the tool panel (e.g. 'Get Data', 'Text Manipulation')\n    panel_section: _.template(\n        [\n            '<div class=\"toolSectionTitle\" id=\"title_<%- id %>\">',\n            '<a href=\"javascript:void(0)\"><span><%- name %></span></a>',\n            \"</div>\",\n            '<div id=\"<%- id %>\" class=\"toolSectionBody\" style=\"display: none;\">',\n            '<div class=\"toolSectionBg\"></div>',\n            \"<div>\"\n        ].join(\"\")\n    ),\n\n    // a single tool's link in the tool panel; will load the tool form in the center panel\n    tool_link: _.template(\n        [\n            '<a class=\"<%- id %> tool-link\" href=\"<%= link %>\" target=\"<%- target %>\" minsizehint=\"<%- min_width %>\">',\n            '<span class=\"labels\">',\n            \"<% _.each( labels, function( label ){ %>\",\n            '<span class=\"label label-default label-<%- label %>\">',\n            \"<%- label %>\",\n            \"</span>\",\n            \"<% }); %>\",\n            \"</span>\",\n            '<span class=\"tool-old-link\">',\n            \"<%- name %>\",\n            \"</span>\",\n            \" <%- description %>\",\n            \"</a>\"\n        ].join(\"\")\n    ),\n\n    // the tool form for entering tool parameters, viewing help and executing the tool\n    // loaded when a tool link is clicked in the tool panel\n    tool_form: _.template(\n        [\n            '<div class=\"toolFormTitle\"><%- tool.name %> (version <%- tool.version %>)</div>',\n            '<div class=\"toolFormBody\">',\n            \"<% _.each( tool.inputs, function( input ){ %>\",\n            '<div class=\"form-row\">',\n            '<label for=\"<%- input.name %>\"><%- input.label %>:</label>',\n            '<div class=\"form-row-input\">',\n            \"<%= input.html %>\",\n            \"</div>\",\n            '<div class=\"toolParamHelp\" style=\"clear: both;\">',\n            \"<%- input.help %>\",\n            \"</div>\",\n            '<div style=\"clear: both;\"></div>',\n            \"</div>\",\n            \"<% }); %>\",\n            \"</div>\",\n            '<div class=\"form-row form-actions\">',\n            '<input type=\"submit\" class=\"btn btn-primary\" name=\"runtool_btn\" value=\"Execute\" />',\n            \"</div>\",\n            '<div class=\"toolHelp\">',\n            '<div class=\"toolHelpBody\"><% tool.help %></div>',\n            \"</div>\"\n            // TODO: we need scoping here because 'help' is the dom for the help menu in the masthead\n            // which implies a leaky variable that I can't find\n        ].join(\"\"),\n        { variable: \"tool\" }\n    )\n};\n\n// Exports\nexport default {\n    ToolParameter: ToolParameter,\n    IntegerToolParameter: IntegerToolParameter,\n    SelectToolParameter: SelectToolParameter,\n    Tool: Tool,\n    ToolCollection: ToolCollection,\n    ToolSearch: ToolSearch,\n    ToolPanel: ToolPanel,\n    ToolPanelView: ToolPanelView,\n    ToolFormView: ToolFormView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/tool/tools.js","/* This is the regular tool form */\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport ToolFormBase from \"mvc/tool/tool-form-base\";\nimport Webhooks from \"mvc/webhooks\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.modal = parent.Galaxy.modal || new Modal.View();\n        this.form = new ToolFormBase(\n            Utils.merge(\n                {\n                    listen_to_history: true,\n                    always_refresh: false,\n                    buildmodel: function(process, form) {\n                        var options = form.model.attributes;\n\n                        // build request url\n                        var build_url = \"\";\n                        var build_data = {};\n                        var job_id = options.job_id;\n                        if (job_id) {\n                            build_url = `${Galaxy.root}api/jobs/${job_id}/build_for_rerun`;\n                        } else {\n                            build_url = `${Galaxy.root}api/tools/${options.id}/build`;\n                            build_data = $.extend({}, Galaxy.params);\n                            build_data[\"tool_id\"] && delete build_data[\"tool_id\"];\n                        }\n                        options.version && (build_data[\"tool_version\"] = options.version);\n\n                        // get initial model\n                        Utils.get({\n                            url: build_url,\n                            data: build_data,\n                            success: function(data) {\n                                if (!data.display) {\n                                    window.location = Galaxy.root;\n                                    return;\n                                }\n                                form.model.set(data);\n                                self._customize(form);\n                                Galaxy.emit.debug(\"tool-form-base::_buildModel()\", \"Initial tool model ready.\", data);\n                                process.resolve();\n                            },\n                            error: function(response, status) {\n                                var error_message = (response && response.err_msg) || \"Uncaught error.\";\n                                if (status == 401) {\n                                    window.location = `${Galaxy.root}user/login?${$.param({\n                                        redirect: `${Galaxy.root}?tool_id=${options.id}`\n                                    })}`;\n                                } else if (form.$el.is(\":empty\")) {\n                                    form.$el.prepend(\n                                        new Ui.Message({\n                                            message: error_message,\n                                            status: \"danger\",\n                                            persistent: true,\n                                            large: true\n                                        }).$el\n                                    );\n                                } else {\n                                    Galaxy.modal &&\n                                        Galaxy.modal.show({\n                                            title: \"Tool request failed\",\n                                            body: error_message,\n                                            buttons: {\n                                                Close: function() {\n                                                    Galaxy.modal.hide();\n                                                }\n                                            }\n                                        });\n                                }\n                                Galaxy.emit.debug(\n                                    \"tool-form-base::_buildModel()\",\n                                    \"Initial tool model request failed.\",\n                                    response\n                                );\n                                process.reject();\n                            }\n                        });\n                    },\n                    postchange: function(process, form) {\n                        var current_state = {\n                            tool_id: form.model.get(\"id\"),\n                            tool_version: form.model.get(\"version\"),\n                            inputs: $.extend(true, {}, form.data.create())\n                        };\n                        form.wait(true);\n                        Galaxy.emit.debug(\"tool-form::postchange()\", \"Sending current state.\", current_state);\n                        Utils.request({\n                            type: \"POST\",\n                            url: `${Galaxy.root}api/tools/${form.model.get(\"id\")}/build`,\n                            data: current_state,\n                            success: function(data) {\n                                form.update(data);\n                                form.wait(false);\n                                Galaxy.emit.debug(\"tool-form::postchange()\", \"Received new model.\", data);\n                                process.resolve();\n                            },\n                            error: function(response) {\n                                Galaxy.emit.debug(\"tool-form::postchange()\", \"Refresh request failed.\", response);\n                                process.reject();\n                            }\n                        });\n                    }\n                },\n                options\n            )\n        );\n        this.deferred = this.form.deferred;\n        this.setElement(\"<div/>\");\n        this.$el.append(this.form.$el);\n    },\n\n    _customize: function(form) {\n        var self = this;\n        var options = form.model.attributes;\n        // build execute button\n        var execute_button = new Ui.Button({\n            icon: \"fa-check\",\n            tooltip: `Execute: ${options.name} (${options.version})`,\n            title: \"Execute\",\n            cls: \"btn btn-primary ui-clear-float\",\n            wait_cls: \"btn btn-info ui-clear-float\",\n            onclick: function() {\n                execute_button.wait();\n                form.portlet.disable();\n                self.submit(options, () => {\n                    execute_button.unwait();\n                    form.portlet.enable();\n                });\n            }\n        });\n        options.buttons = { execute: execute_button };\n\n        // remap feature\n        if (options.job_id && options.job_remap) {\n            options.inputs.push({\n                label: \"Resume dependencies from this job\",\n                name: \"rerun_remap_job_id\",\n                type: \"select\",\n                display: \"radio\",\n                ignore: \"__ignore__\",\n                value: \"__ignore__\",\n                options: [[\"Yes\", options.job_id], [\"No\", \"__ignore__\"]],\n                help:\n                    \"The previous run of this tool failed and other tools were waiting for it to finish successfully. Use this option to resume those tools using the new output(s) of this tool run.\"\n            });\n        }\n    },\n\n    /** Submit a regular job.\n     * @param{dict}     options   - Specifies tool id and version\n     * @param{function} callback  - Called when request has completed\n     */\n    submit: function(options, callback) {\n        var self = this;\n        var job_def = {\n            tool_id: options.id,\n            tool_version: options.version,\n            inputs: this.form.data.create()\n        };\n        this.form.trigger(\"reset\");\n        if (!self.validate(job_def)) {\n            Galaxy.emit.debug(\"tool-form::submit()\", \"Submission canceled. Validation failed.\");\n            callback && callback();\n            return;\n        }\n        if (options.action !== `${Galaxy.root}tool_runner/index`) {\n            var $f = $(\"<form/>\").attr({\n                action: options.action,\n                method: options.method,\n                enctype: options.enctype\n            });\n            _.each(job_def.inputs, (value, key) => {\n                $f.append($(\"<input/>\").attr({ name: key, value: value }));\n            });\n            $f\n                .hide()\n                .appendTo(\"body\")\n                .submit()\n                .remove();\n            callback && callback();\n            return;\n        }\n        Galaxy.emit.debug(\"tool-form::submit()\", \"Validation complete.\", job_def);\n        Utils.request({\n            type: \"POST\",\n            url: `${Galaxy.root}api/tools`,\n            data: job_def,\n            success: function(response) {\n                callback && callback();\n                self.$el.children().hide();\n                self.$el.append(self._templateSuccess(response));\n                // Show Webhook if job is running\n                if (response.jobs && response.jobs.length > 0) {\n                    self.$el.append($(\"<div/>\", { id: \"webhook-view\" }));\n                    var WebhookApp = new Webhooks.WebhookView({\n                        urlRoot: `${Galaxy.root}api/webhooks/tool`,\n                        toolId: job_def.tool_id\n                    });\n                }\n                parent.Galaxy && parent.Galaxy.currHistoryPanel && parent.Galaxy.currHistoryPanel.refreshContents();\n            },\n            error: function(response) {\n                callback && callback();\n                Galaxy.emit.debug(\"tool-form::submit\", \"Submission failed.\", response);\n                var input_found = false;\n                if (response && response.err_data) {\n                    var error_messages = self.form.data.matchResponse(response.err_data);\n                    for (var input_id in error_messages) {\n                        self.form.highlight(input_id, error_messages[input_id]);\n                        input_found = true;\n                        break;\n                    }\n                }\n                if (!input_found) {\n                    self.modal.show({\n                        title: \"Job submission failed\",\n                        body: self._templateError(job_def, response && response.err_msg),\n                        buttons: {\n                            Close: function() {\n                                self.modal.hide();\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    /** Validate job dictionary.\n     * @param{dict}     job_def   - Job execution dictionary\n     */\n    validate: function(job_def) {\n        var job_inputs = job_def.inputs;\n        var batch_n = -1;\n        var batch_src = null;\n        for (var job_input_id in job_inputs) {\n            var input_value = job_inputs[job_input_id];\n            var input_id = this.form.data.match(job_input_id);\n            var input_field = this.form.field_list[input_id];\n            var input_def = this.form.input_list[input_id];\n            if (!input_id || !input_def || !input_field) {\n                Galaxy.emit.debug(\"tool-form::validate()\", \"Retrieving input objects failed.\");\n                continue;\n            }\n            if (!input_def.optional && input_value == null) {\n                this.form.highlight(input_id);\n                return false;\n            }\n            if (input_value && input_value.batch) {\n                var n = input_value.values.length;\n                var src = n > 0 && input_value.values[0] && input_value.values[0].src;\n                if (src) {\n                    if (batch_src === null) {\n                        batch_src = src;\n                    } else if (batch_src !== src) {\n                        this.form.highlight(\n                            input_id,\n                            \"Please select either dataset or dataset list fields for all batch mode fields.\"\n                        );\n                        return false;\n                    }\n                }\n                if (batch_n === -1) {\n                    batch_n = n;\n                } else if (batch_n !== n) {\n                    this.form.highlight(\n                        input_id,\n                        `Please make sure that you select the same number of inputs for all batch mode fields. This field contains <b>${\n                            n\n                        }</b> selection(s) while a previous field contains <b>${batch_n}</b>.`\n                    );\n                    return false;\n                }\n            }\n        }\n        return true;\n    },\n\n    _templateSuccess: function(response) {\n        if (response.jobs && response.jobs.length > 0) {\n            var njobs = response.jobs.length;\n            var njobs_text = njobs == 1 ? \"1 job has\" : `${njobs} jobs have`;\n            var $message = $(\"<div/>\")\n                .addClass(\"donemessagelarge\")\n                .append(\n                    $(\"<p/>\").text(\n                        `${njobs_text} been successfully added to the queue - resulting in the following datasets:`\n                    )\n                );\n            _.each(response.outputs, output => {\n                $message.append(\n                    $(\"<p/>\")\n                        .addClass(\"messagerow\")\n                        .append($(\"<b/>\").text(`${output.hid}: ${output.name}`))\n                );\n            });\n            $message.append(\n                $(\"<p/>\")\n                    .append(\"<b/>\")\n                    .text(\n                        \"You can check the status of queued jobs and view the resulting data by refreshing the History pane. When the job has been run the status will change from 'running' to 'finished' if completed successfully or 'error' if problems were encountered.\"\n                    )\n            );\n            return $message;\n        } else {\n            return this._templateError(response, \"Invalid success response. No jobs found.\");\n        }\n    },\n\n    _templateError: function(response, err_msg) {\n        return $(\"<div/>\")\n            .addClass(\"errormessagelarge\")\n            .append(\n                $(\"<p/>\").text(\n                    `The server could not complete the request. Please contact the Galaxy Team if this error persists. ${err_msg ||\n                        \"\"}`\n                )\n            )\n            .append($(\"<pre/>\").text(JSON.stringify(response, null, 4)));\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/tool/tool-form.js","import Utils from \"utils/utils\";\nimport Menu from \"layout/menu\";\nimport Scratchbook from \"layout/scratchbook\";\nimport QuotaMeter from \"mvc/user/user-quotameter\";\n/** Masthead **/\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.options = options;\n        this.setElement(this._template());\n        this.$navbarBrandLink = this.$(\".navbar-brand-link\");\n        this.$navbarBrandImage = this.$(\".navbar-brand-image\");\n        this.$navbarBrandTitle = this.$(\".navbar-brand-title\");\n        this.$navbarTabs = this.$(\".navbar-tabs\");\n        this.$quoteMeter = this.$(\".quota-meter-container\");\n\n        // build tabs\n        this.collection = new Menu.Collection();\n        this.collection\n            .on(\"add\", model => {\n                self.$navbarTabs.append(new Menu.Tab({ model: model }).render().$el);\n            })\n            .on(\"reset\", () => {\n                self.$navbarTabs.empty();\n            })\n            .on(\"dispatch\", callback => {\n                self.collection.each(m => {\n                    callback(m);\n                });\n            })\n            .fetch(this.options);\n\n        // scratchbook\n        Galaxy.frame = this.frame = new Scratchbook({\n            collection: this.collection\n        });\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter({\n            model: Galaxy.user,\n            el: this.$quoteMeter\n        });\n\n        // loop through beforeunload functions if the user attempts to unload the page\n        $(window)\n            .on(\"click\", e => {\n                var $download_link = $(e.target).closest(\"a[download]\");\n                if ($download_link.length == 1) {\n                    if ($(\"iframe[id=download]\").length === 0) {\n                        $(\"body\").append(\n                            $(\"<iframe/>\")\n                                .attr(\"id\", \"download\")\n                                .hide()\n                        );\n                    }\n                    $(\"iframe[id=download]\").attr(\"src\", $download_link.attr(\"href\"));\n                    e.preventDefault();\n                }\n            })\n            .on(\"beforeunload\", () => {\n                var text = \"\";\n                self.collection.each(model => {\n                    var q = model.get(\"onbeforeunload\") && model.get(\"onbeforeunload\")();\n                    q && (text += `${q} `);\n                });\n                if (text !== \"\") {\n                    return text;\n                }\n            });\n    },\n\n    render: function() {\n        this.$navbarBrandTitle.html(`Galaxy ${(this.options.brand && `/ ${this.options.brand}`) || \"\"}`);\n        this.$navbarBrandLink.attr(\"href\", this.options.logo_url);\n        this.$navbarBrandImage.attr(\"src\", this.options.logo_src);\n        this.quotaMeter.render();\n        return this;\n    },\n\n    /** body template */\n    _template: function() {\n        return (\n            '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n            '<div class=\"navbar-header\">' +\n            '<div class=\"navbar-tabs\"/>' +\n            \"</div>\" +\n            '<div class=\"navbar-brand\">' +\n            '<a class=\"navbar-brand-link\">' +\n            '<img class=\"navbar-brand-image\"/>' +\n            '<span class=\"navbar-brand-title\"/>' +\n            \"</a>\" +\n            \"</div>\" +\n            '<div class=\"quota-meter-container\"/>' +\n            '<div class=\"navbar-icons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/layout/masthead.js","/** Masthead Collection **/\nimport GenericNav from \"layout/generic-nav-view\";\nimport Webhooks from \"mvc/webhooks\";\nimport _l from \"utils/localization\";\nimport Utils from \"utils/utils\";\nvar Collection = Backbone.Collection.extend({\n    model: Backbone.Model.extend({\n        defaults: {\n            visible: true,\n            target: \"_parent\"\n        }\n    }),\n    fetch: function(options) {\n        var self = this;\n        options = options || {};\n        this.reset();\n\n        //\n        // Chat server tab\n        //\n        var extendedNavItem = new GenericNav.GenericNavView();\n        this.add(extendedNavItem.render());\n\n        //\n        // Analyze data tab.\n        //\n        this.add({\n            id: \"analysis\",\n            title: _l(\"Analyze Data\"),\n            url: \"\",\n            tooltip: _l(\"Analysis home view\")\n        });\n\n        //\n        // Workflow tab.\n        //\n        this.add({\n            id: \"workflow\",\n            title: _l(\"Workflow\"),\n            tooltip: _l(\"Chain tools into workflows\"),\n            disabled: !Galaxy.user.id,\n            url: \"workflow\"\n        });\n\n        //\n        // 'Shared Items' or Libraries tab.\n        //\n        this.add({\n            id: \"shared\",\n            title: _l(\"Shared Data\"),\n            url: \"library/index\",\n            tooltip: _l(\"Access published resources\"),\n            menu: [\n                {\n                    title: _l(\"Data Libraries\"),\n                    url: \"library/list\"\n                },\n                {\n                    title: _l(\"Histories\"),\n                    url: \"histories/list_published\"\n                },\n                {\n                    title: _l(\"Workflows\"),\n                    url: \"workflows/list_published\"\n                },\n                {\n                    title: _l(\"Visualizations\"),\n                    url: \"visualizations/list_published\"\n                },\n                {\n                    title: _l(\"Pages\"),\n                    url: \"pages/list_published\"\n                }\n            ]\n        });\n\n        //\n        // Visualization tab.\n        //\n        this.add({\n            id: \"visualization\",\n            title: _l(\"Visualization\"),\n            url: \"visualizations/list\",\n            tooltip: _l(\"Visualize datasets\"),\n            disabled: !Galaxy.user.id,\n            menu: [\n                {\n                    title: _l(\"New Track Browser\"),\n                    url: \"visualization/trackster\",\n                    target: \"_frame\"\n                },\n                {\n                    title: _l(\"Saved Visualizations\"),\n                    url: \"visualizations/list\",\n                    target: \"_frame\"\n                },\n                {\n                    title: _l(\"Interactive Environments\"),\n                    url: \"visualization/gie_list\",\n                    target: \"galaxy_main\"\n                }\n            ]\n        });\n\n        //\n        // Webhooks\n        //\n        Webhooks.add({\n            url: \"api/webhooks/masthead/all\",\n            callback: function(webhooks) {\n                $(document).ready(() => {\n                    $.each(webhooks.models, (index, model) => {\n                        var webhook = model.toJSON();\n                        if (webhook.activate) {\n                            var obj = {\n                                id: webhook.name,\n                                icon: webhook.config.icon,\n                                url: webhook.config.url,\n                                tooltip: webhook.config.tooltip,\n                                onclick: webhook.config.function && new Function(webhook.config.function)\n                            };\n\n                            // Galaxy.page is undefined for data libraries, workflows pages\n                            if (Galaxy.page) {\n                                Galaxy.page.masthead.collection.add(obj);\n                            } else if (Galaxy.masthead) {\n                                Galaxy.masthead.collection.add(obj);\n                            }\n\n                            // Append masthead script and styles to Galaxy main\n                            Utils.appendScriptStyle(webhook);\n                        }\n                    });\n                });\n            }\n        });\n\n        //\n        // Admin.\n        //\n        Galaxy.user.get(\"is_admin\") &&\n            this.add({\n                id: \"admin\",\n                title: _l(\"Admin\"),\n                url: \"admin\",\n                tooltip: _l(\"Administer this Galaxy\"),\n                cls: \"admin-only\"\n            });\n\n        //\n        // Help tab.\n        //\n        var helpTab = {\n            id: \"help\",\n            title: _l(\"Help\"),\n            tooltip: _l(\"Support, contact, and community\"),\n            menu: [\n                {\n                    title: _l(\"Support\"),\n                    url: options.support_url,\n                    target: \"_blank\"\n                },\n                {\n                    title: _l(\"Search\"),\n                    url: options.search_url,\n                    target: \"_blank\"\n                },\n                {\n                    title: _l(\"Mailing Lists\"),\n                    url: options.mailing_lists,\n                    target: \"_blank\"\n                },\n                {\n                    title: _l(\"Videos\"),\n                    url: options.screencasts_url,\n                    target: \"_blank\"\n                },\n                {\n                    title: _l(\"Wiki\"),\n                    url: options.wiki_url,\n                    target: \"_blank\"\n                },\n                {\n                    title: _l(\"How to Cite Galaxy\"),\n                    url: options.citation_url,\n                    target: \"_blank\"\n                },\n                {\n                    title: _l(\"Interactive Tours\"),\n                    url: \"tours\"\n                }\n            ]\n        };\n        options.terms_url &&\n            helpTab.menu.push({\n                title: _l(\"Terms and Conditions\"),\n                url: options.terms_url,\n                target: \"_blank\"\n            });\n        options.biostar_url &&\n            helpTab.menu.unshift({\n                title: _l(\"Ask a question\"),\n                url: \"biostar/biostar_question_redirect\",\n                target: \"_blank\"\n            });\n        options.biostar_url &&\n            helpTab.menu.unshift({\n                title: _l(\"Galaxy Biostar\"),\n                url: options.biostar_url_redirect,\n                target: \"_blank\"\n            });\n        this.add(helpTab);\n\n        //\n        // User tab.\n        //\n        var userTab = {};\n        if (!Galaxy.user.id) {\n            if (options.allow_user_creation) {\n                userTab = {\n                    id: \"user\",\n                    title: _l(\"Login or Register\"),\n                    cls: \"loggedout-only\",\n                    tooltip: _l(\"Account registration or login\"),\n                    menu: [\n                        {\n                            title: _l(\"Login\"),\n                            url: \"user/login\",\n                            target: \"galaxy_main\",\n                            noscratchbook: true\n                        },\n                        {\n                            title: _l(\"Register\"),\n                            url: \"user/create\",\n                            target: \"galaxy_main\",\n                            noscratchbook: true\n                        }\n                    ]\n                };\n            } else {\n                userTab = {\n                    id: \"user\",\n                    title: _l(\"Login\"),\n                    cls: \"loggedout-only\",\n                    tooltip: _l(\"Login\"),\n                    url: \"user/login\",\n                    target: \"galaxy_main\",\n                    noscratchbook: true\n                };\n            }\n        } else {\n            userTab = {\n                id: \"user\",\n                title: _l(\"User\"),\n                cls: \"loggedin-only\",\n                tooltip: _l(\"Account and saved data\"),\n                menu: [\n                    {\n                        title: `${_l(\"Logged in as\")} ${Galaxy.user.get(\"email\")}`\n                    },\n                    {\n                        title: _l(\"Preferences\"),\n                        url: \"user\"\n                    },\n                    {\n                        title: _l(\"Custom Builds\"),\n                        url: \"custom_builds\"\n                    },\n                    {\n                        title: _l(\"Logout\"),\n                        url: `user/logout?session_csrf_token=${Galaxy.session_csrf_token}`,\n                        target: \"_top\",\n                        divider: true\n                    },\n                    {\n                        title: _l(\"Saved Histories\"),\n                        url: \"histories/list\",\n                        target: \"_top\"\n                    },\n                    {\n                        title: _l(\"Saved Datasets\"),\n                        url: \"datasets/list\",\n                        target: \"_top\"\n                    },\n                    {\n                        title: _l(\"Saved Pages\"),\n                        url: \"pages/list\",\n                        target: \"_top\"\n                    }\n                ]\n            };\n        }\n        this.add(userTab);\n        var activeView = this.get(options.active_view);\n        activeView && activeView.set(\"active\", true);\n        return new jQuery.Deferred().resolve().promise();\n    }\n});\n\n/** Masthead tab **/\nvar Tab = Backbone.View.extend({\n    initialize: function(options) {\n        this.model = options.model;\n        this.setElement(this._template());\n        this.$dropdown = this.$(\".dropdown\");\n        this.$toggle = this.$(\".dropdown-toggle\");\n        this.$menu = this.$(\".dropdown-menu\");\n        this.$note = this.$(\".dropdown-note\");\n        this.listenTo(this.model, \"change\", this.render, this);\n    },\n\n    events: {\n        \"click .dropdown-toggle\": \"_toggleClick\"\n    },\n\n    render: function() {\n        var self = this;\n        $(\".tooltip\").remove();\n        this.$el.attr(\"id\", this.model.id).css({\n            visibility: (this.model.get(\"visible\") && \"visible\") || \"hidden\"\n        });\n        this.model.set(\"url\", this._formatUrl(this.model.get(\"url\")));\n        this.$note\n            .html(this.model.get(\"note\") || \"\")\n            .removeClass()\n            .addClass(\"dropdown-note\")\n            .addClass(this.model.get(\"note_cls\"))\n            .css({\n                display: (this.model.get(\"show_note\") && \"block\") || \"none\"\n            });\n        this.$toggle\n            .html(this.model.get(\"title\") || \"\")\n            .removeClass()\n            .addClass(\"dropdown-toggle\")\n            .addClass(this.model.get(\"cls\"))\n            .addClass(this.model.get(\"icon\") && `dropdown-icon fa ${this.model.get(\"icon\")}`)\n            .addClass(this.model.get(\"toggle\") && \"toggle\")\n            .attr(\"target\", this.model.get(\"target\"))\n            .attr(\"href\", this.model.get(\"url\"))\n            .attr(\"title\", this.model.get(\"tooltip\"))\n            .tooltip(\"destroy\");\n        this.model.get(\"tooltip\") && this.$toggle.tooltip({ placement: \"bottom\" });\n        this.$dropdown\n            .removeClass()\n            .addClass(\"dropdown\")\n            .addClass(this.model.get(\"disabled\") && \"disabled\")\n            .addClass(this.model.get(\"active\") && \"active\");\n        if (this.model.get(\"menu\") && this.model.get(\"show_menu\")) {\n            this.$menu.show();\n            $(\"#dd-helper\")\n                .show()\n                .off()\n                .on(\"click\", () => {\n                    $(\"#dd-helper\").hide();\n                    self.model.set(\"show_menu\", false);\n                });\n        } else {\n            self.$menu.hide();\n            $(\"#dd-helper\").hide();\n        }\n        this.$menu.empty().removeClass(\"dropdown-menu\");\n        if (this.model.get(\"menu\")) {\n            _.each(this.model.get(\"menu\"), menuItem => {\n                self.$menu.append(self._buildMenuItem(menuItem));\n                menuItem.divider && self.$menu.append($(\"<li/>\").addClass(\"divider\"));\n            });\n            self.$menu.addClass(\"dropdown-menu\");\n            self.$toggle.append($(\"<b/>\").addClass(\"caret\"));\n        }\n        return this;\n    },\n\n    /** Add new menu item */\n    _buildMenuItem: function(options) {\n        var self = this;\n        options = _.defaults(options || {}, {\n            title: \"\",\n            url: \"\",\n            target: \"_parent\",\n            noscratchbook: false\n        });\n        options.url = self._formatUrl(options.url);\n        return $(\"<li/>\").append(\n            $(\"<a/>\")\n                .attr(\"href\", options.url)\n                .attr(\"target\", options.target)\n                .html(options.title)\n                .on(\"click\", e => {\n                    e.preventDefault();\n                    self.model.set(\"show_menu\", false);\n                    if (options.onclick) {\n                        options.onclick();\n                    } else {\n                        Galaxy.frame.add(options);\n                    }\n                })\n        );\n    },\n\n    /** Handle click event */\n    _toggleClick: function(e) {\n        var self = this;\n        var model = this.model;\n        e.preventDefault();\n        $(\".tooltip\").hide();\n        model.trigger(\"dispatch\", m => {\n            model.id !== m.id && m.get(\"menu\") && m.set(\"show_menu\", false);\n        });\n        if (!model.get(\"disabled\")) {\n            if (!model.get(\"menu\")) {\n                model.get(\"onclick\") ? model.get(\"onclick\")() : Galaxy.frame.add(model.attributes);\n            } else {\n                model.set(\"show_menu\", true);\n            }\n        } else {\n            function buildLink(label, url) {\n                return $(\"<div/>\")\n                    .append(\n                        $(\"<a/>\")\n                            .attr(\"href\", Galaxy.root + url)\n                            .html(label)\n                    )\n                    .html();\n            }\n            this.$toggle.popover && this.$toggle.popover(\"destroy\");\n            this.$toggle\n                .popover({\n                    html: true,\n                    placement: \"bottom\",\n                    content: `Please ${buildLink(\"login\", \"user/login?use_panels=True\")} or ${buildLink(\n                        \"register\",\n                        \"user/create?use_panels=True\"\n                    )} to use this feature.`\n                })\n                .popover(\"show\");\n            setTimeout(() => {\n                self.$toggle.popover(\"destroy\");\n            }, 5000);\n        }\n    },\n\n    /** Url formatting */\n    _formatUrl: function(url) {\n        return typeof url == \"string\" && url.indexOf(\"//\") === -1 && url.charAt(0) != \"/\" ? Galaxy.root + url : url;\n    },\n\n    /** body tempate */\n    _template: function() {\n        return (\n            '<ul class=\"nav navbar-nav\">' +\n            '<li class=\"dropdown\">' +\n            '<a class=\"dropdown-toggle\"/>' +\n            '<ul class=\"dropdown-menu\"/>' +\n            '<div class=\"dropdown-note\"/>' +\n            \"</li>\" +\n            \"</ul>\"\n        );\n    }\n});\n\nexport default {\n    Collection: Collection,\n    Tab: Tab\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/layout/menu.js","/** Real-time Communication feature **/\nimport Modal from \"mvc/ui/ui-modal\";\nvar GenericNavView = Backbone.View.extend({\n    initialize: function() {\n        this.modal = null;\n    },\n\n    /** makes bootstrap modal and iframe inside it */\n    makeModalIframe: function(e) {\n        // make modal\n        var host = window.Galaxy.config.communication_server_host;\n\n        var port = window.Galaxy.config.communication_server_port;\n        var username = escape(window.Galaxy.user.attributes.username);\n\n        var persistent_communication_rooms = escape(window.Galaxy.config.persistent_communication_rooms);\n\n        var query_string = `?username=${username}&persistent_communication_rooms=${persistent_communication_rooms}`;\n\n        var src = `${host}:${port}${query_string}`;\n        var $el_chat_modal_header = null;\n        var $el_chat_modal_body = null;\n\n        var iframe_template = `<iframe class=\"f-iframe fade in communication-iframe\" src=\"${src}\"> </iframe>`;\n\n        var header_template =\n            '<i class=\"fa fa-comment\" aria-hidden=\"true\" title=\"Communicate with other users\"></i>' +\n            '<i class=\"fa fa-expand expand-compress-modal\" aria-hidden=\"true\" title=\"Maximize\"></i>' +\n            '<i class=\"fa fa-times close-modal\" aria-hidden=\"true\" title=\"Close\"></i>';\n\n        var frame_height = 350;\n        var frame_width = 600;\n        var class_names = \"ui-modal chat-modal\";\n\n        // deletes the chat modal if already present and create one\n        if ($(\".chat-modal\").length > 0) {\n            $(\".chat-modal\").remove();\n        }\n        // creates a modal\n        GenericNavView.modal = new Modal.View({\n            body: iframe_template,\n            height: frame_height,\n            width: frame_width,\n            closing_events: true,\n            title_separator: false,\n            cls: class_names\n        });\n\n        // shows modal\n        GenericNavView.modal.show();\n        $el_chat_modal_header = $(\".chat-modal .modal-header\");\n        $el_chat_modal_body = $(\".chat-modal .modal-body\");\n        // adjusts the css of bootstrap modal for chat\n        $el_chat_modal_header.addClass(\"modal-header-body\");\n        $el_chat_modal_body.addClass(\"modal-header-body\");\n        $el_chat_modal_header.find(\"h4\").remove();\n        $el_chat_modal_header.removeAttr(\"min-height padding border\");\n        $el_chat_modal_header.append(header_template);\n        // click event of the close button for chat\n        $(\".close-modal\").click(e => {\n            $(\".chat-modal\").css(\"display\", \"none\");\n        });\n        // click event of expand and compress icon\n        $(\".expand-compress-modal\").click(e => {\n            if ($(\".expand-compress-modal\").hasClass(\"fa-expand\")) {\n                $(\".chat-modal .modal-dialog\").width(\"1000px\");\n                $(\".chat-modal .modal-body\").height(\"575px\");\n                $(\".expand-compress-modal\")\n                    .removeClass(\"fa-expand\")\n                    .addClass(\"fa-compress\");\n                $(\".expand-compress-modal\").attr(\"title\", \"Minimize\");\n                $(\".expand-compress-modal\").css(\"margin-left\", \"96.2%\");\n            } else {\n                $(\".chat-modal .modal-dialog\").width(`${frame_width}px`);\n                $(\".chat-modal .modal-body\").height(`${frame_height}px`);\n                $(\".expand-compress-modal\")\n                    .removeClass(\"fa-compress\")\n                    .addClass(\"fa-expand\");\n                $(\".expand-compress-modal\").attr(\"title\", \"Maximize\");\n                $(\".expand-compress-modal\").css(\"margin-left\", \"93.2%\");\n            }\n        });\n        return this;\n    },\n\n    /**renders the chat icon as a nav item*/\n    render: function() {\n        var self = this;\n        var navItem = {};\n        navItem = {\n            id: \"show-chat-online\",\n            icon: \"fa-comment-o\",\n            tooltip: \"Chat online\",\n            visible: false,\n            onclick: self.makeModalIframe\n        };\n        return navItem;\n    }\n});\n\nexport default {\n    GenericNavView: GenericNavView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/layout/generic-nav-view.js","/** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\nimport Frames from \"mvc/ui/ui-frames\";\nimport DATA from \"mvc/dataset/data\";\nimport visualization from \"viz/visualization\";\nimport trackster from \"viz/trackster\";\nimport _l from \"utils/localization\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        options = options || {};\n        this.frames = new Frames.View({ visible: false });\n        this.setElement(this.frames.$el);\n        this.buttonActive = options.collection.add({\n            id: \"enable-scratchbook\",\n            icon: \"fa-th\",\n            tooltip: _l(\"Enable/Disable Scratchbook\"),\n            onclick: function() {\n                self.active = !self.active;\n                self.buttonActive.set({\n                    toggle: self.active,\n                    show_note: self.active,\n                    note_cls: self.active && \"fa fa-check\"\n                });\n                !self.active && self.frames.hide();\n            },\n            onbeforeunload: function() {\n                if (self.frames.length() > 0) {\n                    return `You opened ${self.frames.length()} frame(s) which will be lost.`;\n                }\n            }\n        });\n        this.buttonLoad = options.collection.add({\n            id: \"show-scratchbook\",\n            icon: \"fa-eye\",\n            tooltip: _l(\"Show/Hide Scratchbook\"),\n            show_note: true,\n            visible: false,\n            onclick: function(e) {\n                self.frames.visible ? self.frames.hide() : self.frames.show();\n            }\n        });\n        this.frames\n            .on(\"add remove\", function() {\n                this.visible && this.length() == 0 && this.hide();\n                self.buttonLoad.set({\n                    note: this.length(),\n                    visible: this.length() > 0\n                });\n            })\n            .on(\"show hide \", function() {\n                self.buttonLoad.set({\n                    toggle: this.visible,\n                    icon: (this.visible && \"fa-eye\") || \"fa-eye-slash\"\n                });\n            });\n        this.history_cache = {};\n    },\n\n    /** Add a dataset to the frames */\n    addDataset: function(dataset_id) {\n        var self = this;\n        var current_dataset = null;\n        if (Galaxy && Galaxy.currHistoryPanel) {\n            var history_id = Galaxy.currHistoryPanel.collection.historyId;\n            this.history_cache[history_id] = {\n                name: Galaxy.currHistoryPanel.model.get(\"name\"),\n                dataset_ids: []\n            };\n            Galaxy.currHistoryPanel.collection.each(model => {\n                !model.get(\"deleted\") &&\n                    model.get(\"visible\") &&\n                    self.history_cache[history_id].dataset_ids.push(model.get(\"id\"));\n            });\n        }\n        var _findDataset = (dataset, offset) => {\n            if (dataset) {\n                var history_details = self.history_cache[dataset.get(\"history_id\")];\n                if (history_details && history_details.dataset_ids) {\n                    var dataset_list = history_details.dataset_ids;\n                    var pos = dataset_list.indexOf(dataset.get(\"id\"));\n                    if (pos !== -1 && pos + offset >= 0 && pos + offset < dataset_list.length) {\n                        return dataset_list[pos + offset];\n                    }\n                }\n            }\n        };\n        var _loadDatasetOffset = (dataset, offset, frame) => {\n            var new_dataset_id = _findDataset(dataset, offset);\n            if (new_dataset_id) {\n                self._loadDataset(new_dataset_id, (new_dataset, config) => {\n                    current_dataset = new_dataset;\n                    frame.model.set(config);\n                });\n            } else {\n                frame.model.trigger(\"change\");\n            }\n        };\n        this._loadDataset(dataset_id, (dataset, config) => {\n            current_dataset = dataset;\n            self.add(\n                _.extend(\n                    {\n                        menu: [\n                            {\n                                icon: \"fa fa-chevron-circle-left\",\n                                tooltip: \"Previous in History\",\n                                onclick: function(frame) {\n                                    _loadDatasetOffset(current_dataset, -1, frame);\n                                },\n                                disabled: function() {\n                                    return !_findDataset(current_dataset, -1);\n                                }\n                            },\n                            {\n                                icon: \"fa fa-chevron-circle-right\",\n                                tooltip: \"Next in History\",\n                                onclick: function(frame) {\n                                    _loadDatasetOffset(current_dataset, 1, frame);\n                                },\n                                disabled: function() {\n                                    return !_findDataset(current_dataset, 1);\n                                }\n                            }\n                        ]\n                    },\n                    config\n                )\n            );\n        });\n    },\n\n    _loadDataset: function(dataset_id, callback) {\n        var self = this;\n        var dataset = new DATA.Dataset({ id: dataset_id });\n        $.when(dataset.fetch()).then(() => {\n            var is_tabular = _.find(\n                [\"tabular\", \"interval\"],\n                data_type => dataset.get(\"data_type\").indexOf(data_type) !== -1\n            );\n            var title = dataset.get(\"name\");\n            var history_details = self.history_cache[dataset.get(\"history_id\")];\n            if (history_details) {\n                title = `${history_details.name}: ${title}`;\n            }\n            callback(\n                dataset,\n                is_tabular\n                    ? {\n                          title: title,\n                          url: null,\n                          content: DATA.createTabularDatasetChunkedView({\n                              model: new DATA.TabularDataset(dataset.toJSON()),\n                              embedded: true,\n                              height: \"100%\"\n                          }).$el\n                      }\n                    : {\n                          title: title,\n                          url: `${Galaxy.root}datasets/${dataset_id}/display/?preview=True`,\n                          content: null\n                      }\n            );\n        });\n    },\n\n    /** Add a trackster visualization to the frames. */\n    addTrackster: function(viz_id) {\n        var self = this;\n        var viz = new visualization.Visualization({ id: viz_id });\n        $.when(viz.fetch()).then(() => {\n            var ui = new trackster.TracksterUI(Galaxy.root);\n\n            // Construct frame config based on dataset's type.\n            var frame_config = {\n                title: viz.get(\"name\"),\n                type: \"other\",\n                content: function(parent_elt) {\n                    // Create view config.\n                    var view_config = {\n                        container: parent_elt,\n                        name: viz.get(\"title\"),\n                        id: viz.id,\n                        // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n                        dbkey: viz.get(\"dbkey\"),\n                        stand_alone: false\n                    };\n\n                    var latest_revision = viz.get(\"latest_revision\");\n                    var drawables = latest_revision.config.view.drawables;\n\n                    // Set up datasets in drawables.\n                    _.each(drawables, d => {\n                        d.dataset = {\n                            hda_ldda: d.hda_ldda,\n                            id: d.dataset_id\n                        };\n                    });\n                    view = ui.create_visualization(\n                        view_config,\n                        latest_revision.config.viewport,\n                        latest_revision.config.view.drawables,\n                        latest_revision.config.bookmarks,\n                        false\n                    );\n                }\n            };\n            self.add(frame_config);\n        });\n    },\n\n    /** Add and display a new frame/window based on options. */\n    add: function(options) {\n        if (options.target == \"_blank\") {\n            window.open(options.url);\n        } else if (options.target == \"_top\" || options.target == \"_parent\" || options.target == \"_self\") {\n            window.location = options.url;\n        } else if (!this.active || options.noscratchbook) {\n            var $galaxy_main = $(window.parent.document).find(\"#galaxy_main\");\n            if (options.target == \"galaxy_main\" || options.target == \"center\") {\n                if ($galaxy_main.length === 0) {\n                    window.location = `${options.url + (options.url.indexOf(\"?\") == -1 ? \"?\" : \"&\")}use_panels=True`;\n                } else {\n                    $galaxy_main.attr(\"src\", options.url);\n                }\n            } else window.location = options.url;\n        } else {\n            this.frames.add(options);\n        }\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/layout/scratchbook.js","// dependencies\n\n// grid model\nexport default Backbone.Model.extend({\n    defaults: {\n        url_base: \"\",\n        async: false,\n        async_ops: [],\n        categorical_filters: [],\n        filters: {},\n        sort_key: null,\n        show_item_checkboxes: false,\n        advanced_search: false,\n        cur_page: 1,\n        num_pages: 1,\n        operation: undefined,\n        item_ids: undefined\n    },\n\n    /**\n     * Return true if operation can be done asynchronously.\n     */\n    can_async_op: function(op) {\n        return _.indexOf(this.attributes.async_ops, op) !== -1;\n    },\n\n    /**\n     * Add filtering criterion.\n     */\n    add_filter: function(key, value, append) {\n        // Update URL arg with new condition.\n        if (append) {\n            // Update or append value.\n            var cur_val = this.attributes.filters[key];\n\n            var new_val;\n            if (cur_val === null || cur_val === undefined) {\n                new_val = value;\n            } else if (typeof cur_val == \"string\") {\n                if (cur_val == \"All\" || cur_val == value) {\n                    new_val = value;\n                } else {\n                    // Replace string with array.\n                    var values = [];\n                    values[0] = cur_val;\n                    values[1] = value;\n                    new_val = values;\n                }\n            } else {\n                // Current value is an array.\n                new_val = cur_val;\n                if (new_val.indexOf(value) === -1) {\n                    new_val.push(value);\n                }\n            }\n            this.attributes.filters[key] = new_val;\n        } else {\n            // Replace value.\n            this.attributes.filters[key] = value;\n        }\n    },\n\n    /**\n     * Remove filtering criterion.\n     */\n    remove_filter: function(key, condition) {\n        var cur_val = this.attributes.filters[key];\n        if (cur_val === null || cur_val === undefined) {\n            return false;\n        }\n\n        if (typeof cur_val === \"string\") {\n            // overwrite/remove condition.\n            this.attributes.filters[key] = \"\";\n        } else {\n            // filter contains an array of conditions.\n            var condition_index = _.indexOf(cur_val, condition);\n            if (condition_index !== -1) {\n                cur_val[condition_index] = \"\";\n            }\n        }\n    },\n\n    /**\n     * Returns URL data for obtaining a new grid.\n     */\n    get_url_data: function() {\n        var url_data = {\n            async: this.attributes.async,\n            sort: this.attributes.sort_key,\n            page: this.attributes.cur_page,\n            show_item_checkboxes: this.attributes.show_item_checkboxes,\n            advanced_search: this.attributes.advanced_search\n        };\n\n        // Add operation, item_ids only if they have values.\n        if (this.attributes.operation) {\n            url_data.operation = this.attributes.operation;\n        }\n        if (this.attributes.item_ids) {\n            url_data.id = this.attributes.item_ids;\n        }\n\n        // Add filter arguments to data, placing \"f-\" in front of all arguments.\n        var self = this;\n        _.each(_.pairs(self.attributes.filters), k => {\n            url_data[`f-${k[0]}`] = k[1];\n        });\n        return url_data;\n    },\n\n    // Return URL for obtaining a new grid\n    get_url: function(args) {\n        return `${this.get(\"url_base\")}?${$.param(this.get_url_data())}&${$.param(args)}`;\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/grid/grid-model.js","// dependencies\nimport Utils from \"utils/utils\";\n// grid view templates\nexport default {\n    // template\n    grid: function(options) {\n        var tmpl = \"\";\n        if (options.embedded) {\n            tmpl = this.grid_header(options) + this.grid_table(options);\n        } else {\n            tmpl = `<div class=\"loading-elt-overlay\"></div><table><tr><td width=\"75%\">${this.grid_header(\n                options\n            )}</td><td></td><td></td></tr><tr><td width=\"100%\" id=\"grid-message\" valign=\"top\"></td><td></td><td></td></tr></table>${this.grid_table(\n                options\n            )}`;\n        }\n\n        // add info text\n        if (options.info_text) {\n            tmpl += `<br><div class=\"toolParamHelp\" style=\"clear: both;\">${options.info_text}</div>`;\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    grid_table: function(options) {\n        return (\n            '<form method=\"post\" onsubmit=\"return false;\">' +\n            '<table id=\"grid-table\" class=\"grid\">' +\n            '<thead id=\"grid-table-header\"></thead>' +\n            '<tbody id=\"grid-table-body\"></tbody>' +\n            '<tfoot id=\"grid-table-footer\"></tfoot>' +\n            \"</table>\" +\n            \"</form>\"\n        );\n    },\n\n    // template\n    grid_header: function(options) {\n        var tmpl = '<div class=\"grid-header\">';\n        if (!options.embedded) {\n            tmpl += `<h2>${options.title}</h2>`;\n        }\n        if (options.global_actions) {\n            tmpl += '<ul class=\"manage-table-actions\">';\n            var show_popup = options.global_actions.length >= 3;\n            if (show_popup) {\n                tmpl +=\n                    '<li><a class=\"action-button\" id=\"popup-global-actions\" class=\"menubutton\">Actions</a></li>' +\n                    '<div popupmenu=\"popup-global-actions\">';\n            }\n            for (var i in options.global_actions) {\n                var action = options.global_actions[i];\n                tmpl += `<li><a class=\"action-button use-target\" target=\"${action.target}\" href=\"${\n                    action.url_args\n                }\" onclick=\"return false;\" >${action.label}</a></li>`;\n            }\n            if (show_popup) {\n                tmpl += \"</div>\";\n            }\n            tmpl += \"</ul>\";\n        }\n        if (options.insert) {\n            tmpl += options.insert;\n        }\n\n        // add grid filters\n        tmpl += this.grid_filters(options);\n        tmpl += \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    header: function(options) {\n        // start\n        var tmpl = \"<tr>\";\n\n        // add checkbox\n        if (options.show_item_checkboxes) {\n            tmpl += \"<th>\";\n            if (options.items.length > 0) {\n                tmpl +=\n                    '<input type=\"checkbox\" id=\"check_all\" name=select_all_checkbox value=\"true\">' +\n                    '<input type=\"hidden\" name=select_all_checkbox value=\"true\">';\n            }\n            tmpl += \"</th>\";\n        }\n\n        // create header elements\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.visible) {\n                tmpl += `<th id=\"${column.key}-header\">`;\n                if (column.href) {\n                    tmpl += `<a href=\"${column.href}\" class=\"sort-link\" sort_key=\"${column.key}\">${column.label}</a>`;\n                } else {\n                    tmpl += column.label;\n                }\n                tmpl += `<span class=\"sort-arrow\">${column.extra}</span></th>`;\n            }\n        }\n\n        // finalize\n        tmpl += \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    body: function(options) {\n        // initialize\n        var tmpl = \"\";\n        var num_rows_rendered = 0;\n        var items_length = options.items.length;\n\n        // empty grid?\n        if (items_length == 0) {\n            // No results.\n            tmpl += '<tr><td colspan=\"100\"><em>No Items</em></td></tr>';\n            num_rows_rendered = 1;\n        }\n\n        // create rows\n        for (var i in options.items) {\n            // encode ids\n            var item = options.items[i];\n            var encoded_id = item.encode_id;\n            var popupmenu_id = `grid-${i}-popup`;\n\n            // Tag current\n            tmpl += \"<tr \";\n            if (options.current_item_id == item.id) {\n                tmpl += 'class=\"current\"';\n            }\n            tmpl += \">\";\n\n            // Item selection column\n            if (options.show_item_checkboxes) {\n                tmpl += `<td style=\"width: 1.5em;\"><input type=\"checkbox\" name=\"id\" value=\"${encoded_id}\" id=\"${\n                    encoded_id\n                }\" class=\"grid-row-select-checkbox\" /></td>`;\n            }\n\n            // Data columns\n            for (var j in options.columns) {\n                var column = options.columns[j];\n                if (column.visible) {\n                    // Nowrap\n                    var nowrap = \"\";\n                    if (column.nowrap) {\n                        nowrap = 'style=\"white-space:nowrap;\"';\n                    }\n\n                    // get column settings\n                    var column_settings = item.column_config[column.label];\n\n                    // load attributes\n                    var link = column_settings.link;\n                    var value = column_settings.value;\n                    var target = column_settings.target;\n\n                    // unescape value\n                    if (jQuery.type(value) === \"string\") {\n                        value = value.replace(/\\/\\//g, \"/\");\n                    }\n\n                    // Attach popup menu?\n                    var id = \"\";\n                    var cls = \"\";\n                    if (column.attach_popup) {\n                        id = `grid-${i}-popup`;\n                        cls = \"menubutton\";\n                        if (link != \"\") {\n                            cls += \" split\";\n                        }\n                        cls += \" popup\";\n                    }\n\n                    // Check for row wrapping\n                    tmpl += `<td ${nowrap}>`;\n\n                    // Link\n                    if (link) {\n                        if (options.operations.length != 0) {\n                            tmpl += `<div id=\"${id}\" class=\"${cls}\" style=\"float: left;\">`;\n                        }\n                        tmpl += `<a class=\"menubutton-label use-target\" target=\"${target}\" href=\"${\n                            link\n                        }\" onclick=\"return false;\">${value}</a>`;\n                        if (options.operations.length != 0) {\n                            tmpl += \"</div>\";\n                        }\n                    } else {\n                        tmpl += `<div id=\"${id}\" class=\"${cls}\"><label id=\"${column.label_id_prefix}${\n                            encoded_id\n                        }\" for=\"${encoded_id}\">${value || \"\"}</label></div>`;\n                    }\n                    tmpl += \"</td>\";\n                }\n            }\n            tmpl += \"</tr>\";\n            num_rows_rendered++;\n        }\n        return tmpl;\n    },\n\n    // template\n    footer: function(options) {\n        // create template string\n        var tmpl = \"\";\n\n        // paging\n        if (options.use_paging && options.num_pages > 1) {\n            // get configuration\n            var num_page_links = options.num_page_links;\n            var cur_page_num = options.cur_page_num;\n            var num_pages = options.num_pages;\n\n            // First pass on min page.\n            var page_link_range = num_page_links / 2;\n            var min_page = cur_page_num - page_link_range;\n            var min_offset = 0;\n            if (min_page <= 0) {\n                // Min page is too low.\n                min_page = 1;\n                min_offset = page_link_range - (cur_page_num - min_page);\n            }\n\n            // Set max page.\n            var max_range = page_link_range + min_offset;\n            var max_page = cur_page_num + max_range;\n            var max_offset;\n            if (max_page <= num_pages) {\n                // Max page is fine.\n                max_offset = 0;\n            } else {\n                // Max page is too high.\n                max_page = num_pages;\n                // +1 to account for the +1 in the loop below.\n                max_offset = max_range - (max_page + 1 - cur_page_num);\n            }\n\n            // Second and final pass on min page to add any unused\n            // offset from max to min.\n            if (max_offset != 0) {\n                min_page -= max_offset;\n                if (min_page < 1) {\n                    min_page = 1;\n                }\n            }\n\n            // template header\n            tmpl += '<tr id=\"page-links-row\">';\n            if (options.show_item_checkboxes) {\n                tmpl += \"<td></td>\";\n            }\n            tmpl += '<td colspan=\"100\">' + '<span id=\"page-link-container\">' + \"Page:\";\n\n            if (min_page > 1) {\n                tmpl +=\n                    '<span class=\"page-link\" id=\"page-link-1\"><a href=\"javascript:void(0);\" page_num=\"1\" onclick=\"return false;\">1</a></span> ...';\n            }\n\n            // create page urls\n            for (var page_index = min_page; page_index < max_page + 1; page_index++) {\n                if (page_index == options.cur_page_num) {\n                    tmpl += `<span class=\"page-link inactive-link\" id=\"page-link-${page_index}\">${page_index}</span>`;\n                } else {\n                    tmpl += `<span class=\"page-link\" id=\"page-link-${\n                        page_index\n                    }\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"${page_index}\">${\n                        page_index\n                    }</a></span>`;\n                }\n            }\n\n            // show last page\n            if (max_page < num_pages) {\n                tmpl += `...<span class=\"page-link\" id=\"page-link-${\n                    num_pages\n                }\"><a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"${num_pages}\">${\n                    num_pages\n                }</a></span>`;\n            }\n            tmpl += \"</span>\";\n\n            // Show all link\n            tmpl +=\n                '<span class=\"page-link\" id=\"show-all-link-span\"> | <a href=\"javascript:void(0);\" onclick=\"return false;\" page_num=\"all\">Show All</a></span>' +\n                \"</td>\" +\n                \"</tr>\";\n        }\n\n        // Grid operations for multiple items.\n        if (options.show_item_checkboxes) {\n            // start template\n            tmpl +=\n                \"<tr>\" +\n                '<input type=\"hidden\" id=\"operation\" name=\"operation\" value=\"\">' +\n                \"<td></td>\" +\n                '<td colspan=\"100\">' +\n                'For <span class=\"grid-selected-count\"></span> selected items: ';\n\n            // configure buttons for operations\n            for (var i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.allow_multiple) {\n                    tmpl += `<input type=\"button\" value=\"${\n                        operation.label\n                    }\" class=\"operation-button action-button\">&nbsp;`;\n                }\n            }\n\n            // finalize template\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // count global operations\n        var found_global = false;\n        for (i in options.operations) {\n            if (options.operations[i].global_operation) {\n                found_global = true;\n                break;\n            }\n        }\n\n        // add global operations\n        if (found_global) {\n            tmpl += \"<tr>\" + '<td colspan=\"100\">';\n            for (i in options.operations) {\n                var operation = options.operations[i];\n                if (operation.global_operation) {\n                    tmpl += `<a class=\"action-button\" href=\"${operation.global_operation}\">${operation.label}</a>`;\n                }\n            }\n            tmpl += \"</td>\" + \"</tr>\";\n        }\n\n        // add legend\n        if (options.legend) {\n            tmpl += `<tr><td colspan=\"100\">${options.legend}</td></tr>`;\n        }\n\n        // return\n        return tmpl;\n    },\n\n    // template\n    message: function(options) {\n        var status = options.status;\n        if ([\"success\", \"ok\"].indexOf(status) != -1) {\n            status = \"done\";\n        }\n        return `<p><div class=\"${status}message transient-message\">${_.escape(\n            options.message\n        )}</div><div style=\"clear: both\"></div></p>`;\n    },\n\n    // template\n    grid_filters: function(options) {\n        // get filters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n\n        // show advanced search if flag set or if there are filters for advanced search fields\n        var advanced_search_display = \"none\";\n        if (options.advanced_search) {\n            advanced_search_display = \"block\";\n        }\n\n        // identify columns with advanced filtering\n        var show_advanced_search_link = false;\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                var column_key = column.key;\n                var f_key = filters[column_key];\n                var d_key = default_filter_dict[column_key];\n                if (f_key && d_key && f_key != d_key) {\n                    advanced_search_display = \"block\";\n                }\n                show_advanced_search_link = true;\n            }\n        }\n\n        // hide standard search if advanced is shown\n        var standard_search_display = \"block\";\n        if (advanced_search_display == \"block\") {\n            standard_search_display = \"none\";\n        }\n\n        //\n        // standard search\n        //\n        var tmpl = `<div id=\"standard-search\" style=\"display: ${\n            standard_search_display\n        };\"><table><tr><td style=\"padding: 0;\"><table>`;\n\n        // add standard filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"standard\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize standard search\n        tmpl += \"</table>\" + \"</td>\" + \"</tr>\" + \"<tr>\" + \"<td>\";\n\n        // show advanced search link in standard display\n        if (show_advanced_search_link) {\n            tmpl += '<a href=\"\" class=\"advanced-search-toggle\">Advanced Search</a>';\n        }\n\n        // finalize standard search display\n        tmpl += \"</td>\" + \"</tr>\" + \"</table>\" + \"</div>\";\n\n        //\n        // advanced search\n        //\n        tmpl += `<div id=\"advanced-search\" style=\"display: ${\n            advanced_search_display\n        }; margin-top: 5px; border: 1px solid #ccc;\"><table><tr><td style=\"text-align: left\" colspan=\"100\"><a href=\"\" class=\"advanced-search-toggle\">Close Advanced Search</a></td></tr>`;\n\n        // add advanced filters\n        for (var i in options.columns) {\n            var column = options.columns[i];\n            if (column.filterable == \"advanced\") {\n                tmpl += this.grid_column_filter(options, column);\n            }\n        }\n\n        // finalize advanced search template\n        tmpl += \"</table>\" + \"</div>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template\n    grid_column_filter: function(options, column) {\n        // collect parameters\n        var default_filter_dict = options.default_filter_dict;\n        var filters = options.filters;\n        var column_label = column.label;\n        var column_key = column.key;\n        if (column.filterable == \"advanced\") {\n            column_label = column_label.toLowerCase();\n        }\n\n        // start\n        var tmpl = \"<tr>\";\n\n        if (column.filterable == \"advanced\") {\n            tmpl += `<td align=\"left\" style=\"padding-left: 10px\">${column_label}:</td>`;\n        }\n        tmpl += '<td style=\"padding-bottom: 1px;\">';\n        if (column.is_text) {\n            tmpl += `<form class=\"text-filter-form\" column_key=\"${column_key}\" action=\"${options.url}\" method=\"get\" >`;\n            // Carry forward filtering criteria with hidden inputs.\n            for (i in options.columns) {\n                var temp_column = options.columns[i];\n                var filter_value = filters[temp_column.key];\n                if (filter_value) {\n                    if (filter_value != \"All\") {\n                        if (temp_column.is_text) {\n                            filter_value = JSON.stringify(filter_value);\n                        }\n                        tmpl += `<input type=\"hidden\" id=\"${temp_column.key}\" name=\"f-${temp_column.key}\" value=\"${\n                            filter_value\n                        }\"/>`;\n                    }\n                }\n            }\n            // Print current filtering criteria and links to delete.\n            tmpl += `<span id=\"${column_key}-filtering-criteria\">`;\n\n            // add filters\n            var column_filter = filters[column_key];\n            if (column_filter) {\n                // identify type\n                var type = jQuery.type(column_filter);\n\n                // single filter value\n                if (type == \"string\") {\n                    if (column_filter != \"All\") {\n                        // append template\n                        tmpl += this.filter_element(column_key, column_filter);\n                    }\n                }\n\n                // multiple filter values\n                if (type == \"array\") {\n                    for (var i in column_filter) {\n                        // get filter\n                        var filter = column_filter[i];\n\n                        // copy filters and remove entry\n                        var params = column_filter;\n                        params = params.slice(i);\n\n                        // append template\n                        tmpl += this.filter_element(column_key, filter);\n                    }\n                }\n            }\n\n            // close span\n            tmpl += \"</span>\";\n\n            // Set value, size of search input field. Minimum size is 20 characters.\n            var value = \"\";\n            if (column.filterable == \"standard\") {\n                value = column.label.toLowerCase();\n                var size = value.length;\n                if (size < 20) {\n                    size = 20;\n                }\n                // +4 to account for space after placeholder\n                size = size + 4;\n            }\n\n            // print input field for column\n            tmpl += `<span class=\"search-box\"><input class=\"search-box-input\" id=\"input-${column_key}-filter\" name=\"f-${\n                column_key\n            }\" type=\"text\" placeholder=\"${value}\" size=\"${\n                size\n            }\"/><button type=\"submit\" style=\"background: transparent; border: none; padding: 4px; margin: 0px;\"><i class=\"fa fa-search\"></i></button></span></form>`;\n        } else {\n            // filter criteria\n            tmpl += `<span id=\"${column_key}-filtering-criteria\">`;\n\n            // add category filters\n            var seperator = false;\n            for (var cf_label in options.categorical_filters[column_key]) {\n                // get category filter\n                var cf = options.categorical_filters[column_key][cf_label];\n\n                // each filter will have only a single argument, so get that single argument\n                var cf_key = \"\";\n                var cf_arg = \"\";\n                for (var key in cf) {\n                    cf_key = key;\n                    cf_arg = cf[key];\n                }\n\n                // add seperator\n                if (seperator) {\n                    tmpl += \" | \";\n                }\n                seperator = true;\n\n                // add category\n                var filter = filters[column_key];\n                if (filter && cf[column_key] && filter == cf_arg) {\n                    tmpl += `<span class=\"categorical-filter ${column_key}-filter current-filter\">${cf_label}</span>`;\n                } else {\n                    tmpl += `<span class=\"categorical-filter ${\n                        column_key\n                    }-filter\"><a href=\"javascript:void(0);\" filter_key=\"${cf_key}\" filter_val=\"${cf_arg}\">${\n                        cf_label\n                    }</a></span>`;\n                }\n            }\n            tmpl += \"</span>\";\n        }\n        tmpl += \"</td>\" + \"</tr>\";\n\n        // return template\n        return tmpl;\n    },\n\n    // template for filter items\n    filter_element: function(filter_key, filter_value) {\n        filter_value = Utils.sanitize(filter_value);\n        return `<span class=\"text-filter-val\">${filter_value}<a href=\"javascript:void(0);\" filter_key=\"${\n            filter_key\n        }\" filter_val=\"${\n            filter_value\n        }\"><i class=\"fa fa-times\" style=\"padding-left: 5px; padding-bottom: 6px;\"/></a></span>`;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/grid/grid-template.js","/**\n * Top-level trackster code, used for creating/loading visualizations and user interface elements.\n */\n\n// global variables\nvar ui = null;\nvar view = null;\nvar browser_router = null;\n\n// trackster viewer\nimport * as _ from \"libs/underscore\";\nimport tracks from \"viz/trackster/tracks\";\nimport visualization from \"viz/visualization\";\nimport mod_icon_btn from \"mvc/ui/icon-button\";\nimport query_string from \"utils/query-string-parsing\";\nimport GridView from \"mvc/grid/grid-view\";\nimport mod_utils from \"utils/utils\";\nimport \"libs/jquery/jquery.event.drag\";\nimport \"libs/jquery/jquery.event.hover\";\nimport \"libs/jquery/jquery.mousewheel\";\nimport \"libs/jquery/jquery-ui\";\nimport \"libs/jquery/select2\";\nimport \"libs/farbtastic\";\nimport \"libs/jquery/jquery.form\";\nimport \"libs/jquery/jquery.rating\";\nimport \"ui/editable-text\";\n/**\n * Base Object/Model for inhertiance.\n */\nvar Base = function() {\n    if (this.initialize) {\n        this.initialize.apply(this, arguments);\n    }\n};\nBase.extend = Backbone.Model.extend;\n\n/**\n * User interface controls for trackster\n */\nvar TracksterUI = Base.extend({\n    initialize: function(baseURL) {\n        mod_utils.cssLoadFile(\"static/style/jquery.rating.css\");\n        mod_utils.cssLoadFile(\"static/style/autocomplete_tagging.css\");\n        mod_utils.cssLoadFile(\"static/style/jquery-ui/smoothness/jquery-ui.css\");\n        mod_utils.cssLoadFile(\"static/style/library.css\");\n        mod_utils.cssLoadFile(\"static/style/trackster.css\");\n        this.baseURL = baseURL;\n    },\n\n    /**\n     * Save visualization, returning a Deferred object for the remote call to save.\n     */\n    save_viz: function() {\n        // show dialog\n        Galaxy.modal.show({ title: \"Saving...\", body: \"progress\" });\n\n        // Save bookmarks.\n        var bookmarks = [];\n        $(\".bookmark\").each(function() {\n            bookmarks.push({\n                position: $(this)\n                    .children(\".position\")\n                    .text(),\n                annotation: $(this)\n                    .children(\".annotation\")\n                    .text()\n            });\n        });\n\n        // FIXME: give unique IDs to Drawables and save overview as ID.\n        var overview_track_name = view.overview_drawable ? view.overview_drawable.config.get_value(\"name\") : null;\n\n        var viz_config = {\n            view: view.to_dict(),\n            viewport: {\n                chrom: view.chrom,\n                start: view.low,\n                end: view.high,\n                overview: overview_track_name\n            },\n            bookmarks: bookmarks\n        };\n\n        // Make call to save visualization.\n        return $.ajax({\n            url: `${Galaxy.root}visualization/save`,\n            type: \"POST\",\n            dataType: \"json\",\n            data: {\n                id: view.vis_id,\n                title: view.config.get_value(\"name\"),\n                dbkey: view.dbkey,\n                type: \"trackster\",\n                vis_json: JSON.stringify(viz_config)\n            }\n        })\n            .success(vis_info => {\n                Galaxy.modal.hide();\n                view.vis_id = vis_info.vis_id;\n                view.has_changes = false;\n\n                // Needed to set URL when first saving a visualization.\n                window.history.pushState({}, \"\", vis_info.url + window.location.hash);\n            })\n            .error(() => {\n                // show dialog\n                Galaxy.modal.show({\n                    title: \"Could Not Save\",\n                    body: \"Could not save visualization. Please try again later.\",\n                    buttons: {\n                        Cancel: function() {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            });\n    },\n\n    /**\n     * Create button menu\n     */\n    createButtonMenu: function() {\n        var self = this;\n\n        var menu = mod_icon_btn.create_icon_buttons_menu(\n            [\n                {\n                    icon_class: \"plus-button\",\n                    title: \"Add tracks\",\n                    on_click: function() {\n                        visualization.select_datasets({ dbkey: view.dbkey }, new_tracks => {\n                            _.each(new_tracks, track => {\n                                view.add_drawable(tracks.object_from_template(track, view, view));\n                            });\n                        });\n                    }\n                },\n                {\n                    icon_class: \"block--plus\",\n                    title: \"Add group\",\n                    on_click: function() {\n                        view.add_drawable(\n                            new tracks.DrawableGroup(view, view, {\n                                name: \"New Group\"\n                            })\n                        );\n                    }\n                },\n                {\n                    icon_class: \"bookmarks\",\n                    title: \"Bookmarks\",\n                    on_click: function() {\n                        // HACK -- use style to determine if panel is hidden and hide/show accordingly.\n                        force_right_panel($(\"div#right\").css(\"right\") == \"0px\" ? \"hide\" : \"show\");\n                    }\n                },\n                {\n                    icon_class: \"globe\",\n                    title: \"Circster\",\n                    on_click: function() {\n                        window.location = `${self.baseURL}visualization/circster?id=${view.vis_id}`;\n                    }\n                },\n                {\n                    icon_class: \"disk--arrow\",\n                    title: \"Save\",\n                    on_click: function() {\n                        self.save_viz();\n                    }\n                },\n                {\n                    icon_class: \"cross-circle\",\n                    title: \"Close\",\n                    on_click: function() {\n                        self.handle_unsaved_changes(view);\n                    }\n                }\n            ],\n            {\n                tooltip_config: { placement: \"bottom\" }\n            }\n        );\n\n        this.buttonMenu = menu;\n        return menu;\n    },\n\n    /**\n     * Add bookmark.\n     */\n    add_bookmark: function(position, annotation, editable) {\n        // Create HTML.\n        var bookmarks_container = $(\"#right .unified-panel-body\");\n\n        var new_bookmark = $(\"<div/>\")\n            .addClass(\"bookmark\")\n            .appendTo(bookmarks_container);\n\n        var position_div = $(\"<div/>\")\n            .addClass(\"position\")\n            .appendTo(new_bookmark);\n\n        var position_link = $(\"<a href=''/>\")\n            .text(position)\n            .appendTo(position_div)\n            .click(() => {\n                view.go_to(position);\n                return false;\n            });\n\n        var annotation_div = $(\"<div/>\")\n            .text(annotation)\n            .appendTo(new_bookmark);\n\n        // If editable, enable bookmark deletion and annotation editing.\n        if (editable) {\n            var delete_icon_container = $(\"<div/>\")\n                .addClass(\"delete-icon-container\")\n                .prependTo(new_bookmark)\n                .click(() => {\n                    // Remove bookmark.\n                    new_bookmark.slideUp(\"fast\");\n                    new_bookmark.remove();\n                    view.has_changes = true;\n                    return false;\n                });\n\n            var delete_icon = $(\"<a href=''/>\")\n                .addClass(\"icon-button delete\")\n                .appendTo(delete_icon_container);\n\n            annotation_div\n                .make_text_editable({\n                    num_rows: 3,\n                    use_textarea: true,\n                    help_text: \"Edit bookmark note\"\n                })\n                .addClass(\"annotation\");\n        }\n\n        view.has_changes = true;\n        return new_bookmark;\n    },\n\n    /**\n     * Create a complete Trackster visualization. Returns view.\n     */\n    create_visualization: function(view_config, viewport_config, drawables_config, bookmarks_config, editable) {\n        // Create view.\n        var self = this;\n\n        var view = new tracks.TracksterView(_.extend(view_config, { header: false }));\n\n        view.editor = true;\n        $.when(view.load_chroms_deferred).then(chrom_info => {\n            // Viewport config.\n            if (viewport_config) {\n                var chrom = viewport_config.chrom;\n                var start = viewport_config.start;\n                var end = viewport_config.end;\n                var overview_drawable_name = viewport_config.overview;\n\n                if (chrom && start !== undefined && end) {\n                    view.change_chrom(chrom, start, end);\n                } else {\n                    // No valid viewport, so use first chromosome.\n                    view.change_chrom(chrom_info[0].chrom);\n                }\n            } else {\n                // No viewport, so use first chromosome.\n                view.change_chrom(chrom_info[0].chrom);\n            }\n\n            // Add drawables to view.\n            if (drawables_config) {\n                // FIXME: can from_dict() be used to create view and add drawables?\n                var drawable_config;\n\n                var drawable_type;\n                var drawable;\n                for (var i = 0; i < drawables_config.length; i++) {\n                    view.add_drawable(tracks.object_from_template(drawables_config[i], view, view));\n                }\n            }\n\n            // Set overview.\n            var overview_drawable;\n            for (var i = 0; i < view.drawables.length; i++) {\n                if (view.drawables[i].config.get_value(\"name\") === overview_drawable_name) {\n                    view.set_overview(view.drawables[i]);\n                    break;\n                }\n            }\n\n            // Load bookmarks.\n            if (bookmarks_config) {\n                var bookmark;\n                for (var i = 0; i < bookmarks_config.length; i++) {\n                    bookmark = bookmarks_config[i];\n                    self.add_bookmark(bookmark[\"position\"], bookmark[\"annotation\"], editable);\n                }\n            }\n\n            // View has no changes as of yet.\n            view.has_changes = false;\n        });\n\n        // Final initialization.\n        this.set_up_router({ view: view });\n\n        return view;\n    },\n\n    /**\n     * Set up location router to use hashes as track browser locations.\n     */\n    set_up_router: function(options) {\n        new visualization.TrackBrowserRouter(options);\n        Backbone.history.start();\n    },\n\n    /**\n     * Set up keyboard navigation for a visualization.\n     */\n    init_keyboard_nav: function(view) {\n        // Keyboard navigation. Scroll ~7% of height when scrolling up/down.\n        $(document).keyup(e => {\n            // Do not navigate if arrow keys used in input element.\n            if ($(e.srcElement).is(\":input\")) {\n                return;\n            }\n\n            // Key codes: left == 37, up == 38, right == 39, down == 40\n            switch (e.which) {\n                case 37:\n                    view.move_fraction(0.25);\n                    break;\n                case 38:\n                    var change = Math.round(view.viewport_container.height() / 15.0);\n                    view.viewport_container.scrollTop(view.viewport_container.scrollTop() - 20);\n                    break;\n                case 39:\n                    view.move_fraction(-0.25);\n                    break;\n                case 40:\n                    var change = Math.round(view.viewport_container.height() / 15.0);\n                    view.viewport_container.scrollTop(view.viewport_container.scrollTop() + 20);\n                    break;\n            }\n        });\n    },\n\n    /**\n     * Handle unsaved changes in visualization.\n     */\n    handle_unsaved_changes: function(view) {\n        if (view.has_changes) {\n            var self = this;\n            Galaxy.modal.show({\n                title: \"Close visualization\",\n                body: \"There are unsaved changes to your visualization which will be lost if you do not save them.\",\n                buttons: {\n                    Cancel: function() {\n                        Galaxy.modal.hide();\n                    },\n                    \"Leave without Saving\": function() {\n                        $(window).off(\"beforeunload\");\n                        window.location = `${Galaxy.root}visualization`;\n                    },\n                    Save: function() {\n                        $.when(self.save_viz()).then(() => {\n                            window.location = `${Galaxy.root}visualization`;\n                        });\n                    }\n                }\n            });\n        } else {\n            window.location = `${Galaxy.root}visualization`;\n        }\n    }\n});\n\nvar TracksterView = Backbone.View.extend({\n    // initalize trackster\n    initialize: function() {\n        // load ui\n        ui = new TracksterUI(Galaxy.root);\n\n        // create button menu\n        ui.createButtonMenu();\n\n        // attach the button menu to the panel header and float it left\n        ui.buttonMenu.$el.attr(\"style\", \"float: right\");\n\n        // add to center panel\n        $(\"#center .unified-panel-header-inner\").append(ui.buttonMenu.$el);\n\n        // configure right panel\n        $(\"#right .unified-panel-title\").append(\"Bookmarks\");\n        $(\"#right .unified-panel-icons\").append(\n            \"<a id='add-bookmark-button' class='icon-button menu-button plus-button' href='javascript:void(0);' title='Add bookmark'></a>\"\n        );\n\n        // resize view when showing/hiding right panel (bookmarks for now).\n        $(\"#right-border\").click(() => {\n            view.resize_window();\n        });\n\n        // hide right panel\n        force_right_panel(\"hide\");\n\n        // check if id is available\n        if (galaxy_config.app.id) {\n            this.view_existing();\n        } else if (query_string.get(\"dataset_id\")) {\n            this.choose_existing_or_new();\n        } else {\n            this.view_new();\n        }\n    },\n\n    choose_existing_or_new: function() {\n        var self = this;\n        var dbkey = query_string.get(\"dbkey\");\n        var listTracksParams = {};\n\n        var dataset_params = {\n            dbkey: dbkey,\n            dataset_id: query_string.get(\"dataset_id\"),\n            hda_ldda: query_string.get(\"hda_ldda\"),\n            gene_region: query_string.get(\"gene_region\")\n        };\n\n        if (dbkey) {\n            listTracksParams[\"f-dbkey\"] = dbkey;\n        }\n\n        Galaxy.modal.show({\n            title: \"View Data in a New or Saved Visualization?\",\n            // either have text in here or have to remove body and the header/footer margins\n            body: `<p><ul style='list-style: disc inside none'>You can add this dataset as:<li>a new track to one of your existing, saved Trackster sessions if they share the genome build: <b>${dbkey ||\n                \"Not available.\"}</b></li><li>or create a new session with this dataset as the only track</li></ul></p>`,\n            buttons: {\n                Cancel: function() {\n                    window.location = `${Galaxy.root}visualizations/list`;\n                },\n                \"View in saved visualization\": function() {\n                    self.view_in_saved(dataset_params);\n                },\n                \"View in new visualization\": function() {\n                    self.view_new();\n                }\n            }\n        });\n    },\n\n    // view\n    view_in_saved: function(dataset_params) {\n        var tracks_grid = new GridView({\n            url_base: `${Galaxy.root}visualization/list_tracks`,\n            dict_format: true,\n            embedded: true\n        });\n        Galaxy.modal.show({\n            title: \"Add Data to Saved Visualization\",\n            body: tracks_grid.$el,\n            buttons: {\n                Cancel: function() {\n                    window.location = `${Galaxy.root}visualizations/list`;\n                },\n                \"Add to visualization\": function() {\n                    $(parent.document)\n                        .find(\"input[name=id]:checked\")\n                        .each(function() {\n                            dataset_params.id = $(this).val();\n                            window.location = `${Galaxy.root}visualization/trackster?${$.param(dataset_params)}`;\n                        });\n                }\n            }\n        });\n    },\n\n    // view\n    view_existing: function() {\n        // get config\n        var viz_config = galaxy_config.app.viz_config;\n\n        // view\n        view = ui.create_visualization(\n            {\n                container: $(\"#center .unified-panel-body\"),\n                name: viz_config.title,\n                vis_id: viz_config.vis_id,\n                dbkey: viz_config.dbkey\n            },\n            viz_config.viewport,\n            viz_config.tracks,\n            viz_config.bookmarks,\n            true\n        );\n\n        // initialize editor\n        this.init_editor();\n    },\n\n    // view\n    view_new: function() {\n        // reference this\n        var self = this;\n\n        // ajax\n        $.ajax({\n            url: `${Galaxy.root}api/genomes?chrom_info=True`,\n            data: {},\n            error: function() {\n                alert(\"Couldn't create new browser.\");\n            },\n            success: function(response) {\n                // show dialog\n                Galaxy.modal.show({\n                    title: \"New Visualization\",\n                    body: self.template_view_new(response),\n                    buttons: {\n                        Cancel: function() {\n                            window.location = `${Galaxy.root}visualizations/list`;\n                        },\n                        Create: function() {\n                            self.create_browser($(\"#new-title\").val(), $(\"#new-dbkey\").val());\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n\n                // select default\n                var dbkeys_in_genomes = response.map(r => r[1]);\n                if (galaxy_config.app.default_dbkey && _.contains(dbkeys_in_genomes, galaxy_config.app.default_dbkey)) {\n                    $(\"#new-dbkey\").val(galaxy_config.app.default_dbkey);\n                }\n\n                // change focus\n                $(\"#new-title\").focus();\n                $(\"select[name='dbkey']\").select2();\n\n                // to support the large number of options for dbkey, enable scrolling in overlay.\n                $(\"#overlay\").css(\"overflow\", \"auto\");\n            }\n        });\n    },\n\n    // new browser form\n    template_view_new: function(response) {\n        // start template\n        var html =\n            '<form id=\"new-browser-form\" action=\"javascript:void(0);\" method=\"post\" onsubmit=\"return false;\">' +\n            '<div class=\"form-row\">' +\n            '<label for=\"new-title\">Browser name:</label>' +\n            '<div class=\"form-row-input\">' +\n            '<input type=\"text\" name=\"title\" id=\"new-title\" value=\"Unnamed\"></input>' +\n            \"</div>\" +\n            '<div style=\"clear: both;\"></div>' +\n            \"</div>\" +\n            '<div class=\"form-row\">' +\n            '<label for=\"new-dbkey\">Reference genome build (dbkey): </label>' +\n            '<div class=\"form-row-input\">' +\n            '<select name=\"dbkey\" id=\"new-dbkey\">';\n\n        // add dbkeys\n        for (var i = 0; i < response.length; i++) {\n            html += `<option value=\"${response[i][1]}\">${response[i][0]}</option>`;\n        }\n\n        // close selection/finalize template\n        html += `</select></div><div style=\"clear: both;\"></div></div><div class=\"form-row\">Is the build not listed here? <a href=\"${\n            Galaxy.root\n        }user/dbkeys?use_panels=True\">Add a Custom Build</a></div></form>`;\n\n        // return\n        return html;\n    },\n\n    // create\n    create_browser: function(name, dbkey) {\n        $(document).trigger(\"convert_to_values\");\n\n        view = ui.create_visualization(\n            {\n                container: $(\"#center .unified-panel-body\"),\n                name: name,\n                dbkey: dbkey\n            },\n            galaxy_config.app.gene_region\n        );\n\n        // initialize editor\n        this.init_editor();\n\n        // modify view setting\n        view.editor = true;\n    },\n\n    // initialization for editor-specific functions.\n    init_editor: function() {\n        // set title\n        $(\"#center .unified-panel-title\").text(`${view.config.get_value(\"name\")} (${view.dbkey})`);\n\n        // add dataset\n        if (galaxy_config.app.add_dataset)\n            $.ajax({\n                url: `${Galaxy.root}api/datasets/${galaxy_config.app.add_dataset}`,\n                data: { hda_ldda: \"hda\", data_type: \"track_config\" },\n                dataType: \"json\",\n                success: function(track_data) {\n                    view.add_drawable(tracks.object_from_template(track_data, view, view));\n                }\n            });\n\n        // initialize icons\n        $(\"#add-bookmark-button\").click(() => {\n            // add new bookmark.\n            var position = `${view.chrom}:${view.low}-${view.high}`;\n\n            var annotation = \"Bookmark description\";\n            return ui.add_bookmark(position, annotation, true);\n        });\n\n        // initialize keyboard\n        ui.init_keyboard_nav(view);\n\n        $(window).on(\"beforeunload\", () => {\n            if (view.has_changes) {\n                return \"There are unsaved changes to your visualization that will be lost if you leave this page.\";\n            }\n        });\n    }\n});\n\nexport default {\n    TracksterUI: TracksterUI,\n    GalaxyApp: TracksterView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/viz/trackster.js","import * as _ from \"libs/underscore\";\nimport visualization from \"viz/visualization\";\nimport viz_views from \"viz/viz_views\";\nimport util from \"viz/trackster/util\";\nimport slotting from \"viz/trackster/slotting\";\nimport painters from \"viz/trackster/painters\";\nimport filters_mod from \"viz/trackster/filters\";\nimport data from \"mvc/dataset/data\";\nimport tools_mod from \"mvc/tool/tools\";\nimport config_mod from \"utils/config\";\nimport bbi from \"viz/bbi-data-manager\";\nimport \"ui/editable-text\";\nvar extend = _.extend;\n\n// ---- Web UI specific utilities ----\n\n/**\n * Dictionary of HTML element-JavaScript object relationships.\n */\n// TODO: probably should separate moveable objects from containers.\nvar html_elt_js_obj_dict = {};\n\n/**\n * Designates an HTML as a container.\n */\nvar is_container = (element, obj) => {\n    html_elt_js_obj_dict[element.attr(\"id\")] = obj;\n};\n\n/**\n * Make `element` moveable within parent and sibling elements by dragging `handle` (a selector).\n * Function manages JS objects, containers as well.\n *\n * @param element HTML element to make moveable\n * @param handle_class classname that denotes HTML element to be used as handle\n * @param container_selector selector used to identify possible containers for this element\n * @param element_js_obj JavaScript object associated with element; used\n */\nvar moveable = (element, handle_class, container_selector, element_js_obj) => {\n    // HACK: set default value for container selector.\n    container_selector = \".group\";\n\n    // Register element with its object.\n    html_elt_js_obj_dict[element.attr(\"id\")] = element_js_obj;\n\n    // Need to provide selector for handle, not class.\n    element\n        .bind(\"drag\", { handle: `.${handle_class}`, relative: true }, function(e, d) {\n            var element = $(this);\n            var parent = $(this).parent();\n\n            var // Only sorting amongst tracks and groups.\n            children = parent.children(\".track,.group\");\n\n            var this_obj = html_elt_js_obj_dict[$(this).attr(\"id\")];\n            var child;\n            var container;\n            var top;\n            var bottom;\n            var i;\n\n            //\n            // Enable three types of dragging: (a) out of container; (b) into container;\n            // (c) sibling movement, aka sorting. Handle in this order for simplicity.\n            //\n\n            // Handle dragging out of container.\n            container = $(this).parents(container_selector);\n            if (container.length !== 0) {\n                top = container.position().top;\n                bottom = top + container.outerHeight();\n                var cur_container = html_elt_js_obj_dict[container.attr(\"id\")];\n                if (d.offsetY < top) {\n                    // Moving above container.\n                    $(this).insertBefore(container);\n                    cur_container.remove_drawable(this_obj);\n                    cur_container.container.add_drawable_before(this_obj, cur_container);\n                    return;\n                } else if (d.offsetY > bottom) {\n                    // Moving below container.\n                    $(this).insertAfter(container);\n                    cur_container.remove_drawable(this_obj);\n                    cur_container.container.add_drawable(this_obj);\n                    return;\n                }\n            }\n\n            // Handle dragging into container. Child is appended to container's content_div.\n            container = null;\n            for (i = 0; i < children.length; i++) {\n                child = $(children.get(i));\n                top = child.position().top;\n                bottom = top + child.outerHeight();\n                // Dragging into container if child is a container and offset is inside container.\n                if (child.is(container_selector) && this !== child.get(0) && d.offsetY >= top && d.offsetY <= bottom) {\n                    // Append/prepend based on where offsetY is closest to and return.\n                    if (d.offsetY - top < bottom - d.offsetY) {\n                        child.find(\".content-div\").prepend(this);\n                    } else {\n                        child.find(\".content-div\").append(this);\n                    }\n                    // Update containers. Object may not have container if it is being moved quickly.\n                    if (this_obj.container) {\n                        this_obj.container.remove_drawable(this_obj);\n                    }\n                    html_elt_js_obj_dict[child.attr(\"id\")].add_drawable(this_obj);\n                    return;\n                }\n            }\n\n            // Handle sibling movement, aka sorting.\n\n            // Determine new position\n            for (i = 0; i < children.length; i++) {\n                child = $(children.get(i));\n                if (\n                    d.offsetY < child.position().top &&\n                    // Cannot move tracks above reference track or intro div.\n                    !(child.hasClass(\"reference-track\") || child.hasClass(\"intro\"))\n                ) {\n                    break;\n                }\n            }\n\n            // If not already in the right place, move. Need\n            // to handle the end specially since we don't have\n            // insert at index\n            if (i === children.length) {\n                if (this !== children.get(i - 1)) {\n                    parent.append(this);\n                    html_elt_js_obj_dict[parent.attr(\"id\")].move_drawable(this_obj, i);\n                }\n            } else if (this !== children.get(i)) {\n                $(this).insertBefore(children.get(i));\n                // Need to adjust insert position if moving down because move is changing\n                // indices of all list items.\n                html_elt_js_obj_dict[parent.attr(\"id\")].move_drawable(this_obj, d.deltaY > 0 ? i - 1 : i);\n            }\n        })\n        .bind(\"dragstart\", function() {\n            $(this).addClass(\"dragging\");\n        })\n        .bind(\"dragend\", function() {\n            $(this).removeClass(\"dragging\");\n        });\n};\n\n/**\n * Init constants & functions used throughout trackster.\n */\nvar // Padding at the top of tracks for error messages\nERROR_PADDING = 20;\n\nvar // Maximum number of rows un a slotted track\nMAX_FEATURE_DEPTH = 100;\n\nvar // Minimum width for window for squish to be used.\nMIN_SQUISH_VIEW_WIDTH = 12000;\n\nvar // Number of pixels per tile, not including left offset.\nTILE_SIZE = 400;\n\nvar DEFAULT_DATA_QUERY_WAIT = 5000;\n\nvar // Maximum number of chromosomes that are selectable at any one time.\nMAX_CHROMS_SELECTABLE = 100;\n\nvar DATA_ERROR = \"Cannot display dataset due to an error. \";\n\nvar DATA_NOCONVERTER = \"A converter for this dataset is not installed. Please check your datatypes_conf.xml file.\";\n\nvar DATA_NONE = \"No data for this chrom/contig.\";\n\nvar DATA_PENDING =\n    \"Preparing data. This can take a while for a large dataset. \" +\n    \"If the visualization is saved and closed, preparation will continue in the background.\";\n\nvar DATA_CANNOT_RUN_TOOL = \"Tool cannot be rerun: \";\nvar DATA_LOADING = \"Loading data...\";\nvar DATA_OK = \"Ready for display\";\nvar TILE_CACHE_SIZE = 10;\nvar DATA_CACHE_SIZE = 20;\n\nvar // Numerical/continuous data display modes.\nCONTINUOUS_DATA_MODES = [\"Histogram\", \"Line\", \"Filled\", \"Intensity\"];\n\n/**\n * Round a number to a given number of decimal places.\n */\nfunction round(num, places) {\n    // Default rounding is to integer.\n    if (!places) {\n        places = 0;\n    }\n\n    var val = Math.pow(10, places);\n    return Math.round(num * val) / val;\n}\n\n/**\n * Check if a server can do byte range requests.\n */\nfunction supportsByteRanges(url) {\n    var promise = $.Deferred();\n    $.ajax({\n        type: \"HEAD\",\n        url: url,\n        beforeSend: function(xhr) {\n            xhr.setRequestHeader(\"Range\", \"bytes=0-10\");\n        },\n        success: function(result, status, xhr) {\n            promise.resolve(xhr.status === 206);\n        }\n    });\n\n    return promise;\n}\n\n/**\n * Drawables hierarchy:\n *\n * Drawable\n *    --> DrawableCollection\n *        --> DrawableGroup\n *        --> View\n *    --> Track\n */\n\n/**\n * Base class for all drawable objects. Drawable objects are associated with a view and live in a\n * container. They have the following HTML elements and structure:\n *  <container_div>\n *      <header_div>\n *      <content_div>\n *\n * They optionally have a drag handle class.\n */\nvar Drawable = function(view, container, obj_dict) {\n    if (!Drawable.id_counter) {\n        Drawable.id_counter = 0;\n    }\n    this.id = Drawable.id_counter++;\n    this.view = view;\n    this.container = container;\n    this.drag_handle_class = obj_dict.drag_handle_class;\n    this.is_overview = false;\n    this.action_icons = {};\n\n    // -- Set up drawable configuration. --\n    this.config = config_mod.ConfigSettingCollection.from_models_and_saved_values(this.config_params, obj_dict.prefs);\n\n    // If there's no saved name, use object name.\n    if (!this.config.get_value(\"name\")) {\n        this.config.set_value(\"name\", obj_dict.name);\n    }\n    if (this.config_onchange) {\n        this.config.on(\"change\", this.config_onchange, this);\n    }\n\n    // Build Drawable HTML and behaviors.\n    this.container_div = this.build_container_div();\n    this.header_div = null;\n\n    // Use opt-out policy on header creation because this is the more frequent approach:\n    // unless flag set, create header.\n    if (obj_dict.header !== false) {\n        var header_view = new viz_views.TrackHeaderView({\n            model: this,\n            id: this.id\n        });\n\n        this.header_div = header_view.$el;\n        this.container_div.append(this.header_div);\n\n        // Show icons when users is hovering over track.\n        var icons_div = header_view.icons_div;\n        this.action_icons = header_view.action_icons;\n        this.container_div.hover(\n            () => {\n                icons_div.show();\n            },\n            () => {\n                icons_div.hide();\n            }\n        );\n    }\n};\n\nDrawable.prototype.action_icons_def = [\n    // Hide/show drawable content.\n    // FIXME: make this an odict for easier lookup.\n    {\n        name: \"toggle_icon\",\n        title: \"Hide/show content\",\n        css_class: \"toggle\",\n        on_click_fn: function(drawable) {\n            if (drawable.config.get_value(\"content_visible\")) {\n                drawable.action_icons.toggle_icon.addClass(\"toggle-expand\").removeClass(\"toggle\");\n                drawable.hide_contents();\n                drawable.config.set_value(\"content_visible\", false);\n            } else {\n                drawable.action_icons.toggle_icon.addClass(\"toggle\").removeClass(\"toggle-expand\");\n                drawable.config.set_value(\"content_visible\", true);\n                drawable.show_contents();\n            }\n        }\n    },\n    // Edit settings.\n    {\n        name: \"settings_icon\",\n        title: \"Edit settings\",\n        css_class: \"gear\",\n        on_click_fn: function(drawable) {\n            var view = new config_mod.ConfigSettingCollectionView({\n                collection: drawable.config\n            });\n            view.render_in_modal(\"Configure Track\");\n        }\n    },\n    // Remove.\n    {\n        name: \"remove_icon\",\n        title: \"Remove\",\n        css_class: \"remove-icon\",\n        on_click_fn: function(drawable) {\n            // Tooltip for remove icon must be deleted when drawable is deleted.\n            $(\".tooltip\").remove();\n            drawable.remove();\n        }\n    }\n];\n\nextend(Drawable.prototype, {\n    config_params: [\n        { key: \"name\", label: \"Name\", type: \"text\", default_value: \"\" },\n        {\n            key: \"content_visible\",\n            type: \"bool\",\n            default_value: true,\n            hidden: true\n        }\n    ],\n\n    config_onchange: function() {},\n\n    init: function() {},\n\n    changed: function() {\n        this.view.changed();\n    },\n\n    can_draw: function() {\n        if (this.enabled && this.config.get_value(\"content_visible\")) {\n            return true;\n        }\n\n        return false;\n    },\n\n    request_draw: function() {},\n\n    _draw: function(options) {},\n\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: function() {},\n\n    /**\n     * Set drawable name.\n     */\n    set_name: function(new_name) {\n        this.old_name = this.config.get_value(\"name\");\n        this.config.set_value(\"name\", new_name);\n    },\n\n    /**\n     * Revert track name; currently name can be reverted only once.\n     */\n    revert_name: function() {\n        if (this.old_name) {\n            this.config.set_value(\"name\", this.old_name);\n        }\n    },\n\n    /**\n     * Remove drawable (a) from its container and (b) from the HTML.\n     */\n    remove: function() {\n        this.changed();\n\n        this.container.remove_drawable(this);\n        var view = this.view;\n        this.container_div.hide(0, function() {\n            $(this).remove();\n            // HACK: is there a better way to update the view?\n            view.update_intro_div();\n        });\n    },\n\n    /**\n     * Build drawable's container div; this is the parent div for all drawable's elements.\n     */\n    build_container_div: function() {},\n\n    /**\n     * Update icons.\n     */\n    update_icons: function() {},\n\n    /**\n     * Hide drawable's contents.\n     */\n    hide_contents: function() {},\n\n    /**\n     * Show drawable's contents.\n     */\n    show_contents: function() {},\n\n    /**\n     * Returns a shallow copy of all drawables in this drawable.\n     */\n    get_drawables: function() {}\n});\n\n/**\n * A collection of drawable objects.\n */\nvar DrawableCollection = function(view, container, obj_dict) {\n    Drawable.call(this, view, container, obj_dict);\n\n    // Attribute init.\n    this.obj_type = obj_dict.obj_type;\n    this.drawables = [];\n};\n\nextend(DrawableCollection.prototype, Drawable.prototype, {\n    /**\n     * Unpack and add drawables to the collection.\n     */\n    unpack_drawables: function(drawables_array) {\n        // Add drawables to collection.\n        this.drawables = [];\n        var drawable;\n        for (var i = 0; i < drawables_array.length; i++) {\n            drawable = object_from_template(drawables_array[i], this.view, this);\n            this.add_drawable(drawable);\n        }\n    },\n\n    /**\n     * Init each drawable in the collection.\n     */\n    init: function() {\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i].init();\n        }\n    },\n\n    /**\n     * Draw each drawable in the collection.\n     */\n    _draw: function(options) {\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i]._draw(options);\n        }\n    },\n\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: function() {\n        var dictified_drawables = [];\n        for (var i = 0; i < this.drawables.length; i++) {\n            dictified_drawables.push(this.drawables[i].to_dict());\n        }\n        return {\n            prefs: this.config.to_key_value_dict(),\n            obj_type: this.obj_type,\n            drawables: dictified_drawables\n        };\n    },\n\n    /**\n     * Add a drawable to the end of the collection.\n     */\n    add_drawable: function(drawable) {\n        this.drawables.push(drawable);\n        drawable.container = this;\n        this.changed();\n    },\n\n    /**\n     * Add a drawable before another drawable.\n     */\n    add_drawable_before: function(drawable, other) {\n        this.changed();\n        var index = this.drawables.indexOf(other);\n        if (index !== -1) {\n            this.drawables.splice(index, 0, drawable);\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Replace one drawable with another.\n     */\n    replace_drawable: function(old_drawable, new_drawable, update_html) {\n        var index = this.drawables.indexOf(old_drawable);\n        if (index !== -1) {\n            this.drawables[index] = new_drawable;\n            if (update_html) {\n                old_drawable.container_div.replaceWith(new_drawable.container_div);\n            }\n            this.changed();\n        }\n        return index;\n    },\n\n    /**\n     * Remove drawable from this collection.\n     */\n    remove_drawable: function(drawable) {\n        var index = this.drawables.indexOf(drawable);\n        if (index !== -1) {\n            // Found drawable to remove.\n            this.drawables.splice(index, 1);\n            drawable.container = null;\n            this.changed();\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Move drawable to another location in collection.\n     */\n    move_drawable: function(drawable, new_position) {\n        var index = this.drawables.indexOf(drawable);\n        if (index !== -1) {\n            // Remove from current position:\n            this.drawables.splice(index, 1);\n            // insert into new position:\n            this.drawables.splice(new_position, 0, drawable);\n            this.changed();\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Returns all drawables in this drawable.\n     */\n    get_drawables: function() {\n        return this.drawables;\n    },\n\n    /**\n     * Returns all <track_type> tracks in collection.\n     */\n    get_tracks: function(track_type) {\n        // Initialize queue with copy of drawables array.\n        var queue = this.drawables.slice(0);\n\n        var tracks = [];\n        var drawable;\n        while (queue.length !== 0) {\n            drawable = queue.shift();\n            if (drawable instanceof track_type) {\n                tracks.push(drawable);\n            } else if (drawable.drawables) {\n                queue = queue.concat(drawable.drawables);\n            }\n        }\n        return tracks;\n    }\n});\n\n/**\n * A group of drawables that are moveable, visible.\n */\nvar DrawableGroup = function(view, container, obj_dict) {\n    extend(obj_dict, {\n        obj_type: \"DrawableGroup\",\n        drag_handle_class: \"group-handle\"\n    });\n    DrawableCollection.call(this, view, container, obj_dict);\n\n    // Set up containers/moving for group: register both container_div and content div as container\n    // because both are used as containers (container div to recognize container, content_div to\n    // store elements). Group can be moved.\n    this.content_div = $(\"<div/>\")\n        .addClass(\"content-div\")\n        .attr(\"id\", `group_${this.id}_content_div`)\n        .appendTo(this.container_div);\n    is_container(this.container_div, this);\n    is_container(this.content_div, this);\n    moveable(this.container_div, this.drag_handle_class, \".group\", this);\n\n    // Set up filters.\n    this.filters_manager = new filters_mod.FiltersManager(this);\n    this.header_div.after(this.filters_manager.parent_div);\n\n    // HACK: add div to clear floating elements.\n    this.filters_manager.parent_div.after($(\"<div style='clear: both'/>\"));\n\n    // For saving drawables' filter managers when group-level filtering is done:\n    this.saved_filters_managers = [];\n\n    // Add drawables.\n    if (\"drawables\" in obj_dict) {\n        this.unpack_drawables(obj_dict.drawables);\n    }\n\n    // Restore filters.\n    if (\"filters\" in obj_dict) {\n        // FIXME: Pass collection_dict to DrawableCollection/Drawable will make this easier.\n        var old_manager = this.filters_manager;\n        this.filters_manager = new filters_mod.FiltersManager(this, obj_dict.filters);\n        old_manager.parent_div.replaceWith(this.filters_manager.parent_div);\n\n        if (obj_dict.filters.visible) {\n            this.setup_multitrack_filtering();\n        }\n    }\n};\n\nextend(DrawableGroup.prototype, Drawable.prototype, DrawableCollection.prototype, {\n    action_icons_def: [\n        Drawable.prototype.action_icons_def[0],\n        Drawable.prototype.action_icons_def[1],\n        // Replace group with composite track.\n        {\n            name: \"composite_icon\",\n            title: \"Show composite track\",\n            css_class: \"layers-stack\",\n            on_click_fn: function(group) {\n                $(\".tooltip\").remove();\n                group.show_composite_track();\n            }\n        },\n        // Toggle track filters.\n        {\n            name: \"filters_icon\",\n            title: \"Filters\",\n            css_class: \"ui-slider-050\",\n            on_click_fn: function(group) {\n                // TODO: update Tooltip text.\n                if (group.filters_manager.visible()) {\n                    // Hiding filters.\n                    group.filters_manager.clear_filters();\n                    group._restore_filter_managers();\n                    // TODO: maintain current filter by restoring and setting saved manager's\n                    // settings to current/shared manager's settings.\n                    // TODO: need to restore filter managers when moving drawable outside group.\n                } else {\n                    // Showing filters.\n                    group.setup_multitrack_filtering();\n                    group.request_draw({ clear_tile_cache: true });\n                }\n                group.filters_manager.toggle();\n            }\n        },\n        Drawable.prototype.action_icons_def[2]\n    ],\n\n    build_container_div: function() {\n        var container_div = $(\"<div/>\")\n            .addClass(\"group\")\n            .attr(\"id\", `group_${this.id}`);\n        if (this.container) {\n            this.container.content_div.append(container_div);\n        }\n        return container_div;\n    },\n\n    hide_contents: function() {\n        this.tiles_div.hide();\n    },\n\n    show_contents: function() {\n        // Show the contents div and labels (if present)\n        this.tiles_div.show();\n        // Request a redraw of the content\n        this.request_draw();\n    },\n\n    update_icons: function() {\n        //\n        // Handle update when there are no tracks.\n        //\n        var num_drawables = this.drawables.length;\n        if (num_drawables === 0) {\n            this.action_icons.composite_icon.hide();\n            this.action_icons.filters_icon.hide();\n        } else if (num_drawables === 1) {\n            this.action_icons.composite_icon.toggle(this.drawables[0] instanceof CompositeTrack);\n            this.action_icons.filters_icon.hide();\n        } else {\n            // There are 2 or more tracks.\n\n            //\n            // Determine if a composite track can be created. Current criteria:\n            // (a) all tracks are line tracks;\n            //      OR\n            // FIXME: this is not enabled right now because it has not been well tested:\n            // (b) there is a single FeatureTrack.\n            //\n\n            // All tracks the same?\n            var i;\n\n            var j;\n            var drawable;\n            var same_type = true;\n            var a_type = this.drawables[0].get_type();\n            var num_feature_tracks = 0;\n            for (i = 0; i < num_drawables; i++) {\n                drawable = this.drawables[i];\n                if (drawable.get_type() !== a_type) {\n                    can_composite = false;\n                    break;\n                }\n                if (drawable instanceof FeatureTrack) {\n                    num_feature_tracks++;\n                }\n            }\n\n            if (same_type && this.drawables[0] instanceof LineTrack) {\n                this.action_icons.composite_icon.show();\n            } else {\n                this.action_icons.composite_icon.hide();\n                $(\".tooltip\").remove();\n            }\n\n            //\n            // Set up group-level filtering and update filter icon.\n            //\n            if (num_feature_tracks > 1 && num_feature_tracks === this.drawables.length) {\n                //\n                // Find shared filters.\n                //\n                var shared_filters = {};\n\n                var filter;\n\n                // Init shared filters with filters from first drawable.\n                drawable = this.drawables[0];\n                for (j = 0; j < drawable.filters_manager.filters.length; j++) {\n                    filter = drawable.filters_manager.filters[j];\n                    shared_filters[filter.name] = [filter];\n                }\n\n                // Create lists of shared filters.\n                for (i = 1; i < this.drawables.length; i++) {\n                    drawable = this.drawables[i];\n                    for (j = 0; j < drawable.filters_manager.filters.length; j++) {\n                        filter = drawable.filters_manager.filters[j];\n                        if (filter.name in shared_filters) {\n                            shared_filters[filter.name].push(filter);\n                        }\n                    }\n                }\n\n                //\n                // Create filters for shared filters manager. Shared filters manager is group's\n                // manager.\n                //\n                this.filters_manager.remove_all();\n                var filters;\n                var new_filter;\n                var min;\n                var max;\n                for (var filter_name in shared_filters) {\n                    filters = shared_filters[filter_name];\n                    if (filters.length === num_feature_tracks) {\n                        // Add new filter.\n                        // FIXME: can filter.copy() be used?\n                        new_filter = new filters_mod.NumberFilter({\n                            name: filters[0].name,\n                            index: filters[0].index\n                        });\n                        this.filters_manager.add_filter(new_filter);\n                    }\n                }\n\n                // Show/hide icon based on filter availability.\n                this.action_icons.filters_icon.toggle(this.filters_manager.filters.length > 0);\n            } else {\n                this.action_icons.filters_icon.hide();\n            }\n        }\n    },\n\n    /**\n     * Restore individual track filter managers.\n     */\n    _restore_filter_managers: function() {\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i].filters_manager = this.saved_filters_managers[i];\n        }\n        this.saved_filters_managers = [];\n    },\n\n    /**\n     *\n     */\n    setup_multitrack_filtering: function() {\n        // Save tracks' managers and set up shared manager.\n        if (this.filters_manager.filters.length > 0) {\n            // For all tracks, save current filter manager and set manager to shared (this object's) manager.\n            this.saved_filters_managers = [];\n            for (var i = 0; i < this.drawables.length; i++) {\n                var drawable = this.drawables[i];\n                this.saved_filters_managers.push(drawable.filters_manager);\n                drawable.filters_manager = this.filters_manager;\n            }\n\n            //TODO: hide filters icons for each drawable?\n        }\n        this.filters_manager.init_filters();\n    },\n\n    /**\n     * Replace group with a single composite track that includes all group's tracks.\n     */\n    show_composite_track: function() {\n        var composite_track = new CompositeTrack(this.view, this.view, {\n            name: this.config.get_value(\"name\"),\n            drawables: this.drawables\n        });\n        var index = this.container.replace_drawable(this, composite_track, true);\n        composite_track.request_draw();\n    },\n\n    add_drawable: function(drawable) {\n        DrawableCollection.prototype.add_drawable.call(this, drawable);\n        this.update_icons();\n    },\n\n    remove_drawable: function(drawable) {\n        DrawableCollection.prototype.remove_drawable.call(this, drawable);\n        this.update_icons();\n    },\n\n    to_dict: function() {\n        // If filters are visible, need to restore original filter managers before converting to dict.\n        if (this.filters_manager.visible()) {\n            this._restore_filter_managers();\n        }\n\n        var obj_dict = extend(DrawableCollection.prototype.to_dict.call(this), {\n            filters: this.filters_manager.to_dict()\n        });\n\n        // Setup multi-track filtering again.\n        if (this.filters_manager.visible()) {\n            this.setup_multitrack_filtering();\n        }\n\n        return obj_dict;\n    },\n\n    request_draw: function(options) {\n        _.each(this.drawables, d => {\n            d.request_draw(options);\n        });\n    }\n});\n\n/**\n * View object manages a trackster visualization, including tracks and user interactions.\n * Events triggered:\n *      navigate: when browser view changes to a new locations\n */\nvar TracksterView = Backbone.View.extend({\n    initialize: function(obj_dict) {\n        extend(obj_dict, {\n            obj_type: \"View\"\n        });\n        DrawableCollection.call(this, \"View\", obj_dict.container, obj_dict);\n        this.chrom = null;\n        this.vis_id = obj_dict.vis_id;\n        this.dbkey = obj_dict.dbkey;\n        this.stand_alone = obj_dict.stand_alone !== undefined ? obj_dict.stand_alone : true;\n        this.label_tracks = [];\n        this.tracks_to_be_redrawn = [];\n        this.max_low = 0;\n        this.max_high = 0;\n        this.zoom_factor = 3;\n        this.min_separation = 30;\n        this.has_changes = false;\n        // Deferred object that indicates when view's chrom data has been loaded.\n        this.load_chroms_deferred = null;\n        this.render();\n        this.canvas_manager = new visualization.CanvasManager(this.container.get(0).ownerDocument);\n        this.reset();\n\n        // Define track configuration\n        this.config = config_mod.ConfigSettingCollection.from_models_and_saved_values(\n            [\n                {\n                    key: \"name\",\n                    label: \"Name\",\n                    type: \"text\",\n                    default_value: \"\"\n                },\n                {\n                    key: \"a_color\",\n                    label: \"A Color\",\n                    type: \"color\",\n                    default_value: \"#FF0000\"\n                },\n                {\n                    key: \"c_color\",\n                    label: \"C Color\",\n                    type: \"color\",\n                    default_value: \"#00FF00\"\n                },\n                {\n                    key: \"g_color\",\n                    label: \"G Color\",\n                    type: \"color\",\n                    default_value: \"#0000FF\"\n                },\n                {\n                    key: \"t_color\",\n                    label: \"T Color\",\n                    type: \"color\",\n                    default_value: \"#FF00FF\"\n                },\n                {\n                    key: \"n_color\",\n                    label: \"N Color\",\n                    type: \"color\",\n                    default_value: \"#AAAAAA\"\n                }\n            ],\n            { name: obj_dict.name }\n        );\n    },\n\n    render: function() {\n        // Attribute init.\n        this.requested_redraw = false;\n\n        // Create DOM elements\n        var parent_element = this.container;\n\n        var view = this;\n        // Top container for things that are fixed at the top\n        this.top_container = $(\"<div/>\")\n            .addClass(\"top-container\")\n            .appendTo(parent_element);\n        // Browser content, primary tracks are contained in here\n        this.browser_content_div = $(\"<div/>\")\n            .addClass(\"content\")\n            .appendTo(parent_element);\n        // Bottom container for things that are fixed at the bottom\n        this.bottom_container = $(\"<div/>\")\n            .addClass(\"bottom-container\")\n            .appendTo(parent_element);\n        // Label track fixed at top\n        this.top_labeltrack = $(\"<div/>\")\n            .addClass(\"top-labeltrack\")\n            .appendTo(this.top_container);\n        // Viewport for dragging tracks in center\n        this.viewport_container = $(\"<div/>\")\n            .addClass(\"viewport-container\")\n            .attr(\"id\", \"viewport-container\")\n            .appendTo(this.browser_content_div);\n        // Alias viewport_container as content_div so that it matches function of DrawableCollection/Group content_div.\n        this.content_div = this.viewport_container;\n        is_container(this.viewport_container, view);\n        // Introduction div shown when there are no tracks.\n        this.intro_div = $(\"<div/>\")\n            .addClass(\"intro\")\n            .appendTo(this.viewport_container);\n        var add_tracks_button = $(\"<div/>\")\n            .text(\"Add Datasets to Visualization\")\n            .addClass(\"action-button\")\n            .appendTo(this.intro_div)\n            .click(() => {\n                visualization.select_datasets({ dbkey: view.dbkey }, tracks => {\n                    _.each(tracks, track => {\n                        view.add_drawable(object_from_template(track, view, view));\n                    });\n                });\n            });\n\n        // Navigation at top\n        this.nav_container = $(\"<div/>\")\n            .addClass(\"trackster-nav-container\")\n            .prependTo(this.top_container);\n        this.nav = $(\"<div/>\")\n            .addClass(\"trackster-nav\")\n            .appendTo(this.nav_container);\n\n        if (this.stand_alone) {\n            this.nav_container.addClass(\"stand-alone\");\n            this.nav.addClass(\"stand-alone\");\n        }\n\n        // Overview (scrollbar and overview plot) at bottom\n        this.overview = $(\"<div/>\")\n            .addClass(\"overview\")\n            .appendTo(this.bottom_container);\n        this.overview_viewport = $(\"<div/>\")\n            .addClass(\"overview-viewport\")\n            .appendTo(this.overview);\n        this.overview_close = $(\"<a/>\")\n            .attr(\"title\", \"Close overview\")\n            .addClass(\"icon-button overview-close tooltip\")\n            .hide()\n            .appendTo(this.overview_viewport);\n        this.overview_highlight = $(\"<div/>\")\n            .addClass(\"overview-highlight\")\n            .hide()\n            .appendTo(this.overview_viewport);\n        this.overview_box_background = $(\"<div/>\")\n            .addClass(\"overview-boxback\")\n            .appendTo(this.overview_viewport);\n        this.overview_box = $(\"<div/>\")\n            .addClass(\"overview-box\")\n            .appendTo(this.overview_viewport);\n        this.default_overview_height = this.overview_box.height();\n\n        this.nav_controls = $(\"<div/>\")\n            .addClass(\"nav-controls\")\n            .appendTo(this.nav);\n        this.chrom_select = $(\"<select/>\")\n            .attr({ name: \"chrom\" })\n            .addClass(\"chrom-nav\")\n            .append(\"<option value=''>Loading</option>\")\n            .appendTo(this.nav_controls);\n        var submit_nav = function(e) {\n            if (e.type === \"focusout\" || (e.keyCode || e.which) === 13 || (e.keyCode || e.which) === 27) {\n                if ((e.keyCode || e.which) !== 27) {\n                    // Not escape key\n                    view.go_to($(this).val());\n                }\n                $(this).hide();\n                $(this).val(\"\");\n                view.location_span.show();\n                view.chrom_select.show();\n            }\n\n            // Suppress key presses so that they do impact viz.\n            e.stopPropagation();\n        };\n        this.nav_input = $(\"<input/>\")\n            .addClass(\"nav-input\")\n            .hide()\n            .bind(\"keyup focusout\", submit_nav)\n            .appendTo(this.nav_controls);\n        this.location_span = $(\"<span/>\")\n            .addClass(\"location\")\n            .attr(\"title\", \"Click to change location\")\n            .tooltip({ placement: \"bottom\" })\n            .appendTo(this.nav_controls);\n        this.location_span.click(() => {\n            view.location_span.hide();\n            view.chrom_select.hide();\n            view.nav_input.val(`${view.chrom}:${view.low}-${view.high}`);\n            view.nav_input.css(\"display\", \"inline-block\");\n            view.nav_input.select();\n            view.nav_input.focus();\n            // Set up autocomplete for tracks' features.\n            view.nav_input.autocomplete({\n                source: function(request, response) {\n                    // Using current text, query each track and create list of all matching features.\n                    var all_features = [];\n\n                    var feature_search_deferreds = $.map(view.get_tracks(FeatureTrack), t =>\n                        t.data_manager.search_features(request.term).success(dataset_features => {\n                            all_features = all_features.concat(dataset_features);\n                        })\n                    );\n\n                    // When all searching is done, fill autocomplete.\n                    $.when.apply($, feature_search_deferreds).done(() => {\n                        response(\n                            $.map(all_features, feature => ({\n                                label: feature[0],\n                                value: feature[1]\n                            }))\n                        );\n                    });\n                },\n                minLength: 2\n            });\n        });\n        if (this.vis_id !== undefined) {\n            this.hidden_input = $(\"<input/>\")\n                .attr(\"type\", \"hidden\")\n                .val(this.vis_id)\n                .appendTo(this.nav_controls);\n        }\n\n        this.zo_link = $(\"<a/>\")\n            .attr(\"id\", \"zoom-out\")\n            .attr(\"title\", \"Zoom out\")\n            .tooltip({ placement: \"bottom\" })\n            .click(() => {\n                view.zoom_out();\n            })\n            .appendTo(this.nav_controls);\n        this.zi_link = $(\"<a/>\")\n            .attr(\"id\", \"zoom-in\")\n            .attr(\"title\", \"Zoom in\")\n            .tooltip({ placement: \"bottom\" })\n            .click(() => {\n                view.zoom_in();\n            })\n            .appendTo(this.nav_controls);\n\n        // Get initial set of chroms.\n        this.load_chroms_deferred = this.load_chroms({ low: 0 });\n        this.chrom_select.bind(\"change\", () => {\n            view.change_chrom(view.chrom_select.val());\n        });\n\n        /*\n        this.browser_content_div.bind(\"mousewheel\", function( e, delta ) {\n            if (Math.abs(delta) < 0.5) {\n                return;\n            }\n            if (delta > 0) {\n                view.zoom_in(e.pageX, this.viewport_container);\n            } else {\n                view.zoom_out();\n            }\n            e.preventDefault();\n        });\n        */\n\n        // Blur tool/filter inputs when user clicks on content div.\n        this.browser_content_div.click(function(e) {\n            $(this)\n                .find(\"input\")\n                .trigger(\"blur\");\n        });\n\n        // Double clicking zooms in\n        this.browser_content_div.bind(\"dblclick\", function(e) {\n            view.zoom_in(e.pageX, this.viewport_container);\n        });\n\n        // Dragging the overview box (~ horizontal scroll bar)\n        this.overview_box\n            .bind(\"dragstart\", function(e, d) {\n                this.current_x = d.offsetX;\n            })\n            .bind(\"drag\", function(e, d) {\n                var delta = d.offsetX - this.current_x;\n                this.current_x = d.offsetX;\n                var delta_chrom = Math.round(delta / view.viewport_container.width() * (view.max_high - view.max_low));\n                view.move_delta(-delta_chrom);\n            });\n\n        this.overview_close.click(() => {\n            view.reset_overview();\n        });\n\n        // Dragging in the viewport scrolls\n        this.viewport_container\n            .bind(\"draginit\", (e, d) => {\n                // Disable interaction if started in scrollbar (for webkit)\n                if (e.clientX > view.viewport_container.width() - 16) {\n                    return false;\n                }\n            })\n            .bind(\"dragstart\", (e, d) => {\n                d.original_low = view.low;\n                d.current_height = e.clientY;\n                d.current_x = d.offsetX;\n            })\n            .bind(\"drag\", function(e, d) {\n                var container = $(this);\n                var delta = d.offsetX - d.current_x;\n                var new_scroll = container.scrollTop() - (e.clientY - d.current_height);\n                container.scrollTop(new_scroll);\n                d.current_height = e.clientY;\n                d.current_x = d.offsetX;\n                var delta_chrom = Math.round(delta / view.viewport_container.width() * (view.high - view.low));\n                view.move_delta(delta_chrom);\n            });\n        /*\n        FIXME: Do not do this for now because it's too jittery. Some kind of gravity approach is\n        needed here because moving left/right should be difficult.\n\n        // Also capture mouse wheel for left/right scrolling\n        }).bind( 'mousewheel', function( e, d, dx, dy ) {\n            // Only handle x axis scrolling; y axis scrolling is\n            // handled by the browser when the event bubbles up.\n            if (dx) {\n                var delta_chrom = Math.round( - dx / view.viewport_container.width() * (view.high - view.low) );\n                view.move_delta( delta_chrom );\n            }\n        });\n        */\n\n        // Dragging in the top label track allows selecting a region to zoom in on selected region.\n        this.top_labeltrack\n            .bind(\"dragstart\", function(e, d) {\n                return $(\"<div/>\")\n                    .addClass(\"zoom-area\")\n                    .css(\"height\", view.browser_content_div.height() + view.top_labeltrack.height() + 1)\n                    .appendTo($(this));\n            })\n            .bind(\"drag\", (e, d) => {\n                $(d.proxy).css({\n                    left: Math.min(e.pageX, d.startX) - view.container.offset().left,\n                    width: Math.abs(e.pageX - d.startX)\n                });\n\n                var min = Math.min(e.pageX, d.startX) - view.container.offset().left;\n\n                var max = Math.max(e.pageX, d.startX) - view.container.offset().left;\n\n                var span = view.high - view.low;\n                var width = view.viewport_container.width();\n                view.update_location(\n                    Math.round(min / width * span) + view.low,\n                    Math.round(max / width * span) + view.low\n                );\n            })\n            .bind(\"dragend\", (e, d) => {\n                var min = Math.min(e.pageX, d.startX);\n                var max = Math.max(e.pageX, d.startX);\n                var span = view.high - view.low;\n                var width = view.viewport_container.width();\n                var old_low = view.low;\n                view.low = Math.round(min / width * span) + old_low;\n                view.high = Math.round(max / width * span) + old_low;\n                $(d.proxy).remove();\n                view.request_redraw();\n            });\n\n        // FIXME: this is still wonky for embedded visualizations.\n        /*\n        // For vertical alignment, track mouse with simple line.\n        var mouse_tracker_div = $('<div/>').addClass('mouse-pos').appendTo(parent_element);\n\n        // Show tracker only when hovering over view.\n        parent_element.hover(\n            function() {\n                mouse_tracker_div.show();\n                parent_element.mousemove(function(e) {\n                    mouse_tracker_div.css({\n                        // -1 makes line appear next to the mouse w/o preventing mouse actions.\n                        left: e.pageX - parent_element.offset().left - 1\n                    });\n                });\n            },\n            function() {\n                parent_element.off('mousemove');\n                mouse_tracker_div.hide();\n            }\n        );\n        */\n\n        this.add_label_track(new LabelTrack(this, { content_div: this.top_labeltrack }));\n\n        $(window).bind(\"resize\", function() {\n            // Stop previous timer.\n            if (this.resize_timer) {\n                clearTimeout(this.resize_timer);\n            }\n\n            // When function activated, resize window and redraw.\n            this.resize_timer = setTimeout(() => {\n                view.resize_window();\n            }, 500);\n        });\n        $(document).bind(\"redraw\", () => {\n            view.redraw();\n        });\n\n        this.reset();\n        $(window).trigger(\"resize\");\n    },\n\n    get_base_color: function(base) {\n        return this.config.get_value(`${base.toLowerCase()}_color`) || this.config.get_value(\"n_color\");\n    }\n});\n\n// FIXME: need to use this approach to enable inheritance of DrawableCollection functions.\nextend(TracksterView.prototype, DrawableCollection.prototype, {\n    changed: function() {\n        this.has_changes = true;\n    },\n\n    /** Add or remove intro div depending on view state. */\n    update_intro_div: function() {\n        this.intro_div.toggle(this.drawables.length === 0);\n    },\n\n    /**\n     * Triggers navigate events as needed. If there is a delay,\n     * then event is triggered only after navigation has stopped.\n     */\n    trigger_navigate: function(new_chrom, new_low, new_high, delay) {\n        // Stop previous timer.\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        if (delay) {\n            // To aggregate calls, use timer and only navigate once\n            // location has stabilized.\n            var self = this;\n            this.timer = setTimeout(() => {\n                self.trigger(\"navigate\", `${new_chrom}:${new_low}-${new_high}`);\n            }, 500);\n        } else {\n            view.trigger(\"navigate\", `${new_chrom}:${new_low}-${new_high}`);\n        }\n    },\n\n    update_location: function(low, high) {\n        this.location_span.text(`${util.commatize(low)} - ${util.commatize(high)}`);\n        this.nav_input.val(`${this.chrom}:${util.commatize(low)}-${util.commatize(high)}`);\n\n        // Update location. Only update when there is a valid chrom; when loading vis, there may\n        // not be a valid chrom.\n        var chrom = this.chrom_select.val();\n        if (chrom !== \"\") {\n            this.trigger_navigate(chrom, this.low, this.high, true);\n        }\n    },\n\n    /**\n     * Load chrom data for the view. Returns a jQuery Deferred.\n     */\n    // FIXME: instead of loading chrom data, should load and store genome object.\n    load_chroms: function(url_parms) {\n        url_parms.num = MAX_CHROMS_SELECTABLE;\n\n        var view = this;\n        var chrom_data = $.Deferred();\n        $.ajax({\n            url: `${Galaxy.root}api/genomes/${this.dbkey}`,\n            data: url_parms,\n            dataType: \"json\",\n            success: function(result) {\n                // Do nothing if could not load chroms.\n                if (result.chrom_info.length === 0) {\n                    return;\n                }\n\n                // Load chroms.\n                if (result.reference) {\n                    var ref_track = new ReferenceTrack(view);\n                    view.add_label_track(ref_track);\n                    view.reference_track = ref_track;\n                }\n                view.chrom_data = result.chrom_info;\n\n                view.chrom_select.html(\"\");\n                view.chrom_select.append($('<option value=\"\">Select Chrom/Contig</option>'));\n\n                for (var i = 0, len = view.chrom_data.length; i < len; i++) {\n                    var chrom = view.chrom_data[i].chrom;\n                    var chrom_option = $(\"<option>\");\n                    chrom_option.text(chrom);\n                    chrom_option.val(chrom);\n                    view.chrom_select.append(chrom_option);\n                }\n                if (result.prev_chroms) {\n                    view.chrom_select.append($(`<option value=\"previous\">Previous ${MAX_CHROMS_SELECTABLE}</option>`));\n                }\n                if (result.next_chroms) {\n                    view.chrom_select.append($(`<option value=\"next\">Next ${MAX_CHROMS_SELECTABLE}</option>`));\n                }\n                view.chrom_start_index = result.start_index;\n\n                chrom_data.resolve(result.chrom_info);\n            },\n            error: function() {\n                alert(`Could not load chroms for this dbkey: ${view.dbkey}`);\n            }\n        });\n        return chrom_data;\n    },\n\n    change_chrom: function(chrom, low, high) {\n        var view = this;\n        // If chrom data is still loading, wait for it.\n        if (!view.chrom_data) {\n            view.load_chroms_deferred.then(() => {\n                view.change_chrom(chrom, low, high);\n            });\n            return;\n        }\n\n        // Don't do anything if chrom is \"None\" (hackish but some browsers already have this set), or null/blank\n        if (!chrom || chrom === \"None\") {\n            return;\n        }\n\n        //\n        // If user is navigating to previous/next set of chroms, load new chrom set and return.\n        //\n        if (chrom === \"previous\") {\n            view.load_chroms({\n                low: this.chrom_start_index - MAX_CHROMS_SELECTABLE\n            });\n            return;\n        }\n        if (chrom === \"next\") {\n            view.load_chroms({\n                low: this.chrom_start_index + MAX_CHROMS_SELECTABLE\n            });\n            return;\n        }\n\n        //\n        // User is loading a particular chrom. Look first in current set; if not in current set, load new\n        // chrom set.\n        //\n        var found = $.grep(view.chrom_data, (v, i) => v.chrom === chrom)[0];\n        if (found === undefined) {\n            // Try to load chrom and then change to chrom.\n            view.load_chroms({ chrom: chrom }, () => {\n                view.change_chrom(chrom, low, high);\n            });\n            return;\n        } else {\n            // Switching to local chrom.\n            if (chrom !== view.chrom) {\n                view.chrom = chrom;\n                view.chrom_select.val(view.chrom);\n                view.max_high = found.len - 1; // -1 because we're using 0-based indexing.\n                view.reset();\n\n                for (var i = 0, len = view.drawables.length; i < len; i++) {\n                    var drawable = view.drawables[i];\n                    if (drawable.init) {\n                        drawable.init();\n                    }\n                }\n                if (view.reference_track) {\n                    view.reference_track.init();\n                }\n            }\n\n            // Resolve low, high.\n            if (low === undefined && high === undefined) {\n                // Both are undefined, so view is whole chromosome.\n                view.low = 0;\n                view.high = view.max_high;\n            } else {\n                // Low and/or high is defined.\n                view.low = low !== undefined ? Math.max(low, 0) : 0;\n                if (high === undefined) {\n                    // Center visualization around low.\n                    // HACK: max resolution is currently 30 bases.\n                    view.low = Math.max(view.low - 15, 0);\n                    view.high = view.low + 30;\n                } else {\n                    // High is defined.\n                    view.high = Math.min(high, view.max_high);\n                }\n            }\n\n            view.request_redraw();\n        }\n    },\n\n    /**\n     * Change viewing region to that denoted by string. General format of string is:\n     *\n     * <chrom>[ {separator}<start>[-<end>] ]\n     *\n     * where separator can be whitespace or a colon. Examples:\n     *\n     * chr22\n     * chr1:100-200\n     * chr7 89999\n     * chr8 90000 990000\n     */\n    go_to: function(str) {\n        // Remove commas.\n        str = str.replace(/,/g, \"\");\n\n        // Replace colons and hyphens with space for easy parsing.\n        str = str.replace(/:|\\-/g, \" \");\n\n        // Parse new location.\n        var chrom_pos = str.split(/\\s+/);\n\n        var chrom = chrom_pos[0];\n        var new_low = chrom_pos[1] ? parseInt(chrom_pos[1], 10) : undefined;\n        var new_high = chrom_pos[2] ? parseInt(chrom_pos[2], 10) : undefined;\n\n        this.change_chrom(chrom, new_low, new_high);\n    },\n\n    move_fraction: function(fraction) {\n        var view = this;\n        var span = view.high - view.low;\n        this.move_delta(fraction * span);\n    },\n\n    move_delta: function(delta_chrom) {\n        //\n        // Update low, high.\n        //\n\n        var view = this;\n        var current_chrom_span = view.high - view.low;\n        // Check for left and right boundaries\n        if (view.low - delta_chrom < view.max_low) {\n            view.low = view.max_low;\n            view.high = view.max_low + current_chrom_span;\n        } else if (view.high - delta_chrom > view.max_high) {\n            view.high = view.max_high;\n            view.low = view.max_high - current_chrom_span;\n        } else {\n            view.high -= delta_chrom;\n            view.low -= delta_chrom;\n        }\n\n        //\n        // Redraw view.\n        //\n\n        // Redraw without requesting more data immediately.\n        view.request_redraw({ data_fetch: false });\n\n        // Set up timeout to redraw with more data when moving stops.\n        if (this.redraw_on_move_fn) {\n            clearTimeout(this.redraw_on_move_fn);\n        }\n\n        this.redraw_on_move_fn = setTimeout(() => {\n            view.request_redraw();\n        }, 200);\n\n        // Navigate.\n        var chrom = view.chrom_select.val();\n        this.trigger_navigate(chrom, view.low, view.high, true);\n    },\n\n    /**\n     * Add a drawable to the view.\n     */\n    add_drawable: function(drawable) {\n        DrawableCollection.prototype.add_drawable.call(this, drawable);\n        drawable.init();\n        this.changed();\n        this.update_intro_div();\n\n        // When drawable config changes, mark view as changed. This\n        // captures most (all?) state change that needs to be saved.\n        var self = this;\n        drawable.config.on(\"change\", () => {\n            self.changed();\n        });\n    },\n\n    add_label_track: function(label_track) {\n        label_track.view = this;\n        label_track.init();\n        this.label_tracks.push(label_track);\n    },\n\n    /**\n     * Remove drawable from the view.\n     */\n    remove_drawable: function(drawable, hide) {\n        DrawableCollection.prototype.remove_drawable.call(this, drawable);\n        if (hide) {\n            var view = this;\n            drawable.container_div.hide(0, function() {\n                $(this).remove();\n                view.update_intro_div();\n            });\n        }\n    },\n\n    reset: function() {\n        this.low = this.max_low;\n        this.high = this.max_high;\n        this.viewport_container.find(\".yaxislabel\").remove();\n    },\n\n    /**\n     * Request that view redraw one or more of view's drawables. If drawable is not specified,\n     * all drawables are redrawn.\n     */\n    request_redraw: function(options, drawable) {\n        var view = this;\n\n        var // Either redrawing a single drawable or all view's drawables.\n        track_list = drawable ? [drawable] : view.drawables;\n\n        // Add/update tracks in track list to redraw list.\n        _.each(track_list, track => {\n            var track_options = _.find(view.tracks_to_be_redrawn, to => to[0] === track);\n\n            if (track_options) {\n                // Track already in list; update options.\n                track_options[1] = options;\n            } else {\n                // Track not in list yet.\n                view.tracks_to_be_redrawn.push([track, options]);\n            }\n        });\n\n        // Set up redraw if it has not been requested since last redraw.\n        if (!this.requested_redraw) {\n            requestAnimationFrame(() => {\n                view._redraw();\n            });\n            this.requested_redraw = true;\n        }\n    },\n\n    /**\n     * Redraws view and tracks.\n     * NOTE: this method should never be called directly; request_redraw() should be used so\n     * that requestAnimationFrame can manage redrawing.\n     */\n    _redraw: function() {\n        // TODO: move this code to function that does location setting.\n\n        // Clear because requested redraw is being handled now.\n        this.requested_redraw = false;\n\n        var low = this.low;\n        var high = this.high;\n\n        if (low < this.max_low) {\n            low = this.max_low;\n        }\n        if (high > this.max_high) {\n            high = this.max_high;\n        }\n        var span = this.high - this.low;\n        if (this.high !== 0 && span < this.min_separation) {\n            high = low + this.min_separation;\n        }\n        this.low = Math.floor(low);\n        this.high = Math.ceil(high);\n\n        this.update_location(this.low, this.high);\n\n        // -- Drawing code --\n\n        // Resolution is a pixel density.\n        this.resolution_px_b = this.viewport_container.width() / (this.high - this.low);\n\n        // Overview\n        var left_px = this.low / (this.max_high - this.max_low) * this.overview_viewport.width() || 0;\n        var width_px = (this.high - this.low) / (this.max_high - this.max_low) * this.overview_viewport.width() || 0;\n        var min_width_px = 13;\n\n        this.overview_box\n            .css({\n                left: left_px,\n                width: Math.max(min_width_px, width_px)\n            })\n            .show();\n        if (width_px < min_width_px) {\n            this.overview_box.css(\"left\", left_px - (min_width_px - width_px) / 2);\n        }\n        if (this.overview_highlight) {\n            this.overview_highlight.css({\n                left: left_px,\n                width: width_px\n            });\n        }\n\n        // Draw data tracks.\n        _.each(this.tracks_to_be_redrawn, track_options => {\n            var track = track_options[0];\n            var options = track_options[1];\n            if (track) {\n                track._draw(options);\n            }\n        });\n        this.tracks_to_be_redrawn = [];\n\n        // Draw label tracks.\n        _.each(this.label_tracks, label_track => {\n            label_track._draw();\n        });\n    },\n\n    zoom_in: function(point, container) {\n        if (this.max_high === 0 || this.high - this.low <= this.min_separation) {\n            return;\n        }\n        var span = this.high - this.low;\n        var cur_center = span / 2 + this.low;\n        var new_half = span / this.zoom_factor / 2;\n        if (point) {\n            cur_center = point / this.viewport_container.width() * (this.high - this.low) + this.low;\n        }\n        this.low = Math.round(cur_center - new_half);\n        this.high = Math.round(cur_center + new_half);\n\n        this.changed();\n        this.request_redraw();\n    },\n\n    zoom_out: function() {\n        if (this.max_high === 0) {\n            return;\n        }\n        var span = this.high - this.low;\n        var cur_center = span / 2 + this.low;\n        var new_half = span * this.zoom_factor / 2;\n        this.low = Math.round(cur_center - new_half);\n        this.high = Math.round(cur_center + new_half);\n        this.changed();\n        this.request_redraw();\n    },\n\n    /** Resize viewport. Use this method if header/footer content has changed in size. */\n    resize_viewport: function() {\n        this.viewport_container.height(\n            this.container.height() - this.top_container.height() - this.bottom_container.height()\n        );\n    },\n\n    /** Called when window is resized. */\n    resize_window: function() {\n        this.resize_viewport();\n        this.request_redraw();\n    },\n\n    /** Show a Drawable in the overview. */\n    set_overview: function(drawable) {\n        if (this.overview_drawable) {\n            // If drawable to be set as overview is already in overview, do nothing.\n            // Otherwise, remove overview.\n            if (this.overview_drawable.dataset.id === drawable.dataset.id) {\n                return;\n            }\n            this.overview_viewport.find(\".track\").remove();\n        }\n\n        // Set new overview.\n        var overview_drawable = drawable.copy({\n            content_div: this.overview_viewport\n        });\n\n        var view = this;\n        overview_drawable.header_div.hide();\n        overview_drawable.is_overview = true;\n        view.overview_drawable = overview_drawable;\n        this.overview_drawable.postdraw_actions = () => {\n            view.overview_highlight.show().height(view.overview_drawable.content_div.height());\n            view.overview_viewport.height(\n                view.overview_drawable.content_div.height() + view.overview_box.outerHeight()\n            );\n            view.overview_close.show();\n            view.resize_window();\n        };\n        view.overview_drawable.request_draw();\n        this.changed();\n    },\n\n    /** Close and reset overview. */\n    reset_overview: function() {\n        // Update UI.\n        $(\".tooltip\").remove();\n        this.overview_viewport.find(\".track-tile\").remove();\n        this.overview_viewport.height(this.default_overview_height);\n        this.overview_box.height(this.default_overview_height);\n        this.overview_close.hide();\n        this.overview_highlight.hide();\n        view.resize_window();\n        view.overview_drawable = null;\n    }\n});\n\n/**\n * Encapsulation of a tool that users can apply to tracks/datasets.\n */\nvar TracksterTool = tools_mod.Tool.extend({\n    defaults: {\n        track: null\n    },\n\n    initialize: function(options) {\n        tools_mod.Tool.prototype.initialize.call(this, options);\n\n        // Restore tool visibility from state; default to hidden.\n        var hidden = true;\n        if (options.tool_state !== undefined && options.tool_state.hidden !== undefined) {\n            hidden = options.tool_state.hidden;\n        }\n        this.set(\"hidden\", hidden);\n\n        // FIXME: need to restore tool values from options.tool_state\n\n        // HACK: remove some inputs because Trackster does yet not work with them.\n        this.remove_inputs([\"data\", \"hidden_data\", \"conditional\"]);\n    },\n\n    state_dict: function(options) {\n        return _.extend(this.get_inputs_dict(), {\n            hidden: !this.is_visible()\n        });\n    }\n});\n\n/**\n * View renders tool parameter HTML and updates parameter value as it is changed in the HTML.\n */\nvar ToolParameterView = Backbone.View.extend({\n    events: {\n        \"change :input\": \"update_value\"\n    },\n\n    render: function() {\n        var param_div = this.$el.addClass(\"param-row\");\n        var param = this.model;\n\n        // Param label.\n        var label_div = $(\"<div>\")\n            .addClass(\"param-label\")\n            .text(param.get(\"label\"))\n            .appendTo(param_div);\n        // Param HTML.\n        var html_div = $(\"<div/>\")\n            .addClass(\"param-input\")\n            .html(param.get(\"html\"))\n            .appendTo(param_div);\n        // Set initial value.\n        html_div.find(\":input\").val(param.get(\"value\"));\n\n        // Add to clear floating layout.\n        $(\"<div style='clear: both;'/>\").appendTo(param_div);\n    },\n\n    update_value: function(update_event) {\n        this.model.set_value($(update_event.target).val());\n    }\n});\n\n/**\n * View for TracksterTool.\n */\nvar TracksterToolView = Backbone.View.extend({\n    initialize: function(options) {\n        this.model.on(\"change:hidden\", this.set_visible, this);\n    },\n\n    /**\n     * Render tool UI.\n     */\n    render: function() {\n        var self = this;\n        var tool = this.model;\n        var parent_div = this.$el.addClass(\"dynamic-tool\").hide();\n\n        // Prevent div events from propogating to other elements.\n        parent_div\n            .bind(\"drag\", e => {\n                e.stopPropagation();\n            })\n            .click(e => {\n                e.stopPropagation();\n            })\n            .bind(\"dblclick\", e => {\n                e.stopPropagation();\n            })\n            .keydown(e => {\n                e.stopPropagation();\n            });\n\n        // Add name, inputs.\n        var name_div = $(\"<div class='tool-name'>\")\n            .appendTo(parent_div)\n            .text(tool.get(\"name\"));\n        tool.get(\"inputs\").each(param => {\n            // Render parameter.\n            var param_view = new ToolParameterView({ model: param });\n            param_view.render();\n            parent_div.append(param_view.$el);\n        });\n\n        // Highlight value for inputs for easy replacement.\n        parent_div.find(\"input\").click(function() {\n            $(this).select();\n        });\n\n        // Add buttons for running on dataset, region.\n        var run_tool_row = $(\"<div>\")\n            .addClass(\"param-row\")\n            .appendTo(parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'>\")\n            .attr(\"value\", \"Run on complete dataset\")\n            .appendTo(run_tool_row);\n        var run_on_region_button = $(\"<input type='submit'>\")\n            .attr(\"value\", \"Run on visible region\")\n            .appendTo(run_tool_row);\n        run_on_region_button.click(() => {\n            // Run tool to create new track.\n            self.run_on_region();\n        });\n        run_on_dataset_button.click(() => {\n            self.run_on_dataset();\n        });\n\n        if (tool.is_visible()) {\n            this.$el.show();\n        }\n    },\n\n    /**\n     * Show or hide tool depending on tool visibility state.\n     */\n    set_visible: function() {\n        this.$el.toggle(this.model.is_visible());\n    },\n\n    /**\n     * Update tool parameters.\n     */\n    update_params: function() {\n        for (var i = 0; i < this.params.length; i++) {\n            this.params[i].update_value();\n        }\n    },\n\n    /**\n     * Run tool on dataset. Output is placed in dataset's history and no changes to viz are made.\n     */\n    run_on_dataset: function() {\n        var tool = this.model;\n        this.run(\n            // URL params.\n            {\n                target_dataset_id: this.model.get(\"track\").dataset.id,\n                action: \"rerun\",\n                tool_id: tool.id\n            },\n            null,\n            track_data => {\n                Galaxy.modal.show({\n                    title: `${tool.get(\"name\")} is Running`,\n                    body: `${tool.get(\n                        \"name\"\n                    )} is running on the complete dataset. Tool outputs are in dataset's history.`,\n                    buttons: {\n                        Close: function() {\n                            Galaxy.modal.hide();\n                        }\n                    }\n                });\n            }\n        );\n    },\n\n    /**\n     * Run dataset on visible region. This creates a new track and sets the track's contents\n     * to the tool's output.\n     */\n    run_on_region: function() {\n        //\n        // Create track for tool's output immediately to provide user feedback.\n        //\n        var track = this.model.get(\"track\");\n\n        var tool = this.model;\n\n        var region = new visualization.GenomeRegion({\n            chrom: track.view.chrom,\n            start: track.view.low,\n            end: track.view.high\n        });\n\n        var url_params = {\n            target_dataset_id: track.dataset.id,\n            action: \"rerun\",\n            tool_id: tool.id,\n            regions: [region.toJSON()]\n        };\n\n        var current_track = track;\n\n        var // Set name of track to include tool name, parameters, and region used.\n        track_name = tool.get(\"name\") + current_track.tool_region_and_parameters_str(region);\n\n        var container;\n\n        // If track not in a group, create a group for it and add new track to group. If track\n        // already in group, add track to group.\n        if (current_track.container === view) {\n            // Create new group.\n            var group = new DrawableGroup(view, view, {\n                name: track.config.get_value(\"name\")\n            });\n\n            // Replace track with group.\n            var index = current_track.container.replace_drawable(current_track, group, false);\n\n            // Update HTML.\n            // FIXME: this is ugly way to replace a track with a group -- make this easier via\n            // a Drawable or DrawableCollection function.\n            group.container_div.insertBefore(current_track.view.content_div.children()[index]);\n            group.add_drawable(current_track);\n            current_track.container_div.appendTo(group.content_div);\n            container = group;\n        } else {\n            // Use current group.\n            container = current_track.container;\n        }\n\n        // Create and init new track.\n        var new_track = new current_track.constructor(view, container, {\n            name: track_name,\n            hda_ldda: \"hda\"\n        });\n        new_track.init_for_tool_data();\n        new_track.change_mode(current_track.mode);\n        new_track.set_filters_manager(current_track.filters_manager.copy(new_track));\n        new_track.update_icons();\n        container.add_drawable(new_track);\n        new_track.tiles_div.text(\"Starting job.\");\n\n        // Run tool.\n        this.run(url_params, new_track, track_data => {\n            new_track.set_dataset(new data.Dataset(track_data));\n            new_track.tiles_div.text(\"Running job.\");\n            new_track.init();\n        });\n    },\n\n    /**\n     * Run tool using a set of URL params and a success callback.\n     */\n    run: function(url_params, new_track, success_callback) {\n        // Run tool.\n        url_params.inputs = this.model.get_inputs_dict();\n        var ss_deferred = new util.ServerStateDeferred({\n            ajax_settings: {\n                url: `${Galaxy.root}api/tools`,\n                data: JSON.stringify(url_params),\n                dataType: \"json\",\n                contentType: \"application/json\",\n                type: \"POST\"\n            },\n            interval: 2000,\n            success_fn: function(response) {\n                return response !== \"pending\";\n            }\n        });\n\n        // Start with this status message.\n        //new_track.container_div.addClass(\"pending\");\n        //new_track.content_div.html(DATA_PENDING);\n\n        $.when(ss_deferred.go()).then(response => {\n            if (response === \"no converter\") {\n                // No converter available for input datasets, so cannot run tool.\n                new_track.container_div.addClass(\"error\");\n                new_track.content_div.text(DATA_NOCONVERTER);\n            } else if (response.error) {\n                // General error.\n                new_track.container_div.addClass(\"error\");\n                new_track.content_div.text(DATA_CANNOT_RUN_TOOL + response.message);\n            } else {\n                // Job submitted and running.\n                success_callback(response);\n            }\n        });\n    }\n});\n\n/**\n * Generates scale values based on filter and feature's value for filter.\n */\nvar FilterScaler = function(filter, default_val) {\n    painters.Scaler.call(this, default_val);\n    this.filter = filter;\n};\n\nFilterScaler.prototype.gen_val = function(feature_data) {\n    // If filter is not initalized yet, return default val.\n    if (\n        this.filter.high === Number.MAX_VALUE ||\n        this.filter.low === -Number.MAX_VALUE ||\n        this.filter.low === this.filter.high\n    ) {\n        return this.default_val;\n    }\n\n    // Scaling value is ratio of (filter's value compared to low) to (complete filter range).\n    return (parseFloat(feature_data[this.filter.index]) - this.filter.low) / (this.filter.high - this.filter.low);\n};\n\n/**\n * Tiles drawn by tracks.\n */\nvar Tile = function(track, region, w_scale, canvas, data) {\n    this.track = track;\n    this.region = region;\n    this.low = region.get(\"start\");\n    this.high = region.get(\"end\");\n    this.w_scale = w_scale;\n    this.canvas = canvas;\n    // Wrap element in div for background and to provide container for tile-specific elements.\n    this.html_elt = $(\"<div class='track-tile'/>\").append(canvas);\n    this.data = data;\n    this.stale = false;\n};\n\n/**\n * Perform pre-display actions.\n */\nTile.prototype.predisplay_actions = () => {};\n\nvar LineTrackTile = function(track, region, w_scale, canvas, data) {\n    Tile.call(this, track, region, w_scale, canvas, data);\n};\nLineTrackTile.prototype.predisplay_actions = () => {};\n\nvar FeatureTrackTile = function(\n    track,\n    region,\n    w_scale,\n    canvas,\n    data,\n    mode,\n    message,\n    all_slotted,\n    feature_mapper,\n    incomplete_features,\n    seq_data\n) {\n    // Attribute init.\n    Tile.call(this, track, region, w_scale, canvas, data);\n    this.mode = mode;\n    this.all_slotted = all_slotted;\n    this.feature_mapper = feature_mapper;\n    this.has_icons = false;\n    this.incomplete_features = incomplete_features;\n    // Features drawn based on data from other tiles.\n    this.other_tiles_features_drawn = {};\n    this.seq_data = seq_data;\n\n    // Add message + action icons to tile's html.\n    /*\n    This does not work right now because a random set of reads is returned by the server.\n    When the server can respond with more data systematically, renable these icons.\n    if (message) {\n        this.has_icons = true;\n\n        var\n            tile = this;\n            canvas = this.html_elt.children()[0],\n            message_div = $(\"<div/>\").addClass(\"tile-message\")\n                            // -1 to account for border.\n                            .css({'height': ERROR_PADDING, 'width': canvas.width}).prependTo(this.html_elt);\n\n        // Handle message; only message currently is that only the first N elements are displayed.\n        var tile_region = new visualization.GenomeRegion({\n                chrom: track.view.chrom,\n                start: this.low,\n                end: this.high\n            }),\n            num_features = data.length,\n            more_down_icon = $(\"<a/>\").addClass(\"icon more-down\")\n                                .attr(\"title\", \"For speed, only the first \" + num_features + \" features in this region were obtained from server. Click to get more data including depth\")\n                                .tooltip().appendTo(message_div),\n            more_across_icon = $(\"<a/>\").addClass(\"icon more-across\")\n                                .attr(\"title\", \"For speed, only the first \" + num_features + \" features in this region were obtained from server. Click to get more data excluding depth\")\n                                .tooltip().appendTo(message_div);\n\n        // Set up actions for icons.\n        more_down_icon.click(function() {\n            // Mark tile as stale, request more data, and redraw track.\n            tile.stale = true;\n            track.data_manager.get_more_data(tile_region, track.mode, 1 / tile.w_scale, {}, track.data_manager.DEEP_DATA_REQ);\n            $(\".tooltip\").hide();\n            track.request_draw();\n        }).dblclick(function(e) {\n            // Do not propogate as this would normally zoom in.\n            e.stopPropagation();\n        });\n\n        more_across_icon.click(function() {\n            // Mark tile as stale, request more data, and redraw track.\n            tile.stale = true;\n            track.data_manager.get_more_data(tile_region, track.mode, 1 / tile.w_scale, {}, track.data_manager.BROAD_DATA_REQ);\n            $(\".tooltip\").hide();\n            track.request_draw();\n        }).dblclick(function(e) {\n            // Do not propogate as this would normally zoom in.\n            e.stopPropagation();\n        });\n    }\n    */\n};\nextend(FeatureTrackTile.prototype, Tile.prototype);\n\n/**\n * Sets up support for popups.\n */\nFeatureTrackTile.prototype.predisplay_actions = () => {\n    /*\n    FIXME: use a canvas library to handle popups.\n    //\n    // Add support for popups.\n    //\n    var tile = this,\n        popups = {};\n\n    // Only show popups in Pack mode.\n    if (tile.mode !== \"Pack\") { return; }\n\n    $(this.html_elt).hover(\n    function() {\n        this.hovered = true;\n        $(this).mousemove();\n    },\n    function() {\n        this.hovered = false;\n        // Clear popup if it is still hanging around (this is probably not needed)\n        $(this).parents(\".track-content\").children(\".overlay\").children(\".feature-popup\").remove();\n    } ).mousemove(function (e) {\n        // Use the hover plugin to get a delay before showing popup\n        if ( !this.hovered ) { return; }\n        // Get feature data for position.\n        var\n            this_offset = $(this).offset(),\n            offsetX = e.pageX - this_offset.left,\n            offsetY = e.pageY - this_offset.top,\n            feature_data = tile.feature_mapper.get_feature_data(offsetX, offsetY),\n            feature_uid = (feature_data ? feature_data[0] : null);\n        // Hide visible popup if not over a feature or over a different feature.\n        $(this).parents(\".track-content\").children(\".overlay\").children(\".feature-popup\").each(function() {\n            if ( !feature_uid ||\n                 $(this).attr(\"id\") !== feature_uid.toString() ) {\n                $(this).remove();\n            }\n        });\n\n        if (feature_data) {\n            // Get or create popup.\n            var popup = popups[feature_uid];\n            if (!popup) {\n                // Create feature's popup element.\n                var feature_dict = {\n                        name: feature_data[3],\n                        start: feature_data[1],\n                        end: feature_data[2],\n                        strand: feature_data[4]\n                    },\n                    filters = tile.track.filters_manager.filters,\n                    filter;\n\n                // Add filter values to feature dict.\n                for (var i = 0; i < filters.length; i++) {\n                    filter = filters[i];\n                    feature_dict[filter.name] = feature_data[filter.index];\n                }\n\n                // Build popup.\n                popup = $(\"<div/>\").attr(\"id\", feature_uid).addClass(\"feature-popup\");\n                var table = $(\"<table/>\"),\n                    key, value, row;\n                for (key in feature_dict) {\n                    value = feature_dict[key];\n                    row = $(\"<tr/>\").appendTo(table);\n                    $(\"<th/>\").appendTo(row).text(key);\n                    $(\"<td/>\").attr(\"align\", \"left\").appendTo(row)\n                              .text(typeof(value) === 'number' ? round(value, 2) : value);\n                }\n                popup.append( $(\"<div class='feature-popup-inner'>\").append( table ) );\n                popups[feature_uid] = popup;\n            }\n\n            // Attach popup to track's overlay.\n            popup.appendTo( $(this).parents(\".track-content\").children(\".overlay\") );\n\n            // Offsets are within canvas, but popup must be positioned relative to parent element.\n            // parseInt strips \"px\" from left, top measurements. +7 so that mouse pointer does not\n            // overlap popup.\n            var\n                popupX = offsetX + parseInt( tile.html_elt.css(\"left\"), 10 ) - popup.width() / 2,\n                popupY = offsetY + parseInt( tile.html_elt.css(\"top\"), 10 ) + 7;\n            popup.css(\"left\", popupX + \"px\").css(\"top\", popupY + \"px\");\n        }\n        else if (!e.isPropagationStopped()) {\n            // Propogate event to other tiles because overlapping tiles prevent mousemove from being\n            // called on tiles under this tile.\n            e.stopPropagation();\n            $(this).siblings().each(function() {\n                $(this).trigger(e);\n            });\n        }\n    })\n    .mouseleave(function() {\n        $(this).parents(\".track-content\").children(\".overlay\").children(\".feature-popup\").remove();\n    });\n    */\n};\n\n/**\n * Tracks are objects can be added to the View.\n *\n * Track object hierarchy:\n * Track\n * -> LabelTrack\n * -> TiledTrack\n * ----> LineTrack\n * ----> ReferenceTrack\n * ----> FeatureTrack\n * -------> ReadTrack\n * ----> VariantTrack\n */\nvar Track = function(view, container, obj_dict) {\n    // For now, track's container is always view.\n    extend(obj_dict, {\n        drag_handle_class: \"draghandle\"\n    });\n    Drawable.call(this, view, container, obj_dict);\n\n    //\n    // Attribute init.\n    //\n\n    // Set or create dataset.\n    this.dataset = null;\n    if (obj_dict.dataset) {\n        // Dataset can be a Backbone model or a dict that can be used to create a model.\n        this.dataset =\n            obj_dict.dataset instanceof Backbone.Model ? obj_dict.dataset : new data.Dataset(obj_dict.dataset);\n    }\n    this.dataset_check_type = \"converted_datasets_state\";\n    this.data_url_extra_params = {};\n    this.data_query_wait = \"data_query_wait\" in obj_dict ? obj_dict.data_query_wait : DEFAULT_DATA_QUERY_WAIT;\n    // A little ugly creating data manager right now due to transition to Backbone-based objects.\n    this.data_manager =\n        \"data_manager\" in obj_dict\n            ? obj_dict.data_manager\n            : new visualization.GenomeDataManager({\n                  dataset: this.dataset,\n                  // HACK: simulate 'genome' attributes from view for now.\n                  // View should eventually use Genome object.\n                  genome: new visualization.Genome({\n                      key: view.dbkey,\n                      chroms_info: {\n                          chrom_info: view.chrom_data\n                      }\n                  }),\n                  data_mode_compatible: this.data_and_mode_compatible,\n                  can_subset: this.can_subset\n              });\n\n    // Height attributes: min height, max height, and visible height.\n    this.min_height_px = 16;\n    this.max_height_px = 800;\n    this.visible_height_px = this.config.get_value(\"height\");\n\n    //\n    // Create content div, which is where track is displayed, and add to container if available.\n    //\n    this.content_div = $(\"<div class='track-content'>\").appendTo(this.container_div);\n    if (this.container) {\n        this.container.content_div.append(this.container_div);\n        if (!(\"resize\" in obj_dict) || obj_dict.resize) {\n            this.add_resize_handle();\n        }\n    }\n};\n\nextend(Track.prototype, Drawable.prototype, {\n    action_icons_def: [\n        // Change track mode.\n        {\n            name: \"mode_icon\",\n            title: \"Set display mode\",\n            css_class: \"chevron-expand\",\n            on_click_fn: function() {}\n        },\n        // Hide/show content.\n        Drawable.prototype.action_icons_def[0],\n        // Set track as overview.\n        {\n            name: \"overview_icon\",\n            title: \"Set as overview\",\n            css_class: \"application-dock-270\",\n            on_click_fn: function(track) {\n                track.view.set_overview(track);\n            }\n        },\n        // Edit config.\n        Drawable.prototype.action_icons_def[1],\n        // Toggle track filters.\n        {\n            name: \"filters_icon\",\n            title: \"Filters\",\n            css_class: \"ui-slider-050\",\n            on_click_fn: function(drawable) {\n                // TODO: update Tooltip text.\n                if (drawable.filters_manager.visible()) {\n                    drawable.filters_manager.clear_filters();\n                } else {\n                    drawable.filters_manager.init_filters();\n                }\n                drawable.filters_manager.toggle();\n            }\n        },\n        // Toggle track tool.\n        {\n            name: \"tools_icon\",\n            title: \"Tool\",\n            css_class: \"hammer\",\n            on_click_fn: function(track) {\n                // TODO: update Tooltip text.\n\n                track.tool.toggle();\n\n                // Update track name.\n                if (track.tool.is_visible()) {\n                    track.set_name(track.config.get_value(\"name\") + track.tool_region_and_parameters_str());\n                } else {\n                    track.revert_name();\n                }\n                // HACK: name change modifies icon placement, which leaves tooltip incorrectly placed.\n                $(\".tooltip\").remove();\n            }\n        },\n        // Go to parameter exploration visualization.\n        {\n            name: \"param_space_viz_icon\",\n            title: \"Tool parameter space visualization\",\n            css_class: \"arrow-split\",\n            on_click_fn: function(track) {\n                var html = `<strong>Tool</strong>:${track.tool.get(\n                    \"name\"\n                )}<br/><strong>Dataset</strong>:${track.config.get_value(\n                    \"name\"\n                )}<br/><strong>Region(s)</strong>: <select name=\"regions\"><option value=\"cur\">current viewing area</option><option value=\"bookmarks\">bookmarks</option><option value=\"both\">current viewing area and bookmarks</option></select>`;\n\n                var cancel_fn = () => {\n                    Galaxy.modal.hide();\n                    $(window).unbind(\"keypress.check_enter_esc\");\n                };\n\n                var ok_fn = () => {\n                    var regions_to_use = $('select[name=\"regions\"] option:selected').val(),\n                        regions,\n                        view_region = new visualization.GenomeRegion({\n                            chrom: view.chrom,\n                            start: view.low,\n                            end: view.high\n                        }),\n                        bookmarked_regions = _.map(\n                            $(\".bookmark\"),\n                            elt =>\n                                new visualization.GenomeRegion({\n                                    from_str: $(elt)\n                                        .children(\".position\")\n                                        .text()\n                                })\n                        );\n\n                    // Get regions for visualization.\n                    if (regions_to_use === \"cur\") {\n                        // Use only current region.\n                        regions = [view_region];\n                    } else if (regions_to_use === \"bookmarks\") {\n                        // Use only bookmarks.\n                        regions = bookmarked_regions;\n                    } else {\n                        // Use both current region and bookmarks.\n                        regions = [view_region].concat(bookmarked_regions);\n                    }\n\n                    Galaxy.modal.hide();\n\n                    // Go to visualization.\n                    window.location.href = `${Galaxy.root}visualization/sweepster?${$.param({\n                        dataset_id: track.dataset.id,\n                        hda_ldda: track.dataset.get(\"hda_ldda\"),\n                        regions: JSON.stringify(new Backbone.Collection(regions).toJSON())\n                    })}`;\n                };\n\n                var check_enter_esc = e => {\n                    if ((e.keyCode || e.which) === 27) {\n                        // Escape key\n                        cancel_fn();\n                    } else if ((e.keyCode || e.which) === 13) {\n                        // Enter key\n                        ok_fn();\n                    }\n                };\n\n                // show dialog\n                Galaxy.modal.show({\n                    title: \"Visualize tool parameter space and output from different parameter settings?\",\n                    body: html,\n                    buttons: { No: cancel_fn, Yes: ok_fn }\n                });\n            }\n        },\n        // Remove track.\n        Drawable.prototype.action_icons_def[2]\n    ],\n\n    can_draw: function() {\n        return this.dataset && Drawable.prototype.can_draw.call(this);\n    },\n\n    build_container_div: function() {\n        return $(\"<div/>\")\n            .addClass(\"track\")\n            .attr(\"id\", `track_${this.id}`);\n    },\n\n    /**\n     * Set track's dataset.\n     */\n    set_dataset: function(dataset) {\n        this.dataset = dataset;\n        this.data_manager.set(\"dataset\", dataset);\n    },\n\n    /**\n     * Action to take during resize.\n     */\n    on_resize: function() {\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Add resizing handle to drawable's container_div.\n     */\n    add_resize_handle: function() {\n        var track = this;\n        var in_handle = false;\n        var in_drag = false;\n        var drag_control = $(\"<div class='track-resize'>\");\n        // Control shows on hover over track, stays while dragging\n        $(track.container_div).hover(\n            () => {\n                if (track.config.get_value(\"content_visible\")) {\n                    in_handle = true;\n                    drag_control.show();\n                }\n            },\n            () => {\n                in_handle = false;\n                if (!in_drag) {\n                    drag_control.hide();\n                }\n            }\n        );\n        // Update height and force redraw of current view while dragging,\n        // clear cache to force redraw of other tiles.\n        drag_control\n            .hide()\n            .bind(\"dragstart\", (e, d) => {\n                in_drag = true;\n                d.original_height = $(track.content_div).height();\n            })\n            .bind(\"drag\", (e, d) => {\n                var new_height = Math.min(\n                    Math.max(d.original_height + d.deltaY, track.min_height_px),\n                    track.max_height_px\n                );\n                $(track.tiles_div).css(\"height\", new_height);\n                track.visible_height_px = track.max_height_px === new_height ? 0 : new_height;\n                track.on_resize();\n            })\n            .bind(\"dragend\", (e, d) => {\n                track.tile_cache.clear();\n                in_drag = false;\n                if (!in_handle) {\n                    drag_control.hide();\n                }\n                track.config.set_value(\"height\", track.visible_height_px);\n                track.changed();\n            })\n            .appendTo(track.container_div);\n    },\n\n    /**\n     * Hide any elements that are part of the tracks contents area. Should\n     * remove as approprite, the track will be redrawn by show_contents.\n     */\n    hide_contents: function() {\n        // Hide tiles.\n        this.tiles_div.hide();\n        // Hide any y axis labels (common to several track types)\n        this.container_div.find(\".yaxislabel, .track-resize\").hide();\n    },\n\n    show_contents: function() {\n        // Show the contents div and labels (if present)\n        this.tiles_div.show();\n        this.container_div.find(\".yaxislabel, .track-resize\").show();\n        // Request a redraw of the content\n        this.request_draw();\n    },\n\n    /**\n     * Returns track type.\n     */\n    get_type: function() {\n        // Order is important: start with most-specific classes and go up the track hierarchy.\n        if (this instanceof LabelTrack) {\n            return \"LabelTrack\";\n        } else if (this instanceof ReferenceTrack) {\n            return \"ReferenceTrack\";\n        } else if (this instanceof LineTrack) {\n            return \"LineTrack\";\n        } else if (this instanceof ReadTrack) {\n            return \"ReadTrack\";\n        } else if (this instanceof VariantTrack) {\n            return \"VariantTrack\";\n        } else if (this instanceof CompositeTrack) {\n            return \"CompositeTrack\";\n        } else if (this instanceof FeatureTrack) {\n            return \"FeatureTrack\";\n        }\n        return \"\";\n    },\n\n    /**\n     * Remove visualization content and display message.\n     */\n    show_message: function(msg_html) {\n        this.tiles_div.remove();\n        return $(\"<span/>\")\n            .addClass(\"message\")\n            .html(msg_html)\n            .appendTo(this.content_div);\n    },\n\n    /**\n     * Initialize and draw the track.\n     */\n    init: function(retry) {\n        // FIXME: track should have a 'state' attribute that is checked on load; this state attribute should be\n        // used in this function to determine what action(s) to take.\n\n        var track = this;\n        track.enabled = false;\n        track.tile_cache.clear();\n        track.data_manager.clear();\n        /*\n        if (!track.content_div.text()) {\n            track.content_div.text(DATA_LOADING);\n        }\n        */\n        // Remove old track content (e.g. tiles, messages).\n        track.content_div.children().remove();\n        track.container_div.removeClass(\"nodata error pending\");\n\n        track.tiles_div = $(\"<div/>\")\n            .addClass(\"tiles\")\n            .appendTo(track.content_div);\n\n        //\n        // Tracks with no dataset id are handled differently.\n        // FIXME: is this really necessary?\n        //\n        if (!track.dataset.id) {\n            return;\n        }\n\n        // Get dataset state; if state is fine, enable and draw track. Otherwise, show message\n        // about track status.\n        var init_deferred = $.Deferred();\n\n        var params = {\n            hda_ldda: track.dataset.get(\"hda_ldda\"),\n            data_type: this.dataset_check_type,\n            chrom: track.view.chrom,\n            retry: retry\n        };\n\n        $.getJSON(this.dataset.url(), params, result => {\n            if (!result || result === \"error\" || result.kind === \"error\") {\n                // Dataset is in error state.\n                track.container_div.addClass(\"error\");\n                var msg_elt = track.show_message(DATA_ERROR);\n                if (result.message) {\n                    // Add links to (a) show error and (b) try again.\n                    msg_elt.append(\n                        $(\"<a href='javascript:void(0);'></a>\")\n                            .text(\"View error\")\n                            .click(() => {\n                                Galaxy.modal.show({\n                                    title: \"Trackster Error\",\n                                    body: `<pre>${result.message}</pre>`,\n                                    buttons: {\n                                        Close: function() {\n                                            Galaxy.modal.hide();\n                                        }\n                                    }\n                                });\n                            })\n                    );\n                    msg_elt.append($(\"<span/>\").text(\" \"));\n                    msg_elt.append(\n                        $(\"<a href='javascript:void(0);'></a>\")\n                            .text(\"Try again\")\n                            .click(() => {\n                                track.init(true);\n                            })\n                    );\n                }\n            } else if (result === \"no converter\") {\n                track.container_div.addClass(\"error\");\n                track.show_message(DATA_NOCONVERTER);\n            } else if (\n                result === \"no data\" ||\n                (result.data !== undefined && (result.data === null || result.data.length === 0))\n            ) {\n                track.container_div.addClass(\"nodata\");\n                track.show_message(DATA_NONE);\n            } else if (result === \"pending\") {\n                track.container_div.addClass(\"pending\");\n                track.show_message(DATA_PENDING);\n                //$(\"<img/>\").attr(\"src\", image_path + \"/yui/rel_interstitial_loading.gif\").appendTo(track.tiles_div);\n                setTimeout(() => {\n                    track.init();\n                }, track.data_query_wait);\n            } else if (result === \"data\" || result.status === \"data\") {\n                if (result.valid_chroms) {\n                    track.valid_chroms = result.valid_chroms;\n                    track.update_icons();\n                }\n                track.tiles_div.text(DATA_OK);\n                if (track.view.chrom) {\n                    track.tiles_div.text(\"\");\n                    track.tiles_div.css(\"height\", `${track.visible_height_px}px`);\n                    track.enabled = true;\n                    // predraw_init may be asynchronous, wait for it and then draw\n                    $.when.apply($, track.predraw_init()).done(() => {\n                        init_deferred.resolve();\n                        track.container_div.removeClass(\"nodata error pending\");\n                        track.request_draw();\n                    });\n                } else {\n                    init_deferred.resolve();\n                }\n            }\n        });\n\n        this.update_icons();\n        return init_deferred;\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function() {\n        var track = this;\n        return $.getJSON(\n            track.dataset.url(),\n            {\n                data_type: \"data\",\n                stats: true,\n                chrom: track.view.chrom,\n                low: 0,\n                high: track.view.max_high,\n                hda_ldda: track.dataset.get(\"hda_ldda\")\n            },\n            result => {\n                var data = result.data;\n\n                // Tracks may not have stat data either because there is no data or data is not yet ready.\n                if (data && data.min !== undefined && data.max !== undefined) {\n                    // Compute default minimum and maximum values\n                    var min_value = data.min;\n\n                    var max_value = data.max;\n                    // If mean and sd are present, use them to compute a ~95% window\n                    // but only if it would shrink the range on one side\n                    min_value = Math.floor(Math.min(0, Math.max(min_value, data.mean - 2 * data.sd)));\n                    max_value = Math.ceil(Math.max(0, Math.min(max_value, data.mean + 2 * data.sd)));\n                    // Update config, prefs\n                    track.config.set_default_value(\"min_value\", min_value);\n                    track.config.set_default_value(\"max_value\", max_value);\n                    track.config.set_value(\"min_value\", min_value);\n                    track.config.set_value(\"max_value\", max_value);\n                }\n            }\n        );\n    },\n\n    /**\n     * Returns all drawables in this drawable.\n     */\n    get_drawables: function() {\n        return this;\n    }\n});\n\nvar TiledTrack = function(view, container, obj_dict) {\n    Track.call(this, view, container, obj_dict);\n\n    var track = this;\n\n    // Make track moveable.\n    moveable(track.container_div, track.drag_handle_class, \".group\", track);\n\n    // Attribute init.\n    this.filters_manager = new filters_mod.FiltersManager(this, \"filters\" in obj_dict ? obj_dict.filters : null);\n    // HACK: set filters manager for data manager.\n    // FIXME: prolly need function to set filters and update data_manager reference.\n    this.data_manager.set(\"filters_manager\", this.filters_manager);\n    this.filters_available = false;\n    this.tool = obj_dict.tool\n        ? new TracksterTool(\n              _.extend(obj_dict.tool, {\n                  track: this,\n                  tool_state: obj_dict.tool_state\n              })\n          )\n        : null;\n    this.tile_cache = new visualization.Cache(TILE_CACHE_SIZE);\n    this.left_offset = 0;\n\n    if (this.header_div) {\n        //\n        // Setup filters.\n        //\n        this.set_filters_manager(this.filters_manager);\n\n        //\n        // Create dynamic tool view.\n        //\n        if (this.tool) {\n            var tool_view = new TracksterToolView({ model: this.tool });\n            tool_view.render();\n            this.dynamic_tool_div = tool_view.$el;\n            this.header_div.after(this.dynamic_tool_div);\n        }\n    }\n\n    // Add tiles_div, overlay_div to content_div.\n    this.tiles_div = $(\"<div/>\")\n        .addClass(\"tiles\")\n        .appendTo(this.content_div);\n    if (!this.config.get_value(\"content_visible\")) {\n        this.tiles_div.hide();\n    }\n    this.overlay_div = $(\"<div/>\")\n        .addClass(\"overlay\")\n        .appendTo(this.content_div);\n\n    if (obj_dict.mode) {\n        this.change_mode(obj_dict.mode);\n    }\n};\nextend(TiledTrack.prototype, Drawable.prototype, Track.prototype, {\n    action_icons_def: Track.prototype.action_icons_def.concat([\n        // Show more rows when all features are not slotted.\n        {\n            name: \"show_more_rows_icon\",\n            title: \"To minimize track height, not all feature rows are displayed. Click to display more rows.\",\n            css_class: \"exclamation\",\n            on_click_fn: function(track) {\n                $(\".tooltip\").remove();\n                track.slotters[track.view.resolution_px_b].max_rows *= 2;\n                track.request_draw({ clear_tile_cache: true });\n            },\n            hide: true\n        }\n    ]),\n\n    /**\n     * Returns a copy of the track. The copy uses the same data manager so that the tracks can share data.\n     */\n    copy: function(container) {\n        // Create copy.\n        var obj_dict = this.to_dict();\n        extend(obj_dict, {\n            data_manager: this.data_manager\n        });\n        var new_track = new this.constructor(this.view, container, obj_dict);\n        // Misc. init and return.\n        new_track.change_mode(this.mode);\n        new_track.enabled = this.enabled;\n        return new_track;\n    },\n\n    /**\n     * Set filters manager + HTML elements.\n     */\n    set_filters_manager: function(filters_manager) {\n        this.filters_manager = filters_manager;\n        this.header_div.after(this.filters_manager.parent_div);\n    },\n\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: function() {\n        return {\n            track_type: this.get_type(),\n            dataset: {\n                id: this.dataset.id,\n                hda_ldda: this.dataset.get(\"hda_ldda\")\n            },\n            prefs: this.config.to_key_value_dict(),\n            mode: this.mode,\n            filters: this.filters_manager.to_dict(),\n            tool_state: this.tool ? this.tool.state_dict() : {}\n        };\n    },\n\n    /**\n     * Set track bounds for current chromosome.\n     */\n    set_min_max: function() {\n        var track = this;\n\n        return $.getJSON(\n            track.dataset.url(),\n            {\n                data_type: \"data\",\n                stats: true,\n                chrom: track.view.chrom,\n                low: 0,\n                high: track.view.max_high,\n                hda_ldda: track.dataset.get(\"hda_ldda\")\n            },\n            result => {\n                var data = result.data;\n                if (\n                    isNaN(parseFloat(track.config.get_value(\"min_value\"))) ||\n                    isNaN(parseFloat(track.config.get_value(\"max_value\")))\n                ) {\n                    // Compute default minimum and maximum values\n                    var min_value = data.min;\n\n                    var max_value = data.max;\n                    // If mean and sd are present, use them to compute a ~95% window\n                    // but only if it would shrink the range on one side\n                    min_value = Math.floor(Math.min(0, Math.max(min_value, data.mean - 2 * data.sd)));\n                    max_value = Math.ceil(Math.max(0, Math.min(max_value, data.mean + 2 * data.sd)));\n                    // Update the prefs\n                    track.config.set_value(\"min_value\", min_value);\n                    track.config.set_value(\"max_value\", max_value);\n                }\n            }\n        );\n    },\n\n    /**\n     * Change track's mode.\n     */\n    change_mode: function(new_mode) {\n        var track = this;\n        // TODO: is it necessary to store the mode in two places (.mode and track_config)?\n        track.mode = new_mode;\n        track.config.set_value(\"mode\", new_mode);\n        // FIXME: find a better way to get Auto data w/o clearing cache; using mode in the\n        // data manager would work if Auto data were checked for compatibility when a specific\n        // mode is chosen.\n        if (new_mode === \"Auto\") {\n            this.data_manager.clear();\n        }\n        track.request_draw({ clear_tile_cache: true });\n        this.action_icons.mode_icon.attr(\"title\", `Set display mode (now: ${track.mode})`);\n        return track;\n    },\n\n    /**\n     * Update track's buttons.\n     */\n    update_icons: function() {\n        var track = this;\n\n        //\n        // Show/hide filter icon.\n        //\n        track.action_icons.filters_icon.toggle(track.filters_available);\n\n        //\n        // Show/hide tool icons.\n        //\n        track.action_icons.tools_icon.toggle(track.tool !== null);\n        track.action_icons.param_space_viz_icon.toggle(track.tool !== null);\n    },\n\n    /**\n     * Generate a key for the tile cache.\n     * TODO: create a TileCache object (like DataCache) and generate key internally.\n     */\n    _gen_tile_cache_key: function(w_scale, tile_region) {\n        return `${w_scale}_${tile_region}`;\n    },\n\n    /**\n     * Request that track be drawn.\n     */\n    request_draw: function(options) {\n        if (options && options.clear_tile_cache) {\n            this.tile_cache.clear();\n        }\n        this.view.request_redraw(options, this);\n    },\n\n    /**\n     * Actions to be taken before drawing.\n     */\n    before_draw: function() {\n        // Clear because this is set when drawing.\n        this.max_height_px = 0;\n    },\n\n    /**\n     * Draw track. Options include:\n     * -force: force a redraw rather than use cached tiles (default: false)\n     * -clear_after: clear old tiles after drawing new tiles (default: false)\n     * -data_fetch: fetch data if necessary (default: true)\n     *\n     * NOTE: this function should never be called directly; use request_draw() so that drawing\n     * management can be used.\n     */\n    _draw: function(options) {\n        if (!this.can_draw()) {\n            return;\n        }\n\n        var clear_after = options && options.clear_after;\n        var low = this.view.low;\n        var high = this.view.high;\n        var range = high - low;\n        var width = this.view.container.width();\n        var w_scale = this.view.resolution_px_b;\n        var resolution = 1 / w_scale;\n\n        // For overview, adjust high, low, resolution, and w_scale.\n        if (this.is_overview) {\n            low = this.view.max_low;\n            high = this.view.max_high;\n            w_scale = width / (view.max_high - view.max_low);\n            resolution = 1 / w_scale;\n        }\n\n        this.before_draw();\n\n        //\n        // Method for moving and/or removing tiles:\n        // (a) mark all elements for removal using class 'remove'\n        // (b) during tile drawing/placement, remove class for elements that are moved;\n        //     this occurs in show_tile()\n        // (c) after drawing tiles, remove elements still marked for removal\n        //     (i.e. that still have class 'remove').\n        //\n\n        // Step (a) for (re)moving tiles.\n        this.tiles_div.children().addClass(\"remove\");\n\n        var // Tile width in bases.\n        tile_width = Math.floor(TILE_SIZE * resolution);\n\n        var // Index of first tile that overlaps visible region.\n        tile_index = Math.floor(low / tile_width);\n\n        var tile_region;\n        var tile_promise;\n        var tile_promises = [];\n        var tiles = [];\n        // Draw tiles.\n        while (tile_index * tile_width < high) {\n            // Get tile region.\n            tile_region = new visualization.GenomeRegion({\n                chrom: this.view.chrom,\n                start: tile_index * tile_width,\n                // Tile high cannot be larger than view.max_high, which the chromosome length.\n                end: Math.min((tile_index + 1) * tile_width, this.view.max_high)\n            });\n            tile_promise = this.draw_helper(tile_region, w_scale, options);\n            tile_promises.push(tile_promise);\n            $.when(tile_promise).then(tile => {\n                tiles.push(tile);\n            });\n\n            // Go to next tile.\n            tile_index += 1;\n        }\n\n        // Step (c) for (re)moving tiles when clear_after is false.\n        if (!clear_after) {\n            this.tiles_div\n                .children(\".remove\")\n                .removeClass(\"remove\")\n                .remove();\n        }\n\n        // When all tiles are drawn, call post-draw actions.\n        var track = this;\n        $.when.apply($, tile_promises).then(() => {\n            // Step (c) for (re)moving tiles when clear_after is true:\n            track.tiles_div.children(\".remove\").remove();\n\n            // Only do postdraw actions for tiles; instances where tiles may not be drawn include:\n            // (a) ReferenceTrack without sufficient resolution;\n            // (b) data_fetch = false.\n            tiles = _.filter(tiles, t => t !== null);\n            if (tiles.length !== 0) {\n                track.postdraw_actions(tiles, width, w_scale, clear_after);\n            }\n        });\n    },\n\n    /**\n     * Add a maximum/minimum label to track.\n     */\n    _add_yaxis_label: function(type, on_change) {\n        var track = this;\n        var css_class = type === \"max\" ? \"top\" : \"bottom\";\n        var text = type === \"max\" ? \"max\" : \"min\";\n        var pref_name = type === \"max\" ? \"max_value\" : \"min_value\";\n        var label = this.container_div.find(`.yaxislabel.${css_class}`);\n        var value = round(track.config.get_value(pref_name), 1);\n\n        // Default action for on_change is to redraw track.\n        on_change =\n            on_change ||\n            (() => {\n                track.request_draw({ clear_tile_cache: true });\n            });\n\n        if (label.length !== 0) {\n            // Label already exists, so update value.\n            label.text(value);\n        } else {\n            // Add label.\n            label = $(\"<div/>\")\n                .text(value)\n                .make_text_editable({\n                    num_cols: 12,\n                    on_finish: function(new_val) {\n                        $(\".tooltip\").remove();\n                        track.config.set_value(pref_name, round(new_val, 1));\n                        on_change();\n                    },\n                    help_text: `Set ${text} value`\n                })\n                .addClass(`yaxislabel ${css_class}`)\n                .css(\"color\", this.config.get_value(\"label_color\"));\n            this.container_div.prepend(label);\n        }\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function(tiles, width, w_scale, clear_after) {\n        var line_track_tiles = _.filter(tiles, tile => tile instanceof LineTrackTile);\n\n        //\n        // Take different actions depending on whether there are LineTrack/Coverage tiles.\n        //\n\n        if (line_track_tiles.length > 0) {\n            // -- Drawing in Coverage mode. --\n\n            // Clear because this is set when drawing.\n            this.max_height_px = 0;\n            var track = this;\n            _.each(tiles, tile => {\n                if (!(tile instanceof LineTrackTile)) {\n                    tile.html_elt.remove();\n                    track.draw_helper(tile.region, w_scale, {\n                        force: true,\n                        mode: \"Coverage\"\n                    });\n                }\n            });\n\n            track._add_yaxis_label(\"max\");\n        } else {\n            // -- Drawing in non-Coverage mode. --\n\n            // Remove Y-axis labels because there are no line track tiles.\n            this.container_div.find(\".yaxislabel\").remove();\n\n            //\n            // If some tiles have icons, set padding of tiles without icons so features and rows align.\n            //\n            var icons_present = _.find(tiles, tile => tile.has_icons);\n\n            if (icons_present) {\n                _.each(tiles, tile => {\n                    if (!tile.has_icons) {\n                        // Need to align with other tile(s) that have icons.\n                        tile.html_elt.css(\"padding-top\", ERROR_PADDING);\n                    }\n                });\n            }\n        }\n    },\n\n    /**\n     * Returns appropriate display mode based on data.\n     */\n    get_mode: function(data) {\n        return this.mode;\n    },\n\n    /**\n     * Update track interface to show display mode being used.\n     */\n    update_auto_mode: function(display_mode) {\n        // FIXME: needs to be implemented.\n    },\n\n    /**\n     * Returns a list of drawables to draw. Defaults to current track.\n     */\n    _get_drawables: function() {\n        return [this];\n    },\n\n    /**\n     * Retrieves from cache, draws, or sets up drawing for a single tile. Returns either a Tile object or a\n     * jQuery.Deferred object that is fulfilled when tile can be drawn again. Options include:\n     * -force: force a redraw rather than use cached tiles (default: false)\n     * -data_fetch: fetch data if necessary (default: true)\n     */\n    draw_helper: function(region, w_scale, options) {\n        // Init options if necessary to avoid having to check if options defined.\n        if (!options) {\n            options = {};\n        }\n\n        var force = options.force;\n        var mode = options.mode || this.mode;\n        var resolution = 1 / w_scale;\n\n        var // Useful vars.\n        track = this;\n\n        var drawables = this._get_drawables();\n        var key = this._gen_tile_cache_key(w_scale, region);\n\n        var is_tile = o => o && \"track\" in o;\n\n        // Check tile cache, if found show existing tile in correct position\n        var tile = force ? undefined : track.tile_cache.get_elt(key);\n        if (tile) {\n            if (is_tile(tile)) {\n                track.show_tile(tile, w_scale);\n            }\n            return tile;\n        }\n\n        // If not fetching data, nothing more to do because data is needed to draw tile.\n        if (options.data_fetch === false) {\n            return null;\n        }\n\n        // Function that returns data/Deferreds needed to draw tile.\n        var get_tile_data = () => {\n            // HACK: if display mode (mode) is in continuous data modes, data mode must be coverage to get coverage data.\n            var data_mode = _.find(CONTINUOUS_DATA_MODES, m => m === mode) ? \"Coverage\" : mode;\n\n            // Map drawable object to data needed for drawing.\n            var tile_data = _.map(drawables, (\n                d // Get the track data/promise.\n            ) => d.data_manager.get_data(region, data_mode, resolution, track.data_url_extra_params));\n\n            // Get reference data/promise.\n            if (view.reference_track) {\n                tile_data.push(\n                    view.reference_track.data_manager.get_data(\n                        region,\n                        mode,\n                        resolution,\n                        view.reference_track.data_url_extra_params\n                    )\n                );\n            }\n\n            return tile_data;\n        };\n\n        //\n        // When data is available, draw tile.\n        //\n        var tile_drawn = $.Deferred();\n        track.tile_cache.set_elt(key, tile_drawn);\n        $.when.apply($, get_tile_data()).then(() => {\n            var tile_data = get_tile_data();\n            var tracks_data = tile_data;\n            var seq_data;\n\n            // Deferreds may show up here if trying to fetch a subset of data from a superset data chunk\n            // that cannot be subsetted. This may occur if the superset has a message. If there is a\n            // Deferred, try again from the top. NOTE: this condition could (should?) be handled by the\n            // GenomeDataManager in visualization module.\n            if (_.find(tile_data, d => util.is_deferred(d))) {\n                track.tile_cache.set_elt(key, undefined);\n                $.when(track.draw_helper(region, w_scale, options)).then(tile => {\n                    tile_drawn.resolve(tile);\n                });\n                return;\n            }\n\n            // If sequence data is available, subset to get only data in region.\n            if (view.reference_track) {\n                seq_data = view.reference_track.data_manager.subset_entry(tile_data.pop(), region);\n            }\n\n            // Get drawing modes, heights for all tracks.\n            var drawing_modes = [];\n\n            var drawing_heights = [];\n\n            _.each(drawables, (d, i) => {\n                var mode = d.mode;\n                var data = tracks_data[i];\n                if (mode === \"Auto\") {\n                    mode = d.get_mode(data);\n                    d.update_auto_mode(mode);\n                }\n                drawing_modes.push(mode);\n                drawing_heights.push(d.get_canvas_height(data, mode, w_scale, width));\n            });\n\n            var canvas = track.view.canvas_manager.new_canvas();\n            var tile_low = region.get(\"start\");\n            var tile_high = region.get(\"end\");\n            var all_data_index = 0;\n\n            var width = Math.ceil((tile_high - tile_low) * w_scale) + track.left_offset;\n\n            var height = _.max(drawing_heights);\n            var tile;\n\n            //\n            // Draw all tracks on tile.\n            //\n            canvas.width = width;\n            // Height is specified in options or is the height found above.\n            canvas.height = options.height || height;\n            var ctx = canvas.getContext(\"2d\");\n            ctx.translate(track.left_offset, 0);\n            if (drawables.length > 1) {\n                ctx.globalAlpha = 0.5;\n                ctx.globalCompositeOperation = \"source-over\";\n            }\n            _.each(drawables, (d, i) => {\n                tile = d.draw_tile(tracks_data[i], ctx, drawing_modes[i], region, w_scale, seq_data);\n            });\n\n            // Don't cache, show if no tile.\n            if (tile !== undefined) {\n                track.tile_cache.set_elt(key, tile);\n                track.show_tile(tile, w_scale);\n            }\n\n            tile_drawn.resolve(tile);\n        });\n\n        return tile_drawn;\n    },\n\n    /**\n     * Returns canvas height needed to display data; return value is an integer that denotes the\n     * number of pixels required.\n     */\n    get_canvas_height: function(result, mode, w_scale, canvas_width) {\n        return this.visible_height_px;\n    },\n\n    /**\n     * Draw line (bigwig) data onto tile.\n     */\n    _draw_line_track_tile: function(result, ctx, mode, region, w_scale) {\n        // Set min/max if they are not already set.\n        // FIXME: checking for different null/undefined/0 is messy; it would be nice to\n        // standardize this.\n        if ([undefined, null].indexOf(this.config.get_value(\"min_value\")) !== -1) {\n            this.config.set_value(\"min_value\", 0);\n        }\n        if ([undefined, null, 0].indexOf(this.config.get_value(\"max_value\")) !== -1) {\n            this.config.set_value(\"max_value\", _.max(_.map(result.data, d => d[1])) || 0);\n        }\n\n        var canvas = ctx.canvas;\n\n        var painter = new painters.LinePainter(\n            result.data,\n            region.get(\"start\"),\n            region.get(\"end\"),\n            this.config.to_key_value_dict(),\n            mode\n        );\n\n        painter.draw(ctx, canvas.width, canvas.height, w_scale);\n\n        return new LineTrackTile(this, region, w_scale, canvas, result.data);\n    },\n\n    /**\n     * Draw a track tile.\n     * @param result result from server\n     * @param ctx canvas context to draw on\n     * @param mode mode to draw in\n     * @param region region to draw on tile\n     * @param w_scale pixels per base\n     * @param ref_seq reference sequence data\n     */\n    draw_tile: function(result, ctx, mode, region, w_scale, ref_seq) {},\n\n    /**\n     * Show track tile and perform associated actions. Showing tile may actually move\n     * an existing tile rather than reshowing it.\n     */\n    show_tile: function(tile, w_scale) {\n        var track = this;\n        var tile_element = tile.html_elt;\n\n        // -- Show/move tile element. --\n\n        tile.predisplay_actions();\n\n        // Position tile element based on current viewport.\n        var left = Math.round((tile.low - (this.is_overview ? this.view.max_low : this.view.low)) * w_scale);\n        if (this.left_offset) {\n            left -= this.left_offset;\n        }\n        tile_element.css(\"left\", left);\n\n        if (tile_element.hasClass(\"remove\")) {\n            // Step (b) for (re)moving tiles. See _draw() function for description of algorithm\n            // for removing tiles.\n            tile_element.removeClass(\"remove\");\n        } else {\n            // Showing new tile.\n            this.tiles_div.append(tile_element);\n        }\n\n        // -- Update track, tile heights based on new tile. --\n\n        tile_element.css(\"height\", \"auto\");\n\n        // Update max height based on current tile's height.\n        // BUG/HACK: tile_element.height() returns a height that is always 2 pixels too big, so\n        // -2 to get the correct height.\n        this.max_height_px = Math.max(this.max_height_px, tile_element.height() - 2);\n\n        // Update height for all tiles based on max height.\n        tile_element\n            .parent()\n            .children()\n            .css(\"height\", `${this.max_height_px}px`);\n\n        // Update track height based on max height and visible height.\n        var track_height = this.max_height_px;\n        if (this.visible_height_px !== 0) {\n            track_height = Math.min(this.max_height_px, this.visible_height_px);\n        }\n        this.tiles_div.css(\"height\", `${track_height}px`);\n    },\n\n    /**\n     * Utility function that creates a label string describing the region and parameters of a track's tool.\n     */\n    tool_region_and_parameters_str: function(region) {\n        var track = this;\n        var region_str = region !== undefined ? region.toString() : \"all\";\n        var param_str = _.values(track.tool.get_inputs_dict()).join(\", \");\n        return ` - region=[${region_str}], parameters=[${param_str}]`;\n    },\n\n    /**\n     * Returns true if data is compatible with a given mode.\n     */\n    data_and_mode_compatible: function(data, mode) {\n        // Only handle modes that user can set.\n        if (mode === \"Auto\") {\n            return true;\n        } else if (mode === \"Coverage\") {\n            // Histogram mode requires bigwig data.\n            return data.dataset_type === \"bigwig\";\n        } else if (data.dataset_type === \"bigwig\" || data.extra_info === \"no_detail\") {\n            // All other modes--Dense, Squish, Pack--require data + details.\n            return false;\n        } else {\n            return true;\n        }\n    },\n\n    /**\n     * Returns true if entry can be subsetted.\n     */\n    can_subset: function(entry) {\n        // Do not subset entries with a message or data with no detail.\n        if (entry.message || entry.extra_info === \"no_detail\") {\n            return false;\n        } else if (entry.dataset_type === \"bigwig\") {\n            // Subset only if data is single-bp resolution.\n            return entry.data[1][0] - entry.data[0][0] === 1;\n        }\n\n        return true;\n    },\n\n    /**\n     * Set up track to receive tool data.\n     */\n    init_for_tool_data: function() {\n        // Set up track to fetch raw data rather than converted data.\n        this.data_manager.set(\"data_type\", \"raw_data\");\n        this.data_query_wait = 1000;\n        this.dataset_check_type = \"state\";\n\n        // FIXME: this is optional and is disabled for now because it creates\n        // additional converter jobs without a clear benefit because indexing\n        // such a small dataset provides little benefit.\n        //\n        // Set up one-time, post-draw to clear tool execution settings.\n        //\n        /*\n        this.normal_postdraw_actions = this.postdraw_actions;\n        this.postdraw_actions = function(tiles, width, w_scale, clear_after) {\n            var self = this;\n\n            // Do normal postdraw init.\n            self.normal_postdraw_actions(tiles, width, w_scale, clear_after);\n\n            // Tool-execution specific post-draw init:\n\n            // Reset dataset check, wait time.\n            self.dataset_check_type = 'converted_datasets_state';\n            self.data_query_wait = DEFAULT_DATA_QUERY_WAIT;\n\n            // Reset data URL when dataset indexing has completed/when not pending.\n            var ss_deferred = new util.ServerStateDeferred({\n                url: self.dataset_state_url,\n                url_params: {dataset_id : self.dataset.id, hda_ldda: self.dataset.get('hda_ldda')},\n                interval: self.data_query_wait,\n                // Set up deferred to check dataset state until it is not pending.\n                success_fn: function(result) { return result !== \"pending\"; }\n            });\n            $.when(ss_deferred.go()).then(function() {\n                // Dataset is indexed, so use converted data.\n                self.data_manager.set('data_type', 'data');\n            });\n\n            // Reset post-draw actions function.\n            self.postdraw_actions = self.normal_postdraw_actions;\n        };\n        */\n    }\n});\n\nvar LabelTrack = function(view, container) {\n    Track.call(this, view, container, {\n        resize: false,\n        header: false\n    });\n    this.container_div.addClass(\"label-track\");\n};\nextend(LabelTrack.prototype, Track.prototype, {\n    init: function() {\n        // Enable by default because there should always be data when drawing track.\n        this.enabled = true;\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function() {},\n\n    _draw: function(options) {\n        var view = this.view;\n        var range = view.high - view.low;\n\n        var tickDistance = Math.floor(Math.pow(10, Math.floor(Math.log(range) / Math.log(10))));\n\n        var position = Math.floor(view.low / tickDistance) * tickDistance;\n        var width = this.view.container.width();\n        var new_div = $(\"<div/>\").addClass(\"label-container\");\n        while (position < view.high) {\n            var screenPosition = Math.floor((position - view.low) / range * width);\n            new_div.append(\n                $(\"<div/>\")\n                    .addClass(\"pos-label\")\n                    .text(util.commatize(position))\n                    .css({\n                        left: screenPosition\n                    })\n            );\n            position += tickDistance;\n        }\n        this.content_div.children(\":first\").remove();\n        this.content_div.append(new_div);\n    }\n});\n\n// FIXME: Composite tracks have code for showing composite tracks with line tracks and\n// composite tracks with line + feature tracks. It's probably best if different classes\n// are created for each type of composite track.\n\n/**\n * A tiled track composed of multiple other tracks. Composite tracks only work with\n * bigwig data for now.\n */\nvar CompositeTrack = function(view, container, obj_dict) {\n    TiledTrack.call(this, view, container, obj_dict);\n\n    // Init drawables; each drawable is a copy so that config/preferences\n    // are independent of each other. Also init left offset.\n    this.drawables = [];\n    if (\"drawables\" in obj_dict) {\n        var drawable;\n        for (var i = 0; i < obj_dict.drawables.length; i++) {\n            drawable = obj_dict.drawables[i];\n            this.drawables[i] = object_from_template(drawable, view, null);\n\n            // Track's left offset is the max of all tracks.\n            if (drawable.left_offset > this.left_offset) {\n                this.left_offset = drawable.left_offset;\n            }\n        }\n        this.enabled = true;\n    }\n\n    // Set all feature tracks to use Coverage mode.\n    _.each(this.drawables, d => {\n        if (d instanceof FeatureTrack || d instanceof ReadTrack) {\n            d.change_mode(\"Coverage\");\n        }\n    });\n\n    this.update_icons();\n\n    // HACK: needed for saving object for now. Need to generalize get_type() to all Drawables and use\n    // that for object type.\n    this.obj_type = \"CompositeTrack\";\n};\n\nextend(CompositeTrack.prototype, TiledTrack.prototype, {\n    display_modes: CONTINUOUS_DATA_MODES,\n\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"min_value\",\n                label: \"Min Value\",\n                type: \"float\",\n                default_value: undefined\n            },\n            {\n                key: \"max_value\",\n                label: \"Max Value\",\n                type: \"float\",\n                default_value: undefined\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 30,\n                hidden: true\n            }\n        ]);\n    },\n\n    action_icons_def: [\n        // Create composite track from group's tracks.\n        {\n            name: \"composite_icon\",\n            title: \"Show individual tracks\",\n            css_class: \"layers-stack\",\n            on_click_fn: function(track) {\n                $(\".tooltip\").remove();\n                track.show_group();\n            }\n        }\n    ].concat(TiledTrack.prototype.action_icons_def),\n\n    // HACK: CompositeTrack should inherit from DrawableCollection as well.\n    /**\n     * Returns representation of object in a dictionary for easy saving.\n     * Use from_dict to recreate object.\n     */\n    to_dict: DrawableCollection.prototype.to_dict,\n\n    add_drawable: DrawableCollection.prototype.add_drawable,\n\n    unpack_drawables: DrawableCollection.prototype.unpack_drawables,\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Action to take during resize.\n     */\n    on_resize: function() {\n        // Propogate visible height to other tracks.\n        var visible_height = this.visible_height_px;\n        _.each(this.drawables, d => {\n            d.visible_height_px = visible_height;\n        });\n        Track.prototype.on_resize.call(this);\n    },\n\n    /**\n     * Change mode for all tracks.\n     */\n    change_mode: function(new_mode) {\n        TiledTrack.prototype.change_mode.call(this, new_mode);\n        for (var i = 0; i < this.drawables.length; i++) {\n            this.drawables[i].change_mode(new_mode);\n        }\n    },\n\n    /**\n     * Initialize component tracks and draw composite track when all components are initialized.\n     */\n    init: function() {\n        // Init components.\n        var init_deferreds = [];\n        for (var i = 0; i < this.drawables.length; i++) {\n            init_deferreds.push(this.drawables[i].init());\n        }\n\n        // Draw composite when all tracks available.\n        var track = this;\n        $.when.apply($, init_deferreds).then(() => {\n            track.enabled = true;\n            track.request_draw();\n        });\n    },\n\n    update_icons: function() {\n        // For now, hide filters and tool.\n        this.action_icons.filters_icon.hide();\n        this.action_icons.tools_icon.hide();\n        this.action_icons.param_space_viz_icon.hide();\n    },\n\n    can_draw: Drawable.prototype.can_draw,\n\n    _get_drawables: function() {\n        return this.drawables;\n    },\n\n    /**\n     * Replace this track with group that includes individual tracks.\n     */\n    show_group: function() {\n        // Create group with individual tracks.\n        var group = new DrawableGroup(this.view, this.container, {\n            name: this.config.get_value(\"name\")\n        });\n\n        var track;\n        for (var i = 0; i < this.drawables.length; i++) {\n            track = this.drawables[i];\n            track.update_icons();\n            group.add_drawable(track);\n            track.container = group;\n            group.content_div.append(track.container_div);\n        }\n\n        // Replace track with group.\n        var index = this.container.replace_drawable(this, group, true);\n        group.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Actions taken before drawing.\n     */\n    before_draw: function() {\n        // FIXME: this is needed only if there are feature tracks in the composite track.\n        // TiledTrack.prototype.before_draw.call(this);\n\n        //\n        // Set min, max for tracks to be largest min, max.\n        //\n\n        // Get smallest min, biggest max.\n        var min = _.min(_.map(this.drawables, d => d.config.get_value(\"min_value\")));\n\n        var max = _.max(_.map(this.drawables, d => d.config.get_value(\"max_value\")));\n\n        this.config.set_value(\"min_value\", min);\n        this.config.set_value(\"max_value\", max);\n\n        // Set all tracks to smallest min, biggest max.\n        _.each(this.drawables, d => {\n            d.config.set_value(\"min_value\", min);\n            d.config.set_value(\"max_value\", max);\n        });\n    },\n\n    /**\n     * Update minimum, maximum for component tracks.\n     */\n    update_all_min_max: function() {\n        var track = this;\n        var min_value = this.config.get_value(\"min_value\");\n        var max_value = this.config.get_value(\"max_value\");\n        _.each(this.drawables, d => {\n            d.config.set_value(\"min_value\", min_value);\n            d.config.set_value(\"max_value\", max_value);\n        });\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function(tiles, width, w_scale, clear_after) {\n        // All tiles must be the same height in order to draw LineTracks, so redraw tiles as needed.\n        var max_height = -1;\n\n        var i;\n        for (i = 0; i < tiles.length; i++) {\n            var height = tiles[i].html_elt.find(\"canvas\").height();\n            if (height > max_height) {\n                max_height = height;\n            }\n        }\n\n        for (i = 0; i < tiles.length; i++) {\n            var tile = tiles[i];\n            if (tile.html_elt.find(\"canvas\").height() !== max_height) {\n                this.draw_helper(tile.region, w_scale, {\n                    force: true,\n                    height: max_height\n                });\n                tile.html_elt.remove();\n            }\n        }\n\n        // Wrap function so that it can be called without object reference.\n        var track = this;\n\n        var t = () => {\n            track.update_all_min_max();\n        };\n\n        // Add min, max labels.\n        this._add_yaxis_label(\"min\", t);\n        this._add_yaxis_label(\"max\", t);\n    }\n});\n\n/**\n * Displays reference genome data.\n */\nvar ReferenceTrack = function(view) {\n    TiledTrack.call(this, view, { content_div: view.top_labeltrack }, { resize: false, header: false });\n\n    // Use offset to ensure that bases at tile edges are drawn.\n    this.left_offset = view.canvas_manager.char_width_px;\n    this.container_div.addClass(\"reference-track\");\n    this.data_url = `${Galaxy.root}api/genomes/${this.view.dbkey}`;\n    this.data_url_extra_params = { reference: true };\n    this.data_manager = new visualization.GenomeReferenceDataManager({\n        data_url: this.data_url,\n        can_subset: this.can_subset\n    });\n    this.hide_contents();\n};\nextend(ReferenceTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 13,\n                hidden: true\n            }\n        ]);\n    },\n\n    init: function() {\n        this.data_manager.clear();\n        // Enable by default because there should always be data when drawing track.\n        this.enabled = true;\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function() {},\n\n    can_draw: Drawable.prototype.can_draw,\n\n    /**\n     * Draws and shows tile if reference data can be displayed; otherwise track is hidden.\n     */\n    draw_helper: function(region, w_scale, options) {\n        var cur_visible = this.tiles_div.is(\":visible\");\n        var new_visible;\n        var tile = null;\n        if (w_scale > this.view.canvas_manager.char_width_px) {\n            this.tiles_div.show();\n            new_visible = true;\n            tile = TiledTrack.prototype.draw_helper.call(this, region, w_scale, options);\n        } else {\n            new_visible = false;\n            this.tiles_div.hide();\n        }\n\n        // NOTE: viewport resizing conceptually belongs in postdraw_actions(), but currently\n        // postdraw_actions is not called when reference track not shown due to no tiles. If\n        // it is moved to postdraw_actions, resize must be called each time because cannot\n        // easily detect showing/hiding.\n\n        // If showing or hiding reference track, resize viewport.\n        if (cur_visible !== new_visible) {\n            this.view.resize_viewport();\n        }\n\n        return tile;\n    },\n\n    can_subset: function(entry) {\n        return true;\n    },\n\n    /**\n     * Draw ReferenceTrack tile.\n     */\n    draw_tile: function(data, ctx, mode, region, w_scale) {\n        // Try to subset data.\n        var subset = this.data_manager.subset_entry(data, region);\n\n        var seq_data = subset.data;\n\n        // Draw sequence data.\n        var canvas = ctx.canvas;\n        ctx.font = ctx.canvas.manager.default_font;\n        ctx.textAlign = \"center\";\n        for (var c = 0, str_len = seq_data.length; c < str_len; c++) {\n            ctx.fillStyle = this.view.get_base_color(seq_data[c]);\n            ctx.fillText(seq_data[c], Math.floor(c * w_scale), 10);\n        }\n        return new Tile(this, region, w_scale, canvas, subset);\n    }\n});\n\n/**\n * Track displays continuous/numerical data. Track expects position data in 1-based format, i.e. wiggle format.\n */\nvar LineTrack = function(view, container, obj_dict) {\n    this.mode = \"Histogram\";\n    TiledTrack.call(this, view, container, obj_dict);\n    // Need left offset for drawing overlap near tile boundaries.\n    this.left_offset = 30;\n\n    // If server has byte-range support, use BBI data manager to read directly from the BBI file.\n    // FIXME: there should be a flag to wait for this check to complete before loading the track.\n    var self = this;\n    $.when(supportsByteRanges(`${Galaxy.root}datasets/${this.dataset.id}/display`)).then(supportsByteRanges => {\n        if (supportsByteRanges) {\n            self.data_manager = new bbi.BBIDataManager({\n                dataset: self.dataset\n            });\n        }\n    });\n};\n\nextend(LineTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: CONTINUOUS_DATA_MODES,\n\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            { key: \"color\", label: \"Color\", type: \"color\" },\n            {\n                key: \"min_value\",\n                label: \"Min Value\",\n                type: \"float\",\n                default_value: undefined\n            },\n            {\n                key: \"max_value\",\n                label: \"Max Value\",\n                type: \"float\",\n                default_value: undefined\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 30,\n                hidden: true\n            }\n        ]);\n    },\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Actions to be taken before drawing.\n     */\n    // FIXME: can the default behavior be used; right now it breaks during resize.\n    before_draw: function() {},\n\n    /**\n     * Draw track tile.\n     */\n    draw_tile: function(result, ctx, mode, region, w_scale) {\n        return this._draw_line_track_tile(result, ctx, mode, region, w_scale);\n    },\n\n    /**\n     * Subset data only if data is at single-base pair resolution.\n     */\n    can_subset: function(entry) {\n        return entry.data[1][0] - entry.data[0][0] === 1;\n    },\n\n    /**\n     * Add min, max labels.\n     */\n    postdraw_actions: function(tiles, width, w_scale, clear_after) {\n        // Add min, max labels.\n        this._add_yaxis_label(\"max\");\n        this._add_yaxis_label(\"min\");\n    }\n});\n\n/**\n * Diagonal heatmap for showing interactions data.\n */\nvar DiagonalHeatmapTrack = function(view, container, obj_dict) {\n    this.mode = \"Heatmap\";\n    TiledTrack.call(this, view, container, obj_dict);\n};\n\nextend(DiagonalHeatmapTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: [\"Heatmap\"],\n\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"pos_color\",\n                label: \"Positive Color\",\n                type: \"color\",\n                default_value: \"#FF8C00\"\n            },\n            {\n                key: \"neg_color\",\n                label: \"Negative Color\",\n                type: \"color\",\n                default_value: \"#4169E1\"\n            },\n            {\n                key: \"min_value\",\n                label: \"Min Value\",\n                type: \"int\",\n                default_value: undefined\n            },\n            {\n                key: \"max_value\",\n                label: \"Max Value\",\n                type: \"int\",\n                default_value: undefined\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 500,\n                hidden: true\n            }\n        ]);\n    },\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function() {\n        var track = this;\n        return $.getJSON(\n            track.dataset.url(),\n            {\n                data_type: \"data\",\n                stats: true,\n                chrom: track.view.chrom,\n                low: 0,\n                high: track.view.max_high,\n                hda_ldda: track.dataset.get(\"hda_ldda\")\n            },\n            result => {\n                var data = result.data;\n            }\n        );\n    },\n\n    /**\n     * Draw tile.\n     */\n    draw_tile: function(result, ctx, mode, region, w_scale) {\n        // Paint onto canvas.\n        var canvas = ctx.canvas;\n\n        var painter = new painters.DiagonalHeatmapPainter(\n            result.data,\n            region.get(\"start\"),\n            region.get(\"end\"),\n            this.config.to_key_value_dict(),\n            mode\n        );\n\n        painter.draw(ctx, canvas.width, canvas.height, w_scale);\n\n        return new Tile(this, region, w_scale, canvas, result.data);\n    }\n});\n\n/**\n * A track that displays features/regions. Track expects position data in BED format, i.e. 0-based, half-open.\n */\nvar FeatureTrack = function(view, container, obj_dict) {\n    TiledTrack.call(this, view, container, obj_dict);\n    this.container_div.addClass(\"feature-track\");\n    this.summary_draw_height = 30;\n    this.slotters = {};\n    this.start_end_dct = {};\n    this.left_offset = 200;\n\n    // this.painter = painters.LinkedFeaturePainter;\n    this.set_painter_from_config();\n};\nextend(FeatureTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: [\"Auto\", \"Coverage\", \"Dense\", \"Squish\", \"Pack\"],\n\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"block_color\",\n                label: \"Block color\",\n                type: \"color\"\n            },\n            {\n                key: \"reverse_strand_color\",\n                label: \"Antisense strand color\",\n                type: \"color\"\n            },\n            {\n                key: \"label_color\",\n                label: \"Label color\",\n                type: \"color\",\n                default_value: \"black\"\n            },\n            {\n                key: \"show_counts\",\n                label: \"Show summary counts\",\n                type: \"bool\",\n                default_value: true,\n                help: \"Show the number of items in each bin when drawing summary histogram\"\n            },\n            {\n                key: \"min_value\",\n                label: \"Histogram minimum\",\n                type: \"float\",\n                default_value: undefined,\n                help: \"clear value to set automatically\"\n            },\n            {\n                key: \"max_value\",\n                label: \"Histogram maximum\",\n                type: \"float\",\n                default_value: undefined,\n                help: \"clear value to set automatically\"\n            },\n            {\n                key: \"connector_style\",\n                label: \"Connector style\",\n                type: \"select\",\n                default_value: \"fishbones\",\n                options: [\n                    {\n                        label: \"Line with arrows\",\n                        value: \"fishbone\"\n                    },\n                    { label: \"Arcs\", value: \"arcs\" }\n                ]\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 0,\n                hidden: true\n            }\n        ]);\n    },\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.set_painter_from_config();\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    set_painter_from_config: function() {\n        if (this.config.get_value(\"connector_style\") === \"arcs\") {\n            this.painter = painters.ArcLinkedFeaturePainter;\n        } else {\n            this.painter = painters.LinkedFeaturePainter;\n        }\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function(tiles, width, w_scale, clear_after) {\n        TiledTrack.prototype.postdraw_actions.call(this, tiles, width, w_scale, clear_after);\n\n        var track = this;\n        var i;\n\n        var line_track_tiles = _.filter(tiles, t => t instanceof LineTrackTile);\n\n        //\n        // Finish drawing of features that span multiple tiles. Features that span multiple tiles\n        // are labeled incomplete on the tile level because they cannot be completely drawn.\n        //\n        if (line_track_tiles.length === 0) {\n            // Gather incomplete features together.\n            var all_incomplete_features = {};\n            _.each(_.pluck(tiles, \"incomplete_features\"), inc_features => {\n                _.each(inc_features, feature => {\n                    all_incomplete_features[feature[0]] = feature;\n                });\n            });\n\n            // Draw incomplete features on each tile.\n            var self = this;\n            _.each(tiles, tile => {\n                // Remove features already drawn on tile originally.\n                var tile_incomplete_features = _.omit(\n                    all_incomplete_features,\n                    _.map(tile.incomplete_features, f => f[0])\n                );\n\n                // Remove features already drawn on tile in past postdraw actions.\n                tile_incomplete_features = _.omit(tile_incomplete_features, _.keys(tile.other_tiles_features_drawn));\n\n                // Draw tile's incomplete features.\n                if (_.size(tile_incomplete_features) !== 0) {\n                    // To draw incomplete features, create new canvas, copy original canvas/tile onto new\n                    // canvas, and then draw incomplete features on the new canvas.\n                    var features = {\n                        data: _.values(tile_incomplete_features)\n                    };\n\n                    var new_canvas = self.view.canvas_manager.new_canvas();\n                    var new_canvas_ctx = new_canvas.getContext(\"2d\");\n                    new_canvas.height = Math.max(\n                        tile.canvas.height,\n                        self.get_canvas_height(features, tile.mode, tile.w_scale, 100)\n                    );\n                    new_canvas.width = tile.canvas.width;\n                    new_canvas_ctx.drawImage(tile.canvas, 0, 0);\n                    new_canvas_ctx.translate(track.left_offset, 0);\n                    var new_tile = self.draw_tile(\n                        features,\n                        new_canvas_ctx,\n                        tile.mode,\n                        tile.region,\n                        tile.w_scale,\n                        tile.seq_data\n                    );\n                    $(tile.canvas).replaceWith($(new_tile.canvas));\n                    tile.canvas = new_canvas;\n                    _.extend(tile.other_tiles_features_drawn, all_incomplete_features);\n                }\n            });\n        }\n\n        // If mode is Coverage and tiles do not share max, redraw tiles as necessary using new max.\n        /*\n        This code isn't used right now because Coverage mode uses predefined max in preferences.\n        if (track.mode === \"Coverage\") {\n            // Get global max.\n            var global_max = -1;\n            for (i = 0; i < tiles.length; i++) {\n                var cur_max = tiles[i].max_val;\n                if (cur_max > global_max) {\n                    global_max = cur_max;\n                }\n            }\n\n            for (i = 0; i < tiles.length; i++) {\n                var tile = tiles[i];\n                if (tile.max_val !== global_max) {\n                    tile.html_elt.remove();\n                    track.draw_helper(tile.index, w_scale, { more_tile_data: { force: true, max: global_max } } );\n                }\n            }\n        }\n        */\n\n        //\n        // Update filter attributes, UI.\n        //\n\n        // Update filtering UI.\n        if (track.filters_manager) {\n            var filters = track.filters_manager.filters;\n            var f;\n            for (f = 0; f < filters.length; f++) {\n                filters[f].update_ui_elt();\n            }\n\n            // Determine if filters are available; this is based on the tiles' data.\n            // Criteria for filter to be available: (a) it is applicable to tile data and (b) filter min != filter max.\n            var filters_available = false;\n\n            var example_feature;\n            var filter;\n            for (i = 0; i < tiles.length; i++) {\n                if (tiles[i].data.length) {\n                    example_feature = tiles[i].data[0];\n                    for (f = 0; f < filters.length; f++) {\n                        filter = filters[f];\n                        if (filter.applies_to(example_feature) && filter.min !== filter.max) {\n                            filters_available = true;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // If filter availability changed, hide filter div if necessary and update menu.\n            if (track.filters_available !== filters_available) {\n                track.filters_available = filters_available;\n                if (!track.filters_available) {\n                    track.filters_manager.hide();\n                }\n                track.update_icons();\n            }\n        }\n\n        //\n        // If not all features slotted, show icon for showing more rows (slots).\n        //\n        if (tiles[0] instanceof FeatureTrackTile) {\n            var all_slotted = true;\n            for (i = 0; i < tiles.length; i++) {\n                if (!tiles[i].all_slotted) {\n                    all_slotted = false;\n                    break;\n                }\n            }\n            this.action_icons.show_more_rows_icon.toggle(!all_slotted);\n        } else {\n            this.action_icons.show_more_rows_icon.hide();\n        }\n    },\n\n    /**\n     * Update track interface to show display mode being used.\n     */\n    update_auto_mode: function(mode) {\n        if (this.mode === \"Auto\") {\n            if (mode === \"no_detail\") {\n                mode = \"feature spans\";\n            }\n            this.action_icons.mode_icon.attr(\"title\", `Set display mode (now: Auto/${mode})`);\n        }\n    },\n\n    /**\n     * Place features in slots for drawing (i.e. pack features).\n     * this.slotters[level] is created in this method. this.slotters[level]\n     * is a Slotter object. Returns the number of slots used to pack features.\n     */\n    incremental_slots: function(level, features, mode) {\n        // Get/create incremental slots for level. If display mode changed,\n        // need to create new slots.\n\n        var dummy_context = this.view.canvas_manager.dummy_context;\n\n        var slotter = this.slotters[level];\n        if (!slotter || slotter.mode !== mode) {\n            slotter = new slotting.FeatureSlotter(level, mode, MAX_FEATURE_DEPTH, x => dummy_context.measureText(x));\n            this.slotters[level] = slotter;\n        }\n\n        return slotter.slot_features(features);\n    },\n\n    /**\n     * Returns appropriate display mode based on data.\n     */\n    get_mode: function(data) {\n        var mode;\n        // HACK: use no_detail mode track is in overview to prevent overview from being too large.\n        if (data.extra_info === \"no_detail\" || this.is_overview) {\n            mode = \"no_detail\";\n        } else {\n            // Choose b/t Squish and Pack.\n            // Proxy measures for using Squish:\n            // (a) error message re: limiting number of features shown;\n            // (b) X number of features shown;\n            // (c) size of view shown.\n            // TODO: cannot use (a) and (b) because it requires coordinating mode across tiles;\n            // fix this so that tiles are redrawn as necessary to use the same mode.\n            //if ( (result.message && result.message.match(/^Only the first [\\d]+/)) ||\n            //     (result.data && result.data.length > 2000) ||\n            //var data = result.data;\n            // if ( (data.length && data.length < 4) ||\n            //      (this.view.high - this.view.low > MIN_SQUISH_VIEW_WIDTH) ) {\n            if (this.view.high - this.view.low > MIN_SQUISH_VIEW_WIDTH) {\n                mode = \"Squish\";\n            } else {\n                mode = \"Pack\";\n            }\n        }\n        return mode;\n    },\n\n    /**\n     * Returns canvas height needed to display data; return value is an integer that denotes the\n     * number of pixels required.\n     */\n    get_canvas_height: function(result, mode, w_scale, canvas_width) {\n        if (mode === \"Coverage\" || result.dataset_type === \"bigwig\") {\n            return this.summary_draw_height;\n        } else {\n            // All other modes require slotting.\n            var rows_required = this.incremental_slots(w_scale, result.data, mode);\n            // HACK: use dummy painter to get required height. Painter should be extended so that get_required_height\n            // works as a static function.\n            var dummy_painter = new this.painter(null, null, null, this.config.to_key_value_dict(), mode);\n            return Math.max(this.min_height_px, dummy_painter.get_required_height(rows_required, canvas_width));\n        }\n    },\n\n    /**\n     * Draw FeatureTrack tile.\n     * @param result result from server\n     * @param cxt canvas context to draw on\n     * @param mode mode to draw in\n     * @param region region to draw on tile\n     * @param w_scale pixels per base\n     * @param ref_seq reference sequence data\n     * @param cur_tile true if drawing is occurring on a currently visible tile.\n     */\n    draw_tile: function(result, ctx, mode, region, w_scale, ref_seq, cur_tile) {\n        var track = this;\n        var canvas = ctx.canvas;\n        var tile_low = region.get(\"start\");\n        var tile_high = region.get(\"end\");\n        var left_offset = this.left_offset;\n\n        // If data is line track data, draw line track tile.\n        if (result.dataset_type === \"bigwig\") {\n            return this._draw_line_track_tile(result, ctx, mode, region, w_scale);\n        }\n\n        // Handle row-by-row tracks\n\n        // Preprocessing: filter features and determine whether all unfiltered features have been slotted.\n        var filtered = [];\n\n        var slots = this.slotters[w_scale].slots;\n        var all_slotted = true;\n        if (result.data) {\n            var filters = this.filters_manager.filters;\n            for (var i = 0, len = result.data.length; i < len; i++) {\n                var feature = result.data[i];\n                var hide_feature = false;\n                var filter;\n                for (var f = 0, flen = filters.length; f < flen; f++) {\n                    filter = filters[f];\n                    filter.update_attrs(feature);\n                    if (!filter.keep(feature)) {\n                        hide_feature = true;\n                        break;\n                    }\n                }\n                if (!hide_feature) {\n                    // Feature visible.\n                    filtered.push(feature);\n                    // Set flag if not slotted.\n                    if (!(feature[0] in slots)) {\n                        all_slotted = false;\n                    }\n                }\n            }\n        }\n\n        // Create painter.\n        var filter_alpha_scaler = this.filters_manager.alpha_filter\n            ? new FilterScaler(this.filters_manager.alpha_filter)\n            : null;\n\n        var filter_height_scaler = this.filters_manager.height_filter\n            ? new FilterScaler(this.filters_manager.height_filter)\n            : null;\n\n        var painter = new this.painter(\n            filtered,\n            tile_low,\n            tile_high,\n            this.config.to_key_value_dict(),\n            mode,\n            filter_alpha_scaler,\n            filter_height_scaler,\n            // HACK: ref_seq only be defined for ReadTracks, and only the ReadPainter accepts that argument\n            ref_seq,\n            b => track.view.get_base_color(b)\n        );\n\n        var feature_mapper = null;\n\n        ctx.fillStyle = this.config.get_value(\"block_color\");\n        ctx.font = ctx.canvas.manager.default_font;\n        ctx.textAlign = \"right\";\n\n        if (result.data) {\n            // Draw features.\n            var draw_results = painter.draw(ctx, canvas.width, canvas.height, w_scale, slots);\n            feature_mapper = draw_results.feature_mapper;\n            incomplete_features = draw_results.incomplete_features;\n            feature_mapper.translation = -left_offset;\n        }\n\n        // If not drawing on current tile, create new tile.\n        if (!cur_tile) {\n            return new FeatureTrackTile(\n                track,\n                region,\n                w_scale,\n                canvas,\n                result.data,\n                mode,\n                result.message,\n                all_slotted,\n                feature_mapper,\n                incomplete_features,\n                ref_seq\n            );\n        }\n    }\n});\n\n/**\n * Displays variant data.\n */\nvar VariantTrack = function(view, container, obj_dict) {\n    TiledTrack.call(this, view, container, obj_dict);\n    this.painter = painters.VariantPainter;\n    this.summary_draw_height = 30;\n\n    // Maximum resolution is ~45 pixels/base, so use this size left offset to ensure that full\n    // variant is drawn when variant is at start of tile.\n    this.left_offset = 30;\n};\n\nextend(VariantTrack.prototype, Drawable.prototype, TiledTrack.prototype, {\n    display_modes: [\"Auto\", \"Coverage\", \"Dense\", \"Squish\", \"Pack\"],\n\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"color\",\n                label: \"Histogram color\",\n                type: \"color\"\n            },\n            {\n                key: \"show_sample_data\",\n                label: \"Show sample data\",\n                type: \"bool\",\n                default_value: true\n            },\n            {\n                key: \"show_labels\",\n                label: \"Show summary and sample labels\",\n                type: \"bool\",\n                default_value: true\n            },\n            {\n                key: \"summary_height\",\n                label: \"Locus summary height\",\n                type: \"float\",\n                default_value: 20\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 0,\n                hidden: true\n            }\n        ]);\n    },\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    },\n\n    /**\n     * Draw tile.\n     */\n    draw_tile: function(result, ctx, mode, region, w_scale) {\n        // Data could be coverage data or variant data.\n        if (result.dataset_type === \"bigwig\") {\n            return this._draw_line_track_tile(result, ctx, \"Histogram\", region, w_scale);\n        } else {\n            // result.dataset_type === 'variant'\n            var view = this.view;\n\n            var painter = new this.painter(\n                result.data,\n                region.get(\"start\"),\n                region.get(\"end\"),\n                this.config.to_key_value_dict(),\n                mode,\n                b => view.get_base_color(b)\n            );\n\n            painter.draw(ctx, ctx.canvas.width, ctx.canvas.height, w_scale);\n            return new Tile(this, region, w_scale, ctx.canvas, result.data);\n        }\n    },\n\n    /**\n     * Returns canvas height needed to display data; return value is an integer that denotes the\n     * number of pixels required.\n     */\n    get_canvas_height: function(result, mode, w_scale, canvas_width) {\n        if (result.dataset_type === \"bigwig\") {\n            return this.summary_draw_height;\n        } else {\n            // HACK: sample_names is not be defined when dataset definition is fetched before\n            // dataset is complete (as is done when running tools). In that case, fall back on\n            // # of samples in data. This can be fixed by re-requesting dataset definition\n            // in init.\n            var num_samples = this.dataset.get_metadata(\"sample_names\")\n                ? this.dataset.get_metadata(\"sample_names\").length\n                : 0;\n            if (num_samples === 0 && result.data.length !== 0) {\n                // Sample data is separated by commas, so this computes # of samples:\n                num_samples = result.data[0][7].match(/,/g);\n                if (num_samples === null) {\n                    num_samples = 1;\n                } else {\n                    num_samples = num_samples.length + 1;\n                }\n            }\n\n            var dummy_painter = new this.painter(null, null, null, this.config.to_key_value_dict(), mode);\n            return dummy_painter.get_required_height(num_samples);\n        }\n    },\n\n    /**\n     * Additional initialization required before drawing track for the first time.\n     */\n    predraw_init: function() {\n        var deferreds = [Track.prototype.predraw_init.call(this)];\n        // FIXME: updating dataset metadata is only needed for visual analysis. Can\n        // this be moved somewhere else?\n        if (!this.dataset.get_metadata(\"sample_names\")) {\n            deferreds.push(this.dataset.fetch());\n        }\n        return deferreds;\n    },\n\n    /**\n     * Actions to be taken after draw has been completed. Draw is completed when all tiles have been\n     * drawn/fetched and shown.\n     */\n    postdraw_actions: function(tiles, width, w_scale, clear_after) {\n        TiledTrack.prototype.postdraw_actions.call(this, tiles, width, w_scale, clear_after);\n\n        var line_track_tiles = _.filter(tiles, t => t instanceof LineTrackTile);\n\n        // Add summary/sample labels if needed and not already included.\n        var sample_names = this.dataset.get_metadata(\"sample_names\");\n        if (\n            line_track_tiles.length === 0 &&\n            this.config.get_value(\"show_labels\") &&\n            sample_names &&\n            sample_names.length > 1\n        ) {\n            var font_size;\n\n            // Add and/or style labels.\n            if (this.container_div.find(\".yaxislabel.variant\").length === 0) {\n                // Add summary and sample labels.\n\n                // Add summary label to middle of summary area.\n                font_size = this.config.get_value(\"summary_height\") / 2;\n                this.tiles_div.prepend(\n                    $(\"<div/>\")\n                        .text(\"Summary\")\n                        .addClass(\"yaxislabel variant top\")\n                        .css({\n                            \"font-size\": `${font_size}px`,\n                            top: `${(this.config.get_value(\"summary_height\") - font_size) / 2}px`\n                        })\n                );\n\n                // Show sample labels.\n                if (this.config.get_value(\"show_sample_data\")) {\n                    var samples_div_html = sample_names.join(\"<br/>\");\n\n                    this.tiles_div.prepend(\n                        $(\"<div/>\")\n                            .html(samples_div_html)\n                            .addClass(\"yaxislabel variant top sample\")\n                            .css({\n                                top: this.config.get_value(\"summary_height\")\n                            })\n                    );\n                }\n            }\n\n            // Style labels.\n\n            // Match sample font size to mode.\n            font_size = `${this.mode === \"Squish\" ? 5 : 10}px`;\n            $(this.tiles_div)\n                .find(\".sample\")\n                .css({\n                    \"font-size\": font_size,\n                    \"line-height\": font_size\n                });\n            // Color labels to preference color.\n            $(this.tiles_div)\n                .find(\".yaxislabel\")\n                .css(\"color\", this.config.get_value(\"label_color\"));\n        } else {\n            // Remove all labels.\n            this.container_div.find(\".yaxislabel.variant\").remove();\n        }\n    }\n});\n\n/**\n * Track that displays mapped reads. Track expects position data in 1-based, closed format, i.e. SAM/BAM format.\n */\nvar ReadTrack = function(view, container, obj_dict) {\n    FeatureTrack.call(this, view, container, obj_dict);\n    this.painter = painters.ReadPainter;\n    this.update_icons();\n};\n\nextend(ReadTrack.prototype, Drawable.prototype, TiledTrack.prototype, FeatureTrack.prototype, {\n    build_config_params: function() {\n        return _.union(Drawable.prototype.config_params, [\n            {\n                key: \"block_color\",\n                label: \"Histogram color\",\n                type: \"color\"\n            },\n            {\n                key: \"detail_block_color\",\n                label: \"Sense strand block color\",\n                type: \"color\",\n                default_value: \"#AAAAAA\"\n            },\n            {\n                key: \"reverse_strand_color\",\n                label: \"Antisense strand block color\",\n                type: \"color\",\n                default_value: \"#DDDDDD\"\n            },\n            {\n                key: \"label_color\",\n                label: \"Label color\",\n                type: \"color\",\n                default_value: \"black\"\n            },\n            {\n                key: \"show_insertions\",\n                label: \"Show insertions\",\n                type: \"bool\",\n                default_value: false\n            },\n            {\n                key: \"show_differences\",\n                label: \"Show differences only\",\n                type: \"bool\",\n                default_value: true\n            },\n            {\n                key: \"show_counts\",\n                label: \"Show summary counts\",\n                type: \"bool\",\n                default_value: true\n            },\n            {\n                key: \"mode\",\n                type: \"string\",\n                default_value: this.mode,\n                hidden: true\n            },\n            {\n                key: \"min_value\",\n                label: \"Histogram minimum\",\n                type: \"float\",\n                default_value: undefined,\n                help: \"clear value to set automatically\"\n            },\n            {\n                key: \"max_value\",\n                label: \"Histogram maximum\",\n                type: \"float\",\n                default_value: undefined,\n                help: \"clear value to set automatically\"\n            },\n            {\n                key: \"height\",\n                type: \"int\",\n                default_value: 0,\n                hidden: true\n            }\n        ]);\n    },\n\n    config_onchange: function() {\n        this.set_name(this.config.get_value(\"name\"));\n        this.request_draw({ clear_tile_cache: true });\n    }\n});\n\n/**\n * Objects that can be added to a view.\n */\nvar addable_objects = {\n    CompositeTrack: CompositeTrack,\n    DrawableGroup: DrawableGroup,\n    DiagonalHeatmapTrack: DiagonalHeatmapTrack,\n    FeatureTrack: FeatureTrack,\n    LineTrack: LineTrack,\n    ReadTrack: ReadTrack,\n    VariantTrack: VariantTrack,\n    // For backward compatibility, map vcf track to variant.\n    VcfTrack: VariantTrack\n};\n\n/**\n * Create new object from a template. A template can be either an object dictionary or an\n * object itself.\n */\nvar object_from_template = (template, view, container) => {\n    if (\"copy\" in template) {\n        // Template is an object.\n        return template.copy(container);\n    } else {\n        // Template is a dictionary.\n        var drawable_type = template.obj_type;\n        // For backward compatibility:\n        if (!drawable_type) {\n            drawable_type = template.track_type;\n        }\n        return new addable_objects[drawable_type](view, container, template);\n    }\n};\n\nexport default {\n    TracksterView: TracksterView,\n    DrawableGroup: DrawableGroup,\n    LineTrack: LineTrack,\n    FeatureTrack: FeatureTrack,\n    DiagonalHeatmapTrack: DiagonalHeatmapTrack,\n    ReadTrack: ReadTrack,\n    VariantTrack: VariantTrack,\n    CompositeTrack: CompositeTrack,\n    object_from_template: object_from_template\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/viz/trackster/tracks.js","import * as _ from \"libs/underscore\";\n/**\n * View for track/group header.\n */\nvar TrackHeaderView = Backbone.View.extend({\n    className: \"track-header\",\n\n    initialize: function() {\n        // Watch and update name changes.\n        this.model.config.get(\"name\").on(\"change:value\", this.update_name, this);\n        this.render();\n    },\n\n    render: function() {\n        this.$el.append($(\"<div/>\").addClass(this.model.drag_handle_class));\n        this.$el.append(\n            $(\"<div/>\")\n                .addClass(\"track-name\")\n                .text(this.model.config.get_value(\"name\"))\n        );\n\n        // Icons container.\n        this.action_icons = {};\n        this.render_action_icons();\n\n        // Suppress double clicks in header so that they do not impact viz under header.\n        this.$el.dblclick(e => {\n            e.stopPropagation();\n        });\n\n        // Needed for floating elts in header.\n        this.$el.append($(\"<div style='clear: both'/>\"));\n    },\n\n    update_name: function() {\n        this.$el.find(\".track-name\").text(this.model.config.get_value(\"name\"));\n    },\n\n    render_action_icons: function() {\n        var self = this;\n        this.icons_div = $(\"<div/>\")\n            .addClass(\"track-icons\")\n            .hide()\n            .appendTo(this.$el);\n        _.each(this.model.action_icons_def, icon_dict => {\n            self.add_action_icon(\n                icon_dict.name,\n                icon_dict.title,\n                icon_dict.css_class,\n                icon_dict.on_click_fn,\n                icon_dict.prepend,\n                icon_dict.hide\n            );\n        });\n\n        // Set up behavior for modes popup.\n        this.set_display_modes(this.model.display_modes);\n    },\n\n    /**\n     * Add an action icon to this object. Appends icon unless prepend flag is specified.\n     */\n    add_action_icon: function(name, title, css_class, on_click_fn, prepend, hide) {\n        var self = this;\n        this.action_icons[name] = $(\"<a/>\")\n            .attr(\"title\", title)\n            .addClass(\"icon-button\")\n            .addClass(css_class)\n            .tooltip()\n            .click(() => {\n                on_click_fn(self.model);\n            })\n            .appendTo(this.icons_div);\n        if (hide) {\n            this.action_icons[name].hide();\n        }\n    },\n\n    /**\n     * Set track's modes and update mode icon popup.\n     */\n    set_display_modes: function(new_modes, init_mode) {\n        if (!new_modes) {\n            return;\n        }\n\n        // HACK: move this out of view and into track.\n\n        // Set modes, init mode.\n        this.model.display_modes = new_modes;\n        this.model.mode = init_mode || this.model.config.get_value(\"mode\") || this.model.display_modes[0];\n\n        this.action_icons.mode_icon.attr(\"title\", `Set display mode (now: ${this.mode})`);\n\n        // Setup popup menu for changing modes.\n        var self = this;\n\n        var track = this.model;\n        var mode_mapping = {};\n        for (var i = 0, len = track.display_modes.length; i < len; i++) {\n            var mode = track.display_modes[i];\n            mode_mapping[mode] = (mode => () => {\n                track.change_mode(mode);\n                // HACK: the popup menu messes with the track's hover event, so manually show/hide\n                // icons div for now.\n                //self.icons_div.show();\n                //track.container_div.mouseleave(function() { track.icons_div.hide(); } );\n            })(mode);\n        }\n\n        make_popupmenu(this.action_icons.mode_icon, mode_mapping);\n    }\n});\n\nexport default {\n    TrackHeaderView: TrackHeaderView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/viz/viz_views.js","import * as _ from \"libs/underscore\";\nvar extend = _.extend;\n\n// HACK: LABEL_SPACING is currently duplicated between here and painters\nvar LABEL_SPACING = 2;\n\nvar PACK_SPACING = 5;\n\n/**\n * Hold slotting information for a feature.\n */\nvar SlottedInfo = function(slot, feature) {\n    this.slot = slot;\n    this.feature = feature;\n};\n\n/**\n * FeatureSlotter determines slots in which to draw features for vertical\n * packing.\n *\n * This implementation is incremental, any feature assigned a slot will be\n * retained for slotting future features.\n */\nvar FeatureSlotter = function(w_scale, mode, max_rows, measureText) {\n    this.slots = {};\n    this.start_end_dct = {};\n    this.w_scale = w_scale;\n    this.mode = mode;\n    this.include_label = mode === \"Pack\";\n    this.max_rows = max_rows;\n    this.measureText = measureText;\n};\n\n/**\n * Slot a set of features, `this.slots` will be updated with slots by id, and\n * the largest slot required for the passed set of features is returned\n */\nextend(FeatureSlotter.prototype, {\n    /**\n     * Get drawing coordinate for a feature.\n     */\n    _get_draw_coords: function(feature) {\n        // Get initial draw coordinates using w_scale.\n        var draw_start = Math.floor(feature[1] * this.w_scale);\n\n        var draw_end = Math.ceil(feature[2] * this.w_scale);\n        var f_name = feature[3];\n        var text_align;\n\n        // Update start, end drawing locations to include feature name.\n        // Try to put the name on the left, if not, put on right.\n        if (f_name !== undefined && this.include_label) {\n            // Add gap for label spacing and extra pack space padding\n            // TODO: Fix constants\n            var text_len = this.measureText(f_name).width + (LABEL_SPACING + PACK_SPACING);\n            if (draw_start - text_len >= 0) {\n                draw_start -= text_len;\n                text_align = \"left\";\n            } else {\n                draw_end += text_len;\n                text_align = \"right\";\n            }\n        }\n\n        /*\n        if (slot_num < 0) {\n            \n            TODO: this is not yet working --\n            console.log(feature_uid, \"looking for slot with text on the right\");\n            // Slot not found. If text was on left, try on right and see\n            // if slot can be found.\n            // TODO: are there any checks we need to do to ensure that text\n            // will fit on tile?\n            if (text_align === \"left\") {\n                draw_start -= text_len;\n                draw_end -= text_len;\n                text_align = \"right\";\n                slot_num = find_slot(draw_start, draw_end);\n            }\n            if (slot_num >= 0) {\n                console.log(feature_uid, \"found slot with text on the right\");\n            }\n\n        }\n        */\n\n        return [draw_start, draw_end];\n    },\n\n    /**\n     * Find the first slot such that current feature doesn't overlap any other features in that slot.\n     * Returns -1 if no slot was found.\n     */\n    _find_slot: function(draw_coords) {\n        // TODO: Use a data structure for faster searching of available slots.\n        var draw_start = draw_coords[0];\n\n        var draw_end = draw_coords[1];\n        for (var slot_num = 0; slot_num <= this.max_rows; slot_num++) {\n            var has_overlap = false;\n            var slot = this.start_end_dct[slot_num];\n            if (slot !== undefined) {\n                // Iterate through features already in slot to see if current feature will fit.\n                for (var k = 0, k_len = slot.length; k < k_len; k++) {\n                    var s_e = slot[k];\n                    if (draw_end > s_e[0] && draw_start < s_e[1]) {\n                        // There is overlap\n                        has_overlap = true;\n                        break;\n                    }\n                }\n            }\n            if (!has_overlap) {\n                return slot_num;\n            }\n        }\n        return -1;\n    },\n\n    /**\n     * Slot features.\n     */\n    slot_features: function(features) {\n        var start_end_dct = this.start_end_dct;\n        var undone = [];\n        var highest_slot = 0;\n        var feature;\n        var feature_uid;\n\n        // Loop through features to (a) find those that are not yet slotted and (b) update\n        // those that are slotted if new information is availabe. For (a), features already\n        // slotted (based on slotting from other tiles) will retain their current slot.\n        for (var i = 0, len = features.length; i < len; i++) {\n            feature = features[i];\n            feature_uid = feature[0];\n            var slotted_info = this.slots[feature_uid];\n\n            // Separate and handle slotted vs. unslotted features.\n            if (slotted_info) {\n                // Feature is slotted; if feature now has larger start/end coordinates,\n                // update drawing coordinates.\n                if (feature[1] < slotted_info.feature[1] || slotted_info.feature[2] < feature[2]) {\n                    // Feature has changed (e.g. a single read now has its pair), so recalculate its\n                    // drawing coordinates.\n                    var old_draw_coords = this._get_draw_coords(slotted_info.feature);\n\n                    var new_draw_coords = this._get_draw_coords(feature);\n                    var slotted_coords = this.start_end_dct[slotted_info.slot];\n                    for (var k = 0; k < slotted_coords.length; k++) {\n                        var dc = slotted_coords[k];\n                        if (dc[0] === old_draw_coords[0] && dc[1] === old_draw_coords[1]) {\n                            // Replace old drawing coordinates with new ones.\n                            slotted_coords[k] = new_draw_coords;\n                        }\n                    }\n                }\n                highest_slot = Math.max(highest_slot, this.slots[feature_uid].slot);\n            } else {\n                undone.push(i);\n            }\n        }\n\n        // Slot unslotted features.\n\n        // Do slotting.\n        for (var i = 0, len = undone.length; i < len; i++) {\n            feature = features[undone[i]];\n            feature_uid = feature[0];\n            var draw_coords = this._get_draw_coords(feature);\n\n            // Find slot.\n            var slot_num = this._find_slot(draw_coords);\n\n            // Do slotting.\n            if (slot_num >= 0) {\n                // Add current feature to slot.\n                if (start_end_dct[slot_num] === undefined) {\n                    start_end_dct[slot_num] = [];\n                }\n                start_end_dct[slot_num].push(draw_coords);\n                this.slots[feature_uid] = new SlottedInfo(slot_num, feature);\n                highest_slot = Math.max(highest_slot, slot_num);\n            }\n        }\n\n        // Debugging: view slots data.\n        /*\n        for (var i = 0; i < MAX_FEATURE_DEPTH; i++) {\n            var slot = start_end_dct[i];\n            if (slot !== undefined) {\n                console.log(i, \"*************\");\n                for (var k = 0, k_len = slot.length; k < k_len; k++) {\n                    console.log(\"\\t\", slot[k][0], slot[k][1]);\n                }\n            }\n        }\n        */\n        return highest_slot + 1;\n    }\n});\n\nexport default {\n    FeatureSlotter: FeatureSlotter\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/viz/trackster/slotting.js","import * as _ from \"libs/underscore\";\n\n/**\n * Compute the type of overlap between two regions. They are assumed to be on the same chrom/contig.\n * The overlap is computed relative to the second region; hence, OVERLAP_START indicates that the first\n * region overlaps the start (but not the end) of the second region.\n * NOTE: Coordinates are assumed to be in BED format: half open (start is closed, end is open).\n */\nvar BEFORE = 1001;\n\nvar CONTAINS = 1002;\nvar OVERLAP_START = 1003;\nvar OVERLAP_END = 1004;\nvar CONTAINED_BY = 1005;\nvar AFTER = 1006;\nvar compute_overlap = (first_region, second_region) => {\n    var first_start = first_region[0];\n    var first_end = first_region[1];\n    var second_start = second_region[0];\n    var second_end = second_region[1];\n    var overlap;\n    if (first_start < second_start) {\n        if (first_end <= second_start) {\n            overlap = BEFORE;\n        } else if (first_end <= second_end) {\n            overlap = OVERLAP_START;\n        } else {\n            // first_end > second_end\n            overlap = CONTAINS;\n        }\n    } else {\n        // first_start >= second_start\n        if (first_start > second_end) {\n            overlap = AFTER;\n        } else if (first_end <= second_end) {\n            overlap = CONTAINED_BY;\n        } else {\n            overlap = OVERLAP_END;\n        }\n    }\n\n    return overlap;\n};\n\n/**\n * Returns true if regions overlap.\n */\nvar is_overlap = (first_region, second_region) => {\n    var overlap = compute_overlap(first_region, second_region);\n    return overlap !== BEFORE && overlap !== AFTER;\n};\n\n/**\n * Draw a dashed line on a canvas using filled rectangles. This function is based on:\n * http://vetruvet.blogspot.com/2010/10/drawing-dashed-lines-on-html5-canvas.html\n * However, that approach uses lines, which don't seem to render as well, so use\n * rectangles instead.\n */\nvar dashedLine = (ctx, x1, y1, x2, y2, dashLen) => {\n    if (dashLen === undefined) {\n        dashLen = 4;\n    }\n    var dX = x2 - x1;\n    var dY = y2 - y1;\n    var dashes = Math.floor(Math.sqrt(dX * dX + dY * dY) / dashLen);\n    var dashX = dX / dashes;\n    var dashY = dY / dashes;\n    var q;\n\n    for (q = 0; q < dashes; q++, x1 += dashX, y1 += dashY) {\n        if (q % 2 !== 0) {\n            continue;\n        }\n        ctx.fillRect(x1, y1, dashLen, 1);\n    }\n};\n\n/**\n * Draw an isosceles triangle that points down.\n */\nvar drawDownwardEquilateralTriangle = function(ctx, down_vertex_x, down_vertex_y, side_len) {\n    // Compute other two points of triangle.\n    var x1 = down_vertex_x - side_len / 2;\n\n    var x2 = down_vertex_x + side_len / 2;\n    var y = down_vertex_y - Math.sqrt(side_len * 3 / 2);\n\n    // Draw and fill.\n    ctx.beginPath();\n    ctx.moveTo(x1, y);\n    ctx.lineTo(x2, y);\n    ctx.lineTo(down_vertex_x, down_vertex_y);\n    ctx.lineTo(x1, y);\n\n    ctx.strokeStyle = this.fillStyle;\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n};\n\n/**\n * Base class for all scalers. Scalers produce values that are used to change (scale) drawing attributes.\n */\nvar Scaler = function(default_val) {\n    this.default_val = default_val ? default_val : 1;\n};\n\n/**\n * Produce a scaling value.\n */\nScaler.prototype.gen_val = function(input) {\n    return this.default_val;\n};\n\n/**\n * Results from painter.draw()\n */\nvar DrawResults = function(options) {\n    this.incomplete_features = options.incomplete_features;\n    this.feature_mapper = options.feature_mapper;\n};\n\n/**\n * Base class for painters\n *\n * -- Mode and prefs are both optional\n */\nvar Painter = function(data, view_start, view_end, prefs, mode) {\n    // Data and data properties\n    this.data = data;\n    // View\n    this.view_start = view_start;\n    this.view_end = view_end;\n    // Drawing prefs\n    this.prefs = _.extend({}, this.default_prefs, prefs);\n    this.mode = mode;\n};\n\nPainter.prototype.default_prefs = {};\n\n/**\n * Draw on the context using a rectangle of width x height using scale w_scale.\n */\nPainter.prototype.draw = (ctx, width, height, w_scale) => {};\n\n/**\n * Get starting drawing position, which is offset a half-base left of coordinate.\n */\nPainter.prototype.get_start_draw_pos = function(chrom_pos, w_scale) {\n    return this._chrom_pos_to_draw_pos(chrom_pos, w_scale, -0.5);\n};\n\n/**\n * Get end drawing position, which is offset a half-base right of coordinate.\n */\nPainter.prototype.get_end_draw_pos = function(chrom_pos, w_scale) {\n    return this._chrom_pos_to_draw_pos(chrom_pos, w_scale, 0.5);\n};\n\n/**\n * Get drawing position.\n */\nPainter.prototype.get_draw_pos = function(chrom_pos, w_scale) {\n    return this._chrom_pos_to_draw_pos(chrom_pos, w_scale, 0);\n};\n\n/**\n * Convert chromosome position to drawing position.\n */\nPainter.prototype._chrom_pos_to_draw_pos = function(chrom_pos, w_scale, offset) {\n    return Math.floor(w_scale * (Math.max(0, chrom_pos - this.view_start) + offset));\n};\n\nvar LinePainter = function(data, view_start, view_end, prefs, mode) {\n    Painter.call(this, data, view_start, view_end, prefs, mode);\n};\n\nLinePainter.prototype.default_prefs = {\n    min_value: undefined,\n    max_value: undefined,\n    mode: \"Histogram\",\n    color: \"#000\",\n    overflow_color: \"#F66\"\n};\n\nLinePainter.prototype.draw = function(ctx, width, height, w_scale) {\n    var in_path = false;\n    var min_value = this.prefs.min_value;\n    var max_value = this.prefs.max_value;\n    var vertical_range = max_value - min_value;\n    var height_px = height;\n    var view_start = this.view_start;\n    var mode = this.mode;\n    var data = this.data;\n\n    ctx.save();\n\n    // Pixel position of 0 on the y axis\n    var y_zero = Math.round(height + min_value / vertical_range * height);\n\n    // Horizontal line to denote x-axis\n    if (mode !== \"Intensity\") {\n        ctx.fillStyle = \"#aaa\";\n        ctx.fillRect(0, y_zero, width, 1);\n    }\n\n    ctx.beginPath();\n    var x_scaled;\n    var y;\n    var delta_x_pxs;\n    if (data.length > 1) {\n        delta_x_pxs = _.map(data.slice(0, -1), (d, i) => Math.ceil((data[i + 1][0] - data[i][0]) * w_scale));\n    } else {\n        delta_x_pxs = [10];\n    }\n\n    // Painter color can be in either block_color (FeatureTrack) or color pref (LineTrack).\n    var painter_color = this.prefs.block_color || this.prefs.color;\n\n    var // Extract RGB from preference color.\n    pref_color = parseInt(painter_color.slice(1), 16);\n\n    var pref_r = (pref_color & 0xff0000) >> 16;\n    var pref_g = (pref_color & 0x00ff00) >> 8;\n    var pref_b = pref_color & 0x0000ff;\n    var top_overflow = false;\n    var bot_overflow = false;\n\n    // Paint track.\n    var delta_x_px;\n    for (var i = 0, len = data.length; i < len; i++) {\n        // Reset attributes for next point.\n        ctx.fillStyle = ctx.strokeStyle = painter_color;\n        top_overflow = bot_overflow = false;\n        delta_x_px = delta_x_pxs[i];\n\n        x_scaled = Math.floor((data[i][0] - view_start - 0.5) * w_scale);\n        y = data[i][1];\n\n        // Process Y (scaler) value.\n        if (y === null) {\n            if (in_path && mode === \"Filled\") {\n                ctx.lineTo(x_scaled, height_px);\n            }\n            in_path = false;\n            continue;\n        }\n\n        // Bound Y value by min, max.\n        if (y < min_value) {\n            bot_overflow = true;\n            y = min_value;\n        } else if (y > max_value) {\n            top_overflow = true;\n            y = max_value;\n        }\n\n        // Draw point.\n        if (mode === \"Histogram\") {\n            // y becomes the bar height in pixels, which is the negated for canvas coords\n            y = Math.round(y / vertical_range * height_px);\n            ctx.fillRect(x_scaled, y_zero, delta_x_px, -y);\n        } else if (mode === \"Intensity\") {\n            var saturation = (y - min_value) / vertical_range;\n\n            var // Range is [pref_color, 255] where saturation = 0 --> 255 and saturation = 1 --> pref color\n            new_r = Math.round(pref_r + (255 - pref_r) * (1 - saturation));\n\n            var new_g = Math.round(pref_g + (255 - pref_g) * (1 - saturation));\n            var new_b = Math.round(pref_b + (255 - pref_b) * (1 - saturation));\n            ctx.fillStyle = `rgb(${new_r},${new_g},${new_b})`;\n            ctx.fillRect(x_scaled, 0, delta_x_px, height_px);\n        } else {\n            // mode is Coverage/Line or Filled.\n\n            // Scale Y value.\n            y = Math.round(height_px - (y - min_value) / vertical_range * height_px);\n            if (in_path) {\n                ctx.lineTo(x_scaled, y);\n            } else {\n                in_path = true;\n                if (mode === \"Filled\") {\n                    ctx.moveTo(x_scaled, height_px);\n                    ctx.lineTo(x_scaled, y);\n                } else {\n                    ctx.moveTo(x_scaled, y);\n                    // Use this approach (note: same as for filled) to draw line from 0 to\n                    // first data point.\n                    //ctx.moveTo(x_scaled, height_px);\n                    //ctx.lineTo(x_scaled, y);\n                }\n            }\n        }\n\n        // Draw lines at boundaries if overflowing min or max\n        ctx.fillStyle = this.prefs.overflow_color;\n        if (top_overflow || bot_overflow) {\n            var overflow_x;\n            if (mode === \"Histogram\" || mode === \"Intensity\") {\n                overflow_x = delta_x_px;\n            } else {\n                // Line and Filled, which are points\n                x_scaled -= 2; // Move it over to the left so it's centered on the point\n                overflow_x = 4;\n            }\n            if (top_overflow) {\n                ctx.fillRect(x_scaled, 0, overflow_x, 3);\n            }\n            if (bot_overflow) {\n                ctx.fillRect(x_scaled, height_px - 3, overflow_x, 3);\n            }\n        }\n        ctx.fillStyle = painter_color;\n    }\n    if (mode === \"Filled\") {\n        if (in_path) {\n            ctx.lineTo(x_scaled, y_zero);\n            ctx.lineTo(0, y_zero);\n        }\n        ctx.fill();\n    } else {\n        ctx.stroke();\n    }\n\n    ctx.restore();\n};\n\n/**\n * Mapper that contains information about feature locations and data.\n */\nvar FeaturePositionMapper = function(slot_height) {\n    this.feature_positions = {};\n    this.slot_height = slot_height;\n    this.translation = 0;\n    this.y_translation = 0;\n};\n\n/**\n * Map feature data to a position defined by <slot, x_start, x_end>.\n */\nFeaturePositionMapper.prototype.map_feature_data = function(feature_data, slot, x_start, x_end) {\n    if (!this.feature_positions[slot]) {\n        this.feature_positions[slot] = [];\n    }\n    this.feature_positions[slot].push({\n        data: feature_data,\n        x_start: x_start,\n        x_end: x_end\n    });\n};\n\n/**\n * Get feature data for position <x, y>\n */\nFeaturePositionMapper.prototype.get_feature_data = function(x, y) {\n    // Find slot using Y.\n    var slot = Math.floor((y - this.y_translation) / this.slot_height);\n\n    var feature_dict;\n\n    // May not be over a slot due to padding, margin, etc.\n    if (!this.feature_positions[slot]) {\n        return null;\n    }\n\n    // Find feature using X.\n    x += this.translation;\n    for (var i = 0; i < this.feature_positions[slot].length; i++) {\n        feature_dict = this.feature_positions[slot][i];\n        if (x >= feature_dict.x_start && x <= feature_dict.x_end) {\n            return feature_dict.data;\n        }\n    }\n};\n\n/**\n * Abstract object for painting feature tracks. Subclasses must implement draw_element() for painting to work.\n * Painter uses a 0-based, half-open coordinate system; start coordinate is closed--included--and the end is open.\n * This coordinate system matches the BED format.\n */\nvar FeaturePainter = function(data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler) {\n    Painter.call(this, data, view_start, view_end, prefs, mode);\n    this.alpha_scaler = alpha_scaler ? alpha_scaler : new Scaler();\n    this.height_scaler = height_scaler ? height_scaler : new Scaler();\n    this.max_label_length = 200;\n};\n\nFeaturePainter.prototype.default_prefs = {\n    block_color: \"#FFF\",\n    connector_color: \"#FFF\"\n};\n\n_.extend(FeaturePainter.prototype, {\n    get_required_height: function(rows_required, width) {\n        // y_scale is the height per row\n        var required_height = this.get_row_height();\n\n        var y_scale = required_height;\n        var mode = this.mode;\n        // If using a packing mode, need to multiply by the number of slots used\n        if (mode === \"no_detail\" || mode === \"Squish\" || mode === \"Pack\") {\n            required_height = rows_required * y_scale;\n        }\n        return required_height + this.get_top_padding(width);\n    },\n\n    /** Extra padding before first row of features */\n    get_top_padding: function(width) {\n        return 0;\n    },\n\n    /**\n     * Draw data on ctx using slots and within the rectangle defined by width and height. Returns\n     * a FeaturePositionMapper object with information about where features were drawn.\n     */\n    draw: function(ctx, width, height, w_scale, slots) {\n        var data = this.data;\n        var view_start = this.view_start;\n        var view_end = this.view_end;\n\n        ctx.save();\n\n        ctx.fillStyle = this.prefs.block_color;\n        ctx.textAlign = \"right\";\n\n        var y_scale = this.get_row_height();\n        var feature_mapper = new FeaturePositionMapper(y_scale);\n        var x_draw_coords;\n        var incomplete_features = [];\n\n        for (var i = 0, len = data.length; i < len; i++) {\n            var feature = data[i];\n            var feature_uid = feature[0];\n            var feature_start = feature[1];\n            var feature_end = feature[2];\n\n            var // Slot valid only if features are slotted and this feature is slotted;\n            // feature may not be due to lack of space.\n            slot = slots && slots[feature_uid] !== undefined ? slots[feature_uid].slot : null;\n\n            // Draw feature if (a) mode is dense or feature is slotted (as it must be for all non-dense modes) and\n            // (b) there's overlap between the feature and drawing region.\n            if ((this.mode === \"Dense\" || slot !== null) && (feature_start < view_end && feature_end > view_start)) {\n                x_draw_coords = this.draw_element(\n                    ctx,\n                    this.mode,\n                    feature,\n                    slot,\n                    view_start,\n                    view_end,\n                    w_scale,\n                    y_scale,\n                    width\n                );\n                feature_mapper.map_feature_data(feature, slot, x_draw_coords[0], x_draw_coords[1]);\n\n                // Add to incomplete features if it's not drawn completely in region.\n                if (feature_start < view_start || feature_end > view_end) {\n                    incomplete_features.push(feature);\n                }\n            }\n        }\n\n        ctx.restore();\n\n        feature_mapper.y_translation = this.get_top_padding(width);\n        return new DrawResults({\n            incomplete_features: incomplete_features,\n            feature_mapper: feature_mapper\n        });\n    },\n\n    /**\n     * Abstract function for drawing an individual feature.\n     */\n    draw_element: function(ctx, mode, feature, slot, tile_low, tile_high, w_scale, y_scale, width) {\n        return [0, 0];\n    }\n});\n\n// Constants specific to feature tracks moved here (HACKING, these should\n// basically all be configuration options)\nvar DENSE_TRACK_HEIGHT = 10;\n\nvar NO_DETAIL_TRACK_HEIGHT = 3;\nvar SQUISH_TRACK_HEIGHT = 5;\nvar PACK_TRACK_HEIGHT = 10;\nvar NO_DETAIL_FEATURE_HEIGHT = 1;\nvar DENSE_FEATURE_HEIGHT = 9;\nvar SQUISH_FEATURE_HEIGHT = 3;\nvar PACK_FEATURE_HEIGHT = 9;\nvar LABEL_SPACING = 2;\nvar CONNECTOR_COLOR = \"#ccc\";\n\nvar LinkedFeaturePainter = function(data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler) {\n    FeaturePainter.call(this, data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler);\n    // Whether to draw a single connector in the background that spans the entire feature (the intron fishbone)\n    this.draw_background_connector = true;\n    // Whether to call draw_connector for every pair of blocks\n    this.draw_individual_connectors = false;\n};\n\n_.extend(LinkedFeaturePainter.prototype, FeaturePainter.prototype, {\n    /**\n     * Height of a single row, depends on mode\n     */\n    get_row_height: function() {\n        var mode = this.mode;\n        var height;\n        if (mode === \"Dense\") {\n            height = DENSE_TRACK_HEIGHT;\n        } else if (mode === \"no_detail\") {\n            height = NO_DETAIL_TRACK_HEIGHT;\n        } else if (mode === \"Squish\") {\n            height = SQUISH_TRACK_HEIGHT;\n        } else {\n            // mode === \"Pack\"\n            height = PACK_TRACK_HEIGHT;\n        }\n        return height;\n    },\n\n    /**\n     * Draw a feature. Returns an array with feature's start and end X coordinates.\n     */\n    draw_element: function(ctx, mode, feature, slot, tile_low, tile_high, w_scale, y_scale, width) {\n        var feature_uid = feature[0];\n        var feature_start = feature[1];\n        var feature_end = feature[2];\n        var feature_name = feature[3];\n        var feature_strand = feature[4];\n\n        var // -0.5 to offset region between bases.\n        f_start = Math.floor(Math.max(0, (feature_start - tile_low - 0.5) * w_scale));\n\n        var f_end = Math.ceil(Math.min(width, Math.max(0, (feature_end - tile_low - 0.5) * w_scale)));\n\n        var draw_start = f_start;\n        var draw_end = f_end;\n\n        var y_start = (mode === \"Dense\" ? 0 : 0 + slot) * y_scale + this.get_top_padding(width);\n\n        var thickness;\n        var y_start;\n        var thick_start = null;\n        var thick_end = null;\n\n        var // TODO: is there any reason why block, label color cannot be set at the Painter level?\n        // For now, assume '.' === '+'\n        block_color =\n            !feature_strand || feature_strand === \"+\" || feature_strand === \".\"\n                ? this.prefs.block_color\n                : this.prefs.reverse_strand_color;\n\n        var label_color = this.prefs.label_color;\n\n        // Set global alpha.\n        ctx.globalAlpha = this.alpha_scaler.gen_val(feature);\n\n        // In dense mode, put all data in top slot.\n        if (mode === \"Dense\") {\n            slot = 1;\n        }\n\n        if (mode === \"no_detail\") {\n            // No details for feature, so only one way to display.\n            ctx.fillStyle = block_color;\n            ctx.fillRect(f_start, y_start + 5, f_end - f_start, NO_DETAIL_FEATURE_HEIGHT);\n        } else {\n            // Mode is either Squish or Pack:\n            // Feature details.\n            var feature_ts = feature[5];\n\n            var feature_te = feature[6];\n            var feature_blocks = feature[7];\n\n            var // Whether we are drawing full height or squished features\n            full_height = true;\n\n            if (feature_ts && feature_te) {\n                thick_start = Math.floor(Math.max(0, (feature_ts - tile_low) * w_scale));\n                thick_end = Math.ceil(Math.min(width, Math.max(0, (feature_te - tile_low) * w_scale)));\n            }\n\n            // Set vars that depend on mode.\n            var thin_height;\n\n            var thick_height;\n            if (mode === \"Squish\") {\n                thin_height = 1;\n                thick_height = SQUISH_FEATURE_HEIGHT;\n                full_height = false;\n            } else if (mode === \"Dense\") {\n                thin_height = 5;\n                thick_height = DENSE_FEATURE_HEIGHT;\n            } else {\n                // mode === \"Pack\"\n                thin_height = 5;\n                thick_height = PACK_FEATURE_HEIGHT;\n            }\n\n            // Draw feature/feature blocks + connectors.\n            if (!feature_blocks) {\n                // If there are no blocks, treat the feature as one big exon.\n                ctx.fillStyle = block_color;\n                ctx.fillRect(f_start, y_start + 1, f_end - f_start, thick_height);\n                // If strand is specified, draw arrows over feature\n                if (feature_strand && full_height) {\n                    if (feature_strand === \"+\") {\n                        ctx.fillStyle = ctx.canvas.manager.get_pattern(\"right_strand_inv\");\n                    } else if (feature_strand === \"-\") {\n                        ctx.fillStyle = ctx.canvas.manager.get_pattern(\"left_strand_inv\");\n                    }\n                    ctx.fillRect(f_start, y_start + 1, f_end - f_start, thick_height);\n                }\n            } else {\n                //\n                // There are feature blocks and mode is either Squish or Pack.\n                //\n                // Approach: (a) draw whole feature as connector/intron and (b) draw blocks as\n                // needed. This ensures that whole feature, regardless of whether it starts with\n                // a block, is visible.\n                //\n\n                // Compute y axis start position and height\n                var cur_y_start;\n\n                var cur_height;\n                if (mode === \"Squish\" || mode === \"Dense\") {\n                    cur_y_start = y_start + Math.floor(SQUISH_FEATURE_HEIGHT / 2) + 1;\n                    cur_height = 1;\n                } else {\n                    // mode === \"Pack\"\n                    if (feature_strand) {\n                        cur_y_start = y_start;\n                        cur_height = thick_height;\n                    } else {\n                        cur_y_start += SQUISH_FEATURE_HEIGHT / 2 + 1;\n                        cur_height = 1;\n                    }\n                }\n\n                // Draw whole feature as connector/intron.\n                if (this.draw_background_connector) {\n                    if (mode === \"Squish\" || mode === \"Dense\") {\n                        ctx.fillStyle = CONNECTOR_COLOR;\n                    } else {\n                        // mode === \"Pack\"\n                        if (feature_strand) {\n                            if (feature_strand === \"+\") {\n                                ctx.fillStyle = ctx.canvas.manager.get_pattern(\"right_strand\");\n                            } else if (feature_strand === \"-\") {\n                                ctx.fillStyle = ctx.canvas.manager.get_pattern(\"left_strand\");\n                            }\n                        } else {\n                            ctx.fillStyle = CONNECTOR_COLOR;\n                        }\n                    }\n                    ctx.fillRect(f_start, cur_y_start, f_end - f_start, cur_height);\n                }\n\n                // Draw blocks.\n                var start_and_height;\n                for (var k = 0, k_len = feature_blocks.length; k < k_len; k++) {\n                    var block = feature_blocks[k];\n\n                    var // -0.5 to offset block between bases.\n                    block_start = Math.floor(Math.max(0, (block[0] - tile_low - 0.5) * w_scale));\n\n                    var block_end = Math.ceil(Math.min(width, Math.max((block[1] - tile_low - 0.5) * w_scale)));\n\n                    var last_block_start;\n                    var last_block_end;\n\n                    // Skip drawing if block not on tile.\n                    if (block_start > block_end) {\n                        continue;\n                    }\n\n                    // Draw thin block.\n                    ctx.fillStyle = block_color;\n                    ctx.fillRect(\n                        block_start,\n                        y_start + (thick_height - thin_height) / 2 + 1,\n                        block_end - block_start,\n                        thin_height\n                    );\n\n                    // If block intersects with thick region, draw block as thick.\n                    // - No thick is sometimes encoded as thick_start == thick_end, so don't draw in that case\n                    if (\n                        thick_start !== undefined &&\n                        feature_te > feature_ts &&\n                        !(block_start > thick_end || block_end < thick_start)\n                    ) {\n                        var block_thick_start = Math.max(block_start, thick_start);\n\n                        var block_thick_end = Math.min(block_end, thick_end);\n                        ctx.fillRect(block_thick_start, y_start + 1, block_thick_end - block_thick_start, thick_height);\n                        if (feature_blocks.length === 1 && mode === \"Pack\") {\n                            // Exactly one block means we have no introns, but do have a distinct \"thick\" region,\n                            // draw arrows over it if in pack mode.\n                            if (feature_strand === \"+\") {\n                                ctx.fillStyle = ctx.canvas.manager.get_pattern(\"right_strand_inv\");\n                            } else if (feature_strand === \"-\") {\n                                ctx.fillStyle = ctx.canvas.manager.get_pattern(\"left_strand_inv\");\n                            }\n                            // If region is wide enough in pixels, pad a bit\n                            if (block_thick_start + 14 < block_thick_end) {\n                                block_thick_start += 2;\n                                block_thick_end -= 2;\n                            }\n                            ctx.fillRect(\n                                block_thick_start,\n                                y_start + 1,\n                                block_thick_end - block_thick_start,\n                                thick_height\n                            );\n                        }\n                    }\n                    // Draw individual connectors if required\n                    if (this.draw_individual_connectors && last_block_start) {\n                        this.draw_connector(ctx, last_block_start, last_block_end, block_start, block_end, y_start);\n                    }\n                    last_block_start = block_start;\n                    last_block_end = block_end;\n                }\n\n                // FIXME: Height scaling only works in Pack mode right now.\n                if (mode === \"Pack\") {\n                    // Reset alpha so height scaling is not impacted by alpha scaling.\n                    ctx.globalAlpha = 1;\n\n                    // Height scaling: draw white lines to reduce height according to height scale factor.\n                    ctx.fillStyle = \"white\"; // TODO: set this to background color.\n                    var hscale_factor = this.height_scaler.gen_val(feature);\n\n                    var // Ceil ensures that min height is >= 1.\n                    new_height = Math.ceil(thick_height * hscale_factor);\n\n                    var ws_height = Math.round((thick_height - new_height) / 2);\n                    if (hscale_factor !== 1) {\n                        ctx.fillRect(f_start, cur_y_start + 1, f_end - f_start, ws_height);\n                        ctx.fillRect(f_start, cur_y_start + thick_height - ws_height + 1, f_end - f_start, ws_height);\n                    }\n                }\n            }\n\n            // Reset alpha so that label is not transparent.\n            ctx.globalAlpha = 1;\n\n            // Draw label for Pack mode.\n            if (feature_name && mode === \"Pack\" && feature_start > tile_low) {\n                ctx.fillStyle = label_color;\n                // FIXME: assumption here that the entire view starts at 0\n                if (tile_low === 0 && f_start - ctx.measureText(feature_name).width < 0) {\n                    ctx.textAlign = \"left\";\n                    ctx.fillText(feature_name, f_end + LABEL_SPACING, y_start + 8, this.max_label_length);\n                    draw_end += ctx.measureText(feature_name).width + LABEL_SPACING;\n                } else {\n                    ctx.textAlign = \"right\";\n                    ctx.fillText(feature_name, f_start - LABEL_SPACING, y_start + 8, this.max_label_length);\n                    draw_start -= ctx.measureText(feature_name).width + LABEL_SPACING;\n                }\n                //ctx.fillStyle = block_color;\n            }\n        }\n\n        // Reset global alpha.\n        ctx.globalAlpha = 1;\n\n        return [draw_start, draw_end];\n    }\n});\n\nvar ReadPainter = function(\n    data,\n    view_start,\n    view_end,\n    prefs,\n    mode,\n    alpha_scaler,\n    height_scaler,\n    ref_seq,\n    base_color_fn\n) {\n    FeaturePainter.call(this, data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler);\n    this.ref_seq = ref_seq ? ref_seq.data : null;\n    this.base_color_fn = base_color_fn;\n};\n\n_.extend(ReadPainter.prototype, FeaturePainter.prototype, {\n    /**\n     * Returns height based on mode.\n     */\n    get_row_height: function() {\n        var height;\n        var mode = this.mode;\n        if (mode === \"Dense\") {\n            height = DENSE_TRACK_HEIGHT;\n        } else if (mode === \"Squish\") {\n            height = SQUISH_TRACK_HEIGHT;\n        } else {\n            // mode === \"Pack\"\n            height = PACK_TRACK_HEIGHT;\n            if (this.prefs.show_insertions) {\n                height *= 2;\n            }\n        }\n        return height;\n    },\n\n    /**\n     * Parse CIGAR string to get (a) a list of contiguous drawing blocks (MD=X) and\n     * (b) an array of [ op_index, op_len ] pairs where op_index is an index into the\n     * string 'MIDNSHP=X' Return value is a dictionary with two entries, blocks and cigar\n     */\n    _parse_cigar: function(cigar_str) {\n        var cigar_ops = \"MIDNSHP=X\";\n\n        // Parse cigar.\n        var blocks = [[0, 0]];\n\n        var cur_block = blocks[0];\n        var base_pos = 0;\n\n        var // Parse cigar operations out and update/create blocks as needed.\n        parsed_cigar = _.map(cigar_str.match(/[0-9]+[MIDNSHP=X]/g), op => {\n            // Get operation length, character.\n            var op_len = parseInt(op.slice(0, -1), 10),\n                op_char = op.slice(-1);\n\n            // Update drawing block.\n            if (op_char === \"N\") {\n                // At skip, so need to start new block if current block represents\n                // drawing area.\n                if (cur_block[1] !== 0) {\n                    cur_block = [base_pos + op_len, base_pos + op_len];\n                    blocks.push(cur_block);\n                }\n            } else if (\"ISHP\".indexOf(op_char) === -1) {\n                // Operation is M,D,=,X.\n                cur_block[1] += op_len;\n                base_pos += op_len;\n            }\n\n            // Return parsed cigar.\n            return [cigar_ops.indexOf(op_char), op_len];\n        });\n\n        return {\n            blocks: blocks,\n            cigar: parsed_cigar\n        };\n    },\n\n    /**\n     * Draw a single read from reference-based read sequence and cigar.\n     */\n    draw_read: function(ctx, mode, w_scale, y_start, tile_low, tile_high, feature_start, cigar, strand, read_seq) {\n        // Helper function to update base and sequnence offsets.\n        var update_base_offset = (offset, cig_op, cig_len) => {\n            if (\"M=NXD\".indexOf(cig_op) !== -1) {\n                offset += cig_len;\n            }\n            return offset;\n        };\n\n        var update_seq_offset = (offset, cig_op, cig_len) => {\n            if (\"IX\".indexOf(cig_op) !== -1) {\n                offset += cig_len;\n            }\n            return offset;\n        };\n\n        var // Gets drawing coordinate for a sequence coordinate. Assumes closure variables w_scale and tile_low.\n        get_draw_coord = (\n            sequence_coord // -0.5 to offset sequence between bases.\n        ) => Math.floor(Math.max(0, (sequence_coord - tile_low - 0.5) * w_scale));\n\n        ctx.textAlign = \"center\";\n        var tile_region = [tile_low, tile_high];\n        var base_offset = 0;\n        var seq_offset = 0;\n        var gap = Math.round(w_scale / 2);\n        var char_width_px = ctx.canvas.manager.char_width_px;\n\n        var block_color = strand === \"+\" ? this.prefs.detail_block_color : this.prefs.reverse_strand_color;\n\n        var pack_mode = mode === \"Pack\";\n\n        var draw_height = pack_mode ? PACK_FEATURE_HEIGHT : SQUISH_FEATURE_HEIGHT;\n\n        var rect_y = y_start + 1;\n        var paint_utils = new ReadPainterUtils(ctx, draw_height, w_scale, mode);\n        var drawing_blocks = [];\n        var s_start;\n        var s_end;\n\n        // Keep list of items that need to be drawn on top of initial drawing layer.\n        var draw_last = [];\n\n        // Parse cigar and get drawing blocks.\n        var t = this._parse_cigar(cigar);\n        cigar = t.cigar;\n        drawing_blocks = t.blocks;\n\n        // Draw blocks.\n        for (var i = 0; i < drawing_blocks.length; i++) {\n            var block = drawing_blocks[i];\n\n            if (is_overlap([feature_start + block[0], feature_start + block[1]], tile_region)) {\n                s_start = get_draw_coord(feature_start + block[0]);\n                s_end = get_draw_coord(feature_start + block[1]);\n\n                // Make sure that block is drawn even if it too small to be rendered officially; in this case,\n                // read is drawn at 1px.\n                // TODO: need to ensure that s_start, s_end are calculated the same for both slotting\n                // and drawing.\n                if (s_start === s_end) {\n                    s_end += 1;\n                }\n\n                // Draw read base as rectangle.\n                ctx.fillStyle = block_color;\n                ctx.fillRect(s_start, rect_y, s_end - s_start, draw_height);\n            }\n        }\n\n        // Draw read features.\n        for (var cig_id = 0, len = cigar.length; cig_id < len; cig_id++) {\n            var cig = cigar[cig_id];\n            var cig_op = \"MIDNSHP=X\"[cig[0]];\n            var cig_len = cig[1];\n\n            var seq_start = feature_start + base_offset;\n            s_start = get_draw_coord(seq_start);\n            s_end = get_draw_coord(seq_start + cig_len);\n\n            // Skip feature if it's not in tile.\n            if (!is_overlap([seq_start, seq_start + cig_len], tile_region)) {\n                // Update offsets.\n                base_offset = update_base_offset(base_offset, cig_op, cig_len);\n                seq_offset = update_seq_offset(seq_offset, cig_op, cig_len);\n                continue;\n            }\n\n            // Make sure that read is drawn even if it too small to be rendered officially; in this case,\n            // read is drawn at 1px.\n            // TODO: need to ensure that s_start, s_end are calculated the same for both slotting\n            // and drawing.\n            if (s_start === s_end) {\n                s_end += 1;\n            }\n\n            // Draw read feature.\n            switch (cig_op) {\n                case \"H\": // Hard clipping.\n                case \"S\": // Soft clipping.\n                case \"P\": // Padding.\n                    // Sequence not present and not related to alignment; do nothing.\n                    break;\n                case \"M\": // \"Match\".\n                    // Because it's not known whether there is a match, ignore.\n                    base_offset += cig_len;\n                    break;\n                case \"=\": // Match with reference.\n                case \"X\": // Mismatch with reference.\n                    //\n                    // Draw sequence and/or variants.\n                    //\n\n                    // Get sequence to draw.\n                    var cur_seq = \"\";\n                    if (cig_op === \"X\") {\n                        // Get sequence from read_seq.\n                        cur_seq = read_seq.slice(seq_offset, seq_offset + cig_len);\n                    } else if (this.ref_seq) {\n                        // && cig_op === '='\n                        // Use reference sequence.\n                        cur_seq = this.ref_seq.slice(\n                            // If read starts after tile start, slice at read start.\n                            Math.max(0, seq_start - tile_low),\n                            // If read ends before tile end, slice at read end.\n                            Math.min(seq_start - tile_low + cig_len, tile_high - tile_low)\n                        );\n                    }\n\n                    // Draw sequence. Because cur_seq starts and read/tile start, go to there to start writing.\n                    var start_pos = Math.max(seq_start, tile_low);\n                    for (var c = 0; c < cur_seq.length; c++) {\n                        // Draw base if showing all (i.e. not showing differences) or there is a mismatch.\n                        if ((cur_seq && !this.prefs.show_differences) || cig_op === \"X\") {\n                            // Draw base.\n                            var c_start = Math.floor(Math.max(0, (start_pos + c - tile_low) * w_scale));\n                            ctx.fillStyle = this.base_color_fn(cur_seq[c]);\n                            if (pack_mode && w_scale > char_width_px) {\n                                ctx.fillText(cur_seq[c], c_start, y_start + 9);\n                            } else if (w_scale > 0.05) {\n                                // Require a minimum w_scale so that variants are only drawn when somewhat zoomed in.\n                                ctx.fillRect(c_start - gap, rect_y, Math.max(1, Math.round(w_scale)), draw_height);\n                            }\n                        }\n                    }\n\n                    // Move forward in sequence only if sequence used to get mismatches.\n                    if (cig_op === \"X\") {\n                        seq_offset += cig_len;\n                    }\n                    base_offset += cig_len;\n\n                    break;\n                case \"N\": // Skipped bases.\n                    ctx.fillStyle = CONNECTOR_COLOR;\n                    ctx.fillRect(s_start, rect_y + (draw_height - 1) / 2, s_end - s_start, 1);\n                    // No change in seq_offset because sequence not used when skipping.\n                    base_offset += cig_len;\n                    break;\n                case \"D\": // Deletion.\n                    paint_utils.draw_deletion(s_start, rect_y, cig_len);\n                    base_offset += cig_len;\n                    break;\n                case \"I\": // Insertion.\n                    // Check to see if sequence should be drawn at all by looking at the overlap between\n                    // the sequence region and the tile region.\n                    var insert_x_coord = s_start - gap;\n\n                    if (is_overlap([seq_start, seq_start + cig_len], tile_region)) {\n                        var seq = read_seq.slice(seq_offset, seq_offset + cig_len);\n                        // Insertion point is between the sequence start and the previous base: (-gap) moves\n                        // back from sequence start to insertion point.\n                        if (this.prefs.show_insertions) {\n                            //\n                            // Show inserted sequence above, centered on insertion point.\n                            //\n\n                            // Draw sequence.\n                            // X center is offset + start - <half_sequence_length>\n                            var x_center = s_start - (s_end - s_start) / 2;\n                            if (\n                                (mode === \"Pack\" || this.mode === \"Auto\") &&\n                                read_seq !== undefined &&\n                                w_scale > char_width_px\n                            ) {\n                                // Draw sequence container.\n                                ctx.fillStyle = \"yellow\";\n                                ctx.fillRect(x_center - gap, y_start - 9, s_end - s_start, 9);\n                                draw_last[draw_last.length] = {\n                                    type: \"triangle\",\n                                    data: [insert_x_coord, y_start + 4, 5]\n                                };\n                                ctx.fillStyle = CONNECTOR_COLOR;\n                                // Based on overlap b/t sequence and tile, get sequence to be drawn.\n                                switch (compute_overlap([seq_start, seq_start + cig_len], tile_region)) {\n                                    case OVERLAP_START:\n                                        seq = seq.slice(tile_low - seq_start);\n                                        break;\n                                    case OVERLAP_END:\n                                        seq = seq.slice(0, seq_start - tile_high);\n                                        break;\n                                    case CONTAINED_BY:\n                                        // All of sequence drawn.\n                                        break;\n                                    case CONTAINS:\n                                        seq = seq.slice(tile_low - seq_start, seq_start - tile_high);\n                                        break;\n                                }\n                                // Draw sequence.\n                                for (var c = 0, str_len = seq.length; c < str_len; c++) {\n                                    var c_start = Math.floor(Math.max(0, (seq_start + c - tile_low) * w_scale));\n                                    ctx.fillText(seq[c], c_start - (s_end - s_start) / 2, y_start);\n                                }\n                            } else {\n                                // Draw block.\n                                ctx.fillStyle = \"yellow\";\n                                // TODO: This is a pretty hack-ish way to fill rectangle based on mode.\n                                ctx.fillRect(\n                                    x_center,\n                                    y_start + (this.mode !== \"Dense\" ? 2 : 5),\n                                    s_end - s_start,\n                                    mode !== \"Dense\" ? SQUISH_FEATURE_HEIGHT : DENSE_FEATURE_HEIGHT\n                                );\n                            }\n                        } else {\n                            if (\n                                (mode === \"Pack\" || this.mode === \"Auto\") &&\n                                read_seq !== undefined &&\n                                w_scale > char_width_px\n                            ) {\n                                // Show insertions with a single number at the insertion point.\n                                draw_last.push({\n                                    type: \"text\",\n                                    data: [seq.length, insert_x_coord, y_start + 9]\n                                });\n                            } else {\n                                // TODO: probably can merge this case with code above.\n                            }\n                        }\n                    }\n                    seq_offset += cig_len;\n                    // No change to base offset because insertions are drawn above sequence/read.\n                    break;\n            }\n        }\n\n        //\n        // Draw last items.\n        //\n        ctx.fillStyle = \"yellow\";\n        var item;\n        var type;\n        var data;\n        for (var i = 0; i < draw_last.length; i++) {\n            item = draw_last[i];\n            type = item.type;\n            data = item.data;\n            if (type === \"text\") {\n                ctx.save();\n                ctx.font = `bold ${ctx.font}`;\n                ctx.fillText(data[0], data[1], data[2]);\n                ctx.restore();\n            } else if (type === \"triangle\") {\n                drawDownwardEquilateralTriangle(ctx, data[0], data[1], data[2]);\n            }\n        }\n    },\n\n    /**\n     * Draw a complete read pair\n     */\n    draw_element: function(ctx, mode, feature, slot, tile_low, tile_high, w_scale, y_scale, width) {\n        // All features need a start, end, and vertical center.\n        var feature_uid = feature[0];\n\n        var feature_start = feature[1];\n        var feature_end = feature[2];\n        var feature_name = feature[3];\n\n        var // -0.5 to put element between bases.\n        f_start = Math.floor(Math.max(-0.5 * w_scale, (feature_start - tile_low - 0.5) * w_scale));\n\n        var f_end = Math.ceil(Math.min(width, Math.max(0, (feature_end - tile_low - 0.5) * w_scale)));\n\n        var y_start = (mode === \"Dense\" ? 0 : 0 + slot) * y_scale;\n\n        var draw_height = mode === \"Pack\" ? PACK_FEATURE_HEIGHT : SQUISH_FEATURE_HEIGHT;\n\n        var label_color = this.prefs.label_color;\n\n        // Draw read.\n        if (feature[5] instanceof Array) {\n            // Read is paired.\n            var connector = true;\n\n            // Draw left/forward read.\n            if (feature[4][1] >= tile_low && feature[4][0] <= tile_high && feature[4][2]) {\n                this.draw_read(\n                    ctx,\n                    mode,\n                    w_scale,\n                    y_start,\n                    tile_low,\n                    tile_high,\n                    feature[4][0],\n                    feature[4][2],\n                    feature[4][3],\n                    feature[4][4]\n                );\n            } else {\n                connector = false;\n            }\n\n            // Draw right/reverse read.\n            if (feature[5][1] >= tile_low && feature[5][0] <= tile_high && feature[5][2]) {\n                this.draw_read(\n                    ctx,\n                    mode,\n                    w_scale,\n                    y_start,\n                    tile_low,\n                    tile_high,\n                    feature[5][0],\n                    feature[5][2],\n                    feature[5][3],\n                    feature[5][4]\n                );\n            } else {\n                connector = false;\n            }\n\n            // Draw connector if both reads were drawn.\n            // TODO: currently, there is no way to connect reads drawn on different tiles; to connect reads on different tiles, data manager\n            // code is needed to join mate pairs from different regions. Alternatively, requesting multiple regions of data at once would\n            // make it possible to put together more easily.\n            // -0.5 to position connector correctly between reads.\n            var b1_end = Math.ceil(\n                Math.min(width, Math.max(-0.5 * w_scale, (feature[4][1] - tile_low - 0.5) * w_scale))\n            );\n\n            var b2_start = Math.floor(Math.max(-0.5 * w_scale, (feature[5][0] - tile_low - 0.5) * w_scale));\n\n            if (connector && b2_start > b1_end) {\n                ctx.fillStyle = CONNECTOR_COLOR;\n                var line_height = y_start + 1 + (draw_height - 1) / 2;\n                dashedLine(ctx, b1_end, line_height, b2_start, line_height);\n            }\n        } else {\n            // Read is single.\n            this.draw_read(\n                ctx,\n                mode,\n                w_scale,\n                y_start,\n                tile_low,\n                tile_high,\n                feature_start,\n                feature[4],\n                feature[5],\n                feature[6]\n            );\n        }\n        if (mode === \"Pack\" && feature_start >= tile_low && feature_name !== \".\") {\n            // Draw label.\n            ctx.fillStyle = this.prefs.label_color;\n            if (tile_low === 0 && f_start - ctx.measureText(feature_name).width < 0) {\n                ctx.textAlign = \"left\";\n                ctx.fillText(feature_name, f_end + LABEL_SPACING, y_start + 9, this.max_label_length);\n            } else {\n                ctx.textAlign = \"right\";\n                ctx.fillText(feature_name, f_start - LABEL_SPACING, y_start + 9, this.max_label_length);\n            }\n        }\n\n        // FIXME: provide actual coordinates for drawn read.\n        return [0, 0];\n    }\n});\n\nvar ArcLinkedFeaturePainter = function(data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler) {\n    LinkedFeaturePainter.call(this, data, view_start, view_end, prefs, mode, alpha_scaler, height_scaler);\n    // Need to know the longest feature length for adding spacing\n    this.longest_feature_length = this.calculate_longest_feature_length();\n    this.draw_background_connector = false;\n    this.draw_individual_connectors = true;\n};\n\n_.extend(ArcLinkedFeaturePainter.prototype, FeaturePainter.prototype, LinkedFeaturePainter.prototype, {\n    calculate_longest_feature_length: function() {\n        var longest_feature_length = 0;\n        for (var i = 0, len = this.data.length; i < len; i++) {\n            var feature = this.data[i];\n            var feature_start = feature[1];\n            var feature_end = feature[2];\n            longest_feature_length = Math.max(longest_feature_length, feature_end - feature_start);\n        }\n        return longest_feature_length;\n    },\n\n    get_top_padding: function(width) {\n        var view_range = this.view_end - this.view_start;\n        var w_scale = width / view_range;\n        return Math.min(128, Math.ceil(this.longest_feature_length / 2 * w_scale));\n    },\n\n    draw_connector: function(ctx, block1_start, block1_end, block2_start, block2_end, y_start) {\n        // Arc drawing -- from closest endpoints\n        var x_center = (block1_end + block2_start) / 2;\n\n        var radius = block2_start - x_center;\n\n        // For full half circles\n        var angle1 = Math.PI;\n\n        var angle2 = 0;\n        if (radius > 0) {\n            ctx.beginPath();\n            ctx.arc(x_center, y_start, block2_start - x_center, Math.PI, 0);\n            ctx.stroke();\n        }\n    }\n});\n\n// Color stuff from less.js\n\nvar Color = function(rgb, a) {\n    /**\n     * The end goal here, is to parse the arguments\n     * into an integer triplet, such as `128, 255, 0`\n     *\n     * This facilitates operations and conversions.\n     */\n    if (Array.isArray(rgb)) {\n        this.rgb = rgb;\n    } else if (rgb.length == 6) {\n        this.rgb = rgb.match(/.{2}/g).map(c => parseInt(c, 16));\n    } else if (rgb.length == 7) {\n        this.rgb = rgb\n            .substring(1, 7)\n            .match(/.{2}/g)\n            .map(c => parseInt(c, 16));\n    } else {\n        this.rgb = rgb.split(\"\").map(c => parseInt(c + c, 16));\n    }\n    this.alpha = typeof a === \"number\" ? a : 1;\n};\nColor.prototype = {\n    eval: function() {\n        return this;\n    },\n\n    //\n    // If we have some transparency, the only way to represent it\n    // is via `rgba`. Otherwise, we use the hex representation,\n    // which has better compatibility with older browsers.\n    // Values are capped between `0` and `255`, rounded and zero-padded.\n    //\n    toCSS: function() {\n        if (this.alpha < 1.0) {\n            return `rgba(${this.rgb\n                .map(c => Math.round(c))\n                .concat(this.alpha)\n                .join(\", \")})`;\n        } else {\n            return `#${this.rgb\n                .map(i => {\n                    i = Math.round(i);\n                    i = (i > 255 ? 255 : i < 0 ? 0 : i).toString(16);\n                    return i.length === 1 ? `0${i}` : i;\n                })\n                .join(\"\")}`;\n        }\n    },\n\n    toHSL: function() {\n        var r = this.rgb[0] / 255;\n        var g = this.rgb[1] / 255;\n        var b = this.rgb[2] / 255;\n        var a = this.alpha;\n        var max = Math.max(r, g, b);\n        var min = Math.min(r, g, b);\n        var h;\n        var s;\n        var l = (max + min) / 2;\n        var d = max - min;\n\n        if (max === min) {\n            h = s = 0;\n        } else {\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                    h = (r - g) / d + 4;\n                    break;\n            }\n            h /= 6;\n        }\n        return { h: h * 360, s: s, l: l, a: a };\n    },\n\n    toARGB: function() {\n        var argb = [Math.round(this.alpha * 255)].concat(this.rgb);\n        return `#${argb\n            .map(i => {\n                i = Math.round(i);\n                i = (i > 255 ? 255 : i < 0 ? 0 : i).toString(16);\n                return i.length === 1 ? `0${i}` : i;\n            })\n            .join(\"\")}`;\n    },\n\n    mix: function(color2, weight) {\n        var color1 = this;\n\n        var p = weight; // .value / 100.0;\n        var w = p * 2 - 1;\n        var a = color1.toHSL().a - color2.toHSL().a;\n\n        var w1 = ((w * a == -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        var w2 = 1 - w1;\n\n        var rgb = [\n            color1.rgb[0] * w1 + color2.rgb[0] * w2,\n            color1.rgb[1] * w1 + color2.rgb[1] * w2,\n            color1.rgb[2] * w1 + color2.rgb[2] * w2\n        ];\n\n        var alpha = color1.alpha * p + color2.alpha * (1 - p);\n\n        return new Color(rgb, alpha);\n    }\n};\n\n// End colors from less.js\n\nvar LinearRamp = function(start_color, end_color, start_value, end_value) {\n    /**\n     * Simple linear gradient\n     */\n    this.start_color = new Color(start_color);\n    this.end_color = new Color(end_color);\n    this.start_value = start_value;\n    this.end_value = end_value;\n    this.value_range = end_value - start_value;\n};\n\nLinearRamp.prototype.map_value = function(value) {\n    value = Math.max(value, this.start_value);\n    value = Math.min(value, this.end_value);\n    value = (value - this.start_value) / this.value_range;\n    // HACK: just red for now\n    // return \"hsl(0,100%,\" + (value * 100) + \"%)\"\n    return this.start_color.mix(this.end_color, 1 - value).toCSS();\n};\n\nvar SplitRamp = function(start_color, middle_color, end_color, start_value, end_value) {\n    /**\n     * Two gradients split away from 0\n     */\n    this.positive_ramp = new LinearRamp(middle_color, end_color, 0, end_value);\n    this.negative_ramp = new LinearRamp(middle_color, start_color, 0, -start_value);\n    this.start_value = start_value;\n    this.end_value = end_value;\n};\n\nSplitRamp.prototype.map_value = function(value) {\n    value = Math.max(value, this.start_value);\n    value = Math.min(value, this.end_value);\n    if (value >= 0) {\n        return this.positive_ramp.map_value(value);\n    } else {\n        return this.negative_ramp.map_value(-value);\n    }\n};\n\nvar DiagonalHeatmapPainter = function(data, view_start, view_end, prefs, mode) {\n    Painter.call(this, data, view_start, view_end, prefs, mode);\n    var i;\n    var len;\n\n    if (this.prefs.min_value === undefined) {\n        var min_value = Infinity;\n        for (i = 0, len = this.data.length; i < len; i++) {\n            min_value = Math.min(min_value, this.data[i][6]);\n        }\n        this.prefs.min_value = min_value;\n    }\n    if (this.prefs.max_value === undefined) {\n        var max_value = -Infinity;\n        for (i = 0, len = this.data.length; i < len; i++) {\n            max_value = Math.max(max_value, this.data[i][6]);\n        }\n        this.prefs.max_value = max_value;\n    }\n};\n\nDiagonalHeatmapPainter.prototype.default_prefs = {\n    min_value: undefined,\n    max_value: undefined,\n    mode: \"Heatmap\",\n    pos_color: \"#FF8C00\",\n    neg_color: \"#4169E1\"\n};\n\nDiagonalHeatmapPainter.prototype.draw = function(ctx, width, height, w_scale) {\n    var min_value = this.prefs.min_value;\n    var max_value = this.prefs.max_value;\n    var value_range = max_value - min_value;\n    var height_px = height;\n    var view_start = this.view_start;\n    var mode = this.mode;\n    var data = this.data;\n    var invsqrt2 = 1 / Math.sqrt(2);\n\n    var ramp = new SplitRamp(this.prefs.neg_color, \"#FFFFFF\", this.prefs.pos_color, min_value, max_value);\n\n    var d;\n    var s1;\n    var e1;\n    var s2;\n    var e2;\n    var value;\n\n    var scale = p => (p - view_start) * w_scale;\n\n    ctx.save();\n\n    // Draw into triangle, then rotate and scale\n    ctx.rotate(-45 * Math.PI / 180);\n    ctx.scale(invsqrt2, invsqrt2);\n\n    // Paint track.\n    for (var i = 0, len = data.length; i < len; i++) {\n        d = data[i];\n\n        s1 = scale(d[1]);\n        e1 = scale(d[2]);\n        s2 = scale(d[4]);\n        e2 = scale(d[5]);\n        value = d[6];\n\n        ctx.fillStyle = ramp.map_value(value);\n        ctx.fillRect(s1, s2, e1 - s1, e2 - s2);\n    }\n\n    ctx.restore();\n};\n\n/**\n * Utilities for painting reads.\n */\nvar ReadPainterUtils = function(ctx, row_height, px_per_base, mode) {\n    this.ctx = ctx;\n    this.row_height = row_height;\n    this.px_per_base = px_per_base;\n    this.draw_details = (mode === \"Pack\" || mode === \"Auto\") && px_per_base >= ctx.canvas.manager.char_width_px;\n    this.delete_details_thickness = 0.2;\n};\n\n_.extend(ReadPainterUtils.prototype, {\n    /**\n     * Draw deletion of base(s).\n     * @param draw_detail if true, drawing in detail and deletion is drawn more subtly\n     */\n    draw_deletion: function(x, y, len) {\n        this.ctx.fillStyle = \"black\";\n        var thickness = (this.draw_details ? this.delete_details_thickness : 1) * this.row_height;\n        y += 0.5 * (this.row_height - thickness);\n        this.ctx.fillRect(x, y, len * this.px_per_base, thickness);\n    }\n});\n\n/**\n * Paints variant data onto canvas.\n */\nvar VariantPainter = function(data, view_start, view_end, prefs, mode, base_color_fn) {\n    Painter.call(this, data, view_start, view_end, prefs, mode);\n    this.base_color_fn = base_color_fn;\n    this.divider_height = 1;\n};\n\n_.extend(VariantPainter.prototype, Painter.prototype, {\n    /**\n     * Height of a single row, depends on mode\n     */\n    get_row_height: function() {\n        var mode = this.mode;\n        var height;\n        if (mode === \"Dense\") {\n            height = DENSE_TRACK_HEIGHT;\n        } else if (mode === \"Squish\") {\n            height = SQUISH_TRACK_HEIGHT;\n        } else {\n            // mode === \"Pack\"\n            height = PACK_TRACK_HEIGHT;\n        }\n        return height;\n    },\n\n    /**\n     * Returns required height to draw a particular number of samples in a given mode.\n     */\n    get_required_height: function(num_samples) {\n        // FIXME: for single-sample data, height should be summary_height when zoomed out and\n        // row_height when zoomed in.\n        var height = this.prefs.summary_height;\n\n        // If showing sample data, height is summary + divider + samples.\n        if (num_samples > 1 && this.prefs.show_sample_data) {\n            height += this.divider_height + num_samples * this.get_row_height();\n        }\n        return height;\n    },\n\n    /**\n     * Draw on the context using a rectangle of width x height with scale w_scale.\n     */\n    draw: function(ctx, width, height, w_scale) {\n        ctx.save();\n\n        var /**\n         * Returns dictionary of information about an indel; returns empty if there no indel. Assumes indel is left-aligned.\n         * Dict attributes:\n         *    -type: 'insertion' or 'deletion'\n         *    -start: where the deletion starts relative to reference start\n         *    -len: how long the deletion is\n         */\n        get_indel_info = (ref, alt) => {\n            var ref_len = ref.length;\n            var alt_len = alt.length;\n            var start = 0;\n            var len = 1;\n            var type = null;\n            if (alt === \"-\") {\n                type = \"deletion\";\n                len = ref.length;\n            } else if (ref.indexOf(alt) === 0 && ref_len > alt_len) {\n                type = \"deletion\";\n                len = ref_len - alt_len;\n                start = alt_len;\n            } else if (alt.indexOf(ref) === 0 && ref_len < alt_len) {\n                // Insertion.\n                type = \"insertion\";\n                len = alt_len - ref_len;\n                start = alt_len;\n            }\n\n            return type !== null ? { type: type, start: start, len: len } : {};\n        };\n\n        // Draw.\n        var locus_data;\n\n        var pos;\n        var id;\n        var ref;\n        var alt;\n        var qual;\n        var filter;\n        var sample_gts;\n        var allele_counts;\n        var variant;\n        var draw_x_start;\n        var draw_y_start;\n        var genotype;\n\n        var // Always draw variants at least 1 pixel wide.\n        base_px = Math.max(1, Math.floor(w_scale));\n\n        var // Determine number of samples.\n        num_samples = this.data.length ? this.data[0][7].split(\",\").length : 0;\n\n        var row_height = this.mode === \"Squish\" ? SQUISH_TRACK_HEIGHT : PACK_TRACK_HEIGHT;\n\n        var // If zoomed out, fill the whole row with feature to make it easier to read;\n        // when zoomed in, use feature height so that there are gaps in sample rows.\n        feature_height =\n            w_scale < 0.1 ? row_height : this.mode === \"Squish\" ? SQUISH_FEATURE_HEIGHT : PACK_FEATURE_HEIGHT;\n\n        var draw_summary = true;\n\n        var paint_utils = new ReadPainterUtils(ctx, row_height, w_scale, this.mode);\n\n        var j;\n\n        // If there's a single sample, update drawing variables.\n        if (num_samples === 1) {\n            row_height = feature_height =\n                w_scale < ctx.canvas.manager.char_width_px ? this.prefs.summary_height : row_height;\n            paint_utils.row_height = row_height;\n            // No summary when there's a single sample.\n            draw_summary = false;\n        }\n\n        // Draw divider between summary and samples.\n        if (this.prefs.show_sample_data && draw_summary) {\n            ctx.fillStyle = \"#F3F3F3\";\n            ctx.globalAlpha = 1;\n            ctx.fillRect(0, this.prefs.summary_height - this.divider_height, width, this.divider_height);\n        }\n\n        // Draw variants.\n        ctx.textAlign = \"center\";\n        for (var i = 0; i < this.data.length; i++) {\n            // Get locus data.\n            locus_data = this.data[i];\n            pos = locus_data[1];\n            ref = locus_data[3];\n            alt = [locus_data[4].split(\",\")];\n            sample_gts = locus_data[7].split(\",\");\n            allele_counts = locus_data.slice(8);\n\n            // Process alterate values to derive information about each alt.\n            alt = _.map(_.flatten(alt), a => {\n                var alt_info = {\n                    type: \"snp\",\n                    value: a,\n                    start: 0\n                };\n\n                var indel_info = get_indel_info(ref, a);\n\n                return _.extend(alt_info, indel_info);\n            });\n\n            // Only draw locus data if it's in viewing region.\n            if (pos < this.view_start || pos > this.view_end) {\n                continue;\n            }\n\n            // Draw summary for alleles.\n            if (draw_summary) {\n                ctx.fillStyle = \"#999999\";\n                ctx.globalAlpha = 1;\n                for (j = 0; j < alt.length; j++) {\n                    // Draw background for summary.\n                    draw_x_start = this.get_start_draw_pos(pos + alt[j].start, w_scale);\n                    ctx.fillRect(draw_x_start, 0, base_px, this.prefs.summary_height);\n                    draw_y_start = this.prefs.summary_height;\n                    // Draw allele fractions onto summary.\n                    for (j = 0; j < alt.length; j++) {\n                        ctx.fillStyle = alt[j].type === \"deletion\" ? \"black\" : this.base_color_fn(alt[j].value);\n                        var allele_frac = allele_counts / sample_gts.length;\n                        var draw_height = Math.ceil(this.prefs.summary_height * allele_frac);\n                        ctx.fillRect(draw_x_start, draw_y_start - draw_height, base_px, draw_height);\n                        draw_y_start -= draw_height;\n                    }\n                }\n            }\n\n            // Done drawing if not showing samples data.\n            if (!this.prefs.show_sample_data) {\n                continue;\n            }\n\n            // Draw sample genotype(s).\n            draw_y_start = draw_summary ? this.prefs.summary_height + this.divider_height : 0;\n            for (j = 0; j < sample_gts.length; j++, draw_y_start += row_height) {\n                genotype = sample_gts[j] ? sample_gts[j].split(/\\/|\\|/) : [\"0\", \"0\"];\n\n                // Get variant to draw and set drawing properties.\n                variant = null;\n                if (genotype[0] === genotype[1]) {\n                    if (genotype[0] === \".\") {\n                        // TODO: draw uncalled variant.\n                    } else if (genotype[0] !== \"0\") {\n                        // Homozygous for variant.\n                        variant = alt[parseInt(genotype[0], 10) - 1];\n                        ctx.globalAlpha = 1;\n                    }\n                    // else reference\n                } else {\n                    // Heterozygous for variant.\n                    variant = genotype[0] !== \"0\" ? genotype[0] : genotype[1];\n                    variant = alt[parseInt(variant, 10) - 1];\n                    ctx.globalAlpha = 0.5;\n                }\n\n                // If there's a variant, draw it.\n                if (variant) {\n                    draw_x_start = this.get_start_draw_pos(pos + variant.start, w_scale);\n                    if (variant.type === \"snp\") {\n                        var snp = variant.value;\n                        ctx.fillStyle = this.base_color_fn(snp);\n                        if (paint_utils.draw_details) {\n                            ctx.fillText(snp, this.get_draw_pos(pos, w_scale), draw_y_start + row_height);\n                        } else {\n                            ctx.fillRect(draw_x_start, draw_y_start + 1, base_px, feature_height);\n                        }\n                    } else if (variant.type === \"deletion\") {\n                        paint_utils.draw_deletion(draw_x_start, draw_y_start + 1, variant.len);\n                    } else {\n                        // TODO: handle insertions.\n                    }\n                }\n            }\n        }\n\n        ctx.restore();\n    }\n});\n\nexport default {\n    Scaler: Scaler,\n    LinePainter: LinePainter,\n    LinkedFeaturePainter: LinkedFeaturePainter,\n    ReadPainter: ReadPainter,\n    ArcLinkedFeaturePainter: ArcLinkedFeaturePainter,\n    DiagonalHeatmapPainter: DiagonalHeatmapPainter,\n    VariantPainter: VariantPainter\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/viz/trackster/painters.js","import * as _ from \"libs/underscore\";\nvar extend = _.extend;\n\n/**\n * Filters that enable users to show/hide data points dynamically.\n */\nvar Filter = function(obj_dict) {\n    this.manager = null;\n    this.name = obj_dict.name;\n    // Index into payload to filter.\n    this.index = obj_dict.index;\n    this.tool_id = obj_dict.tool_id;\n    // Name to use for filter when building expression for tool.\n    this.tool_exp_name = obj_dict.tool_exp_name;\n};\n\nextend(Filter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        return {\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        };\n    }\n});\n\n/**\n * Creates an action icon.\n */\nvar create_action_icon = (title, css_class, on_click_fn) =>\n    $(\"<a/>\")\n        .attr(\"href\", \"javascript:void(0);\")\n        .attr(\"title\", title)\n        .addClass(\"icon-button\")\n        .addClass(css_class)\n        .tooltip()\n        .click(on_click_fn);\n\n/**\n * Number filters have a min, max as well as a low, high; low and high are used\n */\nvar NumberFilter = function(obj_dict) {\n    //\n    // Attribute init.\n    //\n    Filter.call(this, obj_dict);\n    // Filter low/high. These values are used to filter elements.\n    this.low = \"low\" in obj_dict ? obj_dict.low : -Number.MAX_VALUE;\n    this.high = \"high\" in obj_dict ? obj_dict.high : Number.MAX_VALUE;\n    // Slide min/max. These values are used to set/update slider.\n    this.min = \"min\" in obj_dict ? obj_dict.min : Number.MAX_VALUE;\n    this.max = \"max\" in obj_dict ? obj_dict.max : -Number.MAX_VALUE;\n    // UI elements associated with filter.\n    this.container = null;\n    this.slider = null;\n    this.slider_label = null;\n\n    //\n    // Create HTML.\n    //\n\n    // Function that supports inline text editing of slider values.\n    // Enable users to edit parameter's value via a text box.\n    var edit_slider_values = (container, span, slider) => {\n        container.click(function() {\n            var cur_value = span.text();\n            var max = parseFloat(slider.slider(\"option\", \"max\"));\n\n            var input_size = max <= 1 ? 4 : max <= 1000000 ? max.toString().length : 6;\n\n            var multi_value = false;\n            var slider_row = $(this).parents(\".slider-row\");\n\n            // Row now has input.\n            slider_row.addClass(\"input\");\n\n            // Increase input size if there are two values.\n            if (slider.slider(\"option\", \"values\")) {\n                input_size = 2 * input_size + 1;\n                multi_value = true;\n            }\n            span.text(\"\");\n            // Temporary input for changing value.\n            $(\"<input type='text'/>\")\n                .attr(\"size\", input_size)\n                .attr(\"maxlength\", input_size)\n                .attr(\"value\", cur_value)\n                .appendTo(span)\n                .focus()\n                .select()\n                .click(e => {\n                    // Don't want click to propogate up to values_span and restart everything.\n                    e.stopPropagation();\n                })\n                .blur(function() {\n                    $(this).remove();\n                    span.text(cur_value);\n                    slider_row.removeClass(\"input\");\n                })\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        $(this).trigger(\"blur\");\n                    } else if (e.keyCode === 13) {\n                        //\n                        // Enter/return key initiates callback. If new value(s) are in slider range,\n                        // change value (which calls slider's change() function).\n                        //\n                        var slider_min = slider.slider(\"option\", \"min\");\n\n                        var slider_max = slider.slider(\"option\", \"max\");\n\n                        var invalid = a_val => isNaN(a_val) || a_val > slider_max || a_val < slider_min;\n\n                        var new_value = $(this).val();\n                        if (!multi_value) {\n                            new_value = parseFloat(new_value);\n                            if (invalid(new_value)) {\n                                alert(`Parameter value must be in the range [${slider_min}-${slider_max}]`);\n                                return $(this);\n                            }\n                        } else {\n                            // Multi value.\n                            new_value = new_value.split(\"-\");\n                            new_value = [parseFloat(new_value[0]), parseFloat(new_value[1])];\n                            if (invalid(new_value[0]) || invalid(new_value[1])) {\n                                alert(`Parameter value must be in the range [${slider_min}-${slider_max}]`);\n                                return $(this);\n                            }\n                        }\n\n                        // Updating the slider also updates slider values and removes input.\n                        slider.slider(multi_value ? \"values\" : \"value\", new_value);\n                        slider_row.removeClass(\"input\");\n                    }\n                });\n        });\n    };\n\n    var filter = this;\n\n    filter.parent_div = $(\"<div/>\").addClass(\"filter-row slider-row\");\n\n    // Set up filter label (name, values).\n    var filter_label = $(\"<div/>\")\n        .addClass(\"elt-label\")\n        .appendTo(filter.parent_div);\n\n    var name_span = $(\"<span/>\")\n        .addClass(\"slider-name\")\n        .text(`${filter.name}  `)\n        .appendTo(filter_label);\n\n    var values_span = $(\"<span/>\").text(`${this.low}-${this.high}`);\n\n    var values_span_container = $(\"<span/>\")\n        .addClass(\"slider-value\")\n        .appendTo(filter_label)\n        .append(\"[\")\n        .append(values_span)\n        .append(\"]\");\n\n    filter.values_span = values_span;\n\n    // Set up slider for filter.\n    var slider_div = $(\"<div/>\")\n        .addClass(\"slider\")\n        .appendTo(filter.parent_div);\n    filter.control_element = $(\"<div/>\")\n        .attr(\"id\", `${filter.name}-filter-control`)\n        .appendTo(slider_div);\n    filter.control_element.slider({\n        range: true,\n        min: this.min,\n        max: this.max,\n        step: this.get_slider_step(this.min, this.max),\n        values: [this.low, this.high],\n        slide: function(event, ui) {\n            filter.slide(event, ui);\n        },\n        change: function(event, ui) {\n            filter.control_element.slider(\"option\", \"slide\").call(filter.control_element, event, ui);\n        }\n    });\n    filter.slider = filter.control_element;\n    filter.slider_label = values_span;\n\n    // Enable users to edit slider values via text box.\n    edit_slider_values(values_span_container, values_span, filter.control_element);\n\n    // Set up filter display controls.\n    var display_controls_div = $(\"<div/>\")\n        .addClass(\"display-controls\")\n        .appendTo(filter.parent_div);\n    this.transparency_icon = create_action_icon(\"Use filter for data transparency\", \"layer-transparent\", () => {\n        if (filter.manager.alpha_filter !== filter) {\n            // Setting this filter as the alpha filter.\n            filter.manager.alpha_filter = filter;\n            // Update UI for new filter.\n            filter.manager.parent_div\n                .find(\".layer-transparent\")\n                .removeClass(\"active\")\n                .hide();\n            filter.transparency_icon.addClass(\"active\").show();\n        } else {\n            // Clearing filter as alpha filter.\n            filter.manager.alpha_filter = null;\n            filter.transparency_icon.removeClass(\"active\");\n        }\n        filter.manager.track.request_draw({\n            force: true,\n            clear_after: true\n        });\n    })\n        .appendTo(display_controls_div)\n        .hide();\n    this.height_icon = create_action_icon(\"Use filter for data height\", \"arrow-resize-090\", () => {\n        if (filter.manager.height_filter !== filter) {\n            // Setting this filter as the height filter.\n            filter.manager.height_filter = filter;\n            // Update UI for new filter.\n            filter.manager.parent_div\n                .find(\".arrow-resize-090\")\n                .removeClass(\"active\")\n                .hide();\n            filter.height_icon.addClass(\"active\").show();\n        } else {\n            // Clearing filter as alpha filter.\n            filter.manager.height_filter = null;\n            filter.height_icon.removeClass(\"active\");\n        }\n        filter.manager.track.request_draw({\n            force: true,\n            clear_after: true\n        });\n    })\n        .appendTo(display_controls_div)\n        .hide();\n    filter.parent_div.hover(\n        () => {\n            filter.transparency_icon.show();\n            filter.height_icon.show();\n        },\n        () => {\n            if (filter.manager.alpha_filter !== filter) {\n                filter.transparency_icon.hide();\n            }\n            if (filter.manager.height_filter !== filter) {\n                filter.height_icon.hide();\n            }\n        }\n    );\n\n    // Add to clear floating layout.\n    $(\"<div style='clear: both;'/>\").appendTo(filter.parent_div);\n};\nextend(NumberFilter.prototype, {\n    /**\n     * Convert filter to dictionary.\n     */\n    to_dict: function() {\n        var obj_dict = Filter.prototype.to_dict.call(this);\n        return extend(obj_dict, {\n            type: \"number\",\n            min: this.min,\n            max: this.max,\n            low: this.low,\n            high: this.high\n        });\n    },\n    /**\n     * Return a copy of filter.\n     */\n    copy: function() {\n        return new NumberFilter({\n            name: this.name,\n            index: this.index,\n            tool_id: this.tool_id,\n            tool_exp_name: this.tool_exp_name\n        });\n    },\n    /**\n     * Get step for slider.\n     */\n    // FIXME: make this a \"static\" function.\n    get_slider_step: function(min, max) {\n        var range = max - min;\n        return range <= 2 ? 0.01 : 1;\n    },\n    /**\n     * Handle slide events.\n     */\n    slide: function(event, ui) {\n        var values = ui.values;\n\n        // Set new values in UI.\n        this.values_span.text(`${values[0]}-${values[1]}`);\n\n        // Set new values in filter.\n        this.low = values[0];\n        this.high = values[1];\n\n        // Set timeout to update if filter low, high are stable.\n        var self = this;\n        setTimeout(() => {\n            if (values[0] === self.low && values[1] === self.high) {\n                self.manager.track.request_draw({\n                    force: true,\n                    clear_after: true\n                });\n            }\n        }, 25);\n    },\n    /**\n     * Returns true if filter can be applied to element.\n     */\n    applies_to: function(element) {\n        if (element.length > this.index) {\n            return true;\n        }\n        return false;\n    },\n    /**\n     * Helper function: returns true if value in in filter's [low, high] range.\n     */\n    _keep_val: function(val) {\n        return isNaN(val) || (val >= this.low && val <= this.high);\n    },\n    /**\n     * Returns true if (a) element's value(s) is in [low, high] (range is inclusive)\n     * or (b) if value is non-numeric and hence unfilterable.\n     */\n    keep: function(element) {\n        if (!this.applies_to(element)) {\n            // No element to filter on.\n            return true;\n        }\n\n        // Keep value function.\n        var filter = this;\n\n        // Do filtering.\n        var to_filter = element[this.index];\n        if (to_filter instanceof Array) {\n            var returnVal = true;\n            for (var i = 0; i < to_filter.length; i++) {\n                if (!this._keep_val(to_filter[i])) {\n                    // Exclude element.\n                    returnVal = false;\n                    break;\n                }\n            }\n            return returnVal;\n        } else {\n            return this._keep_val(element[this.index]);\n        }\n    },\n    /**\n     * Update filter's min and max values based on element's values.\n     */\n    update_attrs: function(element) {\n        var updated = false;\n        if (!this.applies_to(element)) {\n            return updated;\n        }\n\n        //\n        // Update filter's min, max based on element values.\n        //\n\n        // Make value(s) into an Array.\n        var values = element[this.index];\n        if (!(values instanceof Array)) {\n            values = [values];\n        }\n\n        // Loop through values and update min, max.\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            if (value < this.min) {\n                this.min = Math.floor(value);\n                updated = true;\n            }\n            if (value > this.max) {\n                this.max = Math.ceil(value);\n                updated = true;\n            }\n        }\n        return updated;\n    },\n    /**\n     * Update filter's slider.\n     */\n    update_ui_elt: function() {\n        // Only show filter if min < max because filter is not useful otherwise. This\n        // covers all corner cases, such as when min, max have not been defined and\n        // when min == max.\n        if (this.min < this.max) {\n            this.parent_div.show();\n        } else {\n            this.parent_div.hide();\n        }\n\n        var slider_min = this.slider.slider(\"option\", \"min\");\n        var slider_max = this.slider.slider(\"option\", \"max\");\n        if (this.min < slider_min || this.max > slider_max) {\n            // Update slider min, max, step.\n            this.slider.slider(\"option\", \"min\", this.min);\n            this.slider.slider(\"option\", \"max\", this.max);\n            this.slider.slider(\"option\", \"step\", this.get_slider_step(this.min, this.max));\n            // Refresh slider:\n            // TODO: do we want to keep current values or reset to min/max?\n            // Currently we reset values:\n            this.slider.slider(\"option\", \"values\", [this.min, this.max]);\n            // To use the current values.\n            //var values = this.slider.slider( \"option\", \"values\" );\n            //this.slider.slider( \"option\", \"values\", values );\n        }\n    }\n});\n\n/**\n * Manages a set of filters.\n */\nvar FiltersManager = function(track, obj_dict) {\n    this.track = track;\n    this.alpha_filter = null;\n    this.height_filter = null;\n    this.filters = [];\n\n    //\n    // Create HTML.\n    //\n\n    //\n    // Create parent div.\n    //\n    this.parent_div = $(\"<div/>\")\n        .addClass(\"filters\")\n        .hide();\n    // Disable dragging, double clicking, keys on div so that actions on slider do not impact viz.\n    this.parent_div\n        .bind(\"drag\", e => {\n            e.stopPropagation();\n        })\n        .click(e => {\n            e.stopPropagation();\n        })\n        .bind(\"dblclick\", e => {\n            e.stopPropagation();\n        })\n        .bind(\"keydown\", e => {\n            e.stopPropagation();\n        });\n\n    //\n    // Restore state from dict.\n    //\n    if (obj_dict && \"filters\" in obj_dict) {\n        // Second condition needed for backward compatibility.\n        var alpha_filter_name = \"alpha_filter\" in obj_dict ? obj_dict.alpha_filter : null;\n\n        var height_filter_name = \"height_filter\" in obj_dict ? obj_dict.height_filter : null;\n\n        var filters_dict = obj_dict.filters;\n        var filter;\n        for (var i = 0; i < filters_dict.length; i++) {\n            if (filters_dict[i].type === \"number\") {\n                filter = new NumberFilter(filters_dict[i]);\n                this.add_filter(filter);\n                if (filter.name === alpha_filter_name) {\n                    this.alpha_filter = filter;\n                    filter.transparency_icon.addClass(\"active\").show();\n                }\n                if (filter.name === height_filter_name) {\n                    this.height_filter = filter;\n                    filter.height_icon.addClass(\"active\").show();\n                }\n            } else {\n                console.log(\"ERROR: unsupported filter: \", name, type);\n            }\n        }\n\n        if (\"visible\" in obj_dict && obj_dict.visible) {\n            this.parent_div.show();\n        }\n    }\n\n    // Add button to filter complete dataset.\n    if (this.filters.length !== 0) {\n        var run_buttons_row = $(\"<div/>\")\n            .addClass(\"param-row\")\n            .appendTo(this.parent_div);\n        var run_on_dataset_button = $(\"<input type='submit'/>\")\n            .attr(\"value\", \"Run on complete dataset\")\n            .appendTo(run_buttons_row);\n        var filter_manager = this;\n        run_on_dataset_button.click(() => {\n            filter_manager.run_on_dataset();\n        });\n    }\n};\n\nextend(FiltersManager.prototype, {\n    // HTML manipulation and inspection.\n    show: function() {\n        this.parent_div.show();\n    },\n    hide: function() {\n        this.parent_div.hide();\n    },\n    toggle: function() {\n        this.parent_div.toggle();\n    },\n    visible: function() {\n        return this.parent_div.is(\":visible\");\n    },\n    /**\n     * Returns dictionary for manager.\n     */\n    to_dict: function() {\n        var obj_dict = {};\n        var filter_dicts = [];\n        var filter;\n\n        // Include individual filter states.\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            filter_dicts.push(filter.to_dict());\n        }\n        obj_dict.filters = filter_dicts;\n\n        // Include transparency, height filters.\n        obj_dict.alpha_filter = this.alpha_filter ? this.alpha_filter.name : null;\n        obj_dict.height_filter = this.height_filter ? this.height_filter.name : null;\n\n        // Include visibility.\n        obj_dict.visible = this.parent_div.is(\":visible\");\n\n        return obj_dict;\n    },\n    /**\n     * Return a copy of the manager.\n     */\n    copy: function(new_track) {\n        var copy = new FiltersManager(new_track);\n        for (var i = 0; i < this.filters.length; i++) {\n            copy.add_filter(this.filters[i].copy());\n        }\n        return copy;\n    },\n    /**\n     * Add a filter to the manager.\n     */\n    add_filter: function(filter) {\n        filter.manager = this;\n        this.parent_div.append(filter.parent_div);\n        this.filters.push(filter);\n    },\n    /**\n     * Remove all filters from manager.\n     */\n    remove_all: function() {\n        this.filters = [];\n        this.parent_div.children().remove();\n    },\n    /**\n     * Initialize filters.\n     */\n\n    init_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.update_ui_elt();\n        }\n    },\n    /**\n     * Clear filters so that they do not impact track display.\n     */\n    clear_filters: function() {\n        for (var i = 0; i < this.filters.length; i++) {\n            var filter = this.filters[i];\n            filter.slider.slider(\"option\", \"values\", [filter.min, filter.max]);\n        }\n        this.alpha_filter = null;\n        this.height_filter = null;\n\n        // Hide icons for setting filters.\n        this.parent_div.find(\".icon-button\").hide();\n    },\n    run_on_dataset: function() {\n        // Get or create dictionary item.\n        var get_or_create_dict_item = (dict, key, new_item) => {\n            // Add new item to dict if\n            if (!(key in dict)) {\n                dict[key] = new_item;\n            }\n            return dict[key];\n        };\n\n        //\n        // Find and group active filters. Active filters are those being used to hide data.\n        // Filters with the same tool id are grouped.\n        //\n        var active_filters = {};\n\n        var filter;\n        var tool_filter_conditions;\n        for (var i = 0; i < this.filters.length; i++) {\n            filter = this.filters[i];\n            if (filter.tool_id) {\n                // Add filtering conditions if filter low/high are set.\n                if (filter.min !== filter.low) {\n                    tool_filter_conditions = get_or_create_dict_item(active_filters, filter.tool_id, []);\n                    tool_filter_conditions[tool_filter_conditions.length] = `${filter.tool_exp_name} >= ${filter.low}`;\n                }\n                if (filter.max !== filter.high) {\n                    tool_filter_conditions = get_or_create_dict_item(active_filters, filter.tool_id, []);\n                    tool_filter_conditions[tool_filter_conditions.length] = `${filter.tool_exp_name} <= ${filter.high}`;\n                }\n            }\n        }\n\n        //\n        // Use tools to run filters.\n        //\n\n        // Create list of (tool_id, tool_filters) tuples.\n        var active_filters_list = [];\n        for (var tool_id in active_filters) {\n            active_filters_list[active_filters_list.length] = [tool_id, active_filters[tool_id]];\n        }\n\n        // Invoke recursive function to run filters; this enables chaining of filters via\n        // iteratively application.\n        (function run_filter(input_dataset_id, filters) {\n            var // Set up filtering info and params.\n            filter_tuple = filters[0];\n\n            var tool_id = filter_tuple[0];\n            var tool_filters = filter_tuple[1];\n            var tool_filter_str = `(${tool_filters.join(\") and (\")})`;\n\n            var url_params = {\n                cond: tool_filter_str,\n                input: input_dataset_id,\n                target_dataset_id: input_dataset_id,\n                tool_id: tool_id\n            };\n\n            // Remove current filter.\n            filters = filters.slice(1);\n\n            $.getJSON(run_tool_url, url_params, response => {\n                if (response.error) {\n                    // General error.\n                    Galaxy.modal.show({\n                        title: \"Filter Dataset\",\n                        body: `Error running tool ${tool_id}`,\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else if (filters.length === 0) {\n                    // No more filters to run.\n                    Galaxy.modal.show({\n                        title: \"Filtering Dataset\",\n                        body: \"Filter(s) are running on the complete dataset. Outputs are in dataset's history.\",\n                        buttons: { Close: Galaxy.modal.hide() }\n                    });\n                } else {\n                    // More filters to run.\n                    run_filter(response.dataset_id, filters);\n                }\n            });\n        })(this.track.dataset_id, active_filters_list);\n    }\n});\n\nexport default {\n    FiltersManager: FiltersManager,\n    NumberFilter: NumberFilter\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/viz/trackster/filters.js","import visualization from \"viz/visualization\";\nimport * as bigwig from \"libs/bbi/bigwig\";\n/**\n * Data manager for BBI datasets/files, including BigWig and BigBed.\n */\nvar BBIDataManager = visualization.GenomeDataManager.extend({\n    /**\n     * Load data from server and manage data entries. Adds a Deferred to manager\n     * for region; when data becomes available, replaces Deferred with data.\n     * Returns the Deferred that resolves when data is available.\n     */\n    load_data: function(region, mode, resolution, extra_params) {\n        var deferred = $.Deferred();\n        this.set_data(region, deferred);\n\n        var url = `${Galaxy.root}datasets/${this.get(\"dataset\").id}/display`;\n\n        var self = this;\n        var promise = new $.Deferred();\n        $.when(bigwig.makeBwg(url)).then((bb, err) => {\n            $.when(bb.readWigData(region.get(\"chrom\"), region.get(\"start\"), region.get(\"end\"))).then(data => {\n                // Transform data into \"bigwig\" format for LinePainter. \"bigwig\" format is an array of 2-element arrays\n                // where each element is [position, score]; unlike real bigwig format, no gaps are allowed.\n                var result = [];\n\n                var prev = { max: Number.MIN_VALUE };\n                data.forEach(d => {\n                    // If there is a gap between prev and d, fill it with an interval with score 0.\n                    // This is necessary for LinePainter to draw correctly.\n                    if (prev.max !== d.min - 1) {\n                        // +1 to start after previous region.\n                        result.push([prev.max + 1, 0]);\n                        // -2 = -1 for converting from 1-based to 0-based coordinates,\n                        //      -1 for ending before current region.\n                        result.push([d.min - 2, 0]);\n                    }\n\n                    // Add data point for entry start. -1 to convert from wiggle\n                    // 1-based coordinates to 0-based browser coordinates.\n                    result.push([d.min - 1, d.score]);\n\n                    // Add data point for entry end:\n                    result.push([d.max, d.score]);\n\n                    prev = d;\n                });\n\n                var entry = {\n                    data: result,\n                    region: region,\n                    dataset_type: \"bigwig\"\n                };\n\n                self.set_data(region, entry);\n                deferred.resolve(entry);\n            });\n        });\n\n        return deferred;\n    }\n});\n\nexport default {\n    BBIDataManager: BBIDataManager\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/viz/bbi-data-manager.js","//\n// Author: Jeremy Goecks\n//\n// Modified from:\n//\n// Dalliance Genome Explorer\n// (c) Thomas Down 2006-2010\n//\n// bigwig.js: indexed binary WIG (and BED) files\n//\n\n// Requirements:\n//  * jquery and ajax-native plugin for reading binary data, jquery for promises\n//  * spans for working working with genomic intervals\n//  * jszlib for decompression.\ndefine([\"libs/bbi/spans\", \"libs/bbi/jszlib\", \"libs/bbi/jquery-ajax-native\"], function(spans, jszlib) {\n    \"use strict\";\n\n    // -- Copied from das.js --\n\n    function DASFeature() {\n    }\n\n    function DASGroup(id) {\n        if (id)\n        this.id = id;\n    }\n\n    // -- End copy --\n\n    // -- Copied from bin.js --\n\n    function readInt(ba, offset) {\n        return (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset]);\n    }\n\n    // -- End copy --\n\n    // Some globals.\n    var Range = spans.Range;\n    var union = spans.union;\n    var intersection = spans.intersection;\n\n    var jszlib_inflate_buffer = jszlib.inflateBuffer;\n    var arrayCopy = jszlib.arrayCopy;\n\n    var BIG_WIG_MAGIC = 0x888FFC26;\n    var BIG_WIG_MAGIC_BE = 0x26FC8F88;\n    var BIG_BED_MAGIC = 0x8789F2EB;\n    var BIG_BED_MAGIC_BE = 0xEBF28987;\n\n\n    var BIG_WIG_TYPE_GRAPH = 1;\n    var BIG_WIG_TYPE_VSTEP = 2;\n    var BIG_WIG_TYPE_FSTEP = 3;\n\n    var M1 = 256;\n    var M2 = 256*256;\n    var M3 = 256*256*256;\n    var M4 = 256*256*256*256;\n\n    var BED_COLOR_REGEXP = new RegExp(\"^[0-9]+,[0-9]+,[0-9]+\");\n\n    /**\n     * Read binary data from a URL using HTTP Range header. Requires jQuery and ajax-native plugin.\n     */\n    function read(url, start, size) {\n        // Taken from bin.js:\n        // This may be necessary for Safari:\n        //   if ((isSafari || this.opts.salt) && url.indexOf('?') < 0) {\n        //       url = url + '?salt=' + b64_sha1('' + Date.now() + ',' + (++seed));\n        //   }\n\n        var chunkSizeLimit = Math.pow(10, 6); // 1 MB\n        if(size > chunkSizeLimit) {\n            // TODO: raise error.\n        }\n\n        // Read data from remote file.\n        return $.ajax({\n            type: 'GET',\n            dataType: 'native',\n            url: url,\n            // Potential timeout on first request to catch mixed-content errors on Chromium.\n            timeout: 5000,\n            beforeSend: function(xhrObj) {\n                // (size - 1) because range is inclusive.\n                xhrObj.setRequestHeader(\"Range\", \"bytes=\" + start + \"-\" + (start + (size - 1)));\n            },\n            xhrFields: {\n                responseType: 'arraybuffer'\n            }\n        });\n    }\n\n    function bwg_readOffset(ba, o) {\n        var offset = ba[o] + ba[o+1]*M1 + ba[o+2]*M2 + ba[o+3]*M3 + ba[o+4]*M4;\n        return offset;\n    }\n\n    function BigWig() {\n    }\n\n    /**\n     * Read the chromosome B+ tree header.\n     */\n    BigWig.prototype.readChromTree = function() {\n        var thisB = this;\n        this.chromsToIDs = {};\n        this.idsToChroms = {};\n        this.maxID = 0;\n\n        var udo = this.unzoomedDataOffset;\n        var eb = (udo - this.chromTreeOffset) & 3;\n        udo = udo + 4 - eb;\n\n        // Read and parse the chrom tree, return the promise so that subsequent actions can be taken.\n        return $.when(read(this.url, this.chromTreeOffset, udo - this.chromTreeOffset)).then(function(bpt) {\n            var ba = new Uint8Array(bpt);\n            var sa = new Int16Array(bpt);\n            var la = new Int32Array(bpt);\n            var bptMagic = la[0];\n            var blockSize = la[1];\n            var keySize = la[2];\n            var valSize = la[3];\n            var itemCount = bwg_readOffset(ba, 16);\n            var rootNodeOffset = 32;\n\n            var bptReadNode = function(offset) {\n                var nodeType = ba[offset];\n                var cnt = sa[(offset/2) + 1];\n                offset += 4;\n                for (var n = 0; n < cnt; ++n) {\n                    if (nodeType === 0) {\n                        offset += keySize;\n                        var childOffset = bwg_readOffset(ba, offset);\n                        offset += 8;\n                        childOffset -= thisB.chromTreeOffset;\n                        bptReadNode(childOffset);\n                    } else {\n                        var key = '';\n                        for (var ki = 0; ki < keySize; ++ki) {\n                            var charCode = ba[offset++];\n                            if (charCode !== 0) {\n                                key += String.fromCharCode(charCode);\n                            }\n                        }\n                        var chromId = (ba[offset+3]<<24) | (ba[offset+2]<<16) | (ba[offset+1]<<8) | (ba[offset+0]);\n                        var chromSize = (ba[offset + 7]<<24) | (ba[offset+6]<<16) | (ba[offset+5]<<8) | (ba[offset+4]);\n                        offset += 8;\n\n                        thisB.chromsToIDs[key] = chromId;\n                        if (key.indexOf('chr') === 0) {\n                            thisB.chromsToIDs[key.substr(3)] = chromId;\n                        }\n                        thisB.idsToChroms[chromId] = key;\n                        thisB.maxID = Math.max(thisB.maxID, chromId);\n                    }\n                }\n            };\n            bptReadNode(rootNodeOffset);\n        });\n    }\n\n    function BigWigView(bwg, cirTreeOffset, cirTreeLength, isSummary) {\n        this.bwg = bwg;\n        this.cirTreeOffset = cirTreeOffset;\n        this.cirTreeLength = cirTreeLength;\n        this.isSummary = isSummary;\n    }\n\n\n\n    BigWigView.prototype.readWigData = function(chrName, min, max) {\n        var chr = this.bwg.chromsToIDs[chrName],\n            rval;\n        if (chr === undefined) {\n            // Not an error because some .bwgs won't have data for all chromosomes.\n            rval = [];\n        } else {\n            rval = this.readWigDataById(chr, min, max);\n        }\n\n        return rval;\n    };\n\n    BigWigView.prototype.readWigDataById = function(chr, min, max) {\n        var thisB = this,\n            promise = $.Deferred();\n\n        // Read the R-tree index header and then read data again.\n        if (!this.cirHeader) {\n            $.when(read(thisB.bwg.url, this.cirTreeOffset, 48)).then(function(result) {\n                thisB.cirHeader = result;\n                var la = new Int32Array(thisB.cirHeader);\n                thisB.cirBlockSize = la[1];\n                $.when(thisB.readWigDataById(chr, min, max)).then(function(result) {\n                    promise.resolve(result);\n                });\n            });\n            return promise;\n        }\n\n        var blocksToFetch = [];\n        var outstanding = 0;\n\n        var beforeBWG = Date.now();\n\n        var filter = function(chromId, fmin, fmax, toks) {\n            return ((chr < 0 || chromId == chr) && fmin <= max && fmax >= min);\n        };\n\n        var cirFobRecur = function(offset, level) {\n            if (thisB.bwg.instrument)\n            console.log('level=' + level + '; offset=' + offset + '; time=' + (Date.now()|0));\n\n            outstanding += offset.length;\n\n            if (offset.length == 1 && offset[0] - thisB.cirTreeOffset == 48 && thisB.cachedCirRoot) {\n                cirFobRecur2(thisB.cachedCirRoot, 0, level);\n                --outstanding;\n                if (outstanding === 0) {\n                    $.when(thisB.fetchFeatures(filter, blocksToFetch)).then(function(result) {\n                        promise.resolve(result);\n                    });\n                }\n                return;\n            }\n\n            var maxCirBlockSpan = 4 +  (thisB.cirBlockSize * 32);   // Upper bound on size, based on a completely full leaf node.\n            var spans;\n            for (var i = 0; i < offset.length; ++i) {\n                var blockSpan = new Range(offset[i], offset[i] + maxCirBlockSpan);\n                spans = spans ? union(spans, blockSpan) : blockSpan;\n            }\n\n            var fetchRanges = spans.ranges();\n            for (var r = 0; r < fetchRanges.length; ++r) {\n                var fr = fetchRanges[r];\n                cirFobStartFetch(offset, fr, level);\n            }\n        };\n\n        var cirFobStartFetch = function(offset, fr, level, attempts) {\n            var length = fr.max() - fr.min();\n            $.when(read(thisB.bwg.url, fr.min(), fr.max() - fr.min())).then(function(resultBuffer) {\n                for (var i = 0; i < offset.length; ++i) {\n                    if (fr.contains(offset[i])) {\n                        cirFobRecur2(resultBuffer, offset[i] - fr.min(), level);\n\n                        if (offset[i] - thisB.cirTreeOffset == 48 && offset[i] - fr.min() === 0)\n                            thisB.cachedCirRoot = resultBuffer;\n\n                        --outstanding;\n                        if (outstanding === 0) {\n                            $.when(thisB.fetchFeatures(filter, blocksToFetch)).then(function(result) {\n                                promise.resolve(result);\n                            });\n                        }\n                    }\n                }\n            });\n        };\n\n        var cirFobRecur2 = function(cirBlockData, offset, level) {\n            var ba = new Uint8Array(cirBlockData);\n            var sa = new Int16Array(cirBlockData);\n            var la = new Int32Array(cirBlockData);\n\n            var isLeaf = ba[offset];\n            var cnt = sa[offset/2 + 1];\n            offset += 4;\n\n            if (isLeaf !== 0) {\n                for (var i = 0; i < cnt; ++i) {\n                    var lo = offset/4;\n                    var startChrom = la[lo];\n                    var startBase = la[lo + 1];\n                    var endChrom = la[lo + 2];\n                    var endBase = la[lo + 3];\n                    var blockOffset = bwg_readOffset(ba, offset+16);\n                    var blockSize = bwg_readOffset(ba, offset+24);\n                    if (((chr < 0 || startChrom < chr) || (startChrom == chr && startBase <= max)) &&\n                    ((chr < 0 || endChrom   > chr) || (endChrom == chr && endBase >= min)))\n                    {\n                        blocksToFetch.push({offset: blockOffset, size: blockSize});\n                    }\n                    offset += 32;\n                }\n            } else {\n                var recurOffsets = [];\n                for (var i = 0; i < cnt; ++i) {\n                    var lo = offset/4;\n                    var startChrom = la[lo];\n                    var startBase = la[lo + 1];\n                    var endChrom = la[lo + 2];\n                    var endBase = la[lo + 3];\n                    var blockOffset = bwg_readOffset(ba, offset+16);\n                    if ((chr < 0 || startChrom < chr || (startChrom == chr && startBase <= max)) &&\n                    (chr < 0 || endChrom   > chr || (endChrom == chr && endBase >= min)))\n                    {\n                        recurOffsets.push(blockOffset);\n                    }\n                    offset += 24;\n                }\n                if (recurOffsets.length > 0) {\n                    cirFobRecur(recurOffsets, level + 1);\n                }\n            }\n        };\n\n        cirFobRecur([thisB.cirTreeOffset + 48], 1);\n        return promise;\n    };\n\n    /**\n     * Fetch data for a set of blocks. Returns a promise that resolves to fetched data.\n     */\n    BigWigView.prototype.fetchFeatures = function(filter, blocksToFetch) {\n        var thisB = this,\n            promise = $.Deferred();\n\n        blocksToFetch.sort(function(b0, b1) {\n            return (b0.offset|0) - (b1.offset|0);\n        });\n\n        if (blocksToFetch.length === 0) {\n            return [];\n        } else {\n            var features = [];\n            var createFeature = function(chr, fmin, fmax, opts) {\n                if (!opts) {\n                    opts = {};\n                }\n\n                var f = new DASFeature();\n                f._chromId = chr;\n                f.segment = thisB.bwg.idsToChroms[chr];\n                f.min = fmin;\n                f.max = fmax;\n                f.type = thisB.bwg.type;\n\n                for (var k in opts) {\n                    f[k] = opts[k];\n                }\n\n                features.push(f);\n            };\n\n            // Recursive function to read blocks of data.\n            var tramp = function() {\n                if (blocksToFetch.length === 0) {\n                    var afterBWG = Date.now();\n                    // dlog('BWG fetch took ' + (afterBWG - beforeBWG) + 'ms');\n                    return promise.resolve(features);\n                }\n                else {\n                    var block = blocksToFetch[0];\n                    if (block.data) {\n                        thisB.parseFeatures(block.data, createFeature, filter);\n                        blocksToFetch.splice(0, 1);\n                        tramp();\n                    }\n                    else {\n                        var fetchStart = block.offset;\n                        var fetchSize = block.size;\n                        var bi = 1;\n                        while (bi < blocksToFetch.length && blocksToFetch[bi].offset == (fetchStart + fetchSize)) {\n                            fetchSize += blocksToFetch[bi].size;\n                            ++bi;\n                        }\n\n                        $.when(read(thisB.bwg.url, fetchStart, fetchSize)).then(function(result) {\n                            var offset = 0;\n                            var bi = 0;\n                            while (offset < fetchSize) {\n                                var fb = blocksToFetch[bi];\n\n                                var data;\n                                if (thisB.bwg.uncompressBufSize > 0) {\n                                    data = jszlib_inflate_buffer(result, offset + 2, fb.size - 2);\n                                } else {\n                                    var tmp = new Uint8Array(fb.size);    // FIXME is this really the best we can do?\n                                    arrayCopy(new Uint8Array(result, offset, fb.size), 0, tmp, 0, fb.size);\n                                    data = tmp.buffer;\n                                }\n                                fb.data = data;\n\n                                offset += fb.size;\n                                ++bi;\n                            }\n                            tramp();\n                        });\n                    }\n                }\n            };\n            tramp();\n        }\n\n        return promise;\n    };\n\n    BigWigView.prototype.parseFeatures = function(data, createFeature, filter) {\n        var ba = new Uint8Array(data);\n\n        if (this.isSummary) {\n            var sa = new Int16Array(data);\n            var la = new Int32Array(data);\n            var fa = new Float32Array(data);\n\n            var itemCount = data.byteLength/32;\n            for (var i = 0; i < itemCount; ++i) {\n                var chromId =   la[(i*8)];\n                var start =     la[(i*8)+1];\n                var end =       la[(i*8)+2];\n                var validCnt =  la[(i*8)+3];\n                var minVal    = fa[(i*8)+4];\n                var maxVal    = fa[(i*8)+5];\n                var sumData   = fa[(i*8)+6];\n                var sumSqData = fa[(i*8)+7];\n\n                if (filter(chromId, start + 1, end)) {\n                    var summaryOpts = {type: 'bigwig', score: sumData/validCnt, maxScore: maxVal};\n                    if (this.bwg.type == 'bigbed') {\n                        summaryOpts.type = 'density';\n                    }\n                    createFeature(chromId, start + 1, end, summaryOpts);\n                }\n            }\n        }\n        else if (this.bwg.type == 'bigwig') {\n            var sa = new Int16Array(data);\n            var la = new Int32Array(data);\n            var fa = new Float32Array(data);\n\n            var chromId = la[0];\n            var blockStart = la[1];\n            var blockEnd = la[2];\n            var itemStep = la[3];\n            var itemSpan = la[4];\n            var blockType = ba[20];\n            var itemCount = sa[11];\n\n            if (blockType == BIG_WIG_TYPE_FSTEP) {\n                for (var i = 0; i < itemCount; ++i) {\n                    var score = fa[i + 6];\n                    var fmin = blockStart + (i*itemStep) + 1, fmax = blockStart + (i*itemStep) + itemSpan;\n                    if (filter(chromId, fmin, fmax))\n                    createFeature(chromId, fmin, fmax, {score: score});\n                }\n            } else if (blockType == BIG_WIG_TYPE_VSTEP) {\n                for (var i = 0; i < itemCount; ++i) {\n                    var start = la[(i*2) + 6] + 1;\n                    var end = start + itemSpan - 1;\n                    var score = fa[(i*2) + 7];\n                    if (filter(chromId, start, end))\n                    createFeature(chromId, start, end, {score: score});\n                }\n            } else if (blockType == BIG_WIG_TYPE_GRAPH) {\n                for (var i = 0; i < itemCount; ++i) {\n                    var start = la[(i*3) + 6] + 1;\n                    var end   = la[(i*3) + 7];\n                    var score = fa[(i*3) + 8];\n                    if (start > end) {\n                        start = end;\n                    }\n                    if (filter(chromId, start, end))\n                    createFeature(chromId, start, end, {score: score});\n                }\n            } else {\n                console.log('Currently not handling bwgType=' + blockType);\n            }\n        } else if (this.bwg.type == 'bigbed') {\n            var offset = 0;\n            var dfc = this.bwg.definedFieldCount;\n            var schema = this.bwg.schema;\n\n            while (offset < ba.length) {\n                var chromId = (ba[offset+3]<<24) | (ba[offset+2]<<16) | (ba[offset+1]<<8) | (ba[offset+0]);\n                var start = (ba[offset+7]<<24) | (ba[offset+6]<<16) | (ba[offset+5]<<8) | (ba[offset+4]);\n                var end = (ba[offset+11]<<24) | (ba[offset+10]<<16) | (ba[offset+9]<<8) | (ba[offset+8]);\n                offset += 12;\n                var rest = '';\n                while (true) {\n                    var ch = ba[offset++];\n                    if (ch != 0) {\n                        rest += String.fromCharCode(ch);\n                    } else {\n                        break;\n                    }\n                }\n\n                var featureOpts = {};\n\n                var bedColumns;\n                if (rest.length > 0) {\n                    bedColumns = rest.split('\\t');\n                } else {\n                    bedColumns = [];\n                }\n                if (bedColumns.length > 0 && dfc > 3) {\n                    featureOpts.label = bedColumns[0];\n                }\n                if (bedColumns.length > 1 && dfc > 4) {\n                    var score = parseInt(bedColumns[1]);\n                    if (!isNaN(score))\n                    featureOpts.score = score;\n                }\n                if (bedColumns.length > 2 && dfc > 5) {\n                    featureOpts.orientation = bedColumns[2];\n                }\n                if (bedColumns.length > 5 && dfc > 8) {\n                    var color = bedColumns[5];\n                    if (BED_COLOR_REGEXP.test(color)) {\n                        featureOpts.itemRgb = 'rgb(' + color + ')';\n                    }\n                }\n\n                if (bedColumns.length > dfc-3 && schema) {\n                    for (var col = dfc - 3; col < bedColumns.length; ++col) {\n                        featureOpts[schema.fields[col+3].name] = bedColumns[col];\n                    }\n                }\n\n                if (filter(chromId, start + 1, end, bedColumns)) {\n                    if (dfc < 12) {\n                        createFeature(chromId, start + 1, end, featureOpts);\n                    } else {\n                        // TODO: add block starts, sizes, thick start, thick end to feature.\n                        var thickStart = bedColumns[3]|0;\n                        var thickEnd   = bedColumns[4]|0;\n                        var blockCount = bedColumns[6]|0;\n                        var blockSizes = bedColumns[7].split(',');\n                        var blockStarts = bedColumns[8].split(',');\n\n                        if (featureOpts.exonFrames) {\n                            var exonFrames = featureOpts.exonFrames.split(',');\n                            featureOpts.exonFrames = undefined;\n                        }\n\n                        featureOpts.type = 'transcript'\n                        var grp = new DASGroup();\n                        for (var k in featureOpts) {\n                            grp[k] = featureOpts[k];\n                        }\n                        grp.id = bedColumns[0];\n                        grp.segment = this.bwg.idsToChroms[chromId];\n                        grp.min = start + 1;\n                        grp.max = end;\n                        grp.notes = [];\n                        featureOpts.groups = [grp];\n\n                        // Moving towards using bigGenePred model, but will\n                        // still support old Dalliance-style BED12+gene-name for the\n                        // foreseeable future.\n                        if (bedColumns.length > 9) {\n                            var geneId = featureOpts.geneName || bedColumns[9];\n                            var geneName = geneId;\n                            if (bedColumns.length > 10) {\n                                geneName = bedColumns[10];\n                            }\n                            if (featureOpts.geneName2)\n                            geneName = featureOpts.geneName2;\n\n                            var gg = $.extend({}, grp);\n                            gg.id = geneId;\n                            gg.label = geneName;\n                            gg.type = 'gene';\n                            featureOpts.groups.push(gg);\n                        }\n\n                        var spanList = [];\n                        for (var b = 0; b < blockCount; ++b) {\n                            var bmin = (blockStarts[b]|0) + start;\n                            var bmax = bmin + (blockSizes[b]|0);\n                            var span = new Range(bmin, bmax);\n                            spanList.push(span);\n                        }\n                        var spans = union(spanList);\n\n                        var tsList = spans.ranges();\n                        for (var s = 0; s < tsList.length; ++s) {\n                            var ts = tsList[s];\n                            createFeature(chromId, ts.min() + 1, ts.max(), featureOpts);\n                        }\n\n                        if (thickEnd > thickStart) {\n                            var codingRegion = (featureOpts.orientation == '+') ?\n                            new Range(thickStart, thickEnd + 3) :\n                            new Range(thickStart - 3, thickEnd);\n                            // +/- 3 to account for stop codon\n\n                            var tl = intersection(spans, codingRegion);\n                            if (tl) {\n                                featureOpts.type = 'translation';\n                                var tlList = tl.ranges();\n                                var readingFrame = 0;\n\n                                var tlOffset = 0;\n                                while (tlList[0].min() > tsList[tlOffset].max())\n                                tlOffset++;\n\n                                for (var s = 0; s < tlList.length; ++s) {\n                                    // Record reading frame for every exon\n                                    var index = s;\n                                    if (featureOpts.orientation == '-')\n                                    index = tlList.length - s - 1;\n                                    var ts = tlList[index];\n                                    featureOpts.readframe = readingFrame;\n                                    if (exonFrames) {\n                                        var brf = parseInt(exonFrames[index + tlOffset]);\n                                        if (typeof(brf) === 'number' && brf >= 0 && brf <= 2) {\n                                            featureOpts.readframe = brf;\n                                            featureOpts.readframeExplicit = true;\n                                        }\n                                    }\n                                    var length = ts.max() - ts.min();\n                                    readingFrame = (readingFrame + length) % 3;\n                                    createFeature(chromId, ts.min() + 1, ts.max(), featureOpts);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } else {\n            throw Error(\"Don't know what to do with \" + this.bwg.type);\n        }\n    }\n\n    //\n    // nasty cut/paste, should roll back in!\n    //\n\n    BigWigView.prototype.getFirstAdjacent = function(chrName, pos, dir, callback) {\n        var chr = this.bwg.chromsToIDs[chrName];\n        if (chr === undefined) {\n            // Not an error because some .bwgs won't have data for all chromosomes.\n            return callback([]);\n        } else {\n            this.getFirstAdjacentById(chr, pos, dir, callback);\n        }\n    }\n\n    BigWigView.prototype.getFirstAdjacentById = function(chr, pos, dir, callback) {\n        var thisB = this;\n        if (!this.cirHeader) {\n            this.bwg.data.slice(this.cirTreeOffset, 48).fetch(function(result) {\n                thisB.cirHeader = result;\n                var la = new Int32Array(thisB.cirHeader);\n                thisB.cirBlockSize = la[1];\n                thisB.getFirstAdjacentById(chr, pos, dir, callback);\n            });\n            return;\n        }\n\n        var blockToFetch = null;\n        var bestBlockChr = -1;\n        var bestBlockOffset = -1;\n\n        var outstanding = 0;\n\n        var beforeBWG = Date.now();\n\n        var cirFobRecur = function(offset, level) {\n            outstanding += offset.length;\n\n            var maxCirBlockSpan = 4 +  (thisB.cirBlockSize * 32);   // Upper bound on size, based on a completely full leaf node.\n            var spans;\n            for (var i = 0; i < offset.length; ++i) {\n                var blockSpan = new Range(offset[i], offset[i] + maxCirBlockSpan);\n                spans = spans ? union(spans, blockSpan) : blockSpan;\n            }\n\n            var fetchRanges = spans.ranges();\n            for (var r = 0; r < fetchRanges.length; ++r) {\n                var fr = fetchRanges[r];\n                cirFobStartFetch(offset, fr, level);\n            }\n        }\n\n        var cirFobStartFetch = function(offset, fr, level, attempts) {\n            var length = fr.max() - fr.min();\n            thisB.bwg.data.slice(fr.min(), fr.max() - fr.min()).fetch(function(resultBuffer) {\n                for (var i = 0; i < offset.length; ++i) {\n                    if (fr.contains(offset[i])) {\n                        cirFobRecur2(resultBuffer, offset[i] - fr.min(), level);\n                        --outstanding;\n                        if (outstanding == 0) {\n                            if (!blockToFetch) {\n                                if (dir > 0 && (chr != 0 || pos > 0)) {\n                                    return thisB.getFirstAdjacentById(0, 0, dir, callback);\n                                } else if (dir < 0 && (chr != thisB.bwg.maxID || pos < 1000000000)) {\n                                    return thisB.getFirstAdjacentById(thisB.bwg.maxID, 1000000000, dir, callback);\n                                }\n                                return callback([]);\n                            }\n\n                            thisB.fetchFeatures(function(chrx, fmin, fmax, toks) {\n                                return (dir < 0 && (chrx < chr || fmax < pos)) || (dir > 0 && (chrx > chr || fmin > pos));\n                            }, [blockToFetch], function(features) {\n                                var bestFeature = null;\n                                var bestChr = -1;\n                                var bestPos = -1;\n                                for (var fi = 0; fi < features.length; ++fi) {\n                                    var f = features[fi];\n                                    var chrx = f._chromId, fmin = f.min, fmax = f.max;\n                                    if (bestFeature == null || ((dir < 0) && (chrx > bestChr || fmax > bestPos)) || ((dir > 0) && (chrx < bestChr || fmin < bestPos))) {\n                                        bestFeature = f;\n                                        bestPos = (dir < 0) ? fmax : fmin;\n                                        bestChr = chrx;\n                                    }\n                                }\n\n                                if (bestFeature != null)\n                                return callback([bestFeature]);\n                                else\n                                return callback([]);\n                            });\n                        }\n                    }\n                }\n            });\n        }\n\n        var cirFobRecur2 = function(cirBlockData, offset, level) {\n            var ba = new Uint8Array(cirBlockData);\n            var sa = new Int16Array(cirBlockData);\n            var la = new Int32Array(cirBlockData);\n\n            var isLeaf = ba[offset];\n            var cnt = sa[offset/2 + 1];\n            offset += 4;\n\n            if (isLeaf != 0) {\n                for (var i = 0; i < cnt; ++i) {\n                    var lo = offset/4;\n                    var startChrom = la[lo];\n                    var startBase = la[lo + 1];\n                    var endChrom = la[lo + 2];\n                    var endBase = la[lo + 3];\n                    var blockOffset = bwg_readOffset(ba, offset+16);\n                    var blockSize = bwg_readOffset(ba, offset+24);\n                    if ((dir < 0 && ((startChrom < chr || (startChrom == chr && startBase <= pos)))) ||\n                    (dir > 0 && ((endChrom > chr || (endChrom == chr && endBase >= pos)))))\n                    {\n                        // console.log('Got an interesting block: startBase=' + startChrom + ':' + startBase + '; endBase=' + endChrom + ':' + endBase + '; offset=' + blockOffset + '; size=' + blockSize);\n                        if (/_random/.exec(thisB.bwg.idsToChroms[startChrom])) {\n                            // dlog('skipping random: ' + thisB.bwg.idsToChroms[startChrom]);\n                        } else if (blockToFetch == null || ((dir < 0) && (endChrom > bestBlockChr || (endChrom == bestBlockChr && endBase > bestBlockOffset)) ||\n                        (dir > 0) && (startChrom < bestBlockChr || (startChrom == bestBlockChr && startBase < bestBlockOffset))))\n                        {\n                            //                        dlog('best is: startBase=' + startChrom + ':' + startBase + '; endBase=' + endChrom + ':' + endBase + '; offset=' + blockOffset + '; size=' + blockSize);\n                            blockToFetch = {offset: blockOffset, size: blockSize};\n                            bestBlockOffset = (dir < 0) ? endBase : startBase;\n                            bestBlockChr = (dir < 0) ? endChrom : startChrom;\n                        }\n                    }\n                    offset += 32;\n                }\n            } else {\n                var bestRecur = -1;\n                var bestPos = -1;\n                var bestChr = -1;\n                for (var i = 0; i < cnt; ++i) {\n                    var lo = offset/4;\n                    var startChrom = la[lo];\n                    var startBase = la[lo + 1];\n                    var endChrom = la[lo + 2];\n                    var endBase = la[lo + 3];\n                    var blockOffset = (la[lo + 4]<<32) | (la[lo + 5]);\n                    if ((dir < 0 && ((startChrom < chr || (startChrom == chr && startBase <= pos)) &&\n                    (endChrom   >= chr))) ||\n                    (dir > 0 && ((endChrom > chr || (endChrom == chr && endBase >= pos)) &&\n                    (startChrom <= chr))))\n                    {\n                        if (bestRecur < 0 || endBase > bestPos) {\n                            bestRecur = blockOffset;\n                            bestPos = (dir < 0) ? endBase : startBase;\n                            bestChr = (dir < 0) ? endChrom : startChrom;\n                        }\n                    }\n                    offset += 24;\n                }\n                if (bestRecur >= 0) {\n                    cirFobRecur([bestRecur], level + 1);\n                }\n            }\n        };\n\n\n        cirFobRecur([thisB.cirTreeOffset + 48], 1);\n    }\n\n    /**\n    * Automatically choose a zoom level and return data from that level.\n    */\n    BigWig.prototype.readWigData = function(chrName, min, max) {\n        // Maximum number of data points to return when reading a bigwig. This is used\n        // to choose the appropriate level. One data point ~= 25-65 bytes.\n        // FIXME: For targeted sequencing, data points returned is going to be much lower,\n        // so this will need to be tuned appropriately.\n        var MAX_DATA_POINTS = 25000;\n\n        var range = max - min,\n        view;\n        // If no zooming needed or available (common in bigbed), use unzoomed view.\n        if (range <= MAX_DATA_POINTS || this.zoomLevels.length === 0) {\n            view = this.getUnzoomedView();\n        }\n        else {\n            // Find reasonable zoom level. Reduction is the # of bases represented\n            // by each data point at that level.\n            for (var i = 0; i < this.zoomLevels.length; i++) {\n                if (range/this.zoomLevels[i].reduction < MAX_DATA_POINTS) {\n                    view = this.getZoomedView(i);\n                    break;\n                }\n            }\n        }\n\n        return view.readWigData(chrName, min, max);\n    }\n\n    BigWig.prototype.getUnzoomedView = function() {\n        if (!this.unzoomedView) {\n            var cirLen = 4000;\n            var nzl = this.zoomLevels[0];\n            if (nzl) {\n                cirLen = this.zoomLevels[0].dataOffset - this.unzoomedIndexOffset;\n            }\n            this.unzoomedView = new BigWigView(this, this.unzoomedIndexOffset, cirLen, false);\n        }\n        return this.unzoomedView;\n    }\n\n    BigWig.prototype.getZoomedView = function(z) {\n        var zh = this.zoomLevels[z];\n        if (!zh.view) {\n            zh.view = new BigWigView(this, zh.indexOffset, /* this.zoomLevels[z + 1].dataOffset - zh.indexOffset */ 4000, true);\n        }\n        return zh.view;\n    }\n\n    /**\n     * Create a BigWig object using a URL to a bigwig/bigbed file. Returns a promise\n     * that resolves to the object when it's available.\n     */\n    function makeBwg(url) {\n        var promise = $.Deferred(),\n        bwg = new BigWig();\n        bwg.url = url;\n\n        // Read and parse bigwig header, including chrom tree.\n        $.when(read(bwg.url, 0, 512)).then(function(result) {\n            if (!result) {\n                return promise.resolve(null, \"Couldn't fetch file\");\n            }\n\n            var header = result;\n            var ba = new Uint8Array(header);\n            var sa = new Int16Array(header);\n            var la = new Int32Array(header);\n            var magic = ba[0] + (M1 * ba[1]) + (M2 * ba[2]) + (M3 * ba[3]);\n            if (magic == BIG_WIG_MAGIC) {\n                bwg.type = 'bigwig';\n            } else if (magic == BIG_BED_MAGIC) {\n                bwg.type = 'bigbed';\n            } else if (magic == BIG_WIG_MAGIC_BE || magic == BIG_BED_MAGIC_BE) {\n                return promise.resolve(null, \"Currently don't support big-endian BBI files\");\n\n            } else {\n                return promise.resolve(null, \"Not a supported format, magic=0x\" + magic.toString(16));\n\n            }\n\n            bwg.version = sa[2];             // 4\n            bwg.numZoomLevels = sa[3];       // 6\n            bwg.chromTreeOffset = bwg_readOffset(ba, 8);\n            bwg.unzoomedDataOffset = bwg_readOffset(ba, 16);\n            bwg.unzoomedIndexOffset = bwg_readOffset(ba, 24);\n            bwg.fieldCount = sa[16];         // 32\n            bwg.definedFieldCount = sa[17];  // 34\n            bwg.asOffset = bwg_readOffset(ba, 36);\n            bwg.totalSummaryOffset = bwg_readOffset(ba, 44);\n            bwg.uncompressBufSize = la[13];  // 52\n            bwg.extHeaderOffset = bwg_readOffset(ba, 56);\n\n            bwg.zoomLevels = [];\n            for (var zl = 0; zl < bwg.numZoomLevels; ++zl) {\n                var zlReduction = la[zl*6 + 16]\n                var zlData = bwg_readOffset(ba, zl*24 + 72);\n                var zlIndex = bwg_readOffset(ba, zl*24 + 80);\n                bwg.zoomLevels.push({reduction: zlReduction, dataOffset: zlData, indexOffset: zlIndex});\n            }\n\n            $.when(bwg.readChromTree()).then(function() {\n                bwg.getAutoSQL(function(as) {\n                    bwg.schema = as;\n                    return promise.resolve(bwg);\n                });\n            });\n        });\n\n        return promise;\n    }\n\n\n    BigWig.prototype._tsFetch = function(zoom, chr, min, max, callback) {\n        var bwg = this;\n        if (zoom >= this.zoomLevels.length - 1) {\n            if (!this.topLevelReductionCache) {\n                this.getZoomedView(this.zoomLevels.length - 1).readWigDataById(-1, 0, 300000000, function(feats) {\n                    bwg.topLevelReductionCache = feats;\n                    return bwg._tsFetch(zoom, chr, min, max, callback);\n                });\n            } else {\n                var f = [];\n                var c = this.topLevelReductionCache;\n                for (var fi = 0; fi < c.length; ++fi) {\n                    if (c[fi]._chromId == chr) {\n                        f.push(c[fi]);\n                    }\n                }\n                return callback(f);\n            }\n        } else {\n            var view;\n            if (zoom < 0) {\n                view = this.getUnzoomedView();\n            } else {\n                view = this.getZoomedView(zoom);\n            }\n            return view.readWigDataById(chr, min, max, callback);\n        }\n    }\n\n    BigWig.prototype.thresholdSearch = function(chrName, referencePoint, dir, threshold, callback) {\n        dir = (dir<0) ? -1 : 1;\n        var bwg = this;\n        var initialChr = this.chromsToIDs[chrName];\n        var candidates = [{chrOrd: 0, chr: initialChr, zoom: bwg.zoomLevels.length - 4, min: 0, max: 300000000, fromRef: true}]\n        for (var i = 1; i <= this.maxID + 1; ++i) {\n            var chrId = (initialChr + (dir*i)) % (this.maxID + 1);\n            if (chrId < 0)\n            chrId += (this.maxID + 1);\n            candidates.push({chrOrd: i, chr: chrId, zoom: bwg.zoomLevels.length - 1, min: 0, max: 300000000})\n        }\n\n        function fbThresholdSearchRecur() {\n            if (candidates.length == 0) {\n                return callback(null);\n            }\n            candidates.sort(function(c1, c2) {\n                var d = c1.zoom - c2.zoom;\n                if (d != 0)\n                return d;\n\n                d = c1.chrOrd - c2.chrOrd;\n                if (d != 0)\n                return d;\n                else\n                return c1.min - c2.min * dir;\n            });\n\n            var candidate = candidates.splice(0, 1)[0];\n            bwg._tsFetch(candidate.zoom, candidate.chr, candidate.min, candidate.max, function(feats) {\n                var rp = dir > 0 ? 0 : 300000000;\n                if (candidate.fromRef)\n                rp = referencePoint;\n\n                for (var fi = 0; fi < feats.length; ++fi) {\n                    var f = feats[fi];\n                    var score;\n                    if (f.maxScore != undefined)\n                    score = f.maxScore;\n                    else\n                    score = f.score;\n\n                    if (dir > 0) {\n                        if (score > threshold) {\n                            if (candidate.zoom < 0) {\n                                if (f.min > rp)\n                                return callback(f);\n                            } else if (f.max > rp) {\n                                candidates.push({chr: candidate.chr, chrOrd: candidate.chrOrd, zoom: candidate.zoom - 2, min: f.min, max: f.max, fromRef: candidate.fromRef});\n                            }\n                        }\n                    } else {\n                        if (score > threshold) {\n                            if (candidate.zoom < 0) {\n                                if (f.max < rp)\n                                return callback(f);\n                            } else if (f.min < rp) {\n                                candidates.push({chr: candidate.chr, chrOrd: candidate.chrOrd, zoom: candidate.zoom - 2, min: f.min, max: f.max, fromRef: candidate.fromRef});\n                            }\n                        }\n                    }\n                }\n                fbThresholdSearchRecur();\n            });\n        }\n\n        fbThresholdSearchRecur();\n    }\n\n    BigWig.prototype.getAutoSQL = function(callback) {\n        var thisB = this;\n        if (!this.asOffset)\n        return callback(null);\n\n        $.when(read(this.url, this.asOffset, 2048)).then(function(result) {\n            var ba = new Uint8Array(result);\n            var s = '';\n            for (var i = 0; i < ba.length; ++i) {\n                if (ba[i] == 0)\n                break;\n                s += String.fromCharCode(ba[i]);\n            }\n\n            /*\n            * Quick'n'dirty attempt to parse autoSql format.\n            * See: http://www.linuxjournal.com/files/linuxjournal.com/linuxjournal/articles/059/5949/5949l2.html\n            */\n\n            var header_re = /(\\w+)\\s+(\\w+)\\s+(\"([^\"]+)\")?\\s+\\(\\s*/;\n                var field_re = /([\\w\\[\\]]+)\\s+(\\w+)\\s*;\\s*(\"([^\"]+)\")?\\s*/g;\n\n            var headerMatch = header_re.exec(s);\n            if (headerMatch) {\n                var as = {\n                    declType: headerMatch[1],\n                    name: headerMatch[2],\n                    comment: headerMatch[4],\n\n                    fields: []\n                };\n\n                s = s.substring(headerMatch[0]);\n                for (var m = field_re.exec(s); m != null; m = field_re.exec(s)) {\n                    as.fields.push({type: m[1],\n                        name: m[2],\n                        comment: m[4]});\n                    }\n\n                    return callback(as);\n                }\n        });\n    };\n\n    BigWig.prototype.getExtraIndices = function(callback) {\n        var thisB = this;\n        if (this.version < 4 || this.extHeaderOffset == 0 || this.type != 'bigbed') {\n            return callback(null);\n        } else {\n            this.data.slice(this.extHeaderOffset, 64).fetch(function(result) {\n                if (!result) {\n                    return callback(null, \"Couldn't fetch extension header\");\n                }\n\n                var ba = new Uint8Array(result);\n                var sa = new Int16Array(result);\n                var la = new Int32Array(result);\n\n                var extHeaderSize = sa[0];\n                var extraIndexCount = sa[1];\n                var extraIndexListOffset = bwg_readOffset(ba, 4);\n\n                if (extraIndexCount == 0) {\n                    return callback(null);\n                }\n\n                // FIXME 20byte records only make sense for single-field indices.\n                // Right now, these seem to be the only things around, but the format\n                // is actually more general.\n                thisB.data.slice(extraIndexListOffset, extraIndexCount * 20).fetch(function(eil) {\n                    if (!eil) {\n                        return callback(null, \"Couldn't fetch index info\");\n                    }\n\n                    var ba = new Uint8Array(eil);\n                    var sa = new Int16Array(eil);\n                    var la = new Int32Array(eil);\n\n                    var indices = [];\n                    for (var ii = 0; ii < extraIndexCount; ++ii) {\n                        var eiType = sa[ii*10];\n                        var eiFieldCount = sa[ii*10 + 1];\n                        var eiOffset = bwg_readOffset(ba, ii*20 + 4);\n                        var eiField = sa[ii*10 + 8]\n                        var index = new BBIExtraIndex(thisB, eiType, eiFieldCount, eiOffset, eiField);\n                        indices.push(index);\n                    }\n                    callback(indices);\n                });\n            });\n        }\n    }\n\n    function BBIExtraIndex(bbi, type, fieldCount, offset, field) {\n        this.bbi = bbi;\n        this.type = type;\n        this.fieldCount = fieldCount;\n        this.offset = offset;\n        this.field = field;\n    }\n\n    BBIExtraIndex.prototype.lookup = function(name, callback) {\n        var thisB = this;\n\n        this.bbi.data.slice(this.offset, 32).fetch(function(bpt) {\n            var ba = new Uint8Array(bpt);\n            var sa = new Int16Array(bpt);\n            var la = new Int32Array(bpt);\n            var bptMagic = la[0];\n            var blockSize = la[1];\n            var keySize = la[2];\n            var valSize = la[3];\n            var itemCount = bwg_readOffset(ba, 16);\n            var rootNodeOffset = 32;\n\n            function bptReadNode(nodeOffset) {\n                thisB.bbi.data.slice(nodeOffset, 4 + (blockSize * (keySize + valSize))).fetch(function(node) {\n                    var ba = new Uint8Array(node);\n                    var sa = new Uint16Array(node);\n                    var la = new Uint32Array(node);\n\n                    var nodeType = ba[0];\n                    var cnt = sa[1];\n\n                    var offset = 4;\n                    if (nodeType == 0) {\n                        var lastChildOffset = null;\n                        for (var n = 0; n < cnt; ++n) {\n                            var key = '';\n                            for (var ki = 0; ki < keySize; ++ki) {\n                                var charCode = ba[offset++];\n                                if (charCode != 0) {\n                                    key += String.fromCharCode(charCode);\n                                }\n                            }\n\n                            var childOffset = bwg_readOffset(ba, offset);\n                            offset += 8;\n\n                            if (name.localeCompare(key) < 0 && lastChildOffset) {\n                                bptReadNode(lastChildOffset);\n                                return;\n                            }\n                            lastChildOffset = childOffset;\n                        }\n                        bptReadNode(lastChildOffset);\n                    } else {\n                        for (var n = 0; n < cnt; ++n) {\n                            var key = '';\n                            for (var ki = 0; ki < keySize; ++ki) {\n                                var charCode = ba[offset++];\n                                if (charCode != 0) {\n                                    key += String.fromCharCode(charCode);\n                                }\n                            }\n\n                            // Specific for EI case.\n                            if (key == name) {\n                                var start = bwg_readOffset(ba, offset);\n                                var length = readInt(ba, offset + 8);\n\n                                return thisB.bbi.getUnzoomedView().fetchFeatures(\n                                    function(chr, min, max, toks) {\n                                        if (toks && toks.length > thisB.field - 3)\n                                        return toks[thisB.field - 3] == name;\n                                    },\n                                    [{offset: start, size: length}],\n                                    callback);\n                                }\n                                offset += valSize;\n                            }\n                            return callback([]);\n                        }\n                    });\n                }\n\n                bptReadNode(thisB.offset + rootNodeOffset);\n        });\n    }\n\n    return {\n        makeBwg: makeBwg\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./galaxy/scripts/libs/bbi/bigwig.js\n// module id = 40\n// module chunks = 0 1 2 3","/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n//\n// Dalliance Genome Explorer\n// (c) Thomas Down 2006-2010\n//\n// spans.js: JavaScript Intset/Location port.\n//\n\ndefine([], function() {\n\n\"use strict\";\n\n\nfunction Range(min, max)\n{\n    if (typeof(min) != 'number' || typeof(max) != 'number')\n        throw 'Bad range ' + min + ',' + max;\n    this._min = min;\n    this._max = max;\n}\n\nRange.prototype.min = function() {\n    return this._min;\n}\n\nRange.prototype.max = function() {\n    return this._max;\n}\n\nRange.prototype.contains = function(pos) {\n    return pos >= this._min && pos <= this._max;\n}\n\nRange.prototype.isContiguous = function() {\n    return true;\n}\n\nRange.prototype.ranges = function() {\n    return [this];\n}\n\nRange.prototype._pushRanges = function(ranges) {\n    ranges.push(this);\n}\n\nRange.prototype.toString = function() {\n    return '[' + this._min + '-' + this._max + ']';\n}\n\nfunction _Compound(ranges) {\n    // given: a set of unsorted possibly overlapping ranges\n    // sort the input ranges\n    var sorted = ranges.sort(_rangeOrder);\n    // merge overlaps between adjacent ranges\n    var merged = [];\n    var current = sorted.shift();\n    sorted.forEach(function(range) {\n        if (range._min <= current._max) {\n            if (range._max > current._max) {\n                current._max = range._max;\n            }\n        }\n        else {\n            merged.push(current);\n            current = range;\n        }\n    });\n    merged.push(current);\n    this._ranges = merged;\n}\n\n_Compound.prototype.min = function() {\n    return this._ranges[0].min();\n}\n\n_Compound.prototype.max = function() {\n    return this._ranges[this._ranges.length - 1].max();\n}\n\n// returns the index of the first range that is not less than pos\n_Compound.prototype.lower_bound = function(pos) {\n    // first check if pos is out of range\n    var r = this.ranges();\n    if (pos > this.max()) return r.length;\n    if (pos < this.min()) return 0;\n    // do a binary search\n    var a=0, b=r.length - 1;\n    while (a <= b) {\n        var m = Math.floor((a+b)/2);\n        if (pos > r[m]._max) {\n            a = m+1;\n        }\n        else if (pos < r[m]._min) {\n            b = m-1;\n        }\n        else {\n            return m;\n        }\n    }\n    return a;\n}\n\n_Compound.prototype.contains = function(pos) {\n    var lb = this.lower_bound(pos);\n    if (lb < this._ranges.length && this._ranges[lb].contains(pos)) {\n        return true;\n    }\n    return false;\n}\n\n_Compound.prototype.insertRange = function(range) {\n    var lb = this.lower_bound(range._min);\n    if (lb === this._ranges.length) { // range follows this\n        this._ranges.push(range);\n        return;\n    }\n\n    var r = this.ranges();\n    if (range._max < r[lb]._min) { // range preceeds lb\n        this._ranges.splice(lb,0,range);\n        return;\n    }\n\n    // range overlaps lb (at least)\n    if (r[lb]._min < range._min) range._min = r[lb]._min;\n    var ub = lb+1;\n    while (ub < r.length && r[ub]._min <= range._max) {\n        ub++;\n    }\n    ub--;\n    // ub is the upper bound of the new range\n    if (r[ub]._max > range._max) range._max = r[ub]._max;\n\n    // splice range into this._ranges\n    this._ranges.splice(lb,ub-lb+1,range);\n    return;\n}\n\n_Compound.prototype.isContiguous = function() {\n    return this._ranges.length > 1;\n}\n\n_Compound.prototype.ranges = function() {\n    return this._ranges;\n}\n\n_Compound.prototype._pushRanges = function(ranges) {\n    for (var ri = 0; ri < this._ranges.length; ++ri)\n        ranges.push(this._ranges[ri]);\n}\n\n_Compound.prototype.toString = function() {\n    var s = '';\n    for (var r = 0; r < this._ranges.length; ++r) {\n        if (r>0) {\n            s = s + ',';\n        }\n        s = s + this._ranges[r].toString();\n    }\n    return s;\n}\n\nfunction union(s0, s1) {\n    if (! (s0 instanceof _Compound)) {\n        if (! (s0 instanceof Array))\n            s0 = [s0];\n        s0 = new _Compound(s0);\n    }\n\n    if (s1)\n        s0.insertRange(s1);\n\n    return s0;\n}\n\nfunction intersection(s0, s1) {\n    var r0 = s0.ranges();\n    var r1 = s1.ranges();\n    var l0 = r0.length, l1 = r1.length;\n    var i0 = 0, i1 = 0;\n    var or = [];\n\n    while (i0 < l0 && i1 < l1) {\n        var s0 = r0[i0], s1 = r1[i1];\n        var lapMin = Math.max(s0.min(), s1.min());\n        var lapMax = Math.min(s0.max(), s1.max());\n        if (lapMax >= lapMin) {\n            or.push(new Range(lapMin, lapMax));\n        }\n        if (s0.max() > s1.max()) {\n            ++i1;\n        } else {\n            ++i0;\n        }\n    }\n\n    if (or.length == 0) {\n        return null; // FIXME\n    } else if (or.length == 1) {\n        return or[0];\n    } else {\n        return new _Compound(or);\n    }\n}\n\nfunction coverage(s) {\n    var tot = 0;\n    var rl = s.ranges();\n    for (var ri = 0; ri < rl.length; ++ri) {\n        var r = rl[ri];\n        tot += (r.max() - r.min() + 1);\n    }\n    return tot;\n}\n\n\n\nfunction rangeOrder(a, b)\n{\n    if (a.min() < b.min()) {\n        return -1;\n    } else if (a.min() > b.min()) {\n        return 1;\n    } else if (a.max() < b.max()) {\n        return -1;\n    } else if (b.max() > a.max()) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nfunction _rangeOrder(a, b)\n{\n    if (a._min < b._min) {\n        return -1;\n    } else if (a._min > b._min) {\n        return 1;\n    } else if (a._max < b._max) {\n        return -1;\n    } else if (b._max > a._max) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nreturn {\n        Range: Range,\n        union: union,\n        intersection: intersection,\n        coverage: coverage,\n        rangeOver: rangeOrder,\n        _rangeOrder: _rangeOrder\n};\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./galaxy/scripts/libs/bbi/spans.js\n// module id = 41\n// module chunks = 0 1 2 3","/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n//\n// Javascript ZLib\n// By Thomas Down 2010-2011\n//\n// Based very heavily on portions of jzlib (by ymnk@jcraft.com), who in\n// turn credits Jean-loup Gailly and Mark Adler for the original zlib code.\n//\n// inflate.js: ZLib inflate code\n//\n\n//\n// Shared constants\n//\n\ndefine([],function() {\n\nvar MAX_WBITS=15; // 32K LZ77 window\nvar DEF_WBITS=MAX_WBITS;\nvar MAX_MEM_LEVEL=9;\nvar MANY=1440;\nvar BMAX = 15;\n\n// preset dictionary flag in zlib header\nvar PRESET_DICT=0x20;\n\nvar Z_NO_FLUSH=0;\nvar Z_PARTIAL_FLUSH=1;\nvar Z_SYNC_FLUSH=2;\nvar Z_FULL_FLUSH=3;\nvar Z_FINISH=4;\n\nvar Z_DEFLATED=8;\n\nvar Z_OK=0;\nvar Z_STREAM_END=1;\nvar Z_NEED_DICT=2;\nvar Z_ERRNO=-1;\nvar Z_STREAM_ERROR=-2;\nvar Z_DATA_ERROR=-3;\nvar Z_MEM_ERROR=-4;\nvar Z_BUF_ERROR=-5;\nvar Z_VERSION_ERROR=-6;\n\nvar METHOD=0;   // waiting for method byte\nvar FLAG=1;     // waiting for flag byte\nvar DICT4=2;    // four dictionary check bytes to go\nvar DICT3=3;    // three dictionary check bytes to go\nvar DICT2=4;    // two dictionary check bytes to go\nvar DICT1=5;    // one dictionary check byte to go\nvar DICT0=6;    // waiting for inflateSetDictionary\nvar BLOCKS=7;   // decompressing blocks\nvar CHECK4=8;   // four check bytes to go\nvar CHECK3=9;   // three check bytes to go\nvar CHECK2=10;  // two check bytes to go\nvar CHECK1=11;  // one check byte to go\nvar DONE=12;    // finished check, done\nvar BAD=13;     // got an error--stay here\n\nvar inflate_mask = [0x00000000, 0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff, 0x000001ff, 0x000003ff, 0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff];\n\nvar IB_TYPE=0;  // get type bits (3, including end bit)\nvar IB_LENS=1;  // get lengths for stored\nvar IB_STORED=2;// processing stored block\nvar IB_TABLE=3; // get table lengths\nvar IB_BTREE=4; // get bit lengths tree for a dynamic block\nvar IB_DTREE=5; // get length, distance trees for a dynamic block\nvar IB_CODES=6; // processing fixed or dynamic block\nvar IB_DRY=7;   // output remaining window bytes\nvar IB_DONE=8;  // finished last block, done\nvar IB_BAD=9;   // ot a data error--stuck here\n\nvar fixed_bl = 9;\nvar fixed_bd = 5;\n\nvar fixed_tl = [\n    96,7,256, 0,8,80, 0,8,16, 84,8,115,\n    82,7,31, 0,8,112, 0,8,48, 0,9,192,\n    80,7,10, 0,8,96, 0,8,32, 0,9,160,\n    0,8,0, 0,8,128, 0,8,64, 0,9,224,\n    80,7,6, 0,8,88, 0,8,24, 0,9,144,\n    83,7,59, 0,8,120, 0,8,56, 0,9,208,\n    81,7,17, 0,8,104, 0,8,40, 0,9,176,\n    0,8,8, 0,8,136, 0,8,72, 0,9,240,\n    80,7,4, 0,8,84, 0,8,20, 85,8,227,\n    83,7,43, 0,8,116, 0,8,52, 0,9,200,\n    81,7,13, 0,8,100, 0,8,36, 0,9,168,\n    0,8,4, 0,8,132, 0,8,68, 0,9,232,\n    80,7,8, 0,8,92, 0,8,28, 0,9,152,\n    84,7,83, 0,8,124, 0,8,60, 0,9,216,\n    82,7,23, 0,8,108, 0,8,44, 0,9,184,\n    0,8,12, 0,8,140, 0,8,76, 0,9,248,\n    80,7,3, 0,8,82, 0,8,18, 85,8,163,\n    83,7,35, 0,8,114, 0,8,50, 0,9,196,\n    81,7,11, 0,8,98, 0,8,34, 0,9,164,\n    0,8,2, 0,8,130, 0,8,66, 0,9,228,\n    80,7,7, 0,8,90, 0,8,26, 0,9,148,\n    84,7,67, 0,8,122, 0,8,58, 0,9,212,\n    82,7,19, 0,8,106, 0,8,42, 0,9,180,\n    0,8,10, 0,8,138, 0,8,74, 0,9,244,\n    80,7,5, 0,8,86, 0,8,22, 192,8,0,\n    83,7,51, 0,8,118, 0,8,54, 0,9,204,\n    81,7,15, 0,8,102, 0,8,38, 0,9,172,\n    0,8,6, 0,8,134, 0,8,70, 0,9,236,\n    80,7,9, 0,8,94, 0,8,30, 0,9,156,\n    84,7,99, 0,8,126, 0,8,62, 0,9,220,\n    82,7,27, 0,8,110, 0,8,46, 0,9,188,\n    0,8,14, 0,8,142, 0,8,78, 0,9,252,\n    96,7,256, 0,8,81, 0,8,17, 85,8,131,\n    82,7,31, 0,8,113, 0,8,49, 0,9,194,\n    80,7,10, 0,8,97, 0,8,33, 0,9,162,\n    0,8,1, 0,8,129, 0,8,65, 0,9,226,\n    80,7,6, 0,8,89, 0,8,25, 0,9,146,\n    83,7,59, 0,8,121, 0,8,57, 0,9,210,\n    81,7,17, 0,8,105, 0,8,41, 0,9,178,\n    0,8,9, 0,8,137, 0,8,73, 0,9,242,\n    80,7,4, 0,8,85, 0,8,21, 80,8,258,\n    83,7,43, 0,8,117, 0,8,53, 0,9,202,\n    81,7,13, 0,8,101, 0,8,37, 0,9,170,\n    0,8,5, 0,8,133, 0,8,69, 0,9,234,\n    80,7,8, 0,8,93, 0,8,29, 0,9,154,\n    84,7,83, 0,8,125, 0,8,61, 0,9,218,\n    82,7,23, 0,8,109, 0,8,45, 0,9,186,\n    0,8,13, 0,8,141, 0,8,77, 0,9,250,\n    80,7,3, 0,8,83, 0,8,19, 85,8,195,\n    83,7,35, 0,8,115, 0,8,51, 0,9,198,\n    81,7,11, 0,8,99, 0,8,35, 0,9,166,\n    0,8,3, 0,8,131, 0,8,67, 0,9,230,\n    80,7,7, 0,8,91, 0,8,27, 0,9,150,\n    84,7,67, 0,8,123, 0,8,59, 0,9,214,\n    82,7,19, 0,8,107, 0,8,43, 0,9,182,\n    0,8,11, 0,8,139, 0,8,75, 0,9,246,\n    80,7,5, 0,8,87, 0,8,23, 192,8,0,\n    83,7,51, 0,8,119, 0,8,55, 0,9,206,\n    81,7,15, 0,8,103, 0,8,39, 0,9,174,\n    0,8,7, 0,8,135, 0,8,71, 0,9,238,\n    80,7,9, 0,8,95, 0,8,31, 0,9,158,\n    84,7,99, 0,8,127, 0,8,63, 0,9,222,\n    82,7,27, 0,8,111, 0,8,47, 0,9,190,\n    0,8,15, 0,8,143, 0,8,79, 0,9,254,\n    96,7,256, 0,8,80, 0,8,16, 84,8,115,\n    82,7,31, 0,8,112, 0,8,48, 0,9,193,\n\n    80,7,10, 0,8,96, 0,8,32, 0,9,161,\n    0,8,0, 0,8,128, 0,8,64, 0,9,225,\n    80,7,6, 0,8,88, 0,8,24, 0,9,145,\n    83,7,59, 0,8,120, 0,8,56, 0,9,209,\n    81,7,17, 0,8,104, 0,8,40, 0,9,177,\n    0,8,8, 0,8,136, 0,8,72, 0,9,241,\n    80,7,4, 0,8,84, 0,8,20, 85,8,227,\n    83,7,43, 0,8,116, 0,8,52, 0,9,201,\n    81,7,13, 0,8,100, 0,8,36, 0,9,169,\n    0,8,4, 0,8,132, 0,8,68, 0,9,233,\n    80,7,8, 0,8,92, 0,8,28, 0,9,153,\n    84,7,83, 0,8,124, 0,8,60, 0,9,217,\n    82,7,23, 0,8,108, 0,8,44, 0,9,185,\n    0,8,12, 0,8,140, 0,8,76, 0,9,249,\n    80,7,3, 0,8,82, 0,8,18, 85,8,163,\n    83,7,35, 0,8,114, 0,8,50, 0,9,197,\n    81,7,11, 0,8,98, 0,8,34, 0,9,165,\n    0,8,2, 0,8,130, 0,8,66, 0,9,229,\n    80,7,7, 0,8,90, 0,8,26, 0,9,149,\n    84,7,67, 0,8,122, 0,8,58, 0,9,213,\n    82,7,19, 0,8,106, 0,8,42, 0,9,181,\n    0,8,10, 0,8,138, 0,8,74, 0,9,245,\n    80,7,5, 0,8,86, 0,8,22, 192,8,0,\n    83,7,51, 0,8,118, 0,8,54, 0,9,205,\n    81,7,15, 0,8,102, 0,8,38, 0,9,173,\n    0,8,6, 0,8,134, 0,8,70, 0,9,237,\n    80,7,9, 0,8,94, 0,8,30, 0,9,157,\n    84,7,99, 0,8,126, 0,8,62, 0,9,221,\n    82,7,27, 0,8,110, 0,8,46, 0,9,189,\n    0,8,14, 0,8,142, 0,8,78, 0,9,253,\n    96,7,256, 0,8,81, 0,8,17, 85,8,131,\n    82,7,31, 0,8,113, 0,8,49, 0,9,195,\n    80,7,10, 0,8,97, 0,8,33, 0,9,163,\n    0,8,1, 0,8,129, 0,8,65, 0,9,227,\n    80,7,6, 0,8,89, 0,8,25, 0,9,147,\n    83,7,59, 0,8,121, 0,8,57, 0,9,211,\n    81,7,17, 0,8,105, 0,8,41, 0,9,179,\n    0,8,9, 0,8,137, 0,8,73, 0,9,243,\n    80,7,4, 0,8,85, 0,8,21, 80,8,258,\n    83,7,43, 0,8,117, 0,8,53, 0,9,203,\n    81,7,13, 0,8,101, 0,8,37, 0,9,171,\n    0,8,5, 0,8,133, 0,8,69, 0,9,235,\n    80,7,8, 0,8,93, 0,8,29, 0,9,155,\n    84,7,83, 0,8,125, 0,8,61, 0,9,219,\n    82,7,23, 0,8,109, 0,8,45, 0,9,187,\n    0,8,13, 0,8,141, 0,8,77, 0,9,251,\n    80,7,3, 0,8,83, 0,8,19, 85,8,195,\n    83,7,35, 0,8,115, 0,8,51, 0,9,199,\n    81,7,11, 0,8,99, 0,8,35, 0,9,167,\n    0,8,3, 0,8,131, 0,8,67, 0,9,231,\n    80,7,7, 0,8,91, 0,8,27, 0,9,151,\n    84,7,67, 0,8,123, 0,8,59, 0,9,215,\n    82,7,19, 0,8,107, 0,8,43, 0,9,183,\n    0,8,11, 0,8,139, 0,8,75, 0,9,247,\n    80,7,5, 0,8,87, 0,8,23, 192,8,0,\n    83,7,51, 0,8,119, 0,8,55, 0,9,207,\n    81,7,15, 0,8,103, 0,8,39, 0,9,175,\n    0,8,7, 0,8,135, 0,8,71, 0,9,239,\n    80,7,9, 0,8,95, 0,8,31, 0,9,159,\n    84,7,99, 0,8,127, 0,8,63, 0,9,223,\n    82,7,27, 0,8,111, 0,8,47, 0,9,191,\n    0,8,15, 0,8,143, 0,8,79, 0,9,255\n];\nvar fixed_td = [\n    80,5,1, 87,5,257, 83,5,17, 91,5,4097,\n    81,5,5, 89,5,1025, 85,5,65, 93,5,16385,\n    80,5,3, 88,5,513, 84,5,33, 92,5,8193,\n    82,5,9, 90,5,2049, 86,5,129, 192,5,24577,\n    80,5,2, 87,5,385, 83,5,25, 91,5,6145,\n    81,5,7, 89,5,1537, 85,5,97, 93,5,24577,\n    80,5,4, 88,5,769, 84,5,49, 92,5,12289,\n    82,5,13, 90,5,3073, 86,5,193, 192,5,24577\n];\n\n  // Tables for deflate from PKZIP's appnote.txt.\n  var cplens = [ // Copy lengths for literal codes 257..285\n        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n        35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n  ];\n\n  // see note #13 above about 258\n  var cplext = [ // Extra bits for literal codes 257..285\n        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2,\n        3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112  // 112==invalid\n  ];\n\n var cpdist = [ // Copy offsets for distance codes 0..29\n        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n        257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n        8193, 12289, 16385, 24577\n  ];\n\n  var cpdext = [ // Extra bits for distance codes\n        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,\n        7, 7, 8, 8, 9, 9, 10, 10, 11, 11,\n        12, 12, 13, 13];\n\n//\n// ZStream.java\n//\n\nfunction ZStream() {\n}\n\n\nZStream.prototype.inflateInit = function(w, nowrap) {\n    if (!w) {\n\tw = DEF_WBITS;\n    }\n    if (nowrap) {\n\tnowrap = false;\n    }\n    this.istate = new Inflate();\n    return this.istate.inflateInit(this, nowrap?-w:w);\n}\n\nZStream.prototype.inflate = function(f) {\n    if(this.istate==null) return Z_STREAM_ERROR;\n    return this.istate.inflate(this, f);\n}\n\nZStream.prototype.inflateEnd = function(){\n    if(this.istate==null) return Z_STREAM_ERROR;\n    var ret=istate.inflateEnd(this);\n    this.istate = null;\n    return ret;\n}\nZStream.prototype.inflateSync = function(){\n    // if(istate == null) return Z_STREAM_ERROR;\n    return istate.inflateSync(this);\n}\nZStream.prototype.inflateSetDictionary = function(dictionary, dictLength){\n    // if(istate == null) return Z_STREAM_ERROR;\n    return istate.inflateSetDictionary(this, dictionary, dictLength);\n}\n\n/*\n\n  public int deflateInit(int level){\n    return deflateInit(level, MAX_WBITS);\n  }\n  public int deflateInit(int level, boolean nowrap){\n    return deflateInit(level, MAX_WBITS, nowrap);\n  }\n  public int deflateInit(int level, int bits){\n    return deflateInit(level, bits, false);\n  }\n  public int deflateInit(int level, int bits, boolean nowrap){\n    dstate=new Deflate();\n    return dstate.deflateInit(this, level, nowrap?-bits:bits);\n  }\n  public int deflate(int flush){\n    if(dstate==null){\n      return Z_STREAM_ERROR;\n    }\n    return dstate.deflate(this, flush);\n  }\n  public int deflateEnd(){\n    if(dstate==null) return Z_STREAM_ERROR;\n    int ret=dstate.deflateEnd();\n    dstate=null;\n    return ret;\n  }\n  public int deflateParams(int level, int strategy){\n    if(dstate==null) return Z_STREAM_ERROR;\n    return dstate.deflateParams(this, level, strategy);\n  }\n  public int deflateSetDictionary (byte[] dictionary, int dictLength){\n    if(dstate == null)\n      return Z_STREAM_ERROR;\n    return dstate.deflateSetDictionary(this, dictionary, dictLength);\n  }\n\n*/\n\n/*\n  // Flush as much pending output as possible. All deflate() output goes\n  // through this function so some applications may wish to modify it\n  // to avoid allocating a large strm->next_out buffer and copying into it.\n  // (See also read_buf()).\n  void flush_pending(){\n    int len=dstate.pending;\n\n    if(len>avail_out) len=avail_out;\n    if(len==0) return;\n\n    if(dstate.pending_buf.length<=dstate.pending_out ||\n       next_out.length<=next_out_index ||\n       dstate.pending_buf.length<(dstate.pending_out+len) ||\n       next_out.length<(next_out_index+len)){\n      System.out.println(dstate.pending_buf.length+\", \"+dstate.pending_out+\n\t\t\t \", \"+next_out.length+\", \"+next_out_index+\", \"+len);\n      System.out.println(\"avail_out=\"+avail_out);\n    }\n\n    System.arraycopy(dstate.pending_buf, dstate.pending_out,\n\t\t     next_out, next_out_index, len);\n\n    next_out_index+=len;\n    dstate.pending_out+=len;\n    total_out+=len;\n    avail_out-=len;\n    dstate.pending-=len;\n    if(dstate.pending==0){\n      dstate.pending_out=0;\n    }\n  }\n\n  // Read a new buffer from the current input stream, update the adler32\n  // and total number of bytes read.  All deflate() input goes through\n  // this function so some applications may wish to modify it to avoid\n  // allocating a large strm->next_in buffer and copying from it.\n  // (See also flush_pending()).\n  int read_buf(byte[] buf, int start, int size) {\n    int len=avail_in;\n\n    if(len>size) len=size;\n    if(len==0) return 0;\n\n    avail_in-=len;\n\n    if(dstate.noheader==0) {\n      adler=_adler.adler32(adler, next_in, next_in_index, len);\n    }\n    System.arraycopy(next_in, next_in_index, buf, start, len);\n    next_in_index  += len;\n    total_in += len;\n    return len;\n  }\n\n  public void free(){\n    next_in=null;\n    next_out=null;\n    msg=null;\n    _adler=null;\n  }\n}\n*/\n\n\n//\n// Inflate.java\n//\n\nfunction Inflate() {\n    this.was = [0];\n}\n\nInflate.prototype.inflateReset = function(z) {\n    if(z == null || z.istate == null) return Z_STREAM_ERROR;\n\n    z.total_in = z.total_out = 0;\n    z.msg = null;\n    z.istate.mode = z.istate.nowrap!=0 ? BLOCKS : METHOD;\n    z.istate.blocks.reset(z, null);\n    return Z_OK;\n}\n\nInflate.prototype.inflateEnd = function(z){\n    if(this.blocks != null)\n      this.blocks.free(z);\n    this.blocks=null;\n    return Z_OK;\n}\n\nInflate.prototype.inflateInit = function(z, w){\n    z.msg = null;\n    this.blocks = null;\n\n    // handle undocumented nowrap option (no zlib header or check)\n    nowrap = 0;\n    if(w < 0){\n      w = - w;\n      nowrap = 1;\n    }\n\n    // set window size\n    if(w<8 ||w>15){\n      this.inflateEnd(z);\n      return Z_STREAM_ERROR;\n    }\n    this.wbits=w;\n\n    z.istate.blocks=new InfBlocks(z,\n\t\t\t\t  z.istate.nowrap!=0 ? null : this,\n\t\t\t\t  1<<w);\n\n    // reset state\n    this.inflateReset(z);\n    return Z_OK;\n  }\n\nInflate.prototype.inflate = function(z, f){\n    var r, b;\n\n    if(z == null || z.istate == null || z.next_in == null)\n      return Z_STREAM_ERROR;\n    f = f == Z_FINISH ? Z_BUF_ERROR : Z_OK;\n    r = Z_BUF_ERROR;\n    while (true){\n      switch (z.istate.mode){\n      case METHOD:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        if(((z.istate.method = z.next_in[z.next_in_index++])&0xf)!=Z_DEFLATED){\n          z.istate.mode = BAD;\n          z.msg=\"unknown compression method\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n        if((z.istate.method>>4)+8>z.istate.wbits){\n          z.istate.mode = BAD;\n          z.msg=\"invalid window size\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n        z.istate.mode=FLAG;\n      case FLAG:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        b = (z.next_in[z.next_in_index++])&0xff;\n\n        if((((z.istate.method << 8)+b) % 31)!=0){\n          z.istate.mode = BAD;\n          z.msg = \"incorrect header check\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n\n        if((b&PRESET_DICT)==0){\n          z.istate.mode = BLOCKS;\n          break;\n        }\n        z.istate.mode = DICT4;\n      case DICT4:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need=((z.next_in[z.next_in_index++]&0xff)<<24)&0xff000000;\n        z.istate.mode=DICT3;\n      case DICT3:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<16)&0xff0000;\n        z.istate.mode=DICT2;\n      case DICT2:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<8)&0xff00;\n        z.istate.mode=DICT1;\n      case DICT1:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need += (z.next_in[z.next_in_index++]&0xff);\n        z.adler = z.istate.need;\n        z.istate.mode = DICT0;\n        return Z_NEED_DICT;\n      case DICT0:\n        z.istate.mode = BAD;\n        z.msg = \"need dictionary\";\n        z.istate.marker = 0;       // can try inflateSync\n        return Z_STREAM_ERROR;\n      case BLOCKS:\n\n        r = z.istate.blocks.proc(z, r);\n        if(r == Z_DATA_ERROR){\n          z.istate.mode = BAD;\n          z.istate.marker = 0;     // can try inflateSync\n          break;\n        }\n        if(r == Z_OK){\n          r = f;\n        }\n        if(r != Z_STREAM_END){\n          return r;\n        }\n        r = f;\n        z.istate.blocks.reset(z, z.istate.was);\n        if(z.istate.nowrap!=0){\n          z.istate.mode=DONE;\n          break;\n        }\n        z.istate.mode=CHECK4;\n      case CHECK4:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need=((z.next_in[z.next_in_index++]&0xff)<<24)&0xff000000;\n        z.istate.mode=CHECK3;\n      case CHECK3:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<16)&0xff0000;\n        z.istate.mode = CHECK2;\n      case CHECK2:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<8)&0xff00;\n        z.istate.mode = CHECK1;\n      case CHECK1:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=(z.next_in[z.next_in_index++]&0xff);\n\n        if(((z.istate.was[0])) != ((z.istate.need))){\n          z.istate.mode = BAD;\n          z.msg = \"incorrect data check\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n\n        z.istate.mode = DONE;\n      case DONE:\n        return Z_STREAM_END;\n      case BAD:\n        return Z_DATA_ERROR;\n      default:\n        return Z_STREAM_ERROR;\n      }\n    }\n  }\n\n\nInflate.prototype.inflateSetDictionary = function(z,  dictionary, dictLength) {\n    var index=0;\n    var length = dictLength;\n    if(z==null || z.istate == null|| z.istate.mode != DICT0)\n      return Z_STREAM_ERROR;\n\n    if(z._adler.adler32(1, dictionary, 0, dictLength)!=z.adler){\n      return Z_DATA_ERROR;\n    }\n\n    z.adler = z._adler.adler32(0, null, 0, 0);\n\n    if(length >= (1<<z.istate.wbits)){\n      length = (1<<z.istate.wbits)-1;\n      index=dictLength - length;\n    }\n    z.istate.blocks.set_dictionary(dictionary, index, length);\n    z.istate.mode = BLOCKS;\n    return Z_OK;\n  }\n\n//  static private byte[] mark = {(byte)0, (byte)0, (byte)0xff, (byte)0xff};\nvar mark = [0, 0, 255, 255]\n\nInflate.prototype.inflateSync = function(z){\n    var n;       // number of bytes to look at\n    var p;       // pointer to bytes\n    var m;       // number of marker bytes found in a row\n    var r, w;   // temporaries to save total_in and total_out\n\n    // set up\n    if(z == null || z.istate == null)\n      return Z_STREAM_ERROR;\n    if(z.istate.mode != BAD){\n      z.istate.mode = BAD;\n      z.istate.marker = 0;\n    }\n    if((n=z.avail_in)==0)\n      return Z_BUF_ERROR;\n    p=z.next_in_index;\n    m=z.istate.marker;\n\n    // search\n    while (n!=0 && m < 4){\n      if(z.next_in[p] == mark[m]){\n        m++;\n      }\n      else if(z.next_in[p]!=0){\n        m = 0;\n      }\n      else{\n        m = 4 - m;\n      }\n      p++; n--;\n    }\n\n    // restore\n    z.total_in += p-z.next_in_index;\n    z.next_in_index = p;\n    z.avail_in = n;\n    z.istate.marker = m;\n\n    // return no joy or set up to restart on a new block\n    if(m != 4){\n      return Z_DATA_ERROR;\n    }\n    r=z.total_in;  w=z.total_out;\n    this.inflateReset(z);\n    z.total_in=r;  z.total_out = w;\n    z.istate.mode = BLOCKS;\n    return Z_OK;\n}\n\n  // Returns true if inflate is currently at the end of a block generated\n  // by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP\n  // implementation to provide an additional safety check. PPP uses Z_SYNC_FLUSH\n  // but removes the length bytes of the resulting empty stored block. When\n  // decompressing, PPP checks that at the end of input packet, inflate is\n  // waiting for these length bytes.\nInflate.prototype.inflateSyncPoint = function(z){\n    if(z == null || z.istate == null || z.istate.blocks == null)\n      return Z_STREAM_ERROR;\n    return z.istate.blocks.sync_point();\n}\n\n\n//\n// InfBlocks.java\n//\n\nvar INFBLOCKS_BORDER = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\nfunction InfBlocks(z, checkfn, w) {\n    this.hufts=new Int32Array(MANY*3);\n    this.window=new Uint8Array(w);\n    this.end=w;\n    this.checkfn = checkfn;\n    this.mode = IB_TYPE;\n    this.reset(z, null);\n\n    this.left = 0;            // if STORED, bytes left to copy\n\n    this.table = 0;           // table lengths (14 bits)\n    this.index = 0;           // index into blens (or border)\n    this.blens = null;         // bit lengths of codes\n    this.bb=new Int32Array(1); // bit length tree depth\n    this.tb=new Int32Array(1); // bit length decoding tree\n\n    this.codes = new InfCodes();\n\n    this.last = 0;            // true if this block is the last block\n\n  // mode independent information\n    this.bitk = 0;            // bits in bit buffer\n    this.bitb = 0;            // bit buffer\n    this.read = 0;            // window read pointer\n    this.write = 0;           // window write pointer\n    this.check = 0;          // check on output\n\n    this.inftree=new InfTree();\n}\n\n\n\n\nInfBlocks.prototype.reset = function(z, c){\n    if(c) c[0]=this.check;\n    if(this.mode==IB_CODES){\n      this.codes.free(z);\n    }\n    this.mode=IB_TYPE;\n    this.bitk=0;\n    this.bitb=0;\n    this.read=this.write=0;\n\n    if(this.checkfn)\n      z.adler=this.check=z._adler.adler32(0, null, 0, 0);\n  }\n\n InfBlocks.prototype.proc = function(z, r){\n    var t;              // temporary storage\n    var b;              // bit buffer\n    var k;              // bits in bit buffer\n    var p;              // input data pointer\n    var n;              // bytes available there\n    var q;              // output window write pointer\n    var m;              // bytes to end of window or read pointer\n\n    // copy input/output information to locals (UPDATE macro restores)\n    {p=z.next_in_index;n=z.avail_in;b=this.bitb;k=this.bitk;}\n    {q=this.write;m=(q<this.read ? this.read-q-1 : this.end-q);}\n\n    // process input based on current state\n    while(true){\n      switch (this.mode){\n      case IB_TYPE:\n\n\twhile(k<(3)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k;\n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\tt = (b & 7);\n\tthis.last = t & 1;\n\n\tswitch (t >>> 1){\n        case 0:                         // stored\n          {b>>>=(3);k-=(3);}\n          t = k & 7;                    // go to byte boundary\n\n          {b>>>=(t);k-=(t);}\n          this.mode = IB_LENS;                  // get length of stored block\n          break;\n        case 1:                         // fixed\n          {\n              var bl=new Int32Array(1);\n\t      var bd=new Int32Array(1);\n              var tl=[];\n\t      var td=[];\n\n\t      inflate_trees_fixed(bl, bd, tl, td, z);\n              this.codes.init(bl[0], bd[0], tl[0], 0, td[0], 0, z);\n          }\n\n          {b>>>=(3);k-=(3);}\n\n          this.mode = IB_CODES;\n          break;\n        case 2:                         // dynamic\n\n          {b>>>=(3);k-=(3);}\n\n          this.mode = IB_TABLE;\n          break;\n        case 3:                         // illegal\n\n          {b>>>=(3);k-=(3);}\n          this.mode = BAD;\n          z.msg = \"invalid block type\";\n          r = Z_DATA_ERROR;\n\n\t  this.bitb=b; this.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\tbreak;\n      case IB_LENS:\n\twhile(k<(32)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k;\n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tif ((((~b) >>> 16) & 0xffff) != (b & 0xffff)){\n\t  this.mode = BAD;\n\t  z.msg = \"invalid stored block lengths\";\n\t  r = Z_DATA_ERROR;\n\n\t  this.bitb=b; this.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\tthis.left = (b & 0xffff);\n\tb = k = 0;                       // dump bits\n\tthis.mode = this.left!=0 ? IB_STORED : (this.last!=0 ? IB_DRY : IB_TYPE);\n\tbreak;\n      case IB_STORED:\n\tif (n == 0){\n\t  this.bitb=b; this.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\n\tif(m==0){\n\t  if(q==end&&read!=0){\n\t    q=0; m=(q<this.read ? this.read-q-1 : this.end-q);\n\t  }\n\t  if(m==0){\n\t    this.write=q;\n\t    r=this.inflate_flush(z,r);\n\t    q=this.write; m = (q < this.read ? this.read-q-1 : this.end-q);\n\t    if(q==this.end && this.read != 0){\n\t      q=0; m = (q < this.read ? this.read-q-1 : this.end-q);\n\t    }\n\t    if(m==0){\n\t      this.bitb=b; this.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    }\n\t  }\n\t}\n\tr=Z_OK;\n\n\tt = this.left;\n\tif(t>n) t = n;\n\tif(t>m) t = m;\n\tarrayCopy(z.next_in, p, this.window, q, t);\n\tp += t;  n -= t;\n\tq += t;  m -= t;\n\tif ((this.left -= t) != 0)\n\t  break;\n\tthis.mode = (this.last != 0 ? IB_DRY : IB_TYPE);\n\tbreak;\n      case IB_TABLE:\n\n\twhile(k<(14)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k;\n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.table = t = (b & 0x3fff);\n\tif ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29)\n\t  {\n\t    this.mode = IB_BAD;\n\t    z.msg = \"too many length or distance symbols\";\n\t    r = Z_DATA_ERROR;\n\n\t    this.bitb=b; this.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  }\n\tt = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);\n\tif(this.blens==null || this.blens.length<t){\n\t    this.blens=new Int32Array(t);\n\t}\n\telse{\n\t  for(var i=0; i<t; i++){\n              this.blens[i]=0;\n          }\n\t}\n\n\t{b>>>=(14);k-=(14);}\n\n\tthis.index = 0;\n\tmode = IB_BTREE;\n      case IB_BTREE:\n\twhile (this.index < 4 + (this.table >>> 10)){\n\t  while(k<(3)){\n\t    if(n!=0){\n\t      r=Z_OK;\n\t    }\n\t    else{\n\t      this.bitb=b; this.bitk=k;\n\t      z.avail_in=n;\n\t      z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    };\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;\n\t    k+=8;\n\t  }\n\n\t  this.blens[INFBLOCKS_BORDER[this.index++]] = b&7;\n\n\t  {b>>>=(3);k-=(3);}\n\t}\n\n\twhile(this.index < 19){\n\t  this.blens[INFBLOCKS_BORDER[this.index++]] = 0;\n\t}\n\n\tthis.bb[0] = 7;\n\tt = this.inftree.inflate_trees_bits(this.blens, this.bb, this.tb, this.hufts, z);\n\tif (t != Z_OK){\n\t  r = t;\n\t  if (r == Z_DATA_ERROR){\n\t    this.blens=null;\n\t    this.mode = IB_BAD;\n\t  }\n\n\t  this.bitb=b; this.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\n\tthis.index = 0;\n\tthis.mode = IB_DTREE;\n      case IB_DTREE:\n\twhile (true){\n\t  t = this.table;\n\t  if(!(this.index < 258 + (t & 0x1f) + ((t >> 5) & 0x1f))){\n\t    break;\n\t  }\n\n\t  var h; //int[]\n\t  var i, j, c;\n\n\t  t = this.bb[0];\n\n\t  while(k<(t)){\n\t    if(n!=0){\n\t      r=Z_OK;\n\t    }\n\t    else{\n\t      this.bitb=b; this.bitk=k;\n\t      z.avail_in=n;\n\t      z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    };\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;\n\t    k+=8;\n\t  }\n\n//\t  if (this.tb[0]==-1){\n//            dlog(\"null...\");\n//\t  }\n\n\t  t=this.hufts[(this.tb[0]+(b & inflate_mask[t]))*3+1];\n\t  c=this.hufts[(this.tb[0]+(b & inflate_mask[t]))*3+2];\n\n\t  if (c < 16){\n\t    b>>>=(t);k-=(t);\n\t    this.blens[this.index++] = c;\n\t  }\n\t  else { // c == 16..18\n\t    i = c == 18 ? 7 : c - 14;\n\t    j = c == 18 ? 11 : 3;\n\n\t    while(k<(t+i)){\n\t      if(n!=0){\n\t\tr=Z_OK;\n\t      }\n\t      else{\n\t\tthis.bitb=b; this.bitk=k;\n\t\tz.avail_in=n;\n\t\tz.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t\tthis.write=q;\n\t\treturn this.inflate_flush(z,r);\n\t      };\n\t      n--;\n\t      b|=(z.next_in[p++]&0xff)<<k;\n\t      k+=8;\n\t    }\n\n\t    b>>>=(t);k-=(t);\n\n\t    j += (b & inflate_mask[i]);\n\n\t    b>>>=(i);k-=(i);\n\n\t    i = this.index;\n\t    t = this.table;\n\t    if (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) ||\n\t\t(c == 16 && i < 1)){\n\t      this.blens=null;\n\t      this.mode = IB_BAD;\n\t      z.msg = \"invalid bit length repeat\";\n\t      r = Z_DATA_ERROR;\n\n\t      this.bitb=b; this.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    }\n\n\t    c = c == 16 ? this.blens[i-1] : 0;\n\t    do{\n\t      this.blens[i++] = c;\n\t    }\n\t    while (--j!=0);\n\t    this.index = i;\n\t  }\n\t}\n\n\tthis.tb[0]=-1;\n\t{\n\t    var bl=new Int32Array(1);\n\t    var bd=new Int32Array(1);\n\t    var tl=new Int32Array(1);\n\t    var td=new Int32Array(1);\n\t    bl[0] = 9;         // must be <= 9 for lookahead assumptions\n\t    bd[0] = 6;         // must be <= 9 for lookahead assumptions\n\n\t    t = this.table;\n\t    t = this.inftree.inflate_trees_dynamic(257 + (t & 0x1f),\n\t\t\t\t\t      1 + ((t >> 5) & 0x1f),\n\t\t\t\t\t      this.blens, bl, bd, tl, td, this.hufts, z);\n\n\t    if (t != Z_OK){\n\t        if (t == Z_DATA_ERROR){\n\t            this.blens=null;\n\t            this.mode = BAD;\n\t        }\n\t        r = t;\n\n\t        this.bitb=b; this.bitk=k;\n\t        z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t        this.write=q;\n\t        return this.inflate_flush(z,r);\n\t    }\n\t    this.codes.init(bl[0], bd[0], this.hufts, tl[0], this.hufts, td[0], z);\n\t}\n\tthis.mode = IB_CODES;\n      case IB_CODES:\n\tthis.bitb=b; this.bitk=k;\n\tz.avail_in=n; z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\n\tif ((r = this.codes.proc(this, z, r)) != Z_STREAM_END){\n\t  return this.inflate_flush(z, r);\n\t}\n\tr = Z_OK;\n\tthis.codes.free(z);\n\n\tp=z.next_in_index; n=z.avail_in;b=this.bitb;k=this.bitk;\n\tq=this.write;m = (q < this.read ? this.read-q-1 : this.end-q);\n\n\tif (this.last==0){\n\t  this.mode = IB_TYPE;\n\t  break;\n\t}\n\tthis.mode = IB_DRY;\n      case IB_DRY:\n\tthis.write=q;\n\tr = this.inflate_flush(z, r);\n\tq=this.write; m = (q < this.read ? this.read-q-1 : this.end-q);\n\tif (this.read != this.write){\n\t  this.bitb=b; this.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z, r);\n\t}\n\tmode = DONE;\n      case IB_DONE:\n\tr = Z_STREAM_END;\n\n\tthis.bitb=b; this.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n      case IB_BAD:\n\tr = Z_DATA_ERROR;\n\n\tthis.bitb=b; this.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n\n      default:\n\tr = Z_STREAM_ERROR;\n\n\tthis.bitb=b; this.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n      }\n    }\n  }\n\nInfBlocks.prototype.free = function(z){\n    this.reset(z, null);\n    this.window=null;\n    this.hufts=null;\n}\n\nInfBlocks.prototype.set_dictionary = function(d, start, n){\n    arrayCopy(d, start, window, 0, n);\n    this.read = this.write = n;\n}\n\n  // Returns true if inflate is currently at the end of a block generated\n  // by Z_SYNC_FLUSH or Z_FULL_FLUSH.\nInfBlocks.prototype.sync_point = function(){\n    return this.mode == IB_LENS;\n}\n\n  // copy as much as possible from the sliding window to the output area\nInfBlocks.prototype.inflate_flush = function(z, r){\n    var n;\n    var p;\n    var q;\n\n    // local copies of source and destination pointers\n    p = z.next_out_index;\n    q = this.read;\n\n    // compute number of bytes to copy as far as end of window\n    n = ((q <= this.write ? this.write : this.end) - q);\n    if (n > z.avail_out) n = z.avail_out;\n    if (n!=0 && r == Z_BUF_ERROR) r = Z_OK;\n\n    // update counters\n    z.avail_out -= n;\n    z.total_out += n;\n\n    // update check information\n    if(this.checkfn != null)\n      z.adler=this.check=z._adler.adler32(this.check, this.window, q, n);\n\n    // copy as far as end of window\n    arrayCopy(this.window, q, z.next_out, p, n);\n    p += n;\n    q += n;\n\n    // see if more to copy at beginning of window\n    if (q == this.end){\n      // wrap pointers\n      q = 0;\n      if (this.write == this.end)\n        this.write = 0;\n\n      // compute bytes to copy\n      n = this.write - q;\n      if (n > z.avail_out) n = z.avail_out;\n      if (n!=0 && r == Z_BUF_ERROR) r = Z_OK;\n\n      // update counters\n      z.avail_out -= n;\n      z.total_out += n;\n\n      // update check information\n      if(this.checkfn != null)\n\tz.adler=this.check=z._adler.adler32(this.check, this.window, q, n);\n\n      // copy\n      arrayCopy(this.window, q, z.next_out, p, n);\n      p += n;\n      q += n;\n    }\n\n    // update pointers\n    z.next_out_index = p;\n    this.read = q;\n\n    // done\n    return r;\n  }\n\n//\n// InfCodes.java\n//\n\nvar IC_START=0;  // x: set up for LEN\nvar IC_LEN=1;    // i: get length/literal/eob next\nvar IC_LENEXT=2; // i: getting length extra (have base)\nvar IC_DIST=3;   // i: get distance next\nvar IC_DISTEXT=4;// i: getting distance extra\nvar IC_COPY=5;   // o: copying bytes in window, waiting for space\nvar IC_LIT=6;    // o: got literal, waiting for output space\nvar IC_WASH=7;   // o: got eob, possibly still output waiting\nvar IC_END=8;    // x: got eob and all data flushed\nvar IC_BADCODE=9;// x: got error\n\nfunction InfCodes() {\n}\n\nInfCodes.prototype.init = function(bl, bd, tl, tl_index, td, td_index, z) {\n    this.mode=IC_START;\n    this.lbits=bl;\n    this.dbits=bd;\n    this.ltree=tl;\n    this.ltree_index=tl_index;\n    this.dtree = td;\n    this.dtree_index=td_index;\n    this.tree=null;\n}\n\nInfCodes.prototype.proc = function(s, z, r){\n    var j;              // temporary storage\n    var t;              // temporary pointer (int[])\n    var tindex;         // temporary pointer\n    var e;              // extra bits or operation\n    var b=0;            // bit buffer\n    var k=0;            // bits in bit buffer\n    var p=0;            // input data pointer\n    var n;              // bytes available there\n    var q;              // output window write pointer\n    var m;              // bytes to end of window or read pointer\n    var f;              // pointer to copy strings from\n\n    // copy input/output information to locals (UPDATE macro restores)\n    p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n    // process input and output based on current state\n    while (true){\n      switch (this.mode){\n\t// waiting for \"i:\"=input, \"o:\"=output, \"x:\"=nothing\n      case IC_START:         // x: set up for LEN\n\tif (m >= 258 && n >= 10){\n\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\t  r = this.inflate_fast(this.lbits, this.dbits,\n\t\t\t   this.ltree, this.ltree_index,\n\t\t\t   this.dtree, this.dtree_index,\n\t\t\t   s, z);\n\n\t  p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n\t  q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t  if (r != Z_OK){\n\t    this.mode = r == Z_STREAM_END ? IC_WASH : IC_BADCODE;\n\t    break;\n\t  }\n\t}\n\tthis.need = this.lbits;\n\tthis.tree = this.ltree;\n\tthis.tree_index=this.ltree_index;\n\n\tthis.mode = IC_LEN;\n      case IC_LEN:           // i: get length/literal/eob next\n\tj = this.need;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\ttindex=(this.tree_index+(b&inflate_mask[j]))*3;\n\n\tb>>>=(this.tree[tindex+1]);\n\tk-=(this.tree[tindex+1]);\n\n\te=this.tree[tindex];\n\n\tif(e == 0){               // literal\n\t  this.lit = this.tree[tindex+2];\n\t  this.mode = IC_LIT;\n\t  break;\n\t}\n\tif((e & 16)!=0 ){          // length\n\t  this.get = e & 15;\n\t  this.len = this.tree[tindex+2];\n\t  this.mode = IC_LENEXT;\n\t  break;\n\t}\n\tif ((e & 64) == 0){        // next table\n\t  this.need = e;\n\t  this.tree_index = tindex/3 + this.tree[tindex+2];\n\t  break;\n\t}\n\tif ((e & 32)!=0){               // end of block\n\t  this.mode = IC_WASH;\n\t  break;\n\t}\n\tthis.mode = IC_BADCODE;        // invalid code\n\tz.msg = \"invalid literal/length code\";\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_LENEXT:        // i: getting length extra (have base)\n\tj = this.get;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.len += (b & inflate_mask[j]);\n\n\tb>>=j;\n\tk-=j;\n\n\tthis.need = this.dbits;\n\tthis.tree = this.dtree;\n\tthis.tree_index = this.dtree_index;\n\tthis.mode = IC_DIST;\n      case IC_DIST:          // i: get distance next\n\tj = this.need;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\ttindex=(this.tree_index+(b & inflate_mask[j]))*3;\n\n\tb>>=this.tree[tindex+1];\n\tk-=this.tree[tindex+1];\n\n\te = (this.tree[tindex]);\n\tif((e & 16)!=0){               // distance\n\t  this.get = e & 15;\n\t  this.dist = this.tree[tindex+2];\n\t  this.mode = IC_DISTEXT;\n\t  break;\n\t}\n\tif ((e & 64) == 0){        // next table\n\t  this.need = e;\n\t  this.tree_index = tindex/3 + this.tree[tindex+2];\n\t  break;\n\t}\n\tthis.mode = IC_BADCODE;        // invalid code\n\tz.msg = \"invalid distance code\";\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_DISTEXT:       // i: getting distance extra\n\tj = this.get;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.dist += (b & inflate_mask[j]);\n\n\tb>>=j;\n\tk-=j;\n\n\tthis.mode = IC_COPY;\n      case IC_COPY:          // o: copying bytes in window, waiting for space\n        f = q - this.dist;\n        while(f < 0){     // modulo window size-\"while\" instead\n          f += s.end;     // of \"if\" handles invalid distances\n\t}\n\twhile (this.len!=0){\n\n\t  if(m==0){\n\t    if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t    if(m==0){\n\t      s.write=q; r=s.inflate_flush(z,r);\n\t      q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t      if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\n\t      if(m==0){\n\t\ts.bitb=b;s.bitk=k;\n\t\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t\ts.write=q;\n\t\treturn s.inflate_flush(z,r);\n\t      }\n\t    }\n\t  }\n\n\t  s.window[q++]=s.window[f++]; m--;\n\n\t  if (f == s.end)\n            f = 0;\n\t  this.len--;\n\t}\n\tthis.mode = IC_START;\n\tbreak;\n      case IC_LIT:           // o: got literal, waiting for output space\n\tif(m==0){\n\t  if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t  if(m==0){\n\t    s.write=q; r=s.inflate_flush(z,r);\n\t    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t    if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t    if(m==0){\n\t      s.bitb=b;s.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      s.write=q;\n\t      return s.inflate_flush(z,r);\n\t    }\n\t  }\n\t}\n\tr=Z_OK;\n\n\ts.window[q++]=this.lit; m--;\n\n\tthis.mode = IC_START;\n\tbreak;\n      case IC_WASH:           // o: got eob, possibly more output\n\tif (k > 7){        // return unused byte, if any\n\t  k -= 8;\n\t  n++;\n\t  p--;             // can always return one\n\t}\n\n\ts.write=q; r=s.inflate_flush(z,r);\n\tq=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\tif (s.read != s.write){\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\t  return s.inflate_flush(z,r);\n\t}\n\tthis.mode = IC_END;\n      case IC_END:\n\tr = Z_STREAM_END;\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_BADCODE:       // x: got error\n\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      default:\n\tr = Z_STREAM_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n      }\n    }\n  }\n\nInfCodes.prototype.free = function(z){\n    //  ZFREE(z, c);\n}\n\n  // Called with number of bytes left to write in window at least 258\n  // (the maximum string length) and number of input bytes available\n  // at least ten.  The ten bytes are six bytes for the longest length/\n  // distance pair plus four bytes for overloading the bit buffer.\n\nInfCodes.prototype.inflate_fast = function(bl, bd, tl, tl_index, td, td_index, s, z) {\n    var t;                // temporary pointer\n    var   tp;             // temporary pointer (int[])\n    var tp_index;         // temporary pointer\n    var e;                // extra bits or operation\n    var b;                // bit buffer\n    var k;                // bits in bit buffer\n    var p;                // input data pointer\n    var n;                // bytes available there\n    var q;                // output window write pointer\n    var m;                // bytes to end of window or read pointer\n    var ml;               // mask for literal/length tree\n    var md;               // mask for distance tree\n    var c;                // bytes to copy\n    var d;                // distance back to copy from\n    var r;                // copy source pointer\n\n    var tp_index_t_3;     // (tp_index+t)*3\n\n    // load input, output, bit values\n    p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n    // initialize masks\n    ml = inflate_mask[bl];\n    md = inflate_mask[bd];\n\n    // do until not enough input or output space for fast loop\n    do {                          // assume called with m >= 258 && n >= 10\n      // get literal/length code\n      while(k<(20)){              // max bits for literal/length code\n\tn--;\n\tb|=(z.next_in[p++]&0xff)<<k;k+=8;\n      }\n\n      t= b&ml;\n      tp=tl;\n      tp_index=tl_index;\n      tp_index_t_3=(tp_index+t)*3;\n      if ((e = tp[tp_index_t_3]) == 0){\n\tb>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\ts.window[q++] = tp[tp_index_t_3+2];\n\tm--;\n\tcontinue;\n      }\n      do {\n\n\tb>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\tif((e&16)!=0){\n\t  e &= 15;\n\t  c = tp[tp_index_t_3+2] + (b & inflate_mask[e]);\n\n\t  b>>=e; k-=e;\n\n\t  // decode distance base of block to copy\n\t  while(k<(15)){           // max bits for distance code\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;k+=8;\n\t  }\n\n\t  t= b&md;\n\t  tp=td;\n\t  tp_index=td_index;\n          tp_index_t_3=(tp_index+t)*3;\n\t  e = tp[tp_index_t_3];\n\n\t  do {\n\n\t    b>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\t    if((e&16)!=0){\n\t      // get extra bits to add to distance base\n\t      e &= 15;\n\t      while(k<(e)){         // get extra bits (up to 13)\n\t\tn--;\n\t\tb|=(z.next_in[p++]&0xff)<<k;k+=8;\n\t      }\n\n\t      d = tp[tp_index_t_3+2] + (b&inflate_mask[e]);\n\n\t      b>>=(e); k-=(e);\n\n\t      // do the copy\n\t      m -= c;\n\t      if (q >= d){                // offset before dest\n\t\t//  just copy\n\t\tr=q-d;\n\t\tif(q-r>0 && 2>(q-r)){\n\t\t  s.window[q++]=s.window[r++]; // minimum count is three,\n\t\t  s.window[q++]=s.window[r++]; // so unroll loop a little\n\t\t  c-=2;\n\t\t}\n\t\telse{\n\t\t  s.window[q++]=s.window[r++]; // minimum count is three,\n\t\t  s.window[q++]=s.window[r++]; // so unroll loop a little\n\t\t  c-=2;\n\t\t}\n\t      }\n\t      else{                  // else offset after destination\n                r=q-d;\n                do{\n                  r+=s.end;          // force pointer in window\n                }while(r<0);         // covers invalid distances\n\t\te=s.end-r;\n\t\tif(c>e){             // if source crosses,\n\t\t  c-=e;              // wrapped copy\n\t\t  if(q-r>0 && e>(q-r)){\n\t\t    do{s.window[q++] = s.window[r++];}\n\t\t    while(--e!=0);\n\t\t  }\n\t\t  else{\n\t\t    arrayCopy(s.window, r, s.window, q, e);\n\t\t    q+=e; r+=e; e=0;\n\t\t  }\n\t\t  r = 0;                  // copy rest from start of window\n\t\t}\n\n\t      }\n\n\t      // copy all or what's left\n              do{s.window[q++] = s.window[r++];}\n\t\twhile(--c!=0);\n\t      break;\n\t    }\n\t    else if((e&64)==0){\n\t      t+=tp[tp_index_t_3+2];\n\t      t+=(b&inflate_mask[e]);\n\t      tp_index_t_3=(tp_index+t)*3;\n\t      e=tp[tp_index_t_3];\n\t    }\n\t    else{\n\t      z.msg = \"invalid distance code\";\n\n\t      c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n\t      s.bitb=b;s.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      s.write=q;\n\n\t      return Z_DATA_ERROR;\n\t    }\n\t  }\n\t  while(true);\n\t  break;\n\t}\n\n\tif((e&64)==0){\n\t  t+=tp[tp_index_t_3+2];\n\t  t+=(b&inflate_mask[e]);\n\t  tp_index_t_3=(tp_index+t)*3;\n\t  if((e=tp[tp_index_t_3])==0){\n\n\t    b>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\t    s.window[q++]=tp[tp_index_t_3+2];\n\t    m--;\n\t    break;\n\t  }\n\t}\n\telse if((e&32)!=0){\n\n\t  c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\n\t  return Z_STREAM_END;\n\t}\n\telse{\n\t  z.msg=\"invalid literal/length code\";\n\n\t  c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\n\t  return Z_DATA_ERROR;\n\t}\n      }\n      while(true);\n    }\n    while(m>=258 && n>= 10);\n\n    // not enough input or output--restore pointers and return\n    c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n    s.bitb=b;s.bitk=k;\n    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n    s.write=q;\n\n    return Z_OK;\n}\n\n//\n// InfTree.java\n//\n\nfunction InfTree() {\n}\n\nInfTree.prototype.huft_build = function(b, bindex, n, s, d, e, t, m, hp, hn, v) {\n\n    // Given a list of code lengths and a maximum table size, make a set of\n    // tables to decode that set of codes.  Return Z_OK on success, Z_BUF_ERROR\n    // if the given code set is incomplete (the tables are still built in this\n    // case), Z_DATA_ERROR if the input is invalid (an over-subscribed set of\n    // lengths), or Z_MEM_ERROR if not enough memory.\n\n    var a;                       // counter for codes of length k\n    var f;                       // i repeats in table every f entries\n    var g;                       // maximum code length\n    var h;                       // table level\n    var i;                       // counter, current code\n    var j;                       // counter\n    var k;                       // number of bits in current code\n    var l;                       // bits per table (returned in m)\n    var mask;                    // (1 << w) - 1, to avoid cc -O bug on HP\n    var p;                       // pointer into c[], b[], or v[]\n    var q;                       // points to current table\n    var w;                       // bits before this table == (l * h)\n    var xp;                      // pointer into x\n    var y;                       // number of dummy codes added\n    var z;                       // number of entries in current table\n\n    // Generate counts for each bit length\n\n    p = 0; i = n;\n    do {\n      this.c[b[bindex+p]]++; p++; i--;   // assume all entries <= BMAX\n    }while(i!=0);\n\n    if(this.c[0] == n){                // null input--all zero length codes\n      t[0] = -1;\n      m[0] = 0;\n      return Z_OK;\n    }\n\n    // Find minimum and maximum length, bound *m by those\n    l = m[0];\n    for (j = 1; j <= BMAX; j++)\n      if(this.c[j]!=0) break;\n    k = j;                        // minimum code length\n    if(l < j){\n      l = j;\n    }\n    for (i = BMAX; i!=0; i--){\n      if(this.c[i]!=0) break;\n    }\n    g = i;                        // maximum code length\n    if(l > i){\n      l = i;\n    }\n    m[0] = l;\n\n    // Adjust last length count to fill out codes, if needed\n    for (y = 1 << j; j < i; j++, y <<= 1){\n      if ((y -= this.c[j]) < 0){\n        return Z_DATA_ERROR;\n      }\n    }\n    if ((y -= this.c[i]) < 0){\n      return Z_DATA_ERROR;\n    }\n    this.c[i] += y;\n\n    // Generate starting offsets into the value table for each length\n    this.x[1] = j = 0;\n    p = 1;  xp = 2;\n    while (--i!=0) {                 // note that i == g from above\n      this.x[xp] = (j += this.c[p]);\n      xp++;\n      p++;\n    }\n\n    // Make a table of values in order of bit lengths\n    i = 0; p = 0;\n    do {\n      if ((j = b[bindex+p]) != 0){\n        this.v[this.x[j]++] = i;\n      }\n      p++;\n    }\n    while (++i < n);\n    n = this.x[g];                     // set n to length of v\n\n    // Generate the Huffman codes and for each, make the table entries\n    this.x[0] = i = 0;                 // first Huffman code is zero\n    p = 0;                        // grab values in bit order\n    h = -1;                       // no tables yet--level -1\n    w = -l;                       // bits decoded == (l * h)\n    this.u[0] = 0;                     // just to keep compilers happy\n    q = 0;                        // ditto\n    z = 0;                        // ditto\n\n    // go through the bit lengths (k already is bits in shortest code)\n    for (; k <= g; k++){\n      a = this.c[k];\n      while (a--!=0){\n\t// here i is the Huffman code of length k bits for value *p\n\t// make tables up to required level\n        while (k > w + l){\n          h++;\n          w += l;                 // previous table always l bits\n\t  // compute minimum size table less than or equal to l bits\n          z = g - w;\n          z = (z > l) ? l : z;        // table size upper limit\n          if((f=1<<(j=k-w))>a+1){     // try a k-w bit table\n                                      // too few codes for k-w bit table\n            f -= a + 1;               // deduct codes from patterns left\n            xp = k;\n            if(j < z){\n              while (++j < z){        // try smaller tables up to z bits\n                if((f <<= 1) <= this.c[++xp])\n                  break;              // enough codes to use up j bits\n                f -= this.c[xp];           // else deduct codes from patterns\n              }\n\t    }\n          }\n          z = 1 << j;                 // table entries for j-bit table\n\n\t  // allocate new table\n          if (this.hn[0] + z > MANY){       // (note: doesn't matter for fixed)\n            return Z_DATA_ERROR;       // overflow of MANY\n          }\n          this.u[h] = q = /*hp+*/ this.hn[0];   // DEBUG\n          this.hn[0] += z;\n\n\t  // connect to last table, if there is one\n\t  if(h!=0){\n            this.x[h]=i;           // save pattern for backing up\n            this.r[0]=j;     // bits in this table\n            this.r[1]=l;     // bits to dump before this table\n            j=i>>>(w - l);\n            this.r[2] = (q - this.u[h-1] - j);               // offset to this table\n            arrayCopy(this.r, 0, hp, (this.u[h-1]+j)*3, 3); // connect to last table\n          }\n          else{\n            t[0] = q;               // first table is returned result\n\t  }\n        }\n\n\t// set up table entry in r\n        this.r[1] = (k - w);\n        if (p >= n){\n          this.r[0] = 128 + 64;      // out of values--invalid code\n\t}\n        else if (v[p] < s){\n          this.r[0] = (this.v[p] < 256 ? 0 : 32 + 64);  // 256 is end-of-block\n          this.r[2] = this.v[p++];          // simple code is just the value\n        }\n        else{\n          this.r[0]=(e[this.v[p]-s]+16+64); // non-simple--look up in lists\n          this.r[2]=d[this.v[p++] - s];\n        }\n\n        // fill code-like entries with r\n        f=1<<(k-w);\n        for (j=i>>>w;j<z;j+=f){\n          arrayCopy(this.r, 0, hp, (q+j)*3, 3);\n\t}\n\n\t// backwards increment the k-bit code i\n        for (j = 1 << (k - 1); (i & j)!=0; j >>>= 1){\n          i ^= j;\n\t}\n        i ^= j;\n\n\t// backup over finished tables\n        mask = (1 << w) - 1;      // needed on HP, cc -O bug\n        while ((i & mask) != this.x[h]){\n          h--;                    // don't need to update q\n          w -= l;\n          mask = (1 << w) - 1;\n        }\n      }\n    }\n    // Return Z_BUF_ERROR if we were given an incomplete table\n    return y != 0 && g != 1 ? Z_BUF_ERROR : Z_OK;\n}\n\nInfTree.prototype.inflate_trees_bits = function(c, bb, tb, hp, z) {\n    var result;\n    this.initWorkArea(19);\n    this.hn[0]=0;\n    result = this.huft_build(c, 0, 19, 19, null, null, tb, bb, hp, this.hn, this.v);\n\n    if(result == Z_DATA_ERROR){\n      z.msg = \"oversubscribed dynamic bit lengths tree\";\n    }\n    else if(result == Z_BUF_ERROR || bb[0] == 0){\n      z.msg = \"incomplete dynamic bit lengths tree\";\n      result = Z_DATA_ERROR;\n    }\n    return result;\n}\n\nInfTree.prototype.inflate_trees_dynamic = function(nl, nd, c, bl, bd, tl, td, hp, z) {\n    var result;\n\n    // build literal/length tree\n    this.initWorkArea(288);\n    this.hn[0]=0;\n    result = this.huft_build(c, 0, nl, 257, cplens, cplext, tl, bl, hp, this.hn, this.v);\n    if (result != Z_OK || bl[0] == 0){\n      if(result == Z_DATA_ERROR){\n        z.msg = \"oversubscribed literal/length tree\";\n      }\n      else if (result != Z_MEM_ERROR){\n        z.msg = \"incomplete literal/length tree\";\n        result = Z_DATA_ERROR;\n      }\n      return result;\n    }\n\n    // build distance tree\n    this.initWorkArea(288);\n    result = this.huft_build(c, nl, nd, 0, cpdist, cpdext, td, bd, hp, this.hn, this.v);\n\n    if (result != Z_OK || (bd[0] == 0 && nl > 257)){\n      if (result == Z_DATA_ERROR){\n        z.msg = \"oversubscribed distance tree\";\n      }\n      else if (result == Z_BUF_ERROR) {\n        z.msg = \"incomplete distance tree\";\n        result = Z_DATA_ERROR;\n      }\n      else if (result != Z_MEM_ERROR){\n        z.msg = \"empty distance tree with lengths\";\n        result = Z_DATA_ERROR;\n      }\n      return result;\n    }\n\n    return Z_OK;\n}\n/*\n  static int inflate_trees_fixed(int[] bl,  //literal desired/actual bit depth\n                                 int[] bd,  //distance desired/actual bit depth\n                                 int[][] tl,//literal/length tree result\n                                 int[][] td,//distance tree result\n                                 ZStream z  //for memory allocation\n\t\t\t\t ){\n\n*/\n\nfunction inflate_trees_fixed(bl, bd, tl, td, z) {\n    bl[0]=fixed_bl;\n    bd[0]=fixed_bd;\n    tl[0]=fixed_tl;\n    td[0]=fixed_td;\n    return Z_OK;\n}\n\nInfTree.prototype.initWorkArea = function(vsize){\n    if(this.hn==null){\n        this.hn=new Int32Array(1);\n        this.v=new Int32Array(vsize);\n        this.c=new Int32Array(BMAX+1);\n        this.r=new Int32Array(3);\n        this.u=new Int32Array(BMAX);\n        this.x=new Int32Array(BMAX+1);\n    }\n    if(this.v.length<vsize){\n        this.v=new Int32Array(vsize);\n    }\n    for(var i=0; i<vsize; i++){this.v[i]=0;}\n    for(var i=0; i<BMAX+1; i++){this.c[i]=0;}\n    for(var i=0; i<3; i++){this.r[i]=0;}\n//  for(int i=0; i<BMAX; i++){u[i]=0;}\n    arrayCopy(this.c, 0, this.u, 0, BMAX);\n//  for(int i=0; i<BMAX+1; i++){x[i]=0;}\n    arrayCopy(this.c, 0, this.x, 0, BMAX+1);\n}\n\nvar testArray = new Uint8Array(1);\nvar hasSubarray = (typeof testArray.subarray === 'function');\nvar hasSlice = false; /* (typeof testArray.slice === 'function'); */ // Chrome slice performance is so dire that we're currently not using it...\n\nfunction arrayCopy(src, srcOffset, dest, destOffset, count) {\n    if (count == 0) {\n        return;\n    }\n    if (!src) {\n        throw \"Undef src\";\n    } else if (!dest) {\n        throw \"Undef dest\";\n    }\n\n    if (srcOffset == 0 && count == src.length) {\n        arrayCopy_fast(src, dest, destOffset);\n    } else if (hasSubarray) {\n        arrayCopy_fast(src.subarray(srcOffset, srcOffset + count), dest, destOffset);\n    } else if (src.BYTES_PER_ELEMENT == 1 && count > 100) {\n        arrayCopy_fast(new Uint8Array(src.buffer, src.byteOffset + srcOffset, count), dest, destOffset);\n    } else {\n        arrayCopy_slow(src, srcOffset, dest, destOffset, count);\n    }\n\n}\n\nfunction arrayCopy_slow(src, srcOffset, dest, destOffset, count) {\n\n    // dlog('_slow call: srcOffset=' + srcOffset + '; destOffset=' + destOffset + '; count=' + count);\n\n     for (var i = 0; i < count; ++i) {\n        dest[destOffset + i] = src[srcOffset + i];\n    }\n}\n\nfunction arrayCopy_fast(src, dest, destOffset) {\n    dest.set(src, destOffset);\n}\n\n\n  // largest prime smaller than 65536\nvar ADLER_BASE=65521;\n  // NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1\nvar ADLER_NMAX=5552;\n\nfunction adler32(adler, /* byte[] */ buf,  index, len){\n    if(buf == null){ return 1; }\n\n    var s1=adler&0xffff;\n    var s2=(adler>>16)&0xffff;\n    var k;\n\n    while(len > 0) {\n      k=len<ADLER_NMAX?len:ADLER_NMAX;\n      len-=k;\n      while(k>=16){\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        k-=16;\n      }\n      if(k!=0){\n        do{\n          s1+=buf[index++]&0xff; s2+=s1;\n        }\n        while(--k!=0);\n      }\n      s1%=ADLER_BASE;\n      s2%=ADLER_BASE;\n    }\n    return (s2<<16)|s1;\n}\n\n\n\nfunction jszlib_inflate_buffer(buffer, start, length, afterUncOffset) {\n    if (!start) {\n        buffer = new Uint8Array(buffer);\n    } else if (!length) {\n        buffer = new Uint8Array(buffer, start, buffer.byteLength - start);\n    } else {\n        buffer = new Uint8Array(buffer, start, length);\n    }\n\n    var z = new ZStream();\n    z.inflateInit(DEF_WBITS, true);\n    z.next_in = buffer;\n    z.next_in_index = 0;\n    z.avail_in = buffer.length;\n\n    var oBlockList = [];\n    var totalSize = 0;\n    while (true) {\n        var obuf = new Uint8Array(32000);\n        z.next_out = obuf;\n        z.next_out_index = 0;\n        z.avail_out = obuf.length;\n        var status = z.inflate(Z_NO_FLUSH);\n        if (status != Z_OK && status != Z_STREAM_END && status != Z_BUF_ERROR) {\n            throw z.msg;\n        }\n        if (z.avail_out != 0) {\n            var newob = new Uint8Array(obuf.length - z.avail_out);\n            arrayCopy(obuf, 0, newob, 0, (obuf.length - z.avail_out));\n            obuf = newob;\n        }\n        oBlockList.push(obuf);\n        totalSize += obuf.length;\n        if (status == Z_STREAM_END || status == Z_BUF_ERROR) {\n            break;\n        }\n    }\n\n    if (afterUncOffset) {\n        afterUncOffset[0] = (start || 0) + z.next_in_index;\n    }\n\n    if (oBlockList.length == 1) {\n        return oBlockList[0].buffer;\n    } else {\n        var out = new Uint8Array(totalSize);\n        var cursor = 0;\n        for (var i = 0; i < oBlockList.length; ++i) {\n            var b = oBlockList[i];\n            arrayCopy(b, 0, out, cursor, b.length);\n            cursor += b.length;\n        }\n        return out.buffer;\n    }\n}\n\nreturn {\n    inflateBuffer: jszlib_inflate_buffer,\n    arrayCopy: arrayCopy\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./galaxy/scripts/libs/bbi/jszlib.js\n// module id = 42\n// module chunks = 0 1 2 3","//     jQuery Ajax Native Plugin\n\n//     (c) 2015 Tarik Zakaria Benmerar, Acigna Inc.\n//      jQuery Ajax Native Plugin may be freely distributed under the MIT license.\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('jquery'));\n    } else {\n        // Browser globals (root is window)\n        factory(root.jQuery);\n    }\n}(this, function ( $ ) {\n    var ajaxSettings = $.ajaxSettings;\n    ajaxSettings.responseFields.native = 'responseNative';\n    ajaxSettings.converters[ '* native' ] = true;\n    var support = {},\n        xhrId = 0,\n        xhrSuccessStatus = {\n            // file protocol always yields status code 0, assume 200\n            0: 200,\n            // Support: IE9\n            // #1450: sometimes IE returns 1223 when it should be 204\n            1223: 204\n        },\n        xhrCallbacks = {},\n        xhrSupported = jQuery.ajaxSettings.xhr();\n    // Support: IE9\n    // Open requests must be manually aborted on unload (#5280)\n    if ( window.ActiveXObject ) {\n        $( window ).on( \"unload\", function() {\n            for ( var key in xhrCallbacks ) {\n                xhrCallbacks[ key ]();\n            }\n        });\n    }\n    support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\n    support.ajax = xhrSupported = !!xhrSupported;\n\n    //Native Data Type Ajax Transport\n    $.ajaxTransport('native', function ( options ) {\n        var callback;\n        // Cross domain only allowed if supported through XMLHttpRequest\n        if ( support.cors || xhrSupported && !options.crossDomain ) {\n            return {\n                send: function( headers, complete ) {\n                    var i,\n                        xhr = options.xhr(),\n                        id = ++xhrId,\n                        responses = {};\n\n                    xhr.open( options.type, options.url, options.async, options.username, options.password );\n\n                    // Apply custom fields if provided\n                    if ( options.xhrFields ) {\n                        for ( i in options.xhrFields ) {\n                            xhr[ i ] = options.xhrFields[ i ];\n                        }\n                    }\n\n                    // Override mime type if needed\n                    if ( options.mimeType && xhr.overrideMimeType ) {\n                        xhr.overrideMimeType( options.mimeType );\n                    }\n\n                    // X-Requested-With header\n                    // For cross-domain requests, seeing as conditions for a preflight are\n                    // akin to a jigsaw puzzle, we simply never set it to be sure.\n                    // (it can always be set on a per-request basis or even using ajaxSetup)\n                    // For same-domain requests, won't change header if already provided.\n                    if ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n                        headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n                    }\n\n                    // Set headers\n                    for ( i in headers ) {\n                        xhr.setRequestHeader( i, headers[ i ] );\n                    }\n\n                    // Callback\n                    callback = function( type ) {\n                        return function() {\n                            if ( callback ) {\n                                delete xhrCallbacks[ id ];\n                                callback = xhr.onload = xhr.onerror = null;\n\n                                if ( type === \"abort\" ) {\n                                    xhr.abort();\n                                } else if ( type === \"error\" ) {\n                                    complete(\n                                        // file: protocol always yields status 0; see #8605, #14207\n                                        xhr.status,\n                                        xhr.statusText\n                                    );\n                                } else {\n                                    // The native response associated with the responseType\n                                    // Stored in the xhr.response attribute (XHR2 Spec)\n                                    if ( xhr.response ) {\n                                        responses.native = xhr.response;\n                                    }\n\n                                    complete(\n                                        xhrSuccessStatus[ xhr.status ] || xhr.status,\n                                        xhr.statusText,\n                                        responses,\n                                        xhr.getAllResponseHeaders()\n                                    );\n                                }\n                            }\n                        };\n                    };\n\n                    // Listen to events\n                    xhr.onload = callback();\n                    xhr.onerror = callback(\"error\");\n\n                    // Create the abort callback\n                    callback = xhrCallbacks[ id ] = callback(\"abort\");\n\n                    try {\n                        // Do send the request (this may raise an exception)\n                        xhr.send( options.hasContent && options.data || null );\n                    } catch ( e ) {\n                        // #14683: Only rethrow if this hasn't been notified as an error yet\n                        if ( callback ) {\n                            throw e;\n                        }\n                    }\n                },\n\n                abort: function() {\n                    if ( callback ) {\n                        callback();\n                    }\n                }\n            };\n        }\n    });\n\n\n    //$.getNative wrapper\n    $.getNative = function ( url, callback ) {\n        return $.ajax({\n            dataType: 'native',\n            url: url,\n            xhrFields: {\n                responseType: 'arraybuffer'\n            },\n            success: callback\n        });\n    }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./galaxy/scripts/libs/bbi/jquery-ajax-native.js\n// module id = 43\n// module chunks = 0 1 2 3","import baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"user\";\n//==============================================================================\n/** @class View to display a user's disk/storage usage\n *      either as a progress bar representing the percentage of a quota used\n *      or a simple text element displaying the human readable size used.\n *  @name UserQuotaMeter\n *  @augments Backbone.View\n */\nvar UserQuotaMeter = Backbone.View.extend(baseMVC.LoggableMixin).extend(\n    /** @lends UserQuotaMeter.prototype */ {\n        _logNamespace: logNamespace,\n\n        /** Defaults for optional settings passed to initialize */\n        options: {\n            warnAtPercent: 85,\n            errorAtPercent: 100\n        },\n\n        /** Set up, accept options, and bind events */\n        initialize: function(options) {\n            this.log(`${this}.initialize:`, options);\n            _.extend(this.options, options);\n\n            //this.bind( 'all', function( event, data ){ this.log( this + ' event:', event, data ); }, this );\n            this.listenTo(this.model, \"change:quota_percent change:total_disk_usage\", this.render);\n        },\n\n        /** Re-load user model data from the api */\n        update: function(options) {\n            this.log(`${this} updating user data...`, options);\n            this.model.loadFromApi(this.model.get(\"id\"), options);\n            return this;\n        },\n\n        /** Is the user over their quota (if there is one)?\n         * @returns {Boolean} true if over quota, false if no quota or under quota\n         */\n        isOverQuota: function() {\n            return (\n                this.model.get(\"quota_percent\") !== null &&\n                this.model.get(\"quota_percent\") >= this.options.errorAtPercent\n            );\n        },\n\n        /** Render the meter when they have an applicable quota. Will render as a progress bar\n         *      with their percentage of that quota in text over the bar.\n         *  @fires quota:over when user is over quota (>= this.errorAtPercent)\n         *  @fires quota:under when user is under quota\n         *  @fires quota:under:approaching when user is >= this.warnAtPercent of their quota\n         *  @fires quota:under:ok when user is below this.warnAtPercent\n         *  @returns {jQuery} the rendered meter\n         */\n        _render_quota: function() {\n            var modelJson = this.model.toJSON();\n\n            var //prevPercent = this.model.previous( 'quota_percent' ),\n            percent = modelJson.quota_percent;\n\n            var //meter = $( UserQuotaMeter.templates.quota( modelJson ) );\n            $meter = $(this._templateQuotaMeter(modelJson));\n\n            var $bar = $meter.find(\".progress-bar\");\n            //this.log( this + '.rendering quota, percent:', percent, 'meter:', meter );\n\n            // OVER QUOTA: color the quota bar and show the quota error message\n            if (this.isOverQuota()) {\n                //this.log( '\\t over quota' );\n                $bar.attr(\"class\", \"progress-bar progress-bar-danger\");\n                $meter.find(\".quota-meter-text\").css(\"color\", \"white\");\n                //TODO: only trigger event if state has changed\n                this.trigger(\"quota:over\", modelJson);\n\n                // APPROACHING QUOTA: color the quota bar\n            } else if (percent >= this.options.warnAtPercent) {\n                //this.log( '\\t approaching quota' );\n                $bar.attr(\"class\", \"progress-bar progress-bar-warning\");\n                //TODO: only trigger event if state has changed\n                this.trigger(\"quota:under quota:under:approaching\", modelJson);\n\n                // otherwise, hide/don't use the msg box\n            } else {\n                $bar.attr(\"class\", \"progress-bar progress-bar-success\");\n                //TODO: only trigger event if state has changed\n                this.trigger(\"quota:under quota:under:ok\", modelJson);\n            }\n            return $meter;\n        },\n\n        /** Render the meter when the user has NO applicable quota. Will render as text\n         *      showing the human readable sum storage their data is using.\n         *  @returns {jQuery} the rendered text\n         */\n        _render_usage: function() {\n            //var usage = $( UserQuotaMeter.templates.usage( this.model.toJSON() ) );\n            var usage = $(this._templateUsage(this.model.toJSON()));\n            this.log(`${this}.rendering usage:`, usage);\n            return usage;\n        },\n\n        /** Render either the quota percentage meter or the human readable disk usage\n         *      depending on whether the user model has quota info (quota_percent === null -> no quota)\n         *  @returns {Object} this UserQuotaMeter\n         */\n        render: function() {\n            //this.log( this + '.rendering' );\n            var meterHtml = null;\n\n            // no quota on server ('quota_percent' === null (can be valid at 0)), show usage instead\n            this.log(`${this}.model.quota_percent:`, this.model.get(\"quota_percent\"));\n            if (this.model.get(\"quota_percent\") === null || this.model.get(\"quota_percent\") === undefined) {\n                meterHtml = this._render_usage();\n\n                // otherwise, render percent of quota (and warning, error)\n            } else {\n                meterHtml = this._render_quota();\n                //TODO: add the original text for unregistered quotas\n                //tooltip = \"Your disk quota is %s.  You can increase your quota by registering a Galaxy account.\"\n            }\n\n            this.$el.html(meterHtml);\n            this.$el.find(\".quota-meter-text\").tooltip();\n            return this;\n        },\n\n        _templateQuotaMeter: function(data) {\n            return [\n                '<div id=\"quota-meter\" class=\"quota-meter progress\">',\n                '<div class=\"progress-bar\" style=\"width: ',\n                data.quota_percent,\n                '%\"></div>',\n                '<div class=\"quota-meter-text\" data-placement=\"left\" style=\"top: 6px\"',\n                data.nice_total_disk_usage\n                    ? ` title=\"Using ${data.nice_total_disk_usage}.  This value is recalculated when you log out.\">`\n                    : \">\",\n                _l(\"Using\"),\n                \" \",\n                data.quota_percent,\n                \"%\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\");\n        },\n\n        _templateUsage: function(data) {\n            return [\n                '<div id=\"quota-meter\" class=\"quota-meter\" style=\"background-color: transparent\">',\n                '<div class=\"quota-meter-text\" data-placement=\"left\" data-original-title=\"This value is recalculated when you log out.\" style=\"top: 6px; color: white\">',\n                data.nice_total_disk_usage ? _l(\"Using \") + data.nice_total_disk_usage : \"\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\");\n        },\n\n        toString: function() {\n            return `UserQuotaMeter(${this.model})`;\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    UserQuotaMeter: UserQuotaMeter\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/user/user-quotameter.js","/**\n * Popover wrapper\n */\nimport Utils from \"utils/utils\";\nvar View = Backbone.View.extend({\n    optionsDefault: {\n        with_close: true,\n        title: null,\n        placement: \"top\",\n        container: \"body\",\n        body: null\n    },\n\n    initialize: function(options) {\n        this.setElement(this._template());\n        this.uid = Utils.uid();\n        this.options = _.defaults(options || {}, this.optionsDefault);\n        this.options.container.parent().append(this.el);\n        this.$title = this.$(\".popover-title-label\");\n        this.$close = this.$(\".popover-close\");\n        this.$body = this.$(\".popover-content\");\n\n        // add initial content\n        this.options.body && this.append(this.options.body);\n\n        // add event to hide if click is outside of popup and not on container\n        var self = this;\n        $(\"body\").on(`mousedown.${this.uid}`, e => {\n            // the 'is' for buttons that trigger popups\n            // the 'has' for icons within a button that triggers a popup\n            self.visible &&\n                !$(self.options.container).is(e.target) &&\n                !$(self.el).is(e.target) &&\n                $(self.el).has(e.target).length === 0 &&\n                self.hide();\n        });\n    },\n\n    /**\n     * Render popover\n     */\n    render: function() {\n        this.$title.html(this.options.title);\n        this.$el\n            .removeClass()\n            .addClass(\"ui-popover popover fade in\")\n            .addClass(this.options.placement);\n        this.$el.css(this._get_placement(this.options.placement));\n\n        // configure close option\n        var self = this;\n        if (this.options.with_close) {\n            this.$close\n                .on(\"click\", () => {\n                    self.hide();\n                })\n                .show();\n        } else {\n            this.$close.off().hide();\n        }\n    },\n\n    /**\n     * Set the popover title\n     * @params{ String }    newTitle    - New popover title\n     */\n    title: function(newTitle) {\n        if (newTitle !== undefined) {\n            this.options.title = newTitle;\n            this.$title.html(newTitle);\n        }\n    },\n\n    /**\n     * Show popover\n     */\n    show: function() {\n        this.render();\n        this.$el.show();\n        this.visible = true;\n    },\n\n    /**\n     * Hide popover\n     */\n    hide: function() {\n        this.$el.hide();\n        this.visible = false;\n    },\n\n    /**\n     * Append new content to the popover\n     * @params{ Object }  $el - Dom element\n     */\n    append: function($el) {\n        this.$body.append($el);\n    },\n\n    /**\n     * Remove all content\n     */\n    empty: function() {\n        this.$body.empty();\n    },\n\n    /**\n     * Remove popover\n     */\n    remove: function() {\n        $(\"body\").off(`mousedown.${this.uid}`);\n        this.$el.remove();\n    },\n\n    /**\n     * Improve popover location/placement\n     */\n    _get_placement: function(placement) {\n        // get popover dimensions\n        var width = this._get_width(this.$el);\n        var height = this.$el.height();\n\n        // get container details\n        var $container = this.options.container;\n        var container_width = this._get_width($container);\n        var container_height = this._get_height($container);\n        var container_position = $container.position();\n\n        // get position\n        var top;\n\n        var left;\n        top = left = 0;\n        if ([\"top\", \"bottom\"].indexOf(placement) != -1) {\n            left = container_position.left - width + (container_width + width) / 2;\n            switch (placement) {\n                case \"top\":\n                    top = container_position.top - height - 5;\n                    break;\n                case \"bottom\":\n                    top = container_position.top + container_height + 5;\n                    break;\n            }\n        } else {\n            top = container_position.top - height + (container_height + height) / 2;\n            switch (placement) {\n                case \"right\":\n                    left = container_position.left + container_width;\n                    break;\n            }\n        }\n        return { top: top, left: left };\n    },\n\n    /**\n     * Returns padding/margin corrected width\n     */\n    _get_width: function($el) {\n        return (\n            $el.width() +\n            parseInt($el.css(\"padding-left\")) +\n            parseInt($el.css(\"margin-left\")) +\n            parseInt($el.css(\"padding-right\")) +\n            parseInt($el.css(\"margin-right\"))\n        );\n    },\n\n    /**\n     * Returns padding corrected height\n     */\n    _get_height: function($el) {\n        return $el.height() + parseInt($el.css(\"padding-top\")) + parseInt($el.css(\"padding-bottom\"));\n    },\n\n    /**\n     * Return the popover template\n     */\n    _template: function(options) {\n        return (\n            '<div class=\"ui-popover popover fade in\">' +\n            '<div class=\"arrow\"/>' +\n            '<div class=\"popover-title\">' +\n            '<div class=\"popover-title-label\"/>' +\n            '<div class=\"popover-close fa fa-times-circle\"/>' +\n            \"</div>\" +\n            '<div class=\"popover-content\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-popover.js","//==============================================================================\n/** Map of possible HDA/collection/job states to their string equivalents.\n *      A port of galaxy.model.Dataset.states.\n */\nvar STATES = {\n    // NOT ready states\n    /** is uploading and not ready */\n    UPLOAD: \"upload\",\n    /** the job that will produce the dataset queued in the runner */\n    QUEUED: \"queued\",\n    /** the job that will produce the dataset is running */\n    RUNNING: \"running\",\n    /** metadata for the dataset is being discovered/set */\n    SETTING_METADATA: \"setting_metadata\",\n\n    // ready states\n    /** was created without a tool */\n    NEW: \"new\",\n    /** has no data */\n    EMPTY: \"empty\",\n    /** has successfully completed running */\n    OK: \"ok\",\n\n    /** the job that will produce the dataset paused */\n    PAUSED: \"paused\",\n    /** metadata discovery/setting failed or errored (but otherwise ok) */\n    FAILED_METADATA: \"failed_metadata\",\n    //TODO: not in trans.app.model.Dataset.states - is in database\n    /** not accessible to the current user (i.e. due to permissions) */\n    NOT_VIEWABLE: \"noPermission\",\n    /** deleted while uploading */\n    DISCARDED: \"discarded\",\n    /** the tool producing this dataset failed */\n    ERROR: \"error\"\n};\n\nSTATES.READY_STATES = [\n    STATES.OK,\n    STATES.EMPTY,\n    STATES.PAUSED,\n    STATES.FAILED_METADATA,\n    STATES.NOT_VIEWABLE,\n    STATES.DISCARDED,\n    STATES.ERROR\n];\n\nSTATES.NOT_READY_STATES = [STATES.UPLOAD, STATES.QUEUED, STATES.RUNNING, STATES.SETTING_METADATA, STATES.NEW];\n\n//==============================================================================\nexport default STATES;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/states.js","// dependencies\nimport Utils from \"utils/utils\";\n/**\n * A plugin for initializing select2 input items.\n * Make sure the select2 library itself is loaded beforehand.\n * Also the element to which select2 will be appended has to\n * be created before select2 initialization (and passed as option).\n */\nvar View = Backbone.View.extend({\n    // options\n    optionsDefault: {\n        css: \"\",\n        placeholder: \"No data available\",\n        data: [],\n        value: null,\n        multiple: false,\n        minimumInputLength: 0,\n        // example format of initial data: \"id:name,55:anotherrole@role.com,27:role@role.com\"\n        initialData: \"\"\n    },\n\n    // initialize\n    initialize: function(options) {\n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n\n        // create new element\n        this.setElement(this._template(this.options));\n\n        // check if container exists\n        if (!this.options.container) {\n            console.log(\"ui-select::initialize() : container not specified.\");\n            return;\n        }\n\n        // add to dom\n        this.options.container.append(this.$el);\n\n        // link selection dictionary\n        this.select_data = this.options.data;\n\n        // refresh\n        this._refresh();\n\n        if (!this.options.multiple) {\n            // initial value\n            if (this.options.value) {\n                this._setValue(this.options.value);\n            }\n\n            // add change event\n            var self = this;\n            if (this.options.onchange) {\n                this.$el.on(\"change\", () => {\n                    self.options.onchange(self.value());\n                });\n            }\n        }\n    },\n\n    // value\n    value: function(new_value) {\n        // get current id/value\n        var before = this._getValue();\n\n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this._setValue(new_value);\n        }\n\n        // get current id/value\n        var after = this._getValue();\n\n        // fire onchange\n        if (after != before && this.options.onchange) {\n            this.options.onchange(after);\n        }\n\n        // return current value\n        return after;\n    },\n\n    // label\n    text: function() {\n        return this.$el.select2(\"data\").text;\n    },\n\n    // disabled\n    disabled: function() {\n        return !this.$el.select2(\"enable\");\n    },\n\n    // enable\n    enable: function() {\n        this.$el.select2(\"enable\", true);\n    },\n\n    // disable\n    disable: function() {\n        this.$el.select2(\"enable\", false);\n    },\n\n    // add\n    add: function(options) {\n        // add options\n        this.select_data.push({\n            id: options.id,\n            text: options.text\n        });\n\n        // refresh\n        this._refresh();\n    },\n\n    // remove\n    del: function(id) {\n        // search option\n        var index = this._getIndex(id);\n\n        // check if found\n        if (index != -1) {\n            // remove options\n            this.select_data.splice(index, 1);\n\n            // refresh\n            this._refresh();\n        }\n    },\n\n    // remove\n    remove: function() {\n        this.$el.select2(\"destroy\");\n    },\n\n    // update\n    update: function(options) {\n        // copy options\n        this.select_data = [];\n        for (var key in options.data) {\n            this.select_data.push(options.data[key]);\n        }\n\n        // refresh\n        this._refresh();\n    },\n\n    // refresh\n    _refresh: function() {\n        // add select2 data based on type of input\n        if (!this.options.multiple) {\n            var selected = this._getValue();\n            var select_opt = {\n                data: this.select_data,\n                containerCssClass: this.options.css,\n                placeholder: this.options.placeholder,\n                dropdownAutoWidth: true\n            };\n            this.$el.select2(select_opt);\n            // select previous value (if exists)\n            this._setValue(selected);\n        } else {\n            var select_opt = {\n                multiple: this.options.multiple,\n                containerCssClass: this.options.css,\n                placeholder: this.options.placeholder,\n                minimumInputLength: this.options.minimumInputLength,\n                ajax: this.options.ajax,\n                dropdownCssClass: this.options.dropdownCssClass,\n                escapeMarkup: this.options.escapeMarkup,\n                formatResult: this.options.formatResult,\n                formatSelection: this.options.formatSelection,\n                initSelection: this.options.initSelection,\n                initialData: this.options.initialData\n            };\n            this.$el.select2(select_opt);\n        }\n    },\n\n    // get index\n    _getIndex: function(value) {\n        // returns the index of the searched value\n        _.findIndex(this.select_data, { id: value });\n    },\n\n    // get value\n    _getValue: function() {\n        return this.$el.select2(\"val\");\n    },\n\n    // set value\n    _setValue: function(new_value) {\n        var index = this._getIndex(new_value);\n        if (index == -1) {\n            if (this.select_data.length > 0) {\n                new_value = this.select_data[0].id;\n            }\n        }\n        this.$el.select2(\"val\", new_value);\n    },\n\n    // element\n    _template: function(options) {\n        return `<input type=\"hidden\" value=\"${this.options.initialData}\"/>`;\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/ui-select.js","import jQuery from \"jquery\";\n(\"use_strict\");\n\nvar $ = jQuery;\n//============================================================================\n/** Returns a jQuery object containing a clickable font-awesome button.\n *      options:\n *          tooltipConfig   : option map for bootstrap tool tip\n *          classes         : array of class names (will always be classed as icon-btn)\n *          disabled        : T/F - add the 'disabled' class?\n *          title           : tooltip/title string\n *          target          : optional href target\n *          href            : optional href\n *          faIcon          : which font awesome icon to use\n *          onclick         : function to call when the button is clicked\n */\nvar faIconButton = options => {\n    options = options || {};\n    options.tooltipConfig = options.tooltipConfig || {\n        placement: \"bottom\"\n    };\n\n    options.classes = [\"icon-btn\"].concat(options.classes || []);\n    if (options.disabled) {\n        options.classes.push(\"disabled\");\n    }\n\n    var html = [\n        '<a class=\"',\n        options.classes.join(\" \"),\n        '\"',\n        options.title ? ` title=\"${options.title}\"` : \"\",\n        !options.disabled && options.target ? ` target=\"${options.target}\"` : \"\",\n        ' href=\"',\n        !options.disabled && options.href ? options.href : \"javascript:void(0);\",\n        '\">',\n        // could go with something less specific here - like 'html'\n        '<span class=\"fa ',\n        options.faIcon,\n        '\"></span>',\n        \"</a>\"\n    ].join(\"\");\n    var $button = $(html).tooltip(options.tooltipConfig);\n    if (_.isFunction(options.onclick)) {\n        $button.click(options.onclick);\n    }\n    return $button;\n};\n\n//============================================================================\nexport default faIconButton;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/ui/fa-icon-button.js","import * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport userModel from \"mvc/user/user-model\";\nimport metricsLogger from \"utils/metrics-logger\";\nimport addLogging from \"utils/add-logging\";\nimport localize from \"utils/localization\";\n// TODO: move into a singleton pattern and have dependents import Galaxy\n// ============================================================================\n/** Base galaxy client-side application.\n *      Iniitializes:\n *          logger      : the logger/metrics-logger\n *          localize    : the string localizer\n *          config      : the current configuration (any k/v in\n *              galaxy.ini available from the configuration API)\n *          user        : the current user (as a mvc/user/user-model)\n */\nfunction GalaxyApp(options, bootstrapped) {\n    var self = this;\n    return self._init(options || {}, bootstrapped || {});\n}\n\n// add logging shortcuts for this object\naddLogging(GalaxyApp, \"GalaxyApp\");\n\n// a debug flag can be set via local storage and made available during script/page loading\nvar DEBUGGING_KEY = \"galaxy:debug\";\n\nvar NAMESPACE_KEY = `${DEBUGGING_KEY}:namespaces`;\nvar FLATTEN_LOG_MESSAGES_KEY = `${DEBUGGING_KEY}:flatten`;\n\nvar localDebugging = false;\ntry {\n    localDebugging = localStorage.getItem(DEBUGGING_KEY) == \"true\";\n} catch (storageErr) {\n    console.log(localize(\"localStorage not available for debug flag retrieval\"));\n}\n\n/** initalize options and sub-components */\nGalaxyApp.prototype._init = function __init(options, bootstrapped) {\n    var self = this;\n    _.extend(self, Backbone.Events);\n    if (localDebugging) {\n        self.logger = console;\n        console.debug(\"debugging galaxy:\", \"options:\", options, \"bootstrapped:\", bootstrapped);\n    }\n\n    self._processOptions(options);\n\n    // add root and url parameters\n    self.root = options.root || \"/\";\n    self.params = options.params || {};\n    self.session_csrf_token = options.session_csrf_token || null;\n\n    self._initConfig(options.config || {});\n    self._patchGalaxy(window.Galaxy);\n\n    self._initLogger(self.options.loggerOptions || {});\n    // at this point, either logging or not and namespaces are enabled - chat it up\n    self.debug(\"GalaxyApp.options: \", self.options);\n    self.debug(\"GalaxyApp.config: \", self.config);\n    self.debug(\"GalaxyApp.logger: \", self.logger);\n\n    self._initLocale();\n    self.debug(\"GalaxyApp.localize: \", self.localize);\n\n    self.config = options.config || {};\n    self.debug(\"GalaxyApp.config: \", self.config);\n\n    self._initUser(options.user || {});\n    self.debug(\"GalaxyApp.user: \", self.user);\n\n    self._setUpListeners();\n    self.trigger(\"ready\", self);\n\n    return self;\n};\n\n/** default options */\nGalaxyApp.prototype.defaultOptions = {\n    /** monkey patch attributes from existing window.Galaxy object? */\n    patchExisting: true,\n    /** root url of this app */\n    root: \"/\",\n    session_csrf_token: null\n};\n\n/** filter to options present in defaultOptions (and default to them) */\nGalaxyApp.prototype._processOptions = function _processOptions(options) {\n    var self = this;\n    var defaults = self.defaultOptions;\n\n    self.options = {};\n    for (var k in defaults) {\n        if (defaults.hasOwnProperty(k)) {\n            self.options[k] = options.hasOwnProperty(k) ? options[k] : defaults[k];\n        }\n    }\n    return self;\n};\n\n/** parse the config and any extra info derived from it */\nGalaxyApp.prototype._initConfig = function _initConfig(config) {\n    var self = this;\n    self.config = config;\n\n    // give precendence to localdebugging for this setting\n    self.config.debug = localDebugging || self.config.debug;\n\n    return self;\n};\n\n/** add an option from options if the key matches an option in defaultOptions */\nGalaxyApp.prototype._patchGalaxy = function _patchGalaxy(patchWith) {\n    var self = this;\n    // in case req or plain script tag order has created a prev. version of the Galaxy obj...\n    if (self.options.patchExisting && patchWith) {\n        // self.debug( 'found existing Galaxy object:', patchWith );\n        // ...(for now) monkey patch any added attributes that the previous Galaxy may have had\n        //TODO: move those attributes to more formal assignment in GalaxyApp\n        for (var k in patchWith) {\n            if (patchWith.hasOwnProperty(k)) {\n                // self.debug( '\\t patching in ' + k + ' to Galaxy:', self[ k ] );\n                self[k] = patchWith[k];\n            }\n        }\n    }\n};\n\n/** set up the metrics logger (utils/metrics-logger) and pass loggerOptions */\nGalaxyApp.prototype._initLogger = function _initLogger(loggerOptions) {\n    var self = this;\n\n    // default to console logging at the debug level if the debug flag is set\n    if (self.config.debug) {\n        loggerOptions.consoleLogger = loggerOptions.consoleLogger || console;\n        loggerOptions.consoleLevel = loggerOptions.consoleLevel || metricsLogger.MetricsLogger.ALL;\n        // load any logging namespaces from localStorage if we can\n        try {\n            loggerOptions.consoleNamespaceWhitelist = localStorage.getItem(NAMESPACE_KEY).split(\",\");\n        } catch (storageErr) {}\n        try {\n            loggerOptions.consoleFlattenMessages = localStorage.getItem(FLATTEN_LOG_MESSAGES_KEY) == \"true\";\n        } catch (storageErr) {}\n        console.log(loggerOptions.consoleFlattenMessages);\n    }\n\n    self.logger = new metricsLogger.MetricsLogger(loggerOptions);\n    self.emit = {};\n    [\"log\", \"debug\", \"info\", \"warn\", \"error\", \"metric\"].map(i => {\n        self.emit[i] = function(data) {\n            self.logger.emit(i, arguments[0], Array.prototype.slice.call(arguments, 1));\n        };\n    });\n\n    if (self.config.debug) {\n        // add this logger to mvc's loggable mixin so that all models can use the logger\n        BASE_MVC.LoggableMixin.logger = self.logger;\n    }\n    return self;\n};\n\n/** add the localize fn to this object and the window namespace (as '_l') */\nGalaxyApp.prototype._initLocale = function _initLocale(options) {\n    var self = this;\n    self.debug(\"_initLocale:\", options);\n    self.localize = localize;\n    // add to window as global shortened alias\n    // TODO: temporary - remove when can require for plugins\n    window._l = self.localize;\n    return self;\n};\n\n/** set up the current user as a Backbone model (mvc/user/user-model) */\nGalaxyApp.prototype._initUser = function _initUser(userJSON) {\n    var self = this;\n    self.debug(\"_initUser:\", userJSON);\n    self.user = new userModel.User(userJSON);\n    self.user.logger = self.logger;\n    return self;\n};\n\n/** Set up DOM/jQuery/Backbone event listeners enabled for all pages */\nGalaxyApp.prototype._setUpListeners = function _setUpListeners() {\n    var self = this;\n\n    // hook to jq beforeSend to record the most recent ajax call and cache some data about it\n    /** cached info about the last ajax call made through jQuery */\n    self.lastAjax = {};\n    $(document).bind(\"ajaxSend\", (ev, xhr, options) => {\n        var data = options.data;\n        try {\n            data = JSON.parse(data);\n        } catch (err) {}\n\n        self.lastAjax = {\n            url: location.href.slice(0, -1) + options.url,\n            data: data\n        };\n        //TODO:?? we might somehow manage to *retry* ajax using either this hook or Backbone.sync\n    });\n    return self;\n};\n\n/** Turn debugging/console-output on/off by passing boolean. Pass nothing to get current setting. */\nGalaxyApp.prototype.debugging = function _debugging(setting) {\n    var self = this;\n    try {\n        if (setting === undefined) {\n            return localStorage.getItem(DEBUGGING_KEY) === \"true\";\n        }\n        if (setting) {\n            localStorage.setItem(DEBUGGING_KEY, true);\n            return true;\n        }\n\n        localStorage.removeItem(DEBUGGING_KEY);\n        // also remove all namespaces\n        self.debuggingNamespaces(null);\n    } catch (storageErr) {\n        console.log(localize(\"localStorage not available for debug flag retrieval\"));\n    }\n    return false;\n};\n\n/** Add, remove, or clear namespaces from the debugging filters\n *  Pass no arguments to retrieve the existing namespaces as an array.\n *  Pass in null to clear all namespaces (all logging messages will show now).\n *  Pass in an array of strings or single string of the namespaces to filter to.\n *  Returns the new/current namespaces as an array;\n */\nGalaxyApp.prototype.debuggingNamespaces = function _debuggingNamespaces(namespaces) {\n    var self = this;\n    try {\n        if (namespaces === undefined) {\n            var csv = localStorage.getItem(NAMESPACE_KEY);\n            return typeof csv === \"string\" ? csv.split(\",\") : [];\n        } else if (namespaces === null) {\n            localStorage.removeItem(NAMESPACE_KEY);\n        } else {\n            localStorage.setItem(NAMESPACE_KEY, namespaces);\n        }\n        var newSettings = self.debuggingNamespaces();\n        if (self.logger) {\n            self.logger.options.consoleNamespaceWhitelist = newSettings;\n        }\n        return newSettings;\n    } catch (storageErr) {\n        console.log(localize(\"localStorage not available for debug namespace retrieval\"));\n    }\n};\n\n/** string rep */\nGalaxyApp.prototype.toString = function toString() {\n    var userEmail = this.user ? this.user.get(\"email\") || \"(anonymous)\" : \"uninitialized\";\n    return `GalaxyApp(${userEmail})`;\n};\n\n// ============================================================================\nexport default {\n    GalaxyApp: GalaxyApp\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/galaxy.js","/*global window, jQuery, console */\n/*=============================================================================\nTODO:\n    while anon: logs saved to 'logs-null' - this will never post\n        unless we manually do so at/after login\n        OR prepend when userId and localStorage has 'logs-null'\n    wire up _delayPost and test\n\n=============================================================================*/\n/** @class MetricsLogger\n *\n *  Object to cache, output, and post log/metric messages to the server.\n *  Meant to be attached to the Galaxy object.\n *\n *  Log from objects by either attaching logger directly:\n *      panel.logger.metric( 'user dataset deletion', panel.user.id, hda.toJSON() )\n *  or using the LoggableMixin or addLogging function:\n *      MyBackboneModel.extend( LoggableMixin ).extend({ ... })\n *      addLogging( MyBackboneModel, 'my-backbone-model' )\n *\n *  Log from templates by calling directly from Galaxy object:\n *      Galaxy.logger.metric( 'template loaded', { ownedByUser : true });\n *\n *  If you attempt to log an un-serializable object (circular reference, window, etc.),\n *  that entry will not be cached (or sent). If you set consoleLevel and consoleLogger\n *  appropriately, a warning will be shown when this happens:\n *      > panel.metric( 'something weird with window', { window : window })\n *      !'Metrics logger could not stringify logArguments: ...'\n */\nfunction MetricsLogger(options) {\n    options = options || {};\n    var self = this;\n\n    ///** get the current user's id from bootstrapped data or options */\n    self.userId = window.bootstrapped && window.bootstrapped.user ? window.bootstrapped.user.id : null;\n    self.userId = self.userId || options.userId || null;\n\n    /** the (optional) console to emit logs to */\n    self.consoleLogger = options.consoleLogger || null;\n\n    self._init(options);\n    return self;\n}\n\n//----------------------------------------------------------------------------- defaults and constants\n// see: python std lib, logging\nMetricsLogger.ALL = 0;\nMetricsLogger.LOG = 0;\nMetricsLogger.DEBUG = 10;\nMetricsLogger.INFO = 20;\nMetricsLogger.WARN = 30;\nMetricsLogger.ERROR = 40;\n// metrics levels here?\n//MetricsLogger.MinorEvent  = 45;\n//MetricsLogger.MajorEvent  = 50;\nMetricsLogger.METRIC = 50;\nMetricsLogger.NONE = 100;\n\n/** default options - override these through the constructor */\nMetricsLogger.defaultOptions = {\n    /** if an incoming message has a level >= this, it will be cached - can also be a string (e.g. 'debug') */\n    logLevel: MetricsLogger.NONE,\n    /** if an incoming message has a level >= this, it will be output to the console */\n    consoleLevel: MetricsLogger.NONE,\n    /** the default 'namespace' or label associated with an incoming message (if none is passed) */\n    defaultNamespace: \"Galaxy\",\n    /** the namespaces output to the console (all namespaces will be output if this is falsy)\n     *  note: applies only to the console (not the event/metrics log/cache)\n     */\n    consoleNamespaceWhitelist: null,\n    /** Force all messages into simple strings. */\n    consoleFlattenMessages: false,\n    /** the prefix attached to client-side logs to distinguish them in the metrics db */\n    clientPrefix: \"client.\",\n\n    /** the maximum number of messages the cache should hold; if exceeded older messages are removed first */\n    maxCacheSize: 3000,\n    /** the number of messages accumulate before posting to the server; should be <= maxCacheSize */\n    postSize: 1000,\n    /** T/F whether to add a timestamp to incoming cached messages */\n    addTime: true,\n    /** string to prefix to userid for cache web storage */\n    cacheKeyPrefix: \"logs-\",\n\n    /** the relative url to post messages to */\n    postUrl: \"/api/metrics\",\n    /** delay before trying post again after two failures */\n    delayPostInMs: 1000 * 60 * 10,\n\n    /** an (optional) function that should return an object; used to send additional data with the metrics */\n    getPingData: undefined,\n    /** an (optional) function that will handle the servers response after successfully posting messages */\n    onServerResponse: undefined\n};\n\n//----------------------------------------------------------------------------- set up\n/** initialize the logger with options, set up instance vars and cache, and add onpageunload to window */\nMetricsLogger.prototype._init = function _init(options) {\n    var self = this;\n    self.options = {};\n    for (var k in MetricsLogger.defaultOptions) {\n        if (MetricsLogger.defaultOptions.hasOwnProperty(k)) {\n            self.options[k] = options.hasOwnProperty(k) ? options[k] : MetricsLogger.defaultOptions[k];\n        }\n    }\n    self.options.logLevel = self._parseLevel(self.options.logLevel);\n    self.options.consoleLevel = self._parseLevel(self.options.consoleLevel);\n    //self._emitToConsole( 'debug', 'MetricsLogger', 'MetricsLogger.options:', self.options );\n\n    /** is the logger currently sending? */\n    self._sending = false;\n    /** the setTimeout id if the logger POST has failed more than once */\n    self._waiting = null;\n    /** the current number of entries to send in a POST */\n    self._postSize = self.options.postSize;\n\n    self._initCache();\n\n    return self;\n};\n\n/** initialize the cache */\nMetricsLogger.prototype._initCache = function _initCache() {\n    try {\n        this.cache = new LoggingCache({\n            maxSize: this.options.maxCacheSize,\n            key: this.options.cacheKeyPrefix + this.userId\n        });\n    } catch (err) {\n        this._emitToConsole(\"warn\", \"MetricsLogger\", [\"Could not intitialize logging cache:\", err]);\n        this.options.logLevel = MetricsLogger.NONE;\n    }\n};\n\n/** return the numeric log level if level in 'none, debug, log, info, warn, error' */\nMetricsLogger.prototype._parseLevel = function _parseLevel(level) {\n    var type = typeof level;\n    if (type === \"number\") {\n        return level;\n    }\n    if (type === \"string\") {\n        var upper = level.toUpperCase();\n        if (MetricsLogger.hasOwnProperty(upper)) {\n            return MetricsLogger[upper];\n        }\n    }\n    throw new Error(`Unknown log level: ${level}`);\n};\n\n//----------------------------------------------------------------------------- main entry point\n/** record a log/message's arguments to the cache and/or the console based on level and namespace */\nMetricsLogger.prototype.emit = function emit(level, namespace, logArguments) {\n    //this._emitToConsole( 'debug', 'MetricsLogger', [ 'emit:', level, namespace, logArguments ]);\n    var self = this;\n    namespace = namespace || self.options.defaultNamespace;\n    if (!level || !logArguments) {\n        return self;\n    }\n    // add to cache if proper level\n    //TODO: respect do not track?\n    //if( !navigator.doNotTrack && level >= self.options.logLevel ){\n    level = self._parseLevel(level);\n    if (level >= self.options.logLevel) {\n        self._addToCache(level, namespace, logArguments);\n    }\n    // also emit to consoleLogger if proper level for that\n    if (self.consoleLogger && level >= self.options.consoleLevel) {\n        self._emitToConsole(level, namespace, logArguments);\n    }\n    return self;\n};\n\n//----------------------------------------------------------------------------- cache\n/** add a message to the cache and if messages.length is high enough post them to the server */\nMetricsLogger.prototype._addToCache = function _addToCache(level, namespace, logArguments) {\n    this._emitToConsole(\"debug\", \"MetricsLogger\", [\n        \"_addToCache:\",\n        arguments,\n        this.options.addTime,\n        this.cache.length()\n    ]);\n    //this._emitToConsole( 'debug', 'MetricsLogger', [ '\\t logArguments:', logArguments ]);\n    var self = this;\n    // try add to the cache and if we've got _postSize number of entries, attempt to post them to the server\n    try {\n        var newLength = self.cache.add(self._buildEntry(level, namespace, logArguments));\n        if (newLength >= self._postSize) {\n            self._postCache();\n        }\n        // discard entry if an error occurs, but warn if level set to do so\n    } catch (err) {\n        self._emitToConsole(\"warn\", \"MetricsLogger\", [\n            \"Metrics logger could not stringify logArguments:\",\n            namespace,\n            logArguments\n        ]);\n        self._emitToConsole(\"error\", \"MetricsLogger\", [err]);\n    }\n    return self;\n};\n\n/** build a log cache entry object from the given level, namespace, and arguments (optionally adding timestamp */\nMetricsLogger.prototype._buildEntry = function _buildEntry(level, namespace, logArguments) {\n    this._emitToConsole(\"debug\", \"MetricsLogger\", [\"_buildEntry:\", arguments]);\n    var entry = {\n        level: level,\n        namespace: this.options.clientPrefix + namespace,\n        args: logArguments\n    };\n    if (this.options.addTime) {\n        entry.time = new Date().toISOString();\n    }\n    return entry;\n};\n\n/** post _postSize messages from the cache to the server, removing them if successful\n *      if the post fails, wait until maxCacheSize is accumulated instead and try again then\n *      in addition to the messages from the cache ('metrics'), any info from getPingData (if set) will be sent\n *      onServerResponse will be called (if set) with any response from the server\n */\nMetricsLogger.prototype._postCache = function _postCache(options) {\n    options = options || {};\n    this._emitToConsole(\"info\", \"MetricsLogger\", [\"_postCache\", options, this._postSize]);\n\n    // short circuit if we're already sending\n    if (!this.options.postUrl || this._sending) {\n        return jQuery.when({});\n    }\n\n    var self = this;\n    var postSize = options.count || self._postSize;\n\n    var // do not splice - remove after *successful* post\n    entries = self.cache.get(postSize);\n\n    var entriesLength = entries.length;\n\n    var // use the optional getPingData to add any extra info we may want to send\n    postData = typeof self.options.getPingData === \"function\" ? self.options.getPingData() : {};\n\n    //console.debug( postSize, entriesLength );\n\n    // add the metrics and send\n    postData.metrics = JSON.stringify(entries);\n    //console.debug( postData.metrics );\n    self._sending = true;\n    return jQuery\n        .post(self.options.postUrl, postData)\n        .always(() => {\n            self._sending = false;\n        })\n        .fail((xhr, status, message) => {\n            // if we failed the previous time, set the next post target to the max num of entries\n            self._postSize = self.options.maxCacheSize;\n            //TODO:??\n            // log this failure to explain any gap in metrics\n            self.emit(\"error\", \"MetricsLogger\", [\n                \"_postCache error:\",\n                xhr.readyState,\n                xhr.status,\n                xhr.responseJSON || xhr.responseText\n            ]);\n            //TODO: still doesn't solve the problem that when cache == max, post will be tried on every emit\n            //TODO: see _delayPost\n        })\n        .done(response => {\n            if (typeof self.options.onServerResponse === \"function\") {\n                self.options.onServerResponse(response);\n            }\n            // only remove if post successful\n            self.cache.remove(entriesLength);\n            //console.debug( 'removed entries:', entriesLength, 'size now:', self.cache.length() );\n            // if we succeeded, reset the post target to the normal num of entries\n            self._postSize = self.options.postSize;\n        });\n    // return the xhr promise\n};\n\n/** set _waiting to true and, after delayPostInMs, set it back to false */\nMetricsLogger.prototype._delayPost = function _delayPost() {\n    //TODO: this won't work between pages\n    var self = this;\n    self._waiting = setTimeout(() => {\n        self._waiting = null;\n    }, self.options.delayPostInMs);\n};\n\nfunction usefulToString(arg) {\n    var asStr = String(arg);\n    if (asStr == \"[object Object]\") {\n        asStr = JSON.stringify(arg);\n    }\n    return asStr;\n}\n\n//----------------------------------------------------------------------------- console\n/** output message to console based on level and consoleLogger type */\nMetricsLogger.prototype._emitToConsole = function _emitToConsole(level, namespace, logArguments) {\n    //console.debug( '_emitToConsole:', level, namespace, logArguments );\n    var self = this;\n\n    var whitelist = self.options.consoleNamespaceWhitelist;\n    if (!self.consoleLogger) {\n        return self;\n    }\n    // if a whitelist for namespaces is set, bail if this namespace is not in the list\n    if (whitelist && whitelist.indexOf(namespace) === -1) {\n        return self;\n    }\n\n    var args = Array.prototype.slice.call(logArguments, 0);\n    args.unshift(namespace);\n    if (self.options.consoleFlattenMessages) {\n        args = [args.map(usefulToString).join(\" \")];\n    }\n    //TODO: script location and/or source maps?\n    //TODO: branch on navigator.userAgent == AIIEEE - it only has log\n    if (level >= MetricsLogger.METRIC && typeof self.consoleLogger.info === \"function\") {\n        return self.consoleLogger.info.apply(self.consoleLogger, args);\n    } else if (level >= MetricsLogger.ERROR && typeof self.consoleLogger.error === \"function\") {\n        return self.consoleLogger.error.apply(self.consoleLogger, args);\n    } else if (level >= MetricsLogger.WARN && typeof self.consoleLogger.warn === \"function\") {\n        self.consoleLogger.warn.apply(self.consoleLogger, args);\n    } else if (level >= MetricsLogger.INFO && typeof self.consoleLogger.info === \"function\") {\n        self.consoleLogger.info.apply(self.consoleLogger, args);\n    } else if (level >= MetricsLogger.DEBUG && typeof self.consoleLogger.debug === \"function\") {\n        self.consoleLogger.debug.apply(self.consoleLogger, args);\n    } else if (typeof self.consoleLogger.log === \"function\") {\n        self.consoleLogger.log.apply(self.consoleLogger, args);\n    }\n    return self;\n};\n\n//----------------------------------------------------------------------------- shortcuts\n// generic functions when logging from non-namespaced object (e.g. templates)\n/** log to default namespace */\nMetricsLogger.prototype.log = function log() {\n    this.emit(1, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/** debug to default namespace */\nMetricsLogger.prototype.debug = function debug() {\n    this.emit(MetricsLogger.DEBUG, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/** info to default namespace */\nMetricsLogger.prototype.info = function info() {\n    this.emit(MetricsLogger.INFO, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/** warn to default namespace */\nMetricsLogger.prototype.warn = function warn() {\n    this.emit(MetricsLogger.WARN, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/** error to default namespace */\nMetricsLogger.prototype.error = function error() {\n    this.emit(MetricsLogger.ERROR, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/** metric to default namespace */\nMetricsLogger.prototype.metric = function metric() {\n    this.emit(MetricsLogger.METRIC, this.options.defaultNamespace, Array.prototype.slice.call(arguments, 0));\n};\n\n/* ============================================================================\nTODO:\n    need a performance pass - the JSON un/parsing is a bit much\n\n============================================================================ */\n/** @class LoggingCache\n *  Simple implementation of cache wrapping an array.\n *\n *  Formats an entry before it's cached and only keeps options.maxSize number\n *  of entries. Older entries are deleted first.\n */\nfunction LoggingCache(options) {\n    var self = this;\n    return self._init(options || {});\n}\n\n/** default options */\nLoggingCache.defaultOptions = {\n    /** maximum number of entries to keep before discarding oldest */\n    maxSize: 5000\n};\n\n/** initialize with options */\nLoggingCache.prototype._init = function _init(options) {\n    if (!this._hasStorage()) {\n        //TODO: fall back to jstorage\n        throw new Error(\"LoggingCache needs localStorage\");\n    }\n    if (!options.key) {\n        throw new Error(\"LoggingCache needs key for localStorage\");\n    }\n    this.key = options.key;\n    this._initStorage();\n\n    this.maxSize = options.maxSize || LoggingCache.defaultOptions.maxSize;\n    return this;\n};\n\n/** tests for localStorage fns */\nLoggingCache.prototype._hasStorage = function _hasStorage() {\n    //TODO: modernizr\n    var test = \"test\";\n    try {\n        localStorage.setItem(test, test);\n        localStorage.removeItem(test);\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\n/** if no localStorage set for key, initialize to empty array */\nLoggingCache.prototype._initStorage = function _initStorage() {\n    if (localStorage.getItem(this.key) === null) {\n        return this.empty();\n    }\n    return this;\n};\n\n/** add an entry to the cache, removing the oldest beforehand if size >= maxSize */\nLoggingCache.prototype.add = function add(entry) {\n    var self = this;\n    var _cache = self._fetchAndParse();\n    var overage = _cache.length + 1 - self.maxSize;\n    if (overage > 0) {\n        _cache.splice(0, overage);\n    }\n    _cache.push(entry);\n    self._unparseAndStore(_cache);\n    return _cache.length;\n};\n\n/** get the entries from localStorage and parse them */\nLoggingCache.prototype._fetchAndParse = function _fetchAndParse() {\n    var self = this;\n    return JSON.parse(localStorage.getItem(self.key));\n};\n\n/** stringify the entries and put them in localStorage */\nLoggingCache.prototype._unparseAndStore = function _unparseAndStore(entries) {\n    var self = this;\n    return localStorage.setItem(self.key, JSON.stringify(entries));\n};\n\n///** process the entry before caching */\n//LoggingCache.prototype._preprocessEntry = function _preprocessEntry( entry ){\n//    return JSON.stringify( entry );\n//};\n\n/** return the length --- oh, getters where are you? */\nLoggingCache.prototype.length = function length() {\n    return this._fetchAndParse().length;\n};\n\n/** get count number of entries starting with the oldest */\nLoggingCache.prototype.get = function get(count) {\n    return this._fetchAndParse().slice(0, count);\n};\n\n/** remove count number of entries starting with the oldest */\nLoggingCache.prototype.remove = function remove(count) {\n    var _cache = this._fetchAndParse();\n    var removed = _cache.splice(0, count);\n    this._unparseAndStore(_cache);\n    return removed;\n};\n\n/** empty/clear the entire cache */\nLoggingCache.prototype.empty = function empty() {\n    localStorage.setItem(this.key, \"[]\");\n    return this;\n};\n\n/** stringify count number of entries (but do not remove) */\nLoggingCache.prototype.stringify = function stringify(count) {\n    return JSON.stringify(this.get(count));\n};\n\n/** outputs entire cache to console */\nLoggingCache.prototype.print = function print() {\n    // popup? (really, carl? a popup?) - easier to copy/paste\n    console.log(JSON.stringify(this._fetchAndParse(), null, \"  \"));\n};\n\n//=============================================================================\nexport default {\n    MetricsLogger: MetricsLogger,\n    LoggingCache: LoggingCache\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/metrics-logger.js","import Masthead from \"layout/masthead\";\nimport Panel from \"layout/panel\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport Utils from \"utils/utils\";\nvar View = Backbone.View.extend({\n    el: \"body\",\n    className: \"full-content\",\n    _panelids: [\"left\", \"right\"],\n\n    initialize: function(options) {\n        var self = this;\n        this.config = _.defaults(options.config || {}, {\n            message_box_visible: false,\n            message_box_content: \"\",\n            message_box_class: \"info\",\n            show_inactivity_warning: false,\n            inactivity_box_content: \"\"\n        });\n\n        // attach global objects, build mastheads\n        Galaxy.modal = this.modal = new Modal.View();\n        Galaxy.display = this.display = view => {\n            if (view.title) {\n                Utils.setWindowTitle(view.title);\n                view.allow_title_display = false;\n            } else {\n                Utils.setWindowTitle();\n                view.allow_title_display = true;\n            }\n            self.center.display(view);\n        };\n        Galaxy.router = this.router = options.Router && new options.Router(self, options);\n        this.masthead = new Masthead.View(this.config);\n        this.center = new Panel.CenterPanel();\n\n        // build page template\n        this.$el.attr(\"scroll\", \"no\");\n        this.$el.html(this._template());\n        this.$(\"#masthead\").replaceWith(this.masthead.$el);\n        this.$(\"#center\").append(this.center.$el);\n        this.$el.append(this.masthead.frame.$el);\n        this.$el.append(this.modal.$el);\n        this.$messagebox = this.$(\"#messagebox\");\n        this.$inactivebox = this.$(\"#inactivebox\");\n\n        // build panels\n        this.panels = {};\n        _.each(this._panelids, panel_id => {\n            var panel_class_name = panel_id.charAt(0).toUpperCase() + panel_id.slice(1);\n            var panel_class = options[panel_class_name];\n            if (panel_class) {\n                var panel_instance = new panel_class(self, options);\n                self[panel_instance.toString()] = panel_instance;\n                self.panels[panel_id] = new Panel.SidePanel({\n                    id: panel_id,\n                    el: self.$(`#${panel_id}`),\n                    view: panel_instance\n                });\n            }\n        });\n        this.render();\n\n        // start the router\n        this.router &&\n            Backbone.history.start({\n                root: Galaxy.root,\n                pushState: true\n            });\n    },\n\n    render: function() {\n        // TODO: Remove this line after select2 update\n        $(\".select2-hidden-accessible\").remove();\n        this.masthead.render();\n        this.renderMessageBox();\n        this.renderInactivityBox();\n        this.renderPanels();\n        this._checkCommunicationServerOnline();\n        return this;\n    },\n\n    /** Render message box */\n    renderMessageBox: function() {\n        if (this.config.message_box_visible) {\n            var content = this.config.message_box_content || \"\";\n            var level = this.config.message_box_class || \"info\";\n            this.$el.addClass(\"has-message-box\");\n            this.$messagebox\n                .attr(\"class\", `panel-${level}-message`)\n                .html(content)\n                .toggle(!!content)\n                .show();\n        } else {\n            this.$el.removeClass(\"has-message-box\");\n            this.$messagebox.hide();\n        }\n        return this;\n    },\n\n    /** Render inactivity warning */\n    renderInactivityBox: function() {\n        if (this.config.show_inactivity_warning) {\n            var content = this.config.inactivity_box_content || \"\";\n            var verificationLink = $(\"<a/>\")\n                .attr(\"href\", `${Galaxy.root}user/resend_verification`)\n                .text(\"Resend verification\");\n            this.$el.addClass(\"has-inactivity-box\");\n            this.$inactivebox\n                .html(`${content} `)\n                .append(verificationLink)\n                .toggle(!!content)\n                .show();\n        } else {\n            this.$el.removeClass(\"has-inactivity-box\");\n            this.$inactivebox.hide();\n        }\n        return this;\n    },\n\n    /** Render panels */\n    renderPanels: function() {\n        var self = this;\n        _.each(this._panelids, panel_id => {\n            var panel = self.panels[panel_id];\n            if (panel) {\n                panel.render();\n            } else {\n                self.$(\"#center\").css(panel_id, 0);\n                self.$(`#${panel_id}`).hide();\n            }\n        });\n        return this;\n    },\n\n    /** body template */\n    _template: function() {\n        return [\n            '<div id=\"everything\">',\n            '<div id=\"background\"/>',\n            '<div id=\"masthead\"/>',\n            '<div id=\"messagebox\"/>',\n            '<div id=\"inactivebox\" class=\"panel-warning-message\" />',\n            '<div id=\"left\" />',\n            '<div id=\"center\" />',\n            '<div id=\"right\" />',\n            \"</div>\",\n            '<div id=\"dd-helper\" />'\n        ].join(\"\");\n    },\n\n    toString: function() {\n        return \"PageLayoutView\";\n    },\n\n    /** Check if the communication server is online and show the icon otherwise hide the icon */\n    _checkCommunicationServerOnline: function() {\n        var host = window.Galaxy.config.communication_server_host;\n        var port = window.Galaxy.config.communication_server_port;\n        var preferences = window.Galaxy.user.attributes.preferences;\n        var $chat_icon_element = $(\"#show-chat-online\");\n        /** Check if the user has deactivated the communication in it's personal settings */\n        if (preferences && [\"1\", \"true\"].indexOf(preferences.communication_server) != -1) {\n            // See if the configured communication server is available\n            $.ajax({\n                url: `${host}:${port}`\n            })\n                .success(data => {\n                    // enable communication only when a user is logged in\n                    if (window.Galaxy.user.id !== null) {\n                        if ($chat_icon_element.css(\"visibility\") === \"hidden\") {\n                            $chat_icon_element.css(\"visibility\", \"visible\");\n                        }\n                    }\n                })\n                .error(data => {\n                    // hide the communication icon if the communication server is not available\n                    $chat_icon_element.css(\"visibility\", \"hidden\");\n                });\n        } else {\n            $chat_icon_element.css(\"visibility\", \"hidden\");\n        }\n    }\n});\n\nexport default { View: View };\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/layout/page.js","var Model = Backbone.Model.extend({\n    defaults: {\n        extension: \"auto\",\n        genome: \"?\",\n        url_paste: \"\",\n        status: \"init\",\n        info: null,\n        file_name: \"\",\n        file_mode: \"\",\n        file_size: 0,\n        file_type: null,\n        file_path: \"\",\n        file_data: null,\n        percentage: 0,\n        space_to_tab: false,\n        to_posix_lines: true,\n        enabled: true\n    },\n    reset: function(attr) {\n        this.clear()\n            .set(this.defaults)\n            .set(attr);\n    }\n});\nvar Collection = Backbone.Collection.extend({ model: Model });\nexport default { Model: Model, Collection: Collection };\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-model.js","import baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n// =============================================================================\n/** A view on any model that has a 'tags' attribute (a list of tag strings)\n *      Incorporates the select2 jQuery plugin for tags display/editing:\n *      http://ivaynberg.github.io/select2/\n */\nvar TagsEditor = Backbone.View.extend(baseMVC.LoggableMixin)\n    .extend(baseMVC.HiddenUntilActivatedViewMixin)\n    .extend({\n        tagName: \"div\",\n        className: \"tags-display\",\n        select_width: \"100%\",\n        events: {},\n\n        /** Set up listeners, parse options */\n        initialize: function(options) {\n            //console.debug( this, options );\n            // only listen to the model only for changes to tags - re-render\n            this.show_editor = false;\n            if (options.usePrompt === false) {\n                this.label = \"\";\n            } else {\n                this.label = `<label class=\"prompt\">${_l(\"Tags\")}</label>`;\n            }\n            this.workflow_mode = options.workflow_mode || false;\n            if (this.workflow_mode) {\n                this.events.click = \"showEditor\";\n                this.events.keydown = \"keydownHandler\";\n            }\n            this.hiddenUntilActivated(options.$activator, options);\n        },\n\n        /** Build the DOM elements, call select to on the created input, and set up behaviors */\n        render: function() {\n            var self = this;\n            if (this.workflow_mode) {\n                this.$el.html(this._workflowTemplate());\n            } else {\n                this.$el.html(this._defaultTemplate());\n            }\n            this.$input().select2({\n                placeholder: \"Add tags\",\n                width: this.workflow_mode ? this.width : this.select_width,\n                tags: function() {\n                    // initialize possible tags in the dropdown based on all the tags the user has used so far\n                    return self._getTagsUsed();\n                }\n            });\n\n            this._setUpBehaviors();\n            return this;\n        },\n\n        _hashToName: function(tag) {\n            if (tag.startsWith(\"#\")) {\n                return `name:${tag.slice(1)}`;\n            }\n            return tag;\n        },\n\n        _nameToHash: function(tag) {\n            if (tag.startsWith(\"name:\")) {\n                tag = `#${tag.slice(5)}`;\n            }\n            return tag;\n        },\n\n        /** @returns {String} the html text used to build the view's DOM */\n        _defaultTemplate: function() {\n            return [this.label, this._renderEditor()].join(\"\");\n        },\n\n        _workflowTemplate: function() {\n            // Shows labels by default, event handler controls whether we show tags or editor\n            return [this.show_editor ? this._renderEditor() : this._renderTags()].join(\" \");\n        },\n\n        keydownHandler: function(e) {\n            switch (e.which) {\n                // esc\n                case 27:\n                    // hide the tag editor when pressing escape\n                    this.hideEditor();\n                    break;\n            }\n        },\n\n        showEditor: function() {\n            this.show_editor = true;\n            this.render();\n        },\n\n        hideEditor: function() {\n            this.show_editor = false;\n            this.render();\n        },\n\n        _renderEditor: function() {\n            // set up initial tags by adding as CSV to input vals (necc. to init select2)\n            return `<input class=\"tags-input\" value=\"${this.tagsToCSV()}\"/>`;\n        },\n\n        _renderTags: function() {\n            var tags = this.model.get(\"tags\");\n            var addButton = \"static/images/fugue/tag--plus.png\";\n            var renderedArray = [];\n            _.each(tags, tag => {\n                tag = tag.indexOf(\"name:\") == 0 ? tag.slice(5) : tag;\n                var renderString = `<span class=\"label label-info\">${tag}</span>`;\n                renderedArray.push(renderString);\n            });\n            if (renderedArray.length === 0) {\n                // If there are no tags to render we just show the add-tag-button\n                renderedArray.push(`<img src=${addButton} class=\"add-tag-button\" title=\"Add tags\"/>`);\n            }\n            return renderedArray.join(\" \");\n        },\n\n        /** @returns {String} the sorted, comma-separated tags from the model */\n        tagsToCSV: function() {\n            var self = this;\n            var tagsArray = this.model.get(\"tags\");\n            if (!_.isArray(tagsArray) || _.isEmpty(tagsArray)) {\n                return \"\";\n            }\n            return tagsArray\n                .map(tag => _.escape(self._nameToHash(tag)))\n                .sort()\n                .join(\",\");\n        },\n\n        /** @returns {jQuery} the input for this view */\n        $input: function() {\n            return this.$el.find(\"input.tags-input\");\n        },\n\n        /** @returns {String[]} all tags used by the current user */\n        _getTagsUsed: function() {\n            //TODO: global\n            var self = this;\n            return _.map(Galaxy.user.get(\"tags_used\"), self._nameToHash);\n        },\n\n        /** set up any event listeners on the view's DOM (mostly handled by select2) */\n        _setUpBehaviors: function() {\n            var self = this;\n            this.$input().on(\"change\", event => {\n                // Modify any 'hashtag' 'nametags'\n                event.val = _.map(event.val, self._hashToName);\n                // save the model's tags in either remove or added event\n                self.model.save({ tags: event.val });\n                // if it's new, add the tag to the users tags\n                if (event.added) {\n                    //??: solve weird behavior in FF on test.galaxyproject.org where\n                    //  event.added.text is string object: 'String{ 0=\"o\", 1=\"n\", 2=\"e\" }'\n                    self._addNewTagToTagsUsed(`${event.added.text}`);\n                }\n            });\n        },\n\n        /** add a new tag (if not already there) to the list of all tags used by the user\n         *  @param {String} newTag  the tag to add to the list of used\n         */\n        _addNewTagToTagsUsed: function(newTag) {\n            //TODO: global\n            var tagsUsed = Galaxy.user.get(\"tags_used\");\n            if (!_.contains(tagsUsed, newTag)) {\n                tagsUsed.push(newTag);\n                tagsUsed.sort();\n                Galaxy.user.set(\"tags_used\", tagsUsed);\n            }\n        },\n\n        /** shut down event listeners and remove this view's DOM */\n        remove: function() {\n            this.$input.off();\n            this.stopListening(this.model);\n            Backbone.View.prototype.remove.call(this);\n        },\n\n        /** string rep */\n        toString: function() {\n            return [\"TagsEditor(\", `${this.model}`, \")\"].join(\"\");\n        }\n    });\n\nexport default {\n    TagsEditor: TagsEditor\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/tag.js","import jQuery from \"jquery\";\nvar $ = jQuery;\nimport QUERY_STRING from \"utils/query-string-parsing\";\nimport Ui from \"mvc/ui/ui-misc\";\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function(url, data) {\n        data = data || {};\n        data.__identifer = Math.random()\n            .toString(36)\n            .substr(2);\n        if (!$.isEmptyObject(data)) {\n            url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n            url += $.param(data, true);\n        }\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = QUERY_STRING.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function(args, name) {\n        return true;\n    },\n\n    access_denied: function() {\n        this.page.display(\n            new Ui.Message({\n                status: \"danger\",\n                message: \"You must be logged in with proper credentials to make this request.\",\n                persistent: true\n            })\n        );\n    }\n});\n\nexport default Router;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/layout/router.js","/** This renders the content of the settings popup, allowing users to specify flags i.e. for space-to-tab conversion **/\nimport Utils from \"utils/utils\";\nexport default Backbone.View.extend({\n    options: {\n        class_check: \"fa-check-square-o\",\n        class_uncheck: \"fa-square-o\",\n        parameters: [\n            {\n                id: \"space_to_tab\",\n                title: \"Convert spaces to tabs\"\n            },\n            {\n                id: \"to_posix_lines\",\n                title: \"Use POSIX standard\"\n            }\n        ]\n    },\n\n    initialize: function(options) {\n        var self = this;\n        this.model = options.model;\n        this.setElement($(\"<div/>\").addClass(\"upload-settings\"));\n        this.$el.append($(\"<div/>\").addClass(\"upload-settings-cover\"));\n        this.$el.append(\n            $(\"<table/>\")\n                .addClass(\"upload-settings-table ui-table-striped\")\n                .append(\"<tbody/>\")\n        );\n        this.$cover = this.$(\".upload-settings-cover\");\n        this.$table = this.$(\".upload-settings-table > tbody\");\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.model.trigger(\"change\");\n    },\n\n    render: function() {\n        var self = this;\n        this.$table.empty();\n        _.each(this.options.parameters, parameter => {\n            var $checkbox = $(\"<div/>\")\n                .addClass(`upload-${parameter.id} upload-icon-button fa`)\n                .addClass((self.model.get(parameter.id) && self.options.class_check) || self.options.class_uncheck)\n                .on(\"click\", () => {\n                    self.model.get(\"enabled\") && self.model.set(parameter.id, !self.model.get(parameter.id));\n                });\n            self.$table.append(\n                $(\"<tr/>\")\n                    .append($(\"<td/>\").append($checkbox))\n                    .append($(\"<td/>\").append(parameter.title))\n            );\n        });\n        this.$cover[(this.model.get(\"enabled\") && \"hide\") || \"show\"]();\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-settings.js","/** This renders the content of the ftp popup **/\nimport Utils from \"utils/utils\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model = new Backbone.Model({\n            cls: \"upload-ftp\",\n            class_add: \"upload-icon-button fa fa-square-o\",\n            class_remove: \"upload-icon-button fa fa-check-square-o\",\n            class_partial: \"upload-icon-button fa fa-minus-square-o\",\n            help_enabled: true,\n            help_text: `This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>${\n                options.ftp_upload_site\n            }</strong> using your Galaxy credentials.`,\n            collection: null,\n            onchange: function() {},\n            onadd: function() {},\n            onremove: function() {}\n        }).set(options);\n        this.collection = this.model.get(\"collection\");\n        this.setElement(this._template());\n        this.$content = this.$(\".upload-ftp-content\");\n        this.$wait = this.$(\".upload-ftp-wait\");\n        this.$help = this.$(\".upload-ftp-help\");\n        this.$number = this.$(\".upload-ftp-number\");\n        this.$disk = this.$(\".upload-ftp-disk\");\n        this.$body = this.$(\".upload-ftp-body\");\n        this.$warning = this.$(\".upload-ftp-warning\");\n        this.$select = this.$(\".upload-ftp-select-all\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        this.$wait.show();\n        this.$content.hide();\n        this.$warning.hide();\n        this.$help.hide();\n        $.ajax({\n            url: `${Galaxy.root}api/remote_files`,\n            method: \"GET\",\n            success: function(ftp_files) {\n                self.model.set(\"ftp_files\", ftp_files);\n                self._index();\n                self._renderTable();\n            },\n            error: function() {\n                self._renderTable();\n            }\n        });\n    },\n\n    /** Fill table with ftp entries */\n    _renderTable: function() {\n        var self = this;\n        var ftp_files = this.model.get(\"ftp_files\");\n        this.rows = [];\n        if (ftp_files && ftp_files.length > 0) {\n            this.$body.empty();\n            var size = 0;\n            _.each(ftp_files, ftp_file => {\n                self.rows.push(self._renderRow(ftp_file));\n                size += ftp_file.size;\n            });\n            this.$number.html(`${ftp_files.length} files`);\n            this.$disk.html(Utils.bytesToString(size, true));\n            if (this.collection) {\n                this.$(\"._has_collection\").show();\n                this.$select\n                    .addClass(this.model.get(\"class_add\"))\n                    .off()\n                    .on(\"click\", () => {\n                        self._all();\n                    });\n                this._refresh();\n            }\n            this.$content.show();\n        } else {\n            this.$warning.show();\n        }\n        this.model.get(\"help_enabled\") && this.$help.show();\n        this.$wait.hide();\n    },\n\n    /** Add row */\n    _renderRow: function(ftp_file) {\n        var self = this;\n        var options = this.model.attributes;\n        var $it = $(this._templateRow(ftp_file));\n        var $icon = $it.find(\".icon\");\n        this.$body.append($it);\n        if (this.collection) {\n            var model_index = this.ftp_index[ftp_file.path];\n            $icon.addClass(model_index === undefined ? options.class_add : options.class_remove);\n            $it.on(\"click\", () => {\n                self._switch($icon, ftp_file);\n                self._refresh();\n            });\n        } else {\n            $it.on(\"click\", () => {\n                options.onchange(ftp_file);\n            });\n        }\n        return $icon;\n    },\n\n    /** Create ftp index */\n    _index: function() {\n        var self = this;\n        this.ftp_index = {};\n        this.collection &&\n            this.collection.each(model => {\n                if (model.get(\"file_mode\") == \"ftp\") {\n                    self.ftp_index[model.get(\"file_path\")] = model.id;\n                }\n            });\n    },\n\n    /** Select all event handler */\n    _all: function() {\n        var options = this.model.attributes;\n        var ftp_files = this.model.get(\"ftp_files\");\n        var add = this.$select.hasClass(options.class_add);\n        for (var index in ftp_files) {\n            var ftp_file = ftp_files[index];\n            var model_index = this.ftp_index[ftp_file.path];\n            if ((model_index === undefined && add) || (model_index !== undefined && !add)) {\n                this._switch(this.rows[index], ftp_file);\n            }\n        }\n        this._refresh();\n    },\n\n    /** Handle collection changes */\n    _switch: function($icon, ftp_file) {\n        $icon.removeClass();\n        var options = this.model.attributes;\n        var model_index = this.ftp_index[ftp_file.path];\n        if (model_index === undefined) {\n            var new_index = options.onadd(ftp_file);\n            $icon.addClass(options.class_remove);\n            this.ftp_index[ftp_file.path] = new_index;\n        } else {\n            options.onremove(model_index);\n            $icon.addClass(options.class_add);\n            this.ftp_index[ftp_file.path] = undefined;\n        }\n    },\n\n    /** Refresh select all button state */\n    _refresh: function() {\n        var counts = _.reduce(\n            this.ftp_index,\n            (memo, element) => {\n                element !== undefined && memo++;\n                return memo;\n            },\n            0\n        );\n        this.$select.removeClass();\n        if (counts == 0) {\n            this.$select.addClass(this.model.get(\"class_add\"));\n        } else {\n            this.$select.addClass(\n                counts == this.rows.length ? this.model.get(\"class_remove\") : this.model.get(\"class_partial\")\n            );\n        }\n    },\n\n    /** Template of row */\n    _templateRow: function(options) {\n        return `<tr class=\"upload-ftp-row\"><td class=\"_has_collection\" style=\"display: none;\"><div class=\"icon\"/></td><td class=\"ftp-name\">${_.escape(\n            options.path\n        )}</td><td class=\"ftp-size\">${Utils.bytesToString(options.size)}</td><td class=\"ftp-time\">${\n            options.ctime\n        }</td></tr>`;\n    },\n\n    /** Template of main view */\n    _template: function() {\n        return `<div class=\"${this.model.get(\n            \"cls\"\n        )}\"><div class=\"upload-ftp-wait fa fa-spinner fa-spin\"/><div class=\"upload-ftp-help\">${this.model.get(\n            \"help_text\"\n        )}</div><div class=\"upload-ftp-content\"><span style=\"whitespace: nowrap; float: left;\">Available files: </span><span style=\"whitespace: nowrap; float: right;\"><span class=\"upload-icon fa fa-file-text-o\"/><span class=\"upload-ftp-number\"/>&nbsp;&nbsp;<span class=\"upload-icon fa fa-hdd-o\"/><span class=\"upload-ftp-disk\"/></span><table class=\"grid\" style=\"float: left;\"><thead><tr><th class=\"_has_collection\" style=\"display: none;\"><div class=\"upload-ftp-select-all\"></th><th>Name</th><th>Size</th><th>Created</th></tr></thead><tbody class=\"upload-ftp-body\"/></table></div><div class=\"upload-ftp-warning warningmessage\">Your FTP directory does not contain any files.</div>`;\n        (\"<div>\");\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-ftp.js","/** This renders a popover with extension details **/\nimport Utils from \"utils/utils\";\nimport Popover from \"mvc/ui/ui-popover\";\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        this.model = new Backbone.Model(options);\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        var description = _.findWhere(options.list, {\n            id: options.extension\n        });\n        this.extension_popup && this.extension_popup.remove();\n        this.extension_popup = new Popover.View({\n            placement: options.placement || \"bottom\",\n            container: options.$el\n        });\n        this.extension_popup.title(options.title);\n        this.extension_popup.empty();\n        this.extension_popup.append(this._templateDescription(description));\n        this.extension_popup.show();\n    },\n\n    /** Template for extensions description */\n    _templateDescription: function(options) {\n        if (options.description) {\n            var tmpl = options.description;\n            if (options.description_url) {\n                tmpl += `&nbsp;(<a href=\"${options.description_url}\" target=\"_blank\">read more</a>)`;\n            }\n            return tmpl;\n        } else {\n            return \"There is no description available for this file extension.\";\n        }\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-extension.js","/*\n    galaxy upload plugins - requires FormData and XMLHttpRequest\n*/\n($ => {\n    // add event properties\n    jQuery.event.props.push(\"dataTransfer\");\n\n    /**\n        Posts file data to the API\n    */\n    $.uploadpost = config => {\n        // parse options\n        var cnf = $.extend(\n            {},\n            {\n                data: {},\n                success: function() {},\n                error: function() {},\n                progress: function() {},\n                url: null,\n                maxfilesize: 2048,\n                error_filesize: \"File exceeds 2GB. Please use a FTP client.\",\n                error_default: \"Please make sure the file is available.\",\n                error_server: \"Upload request failed.\",\n                error_login: \"Uploads require you to log in.\"\n            },\n            config\n        );\n\n        // link data\n        var data = cnf.data;\n\n        // check errors\n        if (data.error_message) {\n            cnf.error(data.error_message);\n            return;\n        }\n\n        // construct form data\n        var form = new FormData();\n        for (var key in data.payload) {\n            form.append(key, data.payload[key]);\n        }\n\n        // add files to submission\n        var sizes = 0;\n        for (var key in data.files) {\n            var d = data.files[key];\n            form.append(d.name, d.file, d.file.name);\n            sizes += d.file.size;\n        }\n\n        // check file size, unless it's an ftp file\n        if (sizes > 1048576 * cnf.maxfilesize) {\n            cnf.error(cnf.error_filesize);\n            return;\n        }\n\n        // prepare request\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", cnf.url, true);\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        // captures state changes\n        xhr.onreadystatechange = () => {\n            // check for request completed, server connection closed\n            if (xhr.readyState == xhr.DONE) {\n                // parse response\n                var response = null;\n                var extra_info = \"\";\n                if (xhr.responseText) {\n                    try {\n                        response = jQuery.parseJSON(xhr.responseText);\n                        extra_info = response.err_msg;\n                    } catch (e) {\n                        response = xhr.responseText;\n                        extra_info = response;\n                    }\n                }\n                // pass any error to the error option\n                if (xhr.status < 200 || xhr.status > 299) {\n                    var text = xhr.statusText;\n                    if (xhr.status == 403) {\n                        text = cnf.error_login;\n                    } else if (xhr.status == 0) {\n                        text = cnf.error_server;\n                    } else if (!text) {\n                        text = cnf.error_default;\n                    }\n                    cnf.error(`${text} (${xhr.status}). ${extra_info}`);\n                } else {\n                    cnf.success(response);\n                }\n            }\n        };\n\n        // prepare upload progress\n        xhr.upload.addEventListener(\n            \"progress\",\n            e => {\n                if (e.lengthComputable) {\n                    cnf.progress(Math.round(e.loaded * 100 / e.total));\n                }\n            },\n            false\n        );\n\n        // send request\n        Galaxy.emit.debug(\"uploadbox::uploadpost()\", \"Posting following data.\", cnf);\n        xhr.send(form);\n    };\n\n    /**\n        Handles the upload events drag/drop etc.\n    */\n    $.fn.uploadinput = function(options) {\n        // initialize\n        var el = this;\n        var opts = $.extend(\n            {},\n            {\n                ondragover: function() {},\n                ondragleave: function() {},\n                onchange: function() {},\n                multiple: false\n            },\n            options\n        );\n\n        // append hidden upload field\n        var $input = $(`<input type=\"file\" style=\"display: none\" ${(opts.multiple && \"multiple\") || \"\"}/>`);\n        el.append(\n            $input.change(function(e) {\n                opts.onchange(e.target.files);\n                $(this).val(\"\");\n            })\n        );\n\n        // drag/drop events\n        el.on(\"drop\", e => {\n            opts.ondragleave(e);\n            if (e.dataTransfer) {\n                opts.onchange(e.dataTransfer.files);\n                e.preventDefault();\n            }\n        });\n        el.on(\"dragover\", e => {\n            e.preventDefault();\n            opts.ondragover(e);\n        });\n        el.on(\"dragleave\", e => {\n            e.stopPropagation();\n            opts.ondragleave(e);\n        });\n\n        // exports\n        return {\n            dialog: function() {\n                $input.trigger(\"click\");\n            }\n        };\n    };\n\n    /**\n        Handles the upload queue and events such as drag/drop etc.\n    */\n    $.fn.uploadbox = function(options) {\n        // parse options\n        var opts = $.extend(\n            {},\n            {\n                dragover: function() {},\n                dragleave: function() {},\n                announce: function(d) {},\n                initialize: function(d) {},\n                progress: function(d, m) {},\n                success: function(d, m) {},\n                error: function(d, m) {\n                    alert(m);\n                },\n                complete: function() {}\n            },\n            options\n        );\n\n        // file queue\n        var queue = {};\n\n        // queue index/length counter\n        var queue_index = 0;\n        var queue_length = 0;\n\n        // indicates if queue is currently running\n        var queue_running = false;\n        var queue_stop = false;\n\n        // element\n        var uploadinput = $(this).uploadinput({\n            multiple: true,\n            onchange: function(files) {\n                add(files);\n            },\n            ondragover: options.ondragover,\n            ondragleave: options.ondragleave\n        });\n\n        // add new files to upload queue\n        function add(files) {\n            if (files && files.length && !queue_running) {\n                var index = undefined;\n                _.each(files, (file, key) => {\n                    if (\n                        file.mode !== \"new\" &&\n                        _.filter(queue, f => f.name === file.name && f.size === file.size).length\n                    ) {\n                        file.duplicate = true;\n                    }\n                });\n                _.each(files, file => {\n                    if (!file.duplicate) {\n                        index = String(queue_index++);\n                        queue[index] = file;\n                        opts.announce(index, queue[index]);\n                        queue_length++;\n                    }\n                });\n                return index;\n            }\n        }\n\n        // remove file from queue\n        function remove(index) {\n            if (queue[index]) {\n                delete queue[index];\n                queue_length--;\n            }\n        }\n\n        // process an upload, recursive\n        function process() {\n            // validate\n            if (queue_length == 0 || queue_stop) {\n                queue_stop = false;\n                queue_running = false;\n                opts.complete();\n                return;\n            } else {\n                queue_running = true;\n            }\n\n            // get an identifier from the queue\n            var index = -1;\n            for (var key in queue) {\n                index = key;\n                break;\n            }\n\n            // get current file from queue\n            var file = queue[index];\n\n            // remove from queue\n            remove(index);\n\n            // create and submit data\n            $.uploadpost({\n                url: opts.url,\n                data: opts.initialize(index),\n                success: function(message) {\n                    opts.success(index, message);\n                    process();\n                },\n                error: function(message) {\n                    opts.error(index, message);\n                    process();\n                },\n                progress: function(percentage) {\n                    opts.progress(index, percentage);\n                }\n            });\n        }\n\n        /*\n            public interface\n        */\n\n        // open file browser for selection\n        function select() {\n            uploadinput.dialog();\n        }\n\n        // remove all entries from queue\n        function reset(index) {\n            for (index in queue) {\n                remove(index);\n            }\n        }\n\n        // initiate upload process\n        function start() {\n            if (!queue_running) {\n                queue_running = true;\n                process();\n            }\n        }\n\n        // stop upload process\n        function stop() {\n            queue_stop = true;\n        }\n\n        // set options\n        function configure(options) {\n            opts = $.extend({}, opts, options);\n            return opts;\n        }\n\n        // verify browser compatibility\n        function compatible() {\n            return window.File && window.FormData && window.XMLHttpRequest && window.FileList;\n        }\n\n        // export functions\n        return {\n            select: select,\n            add: add,\n            remove: remove,\n            start: start,\n            stop: stop,\n            reset: reset,\n            configure: configure,\n            compatible: compatible\n        };\n    };\n})(jQuery);\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/uploadbox.js","import HDCA from \"mvc/history/hdca-model\";\nimport STATES from \"mvc/dataset/states\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport baseCreator from \"mvc/collection/base-creator\";\nimport UI_MODAL from \"mvc/ui/ui-modal\";\nimport naturalSort from \"utils/natural-sort\";\nimport _l from \"utils/localization\";\nimport \"ui/hoverhighlight\";\n\nvar logNamespace = \"collections\";\n\n/*==============================================================================\nTODO:\n    use proper Element model and not just json\n    straighten out createFn, collection.createHDCA\n    possibly stop using modals for this\n    It would be neat to do a drag and drop\n\n==============================================================================*/\n/** A view for both DatasetDCEs and NestedDCDCEs\n *  (things that implement collection-model:DatasetCollectionElementMixin)\n */\nvar DatasetCollectionElementView = Backbone.View.extend(BASE_MVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n    tagName: \"li\",\n    className: \"collection-element\",\n\n    initialize: function(attributes) {\n        this.element = attributes.element || {};\n        this.selected = attributes.selected || false;\n    },\n\n    render: function() {\n        this.dragStartHandler = _.bind(this._dragstart, this);\n        this.dragEndHandler = _.bind(this._dragend, this);\n        var handle = this.$el\n            .attr(\"data-element-id\", this.element.id)\n            .attr(\"draggable\", true)\n            .html(this.template({ element: this.element }))\n            .get(0);\n        handle.addEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.addEventListener(\"dragend\", this.dragEndHandler, false);\n        if (this.selected) {\n            this.$el.addClass(\"selected\");\n        }\n        return this;\n    },\n\n    //TODO: lots of unused space in the element - possibly load details and display them horiz.\n    template: _.template(\n        [\n            '<a class=\"name\" title=\"',\n            _l(\"Click to rename\"),\n            '\" href=\"javascript:void(0)\">',\n            \"<%- element.name %>\",\n            \"</a>\",\n            '<button class=\"discard btn btn-sm\" title=\"',\n            _l(\"Remove this dataset from the list\"),\n            '\">',\n            _l(\"Discard\"),\n            \"</button>\"\n        ].join(\"\")\n    ),\n\n    /** select this element and pub */\n    select: function(toggle) {\n        this.$el.toggleClass(\"selected\", toggle);\n        this.trigger(\"select\", {\n            source: this,\n            selected: this.$el.hasClass(\"selected\")\n        });\n    },\n\n    /** animate the removal of this element and pub */\n    discard: function() {\n        var view = this;\n        var parentWidth = this.$el.parent().width();\n        this.$el.animate({ \"margin-right\": parentWidth }, \"fast\", () => {\n            view.trigger(\"discard\", {\n                source: view\n            });\n            view.destroy();\n        });\n    },\n\n    /** remove the DOM and any listeners */\n    destroy: function() {\n        this.off();\n        this.$el.remove();\n    },\n\n    events: {\n        click: \"_click\",\n        \"click .name\": \"_clickName\",\n        \"click .discard\": \"_clickDiscard\",\n\n        dragover: \"_sendToParent\",\n        drop: \"_sendToParent\"\n    },\n\n    /** select when the li is clicked */\n    _click: function(ev) {\n        ev.stopPropagation();\n        this.select(ev);\n    },\n\n    /** rename a pair when the name is clicked */\n    _clickName: function(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        var promptString = [\n            _l(\"Enter a new name for the element\"),\n            \":\\n(\",\n            _l(\"Note that changing the name here will not rename the dataset\"),\n            \")\"\n        ].join(\"\");\n\n        var response = prompt(`${_l(\"Enter a new name for the element\")}:`, this.element.name);\n\n        if (response) {\n            this.element.name = response;\n            this.render();\n        }\n        //TODO: cancelling with ESC leads to closure of the creator...\n    },\n\n    /** discard when the discard button is clicked */\n    _clickDiscard: function(ev) {\n        ev.stopPropagation();\n        this.discard();\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragstart: function(ev) {\n        if (ev.originalEvent) {\n            ev = ev.originalEvent;\n        }\n        ev.dataTransfer.effectAllowed = \"move\";\n        ev.dataTransfer.setData(\"text/plain\", JSON.stringify(this.element));\n\n        this.$el.addClass(\"dragging\");\n        this.$el.parent().trigger(\"collection-element.dragstart\", [this]);\n    },\n\n    /** dragging for re-ordering */\n    _dragend: function(ev) {\n        this.$el.removeClass(\"dragging\");\n        this.$el.parent().trigger(\"collection-element.dragend\", [this]);\n    },\n\n    /** manually bubble up an event to the parent/container */\n    _sendToParent: function(ev) {\n        this.$el.parent().trigger(ev);\n    },\n\n    /** string rep */\n    toString: function() {\n        return \"DatasetCollectionElementView()\";\n    }\n});\n\n// ============================================================================\n/** An interface for building collections.\n */\nvar ListCollectionCreator = Backbone.View.extend(BASE_MVC.LoggableMixin)\n    .extend(baseCreator.CollectionCreatorMixin)\n    .extend({\n        _logNamespace: logNamespace,\n\n        /** the class used to display individual elements */\n        elementViewClass: DatasetCollectionElementView,\n        /** the class this creator will create and save */\n        collectionClass: HDCA.HistoryListDatasetCollection,\n        className: \"list-collection-creator collection-creator flex-row-container\",\n\n        /** minimum number of valid elements to start with in order to build a collection of this type */\n        minElements: 1,\n\n        defaultAttributes: {\n            //TODO: remove - use new collectionClass().save()\n            /** takes elements and creates the proper collection - returns a promise */\n            creationFn: function() {\n                throw new TypeError(\"no creation fn for creator\");\n            },\n            /** fn to call when the collection is created (scoped to this) */\n            oncreate: function() {},\n            /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n            oncancel: function() {},\n            /** distance from list edge to begin autoscrolling list */\n            autoscrollDist: 24,\n            /** Color passed to hoverhighlight */\n            highlightClr: \"rgba( 64, 255, 255, 1.0 )\"\n        },\n\n        footerSettings: {\n            \".hide-originals\": \"hideOriginals\"\n        },\n\n        /** set up initial options, instance vars, behaviors */\n        initialize: function(attributes) {\n            this.metric(\"ListCollectionCreator.initialize\", attributes);\n            var creator = this;\n            _.each(this.defaultAttributes, (value, key) => {\n                value = attributes[key] || value;\n                creator[key] = value;\n            });\n\n            /** unordered, original list - cache to allow reversal */\n            creator.initialElements = attributes.elements || [];\n\n            this._setUpCommonSettings(attributes);\n            this._instanceSetUp();\n            this._elementsSetUp();\n            this._setUpBehaviors();\n        },\n\n        /** set up instance vars */\n        _instanceSetUp: function() {\n            /** Ids of elements that have been selected by the user - to preserve over renders */\n            this.selectedIds = {};\n            /** DOM elements currently being dragged */\n            this.$dragging = null;\n            /** Used for blocking UI events during ajax/operations (don't post twice) */\n            this.blocking = false;\n        },\n\n        // ------------------------------------------------------------------------ process raw list\n        /** set up main data */\n        _elementsSetUp: function() {\n            //this.debug( '-- _dataSetUp' );\n            /** a list of invalid elements and the reasons they aren't valid */\n            this.invalidElements = [];\n            //TODO: handle fundamental problem of syncing DOM, views, and list here\n            /** data for list in progress */\n            this.workingElements = [];\n            /** views for workingElements */\n            this.elementViews = [];\n\n            // copy initial list, sort, add ids if needed\n            this.workingElements = this.initialElements.slice(0);\n            this._ensureElementIds();\n            this._validateElements();\n            this._mangleDuplicateNames();\n            this._sortElements();\n        },\n\n        /** add ids to dataset objs in initial list if none */\n        _ensureElementIds: function() {\n            this.workingElements.forEach(element => {\n                if (!element.hasOwnProperty(\"id\")) {\n                    element.id = _.uniqueId();\n                }\n            });\n            return this.workingElements;\n        },\n\n        /** separate working list into valid and invalid elements for this collection */\n        _validateElements: function() {\n            var creator = this;\n            var existingNames = {};\n            creator.invalidElements = [];\n\n            this.workingElements = this.workingElements.filter(element => {\n                var problem = creator._isElementInvalid(element);\n                if (problem) {\n                    creator.invalidElements.push({\n                        element: element,\n                        text: problem\n                    });\n                }\n                return !problem;\n            });\n            return this.workingElements;\n        },\n\n        /** describe what is wrong with a particular element if anything */\n        _isElementInvalid: function(element) {\n            if (element.history_content_type !== \"dataset\") {\n                return _l(\"is not a dataset\");\n            }\n            var validState = element.state === STATES.OK || _.contains(STATES.NOT_READY_STATES, element.state);\n            if (!validState) {\n                return _l(\"has errored, is paused, or is not accessible\");\n            }\n            if (element.deleted || element.purged) {\n                return _l(\"has been deleted or purged\");\n            }\n            return null;\n        },\n\n        /** mangle duplicate names using a mac-like '(counter)' addition to any duplicates */\n        _mangleDuplicateNames: function() {\n            var SAFETY = 900;\n            var counter = 1;\n            var existingNames = {};\n            this.workingElements.forEach(element => {\n                var currName = element.name;\n                while (existingNames.hasOwnProperty(currName)) {\n                    currName = `${element.name} (${counter})`;\n                    counter += 1;\n                    if (counter >= SAFETY) {\n                        throw new Error(\"Safety hit in while loop - thats impressive\");\n                    }\n                }\n                element.name = currName;\n                existingNames[element.name] = true;\n            });\n        },\n\n        /** sort a list of elements */\n        _sortElements: function(list) {\n            // // currently only natural sort by name\n            // this.workingElements.sort( function( a, b ){ return naturalSort( a.name, b.name ); });\n            // return this.workingElements;\n        },\n\n        // ------------------------------------------------------------------------ rendering\n        // templates : ListCollectionCreator.templates,\n        /** render the entire interface */\n        render: function(speed, callback) {\n            //this.debug( '-- _render' );\n            if (this.workingElements.length < this.minElements) {\n                return this._renderInvalid(speed, callback);\n            }\n\n            this.$el.empty().html(this.templates.main());\n            this._renderHeader(speed);\n            this._renderMiddle(speed);\n            this._renderFooter(speed);\n            this._addPluginComponents();\n            this.$(\".collection-name\").focus();\n            this.trigger(\"rendered\", this);\n            return this;\n        },\n\n        /** render a simplified interface aimed at telling the user why they can't move forward */\n        _renderInvalid: function(speed, callback) {\n            //this.debug( '-- _render' );\n            this.$el.empty().html(\n                this.templates.invalidInitial({\n                    problems: this.invalidElements,\n                    elements: this.workingElements\n                })\n            );\n            if (typeof this.oncancel === \"function\") {\n                this.$(\".cancel-create.btn\").show();\n            }\n            this.trigger(\"rendered\", this);\n            return this;\n        },\n\n        /** render the header section */\n        _renderHeader: function(speed, callback) {\n            var $header = this.$(\".header\")\n                .empty()\n                .html(this.templates.header())\n                .find(\".help-content\")\n                .prepend($(this.templates.helpContent()));\n            //TODO: should only show once despite calling _renderHeader again\n            if (this.invalidElements.length) {\n                this._invalidElementsAlert();\n            }\n            return $header;\n        },\n\n        /** render the middle including the elements */\n        _renderMiddle: function(speed, callback) {\n            var $middle = this.$(\".middle\")\n                .empty()\n                .html(this.templates.middle());\n            this._renderList(speed);\n            return $middle;\n        },\n\n        /** add any jQuery/bootstrap/custom plugins to elements rendered */\n        _addPluginComponents: function() {\n            this.$(\".help-content i\").hoverhighlight(\".collection-creator\", this.highlightClr);\n        },\n\n        /** build and show an alert describing any elements that could not be included due to problems */\n        _invalidElementsAlert: function() {\n            this._showAlert(\n                this.templates.invalidElements({\n                    problems: this.invalidElements\n                }),\n                \"alert-warning\"\n            );\n        },\n\n        _disableNameAndCreate: function(disable) {\n            disable = !_.isUndefined(disable) ? disable : true;\n            if (disable) {\n                this.$(\".collection-name\").prop(\"disabled\", true);\n                this.$(\".create-collection\").toggleClass(\"disabled\", true);\n                // } else {\n                //     this.$( '.collection-name' ).prop( 'disabled', false );\n                //     this.$( '.create-collection' ).removeClass( 'disable' );\n            }\n        },\n\n        // ------------------------------------------------------------------------ rendering elements\n        /** conv. to the main list display DOM */\n        $list: function() {\n            return this.$(\".collection-elements\");\n        },\n\n        /** show or hide the clear selected control based on the num of selected elements */\n        _renderClearSelected: function() {\n            if (_.size(this.selectedIds)) {\n                this.$(\".collection-elements-controls > .clear-selected\").show();\n            } else {\n                this.$(\".collection-elements-controls > .clear-selected\").hide();\n            }\n        },\n\n        /** render the elements in order (or a warning if no elements found) */\n        _renderList: function(speed, callback) {\n            //this.debug( '-- _renderList' );\n            var creator = this;\n\n            var $tmp = jQuery(\"<div/>\");\n            var $list = creator.$list();\n\n            _.each(this.elementViews, view => {\n                view.destroy();\n                creator.removeElementView(view);\n            });\n\n            // if( !this.workingElements.length ){\n            //     this._renderNoValidElements();\n            //     return;\n            // }\n\n            creator.workingElements.forEach(element => {\n                var elementView = creator._createElementView(element);\n                $tmp.append(elementView.$el);\n            });\n\n            creator._renderClearSelected();\n            $list.empty().append($tmp.children());\n            _.invoke(creator.elementViews, \"render\");\n\n            if ($list.height() > $list.css(\"max-height\")) {\n                $list.css(\"border-width\", \"1px 0px 1px 0px\");\n            } else {\n                $list.css(\"border-width\", \"0px\");\n            }\n        },\n\n        /** create an element view, cache in elementViews, set up listeners, and return */\n        _createElementView: function(element) {\n            var elementView = new this.elementViewClass({\n                //TODO: use non-generic class or not all\n                // model : COLLECTION.DatasetDCE( element )\n                element: element,\n                selected: _.has(this.selectedIds, element.id)\n            });\n            this.elementViews.push(elementView);\n            this._listenToElementView(elementView);\n            return elementView;\n        },\n\n        /** listen to any element events */\n        _listenToElementView: function(view) {\n            var creator = this;\n            creator.listenTo(view, {\n                select: function(data) {\n                    var element = data.source.element;\n                    if (data.selected) {\n                        creator.selectedIds[element.id] = true;\n                    } else {\n                        delete creator.selectedIds[element.id];\n                    }\n                    creator.trigger(\"elements:select\", data);\n                },\n                discard: function(data) {\n                    creator.trigger(\"elements:discard\", data);\n                }\n            });\n        },\n\n        /** add a new element view based on the json in element */\n        addElementView: function(element) {\n            //TODO: workingElements is sorted, add element in appropo index\n            // add element, sort elements, find element index\n            // var view = this._createElementView( element );\n            // return view;\n        },\n\n        /** stop listening to view and remove from caches */\n        removeElementView: function(view) {\n            delete this.selectedIds[view.element.id];\n            this._renderClearSelected();\n\n            this.elementViews = _.without(this.elementViews, view);\n            this.stopListening(view);\n        },\n\n        /** render a message in the list that no elements remain to create a collection */\n        _renderNoElementsLeft: function() {\n            this._disableNameAndCreate(true);\n            this.$(\".collection-elements\").append(this.templates.noElementsLeft());\n        },\n\n        // /** render a message in the list that no valid elements were found to create a collection */\n        // _renderNoValidElements : function(){\n        //     this._disableNameAndCreate( true );\n        //     this.$( '.collection-elements' ).append( this.templates.noValidElements() );\n        // },\n\n        // ------------------------------------------------------------------------ API\n        /** convert element into JSON compatible with the collections API */\n        _elementToJSON: function(element) {\n            // return element.toJSON();\n            return element;\n        },\n\n        /** create the collection via the API\n         *  @returns {jQuery.xhr Object} the jquery ajax request\n         */\n        createList: function(name) {\n            if (!this.workingElements.length) {\n                var message = `${_l(\"No valid elements for final list\")}. `;\n                message += `<a class=\"cancel-create\" href=\"javascript:void(0);\">${_l(\"Cancel\")}</a> `;\n                message += _l(\"or\");\n                message += ` <a class=\"reset\" href=\"javascript:void(0);\">${_l(\"start over\")}</a>.`;\n                this._showAlert(message);\n                return;\n            }\n\n            var creator = this;\n\n            var elements = this.workingElements.map(element => creator._elementToJSON(element));\n\n            creator.blocking = true;\n            return creator\n                .creationFn(elements, name, creator.hideOriginals)\n                .always(() => {\n                    creator.blocking = false;\n                })\n                .fail((xhr, status, message) => {\n                    creator.trigger(\"error\", {\n                        xhr: xhr,\n                        status: status,\n                        message: _l(\"An error occurred while creating this collection\")\n                    });\n                })\n                .done(function(response, message, xhr) {\n                    creator.trigger(\"collection:created\", response, message, xhr);\n                    creator.metric(\"collection:created\", response);\n                    if (typeof creator.oncreate === \"function\") {\n                        creator.oncreate.call(this, response, message, xhr);\n                    }\n                });\n        },\n\n        // ------------------------------------------------------------------------ events\n        /** set up event handlers on self */\n        _setUpBehaviors: function() {\n            this.on(\"error\", this._errorHandler);\n\n            this.once(\"rendered\", function() {\n                this.trigger(\"rendered:initial\", this);\n            });\n\n            this.on(\"elements:select\", function(data) {\n                this._renderClearSelected();\n            });\n\n            this.on(\"elements:discard\", function(data) {\n                var element = data.source.element;\n                this.removeElementView(data.source);\n\n                this.workingElements = _.without(this.workingElements, element);\n                if (!this.workingElements.length) {\n                    this._renderNoElementsLeft();\n                }\n            });\n\n            //this.on( 'all', function(){\n            //    this.info( arguments );\n            //});\n            return this;\n        },\n\n        /** handle errors with feedback and details to the user (if available) */\n        _errorHandler: function(data) {\n            this.error(data);\n\n            var creator = this;\n            var content = data.message || _l(\"An error occurred\");\n            if (data.xhr) {\n                var xhr = data.xhr;\n                var message = data.message;\n                if (xhr.readyState === 0 && xhr.status === 0) {\n                    content += `: ${_l(\"Galaxy could not be reached and may be updating.\")}${_l(\n                        \" Try again in a few minutes.\"\n                    )}`;\n                } else if (xhr.responseJSON) {\n                    content += `:<br /><pre>${JSON.stringify(xhr.responseJSON)}</pre>`;\n                } else {\n                    content += `: ${message}`;\n                }\n            }\n            creator._showAlert(content, \"alert-danger\");\n        },\n\n        events: {\n            // header\n            \"click .more-help\": \"_clickMoreHelp\",\n            \"click .less-help\": \"_clickLessHelp\",\n            \"click .main-help\": \"_toggleHelp\",\n            \"click .header .alert button\": \"_hideAlert\",\n\n            \"click .reset\": \"reset\",\n            \"click .clear-selected\": \"clearSelectedElements\",\n\n            // elements - selection\n            \"click .collection-elements\": \"clearSelectedElements\",\n\n            // elements - drop target\n            // 'dragenter .collection-elements': '_dragenterElements',\n            // 'dragleave .collection-elements': '_dragleaveElements',\n            \"dragover .collection-elements\": \"_dragoverElements\",\n            \"drop .collection-elements\": \"_dropElements\",\n\n            // these bubble up from the elements as custom events\n            \"collection-element.dragstart .collection-elements\": \"_elementDragstart\",\n            \"collection-element.dragend   .collection-elements\": \"_elementDragend\",\n\n            // footer\n            \"change .collection-name\": \"_changeName\",\n            \"keydown .collection-name\": \"_nameCheckForEnter\",\n            \"change .hide-originals\": \"_changeHideOriginals\",\n            \"click .cancel-create\": \"_cancelCreate\",\n            \"click .create-collection\": \"_clickCreate\" //,\n        },\n\n        // ........................................................................ elements\n        /** reset all data to the initial state */\n        reset: function() {\n            this._instanceSetUp();\n            this._elementsSetUp();\n            this.render();\n        },\n\n        /** deselect all elements */\n        clearSelectedElements: function(ev) {\n            this.$(\".collection-elements .collection-element\").removeClass(\"selected\");\n            this.$(\".collection-elements-controls > .clear-selected\").hide();\n        },\n\n        //_dragenterElements : function( ev ){\n        //    //this.debug( '_dragenterElements:', ev );\n        //},\n        //TODO: if selected are dragged out of the list area - remove the placeholder - cuz it won't work anyway\n        // _dragleaveElements : function( ev ){\n        //    //this.debug( '_dragleaveElements:', ev );\n        // },\n\n        /** track the mouse drag over the list adding a placeholder to show where the drop would occur */\n        _dragoverElements: function(ev) {\n            //this.debug( '_dragoverElements:', ev );\n            ev.preventDefault();\n\n            var $list = this.$list();\n            this._checkForAutoscroll($list, ev.originalEvent.clientY);\n            var $nearest = this._getNearestElement(ev.originalEvent.clientY);\n\n            //TODO: no need to re-create - move instead\n            this.$(\".element-drop-placeholder\").remove();\n            var $placeholder = $('<div class=\"element-drop-placeholder\"></div>');\n            if (!$nearest.length) {\n                $list.append($placeholder);\n            } else {\n                $nearest.before($placeholder);\n            }\n        },\n\n        /** If the mouse is near enough to the list's top or bottom, scroll the list */\n        _checkForAutoscroll: function($element, y) {\n            var AUTOSCROLL_SPEED = 2;\n            var offset = $element.offset();\n            var scrollTop = $element.scrollTop();\n            var upperDist = y - offset.top;\n            var lowerDist = offset.top + $element.outerHeight() - y;\n            if (upperDist >= 0 && upperDist < this.autoscrollDist) {\n                $element.scrollTop(scrollTop - AUTOSCROLL_SPEED);\n            } else if (lowerDist >= 0 && lowerDist < this.autoscrollDist) {\n                $element.scrollTop(scrollTop + AUTOSCROLL_SPEED);\n            }\n        },\n\n        /** get the nearest element based on the mouse's Y coordinate.\n         *  If the y is at the end of the list, return an empty jQuery object.\n         */\n        _getNearestElement: function(y) {\n            var WIGGLE = 4;\n\n            var lis = this.$(\".collection-elements li.collection-element\").toArray();\n\n            for (var i = 0; i < lis.length; i++) {\n                var $li = $(lis[i]);\n                var top = $li.offset().top;\n                var halfHeight = Math.floor($li.outerHeight() / 2) + WIGGLE;\n                if (top + halfHeight > y && top - halfHeight < y) {\n                    return $li;\n                }\n            }\n            return $();\n        },\n\n        /** drop (dragged/selected elements) onto the list, re-ordering the internal list */\n        _dropElements: function(ev) {\n            if (ev.originalEvent) {\n                ev = ev.originalEvent;\n            }\n            // both required for firefox\n            ev.preventDefault();\n            ev.dataTransfer.dropEffect = \"move\";\n\n            // insert before the nearest element or after the last.\n            var $nearest = this._getNearestElement(ev.clientY);\n            if ($nearest.length) {\n                this.$dragging.insertBefore($nearest);\n            } else {\n                // no nearest before - insert after last element\n                this.$dragging.insertAfter(this.$(\".collection-elements .collection-element\").last());\n            }\n            // resync the creator's list based on the new DOM order\n            this._syncOrderToDom();\n            return false;\n        },\n\n        /** resync the creator's list of elements based on the DOM order */\n        _syncOrderToDom: function() {\n            var creator = this;\n            var newElements = [];\n            //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n            this.$(\".collection-elements .collection-element\").each(function() {\n                var id = $(this).attr(\"data-element-id\");\n\n                var element = _.findWhere(creator.workingElements, {\n                    id: id\n                });\n\n                if (element) {\n                    newElements.push(element);\n                } else {\n                    console.error(\"missing element: \", id);\n                }\n            });\n            this.workingElements = newElements;\n            this._renderList();\n        },\n\n        /** drag communication with element sub-views: dragstart */\n        _elementDragstart: function(ev, element) {\n            // auto select the element causing the event and move all selected\n            element.select(true);\n            this.$dragging = this.$(\".collection-elements .collection-element.selected\");\n        },\n\n        /** drag communication with element sub-views: dragend - remove the placeholder */\n        _elementDragend: function(ev, element) {\n            $(\".element-drop-placeholder\").remove();\n            this.$dragging = null;\n        },\n\n        // ------------------------------------------------------------------------ templates\n        //TODO: move to require text plugin and load these as text\n        //TODO: underscore currently unnecc. bc no vars are used\n        //TODO: better way of localizing text-nodes in long strings\n        /** underscore template fns attached to class */\n        templates: _.extend({}, baseCreator.CollectionCreatorMixin._creatorTemplates, {\n            /** the header (not including help text) */\n            header: _.template(\n                [\n                    '<div class=\"main-help well clear\">',\n                    '<a class=\"more-help\" href=\"javascript:void(0);\">',\n                    _l(\"More help\"),\n                    \"</a>\",\n                    '<div class=\"help-content\">',\n                    '<a class=\"less-help\" href=\"javascript:void(0);\">',\n                    _l(\"Less\"),\n                    \"</a>\",\n                    \"</div>\",\n                    \"</div>\",\n                    '<div class=\"alert alert-dismissable\">',\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" ',\n                    'title=\"',\n                    _l(\"Close and show more help\"),\n                    '\" aria-hidden=\"true\">&times;</button>',\n                    '<span class=\"alert-message\"></span>',\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            /** the middle: element list */\n            middle: _.template(\n                [\n                    '<div class=\"collection-elements-controls\">',\n                    '<a class=\"reset\" href=\"javascript:void(0);\" ',\n                    'title=\"',\n                    _l(\"Undo all reordering and discards\"),\n                    '\">',\n                    _l(\"Start over\"),\n                    \"</a>\",\n                    '<a class=\"clear-selected\" href=\"javascript:void(0);\" ',\n                    'title=\"',\n                    _l(\"De-select all selected datasets\"),\n                    '\">',\n                    _l(\"Clear selected\"),\n                    \"</a>\",\n                    \"</div>\",\n                    '<div class=\"collection-elements scroll-container flex-row\">',\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            /** creation and cancel controls */\n            footer: _.template(\n                [\n                    '<div class=\"attributes clear\">',\n                    '<div class=\"clear\">',\n                    '<label class=\"setting-prompt pull-right\">',\n                    _l(\"Hide original elements\"),\n                    \"?\",\n                    '<input class=\"hide-originals pull-right\" type=\"checkbox\" />',\n                    \"</label>\",\n                    \"</div>\",\n                    '<div class=\"clear\">',\n                    '<input class=\"collection-name form-control pull-right\" ',\n                    'placeholder=\"',\n                    _l(\"Enter a name for your new collection\"),\n                    '\" />',\n                    '<div class=\"collection-name-prompt pull-right\">',\n                    _l(\"Name\"),\n                    \":</div>\",\n                    \"</div>\",\n                    \"</div>\",\n\n                    '<div class=\"actions clear vertically-spaced\">',\n                    '<div class=\"other-options pull-left\">',\n                    '<button class=\"cancel-create btn\" tabindex=\"-1\">',\n                    _l(\"Cancel\"),\n                    \"</button>\",\n                    '<div class=\"create-other btn-group dropup\">',\n                    '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                    _l(\"Create a different kind of collection\"),\n                    ' <span class=\"caret\"></span>',\n                    \"</button>\",\n                    '<ul class=\"dropdown-menu\" role=\"menu\">',\n                    '<li><a href=\"#\">',\n                    _l(\"Create a <i>single</i> pair\"),\n                    \"</a></li>\",\n                    '<li><a href=\"#\">',\n                    _l(\"Create a list of <i>unpaired</i> datasets\"),\n                    \"</a></li>\",\n                    \"</ul>\",\n                    \"</div>\",\n                    \"</div>\",\n\n                    '<div class=\"main-options pull-right\">',\n                    '<button class=\"create-collection btn btn-primary\">',\n                    _l(\"Create list\"),\n                    \"</button>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            /** help content */\n            helpContent: _.template(\n                [\n                    \"<p>\",\n                    _l(\n                        [\n                            \"Collections of datasets are permanent, ordered lists of datasets that can be passed to tools and \",\n                            \"workflows in order to have analyses done on each member of the entire group. This interface allows \",\n                            \"you to create a collection and re-order the final collection.\"\n                        ].join(\"\")\n                    ),\n                    \"</p>\",\n                    \"<ul>\",\n                    \"<li>\",\n                    _l(\n                        [\n                            \"Rename elements in the list by clicking on \",\n                            '<i data-target=\".collection-element .name\">the existing name</i>.'\n                        ].join(\"\")\n                    ),\n                    \"</li>\",\n                    \"<li>\",\n                    _l(\n                        [\n                            \"Discard elements from the final created list by clicking on the \",\n                            '<i data-target=\".collection-element .discard\">\"Discard\"</i> button.'\n                        ].join(\"\")\n                    ),\n                    \"</li>\",\n                    \"<li>\",\n                    _l(\n                        [\n                            \"Reorder the list by clicking and dragging elements. Select multiple elements by clicking on \",\n                            '<i data-target=\".collection-element\">them</i> and you can then move those selected by dragging the ',\n                            \"entire group. Deselect them by clicking them again or by clicking the \",\n                            'the <i data-target=\".clear-selected\">\"Clear selected\"</i> link.'\n                        ].join(\"\")\n                    ),\n                    \"</li>\",\n                    \"<li>\",\n                    _l(\n                        [\n                            'Click the <i data-target=\".reset\">\"Start over\"</i> link to begin again as if you had just opened ',\n                            \"the interface.\"\n                        ].join(\"\")\n                    ),\n                    \"</li>\",\n                    \"<li>\",\n                    _l(\n                        ['Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'].join(\n                            \"\"\n                        )\n                    ),\n                    \"</li>\",\n                    \"</ul><br />\",\n                    \"<p>\",\n                    _l(\n                        [\n                            'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n                            'click <i data-target=\".create-collection\">\"Create list\"</i>.'\n                        ].join(\"\")\n                    ),\n                    \"</p>\"\n                ].join(\"\")\n            ),\n\n            /** shown in list when all elements are discarded */\n            invalidElements: _.template(\n                [\n                    _l(\"The following selections could not be included due to problems:\"),\n                    \"<ul><% _.each( problems, function( problem ){ %>\",\n                    \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\",\n                    \"<% }); %></ul>\"\n                ].join(\"\")\n            ),\n\n            /** shown in list when all elements are discarded */\n            noElementsLeft: _.template(\n                [\n                    '<li class=\"no-elements-left-message\">',\n                    _l(\"No elements left! \"),\n                    _l(\"Would you like to \"),\n                    '<a class=\"reset\" href=\"javascript:void(0)\">',\n                    _l(\"start over\"),\n                    \"</a>?\",\n                    \"</li>\"\n                ].join(\"\")\n            ),\n\n            /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n            invalidInitial: _.template(\n                [\n                    '<div class=\"header flex-row no-flex\">',\n                    '<div class=\"alert alert-warning\" style=\"display: block\">',\n                    '<span class=\"alert-message\">',\n                    \"<% if( _.size( problems ) ){ %>\",\n                    _l(\"The following selections could not be included due to problems\"),\n                    \":\",\n                    \"<ul><% _.each( problems, function( problem ){ %>\",\n                    \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\",\n                    \"<% }); %></ul>\",\n                    \"<% } else if( _.size( elements ) < 1 ){ %>\",\n                    _l(\"No datasets were selected\"),\n                    \".\",\n                    \"<% } %>\",\n                    \"<br />\",\n                    _l(\"At least one element is needed for the collection\"),\n                    \". \",\n                    _l(\"You may need to \"),\n                    '<a class=\"cancel-create\" href=\"javascript:void(0)\">',\n                    _l(\"cancel\"),\n                    \"</a> \",\n                    _l(\"and reselect new elements\"),\n                    \".\",\n                    \"</span>\",\n                    \"</div>\",\n                    \"</div>\",\n                    '<div class=\"footer flex-row no-flex\">',\n                    '<div class=\"actions clear vertically-spaced\">',\n                    '<div class=\"other-options pull-left\">',\n                    '<button class=\"cancel-create btn\" tabindex=\"-1\">',\n                    _l(\"Cancel\"),\n                    \"</button>\",\n                    // _l( 'Create a different kind of collection' ),\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            )\n        }),\n\n        // ------------------------------------------------------------------------ misc\n        /** string rep */\n        toString: function() {\n            return \"ListCollectionCreator\";\n        }\n    });\n\n//=============================================================================\n/** Create a modal and load its body with the given CreatorClass creator type\n *  @returns {Deferred} resolved when creator has built a collection.\n */\nvar collectionCreatorModal = function _collectionCreatorModal(elements, options, CreatorClass) {\n    var deferred = jQuery.Deferred();\n    var modal = Galaxy.modal || new UI_MODAL.View();\n    var creator;\n\n    options = _.defaults(options || {}, {\n        elements: elements,\n        oncancel: function() {\n            modal.hide();\n            deferred.reject(\"cancelled\");\n        },\n        oncreate: function(creator, response) {\n            modal.hide();\n            deferred.resolve(response);\n        }\n    });\n\n    creator = new CreatorClass(options);\n    modal.show({\n        title: options.title || _l(\"Create a collection\"),\n        body: creator.$el,\n        width: \"80%\",\n        height: \"100%\",\n        closing_events: true\n    });\n    creator.render();\n    window._collectionCreator = creator;\n\n    //TODO: remove modal header\n    return deferred;\n};\n\n/** List collection flavor of collectionCreatorModal. */\nvar listCollectionCreatorModal = function _listCollectionCreatorModal(elements, options) {\n    options = options || {};\n    options.title = _l(\"Create a collection from a list of datasets\");\n    return collectionCreatorModal(elements, options, ListCollectionCreator);\n};\n\n//==============================================================================\n/** Use a modal to create a list collection, then add it to the given history contents.\n *  @returns {Deferred} resolved when the collection is added to the history.\n */\nfunction createListCollection(contents, defaultHideSourceItems) {\n    var elements = contents.toJSON();\n\n    var promise = listCollectionCreatorModal(elements, {\n        defaultHideSourceItems: defaultHideSourceItems,\n        creationFn: function(elements, name, hideSourceItems) {\n            elements = elements.map(element => ({\n                id: element.id,\n                name: element.name,\n\n                //TODO: this allows for list:list even if the filter above does not - reconcile\n                src: element.history_content_type === \"dataset\" ? \"hda\" : \"hdca\"\n            }));\n            return contents.createHDCA(elements, \"list\", name, hideSourceItems);\n        }\n    });\n\n    return promise;\n}\n\n//==============================================================================\nexport default {\n    DatasetCollectionElementView: DatasetCollectionElementView,\n    ListCollectionCreator: ListCollectionCreator,\n\n    collectionCreatorModal: collectionCreatorModal,\n    listCollectionCreatorModal: listCollectionCreatorModal,\n    createListCollection: createListCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/list-collection-creator.js","import DC_MODEL from \"mvc/collection/collection-model\";\nimport HISTORY_CONTENT from \"mvc/history/history-content-model\";\nimport _l from \"utils/localization\";\n\n/*==============================================================================\n\nModels for DatasetCollections contained within a history.\n\nTODO:\n    these might be compactable to one class if some duplication with\n    collection-model is used.\n\n==============================================================================*/\nvar hcontentMixin = HISTORY_CONTENT.HistoryContentMixin;\n\nvar ListDC = DC_MODEL.ListDatasetCollection;\nvar PairDC = DC_MODEL.PairDatasetCollection;\nvar ListPairedDC = DC_MODEL.ListPairedDatasetCollection;\nvar ListOfListsDC = DC_MODEL.ListOfListsDatasetCollection;\n\n//==============================================================================\n/** Override to post to contents route w/o id. */\nfunction buildHDCASave(_super) {\n    return function _save(attributes, options) {\n        if (this.isNew()) {\n            options = options || {};\n            options.url = `${this.urlRoot + this.get(\"history_id\")}/contents`;\n            attributes = attributes || {};\n            attributes.type = \"dataset_collection\";\n        }\n        return _super.call(this, attributes, options);\n    };\n}\n\n//==============================================================================\n/** @class Backbone model for List Dataset Collection within a History.\n */\nvar HistoryListDatasetCollection = ListDC.extend(hcontentMixin).extend(\n    /** @lends HistoryListDatasetCollection.prototype */ {\n        defaults: _.extend(_.clone(ListDC.prototype.defaults), {\n            history_content_type: \"dataset_collection\",\n            collection_type: \"list\",\n            model_class: \"HistoryDatasetCollectionAssociation\"\n        }),\n\n        /** Override to post to contents route w/o id. */\n        save: buildHDCASave(ListDC.prototype.save),\n\n        /** String representation. */\n        toString: function() {\n            return `History${ListDC.prototype.toString.call(this)}`;\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone model for Pair Dataset Collection within a History.\n *  @constructs\n */\nvar HistoryPairDatasetCollection = PairDC.extend(hcontentMixin).extend(\n    /** @lends HistoryPairDatasetCollection.prototype */ {\n        defaults: _.extend(_.clone(PairDC.prototype.defaults), {\n            history_content_type: \"dataset_collection\",\n            collection_type: \"paired\",\n            model_class: \"HistoryDatasetCollectionAssociation\"\n        }),\n\n        /** Override to post to contents route w/o id. */\n        save: buildHDCASave(PairDC.prototype.save),\n\n        /** String representation. */\n        toString: function() {\n            return `History${PairDC.prototype.toString.call(this)}`;\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone model for List of Pairs Dataset Collection within a History. */\nvar HistoryListPairedDatasetCollection = ListPairedDC.extend(hcontentMixin).extend({\n    defaults: _.extend(_.clone(ListPairedDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"list:paired\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(ListPairedDC.prototype.save),\n\n    /** String representation. */\n    toString: function() {\n        return `History${ListPairedDC.prototype.toString.call(this)}`;\n    }\n});\n\n//==============================================================================\n/** @class Backbone model for List of Lists Dataset Collection within a History. */\nvar HistoryListOfListsDatasetCollection = ListOfListsDC.extend(hcontentMixin).extend({\n    defaults: _.extend(_.clone(ListOfListsDC.prototype.defaults), {\n        history_content_type: \"dataset_collection\",\n        collection_type: \"list:list\",\n        model_class: \"HistoryDatasetCollectionAssociation\"\n    }),\n\n    /** Override to post to contents route w/o id. */\n    save: buildHDCASave(ListOfListsDC.prototype.save),\n\n    /** String representation. */\n    toString: function() {\n        return [\"HistoryListOfListsDatasetCollection(\", this.get(\"name\"), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexport default {\n    HistoryListDatasetCollection: HistoryListDatasetCollection,\n    HistoryPairDatasetCollection: HistoryPairDatasetCollection,\n    HistoryListPairedDatasetCollection: HistoryListPairedDatasetCollection,\n    HistoryListOfListsDatasetCollection: HistoryListOfListsDatasetCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hdca-model.js","import DATASET_MODEL from \"mvc/dataset/dataset-model\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/*\nNotes:\n\nTerminology:\n    DatasetCollection/DC : a container of datasets or nested DatasetCollections\n    Element/DatasetCollectionElement/DCE : an item contained in a DatasetCollection\n    HistoryDatasetCollectionAssociation/HDCA: a DatasetCollection contained in a history\n\n\nThis all seems too complex unfortunately:\n\n- Terminology collision between DatasetCollections (DCs) and Backbone Collections.\n- In the DatasetCollections API JSON, DC Elements use a 'Has A' stucture to *contain*\n    either a dataset or a nested DC. This would make the hierarchy much taller. I've\n    decided to merge the contained JSON with the DC element json - making the 'has a'\n    relation into an 'is a' relation. This seems simpler to me and allowed a lot of\n    DRY in both models and views, but may make tracking or tracing within these models\n    more difficult (since DatasetCollectionElements are now *also* DatasetAssociations\n    or DatasetCollections (nested)). This also violates the rule of thumb about\n    favoring aggregation over inheritance.\n- Currently, there are three DatasetCollection subclasses: List, Pair, and ListPaired.\n    These each should a) be usable on their own, b) be usable in the context of\n    nesting within a collection model (at least in the case of ListPaired), and\n    c) be usable within the context of other container models (like History or\n    LibraryFolder, etc.). I've tried to separate/extract classes in order to\n    handle those three situations, but it's proven difficult to do in a simple,\n    readable manner.\n- Ideally, histories and libraries would inherit from the same server models as\n    dataset collections do since they are (in essence) dataset collections themselves -\n    making the whole nested structure simpler. This would be a large, error-prone\n    refactoring and migration.\n\nMany of the classes and heirarchy are meant as extension points so, while the\nrelations and flow may be difficult to understand initially, they'll allow us to\nhandle the growth or flux dataset collection in the future (w/o actually implementing\nany YAGNI).\n\n*/\n//_________________________________________________________________________________________________ ELEMENTS\n/** @class mixin for Dataset collection elements.\n *      When collection elements are passed from the API, the underlying element is\n *          in a sub-object 'object' (IOW, a DCE representing an HDA will have HDA json in element.object).\n *      This mixin uses the constructor and parse methods to merge that JSON with the DCE attribtues\n *          effectively changing a DCE from a container to a subclass (has a --> is a).\n */\nvar DatasetCollectionElementMixin = {\n    /** default attributes used by elements in a dataset collection */\n    defaults: {\n        model_class: \"DatasetCollectionElement\",\n        element_identifier: null,\n        element_index: null,\n        element_type: null\n    },\n\n    /** merge the attributes of the sub-object 'object' into this model */\n    _mergeObject: function(attributes) {\n        // if we don't preserve and correct ids here, the element id becomes the object id\n        // and collision in backbone's _byId will occur and only\n        _.extend(attributes, attributes.object, {\n            element_id: attributes.id\n        });\n        delete attributes.object;\n        return attributes;\n    },\n\n    /** override to merge this.object into this */\n    constructor: function(attributes, options) {\n        // console.debug( '\\t DatasetCollectionElement.constructor:', attributes, options );\n        attributes = this._mergeObject(attributes);\n        this.idAttribute = \"element_id\";\n        Backbone.Model.apply(this, arguments);\n    },\n\n    /** when the model is fetched, merge this.object into this */\n    parse: function(response, options) {\n        var attributes = response;\n        attributes = this._mergeObject(attributes);\n        return attributes;\n    }\n};\n\n/** @class Concrete class of Generic DatasetCollectionElement */\nvar DatasetCollectionElement = Backbone.Model.extend(BASE_MVC.LoggableMixin)\n    .extend(DatasetCollectionElementMixin)\n    .extend({ _logNamespace: \"collections\" });\n\n//==============================================================================\n/** @class Base/Abstract Backbone collection for Generic DCEs. */\nvar DCECollection = Backbone.Collection.extend(BASE_MVC.LoggableMixin).extend(\n    /** @lends DCECollection.prototype */ {\n        _logNamespace: \"collections\",\n\n        model: DatasetCollectionElement,\n\n        /** String representation. */\n        toString: function() {\n            return [\"DatasetCollectionElementCollection(\", this.length, \")\"].join(\"\");\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone model for a dataset collection element that is a dataset (HDA).\n */\nvar DatasetDCE = DATASET_MODEL.DatasetAssociation.extend(\n    BASE_MVC.mixin(\n        DatasetCollectionElementMixin,\n        /** @lends DatasetDCE.prototype */ {\n            /** url fn */\n            url: function() {\n                // won't always be an hda\n                if (!this.has(\"history_id\")) {\n                    console.warn(\"no endpoint for non-hdas within a collection yet\");\n                    // (a little silly since this api endpoint *also* points at hdas)\n                    return `${Galaxy.root}api/datasets`;\n                }\n                return `${Galaxy.root}api/histories/${this.get(\"history_id\")}/contents/${this.get(\"id\")}`;\n            },\n\n            defaults: _.extend(\n                {},\n                DATASET_MODEL.DatasetAssociation.prototype.defaults,\n                DatasetCollectionElementMixin.defaults\n            ),\n\n            _downloadQueryParameters: function() {\n                return `?to_ext=${this.get(\"file_ext\")}&hdca_id=${this.get(\n                    \"parent_hdca_id\"\n                )}&element_identifier=${this.get(\"element_identifier\")}`;\n            },\n\n            // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n            //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n            //  - re-apply manually for now\n            /** call the mixin constructor */\n            constructor: function(attributes, options) {\n                this.debug(\"\\t DatasetDCE.constructor:\", attributes, options);\n                //DATASET_MODEL.DatasetAssociation.prototype.constructor.call( this, attributes, options );\n                DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n            },\n\n            /** Does this model already contain detailed data (as opposed to just summary level data)? */\n            hasDetails: function() {\n                return this.elements && this.elements.length;\n            },\n\n            /** String representation. */\n            toString: function() {\n                var objStr = this.get(\"element_identifier\");\n                return [\"DatasetDCE(\", objStr, \")\"].join(\"\");\n            }\n        }\n    )\n);\n\n//==============================================================================\n/** @class DCECollection of DatasetDCE's (a list of datasets, a pair of datasets).\n */\nvar DatasetDCECollection = DCECollection.extend(\n    /** @lends DatasetDCECollection.prototype */ {\n        model: DatasetDCE,\n\n        /** String representation. */\n        toString: function() {\n            return [\"DatasetDCECollection(\", this.length, \")\"].join(\"\");\n        }\n    }\n);\n\n//_________________________________________________________________________________________________ COLLECTIONS\n/** @class Backbone model for Dataset Collections.\n *      The DC API returns an array of JSON objects under the attribute elements.\n *      This model:\n *          - removes that array/attribute ('elements') from the model,\n *          - creates a bbone collection (of the class defined in the 'collectionClass' attribute),\n *          - passes that json onto the bbone collection\n *          - caches the bbone collection in this.elements\n */\nvar DatasetCollection = Backbone.Model.extend(BASE_MVC.LoggableMixin)\n    .extend(BASE_MVC.SearchableModelMixin)\n    .extend(\n        /** @lends DatasetCollection.prototype */ {\n            _logNamespace: \"collections\",\n\n            /** default attributes for a model */\n            defaults: {\n                /* 'list', 'paired', or 'list:paired' */\n                collection_type: null,\n                //??\n                deleted: false\n            },\n\n            /** Which class to use for elements */\n            collectionClass: DCECollection,\n\n            /** set up: create elements instance var and (on changes to elements) update them  */\n            initialize: function(model, options) {\n                this.debug(`${this}(DatasetCollection).initialize:`, model, options, this);\n                this.elements = this._createElementsModel();\n                this.on(\"change:elements\", function() {\n                    this.log(\"change:elements\");\n                    //TODO: prob. better to update the collection instead of re-creating it\n                    this.elements = this._createElementsModel();\n                });\n            },\n\n            /** move elements model attribute to full collection */\n            _createElementsModel: function() {\n                this.debug(`${this}._createElementsModel`, this.collectionClass, this.get(\"elements\"), this.elements);\n                //TODO: same patterns as DatasetCollectionElement _createObjectModel - refactor to BASE_MVC.hasSubModel?\n                var elements = this.get(\"elements\") || [];\n                this.unset(\"elements\", { silent: true });\n                var self = this;\n                _.each(elements, (element, index) => {\n                    _.extend(element, {\n                        parent_hdca_id: self.get(\"id\")\n                    });\n                });\n                this.elements = new this.collectionClass(elements);\n                //this.debug( 'collectionClass:', this.collectionClass + '', this.elements );\n                return this.elements;\n            },\n\n            // ........................................................................ common queries\n            /** pass the elements back within the model json when this is serialized */\n            toJSON: function() {\n                var json = Backbone.Model.prototype.toJSON.call(this);\n                if (this.elements) {\n                    json.elements = this.elements.toJSON();\n                }\n                return json;\n            },\n\n            /** Is this collection in a 'ready' state no processing (for the collection) is left\n             *  to do on the server.\n             */\n            inReadyState: function() {\n                var populated = this.get(\"populated\");\n                return this.isDeletedOrPurged() || populated;\n            },\n\n            //TODO:?? the following are the same interface as DatasetAssociation - can we combine?\n            /** Does the DC contain any elements yet? Is a fetch() required? */\n            hasDetails: function() {\n                return this.elements.length !== 0;\n            },\n\n            /** Given the filters, what models in this.elements would be returned? */\n            getVisibleContents: function(filters) {\n                // filters unused for now\n                return this.elements;\n            },\n\n            // ........................................................................ ajax\n            /** override to use actual Dates objects for create/update times */\n            parse: function(response, options) {\n                var parsed = Backbone.Model.prototype.parse.call(this, response, options);\n                if (parsed.create_time) {\n                    parsed.create_time = new Date(parsed.create_time);\n                }\n                if (parsed.update_time) {\n                    parsed.update_time = new Date(parsed.update_time);\n                }\n                return parsed;\n            },\n\n            /** save this dataset, _Mark_ing it as deleted (just a flag) */\n            delete: function(options) {\n                if (this.get(\"deleted\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: true }, options);\n            },\n            /** save this dataset, _Mark_ing it as undeleted */\n            undelete: function(options) {\n                if (!this.get(\"deleted\") || this.get(\"purged\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: false }, options);\n            },\n\n            /** Is this collection deleted or purged? */\n            isDeletedOrPurged: function() {\n                return this.get(\"deleted\") || this.get(\"purged\");\n            },\n\n            // ........................................................................ searchable\n            /** searchable attributes for collections */\n            searchAttributes: [\"name\", \"tags\"],\n\n            // ........................................................................ misc\n            /** String representation */\n            toString: function() {\n                var idAndName = [this.get(\"id\"), this.get(\"name\") || this.get(\"element_identifier\")];\n                return `DatasetCollection(${idAndName.join(\",\")})`;\n            }\n        }\n    );\n\n//==============================================================================\n/** Model for a DatasetCollection containing datasets (non-nested).\n */\nvar ListDatasetCollection = DatasetCollection.extend(\n    /** @lends ListDatasetCollection.prototype */ {\n        /** override since we know the collection will only contain datasets */\n        collectionClass: DatasetDCECollection,\n\n        /** String representation. */\n        toString: function() {\n            return `List${DatasetCollection.prototype.toString.call(this)}`;\n        }\n    }\n);\n\n//==============================================================================\n/** Model for a DatasetCollection containing fwd/rev datasets (a list of 2).\n */\nvar PairDatasetCollection = ListDatasetCollection.extend(\n    /** @lends PairDatasetCollection.prototype */ {\n        /** String representation. */\n        toString: function() {\n            return `Pair${DatasetCollection.prototype.toString.call(this)}`;\n        }\n    }\n);\n\n//_________________________________________________________________________________________________ NESTED COLLECTIONS\n// this is where things get weird, man. Weird.\n//TODO: it might be possible to compact all the following...I think.\n//==============================================================================\n/** @class Backbone model for a Generic DatasetCollectionElement that is also a DatasetCollection\n *      (a nested collection). Currently only list:paired.\n */\nvar NestedDCDCE = DatasetCollection.extend(\n    BASE_MVC.mixin(\n        DatasetCollectionElementMixin,\n        /** @lends NestedDCDCE.prototype */ {\n            // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n            //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n            //  - re-apply manually it now\n            /** call the mixin constructor */\n            constructor: function(attributes, options) {\n                this.debug(\"\\t NestedDCDCE.constructor:\", attributes, options);\n                DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n            },\n\n            /** String representation. */\n            toString: function() {\n                var objStr = this.object ? `${this.object}` : this.get(\"element_identifier\");\n                return [\"NestedDCDCE(\", objStr, \")\"].join(\"\");\n            }\n        }\n    )\n);\n\n//==============================================================================\n/** @class Backbone collection containing Generic NestedDCDCE's (nested dataset collections).\n */\nvar NestedDCDCECollection = DCECollection.extend(\n    /** @lends NestedDCDCECollection.prototype */ {\n        /** This is a collection of nested collections */\n        model: NestedDCDCE,\n\n        /** String representation. */\n        toString: function() {\n            return [\"NestedDCDCECollection(\", this.length, \")\"].join(\"\");\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone model for a paired dataset collection within a list:paired dataset collection.\n */\nvar NestedPairDCDCE = PairDatasetCollection.extend(\n    BASE_MVC.mixin(\n        DatasetCollectionElementMixin,\n        /** @lends NestedPairDCDCE.prototype */ {\n            //TODO:?? possibly rename to NestedDatasetCollection?\n\n            // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n            //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n            //  - re-apply manually it now\n            /** This is both a collection and a collection element - call the constructor */\n            constructor: function(attributes, options) {\n                this.debug(\"\\t NestedPairDCDCE.constructor:\", attributes, options);\n                //DatasetCollection.constructor.call( this, attributes, options );\n                DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n            },\n\n            /** String representation. */\n            toString: function() {\n                var objStr = this.object ? `${this.object}` : this.get(\"element_identifier\");\n                return [\"NestedPairDCDCE(\", objStr, \")\"].join(\"\");\n            }\n        }\n    )\n);\n\n//==============================================================================\n/** @class Backbone collection for a backbone collection containing paired dataset collections.\n */\nvar NestedPairDCDCECollection = NestedDCDCECollection.extend(\n    /** @lends PairDCDCECollection.prototype */ {\n        /** We know this collection is composed of only nested pair collections */\n        model: NestedPairDCDCE,\n\n        /** String representation. */\n        toString: function() {\n            return [\"NestedPairDCDCECollection(\", this.length, \")\"].join(\"\");\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone Model for a DatasetCollection (list) that contains DatasetCollections (pairs).\n */\nvar ListPairedDatasetCollection = DatasetCollection.extend(\n    /** @lends ListPairedDatasetCollection.prototype */ {\n        /** list:paired is the only collection that itself contains collections */\n        collectionClass: NestedPairDCDCECollection,\n\n        /** String representation. */\n        toString: function() {\n            return [\"ListPairedDatasetCollection(\", this.get(\"name\"), \")\"].join(\"\");\n        }\n    }\n);\n\n//==============================================================================\n/** @class Backbone model for a list dataset collection within a list:list dataset collection. */\nvar NestedListDCDCE = ListDatasetCollection.extend(\n    BASE_MVC.mixin(\n        DatasetCollectionElementMixin,\n        /** @lends NestedListDCDCE.prototype */ {\n            /** This is both a collection and a collection element - call the constructor */\n            constructor: function(attributes, options) {\n                this.debug(\"\\t NestedListDCDCE.constructor:\", attributes, options);\n                DatasetCollectionElementMixin.constructor.call(this, attributes, options);\n            },\n\n            /** String representation. */\n            toString: function() {\n                var objStr = this.object ? `${this.object}` : this.get(\"element_identifier\");\n                return [\"NestedListDCDCE(\", objStr, \")\"].join(\"\");\n            }\n        }\n    )\n);\n\n//==============================================================================\n/** @class Backbone collection containing list dataset collections. */\nvar NestedListDCDCECollection = NestedDCDCECollection.extend({\n    /** We know this collection is composed of only nested pair collections */\n    model: NestedListDCDCE,\n\n    /** String representation. */\n    toString: function() {\n        return [\"NestedListDCDCECollection(\", this.length, \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\n/** @class Backbone Model for a DatasetCollection (list) that contains other lists. */\nvar ListOfListsDatasetCollection = DatasetCollection.extend({\n    /** list:paired is the only collection that itself contains collections */\n    collectionClass: NestedListDCDCECollection,\n\n    /** String representation. */\n    toString: function() {\n        return [\"ListOfListsDatasetCollection(\", this.get(\"name\"), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexport default {\n    ListDatasetCollection: ListDatasetCollection,\n    PairDatasetCollection: PairDatasetCollection,\n    ListPairedDatasetCollection: ListPairedDatasetCollection,\n    ListOfListsDatasetCollection: ListOfListsDatasetCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/collection-model.js","export default {\n    tool: \"fa-wrench\",\n    data_input: \"fa-file-o\",\n    data_collection_input: \"fa-folder-o\",\n    subworkflow: \"fa-sitemap fa-rotate-270\",\n    pause: \"fa-pause\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/workflow/workflow-icons.js","import HISTORY_CONTENTS from \"mvc/history/history-contents\";\nimport HISTORY_PREFS from \"mvc/history/history-preferences\";\nimport CONTROLLED_FETCH_COLLECTION from \"mvc/base/controlled-fetch-collection\";\nimport UTILS from \"utils/utils\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/** @class Model for a Galaxy history resource - both a record of user\n *      tool use and a collection of the datasets those tools produced.\n *  @name History\n *  @augments Backbone.Model\n */\nvar History = Backbone.Model.extend(BASE_MVC.LoggableMixin).extend(\n    BASE_MVC.mixin(\n        BASE_MVC.SearchableModelMixin,\n        /** @lends History.prototype */ {\n            _logNamespace: \"history\",\n\n            /** ms between fetches when checking running jobs/datasets for updates */\n            UPDATE_DELAY: 4000,\n\n            // values from api (may need more)\n            defaults: {\n                model_class: \"History\",\n                id: null,\n                name: \"Unnamed History\",\n                state: \"new\",\n\n                deleted: false,\n                contents_active: {},\n                contents_states: {}\n            },\n\n            urlRoot: `${Galaxy.root}api/histories`,\n\n            contentsClass: HISTORY_CONTENTS.HistoryContents,\n\n            /** What model fields to search with */\n            searchAttributes: [\"name\", \"annotation\", \"tags\"],\n\n            /** Adding title and singular tag */\n            searchAliases: {\n                title: \"name\",\n                tag: \"tags\"\n            },\n\n            // ........................................................................ set up/tear down\n            /** Set up the model\n             *  @param {Object} historyJSON model data for this History\n             *  @param {Object} options     any extra settings including logger\n             */\n            initialize: function(historyJSON, options) {\n                options = options || {};\n                this.logger = options.logger || null;\n                this.log(`${this}.initialize:`, historyJSON, options);\n\n                /** HistoryContents collection of the HDAs contained in this history. */\n                this.contents = new this.contentsClass([], {\n                    history: this,\n                    historyId: this.get(\"id\"),\n                    order: options.order\n                });\n\n                this._setUpListeners();\n                this._setUpCollectionListeners();\n\n                /** cached timeout id for the dataset updater */\n                this.updateTimeoutId = null;\n            },\n\n            /** set up any event listeners for this history including those to the contained HDAs\n             *  events: error:contents  if an error occurred with the contents collection\n             */\n            _setUpListeners: function() {\n                // if the model's id changes ('current' or null -> an actual id), update the contents history_id\n                return this.on({\n                    error: function(model, xhr, options, msg, details) {\n                        this.clearUpdateTimeout();\n                    },\n                    \"change:id\": function(model, newId) {\n                        if (this.contents) {\n                            this.contents.historyId = newId;\n                        }\n                    }\n                });\n            },\n\n            /** event handlers for the contents submodels */\n            _setUpCollectionListeners: function() {\n                if (!this.contents) {\n                    return this;\n                }\n                // bubble up errors\n                return this.listenTo(this.contents, {\n                    error: function() {\n                        this.trigger.apply(this, jQuery.makeArray(arguments));\n                    }\n                });\n            },\n\n            // ........................................................................ derived attributes\n            /**  */\n            contentsShown: function() {\n                var contentsActive = this.get(\"contents_active\");\n                var shown = contentsActive.active || 0;\n                shown += this.contents.includeDeleted ? contentsActive.deleted : 0;\n                shown += this.contents.includeHidden ? contentsActive.hidden : 0;\n                return shown;\n            },\n\n            /** convert size in bytes to a more human readable version */\n            nice_size: function() {\n                var size = this.get(\"size\");\n                return size ? UTILS.bytesToString(size, true, 2) : _l(\"(empty)\");\n            },\n\n            /** override to add nice_size */\n            toJSON: function() {\n                return _.extend(Backbone.Model.prototype.toJSON.call(this), {\n                    nice_size: this.nice_size()\n                });\n            },\n\n            /** override to allow getting nice_size */\n            get: function(key) {\n                if (key === \"nice_size\") {\n                    return this.nice_size();\n                }\n                return Backbone.Model.prototype.get.apply(this, arguments);\n            },\n\n            // ........................................................................ common queries\n            /** T/F is this history owned by the current user (Galaxy.user)\n             *      Note: that this will return false for an anon user even if the history is theirs.\n             */\n            ownedByCurrUser: function() {\n                // no currUser\n                if (!Galaxy || !Galaxy.user) {\n                    return false;\n                }\n                // user is anon or history isn't owned\n                if (Galaxy.user.isAnonymous() || Galaxy.user.id !== this.get(\"user_id\")) {\n                    return false;\n                }\n                return true;\n            },\n\n            /** Return the number of running jobs assoc with this history (note: unknown === 0) */\n            numOfUnfinishedJobs: function() {\n                var unfinishedJobIds = this.get(\"non_ready_jobs\");\n                return unfinishedJobIds ? unfinishedJobIds.length : 0;\n            },\n\n            /** Return the number of running hda/hdcas in this history (note: unknown === 0) */\n            numOfUnfinishedShownContents: function() {\n                return this.contents.runningAndActive().length || 0;\n            },\n\n            // ........................................................................ updates\n            _fetchContentRelatedAttributes: function() {\n                var contentRelatedAttrs = [\"size\", \"non_ready_jobs\", \"contents_active\", \"hid_counter\"];\n                return this.fetch({\n                    data: $.param({\n                        keys: contentRelatedAttrs.join(\",\")\n                    })\n                });\n            },\n\n            /** check for any changes since the last time we updated (or fetch all if ) */\n            refresh: function(options) {\n                // console.log( this + '.refresh' );\n                options = options || {};\n                var self = this;\n\n                // note if there was no previous update time, all summary contents will be fetched\n                var lastUpdateTime = self.lastUpdateTime;\n                // if we don't flip this, then a fully-fetched list will not be re-checked via fetch\n                this.contents.allFetched = false;\n                var fetchFn =\n                    self.contents.currentPage !== 0\n                        ? () => self.contents.fetchPage(self.contents.currentPage)\n                        : () => self.contents.fetchUpdated(lastUpdateTime);\n                // note: if there was no previous update time, all summary contents will be fetched\n                return fetchFn().done((response, status, xhr) => {\n                    var serverResponseDatetime;\n                    try {\n                        serverResponseDatetime = new Date(xhr.getResponseHeader(\"Date\"));\n                    } catch (err) {}\n                    self.lastUpdateTime = serverResponseDatetime || new Date();\n                    self.checkForUpdates(options);\n                });\n            },\n\n            /** continuously fetch updated contents every UPDATE_DELAY ms if this history's datasets or jobs are unfinished */\n            checkForUpdates: function(options) {\n                // console.log( this + '.checkForUpdates' );\n                options = options || {};\n                var delay = this.UPDATE_DELAY;\n                var self = this;\n                if (!self.id) {\n                    return;\n                }\n\n                function _delayThenUpdate() {\n                    // prevent buildup of updater timeouts by clearing previous if any, then set new and cache id\n                    self.clearUpdateTimeout();\n                    self.updateTimeoutId = setTimeout(() => {\n                        self.refresh(options);\n                    }, delay);\n                }\n\n                // if there are still datasets in the non-ready state, recurse into this function with the new time\n                var nonReadyContentCount = this.numOfUnfinishedShownContents();\n                // console.log( 'nonReadyContentCount:', nonReadyContentCount );\n                if (nonReadyContentCount > 0) {\n                    _delayThenUpdate();\n                } else {\n                    // no datasets are running, but currently runnning jobs may still produce new datasets\n                    // see if the history has any running jobs and continue to update if so\n                    // (also update the size for the user in either case)\n                    self._fetchContentRelatedAttributes().done(historyData => {\n                        // console.log( 'non_ready_jobs:', historyData.non_ready_jobs );\n                        if (self.numOfUnfinishedJobs() > 0) {\n                            _delayThenUpdate();\n                        } else {\n                            // otherwise, let listeners know that all updates have stopped\n                            self.trigger(\"ready\");\n                        }\n                    });\n                }\n            },\n\n            /** clear the timeout and the cached timeout id */\n            clearUpdateTimeout: function() {\n                if (this.updateTimeoutId) {\n                    clearTimeout(this.updateTimeoutId);\n                    this.updateTimeoutId = null;\n                }\n            },\n\n            // ........................................................................ ajax\n            /** override to use actual Dates objects for create/update times */\n            parse: function(response, options) {\n                var parsed = Backbone.Model.prototype.parse.call(this, response, options);\n                if (parsed.create_time) {\n                    parsed.create_time = new Date(parsed.create_time);\n                }\n                if (parsed.update_time) {\n                    parsed.update_time = new Date(parsed.update_time);\n                }\n                return parsed;\n            },\n\n            /** fetch this histories data (using options) then it's contents (using contentsOptions) */\n            fetchWithContents: function(options, contentsOptions) {\n                options = options || {};\n                var self = this;\n\n                // console.log( this + '.fetchWithContents' );\n                // TODO: push down to a base class\n                options.view = \"dev-detailed\";\n\n                // fetch history then use history data to fetch (paginated) contents\n                return this.fetch(options).then(function getContents(history) {\n                    self.contents.history = self;\n                    self.contents.setHistoryId(history.id);\n                    return self.fetchContents(contentsOptions);\n                });\n            },\n\n            /** fetch this histories contents, adjusting options based on the stored history preferences */\n            fetchContents: function(options) {\n                options = options || {};\n                var self = this;\n\n                // we're updating, reset the update time\n                self.lastUpdateTime = new Date();\n                return self.contents.fetchCurrentPage(options);\n            },\n\n            /** save this history, _Mark_ing it as deleted (just a flag) */\n            _delete: function(options) {\n                if (this.get(\"deleted\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: true }, options);\n            },\n            /** purge this history, _Mark_ing it as purged and removing all dataset data from the server */\n            purge: function(options) {\n                if (this.get(\"purged\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: true, purged: true }, options);\n            },\n            /** save this history, _Mark_ing it as undeleted */\n            undelete: function(options) {\n                if (!this.get(\"deleted\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: false }, options);\n            },\n\n            /** Make a copy of this history on the server\n             *  @param {Boolean} current    if true, set the copy as the new current history (default: true)\n             *  @param {String} name        name of new history (default: none - server sets to: Copy of <current name>)\n             *  @fires copied               passed this history and the response JSON from the copy\n             *  @returns {xhr}\n             */\n            copy: function(current, name, allDatasets) {\n                current = current !== undefined ? current : true;\n                if (!this.id) {\n                    throw new Error(\"You must set the history ID before copying it.\");\n                }\n\n                var postData = { history_id: this.id };\n                if (current) {\n                    postData.current = true;\n                }\n                if (name) {\n                    postData.name = name;\n                }\n                if (!allDatasets) {\n                    postData.all_datasets = false;\n                }\n                postData.view = \"dev-detailed\";\n\n                var history = this;\n                var copy = jQuery.post(this.urlRoot, postData);\n                // if current - queue to setAsCurrent before firing 'copied'\n                if (current) {\n                    return copy.then(response => {\n                        var newHistory = new History(response);\n                        return newHistory.setAsCurrent().done(() => {\n                            history.trigger(\"copied\", history, response);\n                        });\n                    });\n                }\n                return copy.done(response => {\n                    history.trigger(\"copied\", history, response);\n                });\n            },\n\n            setAsCurrent: function() {\n                var history = this;\n\n                var xhr = jQuery.getJSON(`${Galaxy.root}history/set_as_current?id=${this.id}`);\n\n                xhr.done(() => {\n                    history.trigger(\"set-as-current\", history);\n                });\n                return xhr;\n            },\n\n            // ........................................................................ misc\n            toString: function() {\n                return `History(${this.get(\"id\")},${this.get(\"name\")})`;\n            }\n        }\n    )\n);\n\n//==============================================================================\nvar _collectionSuper = CONTROLLED_FETCH_COLLECTION.InfinitelyScrollingCollection;\n/** @class A collection of histories (per user)\n *      that maintains the current history as the first in the collection.\n *  New or copied histories become the current history.\n */\nvar HistoryCollection = _collectionSuper.extend(BASE_MVC.LoggableMixin).extend({\n    _logNamespace: \"history\",\n\n    model: History,\n    /** @type {String} initial order used by collection */\n    order: \"update_time\",\n    /** @type {Number} limit used for the first fetch (or a reset) */\n    limitOnFirstFetch: 10,\n    /** @type {Number} limit used for each subsequent fetch */\n    limitPerFetch: 10,\n\n    initialize: function(models, options) {\n        options = options || {};\n        this.log(\"HistoryCollection.initialize\", models, options);\n        _collectionSuper.prototype.initialize.call(this, models, options);\n\n        /** @type {boolean} should deleted histories be included */\n        this.includeDeleted = options.includeDeleted || false;\n\n        /** @type {String} encoded id of the history that's current */\n        this.currentHistoryId = options.currentHistoryId;\n\n        this.setUpListeners();\n        // note: models are sent to reset *after* this fn ends; up to this point\n        // the collection *is empty*\n    },\n\n    urlRoot: `${Galaxy.root}api/histories`,\n    url: function() {\n        return this.urlRoot;\n    },\n\n    /** set up reflexive event handlers */\n    setUpListeners: function setUpListeners() {\n        return this.on({\n            // when a history is deleted, remove it from the collection (if optionally set to do so)\n            \"change:deleted\": function(history) {\n                // TODO: this becomes complicated when more filters are used\n                this.debug(\"change:deleted\", this.includeDeleted, history.get(\"deleted\"));\n                if (!this.includeDeleted && history.get(\"deleted\")) {\n                    this.remove(history);\n                }\n            },\n            // listen for a history copy, setting it to current\n            copied: function(original, newData) {\n                this.setCurrent(new History(newData, []));\n            },\n            // when a history is made current, track the id in the collection\n            \"set-as-current\": function(history) {\n                var oldCurrentId = this.currentHistoryId;\n                this.trigger(\"no-longer-current\", oldCurrentId);\n                this.currentHistoryId = history.id;\n            }\n        });\n    },\n\n    /** override to change view */\n    _buildFetchData: function(options) {\n        return _.extend(_collectionSuper.prototype._buildFetchData.call(this, options), {\n            view: \"dev-detailed\"\n        });\n    },\n\n    /** override to filter out deleted and purged */\n    _buildFetchFilters: function(options) {\n        var superFilters = _collectionSuper.prototype._buildFetchFilters.call(this, options) || {};\n        var filters = {};\n        if (!this.includeDeleted) {\n            filters.deleted = false;\n            filters.purged = false;\n        } else {\n            // force API to return both deleted and non\n            //TODO: when the API is updated, remove this\n            filters.deleted = null;\n        }\n        return _.defaults(superFilters, filters);\n    },\n\n    /** override to fetch current as well (as it may be outside the first 10, etc.) */\n    fetchFirst: function(options) {\n        var self = this;\n        // TODO: batch?\n        var xhr = $.when();\n        if (this.currentHistoryId) {\n            xhr = _collectionSuper.prototype.fetchFirst.call(self, {\n                silent: true,\n                limit: 1,\n                filters: {\n                    // without these a deleted current history will return [] here and block the other xhr\n                    purged: \"\",\n                    deleted: \"\",\n                    \"encoded_id-in\": this.currentHistoryId\n                }\n            });\n        }\n        return xhr.then(() => {\n            options = options || {};\n            options.offset = 0;\n            return self.fetchMore(options);\n        });\n    },\n\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: _.extend(_.clone(_collectionSuper.prototype.comparators), {\n        name: BASE_MVC.buildComparator(\"name\", {\n            ascending: true\n        }),\n        \"name-dsc\": BASE_MVC.buildComparator(\"name\", {\n            ascending: false\n        }),\n        size: BASE_MVC.buildComparator(\"size\", {\n            ascending: false\n        }),\n        \"size-asc\": BASE_MVC.buildComparator(\"size\", {\n            ascending: true\n        })\n    }),\n\n    /** override to always have the current history first */\n    sort: function(options) {\n        options = options || {};\n        var silent = options.silent;\n        var currentHistory = this.remove(this.get(this.currentHistoryId));\n        _collectionSuper.prototype.sort.call(this, _.defaults({ silent: true }, options));\n        this.unshift(currentHistory, { silent: true });\n        if (!silent) {\n            this.trigger(\"sort\", this, options);\n        }\n        return this;\n    },\n\n    /** create a new history and by default set it to be the current history */\n    create: function create(data, hdas, historyOptions, xhrOptions) {\n        //TODO: .create is actually a collection function that's overridden here\n        var collection = this;\n\n        var xhr = jQuery.getJSON(`${Galaxy.root}history/create_new_current`);\n        return xhr.done(newData => {\n            collection.setCurrent(new History(newData, [], historyOptions || {}));\n        });\n    },\n\n    /** set the current history to the given history, placing it first in the collection.\n     *  Pass standard bbone options for use in unshift.\n     *  @triggers new-current passed history and this collection\n     */\n    setCurrent: function(history, options) {\n        options = options || {};\n        // new histories go in the front\n        this.unshift(history, options);\n        this.currentHistoryId = history.get(\"id\");\n        if (!options.silent) {\n            this.trigger(\"new-current\", history, this);\n        }\n        return this;\n    },\n\n    toString: function toString() {\n        return `HistoryCollection(${this.length},current:${this.currentHistoryId})`;\n    }\n});\n\n//==============================================================================\nexport default {\n    History: History,\n    HistoryCollection: HistoryCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-model.js","import CONTROLLED_FETCH_COLLECTION from \"mvc/base/controlled-fetch-collection\";\nimport HDA_MODEL from \"mvc/history/hda-model\";\nimport HDCA_MODEL from \"mvc/history/hdca-model\";\nimport HISTORY_PREFS from \"mvc/history/history-preferences\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport AJAX_QUEUE from \"utils/ajax-queue\";\n\n//==============================================================================\nvar _super = CONTROLLED_FETCH_COLLECTION.PaginatedCollection;\n/** @class Backbone collection for history content.\n *      NOTE: history content seems like a dataset collection, but differs in that it is mixed:\n *          each element can be either an HDA (dataset) or a DatasetCollection and co-exist on\n *          the same level.\n *      Dataset collections on the other hand are not mixed and (so far) can only contain either\n *          HDAs or child dataset collections on one level.\n *      This is why this does not inherit from any of the DatasetCollections (currently).\n */\nvar HistoryContents = _super.extend(BASE_MVC.LoggableMixin).extend({\n    _logNamespace: \"history\",\n\n    // ........................................................................ set up\n    limitPerPage: 500,\n\n    /** @type {Integer} how many contents per call to fetch when using progressivelyFetchDetails */\n    limitPerProgressiveFetch: 500,\n\n    /** @type {String} order used here and when fetching from server */\n    order: \"hid\",\n\n    /** root api url */\n    urlRoot: `${Galaxy.root}api/histories`,\n\n    /** complete api url */\n    url: function() {\n        return `${this.urlRoot}/${this.historyId}/contents`;\n    },\n\n    /** Set up */\n    initialize: function(models, options) {\n        options = options || {};\n        _super.prototype.initialize.call(this, models, options);\n\n        this.history = options.history || null;\n        this.setHistoryId(options.historyId || null);\n        /** @type {Boolean} does this collection contain and fetch deleted elements */\n        this.includeDeleted = options.includeDeleted || this.includeDeleted;\n        /** @type {Boolean} does this collection contain and fetch non-visible elements */\n        this.includeHidden = options.includeHidden || this.includeHidden;\n\n        // backbonejs uses collection.model.prototype.idAttribute to determine if a model is *already* in a collection\n        //  and either merged or replaced. In this case, our 'model' is a function so we need to add idAttribute\n        //  manually here - if we don't, contents will not merge but be replaced/swapped.\n        this.model.prototype.idAttribute = \"type_id\";\n    },\n\n    // ........................................................................ composite collection\n    /** since history content is a mix, override model fn into a factory, creating based on history_content_type */\n    model: function(attrs, options) {\n        if (attrs.history_content_type === \"dataset\") {\n            return new HDA_MODEL.HistoryDatasetAssociation(attrs, options);\n        } else if (attrs.history_content_type === \"dataset_collection\") {\n            switch (attrs.collection_type) {\n                case \"list\":\n                    return new HDCA_MODEL.HistoryListDatasetCollection(attrs, options);\n                case \"paired\":\n                    return new HDCA_MODEL.HistoryPairDatasetCollection(attrs, options);\n                case \"list:paired\":\n                    return new HDCA_MODEL.HistoryListPairedDatasetCollection(attrs, options);\n                case \"list:list\":\n                    return new HDCA_MODEL.HistoryListOfListsDatasetCollection(attrs, options);\n            }\n            // This is a hack inside a hack:\n            // Raise a plain object with validationError to fake a model.validationError\n            // (since we don't have a model to use validate with)\n            // (the outer hack being the mixed content/model function in this collection)\n            var msg = `Unknown collection_type: ${attrs.collection_type}`;\n            console.warn(msg, attrs);\n            return { validationError: msg };\n        }\n        return {\n            validationError: `Unknown history_content_type: ${attrs.history_content_type}`\n        };\n    },\n\n    setHistoryId: function(newId) {\n        this.historyId = newId;\n        this._setUpWebStorage();\n    },\n\n    /** Set up client side storage. Currently PersistanStorage keyed under 'history:<id>' */\n    _setUpWebStorage: function(initialSettings) {\n        // TODO: use initialSettings\n        if (!this.historyId) {\n            return;\n        }\n        this.storage = new HISTORY_PREFS.HistoryPrefs({\n            id: HISTORY_PREFS.HistoryPrefs.historyStorageKey(this.historyId)\n        });\n        this.trigger(\"new-storage\", this.storage, this);\n\n        this.on({\n            \"include-deleted\": function(newVal) {\n                this.storage.includeDeleted(newVal);\n            },\n            \"include-hidden\": function(newVal) {\n                this.storage.includeHidden(newVal);\n            }\n        });\n\n        this.includeDeleted = this.storage.includeDeleted() || false;\n        this.includeHidden = this.storage.includeHidden() || false;\n        return this;\n    },\n\n    // ........................................................................ common queries\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: _.extend(_.clone(_super.prototype.comparators), {\n        name: BASE_MVC.buildComparator(\"name\", { ascending: true }),\n        \"name-dsc\": BASE_MVC.buildComparator(\"name\", {\n            ascending: false\n        }),\n        hid: BASE_MVC.buildComparator(\"hid\", { ascending: false }),\n        \"hid-asc\": BASE_MVC.buildComparator(\"hid\", { ascending: true })\n    }),\n\n    /** Get every model in this collection not in a 'ready' state (running). */\n    running: function() {\n        return this.filter(c => !c.inReadyState());\n    },\n\n    /** return contents that are not ready and not deleted/hidden */\n    runningAndActive: function() {\n        return this.filter(\n            c =>\n                !c.inReadyState() &&\n                c.get(\"visible\") &&\n                // TODO: deletedOrPurged?\n                !c.get(\"deleted\")\n        );\n    },\n\n    /** Get the model with the given hid\n     *  @param {Int} hid the hid to search for\n     *  @returns {HistoryDatasetAssociation} the model with the given hid or undefined if not found\n     */\n    getByHid: function(hid) {\n        // note: there *can* be more than one content with a given hid, this finds the first based on order\n        return this.findWhere({ hid: hid });\n    },\n\n    /** return true if all contents have details */\n    haveDetails: function() {\n        return this.all(c => c.hasDetails());\n    },\n\n    // ........................................................................ hidden / deleted\n    /** return a new contents collection of only hidden items */\n    hidden: function() {\n        return this.filter(c => c.hidden());\n    },\n\n    /** return a new contents collection of only hidden items */\n    deleted: function() {\n        return this.filter(c => c.get(\"deleted\"));\n    },\n\n    /** return a new contents collection of only hidden items */\n    visibleAndUndeleted: function() {\n        return this.filter(\n            c =>\n                c.get(\"visible\") &&\n                // TODO: deletedOrPurged?\n                !c.get(\"deleted\")\n        );\n    },\n\n    /** create a setter in order to publish the change */\n    setIncludeDeleted: function(setting, options) {\n        if (_.isBoolean(setting) && setting !== this.includeDeleted) {\n            this.includeDeleted = setting;\n            if (_.result(options, \"silent\")) {\n                return;\n            }\n            this.trigger(\"include-deleted\", setting, this);\n        }\n    },\n\n    /** create a setter in order to publish the change */\n    setIncludeHidden: function(setting, options) {\n        if (_.isBoolean(setting) && setting !== this.includeHidden) {\n            this.includeHidden = setting;\n            options = options || {};\n            if (_.result(options, \"silent\")) {\n                return;\n            }\n            this.trigger(\"include-hidden\", setting, this);\n        }\n    },\n\n    // ........................................................................ ajax\n    // ............ controlled fetch collection\n    /** override to get expanded ids from sessionStorage and pass to API as details */\n    fetch: function(options) {\n        options = options || {};\n        if (this.historyId && !options.details) {\n            var prefs = HISTORY_PREFS.HistoryPrefs.get(this.historyId).toJSON();\n            if (!_.isEmpty(prefs.expandedIds)) {\n                options.details = _.values(prefs.expandedIds).join(\",\");\n            }\n        }\n        return _super.prototype.fetch.call(this, options);\n    },\n\n    // ............. ControlledFetch stuff\n    /** override to include the API versioning flag */\n    _buildFetchData: function(options) {\n        return _.extend(_super.prototype._buildFetchData.call(this, options), {\n            v: \"dev\"\n        });\n    },\n\n    /** Extend to include details and version */\n    _fetchParams: _super.prototype._fetchParams.concat([\n        // TODO: remove (the need for) both\n        /** version */\n        \"v\",\n        /** dataset ids to get full details of */\n        \"details\"\n    ]),\n\n    /** override to add deleted/hidden filters */\n    _buildFetchFilters: function(options) {\n        var superFilters = _super.prototype._buildFetchFilters.call(this, options) || {};\n        var filters = {};\n        if (!this.includeDeleted) {\n            filters.deleted = false;\n            filters.purged = false;\n        }\n        if (!this.includeHidden) {\n            filters.visible = true;\n        }\n        return _.defaults(superFilters, filters);\n    },\n\n    // ............ paginated collection\n    getTotalItemCount: function() {\n        return this.history.contentsShown();\n    },\n\n    // ............ history contents specific ajax\n    /** override to filter requested contents to those updated after the Date 'since' */\n    fetchUpdated: function(since, options) {\n        if (since) {\n            options = options || { filters: {} };\n            options.remove = false;\n            options.filters = {\n                \"update_time-ge\": since.toISOString(),\n                // workflows will produce hidden datasets (non-output datasets) that still\n                // need to be updated in the collection or they'll update forever\n                // we can remove the default visible filter by using an 'empty' value\n                visible: \"\"\n            };\n        }\n        return this.fetch(options);\n    },\n\n    /** fetch all the deleted==true contents of this collection */\n    fetchDeleted: function(options) {\n        options = options || {};\n        var self = this;\n        options.filters = _.extend(options.filters, {\n            // all deleted, purged or not\n            deleted: true,\n            purged: undefined\n        });\n        options.remove = false;\n\n        self.trigger(\"fetching-deleted\", self);\n        return self.fetch(options).always(() => {\n            self.trigger(\"fetching-deleted-done\", self);\n        });\n    },\n\n    /** fetch all the visible==false contents of this collection */\n    fetchHidden: function(options) {\n        options = options || {};\n        var self = this;\n        options.filters = _.extend(options.filters, {\n            visible: false\n        });\n        options.remove = false;\n\n        self.trigger(\"fetching-hidden\", self);\n        return self.fetch(options).always(() => {\n            self.trigger(\"fetching-hidden-done\", self);\n        });\n    },\n\n    /** fetch detailed model data for all contents in this collection */\n    fetchAllDetails: function(options) {\n        options = options || {};\n        var detailsFlag = { details: \"all\" };\n        options.data = _.extend(options.data || {}, detailsFlag);\n        return this.fetch(options);\n    },\n\n    /** specialty fetch method for retrieving the element_counts of all hdcas in the history */\n    fetchCollectionCounts: function(options) {\n        options = options || {};\n        options.keys = [\"type_id\", \"element_count\"].join(\",\");\n        options.filters = _.extend(options.filters || {}, {\n            history_content_type: \"dataset_collection\"\n        });\n        options.remove = false;\n        return this.fetch(options);\n    },\n\n    // ............. quasi-batch ops\n    // TODO: to batch\n    /** helper that fetches using filterParams then calls save on each fetched using updateWhat as the save params */\n    _filterAndUpdate: function(filterParams, updateWhat) {\n        var self = this;\n        var idAttribute = self.model.prototype.idAttribute;\n        var updateArgs = [updateWhat];\n\n        return self.fetch({ filters: filterParams, remove: false }).then(fetched => {\n            // convert filtered json array to model array\n            fetched = fetched.reduce((modelArray, currJson, i) => {\n                var model = self.get(currJson[idAttribute]);\n                return model ? modelArray.concat(model) : modelArray;\n            }, []);\n            return self.ajaxQueue(\"save\", updateArgs, fetched);\n        });\n    },\n\n    /** using a queue, perform ajaxFn on each of the models in this collection */\n    ajaxQueue: function(ajaxFn, args, collection) {\n        collection = collection || this.models;\n        return new AJAX_QUEUE.AjaxQueue(\n            collection\n                .slice()\n                .reverse()\n                .map((content, i) => {\n                    var fn = _.isString(ajaxFn) ? content[ajaxFn] : ajaxFn;\n                    return () => fn.apply(content, args);\n                })\n        ).deferred;\n    },\n\n    /** fetch contents' details in batches of limitPerCall - note: only get searchable details here */\n    progressivelyFetchDetails: function(options) {\n        options = options || {};\n        var deferred = jQuery.Deferred();\n        var self = this;\n        var limit = options.limitPerCall || self.limitPerProgressiveFetch;\n        // TODO: only fetch tags and annotations if specifically requested\n        var searchAttributes = HDA_MODEL.HistoryDatasetAssociation.prototype.searchAttributes;\n        var detailKeys = searchAttributes.join(\",\");\n\n        function _recursivelyFetch(offset) {\n            offset = offset || 0;\n            var _options = _.extend(_.clone(options), {\n                view: \"summary\",\n                keys: detailKeys,\n                limit: limit,\n                offset: offset,\n                reset: offset === 0,\n                remove: false\n            });\n\n            _.defer(() => {\n                self.fetch\n                    .call(self, _options)\n                    .fail(deferred.reject)\n                    .done(response => {\n                        deferred.notify(response, limit, offset);\n                        if (response.length !== limit) {\n                            self.allFetched = true;\n                            deferred.resolve(response, limit, offset);\n                        } else {\n                            _recursivelyFetch(offset + limit);\n                        }\n                    });\n            });\n        }\n        _recursivelyFetch();\n        return deferred;\n    },\n\n    /** does some bit of JSON represent something that can be copied into this contents collection */\n    isCopyable: function(contentsJSON) {\n        var copyableModelClasses = [\"HistoryDatasetAssociation\", \"HistoryDatasetCollectionAssociation\"];\n        return (\n            _.isObject(contentsJSON) && contentsJSON.id && _.contains(copyableModelClasses, contentsJSON.model_class)\n        );\n    },\n\n    /** copy an existing, accessible hda into this collection */\n    copy: function(json) {\n        // TODO: somehow showhorn all this into 'save'\n        var id;\n\n        var type;\n        var contentType;\n        if (_.isString(json)) {\n            id = json;\n            contentType = \"hda\";\n            type = \"dataset\";\n        } else {\n            id = json.id;\n            contentType =\n                {\n                    HistoryDatasetAssociation: \"hda\",\n                    LibraryDatasetDatasetAssociation: \"ldda\",\n                    HistoryDatasetCollectionAssociation: \"hdca\"\n                }[json.model_class] || \"hda\";\n            type = contentType === \"hdca\" ? \"dataset_collection\" : \"dataset\";\n        }\n        var collection = this;\n\n        var xhr = jQuery\n            .ajax(this.url(), {\n                method: \"POST\",\n                contentType: \"application/json\",\n                data: JSON.stringify({\n                    content: id,\n                    source: contentType,\n                    type: type\n                })\n            })\n            .done(response => {\n                collection.add([response], { parse: true });\n            })\n            .fail((error, status, message) => {\n                collection.trigger(\"error\", collection, xhr, {}, \"Error copying contents\", {\n                    type: type,\n                    id: id,\n                    source: contentType\n                });\n            });\n\n        return xhr;\n    },\n\n    /** create a new HDCA in this collection */\n    createHDCA: function(elementIdentifiers, collectionType, name, hideSourceItems, options) {\n        // normally collection.create returns the new model, but we need the promise from the ajax, so we fake create\n        //precondition: elementIdentifiers is an array of plain js objects\n        //  in the proper form to create the collectionType\n        var hdca = this.model({\n            history_content_type: \"dataset_collection\",\n            collection_type: collectionType,\n            history_id: this.historyId,\n            name: name,\n            hide_source_items: hideSourceItems || false,\n            // should probably be able to just send in a bunch of json here and restruct per class\n            // note: element_identifiers is now (incorrectly) an attribute\n            element_identifiers: elementIdentifiers\n            // do not create the model on the client until the ajax returns\n        });\n        return hdca.save(options);\n    },\n\n    // ........................................................................ searching\n    /** return true if all contents have the searchable attributes */\n    haveSearchDetails: function() {\n        return (\n            this.allFetched &&\n            this.all((\n                content // null (which is a valid returned annotation value)\n            ) =>\n                // will return false when using content.has( 'annotation' )\n                //TODO: a bit hacky - formalize\n                _.has(content.attributes, \"annotation\")\n            )\n        );\n    },\n\n    /** return a new collection of contents whose attributes contain the substring matchesWhat */\n    matches: function(matchesWhat) {\n        return this.filter(content => content.matches(matchesWhat));\n    },\n\n    // ........................................................................ misc\n    /** In this override, copy the historyId to the clone */\n    clone: function() {\n        var clone = Backbone.Collection.prototype.clone.call(this);\n        clone.historyId = this.historyId;\n        return clone;\n    },\n\n    /** String representation. */\n    toString: function() {\n        return [\"HistoryContents(\", [this.historyId, this.length].join(), \")\"].join(\"\");\n    }\n});\n\n//==============================================================================\nexport default {\n    HistoryContents: HistoryContents\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-contents.js","import BASE_MVC from \"mvc/base-mvc\";\n\nvar logNamespace = \"history\";\n\n// ============================================================================\n/** session storage for individual history preferences */\nvar HistoryPrefs = BASE_MVC.SessionStorageModel.extend(\n    /** @lends HistoryPrefs.prototype */ {\n        //TODO:?? move to user prefs?\n        defaults: {\n            //TODO:?? expandedIds to array?\n            expandedIds: {},\n            show_deleted: false,\n            show_hidden: false\n        },\n\n        /** add an hda id to the hash of expanded hdas */\n        addExpanded: function(model) {\n            //TODO: use type_id and not model\n            var current = this.get(\"expandedIds\");\n            current[model.id] = model.get(\"id\");\n            this.save(\"expandedIds\", current);\n        },\n\n        /** remove an hda id from the hash of expanded hdas */\n        removeExpanded: function(model) {\n            var current = this.get(\"expandedIds\");\n            delete current[model.id];\n            this.save(\"expandedIds\", current);\n        },\n\n        isExpanded: function(contentId) {\n            return _.result(this.get(\"expandedIds\"), contentId, false);\n        },\n\n        allExpanded: function() {\n            return _.values(this.get(\"expandedIds\"));\n        },\n\n        clearExpanded: function() {\n            this.set(\"expandedIds\", {});\n        },\n\n        includeDeleted: function(val) {\n            // moving the invocation here so other components don't need to know the key\n            // TODO: change this key later\n            if (!_.isUndefined(val)) {\n                this.set(\"show_deleted\", val);\n            }\n            return this.get(\"show_deleted\");\n        },\n\n        includeHidden: function(val) {\n            // TODO: change this key later\n            if (!_.isUndefined(val)) {\n                this.set(\"show_hidden\", val);\n            }\n            return this.get(\"show_hidden\");\n        },\n\n        toString: function() {\n            return `HistoryPrefs(${this.id})`;\n        }\n    },\n    {\n        // ........................................................................ class vars\n        // class lvl for access w/o instantiation\n        storageKeyPrefix: \"history:\",\n\n        /** key string to store each histories settings under */\n        historyStorageKey: function historyStorageKey(historyId) {\n            if (!historyId) {\n                throw new Error(`HistoryPrefs.historyStorageKey needs valid id: ${historyId}`);\n            }\n            // single point of change\n            return HistoryPrefs.storageKeyPrefix + historyId;\n        },\n\n        /** return the existing storage for the history with the given id (or create one if it doesn't exist) */\n        get: function get(historyId) {\n            return new HistoryPrefs({\n                id: HistoryPrefs.historyStorageKey(historyId)\n            });\n        },\n\n        /** clear all history related items in sessionStorage */\n        clearAll: function clearAll(historyId) {\n            for (var key in sessionStorage) {\n                if (key.indexOf(HistoryPrefs.storageKeyPrefix) === 0) {\n                    sessionStorage.removeItem(key);\n                }\n            }\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    HistoryPrefs: HistoryPrefs\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-preferences.js","import BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"list\";\n//==============================================================================\n/** A view which, when first rendered, shows only summary data/attributes, but\n *      can be expanded to show further details (and optionally fetch those\n *      details from the server).\n */\nvar ExpandableView = Backbone.View.extend(BASE_MVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: Although the reasoning behind them is different, this shares a lot with HiddenUntilActivated above: combine them\n    //PRECONDITION: model must have method hasDetails\n    //PRECONDITION: subclasses must have templates.el and templates.details\n\n    initialize: function(attributes) {\n        /** are the details of this view expanded/shown or not? */\n        this.expanded = attributes.expanded || false;\n        this.log(\"\\t expanded:\", this.expanded);\n        this.fxSpeed = attributes.fxSpeed !== undefined ? attributes.fxSpeed : this.fxSpeed;\n    },\n\n    // ........................................................................ render main\n    /** jq fx speed */\n    fxSpeed: \"fast\",\n\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render: function(speed) {\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors($newRender);\n        this._queueNewRender($newRender, speed);\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     *      If the view is already expanded, build the details as well.\n     */\n    _buildNewRender: function() {\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = $(this.templates.el(this.model.toJSON(), this));\n        if (this.expanded) {\n            this.$details($newRender).replaceWith(this._renderDetails().show());\n        }\n        return $newRender;\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender: function($newRender, speed) {\n        speed = speed === undefined ? this.fxSpeed : speed;\n        var view = this;\n\n        if (speed === 0) {\n            view._swapNewRender($newRender);\n            view.trigger(\"rendered\", view);\n        } else {\n            $(view).queue(\"fx\", [\n                next => {\n                    view.$el.fadeOut(speed, next);\n                },\n                next => {\n                    view._swapNewRender($newRender);\n                    next();\n                },\n                next => {\n                    view.$el.fadeIn(speed, next);\n                },\n                next => {\n                    view.trigger(\"rendered\", view);\n                    next();\n                }\n            ]);\n        }\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender: function($newRender) {\n        return this.$el\n            .empty()\n            .attr(\"class\", _.isFunction(this.className) ? this.className() : this.className)\n            .append($newRender.children());\n    },\n\n    /** set up js behaviors, event handlers for elements within the given container\n     *  @param {jQuery} $container jq object that contains the elements to process (defaults to this.$el)\n     */\n    _setUpBehaviors: function($where) {\n        $where = $where || this.$el;\n        // set up canned behavior on children (bootstrap, popupmenus, editable_text, etc.)\n        //make_popup_menus( $where );\n        $where.find(\"[title]\").tooltip({ placement: \"bottom\" });\n    },\n\n    // ......................................................................... details\n    /** shortcut to details DOM (as jQ) */\n    $details: function($where) {\n        $where = $where || this.$el;\n        return $where.find(\"> .details\");\n    },\n\n    /** build the DOM for the details and set up behaviors on it */\n    _renderDetails: function() {\n        var $newDetails = $(this.templates.details(this.model.toJSON(), this));\n        this._setUpBehaviors($newDetails);\n        return $newDetails;\n    },\n\n    // ......................................................................... expansion/details\n    /** Show or hide the details\n     *  @param {Boolean} expand if true, expand; if false, collapse\n     */\n    toggleExpanded: function(expand) {\n        expand = expand === undefined ? !this.expanded : expand;\n        if (expand) {\n            this.expand();\n        } else {\n            this.collapse();\n        }\n        return this;\n    },\n\n    /** Render and show the full, detailed body of this view including extra data and controls.\n     *      note: if the model does not have detailed data, fetch that data before showing the body\n     *  @fires expanded when a body has been expanded\n     */\n    expand: function() {\n        var view = this;\n        return view._fetchModelDetails().always(() => {\n            view._expand();\n        });\n    },\n\n    /** Check for model details and, if none, fetch them.\n     *  @returns {jQuery.promise} the model.fetch.xhr if details are being fetched, an empty promise if not\n     */\n    _fetchModelDetails: function() {\n        if (!this.model.hasDetails()) {\n            return this.model.fetch();\n        }\n        return jQuery.when();\n    },\n\n    /** Inner fn called when expand (public) has fetched the details */\n    _expand: function() {\n        var view = this;\n        var $newDetails = view._renderDetails();\n        view.$details().replaceWith($newDetails);\n        // needs to be set after the above or the slide will not show\n        view.expanded = true;\n        view.$details().slideDown(view.fxSpeed, () => {\n            view.trigger(\"expanded\", view);\n        });\n    },\n\n    /** Hide the body/details of an HDA.\n     *  @fires collapsed when a body has been collapsed\n     */\n    collapse: function() {\n        this.debug(`${this}(ExpandableView).collapse`);\n        var view = this;\n        view.expanded = false;\n        this.$details().slideUp(view.fxSpeed, () => {\n            view.trigger(\"collapsed\", view);\n        });\n    }\n});\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *      Inherits from Expandable, Selectable, Draggable.\n *  The DOM contains warnings, a title bar, and a series of primary action controls.\n *      Primary actions are meant to be easily accessible item functions (such as delete)\n *      that are rendered in the title bar.\n *\n *  Details are rendered when the user clicks the title bar or presses enter/space when\n *      the title bar is in focus.\n *\n *  Designed as a base class for history panel contents - but usable elsewhere (I hope).\n */\nvar ListItemView = ExpandableView.extend(\n    BASE_MVC.mixin(BASE_MVC.SelectableViewMixin, BASE_MVC.DraggableViewMixin, {\n        tagName: \"div\",\n        className: \"list-item\",\n\n        /** Set up the base class and all mixins */\n        initialize: function(attributes) {\n            ExpandableView.prototype.initialize.call(this, attributes);\n            BASE_MVC.SelectableViewMixin.initialize.call(this, attributes);\n            BASE_MVC.DraggableViewMixin.initialize.call(this, attributes);\n            this._setUpListeners();\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            // hide the primary actions in the title bar when selectable and narrow\n            this.on(\n                \"selectable\",\n                function(isSelectable) {\n                    if (isSelectable) {\n                        this.$(\".primary-actions\").hide();\n                    } else {\n                        this.$(\".primary-actions\").show();\n                    }\n                },\n                this\n            );\n            return this;\n        },\n\n        // ........................................................................ rendering\n        /** In this override, call methods to build warnings, titlebar and primary actions */\n        _buildNewRender: function() {\n            var $newRender = ExpandableView.prototype._buildNewRender.call(this);\n            $newRender.children(\".warnings\").replaceWith(this._renderWarnings());\n            $newRender.children(\".title-bar\").replaceWith(this._renderTitleBar());\n            $newRender.children(\".primary-actions\").append(this._renderPrimaryActions());\n            $newRender.find(\"> .title-bar .subtitle\").replaceWith(this._renderSubtitle());\n            return $newRender;\n        },\n\n        /** In this override, render the selector controls and set up dragging before the swap */\n        _swapNewRender: function($newRender) {\n            ExpandableView.prototype._swapNewRender.call(this, $newRender);\n            if (this.selectable) {\n                this.showSelector(0);\n            }\n            if (this.draggable) {\n                this.draggableOn();\n            }\n            return this.$el;\n        },\n\n        /** Render any warnings the item may need to show (e.g. \"I'm deleted\") */\n        _renderWarnings: function() {\n            var view = this;\n            var $warnings = $('<div class=\"warnings\"></div>');\n            var json = view.model.toJSON();\n            //TODO:! unordered (map)\n            _.each(view.templates.warnings, templateFn => {\n                $warnings.append($(templateFn(json, view)));\n            });\n            return $warnings;\n        },\n\n        /** Render the title bar (the main/exposed SUMMARY dom element) */\n        _renderTitleBar: function() {\n            return $(this.templates.titleBar(this.model.toJSON(), this));\n        },\n\n        /** Return an array of jQ objects containing common/easily-accessible item controls */\n        _renderPrimaryActions: function() {\n            // override this\n            return [];\n        },\n\n        /** Render the title bar (the main/exposed SUMMARY dom element) */\n        _renderSubtitle: function() {\n            return $(this.templates.subtitle(this.model.toJSON(), this));\n        },\n\n        // ......................................................................... events\n        /** event map */\n        events: {\n            // expand the body when the title is clicked or when in focus and space or enter is pressed\n            \"click .title-bar\": \"_clickTitleBar\",\n            \"keydown .title-bar\": \"_keyDownTitleBar\",\n            \"click .selector\": \"toggleSelect\"\n        },\n\n        /** expand when the title bar is clicked */\n        _clickTitleBar: function(event) {\n            event.stopPropagation();\n            if (event.altKey) {\n                this.toggleSelect(event);\n                if (!this.selectable) {\n                    this.showSelector();\n                }\n            } else {\n                this.toggleExpanded();\n            }\n        },\n\n        /** expand when the title bar is in focus and enter or space is pressed */\n        _keyDownTitleBar: function(event) {\n            // bail (with propagation) if keydown and not space or enter\n            var KEYCODE_SPACE = 32;\n\n            var KEYCODE_RETURN = 13;\n            if (\n                event &&\n                event.type === \"keydown\" &&\n                (event.keyCode === KEYCODE_SPACE || event.keyCode === KEYCODE_RETURN)\n            ) {\n                this.toggleExpanded();\n                event.stopPropagation();\n                return false;\n            }\n            return true;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `ListItemView(${modelString})`;\n        }\n    })\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListItemView.prototype.templates = (() => {\n    var elTemplato = BASE_MVC.wrapTemplate([\n        '<div class=\"list-element\">',\n        // errors, messages, etc.\n        '<div class=\"warnings\"></div>',\n\n        // multi-select checkbox\n        '<div class=\"selector\">',\n        '<span class=\"fa fa-2x fa-square-o\"></span>',\n        \"</div>\",\n        // space for title bar buttons - gen. floated to the right\n        '<div class=\"primary-actions\"></div>',\n        '<div class=\"title-bar\"></div>',\n\n        // expandable area for more details\n        '<div class=\"details\"></div>',\n        \"</div>\"\n    ]);\n\n    var warnings = {};\n\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            // adding a tabindex here allows focusing the title bar and the use of keydown to expand the dataset display\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            //TODO: prob. belongs in dataset-list-item\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    var subtitleTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"subtitle\"></div>'\n    ]);\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"details\"></div>'\n    ]);\n\n    return {\n        el: elTemplato,\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate,\n        details: detailsTemplate\n    };\n})();\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *  *AND* can display some sub-list of it's own when expanded (e.g. dataset collections).\n *  This list will 'foldout' when the item is expanded depending on this.foldoutStyle:\n *      If 'foldout': will expand vertically to show the nested list\n *      If 'drilldown': will overlay the parent list\n *\n *  Inherits from ListItemView.\n *\n *  _renderDetails does the work of creating this.details: a sub-view that shows the nested list\n */\nvar FoldoutListItemView = ListItemView.extend({\n    /** If 'foldout': show the sub-panel inside the expanded item\n     *  If 'drilldown': only fire events and handle by pub-sub\n     *      (allow the panel containing this item to attach it, hide itself, etc.)\n     */\n    foldoutStyle: \"foldout\",\n    /** Panel view class to instantiate for the sub-panel */\n    foldoutPanelClass: null,\n\n    /** override to:\n     *      add attributes foldoutStyle and foldoutPanelClass for config poly\n     *      disrespect attributes.expanded if drilldown\n     */\n    initialize: function(attributes) {\n        if (this.foldoutStyle === \"drilldown\") {\n            this.expanded = false;\n        }\n        this.foldoutStyle = attributes.foldoutStyle || this.foldoutStyle;\n        this.foldoutPanelClass = attributes.foldoutPanelClass || this.foldoutPanelClass;\n\n        ListItemView.prototype.initialize.call(this, attributes);\n        this.foldout = this._createFoldoutPanel();\n    },\n\n    /** in this override, attach the foldout panel when rendering details */\n    _renderDetails: function() {\n        if (this.foldoutStyle === \"drilldown\") {\n            return $();\n        }\n        var $newDetails = ListItemView.prototype._renderDetails.call(this);\n        return this._attachFoldout(this.foldout, $newDetails);\n    },\n\n    /** In this override, handle collection expansion. */\n    _createFoldoutPanel: function() {\n        var model = this.model;\n        var FoldoutClass = this._getFoldoutPanelClass(model);\n        var options = this._getFoldoutPanelOptions(model);\n\n        var foldout = new FoldoutClass(\n            _.extend(options, {\n                model: model\n            })\n        );\n\n        return foldout;\n    },\n\n    /** Stub to return proper foldout panel class */\n    _getFoldoutPanelClass: function() {\n        // override\n        return this.foldoutPanelClass;\n    },\n\n    /** Stub to return proper foldout panel options */\n    _getFoldoutPanelOptions: function() {\n        return {\n            // propagate foldout style down\n            foldoutStyle: this.foldoutStyle,\n            fxSpeed: this.fxSpeed\n        };\n    },\n\n    /** Render the foldout panel inside the view, hiding controls */\n    _attachFoldout: function(foldout, $whereTo) {\n        $whereTo = $whereTo || this.$(\"> .details\");\n        this.foldout = foldout.render(0);\n        foldout.$(\"> .controls\").hide();\n        return $whereTo.append(foldout.$el);\n    },\n\n    /** In this override, branch on foldoutStyle to show expanded */\n    expand: function() {\n        var view = this;\n        return view._fetchModelDetails().always(() => {\n            if (view.foldoutStyle === \"foldout\") {\n                view._expand();\n            } else if (view.foldoutStyle === \"drilldown\") {\n                view._expandByDrilldown();\n            }\n        });\n    },\n\n    /** For drilldown, set up close handler and fire expanded:drilldown\n     *      containing views can listen to this and handle other things\n     *      (like hiding themselves) by listening for expanded/collapsed:drilldown\n     */\n    _expandByDrilldown: function() {\n        var view = this;\n        // attachment and rendering done by listener\n        view.listenTo(view.foldout, \"close\", () => {\n            view.trigger(\"collapsed:drilldown\", view, view.foldout);\n        });\n        view.trigger(\"expanded:drilldown\", view, view.foldout);\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nFoldoutListItemView.prototype.templates = (() => {\n    var detailsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"details\">',\n            // override with more info (that goes above the panel)\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        details: detailsTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    ExpandableView: ExpandableView,\n    ListItemView: ListItemView,\n    FoldoutListItemView: FoldoutListItemView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/list/list-item.js","import LIST_ITEM from \"mvc/list/list-item\";\nimport STATES from \"mvc/dataset/states\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"dataset\";\n/*==============================================================================\nTODO:\n    straighten out state rendering and templates used\n    inaccessible/STATES.NOT_VIEWABLE is a special case\n    simplify button rendering\n\n==============================================================================*/\nvar _super = LIST_ITEM.ListItemView;\n/** @class Read only list view for either LDDAs, HDAs, or HDADCEs.\n *      Roughly, any DatasetInstance (and not a raw Dataset).\n */\nvar DatasetListItemView = _super.extend(\n    /** @lends DatasetListItemView.prototype */ {\n        _logNamespace: logNamespace,\n\n        className: `${_super.prototype.className} dataset`,\n        //TODO:?? doesn't exactly match an hda's type_id\n        id: function() {\n            return [\"dataset\", this.model.get(\"id\")].join(\"-\");\n        },\n\n        /** Set up: instance vars, options, and event handlers */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(`${this}.initialize:`, attributes);\n            _super.prototype.initialize.call(this, attributes);\n\n            /** where should pages from links be displayed? (default to new tab/window) */\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            var self = this;\n\n            // re-rendering on any model changes\n            return self.listenTo(self.model, {\n                change: function(model) {\n                    // if the model moved into the ready state and is expanded without details, fetch those details now\n                    if (\n                        self.model.changedAttributes().state &&\n                        self.model.inReadyState() &&\n                        self.expanded &&\n                        !self.model.hasDetails()\n                    ) {\n                        // normally, will render automatically (due to fetch -> change),\n                        // but! setting_metadata sometimes doesn't cause any other changes besides state\n                        // so, not rendering causes it to seem frozen in setting_metadata state\n                        self.model.fetch({ silent: true }).done(() => {\n                            self.render();\n                        });\n                    } else {\n                        if (_.has(model.changed, \"tags\") && _.keys(model.changed).length === 1) {\n                            // If only the tags have changed, rerender specifically\n                            // the titlebar region.  Otherwise default to the full\n                            // render.\n                            self.$(\".nametags\").html(self._renderNametags());\n                        } else {\n                            self.render();\n                        }\n                    }\n                }\n            });\n        },\n\n        // ......................................................................... expandable\n        /** In this override, only get details if in the ready state, get rerunnable if in other states.\n         *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n         */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        // ......................................................................... removal\n        /** Remove this view's html from the DOM and remove all event listeners.\n         *  @param {Number or String} speed jq effect speed\n         *  @param {Function} callback      an optional function called when removal is done (scoped to this view)\n         */\n        remove: function(speed, callback) {\n            var view = this;\n            speed = speed || this.fxSpeed;\n            this.$el.fadeOut(speed, () => {\n                Backbone.View.prototype.remove.call(view);\n                if (callback) {\n                    callback.call(view);\n                }\n            });\n        },\n\n        // ......................................................................... rendering\n        /* TODO:\n        dataset states are the issue primarily making dataset rendering complex\n            each state should have it's own way of displaying/set of details\n            often with different actions that can be applied\n        throw in deleted/purged/visible and things get complicated easily\n        I've considered (a couple of times) - creating a view for each state\n            - but recreating the view during an update...seems wrong\n    */\n        /** In this override, add the dataset state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            if (this.model.has(\"state\")) {\n                this.$el.addClass(`state-${this.model.get(\"state\")}`);\n            }\n            return this.$el;\n        },\n\n        // ................................................................................ titlebar\n        /** In this override, add the dataset display button. */\n        _renderPrimaryActions: function() {\n            // render just the display for read-only\n            return [this._renderDisplayButton()];\n        },\n\n        /** Render icon-button to display dataset data */\n        _renderDisplayButton: function() {\n            // don't show display if not viewable or not accessible\n            var state = this.model.get(\"state\");\n            if (state === STATES.NOT_VIEWABLE || state === STATES.DISCARDED || !this.model.get(\"accessible\")) {\n                return null;\n            }\n\n            var displayBtnData = {\n                target: this.linkTarget,\n                classes: \"display-btn\"\n            };\n\n            // show a disabled display if the data's been purged\n            if (this.model.get(\"purged\")) {\n                displayBtnData.disabled = true;\n                displayBtnData.title = _l(\"Cannot display datasets removed from disk\");\n\n                // disable if still uploading\n            } else if (state === STATES.UPLOAD) {\n                displayBtnData.disabled = true;\n                displayBtnData.title = _l(\"This dataset must finish uploading before it can be viewed\");\n\n                // disable if still new\n            } else if (state === STATES.NEW) {\n                displayBtnData.disabled = true;\n                displayBtnData.title = _l(\"This dataset is not yet viewable\");\n            } else {\n                displayBtnData.title = _l(\"View data\");\n\n                // default link for dataset\n                displayBtnData.href = this.model.urls.display;\n\n                // add frame manager option onclick event\n                var self = this;\n                displayBtnData.onclick = ev => {\n                    if (Galaxy.frame && Galaxy.frame.active) {\n                        // Add dataset to frames.\n                        Galaxy.frame.addDataset(self.model.get(\"id\"));\n                        ev.preventDefault();\n                    }\n                };\n            }\n            displayBtnData.faIcon = \"fa-eye\";\n            return faIconButton(displayBtnData);\n        },\n\n        // ......................................................................... rendering details\n        /** Render the enclosing div of the hda body and, if expanded, the html in the body\n         *  @returns {jQuery} rendered DOM\n         */\n        _renderDetails: function() {\n            //TODO: generalize to be allow different details for each state\n\n            // no access - render nothing but a message\n            if (this.model.get(\"state\") === STATES.NOT_VIEWABLE) {\n                return $(this.templates.noAccess(this.model.toJSON(), this));\n            }\n\n            var $details = _super.prototype._renderDetails.call(this);\n            $details\n                .find(\".actions .left\")\n                .empty()\n                .append(this._renderSecondaryActions());\n            $details\n                .find(\".summary\")\n                .html(this._renderSummary())\n                .prepend(this._renderDetailMessages());\n            $details.find(\".display-applications\").html(this._renderDisplayApplications());\n\n            this._setUpBehaviors($details);\n            return $details;\n        },\n\n        /** Defer to the appropo summary rendering fn based on state */\n        _renderSummary: function() {\n            var json = this.model.toJSON();\n            var summaryRenderFn = this.templates.summaries[json.state];\n            summaryRenderFn = summaryRenderFn || this.templates.summaries.unknown;\n            return summaryRenderFn(json, this);\n        },\n\n        /** Render messages to be displayed only when the details are shown */\n        _renderDetailMessages: function() {\n            var view = this;\n            var $warnings = $('<div class=\"detail-messages\"></div>');\n            var json = view.model.toJSON();\n            //TODO:! unordered (map)\n            _.each(view.templates.detailMessages, templateFn => {\n                $warnings.append($(templateFn(json, view)));\n            });\n            return $warnings;\n        },\n\n        /** Render the external display application links */\n        _renderDisplayApplications: function() {\n            if (this.model.isDeletedOrPurged()) {\n                return \"\";\n            }\n            // render both old and new display apps using the same template\n            return [\n                this.templates.displayApplications(this.model.get(\"display_apps\"), this),\n                this.templates.displayApplications(this.model.get(\"display_types\"), this)\n            ].join(\"\");\n        },\n\n        // ......................................................................... secondary/details actions\n        /** A series of links/buttons for less commonly used actions: re-run, info, etc. */\n        _renderSecondaryActions: function() {\n            this.debug(\"_renderSecondaryActions\");\n            switch (this.model.get(\"state\")) {\n                case STATES.NOT_VIEWABLE:\n                    return [];\n                case STATES.OK:\n                case STATES.FAILED_METADATA:\n                case STATES.ERROR:\n                    return [this._renderDownloadButton(), this._renderShowParamsButton()];\n            }\n            return [this._renderShowParamsButton()];\n        },\n\n        /** Render icon-button to show the input and output (stdout/err) for the job that created this.\n         *  @returns {jQuery} rendered DOM\n         */\n        _renderShowParamsButton: function() {\n            // gen. safe to show in all cases\n            return faIconButton({\n                title: _l(\"View details\"),\n                classes: \"params-btn\",\n                href: this.model.urls.show_params,\n                target: this.linkTarget,\n                faIcon: \"fa-info-circle\",\n                onclick: function(ev) {\n                    if (Galaxy.frame && Galaxy.frame.active) {\n                        Galaxy.frame.add({\n                            title: \"Dataset details\",\n                            url: this.href\n                        });\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                    }\n                }\n            });\n        },\n\n        /** Render icon-button/popupmenu to download the data (and/or the associated meta files (bai, etc.)) for this.\n         *  @returns {jQuery} rendered DOM\n         */\n        _renderDownloadButton: function() {\n            // don't show anything if the data's been purged\n            if (this.model.get(\"purged\") || !this.model.hasData()) {\n                return null;\n            }\n\n            // return either: a popupmenu with links to download assoc. meta files (if there are meta files)\n            //  or a single download icon-button (if there are no meta files)\n            if (!_.isEmpty(this.model.get(\"meta_files\"))) {\n                return this._renderMetaFileDownloadButton();\n            }\n\n            return $(\n                [\n                    '<a class=\"download-btn icon-btn\" ',\n                    'href=\"',\n                    this.model.urls.download,\n                    `\" title=\"${_l(\"Download\")}\" download>`,\n                    '<span class=\"fa fa-floppy-o\"></span>',\n                    \"</a>\"\n                ].join(\"\")\n            );\n        },\n\n        /** Render the download button which opens a dropdown with links to download assoc. meta files (indeces, etc.) */\n        _renderMetaFileDownloadButton: function() {\n            var urls = this.model.urls;\n            return $(\n                [\n                    '<div class=\"metafile-dropdown dropdown\">',\n                    '<a class=\"download-btn icon-btn\" href=\"javascript:void(0)\" data-toggle=\"dropdown\"',\n                    ` title=\"${_l(\"Download\")}\">`,\n                    '<span class=\"fa fa-floppy-o\"></span>',\n                    \"</a>\",\n                    '<ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dLabel\">',\n                    `<li><a href=\"${urls.download}\" download>`,\n                    _l(\"Download dataset\"),\n                    \"</a></li>\",\n                    _.map(this.model.get(\"meta_files\"), meta_file =>\n                        [\n                            '<li><a href=\"',\n                            urls.meta_download + meta_file.file_type,\n                            '\">',\n                            _l(\"Download\"),\n                            \" \",\n                            meta_file.file_type,\n                            \"</a></li>\"\n                        ].join(\"\")\n                    ).join(\"\\n\"),\n                    \"</ul>\",\n                    \"</div>\"\n                ].join(\"\\n\")\n            );\n        },\n\n        _renderNametags: function() {\n            var tpl = _.template(\n                [\n                    \"<% _.each(_.sortBy(_.uniq(tags), function(x) { return x }), function(tag){ %>\",\n                    '<% if (tag.indexOf(\"name:\") == 0){ %>',\n                    '<span class=\"label label-info\"><%- tag.slice(5) %></span>',\n                    \"<% } %>\",\n                    \"<% }); %>\"\n                ].join(\"\")\n            );\n            return tpl({ tags: this.model.get(\"tags\") });\n        },\n\n        // ......................................................................... misc\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .display-btn\": function(ev) {\n                this.trigger(\"display\", this, ev);\n            },\n            \"click .params-btn\": function(ev) {\n                this.trigger(\"params\", this, ev);\n            },\n            \"click .download-btn\": function(ev) {\n                this.trigger(\"download\", this, ev);\n            }\n        }),\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DatasetListItemView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemView.prototype.templates = (() => {\n    //TODO: move to require text! plugin\n\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        failed_metadata: BASE_MVC.wrapTemplate([\n            // failed metadata is rendered as a warning on an otherwise ok dataset view\n            '<% if( model.state === \"failed_metadata\" ){ %>',\n            '<div class=\"warningmessagesmall\">',\n            _l(\"An error occurred setting the metadata for this dataset\"),\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        error: BASE_MVC.wrapTemplate([\n            // error during index fetch - show error on dataset\n            \"<% if( model.error ){ %>\",\n            '<div class=\"errormessagesmall\">',\n            _l(\"There was an error getting the data for this dataset\"),\n            \": <%- model.error %>\",\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        purged: BASE_MVC.wrapTemplate([\n            \"<% if( model.purged ){ %>\",\n            '<div class=\"purged-msg warningmessagesmall\">',\n            _l(\"This dataset has been deleted and removed from disk\"),\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        deleted: BASE_MVC.wrapTemplate([\n            // deleted not purged\n            \"<% if( model.deleted && !model.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This dataset has been deleted\"),\n            \"</div>\",\n            \"<% } %>\"\n        ])\n\n        //NOTE: hidden warning is only needed for HDAs\n    });\n\n    var detailsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"details\">',\n            '<div class=\"summary\"></div>',\n\n            '<div class=\"actions clear\">',\n            '<div class=\"left\"></div>',\n            '<div class=\"right\"></div>',\n            \"</div>\",\n\n            // do not display tags, annotation, display apps, or peek when deleted\n            \"<% if( !dataset.deleted && !dataset.purged ){ %>\",\n            '<div class=\"tags-display\"></div>',\n            '<div class=\"annotation-display\"></div>',\n\n            '<div class=\"display-applications\"></div>',\n\n            \"<% if( dataset.peek ){ %>\",\n            '<pre class=\"dataset-peek\"><%= dataset.peek %></pre>',\n            \"<% } %>\",\n            \"<% } %>\",\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n\n    var noAccessTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"details\">',\n            '<div class=\"summary\">',\n            _l(\"You do not have permission to view this dataset\"),\n            \"</div>\",\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n\n    //TODO: still toooooooooooooo complex - rework\n    var summaryTemplates = {};\n    summaryTemplates[STATES.OK] = summaryTemplates[STATES.FAILED_METADATA] = BASE_MVC.wrapTemplate(\n        [\n            \"<% if( dataset.misc_blurb ){ %>\",\n            '<div class=\"blurb\">',\n            '<span class=\"value\"><%- dataset.misc_blurb %></span>',\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( dataset.file_ext ){ %>\",\n            '<div class=\"datatype\">',\n            '<label class=\"prompt\">',\n            _l(\"format\"),\n            \"</label>\",\n            '<span class=\"value\"><%- dataset.file_ext %></span>',\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( dataset.metadata_dbkey ){ %>\",\n            '<div class=\"dbkey\">',\n            '<label class=\"prompt\">',\n            _l(\"database\"),\n            \"</label>\",\n            '<span class=\"value\">',\n            \"<%- dataset.metadata_dbkey %>\",\n            \"</span>\",\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( dataset.misc_info ){ %>\",\n            '<div class=\"info\">',\n            '<span class=\"value\"><%- dataset.misc_info %></span>',\n            \"</div>\",\n            \"<% } %>\"\n        ],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.NEW] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This is a new dataset and not all of its data are available yet\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.NOT_VIEWABLE] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"You do not have permission to view this dataset\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.DISCARDED] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"The job creating this dataset was cancelled before completion\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.QUEUED] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This job is waiting to run\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.RUNNING] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This job is currently running\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.UPLOAD] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"This dataset is currently uploading\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.SETTING_METADATA] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"Metadata is being auto-detected\"), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.PAUSED] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l('This job is paused. Use the \"Resume Paused Jobs\" in the history menu to resume'), \"</div>\"],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.ERROR] = BASE_MVC.wrapTemplate(\n        [\n            \"<% if( !dataset.purged ){ %>\",\n            \"<div><%- dataset.misc_blurb %></div>\",\n            \"<% } %>\",\n            '<span class=\"help-text\">',\n            _l(\"An error occurred with this dataset\"),\n            \":</span>\",\n            '<div class=\"job-error-text\"><%- dataset.misc_info %></div>'\n        ],\n        \"dataset\"\n    );\n    summaryTemplates[STATES.EMPTY] = BASE_MVC.wrapTemplate(\n        [\"<div>\", _l(\"No data\"), \": <i><%- dataset.misc_blurb %></i></div>\"],\n        \"dataset\"\n    );\n    summaryTemplates.unknown = BASE_MVC.wrapTemplate(\n        ['<div>Error: unknown dataset state: \"<%- dataset.state %>\"</div>'],\n        \"dataset\"\n    );\n\n    // messages to be displayed only within the details section ('below the fold')\n    var detailMessageTemplates = {\n        resubmitted: BASE_MVC.wrapTemplate([\n            // deleted not purged\n            \"<% if( model.resubmitted ){ %>\",\n            '<div class=\"resubmitted-msg infomessagesmall\">',\n            _l(\"The job creating this dataset has been resubmitted\"),\n            \"</div>\",\n            \"<% } %>\"\n        ])\n    };\n\n    // this is applied to both old and new style display apps\n    var displayApplicationsTemplate = BASE_MVC.wrapTemplate(\n        [\n            \"<% _.each( apps, function( app ){ %>\",\n            '<div class=\"display-application\">',\n            '<span class=\"display-application-location\"><%- app.label %></span> ',\n            '<span class=\"display-application-links\">',\n            \"<% _.each( app.links, function( link ){ %>\",\n            '<a target=\"<%- link.target %>\" href=\"<%- link.href %>\">',\n            \"<% print( _l( link.text ) ); %>\",\n            \"</a> \",\n            \"<% }); %>\",\n            \"</span>\",\n            \"</div>\",\n            \"<% }); %>\"\n        ],\n        \"apps\"\n    );\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        details: detailsTemplate,\n        noAccess: noAccessTemplate,\n        summaries: summaryTemplates,\n        detailMessages: detailMessageTemplates,\n        displayApplications: displayApplicationsTemplate\n    });\n})();\n\n// ============================================================================\nexport default {\n    DatasetListItemView: DatasetListItemView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/dataset-li.js","import LIST_ITEM from \"mvc/list/list-item\";\nimport DATASET_LI from \"mvc/dataset/dataset-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar FoldoutListItemView = LIST_ITEM.FoldoutListItemView;\n\nvar ListItemView = LIST_ITEM.ListItemView;\n/** @class Read only view for DatasetCollection.\n */\nvar DCListItemView = FoldoutListItemView.extend(\n    /** @lends DCListItemView.prototype */ {\n        className: `${FoldoutListItemView.prototype.className} dataset-collection`,\n        id: function() {\n            return [\"dataset_collection\", this.model.get(\"id\")].join(\"-\");\n        },\n\n        /** override to add linkTarget */\n        initialize: function(attributes) {\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n            this.hasUser = attributes.hasUser;\n            FoldoutListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        /** event listeners */\n        _setUpListeners: function() {\n            FoldoutListItemView.prototype._setUpListeners.call(this);\n            this.listenTo(this.model, \"change\", function(model, options) {\n                // if the model has changed deletion status render it entirely\n                if (_.has(model.changed, \"deleted\")) {\n                    this.render();\n\n                    // if the model has been decorated after the fact with the element count,\n                    // render the subtitle where the count is displayed\n                } else if (_.has(model.changed, \"element_count\")) {\n                    this.$(\"> .title-bar .subtitle\").replaceWith(this._renderSubtitle());\n                }\n            });\n        },\n\n        // ......................................................................... rendering\n        /** render a subtitle to show the user what sort of collection this is */\n        _renderSubtitle: function() {\n            return $(this.templates.subtitle(this.model.toJSON(), this));\n        },\n\n        // ......................................................................... foldout\n        /** override to add linktarget to sub-panel */\n        _getFoldoutPanelOptions: function() {\n            var options = FoldoutListItemView.prototype._getFoldoutPanelOptions.call(this);\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                hasUser: this.hasUser\n            });\n        },\n\n        /** override to not catch sub-panel selectors */\n        $selector: function() {\n            return this.$(\"> .selector\");\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DCListItemView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCListItemView.prototype.templates = (() => {\n    var warnings = _.extend({}, FoldoutListItemView.prototype.templates.warnings, {\n        error: BASE_MVC.wrapTemplate([\n            // error during index fetch - show error on dataset\n            \"<% if( model.error ){ %>\",\n            '<div class=\"errormessagesmall\">',\n            _l(\"There was an error getting the data for this collection\"),\n            \": <%- model.error %>\",\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        purged: BASE_MVC.wrapTemplate([\n            \"<% if( model.purged ){ %>\",\n            '<div class=\"purged-msg warningmessagesmall\">',\n            _l(\"This collection has been deleted and removed from disk\"),\n            \"</div>\",\n            \"<% } %>\"\n        ]),\n        deleted: BASE_MVC.wrapTemplate([\n            // deleted not purged\n            \"<% if( model.deleted && !model.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This collection has been deleted\"),\n            \"</div>\",\n            \"<% } %>\"\n        ])\n    });\n\n    // use element identifier\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- collection.element_identifier || collection.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    // use element identifier\n    var subtitleTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"subtitle\">',\n            '<% var countText = collection.element_count? ( collection.element_count + \" \" ) : \"\"; %>',\n            '<%        if( collection.collection_type === \"list\" ){ %>',\n            _l(\"a list of <%- countText %>datasets\"),\n            '<% } else if( collection.collection_type === \"paired\" ){ %>',\n            _l(\"a pair of datasets\"),\n            '<% } else if( collection.collection_type === \"list:paired\" ){ %>',\n            _l(\"a list of <%- countText %>dataset pairs\"),\n            '<% } else if( collection.collection_type === \"list:list\" ){ %>',\n            _l(\"a list of <%- countText %>dataset lists\"),\n            \"<% } %>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, FoldoutListItemView.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate,\n        subtitle: subtitleTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemView = ListItemView.extend(\n    /** @lends DCEListItemView.prototype */ {\n        /** add the DCE class to the list item */\n        className: `${ListItemView.prototype.className} dataset-collection-element`,\n\n        /** set up */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(\"DCEListItemView.initialize:\", attributes);\n            ListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DCEListItemView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCEListItemView.prototype.templates = (() => {\n    // use the element identifier here - since that will persist and the user will need it\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.element_identifier %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    return _.extend({}, ListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemView = DATASET_LI.DatasetListItemView.extend(\n    /** @lends DatasetDCEListItemView.prototype */ {\n        className: `${DATASET_LI.DatasetListItemView.prototype.className} dataset-collection-element`,\n\n        /** set up */\n        initialize: function(attributes) {\n            if (attributes.logger) {\n                this.logger = this.model.logger = attributes.logger;\n            }\n            this.log(\"DatasetDCEListItemView.initialize:\", attributes);\n            DATASET_LI.DatasetListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        /** In this override, only get details if in the ready state.\n         *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n         */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DatasetDCEListItemView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemView.prototype.templates = (() => {\n    // use the element identifier here and not the dataset name\n    //TODO:?? can we steal the DCE titlebar?\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            '<span class=\"name\"><%- element.element_identifier %></span>',\n            \"</div>\",\n            \"</div>\"\n        ],\n        \"element\"\n    );\n\n    return _.extend({}, DATASET_LI.DatasetListItemView.prototype.templates, {\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemView = DCListItemView.extend(\n    /** @lends NestedDCDCEListItemView.prototype */ {\n        className: `${DCListItemView.prototype.className} dataset-collection-element`,\n\n        /** In this override, add the state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            DCListItemView.prototype._swapNewRender.call(this, $newRender);\n            var state = this.model.get(\"state\") || \"ok\";\n            this.$el.addClass(`state-${state}`);\n            return this.$el;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `NestedDCDCEListItemView(${modelString})`;\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    DCListItemView: DCListItemView,\n    DCEListItemView: DCEListItemView,\n    DatasetDCEListItemView: DatasetDCEListItemView,\n    NestedDCDCEListItemView: NestedDCDCEListItemView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/collection-li.js","/** Generic form view */\nimport Form from \"mvc/form/form-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        this.model = new Backbone.Model(options);\n        this.url = this.model.get(\"url\");\n        this.redirect = this.model.get(\"redirect\");\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + this.url,\n            type: \"GET\"\n        })\n            .done(response => {\n                var options = $.extend({}, self.model.attributes, response);\n                var form = new Form({\n                    title: options.title,\n                    message: options.message,\n                    status: options.status || \"warning\",\n                    icon: options.icon,\n                    inputs: options.inputs,\n                    buttons: {\n                        submit: new Ui.Button({\n                            tooltip: options.submit_tooltip,\n                            title: options.submit_title || \"Save\",\n                            icon: options.submit_icon || \"fa-save\",\n                            cls: \"btn btn-primary ui-clear-float\",\n                            onclick: function() {\n                                self._submit(form);\n                            }\n                        })\n                    }\n                });\n                self.$el.empty().append(form.$el);\n            })\n            .fail(response => {\n                self.$el.empty().append(\n                    new Ui.Message({\n                        message: `Failed to load resource ${self.url}.`,\n                        status: \"danger\",\n                        persistent: true\n                    }).$el\n                );\n            });\n    },\n\n    _submit: function(form) {\n        var self = this;\n        $.ajax({\n            url: Galaxy.root + self.url,\n            data: JSON.stringify(form.data.create()),\n            type: \"PUT\",\n            contentType: \"application/json\"\n        })\n            .done(response => {\n                var success_message = {\n                    message: response.message,\n                    status: \"success\",\n                    persistent: false\n                };\n                if (self.redirect) {\n                    window.location = `${Galaxy.root + self.redirect}?${$.param(success_message)}`;\n                } else {\n                    form.data.matchModel(response, (input, input_id) => {\n                        form.field_list[input_id].value(input.value);\n                    });\n                    self._showMessage(form, success_message);\n                }\n            })\n            .fail(response => {\n                self._showMessage(form, {\n                    message: response.responseJSON.err_msg,\n                    status: \"danger\",\n                    persistent: false\n                });\n            });\n    },\n\n    _showMessage: function(form, options) {\n        var $panel = form.$el\n            .parents()\n            .filter(function() {\n                return [\"auto\", \"scroll\"].indexOf($(this).css(\"overflow\")) != -1;\n            })\n            .first();\n        $panel.animate({ scrollTop: 0 }, 500);\n        form.message.update(options);\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/form/form-wrapper.js","import STATES from \"mvc/dataset/states\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"dataset\";\n//==============================================================================\nvar searchableMixin = BASE_MVC.SearchableModelMixin;\n/** @class base model for any DatasetAssociation (HDAs, LDDAs, DatasetCollectionDAs).\n *      No knowledge of what type (HDA/LDDA/DCDA) should be needed here.\n *  The DA's are made searchable (by attribute) by mixing in SearchableModelMixin.\n */\nvar DatasetAssociation = Backbone.Model.extend(BASE_MVC.LoggableMixin).extend(\n    BASE_MVC.mixin(\n        searchableMixin,\n        /** @lends DatasetAssociation.prototype */ {\n            _logNamespace: logNamespace,\n\n            /** default attributes for a model */\n            defaults: {\n                state: STATES.NEW,\n                deleted: false,\n                purged: false,\n                name: \"(unnamed dataset)\",\n                accessible: true,\n                // sniffed datatype (sam, tabular, bed, etc.)\n                data_type: \"\",\n                file_ext: \"\",\n                file_size: 0,\n\n                // array of associated file types (eg. [ 'bam_index', ... ])\n                meta_files: [],\n\n                misc_blurb: \"\",\n                misc_info: \"\",\n\n                tags: []\n                // do NOT default on annotation, as this default is valid and will be passed on 'save'\n                //  which is incorrect behavior when the model is only partially fetched (annos are not passed in summary data)\n                //annotation          : ''\n            },\n\n            /** instance vars and listeners */\n            initialize: function(attributes, options) {\n                this.debug(`${this}(Dataset).initialize`, attributes, options);\n\n                //!! this state is not in trans.app.model.Dataset.states - set it here -\n                if (!this.get(\"accessible\")) {\n                    this.set(\"state\", STATES.NOT_VIEWABLE);\n                }\n\n                /** Datasets rely/use some web controllers - have the model generate those URLs on startup */\n                this.urls = this._generateUrls();\n\n                this._setUpListeners();\n            },\n\n            /** returns misc. web urls for rendering things like re-run, display, etc. */\n            _generateUrls: function() {\n                var id = this.get(\"id\");\n                if (!id) {\n                    return {};\n                }\n                var urls = {\n                    purge: `datasets/${id}/purge_async`,\n                    display: `datasets/${id}/display/?preview=True`,\n                    edit: `datasets/edit?dataset_id=${id}`,\n                    download: `datasets/${id}/display${this._downloadQueryParameters()}`,\n                    report_error: `dataset/errors?id=${id}`,\n                    rerun: `tool_runner/rerun?id=${id}`,\n                    show_params: `datasets/${id}/show_params`,\n                    visualization: \"visualization\",\n                    meta_download: `dataset/get_metadata_file?hda_id=${id}&metadata_name=`\n                };\n                _.each(urls, (value, key) => {\n                    urls[key] = Galaxy.root + value;\n                });\n                this.urls = urls;\n                return urls;\n            },\n\n            _downloadQueryParameters: function() {\n                return `?to_ext=${this.get(\"file_ext\")}`;\n            },\n\n            /** set up any event listeners\n             *  event: state:ready  fired when this DA moves into/is already in a ready state\n             */\n            _setUpListeners: function() {\n                // if the state has changed and the new state is a ready state, fire an event\n                this.on(\"change:state\", function(currModel, newState) {\n                    this.log(`${this} has changed state:`, currModel, newState);\n                    if (this.inReadyState()) {\n                        this.trigger(\"state:ready\", currModel, newState, this.previous(\"state\"));\n                    }\n                });\n                // the download url (currently) relies on having a correct file extension\n                this.on(\"change:id change:file_ext\", function(currModel) {\n                    this._generateUrls();\n                });\n            },\n\n            // ........................................................................ common queries\n            /** override to add urls */\n            toJSON: function() {\n                var json = Backbone.Model.prototype.toJSON.call(this);\n                //console.warn( 'returning json?' );\n                //return json;\n                return _.extend(json, {\n                    urls: this.urls\n                });\n            },\n\n            /** Is this dataset deleted or purged? */\n            isDeletedOrPurged: function() {\n                return this.get(\"deleted\") || this.get(\"purged\");\n            },\n\n            /** Is this dataset in a 'ready' state; where 'Ready' states are states where no\n             *      processing (for the ds) is left to do on the server.\n             */\n            inReadyState: function() {\n                var ready = _.contains(STATES.READY_STATES, this.get(\"state\"));\n                return this.isDeletedOrPurged() || ready;\n            },\n\n            /** Does this model already contain detailed data (as opposed to just summary level data)? */\n            hasDetails: function() {\n                // if it's inaccessible assume it has everything it needs\n                if (!this.get(\"accessible\")) {\n                    return true;\n                }\n                return this.has(\"annotation\");\n            },\n\n            /** Convenience function to match dataset.has_data. */\n            hasData: function() {\n                return this.get(\"file_size\") > 0;\n            },\n\n            // ........................................................................ ajax\n            fetch: function(options) {\n                var dataset = this;\n                return Backbone.Model.prototype.fetch.call(this, options).always(() => {\n                    dataset._generateUrls();\n                });\n            },\n\n            /** override to use actual Dates objects for create/update times */\n            parse: function(response, options) {\n                var parsed = Backbone.Model.prototype.parse.call(this, response, options);\n                if (parsed.create_time) {\n                    parsed.create_time = new Date(parsed.create_time);\n                }\n                if (parsed.update_time) {\n                    parsed.update_time = new Date(parsed.update_time);\n                }\n                return parsed;\n            },\n\n            /** override to wait by default */\n            save: function(attrs, options) {\n                options = options || {};\n                options.wait = _.isUndefined(options.wait) ? true : options.wait;\n                return Backbone.Model.prototype.save.call(this, attrs, options);\n            },\n\n            //NOTE: subclasses of DA's will need to implement url and urlRoot in order to have these work properly\n            /** save this dataset, _Mark_ing it as deleted (just a flag) */\n            delete: function(options) {\n                if (this.get(\"deleted\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: true }, options);\n            },\n            /** save this dataset, _Mark_ing it as undeleted */\n            undelete: function(options) {\n                if (!this.get(\"deleted\") || this.get(\"purged\")) {\n                    return jQuery.when();\n                }\n                return this.save({ deleted: false }, options);\n            },\n\n            /** remove the file behind this dataset from the filesystem (if permitted) */\n            purge: function _purge(options) {\n                //TODO: use, override model.destroy, HDA.delete({ purge: true })\n                if (this.get(\"purged\")) {\n                    return jQuery.when();\n                }\n                options = options || {};\n                options.url = this.urls.purge;\n\n                //TODO: ideally this would be a DELETE call to the api\n                //  using purge async for now\n                var hda = this;\n\n                var xhr = jQuery.ajax(options);\n                xhr.done((message, status, responseObj) => {\n                    hda.set({ deleted: true, purged: true });\n                });\n                xhr.fail((xhr, status, message) => {\n                    // Exception messages are hidden within error page including:  '...not allowed in this Galaxy instance.'\n                    // unbury and re-add to xhr\n                    var error = _l(\"Unable to purge dataset\");\n                    var messageBuriedInUnfortunatelyFormattedError =\n                        \"Removal of datasets by users \" + \"is not allowed in this Galaxy instance\";\n                    if (xhr.responseJSON && xhr.responseJSON.error) {\n                        error = xhr.responseJSON.error;\n                    } else if (xhr.responseText.indexOf(messageBuriedInUnfortunatelyFormattedError) !== -1) {\n                        error = messageBuriedInUnfortunatelyFormattedError;\n                    }\n                    xhr.responseText = error;\n                    hda.trigger(\"error\", hda, xhr, options, _l(error), {\n                        error: error\n                    });\n                });\n                return xhr;\n            },\n\n            // ........................................................................ searching\n            /** what attributes of an HDA will be used in a text search */\n            searchAttributes: [\"name\", \"file_ext\", \"genome_build\", \"misc_blurb\", \"misc_info\", \"annotation\", \"tags\"],\n\n            /** our attr keys don't often match the labels we display to the user - so, when using\n             *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n             *      following attr keys.\n             */\n            searchAliases: {\n                title: \"name\",\n                format: \"file_ext\",\n                database: \"genome_build\",\n                blurb: \"misc_blurb\",\n                description: \"misc_blurb\",\n                info: \"misc_info\",\n                tag: \"tags\"\n            },\n\n            // ........................................................................ misc\n            /** String representation */\n            toString: function() {\n                var nameAndId = this.get(\"id\") || \"\";\n                if (this.get(\"name\")) {\n                    nameAndId = `\"${this.get(\"name\")}\",${nameAndId}`;\n                }\n                return `Dataset(${nameAndId})`;\n            }\n        }\n    )\n);\n\n//==============================================================================\n/** @class Backbone collection for dataset associations.\n */\nvar DatasetAssociationCollection = Backbone.Collection.extend(BASE_MVC.LoggableMixin).extend(\n    /** @lends HistoryContents.prototype */ {\n        _logNamespace: logNamespace,\n\n        model: DatasetAssociation,\n\n        /** root api url */\n        urlRoot: `${Galaxy.root}api/datasets`,\n\n        /** url fn */\n        url: function() {\n            return this.urlRoot;\n        },\n\n        // ........................................................................ common queries\n        /** Get the ids of every item in this collection\n         *  @returns array of encoded ids\n         */\n        ids: function() {\n            return this.map(item => item.get(\"id\"));\n        },\n\n        /** Get contents that are not ready\n         *  @returns array of content models\n         */\n        notReady: function() {\n            return this.filter(content => !content.inReadyState());\n        },\n\n        /** return true if any datasets don't have details */\n        haveDetails: function() {\n            return this.all(dataset => dataset.hasDetails());\n        },\n\n        // ........................................................................ ajax\n        /** using a queue, perform ajaxFn on each of the models in this collection */\n        ajaxQueue: function(ajaxFn, options) {\n            var deferred = jQuery.Deferred();\n            var startingLength = this.length;\n            var responses = [];\n\n            if (!startingLength) {\n                deferred.resolve([]);\n                return deferred;\n            }\n\n            // use reverse order (stylistic choice)\n            var ajaxFns = this.chain()\n                .reverse()\n                .map((dataset, i) => () => {\n                    var xhr = ajaxFn.call(dataset, options);\n                    // if successful, notify using the deferred to allow tracking progress\n                    xhr.done(response => {\n                        deferred.notify({\n                            curr: i,\n                            total: startingLength,\n                            response: response,\n                            model: dataset\n                        });\n                    });\n                    // (regardless of previous error or success) if not last ajax call, shift and call the next\n                    //  if last fn, resolve deferred\n                    xhr.always(response => {\n                        responses.push(response);\n                        if (ajaxFns.length) {\n                            ajaxFns.shift()();\n                        } else {\n                            deferred.resolve(responses);\n                        }\n                    });\n                })\n                .value();\n            // start the queue\n            ajaxFns.shift()();\n\n            return deferred;\n        },\n\n        // ........................................................................ sorting/filtering\n        /** return a new collection of datasets whose attributes contain the substring matchesWhat */\n        matches: function(matchesWhat) {\n            return this.filter(dataset => dataset.matches(matchesWhat));\n        },\n\n        /** String representation. */\n        toString: function() {\n            return [\"DatasetAssociationCollection(\", this.length, \")\"].join(\"\");\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    DatasetAssociation: DatasetAssociation,\n    DatasetAssociationCollection: DatasetAssociationCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/dataset-model.js","import STATES from \"mvc/dataset/states\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/** @class Mixin for HistoryContents content (HDAs, HDCAs).\n */\nvar HistoryContentMixin = {\n    /** default attributes for a model */\n    defaults: {\n        /** parent (containing) history */\n        history_id: null,\n        /** some content_type (HistoryContents can contain mixed model classes) */\n        history_content_type: null,\n        /** indicating when/what order the content was generated in the context of the history */\n        hid: null,\n        /** whether the user wants the content shown (visible) */\n        visible: true\n    },\n\n    // ........................................................................ mixed content element\n    // In order to be part of a MIXED bbone collection, we can't rely on the id\n    //  (which may collide btwn models of different classes)\n    // Instead, use type_id which prefixes the history_content_type so the bbone collection can differentiate\n    idAttribute: \"type_id\",\n\n    // ........................................................................ common queries\n    /** the more common alias of visible */\n    hidden: function() {\n        return !this.get(\"visible\");\n    },\n\n    //TODO: remove\n    /** based on includeDeleted, includeHidden (gen. from the container control),\n     *      would this ds show in the list of ds's?\n     *  @param {Boolean} includeDeleted are we showing deleted hdas?\n     *  @param {Boolean} includeHidden are we showing hidden hdas?\n     */\n    isVisible: function(includeDeleted, includeHidden) {\n        var isVisible = true;\n        if (!includeDeleted && (this.get(\"deleted\") || this.get(\"purged\"))) {\n            isVisible = false;\n        }\n        if (!includeHidden && !this.get(\"visible\")) {\n            isVisible = false;\n        }\n        return isVisible;\n    },\n\n    // ........................................................................ ajax\n    //TODO?: these are probably better done on the leaf classes\n    /** history content goes through the 'api/histories' API */\n    urlRoot: `${Galaxy.root}api/histories/`,\n\n    /** full url spec. for this content */\n    url: function() {\n        var url = `${this.urlRoot + this.get(\"history_id\")}/contents/${this.get(\"history_content_type\")}s/${this.get(\n            \"id\"\n        )}`;\n        return url;\n    },\n\n    /** save this content as not visible */\n    hide: function(options) {\n        if (!this.get(\"visible\")) {\n            return jQuery.when();\n        }\n        return this.save({ visible: false }, options);\n    },\n    /** save this content as visible */\n    unhide: function(options) {\n        if (this.get(\"visible\")) {\n            return jQuery.when();\n        }\n        return this.save({ visible: true }, options);\n    },\n\n    // ........................................................................ misc\n    toString: function() {\n        return [this.get(\"type_id\"), this.get(\"hid\"), this.get(\"name\")].join(\":\");\n    }\n};\n\n//==============================================================================\nexport default {\n    HistoryContentMixin: HistoryContentMixin\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-content-model.js","/* For presentation-related functionality shared across collection creators.\n   Particularily overlapping functionality related to name processing and help.\n*/\nvar CollectionCreatorMixin = {\n    /** add (or clear if clear is truthy) a validation warning to the DOM element described in what */\n    _validationWarning: function(what, clear) {\n        var VALIDATION_CLASS = \"validation-warning\";\n        if (what === \"name\") {\n            what = this.$(\".collection-name\").add(this.$(\".collection-name-prompt\"));\n            this.$(\".collection-name\")\n                .focus()\n                .select();\n        }\n        if (clear) {\n            what = what || this.$(`.${VALIDATION_CLASS}`);\n            what.removeClass(VALIDATION_CLASS);\n        } else {\n            what.addClass(VALIDATION_CLASS);\n        }\n    },\n\n    _changeHideOriginals: function(ev) {\n        this.hideOriginals = this.$(\".hide-originals\").prop(\"checked\");\n    },\n\n    // ........................................................................ footer\n    /** handle a collection name change */\n    _changeName: function(ev) {\n        this._validationWarning(\"name\", !!this._getName());\n    },\n\n    /** check for enter key press when in the collection name and submit */\n    _nameCheckForEnter: function(ev) {\n        if (ev.keyCode === 13 && !this.blocking) {\n            this._clickCreate();\n        }\n    },\n\n    /** get the current collection name */\n    _getName: function() {\n        return _.escape(this.$(\".collection-name\").val());\n    },\n\n    // ........................................................................ header\n    /** expand help */\n    _clickMoreHelp: function(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").addClass(\"expanded\");\n        this.$(\".more-help\").hide();\n    },\n    /** collapse help */\n    _clickLessHelp: function(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").removeClass(\"expanded\");\n        this.$(\".more-help\").show();\n    },\n    /** toggle help */\n    _toggleHelp: function(ev) {\n        ev.stopPropagation();\n        this.$(\".main-help\").toggleClass(\"expanded\");\n        this.$(\".more-help\").toggle();\n    },\n\n    /** show an alert on the top of the interface containing message (alertClass is bootstrap's alert-*) */\n    _showAlert: function(message, alertClass) {\n        alertClass = alertClass || \"alert-danger\";\n        this.$(\".main-help\").hide();\n        this.$(\".header .alert\")\n            .attr(\"class\", \"alert alert-dismissable\")\n            .addClass(alertClass)\n            .show()\n            .find(\".alert-message\")\n            .html(message);\n    },\n    /** hide the alerts at the top */\n    _hideAlert: function(message) {\n        this.$(\".main-help\").show();\n        this.$(\".header .alert\").hide();\n    },\n\n    _cancelCreate: function(ev) {\n        if (typeof this.oncancel === \"function\") {\n            this.oncancel.call(this);\n        }\n    },\n\n    /** attempt to create the current collection */\n    _clickCreate: function(ev) {\n        var name = this._getName();\n        if (!name) {\n            this._validationWarning(\"name\");\n        } else if (!this.blocking) {\n            this.createList(name);\n        }\n    },\n\n    _setUpCommonSettings: function(attributes) {\n        this.hideOriginals = attributes.defaultHideSourceItems || false;\n    },\n\n    /** render the footer, completion controls, and cancel controls */\n    _renderFooter: function(speed, callback) {\n        var self = this;\n        var $footer = this.$(\".footer\")\n            .empty()\n            .html(this.templates.footer());\n        _.each(this.footerSettings, (property, selector) => {\n            self.$(selector).prop(\"checked\", self[property]);\n        });\n        if (typeof this.oncancel === \"function\") {\n            this.$(\".cancel-create.btn\").show();\n        }\n        return $footer;\n    },\n\n    _creatorTemplates: {\n        main: _.template(\n            [\n                '<div class=\"header flex-row no-flex\"></div>',\n                '<div class=\"middle flex-row flex-row-container\"></div>',\n                '<div class=\"footer flex-row no-flex\"></div>'\n            ].join(\"\")\n        )\n    }\n};\n\n//==============================================================================\nexport default {\n    CollectionCreatorMixin: CollectionCreatorMixin\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/base-creator.js","// Alphanumeric/natural sort fn\nfunction naturalSort(a, b) {\n    // setup temp-scope variables for comparison evauluation\n    var re = /(-?[0-9\\.]+)/g;\n\n    var x = a.toString().toLowerCase() || \"\";\n    var y = b.toString().toLowerCase() || \"\";\n    var nC = String.fromCharCode(0);\n    var xN = x.replace(re, `${nC}$1${nC}`).split(nC);\n    var yN = y.replace(re, `${nC}$1${nC}`).split(nC);\n    var xD = new Date(x).getTime();\n    var yD = xD ? new Date(y).getTime() : null;\n    // natural sorting of dates\n    if (yD) {\n        if (xD < yD) {\n            return -1;\n        } else if (xD > yD) {\n            return 1;\n        }\n    }\n\n    // natural sorting through split numeric strings and default strings\n    var oFxNcL;\n\n    var oFyNcL;\n    for (var cLoc = 0, numS = Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {\n        oFxNcL = parseFloat(xN[cLoc]) || xN[cLoc];\n        oFyNcL = parseFloat(yN[cLoc]) || yN[cLoc];\n        if (oFxNcL < oFyNcL) {\n            return -1;\n        } else if (oFxNcL > oFyNcL) {\n            return 1;\n        }\n    }\n    return 0;\n}\n\nexport default naturalSort;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/natural-sort.js","import jQuery from \"jquery\";\n(\"use_strict\");\n\nvar $ = jQuery;\n//=============================================================================\n\njQuery.fn.extend({\n    hoverhighlight: function $hoverhighlight(scope, color) {\n        scope = scope || \"body\";\n        if (!this.length) {\n            return this;\n        }\n\n        $(this).each(function() {\n            var $this = $(this);\n            var targetSelector = $this.data(\"target\");\n\n            if (targetSelector) {\n                $this\n                    .mouseover(ev => {\n                        $(targetSelector, scope).css({\n                            background: color\n                        });\n                    })\n                    .mouseout(ev => {\n                        $(targetSelector).css({\n                            background: \"\"\n                        });\n                    });\n            }\n        });\n        return this;\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/ui/hoverhighlight.js","/** This is the run workflow tool form view. */\nimport Utils from \"utils/utils\";\nimport Deferred from \"utils/deferred\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport FormData from \"mvc/form/form-data\";\nimport ToolFormBase from \"mvc/tool/tool-form-base\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport Webhooks from \"mvc/webhooks\";\nimport WorkflowIcons from \"mvc/workflow/workflow-icons\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.modal = parent.Galaxy.modal || new Modal.View();\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.deferred = new Deferred();\n        this.setElement(\n            $(\"<div/>\")\n                .addClass(\"ui-form-composite\")\n                .append((this.$message = $(\"<div/>\")))\n                .append((this.$header = $(\"<div/>\")))\n                .append((this.$steps = $(\"<div/>\")))\n        );\n        $(\"body\").append(this.$el);\n        this._configure();\n        this.render();\n        $(window).resize(() => {\n            self._refresh();\n        });\n    },\n\n    /** Refresh height of scrollable div below header, handle scrolling by lazy loading steps */\n    _refresh: function(step_index) {\n        var margin =\n            _.reduce(this.$el.children(), (memo, child) => memo + $(child).outerHeight(), 0) -\n            this.$steps.height() +\n            90;\n        this.$steps.css(\"height\", $(window).height() - margin);\n    },\n\n    /** Configures form/step options for each workflow step */\n    _configure: function() {\n        var self = this;\n        this.forms = [];\n        this.steps = [];\n        this.links = [];\n        this.parms = [];\n        _.each(this.model.get(\"steps\"), (step, i) => {\n            Galaxy.emit.debug(\"tool-form-composite::initialize()\", `${i} : Preparing workflow step.`);\n            var icon = WorkflowIcons[step.step_type];\n            var title = `${parseInt(i + 1)}: ${step.step_label || step.step_name}`;\n            if (step.annotation) {\n                title += ` - ${step.annotation}`;\n            }\n            if (step.step_version) {\n                title += ` (Galaxy Version ${step.step_version})`;\n            }\n            step = Utils.merge(\n                {\n                    index: i,\n                    fixed_title: _.escape(title),\n                    icon: icon || \"\",\n                    help: null,\n                    citations: null,\n                    collapsible: true,\n                    collapsed: i > 0 && !self._isDataStep(step),\n                    sustain_version: true,\n                    sustain_repeats: true,\n                    sustain_conditionals: true,\n                    narrow: true,\n                    text_enable: \"Edit\",\n                    text_disable: \"Undo\",\n                    cls_enable: \"fa fa-edit\",\n                    cls_disable: \"fa fa-undo\",\n                    errors: step.messages,\n                    initial_errors: true,\n                    cls: \"ui-portlet-narrow\",\n                    hide_operations: true,\n                    needs_refresh: false,\n                    always_refresh: step.step_type != \"tool\"\n                },\n                step\n            );\n            self.steps[i] = step;\n            self.links[i] = [];\n            self.parms[i] = {};\n        });\n\n        // build linear index of step input pairs\n        _.each(this.steps, (step, i) => {\n            FormData.visitInputs(step.inputs, (input, name) => {\n                self.parms[i][name] = input;\n            });\n        });\n\n        // iterate through data input modules and collect linked sub steps\n        _.each(this.steps, (step, i) => {\n            _.each(step.output_connections, output_connection => {\n                _.each(self.steps, (sub_step, j) => {\n                    sub_step.step_index === output_connection.input_step_index && self.links[i].push(sub_step);\n                });\n            });\n        });\n\n        // convert all connected data inputs to hidden fields with proper labels,\n        // and track the linked source step\n        _.each(this.steps, (step, i) => {\n            _.each(self.steps, (sub_step, j) => {\n                var connections_by_name = {};\n                _.each(step.output_connections, connection => {\n                    sub_step.step_index === connection.input_step_index &&\n                        (connections_by_name[connection.input_name] = connection);\n                });\n                _.each(self.parms[j], (input, name) => {\n                    var connection = connections_by_name[name];\n                    if (connection) {\n                        input.type = \"hidden\";\n                        input.help = input.step_linked ? `${input.help}, ` : \"\";\n                        input.help += `Output dataset '${connection.output_name}' from step ${parseInt(i) + 1}`;\n                        input.step_linked = input.step_linked || [];\n                        input.step_linked.push(step);\n                    }\n                });\n            });\n        });\n\n        // identify and configure workflow parameters\n        var wp_count = 0;\n        this.wp_inputs = {};\n        function _handleWorkflowParameter(value, callback) {\n            var re = /\\$\\{(.+?)\\}/g;\n            var match;\n            while ((match = re.exec(String(value)))) {\n                var wp_name = match[1];\n                callback(\n                    (self.wp_inputs[wp_name] = self.wp_inputs[wp_name] || {\n                        label: wp_name,\n                        name: wp_name,\n                        type: \"text\",\n                        color: `hsl( ${++wp_count * 100}, 70%, 30% )`,\n                        style: \"ui-form-wp-source\",\n                        links: []\n                    })\n                );\n            }\n        }\n        _.each(this.steps, (step, i) => {\n            _.each(self.parms[i], (input, name) => {\n                _handleWorkflowParameter(input.value, wp_input => {\n                    wp_input.links.push(step);\n                    input.wp_linked = true;\n                    input.type = \"text\";\n                    input.backdrop = true;\n                    input.style = \"ui-form-wp-target\";\n                });\n            });\n            _.each(step.post_job_actions, pja => {\n                _.each(pja.action_arguments, arg => {\n                    _handleWorkflowParameter(arg, () => {});\n                });\n            });\n        });\n\n        // select fields are shown for dynamic fields if all putative data inputs are available,\n        // or if an explicit reference is specified as data_ref and available\n        _.each(this.steps, (step, i) => {\n            if (step.step_type == \"tool\") {\n                var data_resolved = true;\n                FormData.visitInputs(step.inputs, (input, name, context) => {\n                    var is_runtime_value = input.value && input.value.__class__ == \"RuntimeValue\";\n                    var is_data_input = [\"data\", \"data_collection\"].indexOf(input.type) != -1;\n                    var data_ref = context[input.data_ref];\n                    input.step_linked && !self._isDataStep(input.step_linked) && (data_resolved = false);\n                    input.options &&\n                        ((input.options.length == 0 && !data_resolved) || input.wp_linked) &&\n                        (input.is_workflow = true);\n                    data_ref &&\n                        (input.is_workflow =\n                            (data_ref.step_linked && !self._isDataStep(data_ref.step_linked)) || input.wp_linked);\n                    (is_data_input || (input.value && input.value.__class__ == \"RuntimeValue\" && !input.step_linked)) &&\n                        (step.collapsed = false);\n                    is_runtime_value && (input.value = input.default_value);\n                    input.flavor = \"workflow\";\n                    if (!is_runtime_value && !is_data_input && input.type !== \"hidden\" && !input.wp_linked) {\n                        if (input.optional || (!Utils.isEmpty(input.value) && input.value !== \"\")) {\n                            input.collapsible_value = input.value;\n                            input.collapsible_preview = true;\n                        }\n                    }\n                });\n            }\n        });\n    },\n\n    render: function() {\n        var self = this;\n        this.deferred.reset();\n        this._renderHeader();\n        this._renderMessage();\n        this._renderParameters();\n        this._renderHistory();\n        _.each(this.steps, step => {\n            self._renderStep(step);\n        });\n    },\n\n    /** Render header */\n    _renderHeader: function() {\n        var self = this;\n        this.execute_btn = new Ui.Button({\n            icon: \"fa-check\",\n            title: \"Run workflow\",\n            cls: \"btn btn-primary\",\n            onclick: function() {\n                self._execute();\n            }\n        });\n        this.$header\n            .addClass(\"ui-form-header\")\n            .empty()\n            .append(\n                new Ui.Label({\n                    title: `Workflow: ${this.model.get(\"name\")}`\n                }).$el\n            )\n            .append(this.execute_btn.$el);\n    },\n\n    /** Render message */\n    _renderMessage: function() {\n        this.$message.empty();\n        if (this.model.get(\"has_upgrade_messages\")) {\n            this.$message.append(\n                new Ui.Message({\n                    message:\n                        \"Some tools in this workflow may have changed since it was last saved or some errors were found. The workflow may still run, but any new options will have default values. Please review the messages below to make a decision about whether the changes will affect your analysis.\",\n                    status: \"warning\",\n                    persistent: true,\n                    fade: false\n                }).$el\n            );\n        }\n        var step_version_changes = this.model.get(\"step_version_changes\");\n        if (step_version_changes && step_version_changes.length > 0) {\n            this.$message.append(\n                new Ui.Message({\n                    message:\n                        \"Some tools are being executed with different versions compared to those available when this workflow was last saved because the other versions are not or no longer available on this Galaxy instance. To upgrade your workflow and dismiss this message simply edit the workflow and re-save it.\",\n                    status: \"warning\",\n                    persistent: true,\n                    fade: false\n                }).$el\n            );\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderParameters: function() {\n        var self = this;\n        this.wp_form = null;\n        if (!_.isEmpty(this.wp_inputs)) {\n            this.wp_form = new Form({\n                title: \"<b>Workflow Parameters</b>\",\n                inputs: this.wp_inputs,\n                cls: \"ui-portlet-narrow\",\n                onchange: function() {\n                    _.each(self.wp_form.input_list, (input_def, i) => {\n                        _.each(input_def.links, step => {\n                            self._refreshStep(step);\n                        });\n                    });\n                }\n            });\n            this._append(this.$steps.empty(), this.wp_form.$el);\n        }\n    },\n\n    /** Render workflow parameters */\n    _renderHistory: function() {\n        this.history_form = new Form({\n            cls: \"ui-portlet-narrow\",\n            title: \"<b>History Options</b>\",\n            inputs: [\n                {\n                    type: \"conditional\",\n                    name: \"new_history\",\n                    test_param: {\n                        name: \"check\",\n                        label: \"Send results to a new history\",\n                        type: \"boolean\",\n                        value: \"false\",\n                        help: \"\"\n                    },\n                    cases: [\n                        {\n                            value: \"true\",\n                            inputs: [\n                                {\n                                    name: \"name\",\n                                    label: \"History name\",\n                                    type: \"text\",\n                                    value: this.model.get(\"name\")\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        });\n        this._append(this.$steps, this.history_form.$el);\n    },\n\n    /** Render step */\n    _renderStep: function(step) {\n        var self = this;\n        var form = null;\n        this.deferred.execute(promise => {\n            self.$steps.addClass(\"ui-steps\");\n            if (step.step_type == \"tool\") {\n                step.postchange = function(process, form) {\n                    var self = this;\n                    var current_state = {\n                        tool_id: step.id,\n                        tool_version: step.version,\n                        inputs: $.extend(true, {}, form.data.create())\n                    };\n                    form.wait(true);\n                    Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Sending current state.\", current_state);\n                    Utils.request({\n                        type: \"POST\",\n                        url: `${Galaxy.root}api/tools/${step.id}/build`,\n                        data: current_state,\n                        success: function(data) {\n                            form.update(data);\n                            form.wait(false);\n                            Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Received new model.\", data);\n                            process.resolve();\n                        },\n                        error: function(response) {\n                            Galaxy.emit.debug(\"tool-form-composite::postchange()\", \"Refresh request failed.\", response);\n                            process.reject();\n                        }\n                    });\n                };\n                form = new ToolFormBase(step);\n                if (step.post_job_actions && step.post_job_actions.length) {\n                    form.portlet.append(\n                        $(\"<div/>\")\n                            .addClass(\"ui-form-element-disabled\")\n                            .append(\n                                $(\"<div/>\")\n                                    .addClass(\"ui-form-title\")\n                                    .html(\"<b>Job Post Actions</b>\")\n                            )\n                            .append(\n                                $(\"<div/>\")\n                                    .addClass(\"ui-form-preview\")\n                                    .html(\n                                        _.reduce(\n                                            step.post_job_actions,\n                                            (memo, value) => `${memo} ${value.short_str}`,\n                                            \"\"\n                                        )\n                                    )\n                            )\n                    );\n                }\n            } else {\n                var is_simple_input = [\"data_input\", \"data_collection_input\"].indexOf(step.step_type) != -1;\n                _.each(step.inputs, input => {\n                    input.flavor = \"module\";\n                    input.hide_label = is_simple_input;\n                });\n                form = new Form(\n                    Utils.merge(\n                        {\n                            title: step.fixed_title,\n                            onchange: function() {\n                                _.each(self.links[step.index], link => {\n                                    self._refreshStep(link);\n                                });\n                            },\n                            inputs:\n                                step.inputs && step.inputs.length > 0\n                                    ? step.inputs\n                                    : [\n                                          {\n                                              type: \"hidden\",\n                                              name: \"No options available.\",\n                                              ignore: null\n                                          }\n                                      ]\n                        },\n                        step\n                    )\n                );\n            }\n            self.forms[step.index] = form;\n            self._append(self.$steps, form.$el);\n            self._refresh();\n            step.needs_refresh && self._refreshStep(step);\n            form.portlet[!self.show_progress ? \"enable\" : \"disable\"]();\n            self.show_progress &&\n                self.execute_btn.model.set({\n                    wait: true,\n                    wait_text: \"Preparing...\",\n                    percentage: (step.index + 1) * 100.0 / self.steps.length\n                });\n            Galaxy.emit.debug(\"tool-form-composite::initialize()\", `${step.index} : Workflow step state ready.`, step);\n            setTimeout(() => {\n                promise.resolve();\n            }, 0);\n        });\n    },\n\n    /** Refreshes step values from source step values */\n    _refreshStep: function(step) {\n        var self = this;\n        var form = this.forms[step.index];\n        if (form) {\n            _.each(self.parms[step.index], (input, name) => {\n                if (input.step_linked || input.wp_linked) {\n                    var field = form.field_list[form.data.match(name)];\n                    if (field) {\n                        var new_value = undefined;\n                        if (input.step_linked) {\n                            new_value = { values: [] };\n                            _.each(input.step_linked, source_step => {\n                                if (self._isDataStep(source_step)) {\n                                    var value = self.forms[source_step.index].data.create().input;\n                                    value &&\n                                        _.each(value.values, v => {\n                                            new_value.values.push(v);\n                                        });\n                                }\n                            });\n                            if (!input.multiple && new_value.values.length > 0) {\n                                new_value = {\n                                    values: [new_value.values[0]]\n                                };\n                            }\n                        } else if (input.wp_linked) {\n                            new_value = input.value;\n                            var re = /\\$\\{(.+?)\\}/g;\n                            var match;\n                            while ((match = re.exec(input.value))) {\n                                var wp_field = self.wp_form.field_list[self.wp_form.data.match(match[1])];\n                                var wp_value = wp_field && wp_field.value();\n                                if (wp_value) {\n                                    new_value = new_value.split(match[0]).join(wp_value);\n                                }\n                            }\n                        }\n                        if (new_value !== undefined) {\n                            field.value(new_value);\n                        }\n                    }\n                }\n            });\n            form.trigger(\"change\");\n        } else {\n            step.needs_refresh = true;\n        }\n    },\n\n    /** Refresh the history after job submission while form is shown */\n    _refreshHistory: function() {\n        var self = this;\n        var history = parent.Galaxy && parent.Galaxy.currHistoryPanel && parent.Galaxy.currHistoryPanel.model;\n        this._refresh_history && clearTimeout(this._refresh_history);\n        if (history) {\n            history.refresh().success(() => {\n                if (history.numOfUnfinishedShownContents() === 0) {\n                    self._refresh_history = setTimeout(() => {\n                        self._refreshHistory();\n                    }, history.UPDATE_DELAY);\n                }\n            });\n        }\n    },\n\n    /** Build remaining steps */\n    _execute: function() {\n        var self = this;\n        this.show_progress = true;\n        this._enabled(false);\n        this.deferred.execute(promise => {\n            setTimeout(() => {\n                promise.resolve();\n                self._submit();\n            }, 0);\n        });\n    },\n\n    /** Validate and submit workflow */\n    _submit: function() {\n        var self = this;\n        var history_form_data = this.history_form.data.create();\n        var job_def = {\n            new_history_name: history_form_data[\"new_history|name\"] ? history_form_data[\"new_history|name\"] : null,\n            history_id: !history_form_data[\"new_history|name\"] ? this.model.get(\"history_id\") : null,\n            replacement_params: this.wp_form ? this.wp_form.data.create() : {},\n            parameters: {},\n            // Tool form will submit flat maps for each parameter\n            // (e.g. \"repeat_0|cond|param\": \"foo\" instead of nested\n            // data structures).\n            parameters_normalized: true,\n            // Tool form always wants a list of invocations back\n            // so that inputs can be batched.\n            batch: true\n        };\n        var validated = true;\n        for (var i in this.forms) {\n            var form = this.forms[i];\n            var job_inputs = form.data.create();\n            var step = self.steps[i];\n            var step_index = step.step_index;\n            form.trigger(\"reset\");\n            for (var job_input_id in job_inputs) {\n                var input_value = job_inputs[job_input_id];\n                var input_id = form.data.match(job_input_id);\n                var input_field = form.field_list[input_id];\n                var input_def = form.input_list[input_id];\n                if (!input_def.step_linked) {\n                    if (this._isDataStep(step)) {\n                        validated = input_value && input_value.values && input_value.values.length > 0;\n                    } else {\n                        validated =\n                            input_def.optional ||\n                            (input_def.is_workflow && input_value !== \"\") ||\n                            (!input_def.is_workflow && input_value !== null);\n                    }\n                    if (!validated) {\n                        form.highlight(input_id);\n                        break;\n                    }\n                    job_def.parameters[step_index] = job_def.parameters[step_index] || {};\n                    job_def.parameters[step_index][job_input_id] = job_inputs[job_input_id];\n                }\n            }\n            if (!validated) {\n                break;\n            }\n        }\n        if (!validated) {\n            self._enabled(true);\n            Galaxy.emit.debug(\"tool-form-composite::submit()\", \"Validation failed.\", job_def);\n        } else {\n            Galaxy.emit.debug(\"tool-form-composite::submit()\", \"Validation complete.\", job_def);\n            Utils.request({\n                type: \"POST\",\n                url: `${Galaxy.root}api/workflows/${this.model.id}/invocations`,\n                data: job_def,\n                success: function(response) {\n                    Galaxy.emit.debug(\"tool-form-composite::submit\", \"Submission successful.\", response);\n                    self.$el.children().hide();\n                    self.$el.append(self._templateSuccess(response));\n\n                    // Show Webhook if job is running\n                    if ($.isArray(response) && response.length > 0) {\n                        self.$el.append($(\"<div/>\", { id: \"webhook-view\" }));\n                        var WebhookApp = new Webhooks.WebhookView({\n                            urlRoot: `${Galaxy.root}api/webhooks/workflow`,\n                            toolId: job_def.tool_id,\n                            toolVersion: job_def.tool_version\n                        });\n                    }\n\n                    self._refreshHistory();\n                },\n                error: function(response) {\n                    Galaxy.emit.debug(\"tool-form-composite::submit\", \"Submission failed.\", response);\n                    var input_found = false;\n                    if (response && response.err_data) {\n                        for (var i in self.forms) {\n                            var form = self.forms[i];\n                            var step_related_errors = response.err_data[form.model.get(\"step_index\")];\n                            if (step_related_errors) {\n                                var error_messages = form.data.matchResponse(step_related_errors);\n                                for (var input_id in error_messages) {\n                                    form.highlight(input_id, error_messages[input_id]);\n                                    input_found = true;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (!input_found) {\n                        self.modal.show({\n                            title: \"Workflow submission failed\",\n                            body: self._templateError(job_def, response && response.err_msg),\n                            buttons: {\n                                Close: function() {\n                                    self.modal.hide();\n                                }\n                            }\n                        });\n                    }\n                },\n                complete: function() {\n                    self._enabled(true);\n                }\n            });\n        }\n    },\n\n    /** Append new dom to body */\n    _append: function($container, $el) {\n        $container.append(\"<p/>\").append($el);\n    },\n\n    /** Set enabled/disabled state */\n    _enabled: function(enabled) {\n        this.execute_btn.model.set({\n            wait: !enabled,\n            wait_text: \"Sending...\",\n            percentage: -1\n        });\n        this.wp_form && this.wp_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        this.history_form && this.history_form.portlet[enabled ? \"enable\" : \"disable\"]();\n        _.each(this.forms, form => {\n            form && form.portlet[enabled ? \"enable\" : \"disable\"]();\n        });\n    },\n\n    /** Is data input module/step */\n    _isDataStep: function(steps) {\n        var lst = $.isArray(steps) ? steps : [steps];\n        for (var i = 0; i < lst.length; i++) {\n            var step = lst[i];\n            if (!step || !step.step_type || !step.step_type.startsWith(\"data\")) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    /** Templates */\n    _templateSuccess: function(response) {\n        if ($.isArray(response) && response.length > 0) {\n            return $(\"<div/>\")\n                .addClass(\"donemessagelarge\")\n                .append(\n                    $(\"<p/>\").html(\n                        `Successfully invoked workflow <b>${Utils.sanitize(this.model.get(\"name\"))}</b>${\n                            response.length > 1 ? ` <b>${response.length} times</b>` : \"\"\n                        }.`\n                    )\n                )\n                .append(\n                    $(\"<p/>\")\n                        .append(\"<b/>\")\n                        .text(\n                            \"You can check the status of queued jobs and view the resulting data by refreshing the History pane. When the job has been run the status will change from 'running' to 'finished' if completed successfully or 'error' if problems were encountered.\"\n                        )\n                );\n        } else {\n            return this._templateError(response, \"Invalid success response. No invocations found.\");\n        }\n    },\n\n    _templateError: function(response, err_msg) {\n        return $(\"<div/>\")\n            .addClass(\"errormessagelarge\")\n            .append(\n                $(\"<p/>\").text(\n                    `The server could not complete the request. Please contact the Galaxy Team if this error persists. ${JSON.stringify(\n                        err_msg\n                    ) || \"\"}`\n                )\n            )\n            .append($(\"<pre/>\").text(JSON.stringify(response, null, 4)));\n    }\n});\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/tool/tool-form-composite.js","import MODAL from \"mvc/ui/ui-modal\";\nimport ERROR_MODAL from \"mvc/ui/error-modal\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\n/**\n * A dialog/modal that allows copying a user history or 'importing' from user\n * another. Generally called via historyCopyDialog below.\n * @type {Object}\n */\nvar CopyDialog = {\n    // language related strings/fns\n    defaultName: _.template(\"Copy of '<%- name %>'\"),\n    title: _.template(`${_l(\"Copying history\")} \"<%- name %>\"`),\n    submitLabel: _l(\"Copy\"),\n    errorMessage: _l(\"History could not be copied.\"),\n    progressive: _l(\"Copying history\"),\n    activeLabel: _l(\"Copy only the active, non-deleted datasets\"),\n    allLabel: _l(\"Copy all datasets including deleted ones\"),\n    anonWarning:\n        _l(\"As an anonymous user, unless you login or register, you will lose your current history \") +\n        _l(\"after copying this history. \"),\n\n    // template for modal body\n    _template: _.template(\n        [\n            //TODO: remove inline styles\n            // show a warning message for losing current to anon users\n            \"<% if( isAnon ){ %>\",\n            '<div class=\"warningmessage\">',\n            \"<%- anonWarning %>\",\n            _l(\"You can\"),\n            ' <a href=\"/user/login\">',\n            _l(\"login here\"),\n            \"</a> \",\n            _l(\"or\"),\n            \" \",\n            ' <a href=\"/user/create\">',\n            _l(\"register here\"),\n            \"</a>.\",\n            \"</div>\",\n            \"<% } %>\",\n            \"<form>\",\n            '<label for=\"copy-modal-title\">',\n            _l(\"Enter a title for the new history\"),\n            \":\",\n            \"</label><br />\",\n            // TODO: could use required here and the form validators\n            // NOTE: use unescaped here if escaped in the modal function below\n            '<input id=\"copy-modal-title\" class=\"form-control\" style=\"width: 100%\" value=\"<%= name %>\" />',\n            '<p class=\"invalid-title bg-danger\" style=\"color: red; margin: 8px 0px 8px 0px; display: none\">',\n            _l(\"Please enter a valid history title\"),\n            \"</p>\",\n            // if allowAll, add the option to copy deleted datasets, too\n            \"<% if( allowAll ){ %>\",\n            \"<br />\",\n            \"<p>\",\n            _l(\"Choose which datasets from the original history to include:\"),\n            \"</p>\",\n            // copy non-deleted is the default\n            '<input name=\"copy-what\" type=\"radio\" id=\"copy-non-deleted\" value=\"copy-non-deleted\" ',\n            '<% if( copyWhat === \"copy-non-deleted\" ){ print( \"checked\" ); } %>/>',\n            '<label for=\"copy-non-deleted\"> <%- activeLabel %></label>',\n            \"<br />\",\n            '<input name=\"copy-what\" type=\"radio\" id=\"copy-all\" value=\"copy-all\" ',\n            '<% if( copyWhat === \"copy-all\" ){ print( \"checked\" ); } %>/>',\n            '<label for=\"copy-all\"> <%- allLabel %></label>',\n            \"<% } %>\",\n            \"</form>\"\n        ].join(\"\")\n    ),\n\n    // empty modal body and let the user know the copy is happening\n    _showAjaxIndicator: function _showAjaxIndicator() {\n        var indicator = `<p><span class=\"fa fa-spinner fa-spin\"></span> ${this.progressive}...</p>`;\n        this.modal\n            .$(\".modal-body\")\n            .empty()\n            .append(indicator)\n            .css({ \"margin-top\": \"8px\" });\n    },\n\n    // (sorta) public interface - display the modal, render the form, and potentially copy the history\n    // returns a jQuery.Deferred done->history copied, fail->user cancelled\n    dialog: function _dialog(modal, history, options) {\n        options = options || {};\n\n        var dialog = this;\n        var deferred = jQuery.Deferred();\n\n        var // TODO: getting a little byzantine here\n        defaultCopyNameFn = options.nameFn || this.defaultName;\n\n        var defaultCopyName = defaultCopyNameFn({\n            name: history.get(\"name\")\n        });\n\n        var // TODO: these two might be simpler as one 3 state option (all,active,no-choice)\n        defaultCopyWhat = options.allDatasets ? \"copy-all\" : \"copy-non-deleted\";\n\n        var allowAll = !_.isUndefined(options.allowAll) ? options.allowAll : true;\n\n        var autoClose = !_.isUndefined(options.autoClose) ? options.autoClose : true;\n\n        this.modal = modal;\n\n        // validate the name and copy if good\n        function checkNameAndCopy() {\n            var name = modal.$(\"#copy-modal-title\").val();\n            if (!name) {\n                modal.$(\".invalid-title\").show();\n                return;\n            }\n            // get further settings, shut down and indicate the ajax call, then hide and resolve/reject\n            var copyAllDatasets = modal.$('input[name=\"copy-what\"]:checked').val() === \"copy-all\";\n            modal.$(\"button\").prop(\"disabled\", true);\n            dialog._showAjaxIndicator();\n            history\n                .copy(true, name, copyAllDatasets)\n                .done(response => {\n                    deferred.resolve(response);\n                })\n                .fail(function(xhr, status, message) {\n                    var options = {\n                        name: name,\n                        copyAllDatasets: copyAllDatasets\n                    };\n                    ERROR_MODAL.ajaxErrorModal(history, xhr, options, dialog.errorMessage);\n                    deferred.rejectWith(deferred, arguments);\n                })\n                .done(() => {\n                    if (autoClose) {\n                        modal.hide();\n                    }\n                });\n        }\n\n        var originalClosingCallback = options.closing_callback;\n        modal.show(\n            _.extend(options, {\n                title: this.title({ name: history.get(\"name\") }),\n                body: $(\n                    dialog._template({\n                        name: defaultCopyName,\n                        isAnon: Galaxy.user.isAnonymous(),\n                        allowAll: allowAll,\n                        copyWhat: defaultCopyWhat,\n                        activeLabel: this.activeLabel,\n                        allLabel: this.allLabel,\n                        anonWarning: this.anonWarning\n                    })\n                ),\n                buttons: _.object([\n                    [\n                        _l(\"Cancel\"),\n                        () => {\n                            modal.hide();\n                        }\n                    ],\n                    [this.submitLabel, checkNameAndCopy]\n                ]),\n                height: \"auto\",\n                closing_events: true,\n                closing_callback: function _historyCopyClose(cancelled) {\n                    if (cancelled) {\n                        deferred.reject({ cancelled: true });\n                    }\n                    if (originalClosingCallback) {\n                        originalClosingCallback(cancelled);\n                    }\n                }\n            })\n        );\n\n        // set the default dataset copy, autofocus the title, and set up for a simple return\n        modal\n            .$(\"#copy-modal-title\")\n            .focus()\n            .select();\n        modal.$(\"#copy-modal-title\").on(\"keydown\", ev => {\n            if (ev.keyCode === 13) {\n                ev.preventDefault();\n                checkNameAndCopy();\n            }\n        });\n\n        return deferred;\n    }\n};\n\n//==============================================================================\n// maintain the (slight) distinction between copy and import\n/**\n * Subclass CopyDialog to use the import language.\n */\nvar ImportDialog = _.extend({}, CopyDialog, {\n    defaultName: _.template(\"imported: <%- name %>\"),\n    title: _.template(`${_l(\"Importing history\")} \"<%- name %>\"`),\n    submitLabel: _l(\"Import\"),\n    errorMessage: _l(\"History could not be imported.\"),\n    progressive: _l(\"Importing history\"),\n    activeLabel: _l(\"Import only the active, non-deleted datasets\"),\n    allLabel: _l(\"Import all datasets including deleted ones\"),\n    anonWarning:\n        _l(\"As an anonymous user, unless you login or register, you will lose your current history \") +\n        _l(\"after importing this history. \")\n});\n\n//==============================================================================\n/**\n * Main interface for both history import and history copy dialogs.\n * @param  {Backbone.Model} history     the history to copy\n * @param  {Object}         options     a hash\n * @return {jQuery.Deferred}            promise that fails on close and succeeds on copy\n *\n * options:\n *     (this object is also passed to the modal used to display the dialog and accepts modal options)\n *     {Function} nameFn    if defined, use this to build the default name shown to the user\n *                          (the fn is passed: {name: <original history's name>})\n *     {bool} useImport     if true, use the 'import' language (instead of Copy)\n *     {bool} allowAll      if true, allow the user to choose between copying all datasets and\n *                          only non-deleted datasets\n *     {String} allDatasets default initial checked radio button: 'copy-all' or 'copy-non-deleted',\n */\nvar historyCopyDialog = (history, options) => {\n    options = options || {};\n    // create our own modal if Galaxy doesn't have one (mako tab without use_panels)\n    var modal = window.parent.Galaxy.modal || new MODAL.View({});\n    return options.useImport\n        ? ImportDialog.dialog(modal, history, options)\n        : CopyDialog.dialog(modal, history, options);\n};\n\n//==============================================================================\nexport default historyCopyDialog;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/copy-dialog.js","import _l from \"utils/localization\";\n\n//TODO: toastr is another possibility - I didn't see where I might add details, tho\n\n/* ============================================================================\nError modals meant to replace the o-so-easy alerts.\n\nThese are currently styled as errormessages but use the Galaxy.modal\ninfrastructure to be shown/closed. They're capable of showing details in a\ntogglable dropdown and the details are formatted in a pre.\n\nExample:\n    errorModal( 'Heres a message', 'A Title', { some_details: 'here' });\n    errorModal( 'Heres a message' ); // no details, title is 'Error'\n\nThere are three specialized forms:\n    offlineErrorModal       a canned response for when there's no connection\n    badGatewayErrorModal    canned response for when Galaxy is restarting\n    ajaxErrorModal          plugable into any Backbone class as an\n        error event handler by accepting the error args: model, xhr, options\n\nExamples:\n    if( navigator.offLine ){ offlineErrorModal(); }\n    if( xhr.status === 502 ){ badGatewayErrorModal(); }\n    this.listenTo( this.model, 'error', ajaxErrorModal );\n\n============================================================================ */\n\nvar CONTACT_MSG = _l(\"Please contact a Galaxy administrator if the problem persists.\");\nvar DEFAULT_AJAX_ERR_MSG = _l(\"An error occurred while updating information with the server.\");\nvar DETAILS_MSG = _l(\"The following information can assist the developers in finding the source of the error:\");\n\n/** private helper that builds the modal and handles adding details */\nfunction _errorModal(message, title, details) {\n    // create and return the modal, adding details button only if needed\n    Galaxy.modal.show({\n        title: title,\n        body: message,\n        closing_events: true,\n        buttons: {\n            Ok: function() {\n                Galaxy.modal.hide();\n            }\n        }\n    });\n    Galaxy.modal.$el.addClass(\"error-modal\");\n\n    if (details) {\n        Galaxy.modal\n            .$(\".error-details\")\n            .add(Galaxy.modal.$('button:contains(\"Details\")'))\n            .remove();\n        $(\"<div/>\")\n            .addClass(\"error-details\")\n            .hide()\n            .appendTo(Galaxy.modal.$(\".modal-content\"))\n            .append([$(\"<p/>\").text(DETAILS_MSG), $(\"<pre/>\").text(JSON.stringify(details, null, \"  \"))]);\n\n        $(`<button id=\"button-1\" class=\"pull-left\">${_l(\"Details\")}</button>`)\n            .appendTo(Galaxy.modal.$(\".buttons\"))\n            .click(() => {\n                Galaxy.modal.$(\".error-details\").toggle();\n            });\n    }\n    return Galaxy.modal;\n}\n\n/** Display a modal showing an error message but fallback to alert if there's no modal */\nfunction errorModal(message, title, details) {\n    if (!message) {\n        return;\n    }\n\n    message = _l(message);\n    title = _l(title) || _l(\"Error:\");\n    if (window.Galaxy && Galaxy.modal) {\n        return _errorModal(message, title, details);\n    }\n\n    alert(`${title}\\n\\n${message}`);\n    console.log(\"error details:\", JSON.stringify(details));\n}\n\n// ----------------------------------------------------------------------------\n/** display a modal when the user may be offline */\nfunction offlineErrorModal() {\n    return errorModal(_l(\"You appear to be offline. Please check your connection and try again.\"), _l(\"Offline?\"));\n}\n\n// ----------------------------------------------------------------------------\n/** 502 messages that should be displayed when galaxy is restarting */\nfunction badGatewayErrorModal() {\n    return errorModal(\n        `${_l(\"Galaxy is currently unreachable. Please try again in a few minutes.\")} ${CONTACT_MSG}`,\n        _l(\"Cannot connect to Galaxy\")\n    );\n}\n\n// ----------------------------------------------------------------------------\n/** display a modal (with details) about a failed Backbone ajax operation */\nfunction ajaxErrorModal(model, xhr, options, message, title) {\n    message = message || DEFAULT_AJAX_ERR_MSG;\n    message += ` ${CONTACT_MSG}`;\n    title = title || _l(\"An error occurred\");\n    var details = _ajaxDetails(model, xhr, options);\n    return errorModal(message, title, details);\n}\n\n/** build details which may help debugging the ajax call */\nfunction _ajaxDetails(model, xhr, options) {\n    return {\n        //TODO: still can't manage Raven id\n        raven: _.result(window.Raven, \"lastEventId\"),\n        userAgent: navigator.userAgent,\n        onLine: navigator.onLine,\n        version: _.result(Galaxy.config, \"version_major\"),\n        xhr: _.omit(xhr, _.functions(xhr)),\n        options: _.omit(options, \"xhr\"),\n        // add ajax data from Galaxy object cache\n        url: _.result(Galaxy.lastAjax, \"url\"),\n        data: _.result(Galaxy.lastAjax, \"data\"),\n        // backbone stuff (auto-redacting email for user)\n        model: _.result(model, \"toJSON\", `${model}`),\n        user: _.omit(_.result(Galaxy.user, \"toJSON\"), \"email\")\n    };\n}\n\n//=============================================================================\nexport default {\n    errorModal: errorModal,\n    offlineErrorModal: offlineErrorModal,\n    badGatewayErrorModal: badGatewayErrorModal,\n    ajaxErrorModal: ajaxErrorModal\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/ui/error-modal.js","import * as _ from \"libs/underscore\";\nimport * as Backbone from \"libs/backbone\";\nimport BASE_MVC from \"mvc/base-mvc\";\n\n//=============================================================================\n/**\n * A Collection that can be limited/offset/re-ordered/filtered.\n * @type {Backbone.Collection}\n */\nvar ControlledFetchCollection = Backbone.Collection.extend({\n    /** call setOrder on initialization to build the comparator based on options */\n    initialize: function(models, options) {\n        Backbone.Collection.prototype.initialize.call(this, models, options);\n        this.setOrder(options.order || this.order, { silent: true });\n    },\n\n    /** set up to track order changes and re-sort when changed */\n    _setUpListeners: function() {\n        return this.on({\n            \"changed-order\": this.sort\n        });\n    },\n\n    /** override to provide order and offsets based on instance vars, set limit if passed,\n     *  and set allFetched/fire 'all-fetched' when xhr returns\n     */\n    fetch: function(options) {\n        options = this._buildFetchOptions(options);\n        Galaxy.debug(\"fetch options:\", options);\n        return Backbone.Collection.prototype.fetch.call(this, options);\n    },\n\n    /** build ajax data/parameters from options */\n    _buildFetchOptions: function(options) {\n        // note: we normally want options passed in to override the defaults built here\n        // so most of these fns will generate defaults\n        options = _.clone(options) || {};\n        var self = this;\n\n        // jquery ajax option; allows multiple q/qv for filters (instead of 'q[]')\n        options.traditional = true;\n\n        // options.data\n        // we keep limit, offset, etc. in options *as well as move it into data* because:\n        // - it makes fetch calling convenient to add it to a single options map (instead of as mult. args)\n        // - it allows the std. event handlers (for fetch, etc.) to have access\n        //   to the pagination options too\n        //      (i.e. this.on( 'sync', function( options ){ if( options.limit ){ ... } }))\n        // however, when we send to xhr/jquery we copy them to data also so that they become API query params\n        options.data = options.data || self._buildFetchData(options);\n        Galaxy.debug(\"data:\", options.data);\n\n        // options.data.filters --> options.data.q, options.data.qv\n        var filters = this._buildFetchFilters(options);\n        Galaxy.debug(\"filters:\", filters);\n        if (!_.isEmpty(filters)) {\n            _.extend(options.data, this._fetchFiltersToAjaxData(filters));\n        }\n        Galaxy.debug(\"data:\", options.data);\n        return options;\n    },\n\n    /** Build the dictionary to send to fetch's XHR as data */\n    _buildFetchData: function(options) {\n        var defaults = {};\n        if (this.order) {\n            defaults.order = this.order;\n        }\n        return _.defaults(_.pick(options, this._fetchParams), defaults);\n    },\n\n    /** These attribute keys are valid params to fetch/API-index */\n    _fetchParams: [\n        /** model dependent string to control the order of models returned */\n        \"order\",\n        /** limit the number of models returned from a fetch */\n        \"limit\",\n        /** skip this number of models when fetching */\n        \"offset\",\n        /** what series of attributes to return (model dependent) */\n        \"view\",\n        /** individual keys to return for the models (see api/histories.index) */\n        \"keys\"\n    ],\n\n    /** add any needed filters here based on collection state */\n    _buildFetchFilters: function(options) {\n        // override\n        return _.clone(options.filters || {});\n    },\n\n    /** Convert dictionary filters to qqv style arrays */\n    _fetchFiltersToAjaxData: function(filters) {\n        // return as a map so ajax.data can extend from it\n        var filterMap = {\n            q: [],\n            qv: []\n        };\n        _.each(filters, (v, k) => {\n            // don't send if filter value is empty\n            if (v === undefined || v === \"\") {\n                return;\n            }\n            // json to python\n            if (v === true) {\n                v = \"True\";\n            }\n            if (v === false) {\n                v = \"False\";\n            }\n            if (v === null) {\n                v = \"None\";\n            }\n            // map to k/v arrays (q/qv)\n            filterMap.q.push(k);\n            filterMap.qv.push(v);\n        });\n        return filterMap;\n    },\n\n    /** override to reset allFetched flag to false */\n    reset: function(models, options) {\n        this.allFetched = false;\n        return Backbone.Collection.prototype.reset.call(this, models, options);\n    },\n\n    // ........................................................................ order\n    order: null,\n\n    /** @type {Object} map of collection available sorting orders containing comparator fns */\n    comparators: {\n        update_time: BASE_MVC.buildComparator(\"update_time\", {\n            ascending: false\n        }),\n        \"update_time-asc\": BASE_MVC.buildComparator(\"update_time\", {\n            ascending: true\n        }),\n        create_time: BASE_MVC.buildComparator(\"create_time\", {\n            ascending: false\n        }),\n        \"create_time-asc\": BASE_MVC.buildComparator(\"create_time\", {\n            ascending: true\n        })\n    },\n\n    /** set the order and comparator for this collection then sort with the new order\n     *  @event 'changed-order' passed the new order and the collection\n     */\n    setOrder: function(order, options) {\n        options = options || {};\n        var collection = this;\n        var comparator = collection.comparators[order];\n        if (_.isUndefined(comparator)) {\n            throw new Error(`unknown order: ${order}`);\n        }\n        // if( _.isUndefined( comparator ) ){ return; }\n        if (comparator === collection.comparator) {\n            return;\n        }\n\n        collection.order = order;\n        collection.comparator = comparator;\n\n        if (!options.silent) {\n            collection.trigger(\"changed-order\", options);\n        }\n        return collection;\n    }\n});\n\n//=============================================================================\n/**\n *\n */\nvar PaginatedCollection = ControlledFetchCollection.extend({\n    /** @type {Number} limit used for each page's fetch */\n    limitPerPage: 500,\n\n    initialize: function(models, options) {\n        ControlledFetchCollection.prototype.initialize.call(this, models, options);\n        this.currentPage = options.currentPage || 0;\n    },\n\n    getTotalItemCount: function() {\n        return this.length;\n    },\n\n    shouldPaginate: function() {\n        return this.getTotalItemCount() >= this.limitPerPage;\n    },\n\n    getLastPage: function() {\n        return Math.floor(this.getTotalItemCount() / this.limitPerPage);\n    },\n\n    getPageCount: function() {\n        return this.getLastPage() + 1;\n    },\n\n    getPageLimitOffset: function(pageNum) {\n        pageNum = this.constrainPageNum(pageNum);\n        return {\n            limit: this.limitPerPage,\n            offset: pageNum * this.limitPerPage\n        };\n    },\n\n    constrainPageNum: function(pageNum) {\n        return Math.max(0, Math.min(pageNum, this.getLastPage()));\n    },\n\n    /** fetch the next page of data */\n    fetchPage: function(pageNum, options) {\n        var self = this;\n        pageNum = self.constrainPageNum(pageNum);\n        self.currentPage = pageNum;\n        options = _.defaults(options || {}, self.getPageLimitOffset(pageNum));\n\n        self.trigger(\"fetching-more\");\n        return self.fetch(options).always(() => {\n            self.trigger(\"fetching-more-done\");\n        });\n    },\n\n    fetchCurrentPage: function(options) {\n        return this.fetchPage(this.currentPage, options);\n    },\n\n    fetchPrevPage: function(options) {\n        return this.fetchPage(this.currentPage - 1, options);\n    },\n\n    fetchNextPage: function(options) {\n        return this.fetchPage(this.currentPage + 1, options);\n    }\n});\n\n//=============================================================================\n/**\n * A Collection that will load more elements without reseting.\n */\nvar InfinitelyScrollingCollection = ControlledFetchCollection.extend({\n    /** @type {Number} limit used for the first fetch (or a reset) */\n    limitOnFirstFetch: null,\n    /** @type {Number} limit used for each subsequent fetch */\n    limitPerFetch: 100,\n\n    initialize: function(models, options) {\n        ControlledFetchCollection.prototype.initialize.call(this, models, options);\n        /** @type {Integer} number of contents to return from the first fetch */\n        this.limitOnFirstFetch = options.limitOnFirstFetch || this.limitOnFirstFetch;\n        /** @type {Integer} limit for every fetch after the first */\n        this.limitPerFetch = options.limitPerFetch || this.limitPerFetch;\n        /** @type {Boolean} are all contents fetched? */\n        this.allFetched = false;\n        /** @type {Integer} what was the offset of the last content returned */\n        this.lastFetched = options.lastFetched || 0;\n    },\n\n    /** build ajax data/parameters from options */\n    _buildFetchOptions: function(options) {\n        // options (options for backbone.fetch and jquery.ajax generally)\n        // backbone option; false here to make fetching an addititive process\n        options.remove = options.remove || false;\n        return ControlledFetchCollection.prototype._buildFetchOptions.call(this, options);\n    },\n\n    /** fetch the first 'page' of data */\n    fetchFirst: function(options) {\n        Galaxy.debug(\"ControlledFetchCollection.fetchFirst:\", options);\n        options = options ? _.clone(options) : {};\n        this.allFetched = false;\n        this.lastFetched = 0;\n        return this.fetchMore(\n            _.defaults(options, {\n                reset: true,\n                limit: this.limitOnFirstFetch\n            })\n        );\n    },\n\n    /** fetch the next page of data */\n    fetchMore: function(options) {\n        Galaxy.debug(\"ControlledFetchCollection.fetchMore:\", options);\n        options = _.clone(options || {});\n        var collection = this;\n\n        Galaxy.debug(\"fetchMore, options.reset:\", options.reset);\n        if (!options.reset && collection.allFetched) {\n            return jQuery.when();\n        }\n\n        // TODO: this fails in the edge case where\n        //  the first fetch offset === limit (limit 4, offset 4, collection.length 4)\n        if (options.reset) {\n            options.offset = 0;\n        } else if (options.offset === undefined) {\n            options.offset = collection.lastFetched;\n        }\n        var limit = (options.limit = options.limit || collection.limitPerFetch || null);\n        Galaxy.debug(\"fetchMore, limit:\", limit, \"offset:\", options.offset);\n\n        collection.trigger(\"fetching-more\");\n        return (\n            collection\n                .fetch(options)\n                .always(() => {\n                    collection.trigger(\"fetching-more-done\");\n                })\n                // maintain allFetched flag and trigger if all were fetched this time\n                .done(function _postFetchMore(fetchedData) {\n                    var numFetched = _.isArray(fetchedData) ? fetchedData.length : 0;\n                    collection.lastFetched += numFetched;\n                    Galaxy.debug(\"fetchMore, lastFetched:\", collection.lastFetched);\n                    // anything less than a full page means we got all there is to get\n                    if (!limit || numFetched < limit) {\n                        collection.allFetched = true;\n                        collection.trigger(\"all-fetched\", this);\n                    }\n                })\n        );\n    },\n\n    /** fetch all the collection */\n    fetchAll: function(options) {\n        // whitelist options to prevent allowing limit/offset/filters\n        // (use vanilla fetch instead)\n        options = options || {};\n        var self = this;\n        options = _.pick(options, \"silent\");\n        options.filters = {};\n        return self.fetch(options).done(() => {\n            self.allFetched = true;\n            self.trigger(\"all-fetched\", self);\n        });\n    }\n});\n\n//==============================================================================\nexport default {\n    ControlledFetchCollection: ControlledFetchCollection,\n    PaginatedCollection: PaginatedCollection,\n    InfinitelyScrollingCollection: InfinitelyScrollingCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/base/controlled-fetch-collection.js","import DATASET from \"mvc/dataset/dataset-model\";\nimport HISTORY_CONTENT from \"mvc/history/history-content-model\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET.DatasetAssociation;\n\nvar hcontentMixin = HISTORY_CONTENT.HistoryContentMixin;\n/** @class (HDA) model for a Galaxy dataset contained in and related to a history.\n */\nvar HistoryDatasetAssociation = _super.extend(\n    BASE_MVC.mixin(\n        hcontentMixin,\n        /** @lends HistoryDatasetAssociation.prototype */ {\n            /** default attributes for a model */\n            defaults: _.extend({}, _super.prototype.defaults, hcontentMixin.defaults, {\n                history_content_type: \"dataset\",\n                model_class: \"HistoryDatasetAssociation\"\n            })\n        }\n    )\n);\n\n//==============================================================================\nexport default {\n    HistoryDatasetAssociation: HistoryDatasetAssociation\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hda-model.js","import LIST_ITEM from \"mvc/list/list-item\";\nimport LoadingIndicator from \"ui/loading-indicator\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/search-input\";\n\nvar logNamespace = \"list\";\n/* ============================================================================\nTODO:\n\n============================================================================ */\n/** @class View for a list/collection of models and the sub-views of those models.\n *      Sub-views must (at least have the interface if not) inherit from ListItemView.\n *      (For a list panel that also includes some 'container' model (History->HistoryContents)\n *      use ModelWithListPanel)\n *\n *  Allows for:\n *      searching collection/sub-views\n *      selecting/multi-selecting sub-views\n *\n *  Currently used:\n *      for dataset/dataset-choice\n *      as superclass of ModelListPanel\n */\nvar ListPanel = Backbone.View.extend(BASE_MVC.LoggableMixin).extend(\n    /** @lends ListPanel.prototype */ {\n        _logNamespace: logNamespace,\n\n        /** class to use for constructing the sub-views */\n        viewClass: LIST_ITEM.ListItemView,\n        /** class to used for constructing collection of sub-view models */\n        collectionClass: Backbone.Collection,\n\n        tagName: \"div\",\n        className: \"list-panel\",\n\n        /** (in ms) that jquery effects will use */\n        fxSpeed: \"fast\",\n\n        /** string to display when the collection has no contents */\n        emptyMsg: _l(\"This list is empty\"),\n        /** displayed when no items match the search terms */\n        noneFoundMsg: _l(\"No matching items found\"),\n        /** string used for search placeholder */\n        searchPlaceholder: _l(\"search\"),\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n         *  @param {Object} attributes optional settings for the list\n         */\n        initialize: function(attributes, options) {\n            attributes = attributes || {};\n            // set the logger if requested\n            if (attributes.logger) {\n                this.logger = attributes.logger;\n            }\n            this.log(`${this}.initialize:`, attributes);\n\n            // ---- instance vars\n            /** how quickly should jquery fx run? */\n            this.fxSpeed = _.has(attributes, \"fxSpeed\") ? attributes.fxSpeed : this.fxSpeed;\n\n            /** filters for displaying subviews */\n            this.filters = [];\n            /** current search terms */\n            this.searchFor = attributes.searchFor || \"\";\n\n            /** loading indicator */\n            // this.indicator = new LoadingIndicator( this.$el );\n\n            /** currently showing selectors on items? */\n            this.selecting = attributes.selecting !== undefined ? attributes.selecting : true;\n            //this.selecting = false;\n\n            /** cached selected item.model.ids to persist btwn renders */\n            this.selected = attributes.selected || [];\n            /** the last selected item.model.id */\n            this.lastSelected = null;\n\n            /** are sub-views draggable */\n            this.dragItems = attributes.dragItems || false;\n\n            /** list item view class (when passed models) */\n            this.viewClass = attributes.viewClass || this.viewClass;\n\n            /** list item views */\n            this.views = [];\n            /** list item models */\n            this.collection = attributes.collection || this._createDefaultCollection();\n\n            /** filter fns run over collection items to see if they should show in the list */\n            this.filters = attributes.filters || [];\n\n            /** override $scrollContainer fn via attributes - fn should return jq for elem to call scrollTo on */\n            this.$scrollContainer = attributes.$scrollContainer || this.$scrollContainer;\n\n            /** @type {String} generic title */\n            this.title = attributes.title || \"\";\n            /** @type {String} generic subtitle */\n            this.subtitle = attributes.subtitle || \"\";\n\n            this._setUpListeners();\n        },\n\n        // ------------------------------------------------------------------------ listeners\n        /** create any event listeners for the list */\n        _setUpListeners: function() {\n            this.off();\n\n            //TODO: move errorHandler down into list-view from history-view or\n            //  pass to global error handler (Galaxy)\n            this.on({\n                error: function(model, xhr, options, msg, details) {\n                    //this.errorHandler( model, xhr, options, msg, details );\n                    console.error(model, xhr, options, msg, details);\n                },\n                // show hide the loading indicator\n                loading: function() {\n                    this._showLoadingIndicator(\"loading...\", 40);\n                },\n                \"loading-done\": function() {\n                    this._hideLoadingIndicator(40);\n                }\n            });\n\n            // throw the first render up as a diff namespace using once (for outside consumption)\n            this.once(\"rendered\", function() {\n                this.trigger(\"rendered:initial\", this);\n            });\n\n            this._setUpCollectionListeners();\n            this._setUpViewListeners();\n            return this;\n        },\n\n        /** create and return a collection for when none is initially passed */\n        _createDefaultCollection: function() {\n            // override\n            return new this.collectionClass([]);\n        },\n\n        /** listening for collection events */\n        _setUpCollectionListeners: function() {\n            this.log(`${this}._setUpCollectionListeners`, this.collection);\n            this.stopListening(this.collection);\n\n            // bubble up error events\n            this.listenTo(this.collection, {\n                error: function(model, xhr, options, msg, details) {\n                    this.trigger(\"error\", model, xhr, options, msg, details);\n                },\n                update: function(collection, options) {\n                    var changes = options.changes;\n                    // console.info( collection + ', update:', changes, '\\noptions:', options );\n                    // more than one: render everything\n                    if (options.renderAll || changes.added.length + changes.removed.length > 1) {\n                        return this.renderItems();\n                    }\n                    // otherwise, let the single add/remove handlers do it\n                    if (changes.added.length === 1) {\n                        return this.addItemView(_.first(changes.added), collection, options);\n                    }\n                    if (changes.removed.length === 1) {\n                        return this.removeItemView(_.first(changes.removed), collection, options);\n                    }\n                }\n            });\n            return this;\n        },\n\n        /** listening for sub-view events that bubble up with the 'view:' prefix */\n        _setUpViewListeners: function() {\n            this.log(`${this}._setUpViewListeners`);\n\n            // shift to select a range\n            this.on({\n                \"view:selected\": function(view, ev) {\n                    if (ev && ev.shiftKey && this.lastSelected) {\n                        var lastSelectedView = this.viewFromModelId(this.lastSelected);\n                        if (lastSelectedView) {\n                            this.selectRange(view, lastSelectedView);\n                        }\n                    } else if (ev && ev.altKey && !this.selecting) {\n                        this.showSelectors();\n                    }\n                    this.selected.push(view.model.id);\n                    this.lastSelected = view.model.id;\n                },\n\n                \"view:de-selected\": function(view, ev) {\n                    this.selected = _.without(this.selected, view.model.id);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ rendering\n        /** Render this content, set up ui.\n         *  @param {Number or String} speed   the speed of the render\n         */\n        render: function(speed) {\n            this.log(`${this}.render`, speed);\n            var $newRender = this._buildNewRender();\n            this._setUpBehaviors($newRender);\n            this._queueNewRender($newRender, speed);\n            return this;\n        },\n\n        /** Build a temp div containing the new children for the view's $el. */\n        _buildNewRender: function() {\n            this.debug(`${this}(ListPanel)._buildNewRender`);\n            var $newRender = $(this.templates.el({}, this));\n            this._renderControls($newRender);\n            this._renderTitle($newRender);\n            this._renderSubtitle($newRender);\n            this._renderSearch($newRender);\n            this.renderItems($newRender);\n            return $newRender;\n        },\n\n        /** Build a temp div containing the new children for the view's $el. */\n        _renderControls: function($newRender) {\n            this.debug(`${this}(ListPanel)._renderControls`);\n            var $controls = $(this.templates.controls({}, this));\n            $newRender.find(\".controls\").replaceWith($controls);\n            return $controls;\n        },\n\n        /** return a jQuery object containing the title DOM */\n        _renderTitle: function($where) {\n            //$where = $where || this.$el;\n            //$where.find( '.title' ).replaceWith( ... )\n        },\n\n        /** return a jQuery object containing the subtitle DOM (if any) */\n        _renderSubtitle: function($where) {\n            //$where = $where || this.$el;\n            //$where.find( '.title' ).replaceWith( ... )\n        },\n\n        /** Fade out the old el, swap in the new contents, then fade in.\n         *  @param {Number or String} speed   jq speed to use for rendering effects\n         *  @fires rendered when rendered\n         */\n        _queueNewRender: function($newRender, speed) {\n            speed = speed === undefined ? this.fxSpeed : speed;\n            var panel = this;\n            panel.log(\"_queueNewRender:\", $newRender, speed);\n\n            $(panel).queue(\"fx\", [\n                next => {\n                    panel.$el.fadeOut(speed, next);\n                },\n                next => {\n                    panel._swapNewRender($newRender);\n                    next();\n                },\n                next => {\n                    panel.$el.fadeIn(speed, next);\n                },\n                next => {\n                    panel.trigger(\"rendered\", panel);\n                    next();\n                }\n            ]);\n        },\n\n        /** empty out the current el, move the $newRender's children in */\n        _swapNewRender: function($newRender) {\n            this.$el\n                .empty()\n                .attr(\"class\", this.className)\n                .append($newRender.children());\n            if (this.selecting) {\n                this.showSelectors(0);\n            }\n            return this;\n        },\n\n        /** Set up any behaviors, handlers (ep. plugins) that need to be called when the entire view has been built but\n         *  not attached to the page yet.\n         */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            this.$controls($where)\n                .find(\"[title]\")\n                .tooltip();\n            // set up the pupup for actions available when multi selecting\n            this._renderMultiselectActionMenu($where);\n            return this;\n        },\n\n        /** render a menu containing the actions available to sets of selected items */\n        _renderMultiselectActionMenu: function($where) {\n            $where = $where || this.$el;\n            var $menu = $where.find(\".list-action-menu\");\n            var actions = this.multiselectActions();\n            if (!actions.length) {\n                return $menu.empty();\n            }\n\n            var $newMenu = $(\n                [\n                    '<div class=\"list-action-menu btn-group\">',\n                    '<button class=\"list-action-menu-btn btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                    _l(\"For all selected\"),\n                    \"...\",\n                    \"</button>\",\n                    '<ul class=\"dropdown-menu pull-right\" role=\"menu\">',\n                    \"</ul>\",\n                    \"</div>\"\n                ].join(\"\")\n            );\n            var $actions = actions.map(action => {\n                var html = ['<li><a href=\"javascript:void(0);\">', action.html, \"</a></li>\"].join(\"\");\n                return $(html).click(ev => {\n                    ev.preventDefault();\n                    return action.func(ev);\n                });\n            });\n            $newMenu.find(\"ul\").append($actions);\n            $menu.replaceWith($newMenu);\n            return $newMenu;\n        },\n\n        /** return a list of plain objects used to render multiselect actions menu. Each object should have:\n         *      html: an html string used as the anchor contents\n         *      func: a function called when the anchor is clicked (passed the click event)\n         */\n        multiselectActions: function() {\n            return [];\n        },\n\n        // ------------------------------------------------------------------------ sub-$element shortcuts\n        /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n        $scrollContainer: function($where) {\n            // override or set via attributes.$scrollContainer\n            return ($where || this.$el).parent().parent();\n        },\n        /** convenience selector for the section that displays the list controls */\n        $controls: function($where) {\n            return ($where || this.$el).find(\"> .controls\");\n        },\n        /** list-items: where the subviews are contained in the view's dom */\n        $list: function($where) {\n            return ($where || this.$el).find(\"> .list-items\");\n        },\n        /** container where list messages are attached */\n        $messages: function($where) {\n            //TODO: controls isn't really correct here (only for ModelListPanel)\n            return ($where || this.$el).find(\"> .controls .messages\");\n        },\n        /** the message displayed when no views can be shown (no views, none matching search) */\n        $emptyMessage: function($where) {\n            return ($where || this.$el).find(\"> .empty-message\");\n        },\n\n        // ------------------------------------------------------------------------ hda sub-views\n        /** render the subviews for the list's collection */\n        renderItems: function($whereTo) {\n            $whereTo = $whereTo || this.$el;\n            var panel = this;\n            panel.log(`${this}.renderItems`, $whereTo);\n\n            var $list = panel.$list($whereTo);\n            panel.freeViews();\n            // console.log( 'views freed' );\n            //TODO:? cache and re-use views?\n            var shownModels = panel._filterCollection();\n            // console.log( 'models filtered:', shownModels );\n\n            panel.views = shownModels.map(itemModel => {\n                var view = panel._createItemView(itemModel);\n                return view;\n            });\n\n            $list.empty();\n            // console.log( 'list emptied' );\n            if (panel.views.length) {\n                panel._attachItems($whereTo);\n                // console.log( 'items attached' );\n            }\n            panel._renderEmptyMessage($whereTo).toggle(!panel.views.length);\n            panel.trigger(\"views:ready\", panel.views);\n\n            // console.log( '------------------------------------------- rendering items' );\n            return panel.views;\n        },\n\n        /** Filter the collection to only those models that should be currently viewed */\n        _filterCollection: function() {\n            // override this\n            var panel = this;\n            return panel.collection.filter(_.bind(panel._filterItem, panel));\n        },\n\n        /** Should the model be viewable in the current state?\n         *     Checks against this.filters and this.searchFor\n         */\n        _filterItem: function(model) {\n            // override this\n            var panel = this;\n            return (\n                _.every(panel.filters.map(fn => fn.call(model))) &&\n                (!panel.searchFor || model.matchesAll(panel.searchFor))\n            );\n        },\n\n        /** Create a view for a model and set up it's listeners */\n        _createItemView: function(model) {\n            var ViewClass = this._getItemViewClass(model);\n            var options = _.extend(this._getItemViewOptions(model), {\n                model: model\n            });\n            var view = new ViewClass(options);\n            this._setUpItemViewListeners(view);\n            return view;\n        },\n\n        /** Free a view for a model. Note: does not remove it from the DOM */\n        _destroyItemView: function(view) {\n            this.stopListening(view);\n            this.views = _.without(this.views, view);\n        },\n\n        _destroyItemViews: function(view) {\n            var self = this;\n            self.views.forEach(v => {\n                self.stopListening(v);\n            });\n            self.views = [];\n            return self;\n        },\n\n        /** free any sub-views the list has */\n        freeViews: function() {\n            return this._destroyItemViews();\n        },\n\n        /** Get the bbone view class based on the model */\n        _getItemViewClass: function(model) {\n            // override this\n            return this.viewClass;\n        },\n\n        /** Get the options passed to the new view based on the model */\n        _getItemViewOptions: function(model) {\n            // override this\n            return {\n                //logger      : this.logger,\n                fxSpeed: this.fxSpeed,\n                expanded: false,\n                selectable: this.selecting,\n                selected: _.contains(this.selected, model.id),\n                draggable: this.dragItems\n            };\n        },\n\n        /** Set up listeners for new models */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            // send all events to the panel, re-namspaceing them with the view prefix\n            this.listenTo(view, \"all\", function() {\n                var args = Array.prototype.slice.call(arguments, 0);\n                args[0] = `view:${args[0]}`;\n                panel.trigger.apply(panel, args);\n            });\n\n            // drag multiple - hijack ev.setData to add all selected items\n            this.listenTo(\n                view,\n                \"draggable:dragstart\",\n                function(ev, v) {\n                    //TODO: set multiple drag data here\n                    var json = {};\n\n                    var selected = this.getSelectedModels();\n                    if (selected.length) {\n                        json = selected.toJSON();\n                    } else {\n                        json = [v.model.toJSON()];\n                    }\n                    ev.dataTransfer.setData(\"text\", JSON.stringify(json));\n                    //ev.dataTransfer.setDragImage( v.el, 60, 60 );\n                },\n                this\n            );\n\n            return panel;\n        },\n\n        /** Attach views in this.views to the model based on $whereTo */\n        _attachItems: function($whereTo) {\n            var self = this;\n            // console.log( '_attachItems:', $whereTo, this.$list( $whereTo ) );\n            //ASSUMES: $list has been emptied\n            this.$list($whereTo).append(this.views.map(view => self._renderItemView$el(view)));\n            return this;\n        },\n\n        /** get a given subview's $el (or whatever may wrap it) and return it */\n        _renderItemView$el: function(view) {\n            // useful to wrap and override\n            return view.render(0).$el;\n        },\n\n        /** render the empty/none-found message */\n        _renderEmptyMessage: function($whereTo) {\n            this.debug(\"_renderEmptyMessage\", $whereTo, this.searchFor);\n            var text = this.searchFor ? this.noneFoundMsg : this.emptyMsg;\n            return this.$emptyMessage($whereTo).text(text);\n        },\n\n        /** expand all item views */\n        expandAll: function() {\n            _.each(this.views, view => {\n                view.expand();\n            });\n        },\n\n        /** collapse all item views */\n        collapseAll: function() {\n            _.each(this.views, view => {\n                view.collapse();\n            });\n        },\n\n        // ------------------------------------------------------------------------ collection/views syncing\n        /** Add a view (if the model should be viewable) to the panel */\n        addItemView: function(model, collection, options) {\n            // console.log( this + '.addItemView:', model );\n            var panel = this;\n            // get the index of the model in the list of filtered models shown by this list\n            // in order to insert the view in the proper place\n            //TODO:? potentially expensive\n            var modelIndex = panel._filterCollection().indexOf(model);\n            if (modelIndex === -1) {\n                return undefined;\n            }\n            var view = panel._createItemView(model);\n            // console.log( 'adding and rendering:', modelIndex, view.toString() );\n\n            $(view).queue(\"fx\", [\n                next => {\n                    // hide the empty message first if only view\n                    if (panel.$emptyMessage().is(\":visible\")) {\n                        panel.$emptyMessage().fadeOut(panel.fxSpeed, next);\n                    } else {\n                        next();\n                    }\n                },\n                next => {\n                    panel._attachView(view, modelIndex);\n                    next();\n                }\n            ]);\n            return view;\n        },\n\n        /** internal fn to add view (to both panel.views and panel.$list) */\n        _attachView: function(view, modelIndex, useFx) {\n            // console.log( this + '._attachView:', view, modelIndex, useFx );\n            useFx = _.isUndefined(useFx) ? true : useFx;\n            modelIndex = modelIndex || 0;\n            var panel = this;\n\n            // use the modelIndex to splice into views and insert at the proper index in the DOM\n            panel.views.splice(modelIndex, 0, view);\n            panel._insertIntoListAt(modelIndex, panel._renderItemView$el(view).hide());\n\n            panel.trigger(\"view:attached\", view);\n            if (useFx) {\n                view.$el.slideDown(panel.fxSpeed, () => {\n                    panel.trigger(\"view:attached:rendered\");\n                });\n            } else {\n                view.$el.show();\n                panel.trigger(\"view:attached:rendered\");\n            }\n            return view;\n        },\n\n        /** insert a jq object as a child of list-items at the specified *DOM index* */\n        _insertIntoListAt: function(index, $what) {\n            // console.log( this + '._insertIntoListAt:', index, $what );\n            var $list = this.$list();\n            if (index === 0) {\n                $list.prepend($what);\n            } else {\n                $list\n                    .children()\n                    .eq(index - 1)\n                    .after($what);\n            }\n            return $what;\n        },\n\n        /** Remove a view from the panel (if found) */\n        removeItemView: function(model, collection, options) {\n            var panel = this;\n            var view = _.find(panel.views, v => v.model === model);\n            if (!view) {\n                return undefined;\n            }\n            panel.views = _.without(panel.views, view);\n            panel.trigger(\"view:removed\", view);\n\n            // potentially show the empty message if no views left\n            // use anonymous queue here - since remove can happen multiple times\n            $({}).queue(\"fx\", [\n                next => {\n                    view.$el.fadeOut(panel.fxSpeed, next);\n                },\n                next => {\n                    view.remove();\n                    panel.trigger(\"view:removed:rendered\");\n                    if (!panel.views.length) {\n                        panel._renderEmptyMessage().fadeIn(panel.fxSpeed, next);\n                    } else {\n                        next();\n                    }\n                }\n            ]);\n            return view;\n        },\n\n        /** get views based on model.id */\n        viewFromModelId: function(id) {\n            return _.find(this.views, v => v.model.id === id);\n        },\n\n        /** get views based on model */\n        viewFromModel: function(model) {\n            return model ? this.viewFromModelId(model.id) : undefined;\n        },\n\n        /** get views based on model properties */\n        viewsWhereModel: function(properties) {\n            return this.views.filter(view => _.isMatch(view.model.attributes, properties));\n        },\n\n        /** A range of views between (and including) viewA and viewB */\n        viewRange: function(viewA, viewB) {\n            if (viewA === viewB) {\n                return viewA ? [viewA] : [];\n            }\n\n            var indexA = this.views.indexOf(viewA);\n            var indexB = this.views.indexOf(viewB);\n\n            // handle not found\n            if (indexA === -1 || indexB === -1) {\n                if (indexA === indexB) {\n                    return [];\n                }\n                return indexA === -1 ? [viewB] : [viewA];\n            }\n            // reverse if indeces are\n            //note: end inclusive\n            return indexA < indexB ? this.views.slice(indexA, indexB + 1) : this.views.slice(indexB, indexA + 1);\n        },\n\n        // ------------------------------------------------------------------------ searching\n        /** render a search input for filtering datasets shown\n         *      (see SearchableMixin in base-mvc for implementation of the actual searching)\n         *      return will start the search\n         *      esc will clear the search\n         *      clicking the clear button will clear the search\n         *      uses searchInput in ui.js\n         */\n        _renderSearch: function($where) {\n            $where.find(\".controls .search-input\").searchInput({\n                placeholder: this.searchPlaceholder,\n                initialVal: this.searchFor,\n                onfirstsearch: _.bind(this._firstSearch, this),\n                onsearch: _.bind(this.searchItems, this),\n                onclear: _.bind(this.clearSearch, this)\n            });\n            return $where;\n        },\n\n        /** What to do on the first search entered */\n        _firstSearch: function(searchFor) {\n            // override to load model details if necc.\n            this.log(\"onFirstSearch\", searchFor);\n            return this.searchItems(searchFor);\n        },\n\n        /** filter view list to those that contain the searchFor terms */\n        searchItems: function(searchFor, force) {\n            this.log(\"searchItems\", searchFor, this.searchFor, force);\n            if (!force && this.searchFor === searchFor) {\n                return this;\n            }\n            this.searchFor = searchFor;\n            this.renderItems();\n            this.trigger(\"search:searching\", searchFor, this);\n            var $search = this.$(\"> .controls .search-query\");\n            if ($search.val() !== searchFor) {\n                $search.val(searchFor);\n            }\n            return this;\n        },\n\n        /** clear the search filters and show all views that are normally shown */\n        clearSearch: function(searchFor) {\n            //this.log( 'onSearchClear', this );\n            this.searchFor = \"\";\n            this.trigger(\"search:clear\", this);\n            this.$(\"> .controls .search-query\").val(\"\");\n            this.renderItems();\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ selection\n        /** @type Integer when the number of list item views is >= to this, don't animate selectors */\n        THROTTLE_SELECTOR_FX_AT: 20,\n\n        /** show selectors on all visible itemViews and associated controls */\n        showSelectors: function(speed) {\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            this.selecting = true;\n            this.$(\".list-actions\").slideDown(speed);\n            speed = this.views.length >= this.THROTTLE_SELECTOR_FX_AT ? 0 : speed;\n            _.each(this.views, view => {\n                view.showSelector(speed);\n            });\n            //this.selected = [];\n            //this.lastSelected = null;\n        },\n\n        /** hide selectors on all visible itemViews and associated controls */\n        hideSelectors: function(speed) {\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            this.selecting = false;\n            this.$(\".list-actions\").slideUp(speed);\n            speed = this.views.length >= this.THROTTLE_SELECTOR_FX_AT ? 0 : speed;\n            _.each(this.views, view => {\n                view.hideSelector(speed);\n            });\n            this.selected = [];\n            this.lastSelected = null;\n        },\n\n        /** show or hide selectors on all visible itemViews and associated controls */\n        toggleSelectors: function() {\n            if (!this.selecting) {\n                this.showSelectors();\n            } else {\n                this.hideSelectors();\n            }\n        },\n\n        /** select all visible items */\n        selectAll: function(event) {\n            _.each(this.views, view => {\n                view.select(event);\n            });\n        },\n\n        /** deselect all visible items */\n        deselectAll: function(event) {\n            this.lastSelected = null;\n            _.each(this.views, view => {\n                view.deselect(event);\n            });\n        },\n\n        /** select a range of datasets between A and B */\n        selectRange: function(viewA, viewB) {\n            var range = this.viewRange(viewA, viewB);\n            _.each(range, view => {\n                view.select();\n            });\n            return range;\n        },\n\n        /** return an array of all currently selected itemViews */\n        getSelectedViews: function() {\n            return _.filter(this.views, v => v.selected);\n        },\n\n        /** return a collection of the models of all currenly selected items */\n        getSelectedModels: function() {\n            // console.log( '(getSelectedModels)' );\n            return new this.collection.constructor(_.map(this.getSelectedViews(), view => view.model));\n        },\n\n        // ------------------------------------------------------------------------ loading indicator\n        /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n        _showLoadingIndicator: function(msg, speed, callback) {\n            this.debug(\"_showLoadingIndicator\", this.indicator, msg, speed, callback);\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            if (!this.indicator) {\n                this.indicator = new LoadingIndicator(this.$el);\n                this.debug(\"\\t created\", this.indicator);\n            }\n            if (!this.$el.is(\":visible\")) {\n                this.indicator.show(0, callback);\n            } else {\n                this.$el.fadeOut(speed);\n                this.indicator.show(msg, speed, callback);\n            }\n        },\n\n        /** hide the loading indicator */\n        _hideLoadingIndicator: function(speed, callback) {\n            this.debug(\"_hideLoadingIndicator\", this.indicator, speed, callback);\n            speed = speed !== undefined ? speed : this.fxSpeed;\n            if (this.indicator) {\n                this.indicator.hide(speed, callback);\n            }\n        },\n\n        // ------------------------------------------------------------------------ scrolling\n        /** get the current scroll position of the panel in its parent */\n        scrollPosition: function() {\n            return this.$scrollContainer().scrollTop();\n        },\n\n        /** set the current scroll position of the panel in its parent */\n        scrollTo: function(pos, speed) {\n            speed = speed || 0;\n            this.$scrollContainer().animate({ scrollTop: pos }, speed);\n            return this;\n        },\n\n        /** Scrolls the panel to the top. */\n        scrollToTop: function(speed) {\n            return this.scrollTo(0, speed);\n        },\n\n        /** scroll to the given view in list-items */\n        scrollToItem: function(view, speed) {\n            if (!view) {\n                return this;\n            }\n            return this;\n        },\n\n        /** Scrolls the panel to show the content with the given id. */\n        scrollToId: function(id, speed) {\n            return this.scrollToItem(this.viewFromModelId(id), speed);\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: {\n            \"click .select-all\": \"selectAll\",\n            \"click .deselect-all\": \"deselectAll\"\n        },\n\n        // ------------------------------------------------------------------------ misc\n        /** Return a string rep of the panel */\n        toString: function() {\n            return `ListPanel(${this.collection})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListPanel.prototype.templates = (() => {\n    var elTemplate = BASE_MVC.wrapTemplate([\n        // temp container\n        \"<div>\",\n        '<div class=\"controls\"></div>',\n        '<div class=\"list-items\"></div>',\n        '<div class=\"empty-message infomessagesmall\"></div>',\n        \"</div>\"\n    ]);\n\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n        '<div class=\"title\">',\n        '<div class=\"name\"><%- view.title %></div>',\n        \"</div>\",\n        '<div class=\"subtitle\"><%- view.subtitle %></div>',\n        // buttons, controls go here\n        '<div class=\"actions\"></div>',\n        // deleted msg, etc.\n        '<div class=\"messages\"></div>',\n\n        '<div class=\"search\">',\n        '<div class=\"search-input\"></div>',\n        \"</div>\",\n\n        // show when selectors are shown\n        '<div class=\"list-actions\">',\n        '<div class=\"btn-group\">',\n        '<button class=\"select-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"All\"),\n        \"</button>\",\n        '<button class=\"deselect-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"None\"),\n        \"</button>\",\n        \"</div>\",\n        '<div class=\"list-action-menu btn-group\">',\n        \"</div>\",\n        \"</div>\",\n        \"</div>\"\n    ]);\n\n    return {\n        el: elTemplate,\n        controls: controlsTemplate\n    };\n})();\n\n//=============================================================================\n/** View for a model that has a sub-collection (e.g. History, DatasetCollection)\n *  Allows:\n *      the model to be reset\n *      auto assign panel.collection to panel.model[ panel.modelCollectionKey ]\n *\n */\nvar ModelListPanel = ListPanel.extend({\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey: \"contents\",\n\n    initialize: function(attributes) {\n        ListPanel.prototype.initialize.call(this, attributes);\n        this.selecting = attributes.selecting !== undefined ? attributes.selecting : false;\n\n        this.setModel(this.model, attributes);\n    },\n\n    /** release/free/shutdown old models and set up panel for new models\n     *  @fires new-model with the panel as parameter\n     */\n    setModel: function(model, attributes) {\n        attributes = attributes || {};\n        this.debug(`${this}.setModel:`, model, attributes);\n\n        this.freeModel();\n        this.freeViews();\n\n        if (model) {\n            var oldModelId = this.model ? this.model.get(\"id\") : null;\n\n            // set up the new model with user, logger, storage, events\n            this.model = model;\n            if (this.logger) {\n                this.model.logger = this.logger;\n            }\n            this._setUpModelListeners();\n\n            //TODO: relation btwn model, collection becoming tangled here\n            // free the collection, and assign the new collection to either\n            //  the model[ modelCollectionKey ], attributes.collection, or an empty vanilla collection\n            this.stopListening(this.collection);\n            this.collection =\n                this.model[this.modelCollectionKey] || attributes.collection || this._createDefaultCollection();\n            this._setUpCollectionListeners();\n\n            if (oldModelId && model.get(\"id\") !== oldModelId) {\n                this.trigger(\"new-model\", this);\n            }\n        }\n        return this;\n    },\n\n    /** free the current model and all listeners for it, free any views for the model */\n    freeModel: function() {\n        // stop/release the previous model, and clear cache to sub-views\n        if (this.model) {\n            this.stopListening(this.model);\n            //TODO: see base-mvc\n            //this.model.free();\n            //this.model = null;\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ listening\n    /** listening for model events */\n    _setUpModelListeners: function() {\n        // override\n        this.log(`${this}._setUpModelListeners`, this.model);\n        // bounce model errors up to the panel\n        this.listenTo(\n            this.model,\n            \"error\",\n            function() {\n                var args = Array.prototype.slice.call(arguments, 0);\n                //args.unshift( 'model:error' );\n                args.unshift(\"error\");\n                this.trigger.apply(this, args);\n            },\n            this\n        );\n\n        // debugging\n        if (this.logger) {\n            this.listenTo(this.model, \"all\", function(event) {\n                this.info(`${this}(model)`, event, arguments);\n            });\n        }\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     */\n    _renderControls: function($newRender) {\n        this.debug(`${this}(ModelListPanel)._renderControls`);\n        var json = this.model ? this.model.toJSON() : {};\n        var $controls = $(this.templates.controls(json, this));\n        $newRender.find(\".controls\").replaceWith($controls);\n        return $controls;\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString: function() {\n        return `ModelListPanel(${this.model})`;\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nModelListPanel.prototype.templates = (() => {\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n        '<div class=\"title\">',\n        //TODO: this is really the only difference - consider factoring titlebar out\n        '<div class=\"name\"><%- model.name %></div>',\n        \"</div>\",\n        '<div class=\"subtitle\"><%- view.subtitle %></div>',\n        '<div class=\"actions\"></div>',\n        '<div class=\"messages\"></div>',\n\n        '<div class=\"search\">',\n        '<div class=\"search-input\"></div>',\n        \"</div>\",\n\n        '<div class=\"list-actions\">',\n        '<div class=\"btn-group\">',\n        '<button class=\"select-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"All\"),\n        \"</button>\",\n        '<button class=\"deselect-all btn btn-default\"',\n        'data-mode=\"select\">',\n        _l(\"None\"),\n        \"</button>\",\n        \"</div>\",\n        '<div class=\"list-action-menu btn-group\">',\n        \"</div>\",\n        \"</div>\",\n        \"</div>\"\n    ]);\n\n    return _.extend(_.clone(ListPanel.prototype.templates), {\n        controls: controlsTemplate\n    });\n})();\n\n//=============================================================================\nexport default {\n    ListPanel: ListPanel,\n    ModelListPanel: ModelListPanel\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/list/list-view.js","import jQuery from \"jquery\";\n(\"use_strict\");\n\nvar $ = jQuery;\nvar _l = window._l || (s => s);\n\n//TODO: consolidate with tool menu functionality, use there\n\n/** searchInput: (jQuery plugin)\n *      Creates a search input, a clear button, and loading indicator\n *      within the selected node.\n *\n *      When the user either presses return or enters some minimal number\n *      of characters, a callback is called. Pressing ESC when the input\n *      is focused will clear the input and call a separate callback.\n */\nfunction searchInput(parentNode, options) {\n    var KEYCODE_ESC = 27;\n    var KEYCODE_RETURN = 13;\n    var $parentNode = $(parentNode);\n    var firstSearch = true;\n\n    var defaults = {\n        initialVal: \"\",\n        name: \"search\",\n        placeholder: \"search\",\n        classes: \"\",\n        onclear: function() {},\n        onfirstsearch: null,\n        onsearch: function(inputVal) {},\n        minSearchLen: 0,\n        escWillClear: true,\n        oninit: function() {}\n    };\n\n    // .................................................................... input rendering and events\n    // visually clear the search, trigger an event, and call the callback\n    function clearSearchInput(event) {\n        var $input = $(this)\n            .parent()\n            .children(\"input\");\n        $input\n            .val(\"\")\n            .trigger(\"searchInput.clear\")\n            .blur();\n        options.onclear();\n    }\n\n    // search for searchTerms, trigger an event, call the appropo callback (based on whether this is the first)\n    function search(event, searchTerms) {\n        if (!searchTerms) {\n            return clearSearchInput();\n        }\n        $(this).trigger(\"search.search\", searchTerms);\n        if (typeof options.onfirstsearch === \"function\" && firstSearch) {\n            firstSearch = false;\n            options.onfirstsearch(searchTerms);\n        } else {\n            options.onsearch(searchTerms);\n        }\n    }\n\n    // .................................................................... input rendering and events\n    function inputTemplate() {\n        // class search-query is bootstrap 2.3 style that now lives in base.less\n        return [\n            '<input type=\"text\" name=\"',\n            options.name,\n            '\" placeholder=\"',\n            options.placeholder,\n            '\" ',\n            'class=\"search-query ',\n            options.classes,\n            '\" ',\n            \"/>\"\n        ].join(\"\");\n    }\n\n    // the search input that responds to keyboard events and displays the search value\n    function $input() {\n        return (\n            $(inputTemplate())\n                // select all text on a focus\n                .focus(function(event) {\n                    $(this).select();\n                })\n                // attach behaviors to esc, return if desired, search on some min len string\n                .keyup(function(event) {\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    // esc key will clear if desired\n                    if (event.which === KEYCODE_ESC && options.escWillClear) {\n                        clearSearchInput.call(this, event);\n                    } else {\n                        var searchTerms = $(this).val();\n                        // return key or the search string len > minSearchLen (if not 0) triggers search\n                        if (\n                            event.which === KEYCODE_RETURN ||\n                            (options.minSearchLen && searchTerms.length >= options.minSearchLen)\n                        ) {\n                            search.call(this, event, searchTerms);\n                        }\n                    }\n                })\n                .val(options.initialVal)\n        );\n    }\n\n    // .................................................................... clear button rendering and events\n    // a button for clearing the search bar, placed on the right hand side\n    function $clearBtn() {\n        return $(\n            ['<span class=\"search-clear fa fa-times-circle\" ', 'title=\"', _l(\"clear search (esc)\"), '\"></span>'].join(\n                \"\"\n            )\n        )\n            .tooltip({ placement: \"bottom\" })\n            .click(function(event) {\n                clearSearchInput.call(this, event);\n            });\n    }\n\n    // .................................................................... loadingIndicator rendering\n    // a button for clearing the search bar, placed on the right hand side\n    function $loadingIndicator() {\n        return $(\n            ['<span class=\"search-loading fa fa-spinner fa-spin\" ', 'title=\"', _l(\"loading...\"), '\"></span>'].join(\"\")\n        )\n            .hide()\n            .tooltip({ placement: \"bottom\" });\n    }\n\n    // .................................................................... commands\n    // visually swap the load, clear buttons\n    function toggleLoadingIndicator() {\n        $parentNode.find(\".search-loading\").toggle();\n        $parentNode.find(\".search-clear\").toggle();\n    }\n\n    // .................................................................... init\n    // string command (not constructor)\n    if (jQuery.type(options) === \"string\") {\n        if (options === \"toggle-loading\") {\n            toggleLoadingIndicator();\n        }\n        return $parentNode;\n    }\n\n    // initial render\n    if (jQuery.type(options) === \"object\") {\n        options = jQuery.extend(true, {}, defaults, options);\n    }\n    //NOTE: prepended\n    return $parentNode.addClass(\"search-input\").prepend([$input(), $clearBtn(), $loadingIndicator()]);\n}\n\n// as jq plugin\njQuery.fn.extend({\n    searchInput: function $searchInput(options) {\n        return this.each(function() {\n            return searchInput(this, options);\n        });\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/ui/search-input.js","import DATASET_LI from \"mvc/dataset/dataset-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET_LI.DatasetListItemView;\n/** @class Read only view for HistoryDatasetAssociation.\n *      Since there are no controls on the HDAView to hide the dataset,\n *      the primary thing this class does (currently) is override templates\n *      to render the HID.\n */\nvar HDAListItemView = _super.extend(\n    /** @lends HDAListItemView.prototype */ {\n        className: `${_super.prototype.className} history-content`,\n\n        initialize: function(attributes, options) {\n            _super.prototype.initialize.call(this, attributes, options);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `HDAListItemView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemView.prototype.templates = (() => {\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            // adding the hid display to the title\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            //TODO: remove whitespace and use margin-right\n            '<span class=\"hid\"><%- dataset.hid %></span> ',\n            '<span class=\"name\"><%- dataset.name %></span>',\n            \"</div>\",\n            \"</br>\",\n            '<span class=\"nametags\">',\n            \"<% _.each(_.sortBy(_.uniq(dataset.tags), function(x) { return x }), function(tag){ %>\",\n            '<% if (tag.indexOf(\"name:\") == 0){ %>',\n            '<span class=\"label label-info\"><%- tag.slice(5) %></span>',\n            \"<% } %>\",\n            \"<% }); %>\",\n            \"</span>\",\n            \"</div>\"\n        ],\n        \"dataset\"\n    );\n\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: BASE_MVC.wrapTemplate(\n            [\n                // add a warning when hidden\n                \"<% if( !dataset.visible ){ %>\",\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                _l(\"This dataset has been hidden\"),\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        )\n    });\n\n    return _.extend({}, _super.prototype.templates, {\n        titleBar: titleBarTemplate,\n        warnings: warnings\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDAListItemView: HDAListItemView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hda-li.js","import STATES from \"mvc/dataset/states\";\nimport DC_LI from \"mvc/collection/collection-li\";\nimport DC_VIEW from \"mvc/collection/collection-view\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DC_LI.DCListItemView;\n/** @class Read only view for HistoryDatasetCollectionAssociation (a dataset collection inside a history).\n */\nvar HDCAListItemView = _super.extend(\n    /** @lends HDCAListItemView.prototype */ {\n        className: `${_super.prototype.className} history-content`,\n\n        /** event listeners */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            this.listenTo(this.model, {\n                \"change:tags change:populated change:visible\": function(model, options) {\n                    this.render();\n                }\n            });\n        },\n\n        /** Override to provide the proper collections panels as the foldout */\n        _getFoldoutPanelClass: function() {\n            switch (this.model.get(\"collection_type\")) {\n                case \"list\":\n                    return DC_VIEW.ListCollectionView;\n                case \"paired\":\n                    return DC_VIEW.PairCollectionView;\n                case \"list:paired\":\n                    return DC_VIEW.ListOfPairsCollectionView;\n                case \"list:list\":\n                    return DC_VIEW.ListOfListsCollectionView;\n            }\n            throw new TypeError(`Uknown collection_type: ${this.model.get(\"collection_type\")}`);\n        },\n\n        /** In this override, add the state as a class for use with state-based CSS */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            //TODO: model currently has no state\n            var state = !this.model.get(\"populated\") ? STATES.RUNNING : STATES.OK;\n            //if( this.model.has( 'state' ) ){\n            this.$el.addClass(`state-${state}`);\n            //}\n            return this.$el;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `HDCAListItemView(${modelString})`;\n        }\n    }\n);\n\n/** underscore templates */\nHDCAListItemView.prototype.templates = (() => {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: BASE_MVC.wrapTemplate(\n            [\n                // add a warning when hidden\n                \"<% if( !collection.visible ){ %>\",\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                _l(\"This collection has been hidden\"),\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"collection\"\n        )\n    });\n\n    // could steal this from hda-base (or use mixed content)\n    var titleBarTemplate = BASE_MVC.wrapTemplate(\n        [\n            // adding the hid display to the title\n            '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n            //TODO: remove whitespace and use margin-right\n            '<span class=\"hid\"><%- collection.hid %></span> ',\n            '<span class=\"name\"><%- collection.name %></span>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            '<span class=\"nametags\">',\n            \"<% _.each(_.sortBy(_.uniq(collection.tags), function(x) { return x }), function(tag){ %>\",\n            '<% if (tag.indexOf(\"name:\") == 0){ %>',\n            '<span class=\"label label-info\"><%- tag.slice(5) %></span>',\n            \"<% } %>\",\n            \"<% }); %>\",\n            \"</span>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        titleBar: titleBarTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDCAListItemView: HDCAListItemView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hdca-li.js","import LIST_VIEW from \"mvc/list/list-view\";\nimport DC_MODEL from \"mvc/collection/collection-model\";\nimport DC_LI from \"mvc/collection/collection-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"collections\";\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class non-editable, read-only View/Controller for a dataset collection.\n */\nvar _super = LIST_VIEW.ModelListPanel;\nvar CollectionView = _super.extend(\n    /** @lends CollectionView.prototype */ {\n        //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n        _logNamespace: logNamespace,\n\n        className: `${_super.prototype.className} dataset-collection-panel`,\n\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_LI.DatasetDCEListItemView,\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView,\n        /** key of attribute in model to assign to this.collection */\n        modelCollectionKey: \"elements\",\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n         *  @param {Object} attributes optional settings for the panel\n         */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n\n            this.hasUser = attributes.hasUser;\n            /** A stack of panels that currently cover or hide this panel */\n            this.panelStack = [];\n            /** The text of the link to go back to the panel containing this one */\n            this.parentName = attributes.parentName;\n            /** foldout or drilldown */\n            this.foldoutStyle = attributes.foldoutStyle || \"foldout\";\n            this.downloadUrl = `${Galaxy.root}api/dataset_collections/${this.model.attributes.id}/download`;\n        },\n\n        _queueNewRender: function($newRender, speed) {\n            speed = speed === undefined ? this.fxSpeed : speed;\n            var panel = this;\n            panel.log(\"_queueNewRender:\", $newRender, speed);\n\n            // TODO: jquery@1.12 doesn't change display when the elem has display: flex\n            // this causes display: block for those elems after the use of show/hide animations\n            // animations are removed from this view for now until fixed\n            panel._swapNewRender($newRender);\n            panel.trigger(\"rendered\", panel);\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** In this override, use model.getVisibleContents */\n        _filterCollection: function() {\n            //TODO: should *not* be model.getVisibleContents - visibility is not model related\n            return this.model.getVisibleContents();\n        },\n\n        /** override to return proper view class based on element_type */\n        _getItemViewClass: function(model) {\n            //this.debug( this + '._getItemViewClass:', model );\n            //TODO: subclasses use DCEViewClass - but are currently unused - decide\n            switch (model.get(\"element_type\")) {\n                case \"hda\":\n                    return this.DatasetDCEViewClass;\n                case \"dataset_collection\":\n                    return this.NestedDCDCEViewClass;\n            }\n            throw new TypeError(\"Unknown element type:\", model.get(\"element_type\"));\n        },\n\n        /** override to add link target and anon */\n        _getItemViewOptions: function(model) {\n            var options = _super.prototype._getItemViewOptions.call(this, model);\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                hasUser: this.hasUser,\n                //TODO: could move to only nested: list:paired\n                foldoutStyle: this.foldoutStyle\n            });\n        },\n\n        // ------------------------------------------------------------------------ collection sub-views\n        /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            _super.prototype._setUpItemViewListeners.call(panel, view);\n\n            // use pub-sub to: handle drilldown expansion and collapse\n            panel.listenTo(view, {\n                \"expanded:drilldown\": function(v, drilldown) {\n                    this._expandDrilldownPanel(drilldown);\n                },\n                \"collapsed:drilldown\": function(v, drilldown) {\n                    this._collapseDrilldownPanel(drilldown);\n                }\n            });\n            return this;\n        },\n\n        /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n        _expandDrilldownPanel: function(drilldown) {\n            this.panelStack.push(drilldown);\n            // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n            this.$(\"> .controls\")\n                .add(this.$list())\n                .hide();\n            drilldown.parentName = this.model.get(\"name\");\n            this.$el.append(drilldown.render().$el);\n        },\n\n        /** Handle drilldown close by freeing the panel and re-rendering this panel */\n        _collapseDrilldownPanel: function(drilldown) {\n            this.panelStack.pop();\n            this.render();\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: {\n            \"click .navigation .back\": \"close\"\n        },\n\n        /** close/remove this collection panel */\n        close: function(event) {\n            this.remove();\n            this.trigger(\"close\");\n        },\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `CollectionView(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nCollectionView.prototype.templates = (() => {\n    var controlsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"controls\">',\n            '<div class=\"navigation\">',\n            '<a class=\"back\" href=\"javascript:void(0)\">',\n            '<span class=\"fa fa-icon fa-angle-left\"></span>',\n            _l(\"Back to \"),\n            \"<%- view.parentName %>\",\n            \"</a>\",\n            \"</div>\",\n\n            '<div class=\"title\">',\n            '<div class=\"name\"><%- collection.name || collection.element_identifier %></div>',\n            '<div class=\"subtitle\">',\n            '<% if( collection.collection_type === \"list\" ){ %>',\n            _l(\"a list of datasets\"),\n            '<% } else if( collection.collection_type === \"paired\" ){ %>',\n            _l(\"a pair of datasets\"),\n            '<% } else if( collection.collection_type === \"list:paired\" ){ %>',\n            _l(\"a list of paired datasets\"),\n            '<% } else if( collection.collection_type === \"list:list\" ){ %>',\n            _l(\"a list of dataset lists\"),\n            \"<% } %>\",\n            \"</div>\",\n            \"</div>\",\n\n            '<div class=\"tags-display\"></div>',\n\n            '<div class=\"actions\">',\n            '<a class=\"download-btn icon-btn\" ',\n            'href=\"<%- view.downloadUrl %>',\n            '\" title=\"\" download=\"\" data-original-title=\"Download Collection\">',\n            '<span class=\"fa fa-floppy-o\"></span>',\n            \"</a>\",\n            \"</div>\",\n            \"</div>\"\n        ],\n        \"collection\"\n    );\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        controls: controlsTemplate\n    });\n})();\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionView = CollectionView.extend(\n    /** @lends ListCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_LI.DatasetDCEListItemView,\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `ListCollectionView(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionView = ListCollectionView.extend(\n    /** @lends PairCollectionView.prototype */ {\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `PairCollectionView(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListOfPairsCollectionView = CollectionView.extend(\n    /** @lends ListOfPairsCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView.extend({\n            foldoutPanelClass: PairCollectionView\n        }),\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `ListOfPairsCollectionView(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a list of lists dataset collection. */\nvar ListOfListsCollectionView = CollectionView.extend({\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView.extend({\n        foldoutPanelClass: PairCollectionView\n    }),\n\n    /** string rep */\n    toString: function() {\n        return `ListOfListsCollectionView(${this.model ? this.model.get(\"name\") : \"\"})`;\n    }\n});\n\n//==============================================================================\nexport default {\n    CollectionView: CollectionView,\n    ListCollectionView: ListCollectionView,\n    PairCollectionView: PairCollectionView,\n    ListOfPairsCollectionView: ListOfPairsCollectionView,\n    ListOfListsCollectionView: ListOfListsCollectionView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/collection-view.js","import STATES from \"mvc/dataset/states\";\nimport DATASET_LI from \"mvc/dataset/dataset-li\";\nimport TAGS from \"mvc/tag\";\nimport ANNOTATIONS from \"mvc/annotation\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET_LI.DatasetListItemView;\n/** @class Editing view for DatasetAssociation.\n */\nvar DatasetListItemEdit = _super.extend(\n    /** @lends DatasetListItemEdit.prototype */ {\n        /** set up: options */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n            this.hasUser = attributes.hasUser;\n\n            /** allow user purge of dataset files? */\n            this.purgeAllowed = attributes.purgeAllowed || false;\n\n            //TODO: move to HiddenUntilActivatedViewMixin\n            /** should the tags editor be shown or hidden initially? */\n            this.tagsEditorShown = attributes.tagsEditorShown || false;\n            /** should the tags editor be shown or hidden initially? */\n            this.annotationEditorShown = attributes.annotationEditorShown || false;\n        },\n\n        // ......................................................................... titlebar actions\n        /** In this override, add the other two primary actions: edit and delete */\n        _renderPrimaryActions: function() {\n            var actions = _super.prototype._renderPrimaryActions.call(this);\n            if (this.model.get(\"state\") === STATES.NOT_VIEWABLE) {\n                return actions;\n            }\n            // render the display, edit attr and delete icon-buttons\n            return _super.prototype._renderPrimaryActions\n                .call(this)\n                .concat([this._renderEditButton(), this._renderDeleteButton()]);\n        },\n\n        //TODO: move titleButtons into state renderers, remove state checks in the buttons\n\n        /** Render icon-button to edit the attributes (format, permissions, etc.) this dataset. */\n        _renderEditButton: function() {\n            var self = this;\n            // don't show edit while uploading, in-accessible\n            // DO show if in error (ala previous history panel)\n            if (this.model.get(\"state\") === STATES.DISCARDED || !this.model.get(\"accessible\")) {\n                return null;\n            }\n            var purged = this.model.get(\"purged\");\n            var deleted = this.model.get(\"deleted\");\n\n            var editBtnData = {\n                title: _l(\"Edit attributes\"),\n                href: `${Galaxy.root}datasets/edit?dataset_id=${this.model.attributes.id}`,\n                faIcon: \"fa-pencil\",\n                classes: \"edit-btn\",\n                onclick: function(ev) {\n                    if (Galaxy.router) {\n                        ev.preventDefault();\n                        Galaxy.router.push(\"datasets/edit\", {\n                            dataset_id: self.model.attributes.id\n                        });\n                    }\n                }\n            };\n\n            // disable if purged or deleted and explain why in the tooltip\n            if (deleted || purged) {\n                editBtnData.disabled = true;\n                if (purged) {\n                    editBtnData.title = _l(\"Cannot edit attributes of datasets removed from disk\");\n                } else if (deleted) {\n                    editBtnData.title = _l(\"Undelete dataset to edit attributes\");\n                }\n\n                // disable if still uploading or new\n            } else if (_.contains([STATES.UPLOAD, STATES.NEW], this.model.get(\"state\"))) {\n                editBtnData.disabled = true;\n                editBtnData.title = _l(\"This dataset is not yet editable\");\n            }\n            return faIconButton(editBtnData);\n        },\n\n        /** Render icon-button to delete this hda. */\n        _renderDeleteButton: function() {\n            // don't show delete if...\n            if (!this.model.get(\"accessible\")) {\n                return null;\n            }\n\n            var self = this;\n            var deletedAlready = this.model.isDeletedOrPurged();\n            return faIconButton({\n                title: !deletedAlready ? _l(\"Delete\") : _l(\"Dataset is already deleted\"),\n                disabled: deletedAlready,\n                faIcon: \"fa-times\",\n                classes: \"delete-btn\",\n                onclick: function() {\n                    // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                    self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                    self.model[\"delete\"]();\n                }\n            });\n        },\n\n        // ......................................................................... details\n        /** In this override, add tags and annotations controls, make the ? dbkey a link to editing page */\n        _renderDetails: function() {\n            //TODO: generalize to be allow different details for each state\n            var $details = _super.prototype._renderDetails.call(this);\n\n            var state = this.model.get(\"state\");\n\n            if (!this.model.isDeletedOrPurged() && _.contains([STATES.OK, STATES.FAILED_METADATA], state)) {\n                this._renderTags($details);\n                this._renderAnnotation($details);\n                this._makeDbkeyEditLink($details);\n            }\n\n            this._setUpBehaviors($details);\n            return $details;\n        },\n\n        /**************************************************************************\n         * Render help button to show tool help text without rerunning the tool.\n         * Issue #2100\n         */\n        _renderToolHelpButton: function() {\n            var datasetID = this.model.attributes.dataset_id;\n            var jobID = this.model.attributes.creating_job;\n            var self = this;\n\n            var parseToolBuild = data => {\n                var helpString = `<div id=\"thdiv-${datasetID}\" class=\"toolhelp\">`;\n                if (data.name && data.help) {\n                    helpString += `<strong>Tool help for ${data.name}</strong><hr/>`;\n                    helpString += data.help;\n                } else {\n                    helpString += \"<strong>Tool help is unavailable for this dataset.</strong><hr/>\";\n                }\n                helpString += \"</div>\";\n                self.$el.find(\".details\").append($.parseHTML(helpString));\n            };\n            var parseToolID = data => {\n                $.ajax({\n                    url: `${Galaxy.root}api/tools/${data.tool_id}/build`\n                })\n                    .done(data => {\n                        parseToolBuild(data);\n                    })\n                    .fail(() => {\n                        parseToolBuild({});\n                    });\n            };\n            if (Galaxy.user.id === null) {\n                return null;\n            }\n            return faIconButton({\n                title: _l(\"Tool Help\"),\n                classes: \"icon-btn\",\n                href: \"#\",\n                faIcon: \"fa-question\",\n                onclick: function() {\n                    var divString = `thdiv-${datasetID}`;\n                    if (self.$el.find(\".toolhelp\").length > 0) {\n                        self.$el.find(\".toolhelp\").toggle();\n                    } else {\n                        $.ajax({\n                            url: `${Galaxy.root}api/jobs/${jobID}`\n                        })\n                            .done(data => {\n                                parseToolID(data);\n                            })\n                            .fail(() => {\n                                console.log(\n                                    `Failed at recovering job information from the  Galaxy API for job id \"${jobID}\".`\n                                );\n                            });\n                    }\n                }\n            });\n        },\n        //*************************************************************************\n\n        /** Add less commonly used actions in the details section based on state */\n        _renderSecondaryActions: function() {\n            var actions = _super.prototype._renderSecondaryActions.call(this);\n            switch (this.model.get(\"state\")) {\n                case STATES.UPLOAD:\n                case STATES.NOT_VIEWABLE:\n                    return actions;\n                case STATES.ERROR:\n                    // error button comes first\n                    actions.unshift(this._renderErrButton());\n                    return actions.concat([this._renderRerunButton(), this._renderToolHelpButton()]);\n                case STATES.OK:\n                case STATES.FAILED_METADATA:\n                    return actions.concat([\n                        this._renderRerunButton(),\n                        this._renderVisualizationsButton(),\n                        this._renderToolHelpButton()\n                    ]);\n            }\n            return actions.concat([this._renderRerunButton(), this._renderToolHelpButton()]);\n        },\n\n        /** Render icon-button to report an error on this dataset to the galaxy admin. */\n        _renderErrButton: function() {\n            var self = this;\n            return faIconButton({\n                title: _l(\"View or report this error\"),\n                href: `${Galaxy.root}datasets/error?dataset_id=${this.model.attributes.id}`,\n                classes: \"report-error-btn\",\n                faIcon: \"fa-bug\",\n                onclick: function(ev) {\n                    if (Galaxy.router) {\n                        ev.preventDefault();\n                        Galaxy.router.push(\"datasets/error\", {\n                            dataset_id: self.model.attributes.id\n                        });\n                    }\n                }\n            });\n        },\n\n        /** Render icon-button to re-run the job that created this dataset. */\n        _renderRerunButton: function() {\n            var creating_job = this.model.get(\"creating_job\");\n            if (this.model.get(\"rerunnable\")) {\n                return faIconButton({\n                    title: _l(\"Run this job again\"),\n                    href: this.model.urls.rerun,\n                    classes: \"rerun-btn\",\n                    target: this.linkTarget,\n                    faIcon: \"fa-refresh\",\n                    onclick: function(ev) {\n                        if (Galaxy.router) {\n                            ev.preventDefault();\n                            Galaxy.router.push(\"/\", {\n                                job_id: creating_job\n                            });\n                        }\n                    }\n                });\n            }\n        },\n\n        /** Render an icon-button or popupmenu of links based on the applicable visualizations */\n        _renderVisualizationsButton: function() {\n            //TODO: someday - lazyload visualizations\n            var visualizations = this.model.get(\"visualizations\");\n            if (this.model.isDeletedOrPurged() || !this.hasUser || !this.model.hasData() || _.isEmpty(visualizations)) {\n                return null;\n            }\n            if (!_.isObject(visualizations[0])) {\n                this.warn(\"Visualizations have been switched off\");\n                return null;\n            }\n\n            var $visualizations = $(this.templates.visualizations(visualizations, this));\n            //HACK: need to re-write those directed at galaxy_main with linkTarget\n            $visualizations.find('[target=\"galaxy_main\"]').attr(\"target\", this.linkTarget);\n            // use addBack here to include the root $visualizations elem (for the case of 1 visualization)\n            this._addScratchBookFn($visualizations.find(\".visualization-link\").addBack(\".visualization-link\"));\n            return $visualizations;\n        },\n\n        /** add scratchbook functionality to visualization links */\n        _addScratchBookFn: function($links) {\n            var li = this;\n            $links.click(function(ev) {\n                if (Galaxy.frame && Galaxy.frame.active) {\n                    Galaxy.frame.add({\n                        title: \"Visualization\",\n                        url: $(this).attr(\"href\")\n                    });\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n            });\n        },\n\n        //TODO: if possible move these to readonly view - but display the owner's tags/annotation (no edit)\n        /** Render the tags list/control */\n        _renderTags: function($where) {\n            if (!this.hasUser) {\n                return;\n            }\n            var view = this;\n            this.tagsEditor = new TAGS.TagsEditor({\n                model: this.model,\n                el: $where.find(\".tags-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // persist state on the hda view (and not the editor) since these are currently re-created each time\n                onshow: function() {\n                    view.tagsEditorShown = true;\n                },\n                onhide: function() {\n                    view.tagsEditorShown = false;\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit dataset tags\"),\n                    classes: \"tag-btn\",\n                    faIcon: \"fa-tags\"\n                }).appendTo($where.find(\".actions .right\"))\n            });\n            if (this.tagsEditorShown) {\n                this.tagsEditor.toggle(true);\n            }\n        },\n\n        /** Render the annotation display/control */\n        _renderAnnotation: function($where) {\n            if (!this.hasUser) {\n                return;\n            }\n            var view = this;\n            this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n                model: this.model,\n                el: $where.find(\".annotation-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // persist state on the hda view (and not the editor) since these are currently re-created each time\n                onshow: function() {\n                    view.annotationEditorShown = true;\n                },\n                onhide: function() {\n                    view.annotationEditorShown = false;\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit dataset annotation\"),\n                    classes: \"annotate-btn\",\n                    faIcon: \"fa-comment\"\n                }).appendTo($where.find(\".actions .right\"))\n            });\n            if (this.annotationEditorShown) {\n                this.annotationEditor.toggle(true);\n            }\n        },\n\n        /** If the format/dbkey/genome_build isn't set, make the display a link to the edit page */\n        _makeDbkeyEditLink: function($details) {\n            // make the dbkey a link to editing\n            if (this.model.get(\"metadata_dbkey\") === \"?\" && !this.model.isDeletedOrPurged()) {\n                var editableDbkey = $('<a class=\"value\">?</a>')\n                    .attr(\"href\", this.model.urls.edit)\n                    .attr(\"target\", \"_top\");\n                $details.find(\".dbkey .value\").replaceWith(editableDbkey);\n            }\n        },\n\n        // ......................................................................... events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .undelete-link\": \"_clickUndeleteLink\",\n            \"click .purge-link\": \"_clickPurgeLink\",\n\n            \"click .edit-btn\": function(ev) {\n                this.trigger(\"edit\", this, ev);\n            },\n            \"click .delete-btn\": function(ev) {\n                this.trigger(\"delete\", this, ev);\n            },\n            \"click .rerun-btn\": function(ev) {\n                this.trigger(\"rerun\", this, ev);\n            },\n            \"click .report-err-btn\": function(ev) {\n                this.trigger(\"report-err\", this, ev);\n            },\n            \"click .visualization-btn\": function(ev) {\n                this.trigger(\"visualize\", this, ev);\n            },\n            \"click .dbkey a\": function(ev) {\n                this.trigger(\"edit\", this, ev);\n            }\n        }),\n\n        /** listener for item undelete (in the messages section) */\n        _clickUndeleteLink: function(ev) {\n            this.model.undelete();\n            return false;\n        },\n\n        /** listener for item purge (in the messages section) */\n        _clickPurgeLink: function(ev) {\n            if (confirm(_l(\"This will permanently remove the data in your dataset. Are you sure?\"))) {\n                this.model.purge();\n            }\n            return false;\n        },\n\n        // ......................................................................... misc\n        /** string rep */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `HDAEditView(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemEdit.prototype.templates = (() => {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        failed_metadata: BASE_MVC.wrapTemplate(\n            [\n                // in this override, provide a link to the edit page\n                '<% if( dataset.state === \"failed_metadata\" ){ %>',\n                '<div class=\"failed_metadata-warning warningmessagesmall\">',\n                _l(\"An error occurred setting the metadata for this dataset\"),\n                '<br /><a href=\"<%- dataset.urls.edit %>\" target=\"_top\">',\n                _l(\"Set it manually or retry auto-detection\"),\n                \"</a>\",\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        ),\n\n        deleted: BASE_MVC.wrapTemplate(\n            [\n                // in this override, provide links to undelete or purge the dataset\n                \"<% if( dataset.deleted && !dataset.purged ){ %>\",\n                // deleted not purged\n                '<div class=\"deleted-msg warningmessagesmall\">',\n                _l(\"This dataset has been deleted\"),\n                '<br /><a class=\"undelete-link\" href=\"javascript:void(0);\">',\n                _l(\"Undelete it\"),\n                \"</a>\",\n                \"<% if( view.purgeAllowed ){ %>\",\n                '<br /><a class=\"purge-link\" href=\"javascript:void(0);\">',\n                _l(\"Permanently remove it from disk\"),\n                \"</a>\",\n                \"<% } %>\",\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        )\n    });\n\n    var visualizationsTemplate = BASE_MVC.wrapTemplate(\n        [\n            \"<% if( visualizations.length === 1 ){ %>\",\n            '<a class=\"visualization-link icon-btn\" href=\"<%- visualizations[0].href %>\"',\n            ' target=\"<%- visualizations[0].target %>\" title=\"',\n            _l(\"Visualize in\"),\n            ' <%- visualizations[0].html %>\">',\n            '<span class=\"fa fa-bar-chart-o\"></span>',\n            \"</a>\",\n\n            \"<% } else { %>\",\n            '<div class=\"visualizations-dropdown dropdown icon-btn\">',\n            '<a data-toggle=\"dropdown\" title=\"',\n            _l(\"Visualize\"),\n            '\">',\n            '<span class=\"fa fa-bar-chart-o\"></span>',\n            \"</a>\",\n            '<ul class=\"dropdown-menu\" role=\"menu\">',\n            \"<% _.each( visualizations, function( visualization ){ %>\",\n            '<li><a class=\"visualization-link\" href=\"<%- visualization.href %>\"',\n            ' target=\"<%- visualization.target %>\">',\n            \"<%- visualization.html %>\",\n            \"</a></li>\",\n            \"<% }); %>\",\n            \"</ul>\",\n            \"</div>\",\n            \"<% } %>\"\n        ],\n        \"visualizations\"\n    );\n\n    return _.extend({}, _super.prototype.templates, {\n        warnings: warnings,\n        visualizations: visualizationsTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    DatasetListItemEdit: DatasetListItemEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/dataset-li-edit.js","import baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/editable-text\";\n// =============================================================================\n/** A view on any model that has a 'annotation' attribute\n */\nvar AnnotationEditor = Backbone.View.extend(baseMVC.LoggableMixin)\n    .extend(baseMVC.HiddenUntilActivatedViewMixin)\n    .extend({\n        tagName: \"div\",\n        className: \"annotation-display\",\n\n        /** Set up listeners, parse options */\n        initialize: function(options) {\n            options = options || {};\n            this.tooltipConfig = options.tooltipConfig || {\n                placement: \"bottom\"\n            };\n            //console.debug( this, options );\n            // only listen to the model only for changes to annotations\n            this.listenTo(this.model, \"change:annotation\", function() {\n                this.render();\n            });\n            this.hiddenUntilActivated(options.$activator, options);\n        },\n\n        /** Build the DOM elements, call select to on the created input, and set up behaviors */\n        render: function() {\n            var view = this;\n            this.$el.html(this._template());\n\n            //TODO: handle empties better\n            this.$annotation().make_text_editable({\n                use_textarea: true,\n                on_finish: function(newAnnotation) {\n                    view.$annotation().text(newAnnotation);\n                    view.model.save({ annotation: newAnnotation }, { silent: true }).fail(() => {\n                        view.$annotation().text(view.model.previous(\"annotation\"));\n                    });\n                }\n            });\n            return this;\n        },\n\n        /** @returns {String} the html text used to build the view's DOM */\n        _template: function() {\n            var annotation = this.model.get(\"annotation\");\n            return [\n                //TODO: make prompt optional\n                '<label class=\"prompt\">',\n                _l(\"Annotation\"),\n                \"</label>\",\n                // set up initial tags by adding as CSV to input vals (necc. to init select2)\n                '<div class=\"annotation\">',\n                _.escape(annotation),\n                \"</div>\"\n            ].join(\"\");\n        },\n\n        /** @returns {jQuery} the main element for this view */\n        $annotation: function() {\n            return this.$el.find(\".annotation\");\n        },\n\n        /** shut down event listeners and remove this view's DOM */\n        remove: function() {\n            this.$annotation.off();\n            this.stopListening(this.model);\n            Backbone.View.prototype.remove.call(this);\n        },\n\n        /** string rep */\n        toString: function() {\n            return [\"AnnotationEditor(\", `${this.model}`, \")\"].join(\"\");\n        }\n    });\n// =============================================================================\nexport default {\n    AnnotationEditor: AnnotationEditor\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/annotation.js","import jQuery from \"jquery\";\nvar $ = jQuery;\nimport GalaxyApp from \"galaxy\";\nimport Router from \"layout/router\";\nimport ToolPanel from \"./panels/tool-panel\";\nimport HistoryPanel from \"./panels/history-panel\";\nimport Page from \"layout/page\";\nimport ToolForm from \"mvc/tool/tool-form\";\nimport FormWrapper from \"mvc/form/form-wrapper\";\nimport UserPreferences from \"mvc/user/user-preferences\";\nimport CustomBuilds from \"mvc/user/user-custom-builds\";\nimport Tours from \"mvc/tours\";\nimport GridView from \"mvc/grid/grid-view\";\nimport GridShared from \"mvc/grid/grid-shared\";\nimport Workflows from \"mvc/workflow/workflow\";\nimport HistoryList from \"mvc/history/history-list\";\nimport ToolFormComposite from \"mvc/tool/tool-form-composite\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport DatasetError from \"mvc/dataset/dataset-error\";\nimport DatasetEditAttributes from \"mvc/dataset/dataset-edit-attributes\";\nimport Citations from \"components/citations.vue\";\nimport Vue from \"libs/vue\";\n\n/** define the 'Analyze Data'/analysis/main/home page for Galaxy\n *  * has a masthead\n *  * a left tool menu to allow the user to load tools in the center panel\n *  * a right history menu that shows the user's current data\n *  * a center panel\n *  Both panels (generally) persist while the center panel shows any\n *  UI needed for the current step of an analysis, like:\n *      * tool forms to set tool parameters,\n *      * tables showing the contents of datasets\n *      * etc.\n */\nwindow.app = function app(options, bootstrapped) {\n    window.Galaxy = new GalaxyApp.GalaxyApp(options, bootstrapped);\n    Galaxy.debug(\"analysis app\");\n\n    /** Routes */\n    var AnalysisRouter = Router.extend({\n        routes: {\n            \"(/)\": \"home\",\n            \"(/)root*\": \"home\",\n            \"(/)tours(/)(:tour_id)\": \"show_tours\",\n            \"(/)user(/)\": \"show_user\",\n            \"(/)user(/)(:form_id)\": \"show_user_form\",\n            \"(/)workflow(/)\": \"show_workflows\",\n            \"(/)workflow/run(/)\": \"show_run\",\n            \"(/)pages(/)create(/)\": \"show_pages_create\",\n            \"(/)pages(/)edit(/)\": \"show_pages_edit\",\n            \"(/)pages(/)(:action_id)\": \"show_pages\",\n            \"(/)visualizations(/)edit(/)\": \"show_visualizations_edit\",\n            \"(/)visualizations/(:action_id)\": \"show_visualizations\",\n            \"(/)workflows/list_published(/)\": \"show_workflows_published\",\n            \"(/)histories(/)citations(/)\": \"show_history_citations\",\n            \"(/)histories(/)rename(/)\": \"show_histories_rename\",\n            \"(/)histories(/)permissions(/)\": \"show_histories_permissions\",\n            \"(/)histories(/)(:action_id)\": \"show_histories\",\n            \"(/)datasets(/)list(/)\": \"show_datasets\",\n            \"(/)workflow/import_workflow\": \"show_import_workflow\",\n            \"(/)custom_builds\": \"show_custom_builds\",\n            \"(/)datasets/edit\": \"show_dataset_edit_attributes\",\n            \"(/)datasets/error\": \"show_dataset_error\"\n        },\n\n        require_login: [\"show_user\", \"show_user_form\", \"show_workflows\"],\n\n        authenticate: function(args, name) {\n            return (Galaxy.user && Galaxy.user.id) || this.require_login.indexOf(name) == -1;\n        },\n\n        show_tours: function(tour_id) {\n            if (tour_id) {\n                Tours.giveTour(tour_id);\n            } else {\n                this.page.display(new Tours.ToursView());\n            }\n        },\n\n        show_user: function() {\n            this.page.display(new UserPreferences.View());\n        },\n\n        show_user_form: function(form_id) {\n            var model = new UserPreferences.Model({\n                user_id: Galaxy.params.id\n            });\n            this.page.display(new FormWrapper.View(model.get(form_id)));\n        },\n\n        show_visualizations: function(action_id) {\n            this.page.display(\n                new GridShared.View({\n                    action_id: action_id,\n                    plural: \"Visualizations\",\n                    item: \"visualization\"\n                })\n            );\n        },\n\n        show_visualizations_edit: function() {\n            this.page.display(\n                new FormWrapper.View({\n                    url: `visualization/edit?id=${QueryStringParsing.get(\"id\")}`,\n                    redirect: \"visualizations/list\"\n                })\n            );\n        },\n\n        show_workflows_published: function() {\n            this.page.display(\n                new GridView({\n                    url_base: `${Galaxy.root}workflow/list_published`,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_histories: function(action_id) {\n            this.page.display(new HistoryList.View({ action_id: action_id }));\n        },\n\n        show_history_citations: function() {\n            var citationInstance = Vue.extend(Citations);\n            var vm = document.createElement(\"div\");\n            this.page.display(vm);\n            new citationInstance({ propsData: { id: QueryStringParsing.get(\"id\"), source: \"histories\" } }).$mount(vm);\n        },\n\n        show_histories_rename: function() {\n            this.page.display(\n                new FormWrapper.View({\n                    url: `history/rename?id=${QueryStringParsing.get(\"id\")}`,\n                    redirect: \"histories/list\"\n                })\n            );\n        },\n\n        show_histories_permissions: function() {\n            this.page.display(\n                new FormWrapper.View({\n                    url: `history/permissions?id=${QueryStringParsing.get(\"id\")}`,\n                    redirect: \"histories/list\"\n                })\n            );\n        },\n\n        show_datasets: function() {\n            this.page.display(\n                new GridView({\n                    url_base: `${Galaxy.root}dataset/list`,\n                    dict_format: true\n                })\n            );\n        },\n\n        show_pages: function(action_id) {\n            this.page.display(\n                new GridShared.View({\n                    action_id: action_id,\n                    plural: \"Pages\",\n                    item: \"page\"\n                })\n            );\n        },\n\n        show_pages_create: function() {\n            this.page.display(\n                new FormWrapper.View({\n                    url: \"page/create\",\n                    redirect: \"pages/list\"\n                })\n            );\n        },\n\n        show_pages_edit: function() {\n            this.page.display(\n                new FormWrapper.View({\n                    url: `page/edit?id=${QueryStringParsing.get(\"id\")}`,\n                    redirect: \"pages/list\"\n                })\n            );\n        },\n\n        show_workflows: function() {\n            this.page.display(new Workflows.View());\n        },\n\n        show_run: function() {\n            this._loadWorkflow();\n        },\n\n        show_import_workflow: function() {\n            this.page.display(new Workflows.ImportWorkflowView());\n        },\n\n        show_custom_builds: function() {\n            var historyPanel = this.page.historyPanel.historyView;\n            if (!historyPanel || !historyPanel.model || !historyPanel.model.id) {\n                window.setTimeout(() => {\n                    this.show_custom_builds();\n                }, 500);\n                return;\n            }\n            this.page.display(new CustomBuilds.View());\n        },\n\n        show_dataset_edit_attributes: function() {\n            this.page.display(new DatasetEditAttributes.View());\n        },\n\n        show_dataset_error: function() {\n            this.page.display(new DatasetError.View());\n        },\n\n        /**  */\n        home: function(params) {\n            // TODO: to router, remove Globals\n            // load a tool by id (tool_id) or rerun a previous tool execution (job_id)\n            if (params.tool_id || params.job_id) {\n                if (params.tool_id === \"upload1\") {\n                    this.page.toolPanel.upload.show();\n                    this._loadCenterIframe(\"welcome\");\n                } else {\n                    this._loadToolForm(params);\n                }\n            } else {\n                // show the workflow run form\n                if (params.workflow_id) {\n                    this._loadWorkflow();\n                    // load the center iframe with controller.action: galaxy.org/?m_c=history&m_a=list -> history/list\n                } else if (params.m_c) {\n                    this._loadCenterIframe(`${params.m_c}/${params.m_a}`);\n                    // show the workflow run form\n                } else {\n                    this._loadCenterIframe(\"welcome\");\n                }\n            }\n        },\n\n        /** load the center panel with a tool form described by the given params obj */\n        _loadToolForm: function(params) {\n            //TODO: load tool form code async\n            params.id = decodeURIComponent(params.tool_id);\n            this.page.display(new ToolForm.View(params));\n        },\n\n        /** load the center panel iframe using the given url */\n        _loadCenterIframe: function(url, root) {\n            root = root || Galaxy.root;\n            url = root + url;\n            this.page.$(\"#galaxy_main\").prop(\"src\", url);\n        },\n\n        /** load workflow by its url in run mode */\n        _loadWorkflow: function() {\n            Utils.get({\n                url: `${Galaxy.root}api/workflows/${Utils.getQueryString(\"id\")}/download?style=run`,\n                success: response => {\n                    this.page.display(new ToolFormComposite.View(response));\n                },\n                error: response => {\n                    var error_msg = response.err_msg || \"Error occurred while loading the resource.\";\n                    var options = {\n                        message: error_msg,\n                        status: \"danger\",\n                        persistent: true\n                    };\n                    this.page.display(new Ui.Message(options));\n                }\n            });\n        }\n    });\n\n    // render and start the router\n    $(() => {\n        Galaxy.page = new Page.View(\n            _.extend(options, {\n                Left: ToolPanel,\n                Right: HistoryPanel,\n                Router: AnalysisRouter\n            })\n        );\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/analysis.js","import Tools from \"mvc/tool/tools\";\nimport Upload from \"mvc/upload/upload-view\";\nimport _l from \"utils/localization\";\nimport ToolForm from \"mvc/tool/tool-form-composite\";\n\nvar ToolPanel = Backbone.View.extend({\n    initialize: function(page, options) {\n        // access configuration options\n        var config = options.config;\n        this.root = options.root;\n\n        /** @type {Object[]} descriptions of user's workflows to be shown in the tool menu */\n        this.stored_workflow_menu_entries = config.stored_workflow_menu_entries || [];\n\n        // create tool search, tool panel, and tool panel view.\n        var tool_search = new Tools.ToolSearch({\n            hidden: false\n        });\n        var tools = new Tools.ToolCollection(config.toolbox);\n        this.tool_panel = new Tools.ToolPanel({\n            tool_search: tool_search,\n            tools: tools,\n            layout: config.toolbox_in_panel\n        });\n        this.tool_panel_view = new Tools.ToolPanelView({\n            model: this.tool_panel\n        });\n\n        // add upload modal\n        this.upload_button = new Upload({\n            nginx_upload_path: config.nginx_upload_path,\n            ftp_upload_site: config.ftp_upload_site,\n            default_genome: config.default_genome,\n            default_extension: config.default_extension\n        });\n\n        // add uploader button to Galaxy object\n        Galaxy.upload = this.upload_button;\n\n        // components for panel definition\n        this.model = new Backbone.Model({\n            title: _l(\"Tools\"),\n            buttons: [this.upload_button]\n        });\n\n        // build body template\n        this.setElement(this._template());\n    },\n\n    render: function() {\n        // if there are tools, render panel and display everything\n        var self = this;\n        if (this.tool_panel.get(\"layout\").size() > 0) {\n            this.$el.prepend(this.tool_panel_view.$el);\n            this.tool_panel_view.render();\n        }\n        // build the dom for the workflow portion of the tool menu\n        // add internal workflow list\n        self.$(\"#internal-workflows\").append(\n            self._templateAllWorkflow({\n                title: _l(\"All workflows\"),\n                href: \"workflow\"\n            })\n        );\n        _.each(this.stored_workflow_menu_entries, menu_entry => {\n            self.$(\"#internal-workflows\").append(\n                self._templateWorkflowLink({\n                    title: menu_entry.stored_workflow.name,\n                    href: `workflow/run?id=${menu_entry.encoded_stored_workflow_id}`\n                })\n            );\n        });\n    },\n\n    /** build a link to one tool */\n    _templateTool: function(tool) {\n        return [\n            '<div class=\"toolTitle\">',\n            '<a href=\"',\n            this.root,\n            tool.href,\n            '\" target=\"galaxy_main\">',\n            tool.title,\n            \"</a>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    /** build a link to 'All Workflows' */\n    _templateAllWorkflow: function(tool) {\n        return [\n            '<div class=\"toolTitle\">',\n            // global\n            '<a href=\"',\n            Galaxy.root,\n            tool.href,\n            '\">',\n            tool.title,\n            \"</a>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    /** build links to workflows in toolpanel */\n    _templateWorkflowLink: function(wf) {\n        return [\n            '<div class=\"toolTitle\">',\n            `<a class=\"${wf.cls} \" href=\"`,\n            Galaxy.root,\n            wf.href,\n            '\">',\n            wf.title,\n            \"</a>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    /** override to include inital menu dom and workflow section */\n    _template: function() {\n        return [\n            '<div class=\"toolMenuContainer\">',\n            '<div class=\"toolMenu\" style=\"display: none\">',\n            '<div id=\"search-no-results\" style=\"display: none; padding-top: 5px\">',\n            \"<em><strong>\",\n            _l(\"Search did not match any tools.\"),\n            \"</strong></em>\",\n            \"</div>\",\n            \"</div>\",\n            '<div class=\"toolSectionPad\"/>',\n            '<div class=\"toolSectionPad\"/>',\n            '<div class=\"toolSectionTitle\" id=\"title_XXinternalXXworkflow\">',\n            \"<span>\",\n            _l(\"Workflows\"),\n            \"</span>\",\n            \"</div>\",\n            '<div id=\"internal-workflows\" class=\"toolSectionBody\">',\n            '<div class=\"toolSectionBg\"/>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\");\n    },\n\n    toString: function() {\n        return \"toolPanel\";\n    }\n});\n\nexport default ToolPanel;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/panels/tool-panel.js","/** Upload app contains the upload progress button and upload modal, compiles model data for API request **/\nimport Utils from \"utils/utils\";\nimport Modal from \"mvc/ui/ui-modal\";\nimport Tabs from \"mvc/ui/ui-tabs\";\nimport UploadButton from \"mvc/upload/upload-button\";\nimport UploadViewDefault from \"mvc/upload/default/default-view\";\nimport UploadViewComposite from \"mvc/upload/composite/composite-view\";\nimport UploadViewCollection from \"mvc/upload/collection/collection-view\";\nexport default Backbone.View.extend({\n    options: {\n        nginx_upload_path: \"\",\n        ftp_upload_site: \"n/a\",\n        default_genome: \"?\",\n        default_extension: \"auto\",\n        height: 500,\n        width: 900,\n        auto: {\n            id: \"auto\",\n            text: \"Auto-detect\",\n            description:\n                \"This system will try to detect the file type automatically. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be.  You can also upload compressed files, which will automatically be decompressed.\"\n        }\n    },\n\n    // contains all available dataset extensions/types\n    list_extensions: [],\n\n    // contains all available genomes\n    list_genomes: [],\n\n    initialize: function(options) {\n        var self = this;\n        this.options = Utils.merge(options, this.options);\n\n        // create view for upload/progress button\n        this.ui_button = new UploadButton.View({\n            onclick: function(e) {\n                e.preventDefault();\n                self.show();\n            },\n            onunload: function() {\n                var percentage = self.ui_button.model.get(\"percentage\", 0);\n                if (percentage > 0 && percentage < 100) {\n                    return \"Several uploads are queued.\";\n                }\n            }\n        });\n\n        // set element to button view\n        this.setElement(this.ui_button.$el);\n\n        // load extensions\n        var self = this;\n        Utils.get({\n            url: `${Galaxy.root}api/datatypes?extension_only=False`,\n            success: function(datatypes) {\n                for (var key in datatypes) {\n                    self.list_extensions.push({\n                        id: datatypes[key].extension,\n                        text: datatypes[key].extension,\n                        description: datatypes[key].description,\n                        description_url: datatypes[key].description_url,\n                        composite_files: datatypes[key].composite_files\n                    });\n                }\n                self.list_extensions.sort((a, b) => {\n                    var a_text = a.text && a.text.toLowerCase();\n                    var b_text = b.text && b.text.toLowerCase();\n                    return a_text > b_text ? 1 : a_text < b_text ? -1 : 0;\n                });\n                if (!self.options.datatypes_disable_auto) {\n                    self.list_extensions.unshift(self.options.auto);\n                }\n            }\n        });\n\n        // load genomes\n        Utils.get({\n            url: `${Galaxy.root}api/genomes`,\n            success: function(genomes) {\n                for (var key in genomes) {\n                    self.list_genomes.push({\n                        id: genomes[key][1],\n                        text: genomes[key][0]\n                    });\n                }\n                self.list_genomes.sort((a, b) => {\n                    if (a.id == self.options.default_genome) {\n                        return -1;\n                    }\n                    if (b.id == self.options.default_genome) {\n                        return 1;\n                    }\n                    return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\n                });\n            }\n        });\n    },\n\n    /** Show/hide upload dialog */\n    show: function() {\n        var self = this;\n        if (!Galaxy.currHistoryPanel || !Galaxy.currHistoryPanel.model) {\n            window.setTimeout(() => {\n                self.show();\n            }, 500);\n            return;\n        }\n        this.current_user = Galaxy.user.id;\n        if (!this.modal) {\n            this.tabs = new Tabs.View();\n            this.default_view = new UploadViewDefault(this);\n            this.tabs.add({\n                id: \"regular\",\n                title: \"Regular\",\n                $el: this.default_view.$el\n            });\n            this.composite_view = new UploadViewComposite(this);\n            this.tabs.add({\n                id: \"composite\",\n                title: \"Composite\",\n                $el: this.composite_view.$el\n            });\n            this.collection_view = new UploadViewCollection(this);\n            this.tabs.add({\n                id: \"collection\",\n                title: \"Collection\",\n                $el: this.collection_view.$el\n            });\n            this.modal = new Modal.View({\n                title: \"Download from web or upload from disk\",\n                body: this.tabs.$el,\n                height: this.options.height,\n                width: this.options.width,\n                closing_events: true,\n                title_separator: false\n            });\n        }\n        this.modal.show();\n    },\n\n    /** Refresh user and current history */\n    currentHistory: function() {\n        return this.current_user && Galaxy.currHistoryPanel.model.get(\"id\");\n    },\n\n    /** Get ftp configuration */\n    currentFtp: function() {\n        return this.current_user && this.options.ftp_upload_site;\n    },\n\n    /**\n     * Package API data from array of models\n     * @param{Array} items - Upload items/rows filtered from a collection\n     */\n    toData: function(items, history_id) {\n        // create dictionary for data submission\n        var data = {\n            payload: {\n                tool_id: \"upload1\",\n                history_id: history_id || this.currentHistory(),\n                inputs: {}\n            },\n            files: [],\n            error_message: null\n        };\n        // add upload tools input data\n        if (items && items.length > 0) {\n            var inputs = {\n                file_count: items.length,\n                dbkey: items[0].get(\"genome\", \"?\"),\n                file_type: items[0].get(\"extension\", \"auto\")\n            };\n            for (var index in items) {\n                var it = items[index];\n                it.set(\"status\", \"running\");\n                if (it.get(\"file_size\") > 0) {\n                    var prefix = `files_${index}|`;\n                    inputs[`${prefix}type`] = \"upload_dataset\";\n                    inputs[`${prefix}space_to_tab`] = (it.get(\"space_to_tab\") && \"Yes\") || null;\n                    inputs[`${prefix}to_posix_lines`] = (it.get(\"to_posix_lines\") && \"Yes\") || null;\n                    inputs[`${prefix}dbkey`] = it.get(\"genome\", null);\n                    inputs[`${prefix}file_type`] = it.get(\"extension\", null);\n                    switch (it.get(\"file_mode\")) {\n                        case \"new\":\n                            inputs[`${prefix}url_paste`] = it.get(\"url_paste\");\n                            break;\n                        case \"ftp\":\n                            inputs[`${prefix}ftp_files`] = it.get(\"file_path\");\n                            break;\n                        case \"local\":\n                            data.files.push({\n                                name: `${prefix}file_data`,\n                                file: it.get(\"file_data\")\n                            });\n                    }\n                } else {\n                    data.error_message = \"Upload content incomplete.\";\n                    it.set(\"status\", \"error\");\n                    it.set(\"info\", data.error_message);\n                    break;\n                }\n            }\n            data.payload.inputs = JSON.stringify(inputs);\n        }\n        return data;\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-view.js","/** View for upload/progress bar button */\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                icon: \"fa-upload\",\n                tooltip: \"Download from URL or upload files from disk\",\n                label: \"Load Data\",\n                percentage: 0,\n                status: \"\",\n                onunload: function() {},\n                onclick: function() {}\n            }).set(options);\n        this.setElement(this._template());\n        this.$progress = this.$(\".progress-bar\");\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n        $(window).on(\"beforeunload\", () => self.model.get(\"onunload\")());\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .off(\"click\")\n            .on(\"click\", e => {\n                options.onclick(e);\n            })\n            .tooltip({\n                title: this.model.get(\"tooltip\"),\n                placement: \"bottom\"\n            });\n        this.$progress\n            .removeClass()\n            .addClass(\"progress-bar\")\n            .addClass(\"progress-bar-notransition\")\n            .addClass(options.status != \"\" && `progress-bar-${options.status}`)\n            .css({ width: `${options.percentage}%` });\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-button\">' +\n            '<div class=\"progress\">' +\n            '<div class=\"progress-bar\"/>' +\n            '<a class=\"panel-header-button\" href=\"javascript:void(0)\" id=\"tool-panel-upload-button\">' +\n            '<span class=\"fa fa-upload\"/>' +\n            \"</a>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\nexport default { View: View };\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/upload-button.js","/** Renders contents of the default uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/default/default-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LazyLimited from \"mvc/lazy/lazy-limited\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n\n        // build template\n        this.setElement(this._template());\n        this.$uploadbox = this.$(\".upload-box\");\n        this.$uploadtable = this.$(\".upload-table\");\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local file\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP file\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnClose],\n            button => {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$uploadbox.uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData([self.collection.get(index)], self.history_id);\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$uploadbox.addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$uploadbox.removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, ext => !ext.composite_files),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self._changeExtension(extension);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", e => {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self._changeGenome(genome);\n            }\n        });\n\n        // Lazy load helper\n        this.loader = new LazyLimited({\n            $container: this.$uploadbox,\n            collection: this.collection,\n            new_content: function(model) {\n                var upload_row = new UploadRow(self, { model: model });\n                self.$uploadtable.find(\"> tbody:first\").append(upload_row.$el);\n                upload_row.render();\n                return upload_row;\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", model => {\n            self._eventRemove(model);\n        });\n        this.render();\n    },\n\n    render: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = `You added ${\n                    this.counter.announce\n                } file(s) to the queue. Add more files or click 'Start' to proceed.`;\n            } else {\n                message = `Please wait...${this.counter.announce} out of ${this.counter.running} remaining.`;\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n        var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file\n        });\n        this.render();\n        this.collection.add(new_model);\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\" });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this.render();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this.render();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(model => {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this.render();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this.render();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce != 0 && this.counter.running == 0) {\n            // prepare upload process\n            var self = this;\n            this.upload_size = 0;\n            this.upload_completed = 0;\n            this.collection.each(model => {\n                if (model.get(\"status\") == \"init\") {\n                    model.set(\"status\", \"queued\");\n                    self.upload_size += model.get(\"file_size\");\n                }\n            });\n            this.ui_button.model.set({\n                percentage: 0,\n                status: \"success\"\n            });\n            this.counter.running = this.counter.announce;\n            this.history_id = this.app.currentHistory();\n\n            // package ftp files separately, and remove them from queue\n            this._uploadFtp();\n\n            // queue remaining files\n            this.uploadbox.start();\n            this.render();\n        }\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            var self = this;\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this.render();\n        }\n    },\n\n    /** Update extension for all models */\n    _changeExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension || !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update genome for all models */\n    _changeGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome || !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Package and upload ftp files in a single request */\n    _uploadFtp: function() {\n        var self = this;\n        var list = [];\n        this.collection.each(model => {\n            if (model.get(\"status\") == \"queued\" && model.get(\"file_mode\") == \"ftp\") {\n                self.uploadbox.remove(model.id);\n                list.push(model);\n            }\n        });\n        if (list.length > 0) {\n            $.uploadpost({\n                data: this.app.toData(list),\n                url: this.app.options.nginx_upload_path,\n                success: function(message) {\n                    _.each(list, model => {\n                        self._eventSuccess(model.id);\n                    });\n                },\n                error: function(message) {\n                    _.each(list, model => {\n                        self._eventError(model.id, message);\n                    });\n                }\n            });\n        }\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Type</th>\" +\n            \"<th>Genome</th>\" +\n            \"<th>Settings</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title\">Type (set all):</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/default/default-view.js","/** Renders the default uploader rows */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: \"Upload configuration\",\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // create select genomes\n        this.select_genome = new Select.View({\n            css: \"upload-genome\",\n            data: self.app.list_genomes,\n            container: this.$(\".upload-genome\"),\n            value: default_genome,\n            onchange: function(genome) {\n                self.model.set(\"genome\", genome);\n            }\n        });\n\n        // create select extension\n        this.select_extension = new Select.View({\n            css: \"upload-extension\",\n            data: self.app.list_extensions,\n            container: this.$(\".upload-extension\"),\n            value: default_extension,\n            onchange: function(extension) {\n                self.model.set(\"extension\", extension);\n            }\n        });\n\n        // initialize genome and extension values\n        this.model.set({\n            genome: default_genome,\n            extension: default_extension\n        });\n\n        // handle click event\n        this.$symbol.on(\"click\", () => {\n            self._removeRow();\n        });\n\n        // handle extension info popover\n        this.$(\".upload-extension-info\")\n            .on(\"click\", e => {\n                self.app.showExtensionInfo({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value()\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // handle settings popover\n        this.$settings\n            .on(\"click\", e => {\n                self._showSettings();\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", e => {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", () => {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", () => {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", () => {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:genome\", () => {\n            self._refreshGenome();\n        });\n        this.listenTo(this.model, \"change:extension\", () => {\n            self._refreshExtension();\n        });\n        this.listenTo(this.model, \"change:file_size\", () => {\n            self._refreshFileSize();\n        });\n    },\n\n    render: function() {\n        this._refreshType();\n        this._refreshPercentage();\n        this._refreshStatus();\n        this._refreshInfo();\n        this._refreshGenome();\n        this._refreshExtension();\n        this._refreshFileSize();\n    },\n\n    /** Remove view */\n    remove: function() {\n        this.select_genome.remove();\n        this.select_extension.remove();\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    /** Render type */\n    _refreshType: function() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(Utils.bytesToString(options.file_size));\n        this.$mode\n            .removeClass()\n            .addClass(\"upload-mode\")\n            .addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text\n                .css({\n                    width: `${this.$el.width() - 16}px`,\n                    top: `${this.$el.height() - 8}px`\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Update extension */\n    _refreshExtension: function() {\n        this.select_extension.value(this.model.get(\"extension\"));\n    },\n\n    /** Update genome */\n    _refreshGenome: function() {\n        this.select_genome.value(this.model.get(\"genome\"));\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(`<strong>Failed: </strong>${info}`).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: `${percentage}%` });\n        this.$percentage.html(percentage != 100 ? `${percentage}%` : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$symbol\n            .removeClass()\n            .addClass(\"upload-symbol\")\n            .addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (enabled) {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        } else {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        }\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function() {\n        this.$size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function() {\n        if ([\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !== -1) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function(options) {\n        return `<tr id=\"upload-row-${\n            options.id\n        }\" class=\"upload-row\"><td><div class=\"upload-text-column\"><div class=\"upload-mode\"/><div class=\"upload-title\"/><div class=\"upload-text\"><div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div><textarea class=\"upload-text-content form-control\"/></div></div></td><td><div class=\"upload-size\"/></td><td><div class=\"upload-extension\" style=\"float: left;\"/>&nbsp;&nbsp<div class=\"upload-extension-info upload-icon-button fa fa-search\"/></td><td><div class=\"upload-genome\"/></td><td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td><td><div class=\"upload-info\"><div class=\"upload-info-text\"/><div class=\"upload-info-progress progress\"><div class=\"upload-progress-bar progress-bar progress-bar-success\"/><div class=\"upload-percentage\">0%</div></div></div></td><td><div class=\"upload-symbol ${\n            this.status_classes.init\n        }\"/></td></tr>`;\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/default/default-row.js","/** Contains helpers to limit/lazy load views for backbone views */\n\nexport default Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.$container = options.$container;\n        this.collection = options.collection;\n        this.new_content = options.new_content;\n        this.max = options.max || 50;\n        this.content_list = {};\n        this.$message = $(\"<div/>\")\n            .addClass(\"ui-limitloader\")\n            .append(`...only the first ${this.max} entries are visible.`);\n        this.$container.append(this.$message);\n        this.listenTo(this.collection, \"reset\", this._reset, this);\n        this.listenTo(this.collection, \"add\", this._refresh, this);\n        this.listenTo(this.collection, \"remove\", this._remove, this);\n    },\n\n    /** Checks if the limit has been reached */\n    _done: function() {\n        var done = _.size(this.content_list) > this.max;\n        this.$message[done ? \"show\" : \"hide\"]();\n        return done;\n    },\n\n    /** Remove all content */\n    _reset: function() {\n        _.each(this.content_list, content => {\n            content.remove();\n        });\n        this.content_list = {};\n        this.$message.hide();\n    },\n\n    /** Remove content */\n    _remove: function(model) {\n        var model_id = model.id;\n        var content = this.content_list[model_id];\n        if (content) {\n            content.remove();\n            delete this.content_list[model_id];\n        }\n        this._refresh();\n    },\n\n    /** Refreshes container content by adding new views if visible */\n    _refresh: function() {\n        if (!this._done()) {\n            for (var i in this.collection.models) {\n                var model = this.collection.models[i];\n                var view = this.content_list[model.id];\n                if (!this.content_list[model.id]) {\n                    var content = this.new_content(model);\n                    this.content_list[model.id] = content;\n                    if (this._done()) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/lazy/lazy-limited.js","/** Renders contents of the composite uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/composite/composite-row\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nexport default Backbone.View.extend({\n    collection: new UploadModel.Collection(),\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // create button section\n        this.btnStart = new Ui.Button({\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n\n        // append buttons to dom\n        _.each([this.btnStart, this.btnClose], button => {\n            self.$(\".upload-buttons\").prepend(button.$el);\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, ext => ext.composite_files),\n            onchange: function(extension) {\n                self.collection.reset();\n                var details = _.findWhere(self.list_extensions, {\n                    id: extension\n                });\n                if (details && details.composite_files) {\n                    _.each(details.composite_files, item => {\n                        self.collection.add({\n                            id: self.collection.size(),\n                            file_desc: item.description || item.name\n                        });\n                    });\n                }\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", e => {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome\n        });\n\n        // listener for collection triggers on change in composite datatype and extension selection\n        this.listenTo(this.collection, \"add\", model => {\n            self._eventAnnounce(model);\n        });\n        this.listenTo(this.collection, \"change add\", () => {\n            self.render();\n        });\n        this.select_extension.options.onchange(this.select_extension.value());\n        this.render();\n    },\n\n    render: function() {\n        var model = this.collection.first();\n        if (model && model.get(\"status\") == \"running\") {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        } else {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        }\n        if (this.collection.where({ status: \"ready\" }).length == this.collection.length && this.collection.length > 0) {\n            this.btnStart.enable();\n            this.btnStart.$el.addClass(\"btn-primary\");\n        } else {\n            this.btnStart.disable();\n            this.btnStart.$el.removeClass(\"btn-primary\");\n        }\n        this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n    },\n\n    //\n    // upload events / process pipeline\n    //\n\n    /** Builds the basic ui with placeholder rows for each composite data type file */\n    _eventAnnounce: function(model) {\n        var upload_row = new UploadRow(this, { model: model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n        upload_row.render();\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        var self = this;\n        this.collection.each(model => {\n            model.set({\n                genome: self.select_genome.value(),\n                extension: self.select_extension.value()\n            });\n        });\n        $.uploadpost({\n            url: this.app.options.nginx_upload_path,\n            data: this.app.toData(this.collection.filter()),\n            success: function(message) {\n                self._eventSuccess(message);\n            },\n            error: function(message) {\n                self._eventError(message);\n            },\n            progress: function(percentage) {\n                self._eventProgress(percentage);\n            }\n        });\n    },\n\n    /** Refresh progress state */\n    _eventProgress: function(percentage) {\n        this.collection.each(it => {\n            it.set(\"percentage\", percentage);\n        });\n    },\n\n    /** Refresh success state */\n    _eventSuccess: function(message) {\n        this.collection.each(it => {\n            it.set(\"status\", \"success\");\n        });\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Refresh error state */\n    _eventError: function(message) {\n        this.collection.each(it => {\n            it.set({ status: \"error\", info: message });\n        });\n    },\n\n    /** Load html template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-composite\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th/>\" +\n            \"<th/>\" +\n            \"<th>Description</th>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Settings</th>\" +\n            \"<th>Status</th>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title\">Composite Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title\">Genome/Build:</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/composite/composite-view.js","/** Renders the composite upload row view */\nimport Utils from \"utils/utils\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Select from \"mvc/ui/ui-select\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-mode fa fa-exclamation text-primary\",\n        ready: \"upload-mode fa fa-check text-success\",\n        running: \"upload-mode fa fa-spinner fa-spin\",\n        success: \"upload-mode fa fa-check\",\n        error: \"upload-mode fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template());\n        this.$source = this.$(\".upload-source\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$status = this.$(\".upload-status\");\n        this.$text = this.$(\".upload-text\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$file_name = this.$(\".upload-file-name\");\n        this.$file_desc = this.$(\".upload-file-desc\");\n        this.$file_size = this.$(\".upload-file-size\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // build upload functions\n        this.uploadinput = this.$el.uploadinput({\n            ondragover: function() {\n                self.model.get(\"enabled\") && self.$el.addClass(\"warning\");\n            },\n            ondragleave: function() {\n                self.$el.removeClass(\"warning\");\n            },\n            onchange: function(files) {\n                if (self.model.get(\"status\") != \"running\" && files && files.length > 0) {\n                    self.model.reset({\n                        file_data: files[0],\n                        file_name: files[0].name,\n                        file_size: files[0].size,\n                        file_mode: files[0].mode || \"local\"\n                    });\n                    self._refreshReady();\n                }\n            }\n        });\n\n        // source selection popup\n        this.button_menu = new Ui.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: \"Select\",\n            pull: \"left\"\n        });\n        this.$source.append(this.button_menu.$el);\n        this.button_menu.addMenu({\n            icon: \"fa-laptop\",\n            title: \"Choose local file\",\n            onclick: function() {\n                self.uploadinput.dialog();\n            }\n        });\n        if (this.app.ftp_upload_site) {\n            this.button_menu.addMenu({\n                icon: \"fa-folder-open-o\",\n                title: \"Choose FTP file\",\n                onclick: function() {\n                    self._showFtp();\n                }\n            });\n        }\n        this.button_menu.addMenu({\n            icon: \"fa-edit\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self.model.reset({\n                    file_mode: \"new\",\n                    file_name: \"New File\"\n                });\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"Choose FTP file:\",\n            container: this.$source.find(\".ui-button-menu\"),\n            placement: \"right\"\n        });\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: \"Upload configuration\",\n            container: this.$settings,\n            placement: \"bottom\"\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", e => {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n            self._refreshReady();\n        });\n\n        // handle settings popover\n        this.$settings\n            .on(\"click\", e => {\n                self._showSettings();\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", () => {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", () => {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", () => {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_name\", () => {\n            self._refreshFileName();\n        });\n        this.listenTo(this.model, \"change:file_mode\", () => {\n            self._refreshMode();\n        });\n        this.listenTo(this.model, \"change:file_size\", () => {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", () => {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", () => {\n            self.remove();\n        });\n    },\n\n    render: function() {\n        this.$el.attr(\"id\", `upload-row-${this.model.id}`);\n        this.$file_name.html(_.escape(this.model.get(\"file_name\") || \"-\"));\n        this.$file_desc.html(this.model.get(\"file_desc\") || \"Unavailable\");\n        this.$file_size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n        this.$status.removeClass().addClass(this.status_classes.init);\n    },\n\n    /** Remove view */\n    remove: function() {\n        // call the base class remove method\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    //\n    // handle model events\n    //\n\n    /** Refresh ready or not states */\n    _refreshReady: function() {\n        this.app.collection.each(model => {\n            model.set(\"status\", (model.get(\"file_size\") > 0 && \"ready\") || \"init\");\n        });\n    },\n\n    /** Refresh mode and e.g. show/hide textarea field */\n    _refreshMode: function() {\n        var file_mode = this.model.get(\"file_mode\");\n        if (file_mode == \"new\") {\n            this.height = this.$el.height();\n            this.$text\n                .css({\n                    width: `${this.$el.width() - 16}px`,\n                    top: `${this.$el.height() - 8}px`\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$text_content.val(\"\").trigger(\"keyup\");\n        } else {\n            this.$el.height(this.height);\n            this.$text.hide();\n        }\n    },\n\n    /** Refresh information */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(`<strong>Failed: </strong>${info}`).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        if (percentage != 0) {\n            this.$progress_bar.css({ width: `${percentage}%` });\n        } else {\n            this.$progress_bar.addClass(\"no-transition\");\n            this.$progress_bar.css({ width: \"0%\" });\n            this.$progress_bar[0].offsetHeight;\n            this.$progress_bar.removeClass(\"no-transition\");\n        }\n        this.$percentage.html(percentage != 100 ? `${percentage}%` : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$status.removeClass().addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status != \"running\");\n        this.$text_content.attr(\"disabled\", !this.model.get(\"enabled\"));\n        this.$el.removeClass(\"success danger warning\");\n        if (status == \"running\" || status == \"ready\") {\n            this.model.set(\"percentage\", 0);\n        }\n        this.$source.find(\".button\")[status == \"running\" ? \"addClass\" : \"removeClass\"](\"disabled\");\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.model.set(\"percentage\", 100);\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.model.set(\"percentage\", 0);\n            this.$info_progress.hide();\n            this.$info_text.show();\n        } else {\n            this.$info_progress.show();\n            this.$info_text.hide();\n        }\n    },\n\n    /** File name */\n    _refreshFileName: function() {\n        this.$file_name.html(this.model.get(\"file_name\") || \"-\");\n    },\n\n    /** File size */\n    _refreshFileSize: function() {\n        this.$file_size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Show/hide ftp popup */\n    _showFtp: function() {\n        if (!this.ftp.visible) {\n            var self = this;\n            this.ftp.empty();\n            this.ftp.append(\n                new UploadFtp({\n                    ftp_upload_site: this.app.ftp_upload_site,\n                    onchange: function(ftp_file) {\n                        self.ftp.hide();\n                        if (self.model.get(\"status\") != \"running\" && ftp_file) {\n                            self.model.reset({\n                                file_mode: \"ftp\",\n                                file_name: ftp_file.path,\n                                file_size: ftp_file.size,\n                                file_path: ftp_file.path\n                            });\n                            self._refreshReady();\n                        }\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Show/hide settings popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<tr class=\"upload-row\">' +\n            \"<td>\" +\n            '<div class=\"upload-source\"/>' +\n            '<div class=\"upload-text-column\">' +\n            '<div class=\"upload-text\">' +\n            '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n            '<textarea class=\"upload-text-content form-control\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-status\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-desc upload-title\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-name upload-title\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-size upload-size\"/>' +\n            \"</td>\" +\n            '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' +\n            \"<td>\" +\n            '<div class=\"upload-info\">' +\n            '<div class=\"upload-info-text\"/>' +\n            '<div class=\"upload-info-progress progress\">' +\n            '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n            '<div class=\"upload-percentage\">0%</div>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/composite/composite-row.js","/** Renders contents of the collection uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/collection/collection-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: \"Choose local files\",\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: \"Choose FTP files\",\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: \"Start\",\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnBuild = new Ui.Button({\n            id: \"btn-build\",\n            title: \"Build\",\n            onclick: function() {\n                self._eventBuild();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: \"Pause\",\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: \"Reset\",\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: \"Close\",\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnBuild,\n                this.btnClose\n            ],\n            button => {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$(\".upload-box\").uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData([self.collection.get(index)], self.history_id);\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$(\".upload-box\").addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$(\".upload-box\").removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"FTP files\",\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, ext => !ext.composite_files),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        this.collectionType = \"list\";\n        this.select_collection = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-collection-type\"),\n            data: [\n                { id: \"list\", text: \"List\" },\n                { id: \"paired\", text: \"Paired\" },\n                { id: \"list:paired\", text: \"List of Pairs\" }\n            ],\n            value: \"list\",\n            onchange: function(collectionType) {\n                self.updateCollectionType(collectionType);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", e => {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", model => {\n            self._eventRemove(model);\n        });\n        this._updateScreen();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file,\n            extension: this.select_extension.value(),\n            genome: this.select_genome.value()\n        });\n        this.collection.add(new_model);\n        var upload_row = new UploadRow(this, { model: new_model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this._updateScreen();\n        upload_row.render();\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        // var hdaId = message[\"outputs\"][0][\"id\"];\n        var hids = _.pluck(message[\"outputs\"], \"hid\");\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\", hids: hids });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this._updateScreen();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this._updateScreen();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(model => {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this._updateScreen();\n    },\n\n    _eventBuild: function() {\n        var allHids = [];\n        _.forEach(this.collection.models, upload => {\n            allHids.push.apply(allHids, upload.get(\"hids\"));\n        });\n        var models = _.map(allHids, hid => Galaxy.currHistoryPanel.collection.getByHid(hid));\n        var selection = new Galaxy.currHistoryPanel.collection.constructor(models);\n        // I'm building the selection wrong because I need to set this historyId directly.\n        selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n        Galaxy.currHistoryPanel.buildCollection(this.collectionType, selection, true);\n        this.counter.running = 0;\n        this._updateScreen();\n        this._eventReset();\n        this.app.modal.hide();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        this.collection.each(model => {\n            if (model.get(\"status\") == \"init\") {\n                model.set(\"status\", \"queued\");\n                self.upload_size += model.get(\"file_size\");\n            }\n        });\n        this.ui_button.model.set({ percentage: 0, status: \"success\" });\n        this.counter.running = this.counter.announce;\n        this.history_id = this.app.currentHistory();\n        this.uploadbox.start();\n        this._updateScreen();\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this._updateScreen();\n        }\n    },\n\n    /** Update extension for all models */\n    updateExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension || !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function(collectionType) {\n        var self = this;\n        this.collectionType = collectionType;\n    },\n\n    /** Update genome for all models */\n    updateGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome || !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Set screen */\n    _updateScreen: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = `You added ${\n                    this.counter.announce\n                } file(s) to the queue. Add more files or click 'Start' to proceed.`;\n            } else {\n                message = `Please wait...${this.counter.announce} out of ${this.counter.running} remaining.`;\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n        var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n        var enable_build =\n            this.counter.running == 0 &&\n            this.counter.announce == 0 &&\n            this.counter.success > 0 &&\n            this.counter.error == 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n            '<span class=\"upload-footer-collection-type\"/>' +\n            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/collection/collection-view.js","/** Renders the collection uploader rows */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title-extended\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: \"Upload configuration\",\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // handle click event\n        this.$symbol.on(\"click\", () => {\n            self._removeRow();\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", e => {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", () => {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", () => {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", () => {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_size\", () => {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", () => {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", () => {\n            self.remove();\n        });\n    },\n\n    render: function() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(Utils.bytesToString(options.file_size));\n        this.$mode\n            .removeClass()\n            .addClass(\"upload-mode\")\n            .addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text\n                .css({\n                    width: `${this.$el.width() - 16}px`,\n                    top: `${this.$el.height() - 8}px`\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(`<strong>Failed: </strong>${info}`).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: `${percentage}%` });\n        this.$percentage.html(percentage != 100 ? `${percentage}%` : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$symbol\n            .removeClass()\n            .addClass(\"upload-symbol\")\n            .addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function() {\n        this.$size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function() {\n        if ([\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !== -1) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function(options) {\n        return `<tr id=\"upload-row-${\n            options.id\n        }\" class=\"upload-row\"><td><div class=\"upload-text-column\"><div class=\"upload-mode\"/><div class=\"upload-title-extended\"/><div class=\"upload-text\"><div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div><textarea class=\"upload-text-content form-control\"/></div></div></td><td><div class=\"upload-size\"/></td><td><div class=\"upload-info\"><div class=\"upload-info-text\"/><div class=\"upload-info-progress progress\"><div class=\"upload-progress-bar progress-bar progress-bar-success\"/><div class=\"upload-percentage\">0%</div></div></div></td><td><div class=\"upload-symbol ${\n            this.status_classes.init\n        }\"/></td></tr>`;\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/upload/collection/collection-row.js","import Ui from \"mvc/ui/ui-misc\";\nimport historyOptionsMenu from \"mvc/history/options-menu\";\nimport CurrentHistoryView from \"mvc/history/history-view-edit-current\";\nimport _l from \"utils/localization\";\n\n/** the right hand panel in the analysis page that shows the current history */\nvar HistoryPanel = Backbone.View.extend({\n    initialize: function(page, options) {\n        var self = this;\n        this.userIsAnonymous = Galaxy.user.isAnonymous();\n        this.allow_user_dataset_purge = options.config.allow_user_dataset_purge;\n        this.root = options.root;\n\n        // view of the current history\n        this.historyView = new CurrentHistoryView.CurrentHistoryView({\n            className: `${CurrentHistoryView.CurrentHistoryView.prototype.className} middle`,\n            purgeAllowed: this.allow_user_dataset_purge,\n            linkTarget: \"galaxy_main\"\n        });\n\n        // add history panel to Galaxy object\n        Galaxy.currHistoryPanel = this.historyView;\n        Galaxy.currHistoryPanel.listenToGalaxy(Galaxy);\n\n        // build buttons\n        this.buttonRefresh = new Ui.ButtonLink({\n            id: \"history-refresh-button\",\n            title: \"Refresh history\",\n            cls: \"panel-header-button\",\n            icon: \"fa fa-refresh\",\n            onclick: function() {\n                self.historyView.loadCurrentHistory();\n            }\n        });\n        this.buttonOptions = new Ui.ButtonLink({\n            id: \"history-options-button\",\n            title: \"History options\",\n            cls: \"panel-header-button\",\n            target: \"galaxy_main\",\n            icon: \"fa fa-cog\",\n            href: `${this.root}root/history_options`\n        });\n        this.buttonViewMulti = new Ui.ButtonLink({\n            id: \"history-view-multi-button\",\n            title: \"View all histories\",\n            cls: \"panel-header-button\",\n            icon: \"fa fa-columns\",\n            href: `${this.root}history/view_multiple`\n        });\n\n        // define components\n        this.model = new Backbone.Model({\n            cls: \"history-right-panel\",\n            title: _l(\"History\"),\n            buttons: [this.buttonRefresh, this.buttonOptions, this.buttonViewMulti]\n        });\n\n        // build body template and connect history view\n        this.setElement(this._template());\n        this.historyView.setElement(this.$el);\n        this.historyView.connectToQuotaMeter(Galaxy.quotaMeter);\n        this.historyView.loadCurrentHistory();\n\n        // fetch to update the quota meter adding 'current' for any anon-user's id\n        Galaxy.listenTo(this.historyView, \"history-size-change\", () => {\n            Galaxy.user.fetch({\n                url: `${Galaxy.user.urlRoot()}/${Galaxy.user.id || \"current\"}`\n            });\n        });\n    },\n\n    render: function() {\n        this.optionsMenu = historyOptionsMenu(this.buttonOptions.$el, {\n            anonymous: this.userIsAnonymous,\n            purgeAllowed: this.allow_user_dataset_purge,\n            root: this.root\n        });\n        this.buttonViewMulti.$el[!this.userIsAnonymous ? \"show\" : \"hide\"]();\n    },\n\n    /** add history view div */\n    _template: function(data) {\n        return ['<div id=\"current-history-panel\" class=\"history-panel middle\"/>'].join(\"\");\n    },\n\n    toString: function() {\n        return \"historyPanel\";\n    }\n});\n\nexport default HistoryPanel;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/apps/panels/history-panel.js","import PopupMenu from \"mvc/ui/popup-menu\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport Webhooks from \"mvc/webhooks\";\n\n// ============================================================================\nvar menu = [\n    {\n        html: _l(\"History Lists\"),\n        header: true\n    },\n    {\n        html: _l(\"Saved Histories\"),\n        href: \"histories/list\",\n        target: \"_top\"\n    },\n    {\n        html: _l(\"Histories Shared with Me\"),\n        href: \"histories/list_shared\",\n        target: \"_top\"\n    },\n    {\n        html: _l(\"Current History\"),\n        header: true,\n        anon: true\n    },\n    {\n        html: _l(\"Create New\"),\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel) {\n                Galaxy.currHistoryPanel.createNewHistory();\n            }\n        }\n    },\n    {\n        html: _l(\"Copy History\"),\n        func: function() {\n            historyCopyDialog(Galaxy.currHistoryPanel.model).done(() => {\n                Galaxy.currHistoryPanel.loadCurrentHistory();\n            });\n        }\n    },\n    {\n        html: _l(\"Share or Publish\"),\n        href: \"history/sharing\"\n    },\n    {\n        html: _l(\"Show Structure\"),\n        href: \"history/display_structured\",\n        anon: true\n    },\n    {\n        html: _l(\"Extract Workflow\"),\n        href: \"workflow/build_from_current_history\"\n    },\n    {\n        html: _l(\"Delete\"),\n        anon: true,\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel && confirm(_l(\"Really delete the current history?\"))) {\n                Galaxy.currHistoryPanel.model._delete().done(() => {\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n            }\n        }\n    },\n    {\n        html: _l(\"Delete Permanently\"),\n        purge: true,\n        anon: true,\n        func: function() {\n            if (\n                Galaxy &&\n                Galaxy.currHistoryPanel &&\n                confirm(_l(\"Really delete the current history permanently? This cannot be undone.\"))\n            ) {\n                Galaxy.currHistoryPanel.model.purge().done(() => {\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n            }\n        }\n    },\n\n    {\n        html: _l(\"Dataset Actions\"),\n        header: true,\n        anon: true\n    },\n    {\n        html: _l(\"Copy Datasets\"),\n        href: \"dataset/copy_datasets\"\n    },\n    {\n        html: _l(\"Dataset Security\"),\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel && Galaxy.router) {\n                Galaxy.router.push(`/histories/permissions?id=${Galaxy.currHistoryPanel.model.id}`);\n            }\n        }\n    },\n    {\n        html: _l(\"Resume Paused Jobs\"),\n        href: \"history/resume_paused_jobs?current=True\",\n        anon: true\n    },\n    {\n        html: _l(\"Collapse Expanded Datasets\"),\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel) {\n                Galaxy.currHistoryPanel.collapseAll();\n            }\n        }\n    },\n    {\n        html: _l(\"Unhide Hidden Datasets\"),\n        anon: true,\n        func: function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if (Galaxy && Galaxy.currHistoryPanel && confirm(_l(\"Really unhide all hidden datasets?\"))) {\n                $.post(`${Galaxy.root}history/adjust_hidden`, { user_action: \"unhide\" }, () => {\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n            }\n        }\n    },\n    {\n        html: _l(\"Delete Hidden Datasets\"),\n        anon: true,\n        func: function() {\n            // TODO: Deprecate this functionality and replace with group dataset selector and action combination\n            if (Galaxy && Galaxy.currHistoryPanel && confirm(_l(\"Really delete all hidden datasets?\"))) {\n                $.post(`${Galaxy.root}history/adjust_hidden`, { user_action: \"delete\" }, () => {\n                    Galaxy.currHistoryPanel.loadCurrentHistory();\n                });\n            }\n        }\n    },\n    {\n        html: _l(\"Purge Deleted Datasets\"),\n        confirm: _l(\"Really delete all deleted datasets permanently? This cannot be undone.\"),\n        href: \"history/purge_deleted_datasets\",\n        purge: true,\n        anon: true\n    },\n\n    {\n        html: _l(\"Downloads\"),\n        header: true\n    },\n    {\n        html: _l(\"Export Tool Citations\"),\n        anon: true,\n        func: function() {\n            if (Galaxy && Galaxy.currHistoryPanel && Galaxy.router) {\n                Galaxy.router.push(`/histories/citations?id=${Galaxy.currHistoryPanel.model.id}`);\n            }\n        }\n    },\n    {\n        html: _l(\"Export History to File\"),\n        href: \"history/export_archive?preview=True\",\n        anon: true\n    },\n\n    {\n        html: _l(\"Other Actions\"),\n        header: true\n    },\n    {\n        html: _l(\"Import from File\"),\n        href: \"history/import_archive\"\n    }\n];\n\n// Webhooks\nWebhooks.add({\n    url: \"api/webhooks/history-menu/all\",\n    async: false, // (hypothetically) slows down the performance\n    callback: function(webhooks) {\n        var webhooks_menu = [];\n\n        $.each(webhooks.models, (index, model) => {\n            var webhook = model.toJSON();\n            if (webhook.activate) {\n                webhooks_menu.push({\n                    html: _l(webhook.config.title),\n                    // func: function() {},\n                    anon: true\n                });\n            }\n        });\n\n        if (webhooks_menu.length > 0) {\n            webhooks_menu.unshift({\n                html: _l(\"Webhooks\"),\n                header: true\n            });\n            $.merge(menu, webhooks_menu);\n        }\n    }\n});\n\nfunction buildMenu(isAnon, purgeAllowed, urlRoot) {\n    return _.clone(menu).filter(menuOption => {\n        if (isAnon && !menuOption.anon) {\n            return false;\n        }\n        if (!purgeAllowed && menuOption.purge) {\n            return false;\n        }\n\n        //TODO:?? hard-coded galaxy_main\n        if (menuOption.href) {\n            menuOption.href = urlRoot + menuOption.href;\n            menuOption.target = menuOption.target || \"galaxy_main\";\n        }\n\n        if (menuOption.confirm) {\n            menuOption.func = () => {\n                if (confirm(menuOption.confirm)) {\n                    galaxy_main.location = menuOption.href;\n                }\n            };\n        }\n        return true;\n    });\n}\n\nvar create = ($button, options) => {\n    options = options || {};\n    var isAnon = options.anonymous === undefined ? true : options.anonymous;\n    var purgeAllowed = options.purgeAllowed || false;\n    var menu = buildMenu(isAnon, purgeAllowed, Galaxy.root);\n    //console.debug( 'menu:', menu );\n    return new PopupMenu($button, menu);\n};\n\n// ============================================================================\nexport default create;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/options-menu.js","import HISTORY_MODEL from \"mvc/history/history-model\";\nimport HISTORY_VIEW_EDIT from \"mvc/history/history-view-edit\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n// ============================================================================\n/** session storage for history panel preferences (and to maintain state)\n */\nvar HistoryViewPrefs = BASE_MVC.SessionStorageModel.extend(\n    /** @lends HistoryViewPrefs.prototype */ {\n        defaults: {\n            /** should the tags editor be shown or hidden initially? */\n            tagsEditorShown: false,\n            /** should the annotation editor be shown or hidden initially? */\n            annotationEditorShown: false,\n            ///** what is the currently focused content (dataset or collection) in the current history?\n            // *      (the history panel will highlight and scroll to the focused content view)\n            // */\n            //focusedContentId : null\n            /** Current scroll position */\n            scrollPosition: 0\n        },\n        toString: function() {\n            return `HistoryViewPrefs(${JSON.stringify(this.toJSON())})`;\n        }\n    }\n);\n\n/** key string to store panel prefs (made accessible on class so you can access sessionStorage directly) */\nHistoryViewPrefs.storageKey = function storageKey() {\n    return \"history-panel\";\n};\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HISTORY_VIEW_EDIT.HistoryViewEdit;\n// used in root/index.mako\n/** @class View/Controller for the user's current history model as used in the history\n *      panel (current right hand panel) of the analysis page.\n *\n *  The only history panel that:\n *      will poll for updates.\n *      displays datasets in reverse hid order.\n */\nvar CurrentHistoryView = _super.extend(\n    /** @lends CurrentHistoryView.prototype */ {\n        className: `${_super.prototype.className} current-history-panel`,\n\n        /** override to use drilldown (and not foldout) for how collections are displayed */\n        HDCAViewClass: _super.prototype.HDCAViewClass.extend({\n            foldoutStyle: \"drilldown\"\n        }),\n\n        emptyMsg: [\n            _l(\"This history is empty\"),\n            \". \",\n            _l(\"You can \"),\n            '<a class=\"uploader-link\" href=\"javascript:void(0)\">',\n            _l(\"load your own data\"),\n            \"</a>\",\n            _l(\" or \"),\n            '<a class=\"get-data-link\" href=\"javascript:void(0)\">',\n            _l(\"get data from an external source\"),\n            \"</a>\"\n        ].join(\"\"),\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events */\n        initialize: function(attributes) {\n            attributes = attributes || {};\n\n            // ---- persistent preferences\n            /** maintain state / preferences over page loads */\n            this.preferences = new HistoryViewPrefs(\n                _.extend(\n                    {\n                        id: HistoryViewPrefs.storageKey()\n                    },\n                    _.pick(attributes, _.keys(HistoryViewPrefs.prototype.defaults))\n                )\n            );\n\n            _super.prototype.initialize.call(this, attributes);\n\n            /** sub-views that will overlay this panel (collections) */\n            this.panelStack = [];\n\n            /** id of currently focused content */\n            this.currentContentId = attributes.currentContentId || null;\n            //NOTE: purposely not sent to localstorage since panel recreation roughly lines up with a reset of this value\n        },\n\n        /** Override to cache the current scroll position with a listener */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n\n            var panel = this;\n            // reset scroll position when there's a new history\n            this.on(\"new-model\", () => {\n                panel.preferences.set(\"scrollPosition\", 0);\n            });\n        },\n\n        // ------------------------------------------------------------------------ loading history/item models\n        // TODO: next three more appropriate moved to the app level\n        /** (re-)loads the user's current history & contents w/ details */\n        loadCurrentHistory: function() {\n            return this.loadHistory(null, {\n                url: `${Galaxy.root}history/current_history_json`\n            });\n        },\n\n        /** loads a history & contents w/ details and makes them the current history */\n        switchToHistory: function(historyId, attributes) {\n            if (Galaxy.user.isAnonymous()) {\n                this.trigger(\"error\", _l(\"You must be logged in to switch histories\"), _l(\"Anonymous user\"));\n                return $.when();\n            }\n            return this.loadHistory(historyId, {\n                url: `${Galaxy.root}history/set_as_current?id=${historyId}`\n            });\n        },\n\n        /** creates a new history on the server and sets it as the user's current history */\n        createNewHistory: function(attributes) {\n            if (Galaxy.user.isAnonymous()) {\n                this.trigger(\"error\", _l(\"You must be logged in to create histories\"), _l(\"Anonymous user\"));\n                return $.when();\n            }\n            return this.loadHistory(null, {\n                url: `${Galaxy.root}history/create_new_current`\n            });\n        },\n\n        /** release/free/shutdown old models and set up panel for new models */\n        setModel: function(model, attributes, render) {\n            _super.prototype.setModel.call(this, model, attributes, render);\n            if (this.model && this.model.id) {\n                this.log(\"checking for updates\");\n                this.model.checkForUpdates();\n            }\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ history/content event listening\n        /** listening for history events */\n        _setUpModelListeners: function() {\n            _super.prototype._setUpModelListeners.call(this);\n            // re-broadcast any model change events so that listeners don't have to re-bind to each history\n            return this.listenTo(this.model, {\n                \"change:nice_size change:size\": function() {\n                    this.trigger(\"history-size-change\", this, this.model, arguments);\n                },\n                \"change:id\": function() {\n                    this.once(\"loading-done\", function() {\n                        this.model.checkForUpdates();\n                    });\n                }\n            });\n        },\n\n        /** listening for collection events */\n        _setUpCollectionListeners: function() {\n            _super.prototype._setUpCollectionListeners.call(this);\n            // if a hidden item is created (gen. by a workflow), moves thru the updater to the ready state,\n            //  then: remove it from the collection if the panel is set to NOT show hidden datasets\n            this.listenTo(this.collection, \"state:ready\", function(model, newState, oldState) {\n                if (!model.get(\"visible\") && !this.collection.storage.includeHidden()) {\n                    this.removeItemView(model);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ panel rendering\n        /** override to add a handler to capture the scroll position when the parent scrolls */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            // console.log( '_setUpBehaviors', this.$scrollContainer( $where ).get(0), this.$list( $where ) );\n            // we need to call this in _setUpBehaviors which is called after render since the $el\n            // may not be attached to $el.parent and $scrollContainer() may not work\n            var panel = this;\n            _super.prototype._setUpBehaviors.call(panel, $where);\n\n            // cache the handler to remove and re-add so we don't pile up the handlers\n            if (!this._debouncedScrollCaptureHandler) {\n                this._debouncedScrollCaptureHandler = _.debounce(function scrollCapture() {\n                    // cache the scroll position (only if visible)\n                    if (panel.$el.is(\":visible\")) {\n                        panel.preferences.set(\"scrollPosition\", $(this).scrollTop());\n                    }\n                }, 40);\n            }\n\n            panel\n                .$scrollContainer($where)\n                .off(\"scroll\", this._debouncedScrollCaptureHandler)\n                .on(\"scroll\", this._debouncedScrollCaptureHandler);\n            return panel;\n        },\n\n        /** In this override, handle null models and move the search input to the top */\n        _buildNewRender: function() {\n            if (!this.model) {\n                return $();\n            }\n            var $newRender = _super.prototype._buildNewRender.call(this);\n            $newRender.find(\".search\").prependTo($newRender.find(\"> .controls\"));\n            this._renderQuotaMessage($newRender);\n            return $newRender;\n        },\n\n        /** render the message displayed when a user is over quota and can't run jobs */\n        _renderQuotaMessage: function($whereTo) {\n            $whereTo = $whereTo || this.$el;\n            return $(this.templates.quotaMsg({}, this)).prependTo($whereTo.find(\".messages\"));\n        },\n\n        /** In this override, get and set current panel preferences when editor is used */\n        _renderTags: function($where) {\n            var panel = this;\n            // render tags and show/hide based on preferences\n            _super.prototype._renderTags.call(panel, $where);\n            if (panel.preferences.get(\"tagsEditorShown\")) {\n                panel.tagsEditor.toggle(true);\n            }\n            // store preference when shown or hidden\n            panel.listenTo(panel.tagsEditor, \"hiddenUntilActivated:shown hiddenUntilActivated:hidden\", tagsEditor => {\n                panel.preferences.set(\"tagsEditorShown\", tagsEditor.hidden);\n            });\n        },\n\n        /** In this override, get and set current panel preferences when editor is used */\n        _renderAnnotation: function($where) {\n            var panel = this;\n            // render annotation and show/hide based on preferences\n            _super.prototype._renderAnnotation.call(panel, $where);\n            if (panel.preferences.get(\"annotationEditorShown\")) {\n                panel.annotationEditor.toggle(true);\n            }\n            // store preference when shown or hidden\n            panel.listenTo(\n                panel.annotationEditor,\n                \"hiddenUntilActivated:shown hiddenUntilActivated:hidden\",\n                annotationEditor => {\n                    panel.preferences.set(\"annotationEditorShown\", annotationEditor.hidden);\n                }\n            );\n        },\n\n        /** Override to scroll to cached position (in prefs) after swapping */\n        _swapNewRender: function($newRender) {\n            _super.prototype._swapNewRender.call(this, $newRender);\n            var panel = this;\n            _.delay(() => {\n                var pos = panel.preferences.get(\"scrollPosition\");\n                if (pos) {\n                    panel.scrollTo(pos, 0);\n                }\n            }, 10);\n            //TODO: is this enough of a delay on larger histories?\n\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** Override to add the current-content highlight class to currentContentId's view */\n        _attachItems: function($whereTo) {\n            _super.prototype._attachItems.call(this, $whereTo);\n            var panel = this;\n            if (panel.currentContentId) {\n                panel._setCurrentContentById(panel.currentContentId);\n            }\n            return this;\n        },\n\n        /** Override to remove any drill down panels */\n        addItemView: function(model, collection, options) {\n            var view = _super.prototype.addItemView.call(this, model, collection, options);\n            if (!view) {\n                return view;\n            }\n            if (this.panelStack.length) {\n                return this._collapseDrilldownPanel();\n            }\n            return view;\n        },\n\n        // ------------------------------------------------------------------------ collection sub-views\n        /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            _super.prototype._setUpItemViewListeners.call(panel, view);\n            // use pub-sub to: handle drilldown expansion and collapse\n            return panel.listenTo(view, {\n                \"expanded:drilldown\": function(v, drilldown) {\n                    this._expandDrilldownPanel(drilldown);\n                },\n                \"collapsed:drilldown\": function(v, drilldown) {\n                    this._collapseDrilldownPanel(drilldown);\n                }\n            });\n        },\n\n        /** display 'current content': add a visible highlight and store the id of a content item */\n        setCurrentContent: function(view) {\n            this.$(\".history-content.current-content\").removeClass(\"current-content\");\n            if (view) {\n                view.$el.addClass(\"current-content\");\n                this.currentContentId = view.model.id;\n            } else {\n                this.currentContentId = null;\n            }\n        },\n\n        /** find the view with the id and then call setCurrentContent on it */\n        _setCurrentContentById: function(id) {\n            var view = this.viewFromModelId(id) || null;\n            this.setCurrentContent(view);\n        },\n\n        /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n        _expandDrilldownPanel: function(drilldown) {\n            this.panelStack.push(drilldown);\n            // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n            this.$controls()\n                .add(this.$list())\n                .hide();\n            drilldown.parentName = this.model.get(\"name\");\n            drilldown\n                .delegateEvents()\n                .render()\n                .$el.appendTo(this.$el);\n        },\n\n        /** Handle drilldown close by freeing the panel and re-rendering this panel */\n        _collapseDrilldownPanel: function(drilldown) {\n            this.panelStack.pop();\n            //TODO: MEM: free the panel\n            this.$controls()\n                .add(this.$list())\n                .show();\n        },\n\n        // ........................................................................ panel events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            // the two links in the empty message\n            \"click .uploader-link\": function(ev) {\n                Galaxy.upload.show(ev);\n            },\n            \"click .get-data-link\": function(ev) {\n                var $toolMenu = $(\".toolMenuContainer\");\n                $toolMenu.parent().scrollTop(0);\n                $toolMenu.find('span:contains(\"Get Data\")').click();\n            }\n        }),\n\n        // ........................................................................ external objects/MVC\n        listenToGalaxy: function(galaxy) {\n            this.listenTo(galaxy, {\n                // when the galaxy_main iframe is loaded with a new page,\n                // compare the url to the following list and if there's a match\n                // pull the id from url and indicate in the history view that\n                // the dataset with that id is the 'current'ly active dataset\n                \"center-frame:load\": function(data) {\n                    var pathToMatch = data.fullpath;\n                    var hdaId = null;\n                    var useToURLRegexMap = {\n                        display: /datasets\\/([a-f0-9]+)\\/display/,\n                        edit: /datasets\\/([a-f0-9]+)\\/edit/,\n                        report_error: /dataset\\/errors\\?id=([a-f0-9]+)/,\n                        rerun: /tool_runner\\/rerun\\?id=([a-f0-9]+)/,\n                        show_params: /datasets\\/([a-f0-9]+)\\/show_params/\n                        // no great way to do this here? (leave it in the dataset event handlers above?)\n                        // 'visualization' : 'visualization',\n                    };\n                    _.find(useToURLRegexMap, (regex, use) => {\n                        // grab the more specific match result (1), save, and use it as the find flag\n                        hdaId = _.result(pathToMatch.match(regex), 1);\n                        return hdaId;\n                    });\n                    // need to type mangle to go from web route to history contents\n                    this._setCurrentContentById(hdaId ? `dataset-${hdaId}` : null);\n                },\n                // when the center panel is given a new view, clear the current indicator\n                \"center-panel:load\": function(view) {\n                    this._setCurrentContentById();\n                }\n            });\n        },\n\n        //TODO: remove quota meter from panel and remove this\n        /** add listeners to an external quota meter (mvc/user/user-quotameter.js) */\n        connectToQuotaMeter: function(quotaMeter) {\n            if (!quotaMeter) {\n                return this;\n            }\n            // show/hide the 'over quota message' in the history when the meter tells it to\n            this.listenTo(quotaMeter, \"quota:over\", this.showQuotaMessage);\n            this.listenTo(quotaMeter, \"quota:under\", this.hideQuotaMessage);\n\n            // having to add this to handle re-render of hview while overquota (the above do not fire)\n            this.on(\"rendered rendered:initial\", function() {\n                if (quotaMeter && quotaMeter.isOverQuota()) {\n                    this.showQuotaMessage();\n                }\n            });\n            return this;\n        },\n\n        /** Override to preserve the quota message */\n        clearMessages: function(ev) {\n            var $target = !_.isUndefined(ev) ? $(ev.currentTarget) : this.$messages().children('[class$=\"message\"]');\n            $target = $target.not(\".quota-message\");\n            $target.fadeOut(this.fxSpeed, function() {\n                $(this).remove();\n            });\n            return this;\n        },\n\n        /** Show the over quota message (which happens to be in the history panel).\n         */\n        showQuotaMessage: function() {\n            var $msg = this.$(\".quota-message\");\n            if ($msg.is(\":hidden\")) {\n                $msg.slideDown(this.fxSpeed);\n            }\n        },\n\n        /** Hide the over quota message (which happens to be in the history panel).\n         */\n        hideQuotaMessage: function() {\n            var $msg = this.$(\".quota-message\");\n            if (!$msg.is(\":hidden\")) {\n                $msg.slideUp(this.fxSpeed);\n            }\n        },\n\n        // ........................................................................ options menu\n        //TODO: remove to batch\n        /** unhide any hidden datasets */\n        unhideHidden: function() {\n            var self = this;\n            if (confirm(_l(\"Really unhide all hidden datasets?\"))) {\n                // get all hidden, regardless of deleted/purged\n                return self.model.contents\n                    ._filterAndUpdate({ visible: false, deleted: \"\", purged: \"\" }, { visible: true })\n                    .done(() => {\n                        // TODO: would be better to render these as they're unhidden instead of all at once\n                        if (!self.model.contents.includeHidden) {\n                            self.renderItems();\n                        }\n                    });\n            }\n            return jQuery.when();\n        },\n\n        /** delete any hidden datasets */\n        deleteHidden: function() {\n            var self = this;\n            if (confirm(_l(\"Really delete all hidden datasets?\"))) {\n                return self.model.contents._filterAndUpdate(\n                    // get all hidden, regardless of deleted/purged\n                    { visible: false, deleted: \"\", purged: \"\" },\n                    // both delete *and* unhide them\n                    { deleted: true, visible: true }\n                );\n            }\n            return jQuery.when();\n        },\n\n        /** Return a string rep of the history */\n        toString: function() {\n            return `CurrentHistoryView(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nCurrentHistoryView.prototype.templates = (() => {\n    var quotaMsgTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"quota-message errormessage\">',\n            _l(\"You are over your disk quota\"),\n            \". \",\n            _l(\"Tool execution is on hold until your disk usage drops below your allocated quota\"),\n            \".\",\n            \"</div>\"\n        ],\n        \"history\"\n    );\n    return _.extend(_.clone(_super.prototype.templates), {\n        quotaMsg: quotaMsgTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    CurrentHistoryView: CurrentHistoryView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-view-edit-current.js","//ASSUMES: jquery\n//=============================================================================\n/** @class AjaxQueue\n *  Class that allows queueing functions that return jQuery promises (such\n *  as ajax calls). Each function waits for the previous to complete before\n *  being called\n *\n *  @constructor accepts a list of functions and automatically begins\n *      processing them\n */\nclass AjaxQueue {\n    constructor(initialFunctions) {\n        /** the main deferred for the entire queue - note: also sends notifications of progress */\n        this.deferred = jQuery.Deferred();\n        /** the queue array of functions */\n        this.queue = [];\n        /** cache the response from each deferred call - error or success */\n        this.responses = [];\n        /** total number of fn's to process */\n        this.numToProcess = 0;\n        /** is the queue processing/waiting for any calls to return? */\n        this.running = false;\n\n        this.init(initialFunctions || []);\n        this.start();\n    }\n\n    /** add all fns in initialFunctions (if any) to the queue */\n    init(initialFunctions) {\n        initialFunctions.forEach(fn => {\n            this.add(fn);\n        });\n    }\n\n    add(fn) {\n        var index = this.queue.length;\n        this.numToProcess += 1;\n\n        this.queue.push(() => {\n            var fnIndex = index;\n            var xhr = fn();\n            // if successful, notify using the deferred to allow tracking progress\n            xhr.done(response => {\n                this.deferred.notify({\n                    curr: fnIndex,\n                    total: this.numToProcess,\n                    response: response\n                });\n            });\n            // (regardless of previous error or success) if not last ajax call, shift and call the next\n            //  if last fn, resolve deferred\n            xhr.always(response => {\n                this.responses.push(response);\n                if (this.queue.length) {\n                    this.queue.shift()();\n                } else {\n                    this.stop();\n                }\n            });\n        });\n        return this;\n    }\n\n    start() {\n        if (this.queue.length) {\n            this.running = true;\n            this.queue.shift()();\n        }\n        return this;\n    }\n\n    /** stop the queue\n     *  @param {boolean} causeFail  cause an error/fail on the main deferred\n     *  @param {String} msg         message to send when rejecting the main deferred\n     */\n    stop(causeFail, msg) {\n        //TODO: doesn't abort current call\n        this.running = false;\n        this.queue = [];\n        if (causeFail) {\n            //TODO: spliced args instead\n            this.deferred.reject(msg);\n        } else {\n            this.deferred.resolve(this.responses);\n        }\n        this.numToProcess = 0;\n        this.deferred = jQuery.Deferred();\n        return this;\n    }\n\n    // only a handful of the deferred interface for now - possible YAGNI\n    /** implement done from the jq deferred interface */\n    done(fn) {\n        return this.deferred.done(fn);\n    }\n\n    /** implement fail from the jq deferred interface */\n    fail(fn) {\n        return this.deferred.fail(fn);\n    }\n\n    /** implement always from the jq deferred interface */\n    always(fn) {\n        return this.deferred.always(fn);\n    }\n\n    /** implement progress from the jq deferred interface */\n    progress(fn) {\n        return this.deferred.progress(fn);\n    }\n\n    /** shortcut constructor / fire and forget\n     *  @returns {Deferred} the queue's main deferred\n     */\n    static create(initialFunctions) {\n        return new AjaxQueue(initialFunctions).deferred;\n    }\n}\n\n//=============================================================================\n/** @class NamedAjaxQueue\n *  @augments AjaxQueue\n *  Allows associating a name with a deferring fn and prevents adding deferring\n *  fns if the name has already been used. Useful to prevent build up of duplicate\n *  async calls.\n *  Both the array initialFunctions sent to constructor and any added later with\n *  add() should be objects (NOT functions) of the form:\n *  { name: some unique id,\n *    fn:   the deferring fn or ajax call }\n */\nclass NamedAjaxQueue extends AjaxQueue {\n    constructor(initialFunctions) {\n        super(initialFunctions);\n        this.names = {};\n    }\n\n    /** add the obj.fn to the queue if obj.name hasn't been used before */\n    add(obj) {\n        if (!(obj.hasOwnProperty(\"name\") && obj.hasOwnProperty(\"fn\"))) {\n            throw new Error(`NamedAjaxQueue.add requires an object with both \"name\" and \"fn\": ${JSON.stringify(obj)}`);\n        }\n        if (this.names.hasOwnProperty(obj.name)) {\n            //console.warn( 'name has been used:', obj.name );\n            return;\n        }\n        this.names[obj.name] = true;\n        return super.add(obj.fn);\n    }\n\n    clear() {\n        this.names = {};\n        return this;\n    }\n\n    /** shortcut constructor / fire and forget\n     *  @returns {Deferred} the queue's main deferred\n     */\n    static create(initialFunctions) {\n        return new NamedAjaxQueue(initialFunctions).deferred;\n    }\n}\n\n//=============================================================================\nexport default {\n    AjaxQueue: AjaxQueue,\n    NamedAjaxQueue: NamedAjaxQueue\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/ajax-queue.js","import HISTORY_VIEW from \"mvc/history/history-view\";\nimport HISTORY_CONTENTS from \"mvc/history/history-contents\";\nimport STATES from \"mvc/dataset/states\";\nimport HDA_MODEL from \"mvc/history/hda-model\";\nimport HDA_LI_EDIT from \"mvc/history/hda-li-edit\";\nimport HDCA_LI_EDIT from \"mvc/history/hdca-li-edit\";\nimport TAGS from \"mvc/tag\";\nimport ANNOTATIONS from \"mvc/annotation\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport PAIR_COLLECTION_CREATOR from \"mvc/collection/pair-collection-creator\";\nimport LIST_OF_PAIRS_COLLECTION_CREATOR from \"mvc/collection/list-of-pairs-collection-creator\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport PopupMenu from \"mvc/ui/popup-menu\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/editable-text\";\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HISTORY_VIEW.HistoryView;\n// base class for history-view-edit-current and used as-is in history/view.mako\n/** @class Editable View/Controller for the history model.\n *\n *  Allows:\n *      (everything HistoryView allows)\n *      changing the name\n *      displaying and editing tags and annotations\n *      multi-selection and operations on mulitple content items\n */\nvar HistoryViewEdit = _super.extend(\n    /** @lends HistoryViewEdit.prototype */ {\n        /** class to use for constructing the HistoryDatasetAssociation views */\n        HDAViewClass: HDA_LI_EDIT.HDAListItemEdit,\n        /** class to use for constructing the HistoryDatasetCollectionAssociation views */\n        HDCAViewClass: HDCA_LI_EDIT.HDCAListItemEdit,\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n         *  @param {Object} attributes\n         */\n        initialize: function(attributes) {\n            attributes = attributes || {};\n            _super.prototype.initialize.call(this, attributes);\n\n            // ---- set up instance vars\n            /** editor for tags - sub-view */\n            this.tagsEditor = null;\n\n            /** enable drag and drop - sub-view */\n            this.dragItems = true;\n\n            /** editor for annotations - sub-view */\n            this.annotationEditor = null;\n\n            /** allow user purge of dataset files? */\n            this.purgeAllowed = attributes.purgeAllowed || false;\n\n            // states/modes the panel can be in\n            /** is the panel currently showing the dataset selection controls? */\n            this.annotationEditorShown = attributes.annotationEditorShown || false;\n            this.tagsEditorShown = attributes.tagsEditorShown || false;\n        },\n\n        /** Override to handle history as drag-drop target */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            return this.on({\n                \"droptarget:drop\": function(ev, data) {\n                    // process whatever was dropped and re-hide the drop target\n                    this.dataDropped(data);\n                    this.dropTargetOff();\n                },\n                \"view:attached view:removed\": function() {\n                    this._renderCounts();\n                },\n                \"search:loading-progress\": this._renderSearchProgress,\n                \"search:searching\": this._renderSearchFindings\n            });\n        },\n\n        // ------------------------------------------------------------------------ listeners\n        /** listening for history and HDA events */\n        _setUpModelListeners: function() {\n            _super.prototype._setUpModelListeners.call(this);\n            this.listenTo(this.model, \"change:size\", this.updateHistoryDiskSize);\n            return this;\n        },\n\n        /** listening for collection events */\n        _setUpCollectionListeners: function() {\n            _super.prototype._setUpCollectionListeners.call(this);\n            this.listenTo(this.collection, {\n                \"change:deleted\": this._handleItemDeletedChange,\n                \"change:visible\": this._handleItemVisibleChange,\n                \"change:purged\": function(model) {\n                    // hafta get the new nice-size w/o the purged model\n                    this.model.fetch();\n                },\n                // loading indicators for deleted/hidden\n                \"fetching-deleted\": function(collection) {\n                    this.$(\"> .controls .deleted-count\").html(`<i>${_l(\"loading...\")}</i>`);\n                },\n                \"fetching-hidden\": function(collection) {\n                    this.$(\"> .controls .hidden-count\").html(`<i>${_l(\"loading...\")}</i>`);\n                },\n                \"fetching-deleted-done fetching-hidden-done\": this._renderCounts\n            });\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ panel rendering\n        /** In this override, add tag and annotation editors and a btn to toggle the selectors */\n        _buildNewRender: function() {\n            // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n            var $newRender = _super.prototype._buildNewRender.call(this);\n            if (!this.model) {\n                return $newRender;\n            }\n\n            if (Galaxy && Galaxy.user && Galaxy.user.id && Galaxy.user.id === this.model.get(\"user_id\")) {\n                this._renderTags($newRender);\n                this._renderAnnotation($newRender);\n            }\n            return $newRender;\n        },\n\n        /** Update the history size display (curr. upper right of panel). */\n        updateHistoryDiskSize: function() {\n            this.$(\".history-size\").text(this.model.get(\"nice_size\"));\n        },\n\n        /** override to render counts when the items are rendered */\n        renderItems: function($whereTo) {\n            var views = _super.prototype.renderItems.call(this, $whereTo);\n            if (!this.searchFor) {\n                this._renderCounts($whereTo);\n            } else {\n                this._renderSearchFindings($whereTo);\n            }\n            return views;\n        },\n\n        /** override to show counts, what's deleted/hidden, and links to toggle those */\n        _renderCounts: function($whereTo) {\n            $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n            var html = this.templates.counts(this.model.toJSON(), this);\n            return $whereTo.find(\"> .controls .subtitle\").html(html);\n        },\n\n        /** render the tags sub-view controller */\n        _renderTags: function($where) {\n            var panel = this;\n            this.tagsEditor = new TAGS.TagsEditor({\n                model: this.model,\n                el: $where.find(\".controls .tags-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // show hide sub-view tag editors when this is shown/hidden\n                onshow: function() {\n                    panel.toggleHDATagEditors(true, panel.fxSpeed);\n                },\n                onhide: function() {\n                    panel.toggleHDATagEditors(false, panel.fxSpeed);\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit history tags\"),\n                    classes: \"history-tag-btn\",\n                    faIcon: \"fa-tags\"\n                }).appendTo($where.find(\".controls .actions\"))\n            });\n        },\n        /** render the annotation sub-view controller */\n        _renderAnnotation: function($where) {\n            var panel = this;\n            this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n                model: this.model,\n                el: $where.find(\".controls .annotation-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                // show hide sub-view view annotation editors when this is shown/hidden\n                onshow: function() {\n                    panel.toggleHDAAnnotationEditors(true, panel.fxSpeed);\n                },\n                onhide: function() {\n                    panel.toggleHDAAnnotationEditors(false, panel.fxSpeed);\n                },\n                $activator: faIconButton({\n                    title: _l(\"Edit history annotation\"),\n                    classes: \"history-annotate-btn\",\n                    faIcon: \"fa-comment\"\n                }).appendTo($where.find(\".controls .actions\"))\n            });\n        },\n\n        /** Set up HistoryViewEdit js/widget behaviours\n         *  In this override, make the name editable\n         */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            _super.prototype._setUpBehaviors.call(this, $where);\n            if (!this.model) {\n                return;\n            }\n\n            // anon users shouldn't have access to any of the following\n            if (!Galaxy.user || Galaxy.user.isAnonymous() || Galaxy.user.id !== this.model.get(\"user_id\")) {\n                return;\n            }\n\n            var panel = this;\n            var nameSelector = \"> .controls .name\";\n            $where\n                .find(nameSelector)\n                .attr(\"title\", _l(\"Click to rename history\"))\n                .tooltip({ placement: \"bottom\" })\n                .make_text_editable({\n                    on_finish: function(newName) {\n                        var previousName = panel.model.get(\"name\");\n                        if (newName && newName !== previousName) {\n                            panel.$el.find(nameSelector).text(newName);\n                            panel.model.save({ name: newName }).fail(() => {\n                                panel.$el.find(nameSelector).text(panel.model.previous(\"name\"));\n                            });\n                        } else {\n                            panel.$el.find(nameSelector).text(previousName);\n                        }\n                    }\n                });\n        },\n\n        /** return a new popup menu for choosing a multi selection action\n         *  ajax calls made for multiple datasets are queued\n         */\n        multiselectActions: function() {\n            var panel = this;\n\n            var actions = [\n                {\n                    html: _l(\"Hide datasets\"),\n                    func: function() {\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.hide;\n                        panel.getSelectedModels().ajaxQueue(action);\n                    }\n                },\n                {\n                    html: _l(\"Unhide datasets\"),\n                    func: function() {\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.unhide;\n                        panel.getSelectedModels().ajaxQueue(action);\n                    }\n                },\n                {\n                    html: _l(\"Delete datasets\"),\n                    func: function() {\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype[\"delete\"];\n                        panel.getSelectedModels().ajaxQueue(action);\n                    }\n                },\n                {\n                    html: _l(\"Undelete datasets\"),\n                    func: function() {\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.undelete;\n                        panel.getSelectedModels().ajaxQueue(action);\n                    }\n                }\n            ];\n\n            if (panel.purgeAllowed) {\n                actions.push({\n                    html: _l(\"Permanently delete datasets\"),\n                    func: function() {\n                        if (confirm(_l(\"This will permanently remove the data in your datasets. Are you sure?\"))) {\n                            var action = HDA_MODEL.HistoryDatasetAssociation.prototype.purge;\n                            panel.getSelectedModels().ajaxQueue(action);\n                        }\n                    }\n                });\n            }\n            actions = actions.concat(panel._collectionActions());\n            return actions;\n        },\n\n        /**   */\n        _collectionActions: function() {\n            var panel = this;\n            return [\n                {\n                    html: _l(\"Build Dataset List\"),\n                    func: function() {\n                        panel.buildCollection(\"list\");\n                    }\n                },\n                // TODO: Only show quick pair if two things selected.\n                {\n                    html: _l(\"Build Dataset Pair\"),\n                    func: function() {\n                        panel.buildCollection(\"paired\");\n                    }\n                },\n                {\n                    html: _l(\"Build List of Dataset Pairs\"),\n                    func: function() {\n                        panel.buildCollection(\"list:paired\");\n                    }\n                }\n            ];\n        },\n\n        buildCollection: function(collectionType, selection, hideSourceItems) {\n            var panel = this;\n            var selection = selection || panel.getSelectedModels();\n            var hideSourceItems = hideSourceItems || false;\n            var createFunc;\n            if (collectionType == \"list\") {\n                createFunc = LIST_COLLECTION_CREATOR.createListCollection;\n            } else if (collectionType == \"paired\") {\n                createFunc = PAIR_COLLECTION_CREATOR.createPairCollection;\n            } else if (collectionType == \"list:paired\") {\n                createFunc = LIST_OF_PAIRS_COLLECTION_CREATOR.createListOfPairsCollection;\n            } else {\n                console.warn(`Unknown collectionType encountered ${collectionType}`);\n            }\n            createFunc(selection, hideSourceItems).done(() => {\n                panel.model.refresh();\n            });\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** In this override, add purgeAllowed and whether tags/annotation editors should be shown */\n        _getItemViewOptions: function(model) {\n            var options = _super.prototype._getItemViewOptions.call(this, model);\n            _.extend(options, {\n                purgeAllowed: this.purgeAllowed,\n                tagsEditorShown: this.tagsEditor && !this.tagsEditor.hidden,\n                annotationEditorShown: this.annotationEditor && !this.annotationEditor.hidden\n            });\n            return options;\n        },\n\n        /** If this item is deleted and we're not showing deleted items, remove the view\n         *  @param {Model} the item model to check\n         */\n        _handleItemDeletedChange: function(itemModel) {\n            if (itemModel.get(\"deleted\")) {\n                this._handleItemDeletion(itemModel);\n            } else {\n                this._handleItemUndeletion(itemModel);\n            }\n            this._renderCounts();\n        },\n\n        _handleItemDeletion: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.deleted += 1;\n            contentsShown.active -= 1;\n            if (!this.model.contents.includeDeleted) {\n                this.removeItemView(itemModel);\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        _handleItemUndeletion: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.deleted -= 1;\n            if (!this.model.contents.includeDeleted) {\n                contentsShown.active -= 1;\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        /** If this item is hidden and we're not showing hidden items, remove the view\n         *  @param {Model} the item model to check\n         */\n        _handleItemVisibleChange: function(itemModel) {\n            if (itemModel.hidden()) {\n                this._handleItemHidden(itemModel);\n            } else {\n                this._handleItemUnhidden(itemModel);\n            }\n            this._renderCounts();\n        },\n\n        _handleItemHidden: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.hidden += 1;\n            contentsShown.active -= 1;\n            if (!this.model.contents.includeHidden) {\n                this.removeItemView(itemModel);\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        _handleItemUnhidden: function(itemModel) {\n            var contentsShown = this.model.get(\"contents_active\");\n            contentsShown.hidden -= 1;\n            if (!this.model.contents.includeHidden) {\n                contentsShown.active -= 1;\n            }\n            this.model.set(\"contents_active\", contentsShown);\n        },\n\n        /** toggle the visibility of each content's tagsEditor applying all the args sent to this function */\n        toggleHDATagEditors: function(showOrHide, speed) {\n            _.each(this.views, view => {\n                if (view.tagsEditor) {\n                    view.tagsEditor.toggle(showOrHide, speed);\n                }\n            });\n        },\n\n        /** toggle the visibility of each content's annotationEditor applying all the args sent to this function */\n        toggleHDAAnnotationEditors: function(showOrHide, speed) {\n            _.each(this.views, view => {\n                if (view.annotationEditor) {\n                    view.annotationEditor.toggle(showOrHide, speed);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .show-selectors-btn\": \"toggleSelectors\",\n            \"click .toggle-deleted-link\": function(ev) {\n                this.toggleShowDeleted();\n            },\n            \"click .toggle-hidden-link\": function(ev) {\n                this.toggleShowHidden();\n            }\n        }),\n\n        // ------------------------------------------------------------------------ search\n        _renderSearchProgress: function(limit, offset) {\n            var stop = limit + offset;\n            return this.$(\"> .controls .subtitle\").html(\n                [\"<i>\", _l(\"Searching \"), stop, \"/\", this.model.contentsShown(), \"</i>\"].join(\"\")\n            );\n        },\n\n        /** override to display number found in subtitle */\n        _renderSearchFindings: function($whereTo) {\n            $whereTo = $whereTo instanceof jQuery ? $whereTo : this.$el;\n            var html = this.templates.found(this.model.toJSON(), this);\n            $whereTo.find(\"> .controls .subtitle\").html(html);\n            return this;\n        },\n\n        // ------------------------------------------------------------------------ as drop target\n        /** turn all the drag and drop handlers on and add some help text above the drop area */\n        dropTargetOn: function() {\n            if (this.dropTarget) {\n                return this;\n            }\n            this.dropTarget = true;\n\n            //TODO: to init\n            var dropHandlers = {\n                dragenter: _.bind(this.dragenter, this),\n                dragover: _.bind(this.dragover, this),\n                dragleave: _.bind(this.dragleave, this),\n                drop: _.bind(this.drop, this)\n            };\n\n            var $dropTarget = this._renderDropTarget();\n            this.$list().before([this._renderDropTargetHelp(), $dropTarget]);\n            for (var evName in dropHandlers) {\n                if (dropHandlers.hasOwnProperty(evName)) {\n                    //console.debug( evName, dropHandlers[ evName ] );\n                    $dropTarget.on(evName, dropHandlers[evName]);\n                }\n            }\n            return this;\n        },\n\n        /** render a box to serve as a 'drop here' area on the history */\n        _renderDropTarget: function() {\n            this.$(\".history-drop-target\").remove();\n            return $(\"<div/>\").addClass(\"history-drop-target\");\n        },\n\n        /** tell the user how it works  */\n        _renderDropTargetHelp: function() {\n            this.$(\".history-drop-target-help\").remove();\n            return $(\"<div/>\")\n                .addClass(\"history-drop-target-help\")\n                .text(_l(\"Drag datasets here to copy them to the current history\"));\n        },\n\n        /** shut down drag and drop event handlers and remove drop target */\n        dropTargetOff: function() {\n            if (!this.dropTarget) {\n                return this;\n            }\n            //this.log( 'dropTargetOff' );\n            this.dropTarget = false;\n            var dropTarget = this.$(\".history-drop-target\").get(0);\n            for (var evName in this._dropHandlers) {\n                if (this._dropHandlers.hasOwnProperty(evName)) {\n                    dropTarget.off(evName, this._dropHandlers[evName]);\n                }\n            }\n            this.$(\".history-drop-target\").remove();\n            this.$(\".history-drop-target-help\").remove();\n            return this;\n        },\n        /** toggle the target on/off */\n        dropTargetToggle: function() {\n            if (this.dropTarget) {\n                this.dropTargetOff();\n            } else {\n                this.dropTargetOn();\n            }\n            return this;\n        },\n\n        dragenter: function(ev) {\n            //console.debug( 'dragenter:', this, ev );\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.$(\".history-drop-target\").css(\"border\", \"2px solid black\");\n        },\n        dragover: function(ev) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        },\n        dragleave: function(ev) {\n            //console.debug( 'dragleave:', this, ev );\n            ev.preventDefault();\n            ev.stopPropagation();\n            this.$(\".history-drop-target\").css(\"border\", \"1px dashed black\");\n        },\n        /** when (text) is dropped try to parse as json and trigger an event */\n        drop: function(ev) {\n            ev.preventDefault();\n            //ev.stopPropagation();\n\n            var self = this;\n            var dataTransfer = ev.originalEvent.dataTransfer;\n            var data = dataTransfer.getData(\"text\");\n\n            dataTransfer.dropEffect = \"move\";\n            try {\n                data = JSON.parse(data);\n            } catch (err) {\n                self.warn(\"error parsing JSON from drop:\", data);\n            }\n\n            self.trigger(\"droptarget:drop\", ev, data, self);\n            return false;\n        },\n\n        /** handler that copies data into the contents */\n        dataDropped: function(data) {\n            var self = this;\n            // HDA: dropping will copy it to the history\n            if (_.isObject(data) && data.model_class === \"HistoryDatasetAssociation\" && data.id) {\n                if (self.contents.currentPage !== 0) {\n                    return self.contents.fetchPage(0).then(() => self.model.contents.copy(data.id));\n                }\n                return self.model.contents.copy(data.id);\n            }\n            return jQuery.when();\n        },\n\n        // ........................................................................ misc\n        /** Return a string rep of the history */\n        toString: function() {\n            return `HistoryViewEdit(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryViewEdit.prototype.templates = (() => {\n    var countsTemplate = BASE_MVC.wrapTemplate(\n        [\n            \"<% var shown = Math.max( view.views.length, history.contents_active.active ) %>\",\n            \"<% if( shown ){ %>\",\n            '<span class=\"shown-count\">',\n            \"<%- shown %> \",\n            _l(\"shown\"),\n            \"</span>\",\n            \"<% } %>\",\n\n            \"<% if( history.contents_active.deleted ){ %>\",\n            '<span class=\"deleted-count\">',\n            \"<% if( view.model.contents.includeDeleted ){ %>\",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"hide deleted\"),\n            \"</a>\",\n            \"<% } else { %>\",\n            \"<%- history.contents_active.deleted %> \",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"deleted\"),\n            \"</a>\",\n            \"<% } %>\",\n            \"</span>\",\n            \"<% } %>\",\n\n            \"<% if( history.contents_active.hidden ){ %>\",\n            '<span class=\"hidden-count\">',\n            \"<% if( view.model.contents.includeHidden ){ %>\",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"hide hidden\"),\n            \"</a>\",\n            \"<% } else { %>\",\n            \"<%- history.contents_active.hidden %> \",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"hidden\"),\n            \"</a>\",\n            \"<% } %>\",\n            \"</span>\",\n            \"<% } %>\"\n        ],\n        \"history\"\n    );\n\n    var foundTemplate = BASE_MVC.wrapTemplate(\n        [\n            _l(\"Found\"),\n            \" <%- view.views.length %>, \",\n\n            \"<% if( history.contents_active.deleted ){ %>\",\n            \"<% if( view.model.contents.includeDeleted ){ %>\",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"hide deleted\"),\n            \"</a>, \",\n            \"<% } else { %>\",\n            '<a class=\"toggle-deleted-link\" href=\"javascript:void(0);\">',\n            _l(\"show deleted\"),\n            \"</a>, \",\n            \"<% } %>\",\n            \"<% } %>\",\n\n            \"<% if( history.contents_active.hidden ){ %>\",\n            \"<% if( view.model.contents.includeHidden ){ %>\",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"hide hidden\"),\n            \"</a>\",\n            \"<% } else { %>\",\n            '<a class=\"toggle-hidden-link\" href=\"javascript:void(0);\">',\n            _l(\"show hidden\"),\n            \"</a>\",\n            \"<% } %>\",\n            \"<% } %>\"\n        ],\n        \"history\"\n    );\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        counts: countsTemplate,\n        found: foundTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HistoryViewEdit: HistoryViewEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-view-edit.js","import LIST_VIEW from \"mvc/list/list-view\";\nimport HISTORY_MODEL from \"mvc/history/history-model\";\nimport HISTORY_CONTENTS from \"mvc/history/history-contents\";\nimport HISTORY_PREFS from \"mvc/history/history-preferences\";\nimport HDA_LI from \"mvc/history/hda-li\";\nimport HDCA_LI from \"mvc/history/hdca-li\";\nimport USER from \"mvc/user/user-model\";\nimport ERROR_MODAL from \"mvc/ui/error-modal\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/search-input\";\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class  non-editable, read-only View/Controller for a history model.\n *  Allows:\n *      changing the loaded history\n *      displaying data, info, and download\n *      tracking history attrs: size, tags, annotations, name, etc.\n *  Does not allow:\n *      changing the name\n */\nvar _super = LIST_VIEW.ModelListPanel;\nvar HistoryView = _super.extend(\n    /** @lends HistoryView.prototype */ {\n        _logNamespace: \"history\",\n\n        /** class to use for constructing the HDA views */\n        HDAViewClass: HDA_LI.HDAListItemView,\n        /** class to use for constructing the HDCA views */\n        HDCAViewClass: HDCA_LI.HDCAListItemView,\n        /** class to used for constructing collection of sub-view models */\n        collectionClass: HISTORY_CONTENTS.HistoryContents,\n        /** key of attribute in model to assign to this.collection */\n        modelCollectionKey: \"contents\",\n\n        tagName: \"div\",\n        className: `${_super.prototype.className} history-panel`,\n\n        /** string to display when the collection is empty */\n        emptyMsg: _l(\"This history is empty\"),\n        /** displayed when no items match the search terms */\n        noneFoundMsg: _l(\"No matching datasets found\"),\n        /** string used for search placeholder */\n        searchPlaceholder: _l(\"search datasets\"),\n\n        /** @type {Number} ms to wait after history load to fetch/decorate hdcas with element_count */\n        FETCH_COLLECTION_COUNTS_DELAY: 2000,\n\n        // ......................................................................... SET UP\n        /** Set up the view, bind listeners.\n         *  @param {Object} attributes optional settings for the panel\n         */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n            // ---- instance vars\n            // control contents/behavior based on where (and in what context) the panel is being used\n            /** where should pages from links be displayed? (default to new tab/window) */\n            this.linkTarget = attributes.linkTarget || \"_blank\";\n\n            /** timeout id for detailed fetch of collection counts, etc... */\n            this.detailedFetchTimeoutId = null;\n        },\n\n        /** create and return a collection for when none is initially passed */\n        _createDefaultCollection: function() {\n            // override\n            return new this.collectionClass([], {\n                history: this.model\n            });\n        },\n\n        /** In this override, clear the update timer on the model */\n        freeModel: function() {\n            _super.prototype.freeModel.call(this);\n            if (this.model) {\n                this.model.clearUpdateTimeout();\n            }\n            this._clearDetailedFetchTimeout();\n            return this;\n        },\n\n        /** clear the timeout and the cached timeout id */\n        _clearDetailedFetchTimeout: function() {\n            if (this.detailedFetchTimeoutId) {\n                clearTimeout(this.detailedFetchTimeoutId);\n                this.detailedFetchTimeoutId = null;\n            }\n        },\n\n        /** create any event listeners for the panel\n         *  @fires: rendered:initial    on the first render\n         *  @fires: empty-history       when switching to a history with no contents or creating a new history\n         */\n        _setUpListeners: function() {\n            _super.prototype._setUpListeners.call(this);\n            this.on({\n                error: function(model, xhr, options, msg, details) {\n                    this.errorHandler(model, xhr, options, msg, details);\n                },\n                \"loading-done\": function() {\n                    var self = this;\n                    // after the initial load, decorate with more time consuming fields (like HDCA element_counts)\n                    self.detailedFetchTimeoutId = _.delay(() => {\n                        self.detailedFetchTimeoutId = null;\n                        self.model.contents.fetchCollectionCounts();\n                    }, self.FETCH_COLLECTION_COUNTS_DELAY);\n                },\n                \"views:ready view:attached view:removed\": function(view) {\n                    this._renderSelectButton();\n                },\n                \"view:attached\": function(view) {\n                    this.scrollTo(0);\n                }\n            });\n            // this.on( 'all', function(){ console.debug( arguments ); });\n        },\n\n        // ------------------------------------------------------------------------ loading history/hda models\n        /** load the history with the given id then it's contents, sending ajax options to both */\n        loadHistory: function(historyId, options, contentsOptions) {\n            contentsOptions = _.extend(contentsOptions || { silent: true });\n            this.info(\"loadHistory:\", historyId, options, contentsOptions);\n            var self = this;\n            self.setModel(new HISTORY_MODEL.History({ id: historyId }));\n\n            contentsOptions.silent = true;\n            self.trigger(\"loading\");\n            return self.model.fetchWithContents(options, contentsOptions).always(() => {\n                self.render();\n                self.trigger(\"loading-done\");\n            });\n        },\n\n        /** convenience alias to the model. Updates the item list only (not the history) */\n        refreshContents: function(options) {\n            if (this.model) {\n                return this.model.refresh(options);\n            }\n            // may have callbacks - so return an empty promise\n            return $.when();\n        },\n\n        /** Override to reset web storage when the id changes (since it needs the id) */\n        _setUpCollectionListeners: function() {\n            _super.prototype._setUpCollectionListeners.call(this);\n            return this.listenTo(this.collection, {\n                // 'all' : function(){ console.log( this.collection + ':', arguments ); },\n                \"fetching-more\": function() {\n                    this._toggleContentsLoadingIndicator(true);\n                    this.$emptyMessage().hide();\n                },\n                \"fetching-more-done\": function() {\n                    this._toggleContentsLoadingIndicator(false);\n                }\n            });\n        },\n\n        // ------------------------------------------------------------------------ panel rendering\n        /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n        _showLoadingIndicator: function(msg, speed, callback) {\n            var $indicator = $('<div class=\"loading-indicator\"/>');\n            this.$el.html($indicator.text(msg).slideDown(!_.isUndefined(speed) ? speed : this.fxSpeed));\n        },\n\n        /** hide the loading indicator */\n        _hideLoadingIndicator: function(speed) {\n            // make speed a bit slower to compensate for slow rendering of up to 500 contents\n            this.$(\".loading-indicator\").slideUp(!_.isUndefined(speed) ? speed : this.fxSpeed + 200, function() {\n                $(this).remove();\n            });\n        },\n\n        /** In this override, add a btn to toggle the selectors */\n        _buildNewRender: function() {\n            var $newRender = _super.prototype._buildNewRender.call(this);\n            this._renderSelectButton($newRender);\n            return $newRender;\n        },\n\n        /** button for starting select mode */\n        _renderSelectButton: function($where) {\n            $where = $where || this.$el;\n            // do not render selector option if no actions\n            if (!this.multiselectActions().length) {\n                return null;\n            }\n            // do not render (and remove even) if nothing to select\n            if (!this.views.length) {\n                this.hideSelectors();\n                $where.find(\".controls .actions .show-selectors-btn\").remove();\n                return null;\n            }\n            // don't bother rendering if there's one already\n            var $existing = $where.find(\".controls .actions .show-selectors-btn\");\n            if ($existing.length) {\n                return $existing;\n            }\n\n            return faIconButton({\n                title: _l(\"Operations on multiple datasets\"),\n                classes: \"show-selectors-btn\",\n                faIcon: \"fa-check-square-o\"\n            }).prependTo($where.find(\".controls .actions\"));\n        },\n\n        /** override to avoid showing intial empty message using contents_active */\n        _renderEmptyMessage: function($whereTo) {\n            var self = this;\n            var $emptyMsg = self.$emptyMessage($whereTo);\n\n            var empty = self.model.get(\"contents_active\").active <= 0;\n            if (empty) {\n                return $emptyMsg\n                    .empty()\n                    .append(self.emptyMsg)\n                    .show();\n            } else if (self.searchFor && self.model.contents.haveSearchDetails() && !self.views.length) {\n                return $emptyMsg\n                    .empty()\n                    .append(self.noneFoundMsg)\n                    .show();\n            }\n            $emptyMsg.hide();\n            return $();\n        },\n\n        /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n        $scrollContainer: function($where) {\n            // override or set via attributes.$scrollContainer\n            return this.$list($where);\n        },\n\n        // ------------------------------------------------------------------------ subviews\n        _toggleContentsLoadingIndicator: function(show) {\n            if (!show) {\n                this.$list()\n                    .find(\".contents-loading-indicator\")\n                    .remove();\n            } else {\n                this.$list().html(\n                    '<div class=\"contents-loading-indicator\">' + '<span class=\"fa fa-2x fa-spinner fa-spin\"/></div>'\n                );\n            }\n        },\n\n        /** override to render pagination also */\n        renderItems: function($whereTo) {\n            // console.log( this + '.renderItems-----------------', new Date() );\n            $whereTo = $whereTo || this.$el;\n            var self = this;\n            var $list = self.$list($whereTo);\n\n            // TODO: bootstrap hack to remove orphaned tooltips\n            $(\".tooltip\").remove();\n\n            $list.empty();\n            self.views = [];\n\n            var models = self._filterCollection();\n            if (models.length) {\n                self._renderPagination($whereTo);\n                self.views = self._renderSomeItems(models, $list);\n            } else {\n                // TODO: consolidate with _renderPagination above by (???) passing in models/length?\n                $whereTo.find(\"> .controls .list-pagination\").empty();\n            }\n            self._renderEmptyMessage($whereTo).toggle(!models.length);\n\n            self.trigger(\"views:ready\", self.views);\n            return self.views;\n        },\n\n        /** render pagination controls if not searching and contents says we're paginating */\n        _renderPagination: function($whereTo) {\n            var $paginationControls = $whereTo.find(\"> .controls .list-pagination\");\n            if (this.searchFor || !this.model.contents.shouldPaginate()) return $paginationControls.empty();\n\n            $paginationControls.html(\n                this.templates.pagination(\n                    {\n                        // pagination is 1-based for the user\n                        current: this.model.contents.currentPage + 1,\n                        last: this.model.contents.getLastPage() + 1\n                    },\n                    this\n                )\n            );\n            $paginationControls.find(\"select.pages\").tooltip();\n            return $paginationControls;\n        },\n\n        /** render a subset of the entire collection (client-side pagination) */\n        _renderSomeItems: function(models, $list) {\n            var self = this;\n            var views = [];\n            $list.append(\n                models.map(m => {\n                    var view = self._createItemView(m);\n                    views.push(view);\n                    return self._renderItemView$el(view);\n                })\n            );\n            return views;\n        },\n\n        // ------------------------------------------------------------------------ sub-views\n        /** in this override, check if the contents would also display based on includeDeleted/hidden */\n        _filterItem: function(model) {\n            var self = this;\n            var contents = self.model.contents;\n            return (\n                (contents.includeHidden || !model.hidden()) &&\n                (contents.includeDeleted || !model.isDeletedOrPurged()) &&\n                _super.prototype._filterItem.call(self, model)\n            );\n        },\n\n        /** In this override, since history contents are mixed,\n         *      get the appropo view class based on history_content_type\n         */\n        _getItemViewClass: function(model) {\n            var contentType = model.get(\"history_content_type\");\n            switch (contentType) {\n                case \"dataset\":\n                    return this.HDAViewClass;\n                case \"dataset_collection\":\n                    return this.HDCAViewClass;\n            }\n            throw new TypeError(`Unknown history_content_type: ${contentType}`);\n        },\n\n        /** in this override, add a linktarget, and expand if id is in web storage */\n        _getItemViewOptions: function(model) {\n            var options = _super.prototype._getItemViewOptions.call(this, model);\n            return _.extend(options, {\n                linkTarget: this.linkTarget,\n                expanded: this.model.contents.storage.isExpanded(model.id),\n                hasUser: this.model.ownedByCurrUser()\n            });\n        },\n\n        /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n        _setUpItemViewListeners: function(view) {\n            var panel = this;\n            _super.prototype._setUpItemViewListeners.call(panel, view);\n            //TODO: send from content view: this.model.collection.storage.addExpanded\n            // maintain a list of items whose bodies are expanded\n            return panel.listenTo(view, {\n                expanded: function(v) {\n                    panel.model.contents.storage.addExpanded(v.model);\n                },\n                collapsed: function(v) {\n                    panel.model.contents.storage.removeExpanded(v.model);\n                }\n            });\n        },\n\n        /** override to remove expandedIds from webstorage */\n        collapseAll: function() {\n            this.model.contents.storage.clearExpanded();\n            _super.prototype.collapseAll.call(this);\n        },\n\n        // ------------------------------------------------------------------------ selection\n        /** Override to correctly set the historyId of the new collection */\n        getSelectedModels: function() {\n            var collection = _super.prototype.getSelectedModels.call(this);\n            collection.historyId = this.collection.historyId;\n            return collection;\n        },\n\n        // ------------------------------------------------------------------------ panel events\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .show-selectors-btn\": \"toggleSelectors\",\n            \"click > .controls .prev\": \"_clickPrevPage\",\n            \"click > .controls .next\": \"_clickNextPage\",\n            \"change > .controls .pages\": \"_changePageSelect\",\n            // allow (error) messages to be clicked away\n            \"click .messages [class$=message]\": \"clearMessages\"\n        }),\n\n        _clickPrevPage: function(ev) {\n            this.model.clearUpdateTimeout();\n            this.model.contents.fetchPrevPage();\n        },\n\n        _clickNextPage: function(ev) {\n            this.model.clearUpdateTimeout();\n            this.model.contents.fetchNextPage();\n        },\n\n        _changePageSelect: function(ev) {\n            this.model.clearUpdateTimeout();\n            var page = $(ev.currentTarget).val();\n            this.model.contents.fetchPage(page);\n        },\n\n        /** Toggle and store the deleted visibility and re-render items\n         * @returns {Boolean} new setting\n         */\n        toggleShowDeleted: function(show, options) {\n            show = show !== undefined ? show : !this.model.contents.includeDeleted;\n            var self = this;\n            var contents = self.model.contents;\n            contents.setIncludeDeleted(show, options);\n            self.trigger(\"show-deleted\", show);\n\n            contents.fetchCurrentPage({ renderAll: true });\n            return show;\n        },\n\n        /** Toggle and store whether to render explicity hidden contents\n         * @returns {Boolean} new setting\n         */\n        toggleShowHidden: function(show, store, options) {\n            // console.log( 'toggleShowHidden', show, store );\n            show = show !== undefined ? show : !this.model.contents.includeHidden;\n            var self = this;\n            var contents = self.model.contents;\n            contents.setIncludeHidden(show, options);\n            self.trigger(\"show-hidden\", show);\n\n            contents.fetchCurrentPage({ renderAll: true });\n            return show;\n        },\n\n        /** On the first search, if there are no details - load them, then search */\n        _firstSearch: function(searchFor) {\n            var self = this;\n            var inputSelector = \"> .controls .search-input\";\n            this.log(\"onFirstSearch\", searchFor);\n\n            // if the contents already have enough details to search, search and return now\n            if (self.model.contents.haveSearchDetails()) {\n                self.searchItems(searchFor);\n                return;\n            }\n\n            // otherwise, load the details progressively here\n            self.$(inputSelector).searchInput(\"toggle-loading\");\n            // set this now so that only results will show during progress\n            self.searchFor = searchFor;\n            var xhr = self.model.contents\n                .progressivelyFetchDetails({ silent: true })\n                .progress((response, limit, offset) => {\n                    self.renderItems();\n                    self.trigger(\"search:loading-progress\", limit, offset);\n                })\n                .always(() => {\n                    self.$el.find(inputSelector).searchInput(\"toggle-loading\");\n                })\n                .done(() => {\n                    self.searchItems(searchFor, \"force\");\n                });\n        },\n\n        /** clear the search filters and show all views that are normally shown */\n        clearSearch: function(searchFor) {\n            var self = this;\n            if (!self.searchFor) return self;\n            //self.log( 'onSearchClear', self );\n            self.searchFor = \"\";\n            self.trigger(\"search:clear\", self);\n            self.$(\"> .controls .search-query\").val(\"\");\n            // NOTE: silent + render prevents collection update event with merge only\n            // - which causes an empty page due to event handler above\n            self.model.contents.fetchCurrentPage({ silent: true }).done(() => {\n                self.renderItems();\n            });\n            return self;\n        },\n\n        // ........................................................................ error handling\n        /** Event handler for errors (from the panel, the history, or the history's contents)\n         *  Alternately use two strings for model and xhr to use custom message and title (respectively)\n         *  @param {Model or View} model    the (Backbone) source of the error\n         *  @param {XMLHTTPRequest} xhr     any ajax obj. assoc. with the error\n         *  @param {Object} options         the options map commonly used with bbone ajax\n         */\n        errorHandler: function(model, xhr, options) {\n            //TODO: to mixin or base model\n            // interrupted ajax or no connection\n            if (xhr && xhr.status === 0 && xhr.readyState === 0) {\n                // return ERROR_MODAL.offlineErrorModal();\n                // fail silently\n                return;\n            }\n            // otherwise, leave something to report in the console\n            this.error(model, xhr, options);\n            // and feedback to a modal\n            // if sent two strings (and possibly details as 'options'), use those as message and title\n            if (_.isString(model) && _.isString(xhr)) {\n                var message = model;\n                var title = xhr;\n                return ERROR_MODAL.errorModal(message, title, options);\n            }\n            // bad gateway\n            // TODO: possibly to global handler\n            if (xhr && xhr.status === 502) {\n                return ERROR_MODAL.badGatewayErrorModal();\n            }\n            return ERROR_MODAL.ajaxErrorModal(model, xhr, options);\n        },\n\n        /** Remove all messages from the panel. */\n        clearMessages: function(ev) {\n            var $target = !_.isUndefined(ev) ? $(ev.currentTarget) : this.$messages().children('[class$=\"message\"]');\n            $target.fadeOut(this.fxSpeed, function() {\n                $(this).remove();\n            });\n            return this;\n        },\n\n        // ........................................................................ scrolling\n        /** Scrolls the panel to show the content sub-view with the given hid.\n         *  @param {Integer} hid    the hid of item to scroll into view\n         *  @returns {HistoryView} the panel\n         */\n        scrollToHid: function(hid) {\n            return this.scrollToItem(_.first(this.viewsWhereModel({ hid: hid })));\n        },\n\n        // ........................................................................ misc\n        /** utility for adding -st, -nd, -rd, -th to numbers */\n        ordinalIndicator: function(number) {\n            var numStr = `${number}`;\n            switch (numStr.charAt(numStr.length - 1)) {\n                case \"1\":\n                    return `${numStr}st`;\n                case \"2\":\n                    return `${numStr}nd`;\n                case \"3\":\n                    return `${numStr}rd`;\n                default:\n                    return `${numStr}th`;\n            }\n        },\n\n        /** Return a string rep of the history */\n        toString: function() {\n            return `HistoryView(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryView.prototype.templates = (() => {\n    var mainTemplate = BASE_MVC.wrapTemplate([\n        // temp container\n        \"<div>\",\n        '<div class=\"controls\"></div>',\n        '<ul class=\"list-items\"></ul>',\n        '<div class=\"empty-message infomessagesmall\"></div>',\n        \"</div>\"\n    ]);\n\n    var controlsTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<div class=\"controls\">',\n            '<div class=\"title\">',\n            '<div class=\"name\"><%- history.name %></div>',\n            \"</div>\",\n            '<div class=\"subtitle\"></div>',\n            '<div class=\"history-size\"><%- history.nice_size %></div>',\n\n            '<div class=\"actions\"></div>',\n\n            '<div class=\"messages\">',\n            \"<% if( history.deleted && history.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This history has been purged and deleted\"),\n            \"</div>\",\n            \"<% } else if( history.deleted ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This history has been deleted\"),\n            \"</div>\",\n            \"<% } else if( history.purged ){ %>\",\n            '<div class=\"deleted-msg warningmessagesmall\">',\n            _l(\"This history has been purged\"),\n            \"</div>\",\n            \"<% } %>\",\n\n            \"<% if( history.message ){ %>\",\n            // should already be localized\n            '<div class=\"<%= history.message.level || \"info\" %>messagesmall\">',\n            \"<%= history.message.text %>\",\n            \"</div>\",\n            \"<% } %>\",\n            \"</div>\",\n\n            // add tags and annotations\n            '<div class=\"tags-display\"></div>',\n            '<div class=\"annotation-display\"></div>',\n\n            '<div class=\"search\">',\n            '<div class=\"search-input\"></div>',\n            \"</div>\",\n\n            '<div class=\"list-actions\">',\n            '<div class=\"btn-group\">',\n            '<button class=\"select-all btn btn-default\"',\n            'data-mode=\"select\">',\n            _l(\"All\"),\n            \"</button>\",\n            '<button class=\"deselect-all btn btn-default\"',\n            'data-mode=\"select\">',\n            _l(\"None\"),\n            \"</button>\",\n            \"</div>\",\n            '<div class=\"list-action-menu btn-group\">',\n            \"</div>\",\n            \"</div>\",\n            '<div class=\"list-pagination form-inline\"></div>',\n            \"</div>\"\n        ],\n        \"history\"\n    );\n\n    var paginationTemplate = BASE_MVC.wrapTemplate(\n        [\n            '<button class=\"prev\" <%- pages.current === 1 ? \"disabled\" : \"\" %>>previous</button>',\n            '<select class=\"pages form-control\" ',\n            'title=\"',\n            _l(\"Click to open and select a page. Begin typing a page number to select it\"),\n            '\">',\n            \"<% _.range( 1, pages.last + 1 ).forEach( function( i ){ %>\",\n            '<option value=\"<%- i - 1 %>\" <%- i === pages.current ? \"selected\" : \"\" %>>',\n            \"<%- view.ordinalIndicator( i ) %> of <%- pages.last %> pages\",\n            \"</option>\",\n            \"<% }); %>\",\n            \"</select>\",\n            '<button class=\"next\" <%- pages.current === pages.last ? \"disabled\" : \"\" %>>next</button>'\n        ],\n        \"pages\"\n    );\n\n    return _.extend(_.clone(_super.prototype.templates), {\n        el: mainTemplate,\n        controls: controlsTemplate,\n        pagination: paginationTemplate\n    });\n})();\n\n//==============================================================================\nexport default {\n    HistoryView: HistoryView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-view.js","import jQuery from \"jquery\";\n(\"use_strict\");\n\nvar $ = jQuery;\n//TODO: too specific to history panel\nfunction LoadingIndicator($where, options) {\n    var self = this;\n    // defaults\n    options = jQuery.extend(\n        {\n            cover: false\n        },\n        options || {}\n    );\n\n    function render() {\n        var html = [\n            '<div class=\"loading-indicator\">',\n            '<div class=\"loading-indicator-text\">',\n            '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>',\n            '<span class=\"loading-indicator-message\">loading...</span>',\n            \"</div>\",\n            \"</div>\"\n        ].join(\"\\n\");\n\n        var $indicator = $(html)\n            .hide()\n            .css(\n                options.css || {\n                    position: \"fixed\"\n                }\n            );\n\n        var $text = $indicator.children(\".loading-indicator-text\");\n\n        if (options.cover) {\n            $indicator.css({\n                \"z-index\": 2,\n                top: $where.css(\"top\"),\n                bottom: $where.css(\"bottom\"),\n                left: $where.css(\"left\"),\n                right: $where.css(\"right\"),\n                opacity: 0.5,\n                \"background-color\": \"white\",\n                \"text-align\": \"center\"\n            });\n            $text = $indicator.children(\".loading-indicator-text\").css({\n                \"margin-top\": \"20px\"\n            });\n        } else {\n            $text = $indicator.children(\".loading-indicator-text\").css({\n                margin: \"12px 0px 0px 10px\",\n                opacity: \"0.85\",\n                color: \"grey\"\n            });\n            $text.children(\".loading-indicator-message\").css({\n                margin: \"0px 8px 0px 0px\",\n                \"font-style\": \"italic\"\n            });\n        }\n        return $indicator;\n    }\n\n    self.show = (msg, speed, callback) => {\n        msg = msg || \"loading...\";\n        speed = speed || \"fast\";\n        // remove previous\n        $where\n            .parent()\n            .find(\".loading-indicator\")\n            .remove();\n        // since position is fixed - we insert as sibling\n        self.$indicator = render().insertBefore($where);\n        self.message(msg);\n        self.$indicator.fadeIn(speed, callback);\n        return self;\n    };\n\n    self.message = msg => {\n        self.$indicator.find(\"i\").text(msg);\n    };\n\n    self.hide = (speed, callback) => {\n        speed = speed || \"fast\";\n        if (self.$indicator && self.$indicator.length) {\n            self.$indicator.fadeOut(speed, () => {\n                self.$indicator.remove();\n                if (callback) {\n                    callback();\n                }\n            });\n        } else {\n            if (callback) {\n                callback();\n            }\n        }\n        return self;\n    };\n    return self;\n}\n\n//============================================================================\nexport default LoadingIndicator;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/ui/loading-indicator.js","import DATASET_LI_EDIT from \"mvc/dataset/dataset-li-edit\";\nimport HDA_LI from \"mvc/history/hda-li\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = DATASET_LI_EDIT.DatasetListItemEdit;\n/** @class Editing view for HistoryDatasetAssociation.\n */\nvar HDAListItemEdit = _super.extend(\n    /** @lends HDAListItemEdit.prototype */ {\n        className: `${_super.prototype.className} history-content`,\n\n        /** In this override, only get details if in the ready state, get rerunnable if in other states.\n         *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n         */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n\n                // special case the need for the rerunnable and creating_job attributes\n                // needed for rendering re-run button on queued, running datasets\n            } else if (!view.model.has(\"rerunnable\")) {\n                return view.model.fetch({\n                    silent: true,\n                    data: {\n                        // only fetch rerunnable and creating_job to keep overhead down\n                        keys: [\"rerunnable\", \"creating_job\"].join(\",\")\n                    }\n                });\n            }\n            return jQuery.when();\n        },\n\n        /** event map */\n        events: _.extend(_.clone(_super.prototype.events), {\n            \"click .unhide-link\": function(ev) {\n                this.model.unhide();\n                return false;\n            }\n        }),\n\n        /** string rep */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `HDAListItemEdit(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemEdit.prototype.templates = (() => {\n    var warnings = _.extend({}, _super.prototype.templates.warnings, {\n        hidden: BASE_MVC.wrapTemplate(\n            [\n                \"<% if( !dataset.visible ){ %>\",\n                // add a link to unhide a dataset\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                _l(\"This dataset has been hidden\"),\n                '<br /><a class=\"unhide-link\" a href=\"javascript:void(0);\">',\n                _l(\"Unhide it\"),\n                \"</a>\",\n                \"</div>\",\n                \"<% } %>\"\n            ],\n            \"dataset\"\n        )\n    });\n\n    return _.extend({}, _super.prototype.templates, {\n        //NOTE: *steal* the HDAListItemView titleBar\n        titleBar: HDA_LI.HDAListItemView.prototype.templates.titleBar,\n        warnings: warnings\n    });\n})();\n\n//==============================================================================\nexport default {\n    HDAListItemEdit: HDAListItemEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hda-li-edit.js","import HDCA_LI from \"mvc/history/hdca-li\";\nimport DC_VIEW_EDIT from \"mvc/collection/collection-view-edit\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar _super = HDCA_LI.HDCAListItemView;\n/** @class Editing view for HistoryDatasetCollectionAssociation.\n */\nvar HDCAListItemEdit = _super.extend(\n    /** @lends HDCAListItemEdit.prototype */ {\n        /** logger used to record this.log messages, commonly set to console */\n        //logger              : console,\n\n        /** Override to return editable versions of the collection panels */\n        _getFoldoutPanelClass: function() {\n            switch (this.model.get(\"collection_type\")) {\n                case \"list\":\n                    return DC_VIEW_EDIT.ListCollectionViewEdit;\n                case \"paired\":\n                    return DC_VIEW_EDIT.PairCollectionViewEdit;\n                case \"list:paired\":\n                    return DC_VIEW_EDIT.ListOfPairsCollectionViewEdit;\n                case \"list:list\":\n                    return DC_VIEW_EDIT.ListOfListsCollectionViewEdit;\n            }\n            throw new TypeError(`Uknown collection_type: ${this.model.get(\"collection_type\")}`);\n        },\n\n        // ......................................................................... delete\n        /** In this override, add the delete button. */\n        _renderPrimaryActions: function() {\n            this.log(`${this}._renderPrimaryActions`);\n            // render the display, edit attr and delete icon-buttons\n            return _super.prototype._renderPrimaryActions.call(this).concat([this._renderDeleteButton()]);\n        },\n\n        /** Render icon-button to delete this collection. */\n        _renderDeleteButton: function() {\n            var self = this;\n            var deleted = this.model.get(\"deleted\");\n            return faIconButton({\n                title: deleted ? _l(\"Dataset collection is already deleted\") : _l(\"Delete\"),\n                classes: \"delete-btn\",\n                faIcon: \"fa-times\",\n                disabled: deleted,\n                onclick: function() {\n                    // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                    self.$el.find(\".icon-btn.delete-btn\").trigger(\"mouseout\");\n                    self.model[\"delete\"]();\n                }\n            });\n        },\n\n        // ......................................................................... misc\n        /** string rep */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `HDCAListItemEdit(${modelString})`;\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    HDCAListItemEdit: HDCAListItemEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/hdca-li-edit.js","import DC_VIEW from \"mvc/collection/collection-view\";\nimport DC_MODEL from \"mvc/collection/collection-model\";\nimport DC_EDIT from \"mvc/collection/collection-li-edit\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport TAGS from \"mvc/tag\";\nimport faIconButton from \"ui/fa-icon-button\";\nimport _l from \"utils/localization\";\nimport \"ui/editable-text\";\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class editable View/Controller for a dataset collection.\n */\nvar _super = DC_VIEW.CollectionView;\nvar CollectionViewEdit = _super.extend(\n    /** @lends CollectionView.prototype */ {\n        //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n\n        /** logger used to record this.log messages, commonly set to console */\n        //logger              : console,\n\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_EDIT.DatasetDCEListItemEdit,\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_EDIT.NestedDCDCEListItemEdit,\n\n        // ......................................................................... SET UP\n        /** Set up the view, set up storage, bind listeners to HistoryContents events\n         *  @param {Object} attributes optional settings for the panel\n         */\n        initialize: function(attributes) {\n            _super.prototype.initialize.call(this, attributes);\n        },\n\n        /** In this override, make the collection name editable\n         */\n        _setUpBehaviors: function($where) {\n            $where = $where || this.$el;\n            _super.prototype._setUpBehaviors.call(this, $where);\n            if (!this.model) {\n                return;\n            }\n\n            // anon users shouldn't have access to any of the following\n            if (!Galaxy.user || Galaxy.user.isAnonymous()) {\n                return;\n            }\n\n            this.tagsEditorShown = true;\n\n            //TODO: extract\n            var panel = this;\n\n            var nameSelector = \"> .controls .name\";\n            $where\n                .find(nameSelector)\n                .attr(\"title\", _l(\"Click to rename collection\"))\n                .tooltip({ placement: \"bottom\" })\n                .make_text_editable({\n                    on_finish: function(newName) {\n                        var previousName = panel.model.get(\"name\");\n                        if (newName && newName !== previousName) {\n                            panel.$el.find(nameSelector).text(newName);\n                            panel.model.save({ name: newName }).fail(() => {\n                                panel.$el.find(nameSelector).text(panel.model.previous(\"name\"));\n                            });\n                        } else {\n                            panel.$el.find(nameSelector).text(previousName);\n                        }\n                    }\n                });\n            this.tagsEditor = new TAGS.TagsEditor({\n                model: this.model,\n                el: $where.find(\".tags-display\"),\n                onshowFirstTime: function() {\n                    this.render();\n                },\n                usePrompt: false\n            });\n            this.tagsEditor.toggle(true);\n        },\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `CollectionViewEdit(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionViewEdit = CollectionViewEdit.extend(\n    /** @lends ListCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for datasets */\n        DatasetDCEViewClass: DC_EDIT.DatasetDCEListItemEdit,\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `ListCollectionViewEdit(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n// =============================================================================\n/** @class Editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionViewEdit = ListCollectionViewEdit.extend(\n    /** @lends PairCollectionViewEdit.prototype */ {\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `PairCollectionViewEdit(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n// =============================================================================\n/** @class Editable (roughly since these collections are immutable),\n *  View/Controller for a dataset collection.\n */\nvar NestedPairCollectionViewEdit = PairCollectionViewEdit.extend(\n    /** @lends NestedPairCollectionViewEdit.prototype */ {\n        /** Override to remove the editable text from the name/identifier - these collections are considered immutable */\n        _setUpBehaviors: function($where) {\n            _super.prototype._setUpBehaviors.call(this, $where);\n        },\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `NestedPairCollectionViewEdit(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n// =============================================================================\n/** @class editable, View/Controller for a list of pairs dataset collection. */\nvar ListOfPairsCollectionViewEdit = CollectionViewEdit.extend(\n    /** @lends ListOfPairsCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_EDIT.NestedDCDCEListItemEdit.extend({\n            foldoutPanelClass: NestedPairCollectionViewEdit\n        }),\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `ListOfPairsCollectionViewEdit(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n// =============================================================================\n/** @class View/Controller for a list of lists dataset collection. */\nvar ListOfListsCollectionViewEdit = CollectionViewEdit.extend(\n    /** @lends ListOfListsCollectionView.prototype */ {\n        //TODO: not strictly needed - due to switch in CollectionView._getContentClass\n        /** sub view class used for nested collections */\n        NestedDCDCEViewClass: DC_EDIT.NestedDCDCEListItemEdit.extend({\n            foldoutPanelClass: NestedPairCollectionViewEdit\n        }),\n\n        // ........................................................................ misc\n        /** string rep */\n        toString: function() {\n            return `ListOfListsCollectionViewEdit(${this.model ? this.model.get(\"name\") : \"\"})`;\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    CollectionViewEdit: CollectionViewEdit,\n    ListCollectionViewEdit: ListCollectionViewEdit,\n    PairCollectionViewEdit: PairCollectionViewEdit,\n    ListOfPairsCollectionViewEdit: ListOfPairsCollectionViewEdit,\n    ListOfListsCollectionViewEdit: ListOfListsCollectionViewEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/collection-view-edit.js","import DC_LI from \"mvc/collection/collection-li\";\nimport DATASET_LI_EDIT from \"mvc/dataset/dataset-li-edit\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\n//==============================================================================\nvar DCListItemView = DC_LI.DCListItemView;\n/** @class Edit view for DatasetCollection.\n */\nvar DCListItemEdit = DCListItemView.extend(\n    /** @lends DCListItemEdit.prototype */ {\n        /** override to add linkTarget */\n        initialize: function(attributes) {\n            DCListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DCListItemEdit(${modelString})`;\n        }\n    }\n);\n\n//==============================================================================\nvar DCEListItemView = DC_LI.DCEListItemView;\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemEdit = DCEListItemView.extend(\n    /** @lends DCEListItemEdit.prototype */ {\n        //TODO: this might be expendable - compacted with HDAListItemView\n\n        /** set up */\n        initialize: function(attributes) {\n            DCEListItemView.prototype.initialize.call(this, attributes);\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DCEListItemEdit(${modelString})`;\n        }\n    }\n);\n\n//==============================================================================\n// NOTE: this does not inherit from DatasetDCEListItemView as you would expect\n//TODO: but should - if we can find something simpler than using diamond\n/** @class Editable view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemEdit = DATASET_LI_EDIT.DatasetListItemEdit.extend(\n    /** @lends DatasetDCEListItemEdit.prototype */ {\n        /** set up */\n        initialize: function(attributes) {\n            DATASET_LI_EDIT.DatasetListItemEdit.prototype.initialize.call(this, attributes);\n        },\n\n        // NOTE: this does not inherit from DatasetDCEListItemView - so we duplicate this here\n        //TODO: fix\n        /** In this override, only get details if in the ready state.\n         *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n         */\n        _fetchModelDetails: function() {\n            var view = this;\n            if (view.model.inReadyState() && !view.model.hasDetails()) {\n                return view.model.fetch({ silent: true });\n            }\n            return jQuery.when();\n        },\n\n        /** Override to remove delete button */\n        _renderDeleteButton: function() {\n            return null;\n        },\n\n        // ......................................................................... misc\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `DatasetDCEListItemEdit(${modelString})`;\n        }\n    }\n);\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemEdit.prototype.templates = (() =>\n    _.extend({}, DATASET_LI_EDIT.DatasetListItemEdit.prototype.templates, {\n        titleBar: DC_LI.DatasetDCEListItemView.prototype.templates.titleBar\n    }))();\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemEdit = DC_LI.NestedDCDCEListItemView.extend(\n    /** @lends NestedDCDCEListItemEdit.prototype */ {\n        /** String representation */\n        toString: function() {\n            var modelString = this.model ? `${this.model}` : \"(no model)\";\n            return `NestedDCDCEListItemEdit(${modelString})`;\n        }\n    }\n);\n\n//==============================================================================\nexport default {\n    DCListItemEdit: DCListItemEdit,\n    DCEListItemEdit: DCEListItemEdit,\n    DatasetDCEListItemEdit: DatasetDCEListItemEdit,\n    NestedDCDCEListItemEdit: NestedDCDCEListItemEdit\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/collection-li-edit.js","import LIST_CREATOR from \"mvc/collection/list-collection-creator\";\nimport HDCA from \"mvc/history/hdca-model\";\nimport BASE_MVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\n\nvar logNamespace = \"collections\";\n/*==============================================================================\nTODO:\n    the paired creator doesn't really mesh with the list creator as parent\n        it may be better to make an abstract super class for both\n    composites may inherit from this (or vis-versa)\n    PairedDatasetCollectionElementView doesn't make a lot of sense\n\n==============================================================================*/\n/**  */\nvar PairedDatasetCollectionElementView = Backbone.View.extend(BASE_MVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    //TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n    tagName: \"li\",\n    className: \"collection-element\",\n\n    initialize: function(attributes) {\n        this.element = attributes.element || {};\n        this.identifier = attributes.identifier;\n    },\n\n    render: function() {\n        this.$el.attr(\"data-element-id\", this.element.id).html(\n            this.template({\n                identifier: this.identifier,\n                element: this.element\n            })\n        );\n        return this;\n    },\n\n    //TODO: lots of unused space in the element - possibly load details and display them horiz.\n    template: _.template(\n        ['<span class=\"identifier\"><%- identifier %></span>', '<span class=\"name\"><%- element.name %></span>'].join(\"\")\n    ),\n\n    /** remove the DOM and any listeners */\n    destroy: function() {\n        this.off();\n        this.$el.remove();\n    },\n\n    /** string rep */\n    toString: function() {\n        return \"DatasetCollectionElementView()\";\n    }\n});\n\n// ============================================================================\nvar _super = LIST_CREATOR.ListCollectionCreator;\n\n/** An interface for building collections.\n */\nvar PairCollectionCreator = _super.extend({\n    /** the class used to display individual elements */\n    elementViewClass: PairedDatasetCollectionElementView,\n    /** the class this creator will create and save */\n    collectionClass: HDCA.HistoryPairDatasetCollection,\n    className: \"pair-collection-creator collection-creator flex-row-container\",\n\n    /** override to no-op */\n    _mangleDuplicateNames: function() {},\n\n    // TODO: this whole pattern sucks. There needs to be two classes of problem area:\n    //      bad inital choices and\n    //      when the user has painted his/her self into a corner during creation/use-of-the-creator\n    /** render the entire interface */\n    render: function(speed, callback) {\n        if (this.workingElements.length === 2) {\n            return _super.prototype.render.call(this, speed, callback);\n        }\n        return this._renderInvalid(speed, callback);\n    },\n\n    // ------------------------------------------------------------------------ rendering elements\n    /** render forward/reverse */\n    _renderList: function(speed, callback) {\n        //this.debug( '-- _renderList' );\n        //precondition: there are two valid elements in workingElements\n        var creator = this;\n\n        var $tmp = jQuery(\"<div/>\");\n        var $list = creator.$list();\n\n        // lose the original views, create the new, append all at once, then call their renders\n        _.each(this.elementViews, view => {\n            view.destroy();\n            creator.removeElementView(view);\n        });\n        $tmp.append(creator._createForwardElementView().$el);\n        $tmp.append(creator._createReverseElementView().$el);\n        $list.empty().append($tmp.children());\n        _.invoke(creator.elementViews, \"render\");\n    },\n\n    /** create the forward element view */\n    _createForwardElementView: function() {\n        return this._createElementView(this.workingElements[0], {\n            identifier: \"forward\"\n        });\n    },\n\n    /** create the forward element view */\n    _createReverseElementView: function() {\n        return this._createElementView(this.workingElements[1], {\n            identifier: \"reverse\"\n        });\n    },\n\n    /** create an element view, cache in elementViews, and return */\n    _createElementView: function(element, options) {\n        var elementView = new this.elementViewClass(\n            _.extend(options, {\n                element: element\n            })\n        );\n        this.elementViews.push(elementView);\n        return elementView;\n    },\n\n    /** swap the forward, reverse elements and re-render */\n    swap: function() {\n        this.workingElements = [this.workingElements[1], this.workingElements[0]];\n        this._renderList();\n    },\n\n    events: _.extend(_.clone(_super.prototype.events), {\n        \"click .swap\": \"swap\"\n    }),\n\n    // ------------------------------------------------------------------------ templates\n    //TODO: move to require text plugin and load these as text\n    //TODO: underscore currently unnecc. bc no vars are used\n    //TODO: better way of localizing text-nodes in long strings\n    /** underscore template fns attached to class */\n    templates: _.extend(_.clone(_super.prototype.templates), {\n        /** the middle: element list */\n        middle: _.template(\n            [\n                '<div class=\"collection-elements-controls\">',\n                '<a class=\"swap\" href=\"javascript:void(0);\" title=\"',\n                _l(\"Swap forward and reverse datasets\"),\n                '\">',\n                _l(\"Swap\"),\n                \"</a>\",\n                \"</div>\",\n                '<div class=\"collection-elements scroll-container flex-row\">',\n                \"</div>\"\n            ].join(\"\")\n        ),\n\n        /** help content */\n        helpContent: _.template(\n            [\n                \"<p>\",\n                _l(\n                    [\n                        \"Pair collections are permanent collections containing two datasets: one forward and one reverse. \",\n                        \"Often these are forward and reverse reads. The pair collections can be passed to tools and \",\n                        \"workflows in order to have analyses done on both datasets. This interface allows \",\n                        \"you to create a pair, name it, and swap which is forward and which reverse.\"\n                    ].join(\"\")\n                ),\n                \"</p>\",\n                \"<ul>\",\n                \"<li>\",\n                _l(\n                    [\n                        'Click the <i data-target=\".swap\">\"Swap\"</i> link to make your forward dataset the reverse ',\n                        \"and the reverse dataset forward.\"\n                    ].join(\"\")\n                ),\n                \"</li>\",\n                \"<li>\",\n                _l(['Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'].join(\"\")),\n                \"</li>\",\n                \"</ul><br />\",\n                \"<p>\",\n                _l(\n                    [\n                        'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n                        'click <i data-target=\".create-collection\">\"Create list\"</i>.'\n                    ].join(\"\")\n                ),\n                \"</p>\"\n            ].join(\"\")\n        ),\n\n        /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n        invalidInitial: _.template(\n            [\n                '<div class=\"header flex-row no-flex\">',\n                '<div class=\"alert alert-warning\" style=\"display: block\">',\n                '<span class=\"alert-message\">',\n                \"<% if( _.size( problems ) ){ %>\",\n                _l(\"The following selections could not be included due to problems\"),\n                \"<ul><% _.each( problems, function( problem ){ %>\",\n                \"<li><b><%- problem.element.name %></b>: <%- problem.text %></li>\",\n                \"<% }); %></ul>\",\n                \"<% } else if( _.size( elements ) === 0 ){ %>\",\n                _l(\"No datasets were selected\"),\n                \".\",\n                \"<% } else if( _.size( elements ) === 1 ){ %>\",\n                _l(\"Only one dataset was selected\"),\n                \": <%- elements[0].name %>\",\n                \"<% } else if( _.size( elements ) > 2 ){ %>\",\n                _l(\"Too many datasets were selected\"),\n                ': <%- _.pluck( elements, \"name\" ).join( \", \") %>',\n                \"<% } %>\",\n                \"<br />\",\n                _l(\"Two (and only two) elements are needed for the pair\"),\n                \". \",\n                _l(\"You may need to \"),\n                '<a class=\"cancel-create\" href=\"javascript:void(0)\">',\n                _l(\"cancel\"),\n                \"</a> \",\n                _l(\"and reselect new elements\"),\n                \".\",\n                \"</span>\",\n                \"</div>\",\n                \"</div>\",\n                '<div class=\"footer flex-row no-flex\">',\n                '<div class=\"actions clear vertically-spaced\">',\n                '<div class=\"other-options pull-left\">',\n                '<button class=\"cancel-create btn\" tabindex=\"-1\">',\n                _l(\"Cancel\"),\n                \"</button>\",\n                // _l( 'Create a different kind of collection' ),\n                \"</div>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        )\n    }),\n\n    // ------------------------------------------------------------------------ misc\n    /** string rep */\n    toString: function() {\n        return \"PairCollectionCreator\";\n    }\n});\n\n//==============================================================================\n/** List collection flavor of collectionCreatorModal. */\nvar pairCollectionCreatorModal = function _pairCollectionCreatorModal(elements, options) {\n    options = options || {};\n    options.title = _l(\"Create a collection from a pair of datasets\");\n    return LIST_CREATOR.collectionCreatorModal(elements, options, PairCollectionCreator);\n};\n\n//==============================================================================\n/** Use a modal to create a pair collection, then add it to the given history contents.\n *  @returns {Deferred} resolved when the collection is added to the history.\n */\nfunction createPairCollection(contents, defaultHideSourceItems) {\n    var elements = contents.toJSON();\n\n    var promise = pairCollectionCreatorModal(elements, {\n        defaultHideSourceItems: defaultHideSourceItems,\n        creationFn: function(elements, name, hideSourceItems) {\n            elements = [\n                { name: \"forward\", src: \"hda\", id: elements[0].id },\n                { name: \"reverse\", src: \"hda\", id: elements[1].id }\n            ];\n            return contents.createHDCA(elements, \"paired\", name, hideSourceItems);\n        }\n    });\n\n    return promise;\n}\n\n//==============================================================================\nexport default {\n    PairCollectionCreator: PairCollectionCreator,\n    pairCollectionCreatorModal: pairCollectionCreatorModal,\n    createPairCollection: createPairCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/pair-collection-creator.js","import levenshteinDistance from \"utils/levenshtein\";\nimport naturalSort from \"utils/natural-sort\";\nimport baseCreator from \"mvc/collection/base-creator\";\nimport baseMVC from \"mvc/base-mvc\";\nimport _l from \"utils/localization\";\nimport \"ui/hoverhighlight\";\n\nvar logNamespace = \"collections\";\n/* ============================================================================\nTODO:\n\n\nPROGRAMMATICALLY:\ncurrPanel.once( 'rendered', function(){\n    currPanel.showSelectors();\n    currPanel.selectAll();\n    _.last( currPanel.actionsPopup.options ).func();\n});\n\n============================================================================ */\n/** A view for paired datasets in the collections creator.\n */\nvar PairView = Backbone.View.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    tagName: \"li\",\n    className: \"dataset paired\",\n\n    initialize: function(attributes) {\n        this.pair = attributes.pair || {};\n    },\n\n    template: _.template(\n        [\n            '<span class=\"forward-dataset-name flex-column\"><%- pair.forward.name %></span>',\n            '<span class=\"pair-name-column flex-column\">',\n            '<span class=\"pair-name\"><%- pair.name %></span>',\n            \"</span>\",\n            '<span class=\"reverse-dataset-name flex-column\"><%- pair.reverse.name %></span>'\n        ].join(\"\")\n    ),\n\n    render: function() {\n        this.dragStartHandler = _.bind(this._dragstart, this);\n        this.dragEndHandler = _.bind(this._dragend, this);\n        var handle = this.$el\n            .attr(\"draggable\", true)\n            .data(\"pair\", this.pair)\n            .html(this.template({ pair: this.pair }))\n            .addClass(\"flex-column-container\")\n            .get(0);\n        handle.addEventListener(\"dragstart\", this.dragStartHandler, false);\n        handle.addEventListener(\"dragend\", this.dragEndHandler, false);\n        return this;\n    },\n\n    events: {\n        dragover: \"_sendToParent\",\n        drop: \"_sendToParent\"\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragstart: function(ev) {\n        ev.currentTarget.style.opacity = \"0.4\";\n        if (ev.originalEvent) {\n            ev = ev.originalEvent;\n        }\n\n        ev.dataTransfer.effectAllowed = \"move\";\n        ev.dataTransfer.setData(\"text/plain\", JSON.stringify(this.pair));\n\n        this.$el.parent().trigger(\"pair.dragstart\", [this]);\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragend: function(ev) {\n        ev.currentTarget.style.opacity = \"1.0\";\n        this.$el.parent().trigger(\"pair.dragend\", [this]);\n    },\n\n    /** manually bubble up an event to the parent/container */\n    _sendToParent: function(ev) {\n        this.$el.parent().trigger(ev);\n    },\n\n    /** string rep */\n    toString: function() {\n        return `PairView(${this.pair.name})`;\n    }\n});\n\n// ============================================================================\n/** returns an autopair function that uses the provided options.match function */\nfunction autoPairFnBuilder(options) {\n    options = options || {};\n    options.createPair =\n        options.createPair ||\n        function _defaultCreatePair(params) {\n            params = params || {};\n            var a = params.listA.splice(params.indexA, 1)[0];\n            var b = params.listB.splice(params.indexB, 1)[0];\n            var aInBIndex = params.listB.indexOf(a);\n            var bInAIndex = params.listA.indexOf(b);\n            if (aInBIndex !== -1) {\n                params.listB.splice(aInBIndex, 1);\n            }\n            if (bInAIndex !== -1) {\n                params.listA.splice(bInAIndex, 1);\n            }\n            return this._pair(a, b, { silent: true });\n        };\n    // compile these here outside of the loop\n    var _regexps = [];\n    function getRegExps() {\n        if (!_regexps.length) {\n            _regexps = [new RegExp(this.filters[0]), new RegExp(this.filters[1])];\n        }\n        return _regexps;\n    }\n    // mangle params as needed\n    options.preprocessMatch =\n        options.preprocessMatch ||\n        function _defaultPreprocessMatch(params) {\n            var regexps = getRegExps.call(this);\n            return _.extend(params, {\n                matchTo: params.matchTo.name.replace(regexps[0], \"\"),\n                possible: params.possible.name.replace(regexps[1], \"\")\n            });\n        };\n\n    return function _strategy(params) {\n        this.debug(\"autopair _strategy ---------------------------\");\n        params = params || {};\n        var listA = params.listA;\n        var listB = params.listB;\n        var indexA = 0;\n        var indexB;\n\n        var bestMatch = {\n            score: 0.0,\n            index: null\n        };\n\n        var paired = [];\n        //console.debug( 'params:', JSON.stringify( params, null, '  ' ) );\n        this.debug(\"starting list lens:\", listA.length, listB.length);\n        this.debug(\"bestMatch (starting):\", JSON.stringify(bestMatch, null, \"  \"));\n\n        while (indexA < listA.length) {\n            var matchTo = listA[indexA];\n            bestMatch.score = 0.0;\n\n            for (indexB = 0; indexB < listB.length; indexB++) {\n                var possible = listB[indexB];\n                this.debug(`${indexA}:${matchTo.name}`);\n                this.debug(`${indexB}:${possible.name}`);\n\n                // no matching with self\n                if (listA[indexA] !== listB[indexB]) {\n                    bestMatch = options.match.call(\n                        this,\n                        options.preprocessMatch.call(this, {\n                            matchTo: matchTo,\n                            possible: possible,\n                            index: indexB,\n                            bestMatch: bestMatch\n                        })\n                    );\n                    this.debug(\"bestMatch:\", JSON.stringify(bestMatch, null, \"  \"));\n                    if (bestMatch.score === 1.0) {\n                        this.debug(\"breaking early due to perfect match\");\n                        break;\n                    }\n                }\n            }\n            var scoreThreshold = options.scoreThreshold.call(this);\n            this.debug(\"scoreThreshold:\", scoreThreshold);\n            this.debug(\"bestMatch.score:\", bestMatch.score);\n\n            if (bestMatch.score >= scoreThreshold) {\n                //console.debug( 'autoPairFnBuilder.strategy', listA[ indexA ].name, listB[ bestMatch.index ].name );\n                paired.push(\n                    options.createPair.call(this, {\n                        listA: listA,\n                        indexA: indexA,\n                        listB: listB,\n                        indexB: bestMatch.index\n                    })\n                );\n                //console.debug( 'list lens now:', listA.length, listB.length );\n            } else {\n                indexA += 1;\n            }\n            if (!listA.length || !listB.length) {\n                return paired;\n            }\n        }\n        this.debug(\"paired:\", JSON.stringify(paired, null, \"  \"));\n        this.debug(\"autopair _strategy ---------------------------\");\n        return paired;\n    };\n}\n\n// ============================================================================\n/** An interface for building collections of paired datasets.\n */\nvar PairedCollectionCreator = Backbone.View.extend(baseMVC.LoggableMixin)\n    .extend(baseCreator.CollectionCreatorMixin)\n    .extend({\n        _logNamespace: logNamespace,\n\n        className: \"list-of-pairs-collection-creator collection-creator flex-row-container\",\n\n        /** set up initial options, instance vars, behaviors, and autopair (if set to do so) */\n        initialize: function(attributes) {\n            this.metric(\"PairedCollectionCreator.initialize\", attributes);\n            //this.debug( '-- PairedCollectionCreator:', attributes );\n\n            attributes = _.defaults(attributes, {\n                datasets: [],\n                filters: this.DEFAULT_FILTERS,\n                automaticallyPair: true,\n                strategy: \"lcs\",\n                matchPercentage: 0.9,\n                twoPassAutopairing: true\n            });\n\n            /** unordered, original list */\n            this.initialList = attributes.datasets;\n\n            /** is this from a history? if so, what's its id? */\n            this.historyId = attributes.historyId;\n\n            /** which filters should be used initially? (String[2] or name in commonFilters) */\n            this.filters = this.commonFilters[attributes.filters] || this.commonFilters[this.DEFAULT_FILTERS];\n            if (_.isArray(attributes.filters)) {\n                this.filters = attributes.filters;\n            }\n\n            /** try to auto pair the unpaired datasets on load? */\n            this.automaticallyPair = attributes.automaticallyPair;\n\n            /** what method to use for auto pairing (will be passed aggression level) */\n            this.strategy = this.strategies[attributes.strategy] || this.strategies[this.DEFAULT_STRATEGY];\n            if (_.isFunction(attributes.strategy)) {\n                this.strategy = attributes.strategy;\n            }\n\n            /** distance/mismatch level allowed for autopairing */\n            this.matchPercentage = attributes.matchPercentage;\n\n            /** try to autopair using simple first, then this.strategy on the remainder */\n            this.twoPassAutopairing = attributes.twoPassAutopairing;\n\n            /** remove file extensions (\\.*) from created pair names? */\n            this.removeExtensions = true;\n            //this.removeExtensions = false;\n\n            /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n            this.oncancel = attributes.oncancel;\n            /** fn to call when the collection is created (scoped to this) */\n            this.oncreate = attributes.oncreate;\n\n            /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n            this.autoscrollDist = attributes.autoscrollDist || 24;\n\n            /** is the unpaired panel shown? */\n            this.unpairedPanelHidden = false;\n            /** is the paired panel shown? */\n            this.pairedPanelHidden = false;\n\n            /** DOM elements currently being dragged */\n            this.$dragging = null;\n\n            /** Used for blocking UI events during ajax/operations (don't post twice) */\n            this.blocking = false;\n\n            this._setUpCommonSettings(attributes);\n            this._setUpBehaviors();\n            this._dataSetUp();\n        },\n\n        /** map of common filter pairs by name */\n        commonFilters: {\n            illumina: [\"_1\", \"_2\"],\n            Rs: [\"_R1\", \"_R2\"]\n        },\n        /** which commonFilter to use by default */\n        DEFAULT_FILTERS: \"illumina\",\n\n        /** map of name->fn for autopairing */\n        strategies: {\n            simple: \"autopairSimple\",\n            lcs: \"autopairLCS\",\n            levenshtein: \"autopairLevenshtein\"\n        },\n        /** default autopair strategy name */\n        DEFAULT_STRATEGY: \"lcs\",\n\n        // ------------------------------------------------------------------------ process raw list\n        /** set up main data: cache initialList, sort, and autopair */\n        _dataSetUp: function() {\n            //this.debug( '-- _dataSetUp' );\n\n            this.paired = [];\n            this.unpaired = [];\n\n            this.selectedIds = [];\n\n            // sort initial list, add ids if needed, and save new working copy to unpaired\n            this._sortInitialList();\n            this._ensureIds();\n            this.unpaired = this.initialList.slice(0);\n\n            if (this.automaticallyPair) {\n                this.autoPair();\n                this.once(\"rendered:initial\", function() {\n                    this.trigger(\"autopair\");\n                });\n            }\n        },\n\n        /** sort initial list */\n        _sortInitialList: function() {\n            //this.debug( '-- _sortInitialList' );\n            this._sortDatasetList(this.initialList);\n        },\n\n        /** sort a list of datasets */\n        _sortDatasetList: function(list) {\n            // currently only natural sort by name\n            list.sort((a, b) => naturalSort(a.name, b.name));\n            return list;\n        },\n\n        /** add ids to dataset objs in initial list if none */\n        _ensureIds: function() {\n            this.initialList.forEach(dataset => {\n                if (!dataset.hasOwnProperty(\"id\")) {\n                    dataset.id = _.uniqueId();\n                }\n            });\n            return this.initialList;\n        },\n\n        /** split initial list into two lists, those that pass forward filters & those passing reverse */\n        _splitByFilters: function() {\n            var regexFilters = this.filters.map(stringFilter => new RegExp(stringFilter));\n\n            var split = [[], []];\n\n            function _filter(unpaired, filter) {\n                return filter.test(unpaired.name);\n                //return dataset.name.indexOf( filter ) >= 0;\n            }\n            this.unpaired.forEach(function _filterEach(unpaired) {\n                // 90% of the time this seems to work, but:\n                //TODO: this treats *all* strings as regex which may confuse people - possibly check for // surrounding?\n                //  would need explanation in help as well\n                regexFilters.forEach((filter, i) => {\n                    if (_filter(unpaired, filter)) {\n                        split[i].push(unpaired);\n                    }\n                });\n            });\n            return split;\n        },\n\n        /** add a dataset to the unpaired list in it's proper order */\n        _addToUnpaired: function(dataset) {\n            // currently, unpaired is natural sorted by name, use binary search to find insertion point\n            var binSearchSortedIndex = (low, hi) => {\n                if (low === hi) {\n                    return low;\n                }\n\n                var mid = Math.floor((hi - low) / 2) + low;\n\n                var compared = naturalSort(dataset.name, this.unpaired[mid].name);\n\n                if (compared < 0) {\n                    return binSearchSortedIndex(low, mid);\n                } else if (compared > 0) {\n                    return binSearchSortedIndex(mid + 1, hi);\n                }\n                // walk the equal to find the last\n                while (this.unpaired[mid] && this.unpaired[mid].name === dataset.name) {\n                    mid++;\n                }\n                return mid;\n            };\n\n            this.unpaired.splice(binSearchSortedIndex(0, this.unpaired.length), 0, dataset);\n        },\n\n        // ------------------------------------------------------------------------ auto pairing\n        /** two passes to automatically create pairs:\n         *  use both simpleAutoPair, then the fn mentioned in strategy\n         */\n        autoPair: function(strategy) {\n            // split first using exact matching\n            var split = this._splitByFilters();\n\n            var paired = [];\n            if (this.twoPassAutopairing) {\n                paired = this.autopairSimple({\n                    listA: split[0],\n                    listB: split[1]\n                });\n                split = this._splitByFilters();\n            }\n\n            // uncomment to see printlns while running tests\n            //this.debug = function(){ console.log.apply( console, arguments ); };\n\n            // then try the remainder with something less strict\n            strategy = strategy || this.strategy;\n            split = this._splitByFilters();\n            paired = paired.concat(\n                this[strategy].call(this, {\n                    listA: split[0],\n                    listB: split[1]\n                })\n            );\n            return paired;\n        },\n\n        /** autopair by exact match */\n        autopairSimple: autoPairFnBuilder({\n            scoreThreshold: function() {\n                return 0.6;\n            },\n            match: function _match(params) {\n                params = params || {};\n                if (params.matchTo === params.possible) {\n                    return {\n                        index: params.index,\n                        score: 1.0\n                    };\n                }\n                return params.bestMatch;\n            }\n        }),\n\n        /** autopair by levenshtein edit distance scoring */\n        autopairLevenshtein: autoPairFnBuilder({\n            scoreThreshold: function() {\n                return this.matchPercentage;\n            },\n            match: function _matches(params) {\n                params = params || {};\n\n                var distance = levenshteinDistance(params.matchTo, params.possible);\n\n                var score = 1.0 - distance / Math.max(params.matchTo.length, params.possible.length);\n\n                if (score > params.bestMatch.score) {\n                    return {\n                        index: params.index,\n                        score: score\n                    };\n                }\n                return params.bestMatch;\n            }\n        }),\n\n        /** autopair by longest common substrings scoring */\n        autopairLCS: autoPairFnBuilder({\n            scoreThreshold: function() {\n                return this.matchPercentage;\n            },\n            match: function _matches(params) {\n                params = params || {};\n\n                var match = this._naiveStartingAndEndingLCS(params.matchTo, params.possible).length;\n\n                var score = match / Math.max(params.matchTo.length, params.possible.length);\n\n                if (score > params.bestMatch.score) {\n                    return {\n                        index: params.index,\n                        score: score\n                    };\n                }\n                return params.bestMatch;\n            }\n        }),\n\n        /** return the concat'd longest common prefix and suffix from two strings */\n        _naiveStartingAndEndingLCS: function(s1, s2) {\n            var fwdLCS = \"\";\n            var revLCS = \"\";\n            var i = 0;\n            var j = 0;\n            while (i < s1.length && i < s2.length) {\n                if (s1[i] !== s2[i]) {\n                    break;\n                }\n                fwdLCS += s1[i];\n                i += 1;\n            }\n            if (i === s1.length) {\n                return s1;\n            }\n            if (i === s2.length) {\n                return s2;\n            }\n\n            i = s1.length - 1;\n            j = s2.length - 1;\n            while (i >= 0 && j >= 0) {\n                if (s1[i] !== s2[j]) {\n                    break;\n                }\n                revLCS = [s1[i], revLCS].join(\"\");\n                i -= 1;\n                j -= 1;\n            }\n            return fwdLCS + revLCS;\n        },\n\n        // ------------------------------------------------------------------------ pairing / unpairing\n        /** create a pair from fwd and rev, removing them from unpaired, and placing the new pair in paired */\n        _pair: function(fwd, rev, options) {\n            options = options || {};\n            this.debug(\"_pair:\", fwd, rev);\n            var pair = this._createPair(fwd, rev, options.name);\n            this.paired.push(pair);\n            this.unpaired = _.without(this.unpaired, fwd, rev);\n            if (!options.silent) {\n                this.trigger(\"pair:new\", pair);\n            }\n            return pair;\n        },\n\n        /** create a pair Object from fwd and rev, adding the name attribute (will guess if not given) */\n        _createPair: function(fwd, rev, name) {\n            // ensure existance and don't pair something with itself\n            if (!(fwd && rev) || fwd === rev) {\n                throw new Error(`Bad pairing: ${[JSON.stringify(fwd), JSON.stringify(rev)]}`);\n            }\n            name = name || this._guessNameForPair(fwd, rev);\n            return { forward: fwd, name: name, reverse: rev };\n        },\n\n        /** try to find a good pair name for the given fwd and rev datasets */\n        _guessNameForPair: function(fwd, rev, removeExtensions) {\n            removeExtensions = removeExtensions !== undefined ? removeExtensions : this.removeExtensions;\n            var fwdName = fwd.name;\n            var revName = rev.name;\n\n            var lcs = this._naiveStartingAndEndingLCS(\n                fwdName.replace(new RegExp(this.filters[0]), \"\"),\n                revName.replace(new RegExp(this.filters[1]), \"\")\n            );\n\n            if (removeExtensions) {\n                var lastDotIndex = lcs.lastIndexOf(\".\");\n                if (lastDotIndex > 0) {\n                    var extension = lcs.slice(lastDotIndex, lcs.length);\n                    lcs = lcs.replace(extension, \"\");\n                    fwdName = fwdName.replace(extension, \"\");\n                    revName = revName.replace(extension, \"\");\n                }\n            }\n            return lcs || `${fwdName} & ${revName}`;\n        },\n\n        /** unpair a pair, removing it from paired, and adding the fwd,rev datasets back into unpaired */\n        _unpair: function(pair, options) {\n            options = options || {};\n            if (!pair) {\n                throw new Error(`Bad pair: ${JSON.stringify(pair)}`);\n            }\n            this.paired = _.without(this.paired, pair);\n            this._addToUnpaired(pair.forward);\n            this._addToUnpaired(pair.reverse);\n\n            if (!options.silent) {\n                this.trigger(\"pair:unpair\", [pair]);\n            }\n            return pair;\n        },\n\n        /** unpair all paired datasets */\n        unpairAll: function() {\n            var pairs = [];\n            while (this.paired.length) {\n                pairs.push(this._unpair(this.paired[0], { silent: true }));\n            }\n            this.trigger(\"pair:unpair\", pairs);\n        },\n\n        // ------------------------------------------------------------------------ API\n        /** convert a pair into JSON compatible with the collections API */\n        _pairToJSON: function(pair, src) {\n            src = src || \"hda\";\n            //TODO: consider making this the pair structure when created instead\n            return {\n                collection_type: \"paired\",\n                src: \"new_collection\",\n                name: pair.name,\n                element_identifiers: [\n                    {\n                        name: \"forward\",\n                        id: pair.forward.id,\n                        src: src\n                    },\n                    {\n                        name: \"reverse\",\n                        id: pair.reverse.id,\n                        src: src\n                    }\n                ]\n            };\n        },\n\n        /** create the collection via the API\n         *  @returns {jQuery.xhr Object}    the jquery ajax request\n         */\n        createList: function(name) {\n            var self = this;\n\n            var url = `${Galaxy.root}api/histories/${this.historyId}/contents/dataset_collections`;\n\n            //TODO: use ListPairedCollection.create()\n            var ajaxData = {\n                type: \"dataset_collection\",\n                collection_type: \"list:paired\",\n                hide_source_items: self.hideOriginals || false,\n                name: _.escape(name || self.$(\".collection-name\").val()),\n                element_identifiers: self.paired.map(pair => self._pairToJSON(pair))\n            };\n            //this.debug( JSON.stringify( ajaxData ) );\n            self.blocking = true;\n            return jQuery\n                .ajax(url, {\n                    type: \"POST\",\n                    contentType: \"application/json\",\n                    dataType: \"json\",\n                    data: JSON.stringify(ajaxData)\n                })\n                .always(() => {\n                    self.blocking = false;\n                })\n                .fail((xhr, status, message) => {\n                    self._ajaxErrHandler(xhr, status, message);\n                })\n                .done(function(response, message, xhr) {\n                    //this.info( 'ok', response, message, xhr );\n                    self.trigger(\"collection:created\", response, message, xhr);\n                    self.metric(\"collection:created\", response);\n                    if (typeof self.oncreate === \"function\") {\n                        self.oncreate.call(this, response, message, xhr);\n                    }\n                });\n        },\n\n        /** handle ajax errors with feedback and details to the user (if available) */\n        _ajaxErrHandler: function(xhr, status, message) {\n            this.error(xhr, status, message);\n            var self = this;\n            var content = _l(\"An error occurred while creating this collection\");\n            if (xhr) {\n                if (xhr.readyState === 0 && xhr.status === 0) {\n                    content += `: ${_l(\"Galaxy could not be reached and may be updating.\")}${_l(\n                        \" Try again in a few minutes.\"\n                    )}`;\n                } else if (xhr.responseJSON) {\n                    content += `<br /><pre>${JSON.stringify(xhr.responseJSON)}</pre>`;\n                } else {\n                    content += `: ${message}`;\n                }\n            }\n            self._showAlert(content, \"alert-danger\");\n        },\n\n        // ------------------------------------------------------------------------ rendering\n        /** render the entire interface */\n        render: function(speed, callback) {\n            //this.debug( '-- _render' );\n            //this.$el.empty().html( this.templates.main() );\n            this.$el.empty().html(this.templates.main());\n            this._renderHeader(speed);\n            this._renderMiddle(speed);\n            this._renderFooter(speed);\n            this._addPluginComponents();\n            this.trigger(\"rendered\", this);\n            return this;\n        },\n\n        /** render the header section */\n        _renderHeader: function(speed, callback) {\n            //this.debug( '-- _renderHeader' );\n            var $header = this.$(\".header\")\n                .empty()\n                .html(this.templates.header())\n                .find(\".help-content\")\n                .prepend($(this.templates.helpContent()));\n\n            this._renderFilters();\n            return $header;\n        },\n        /** fill the filter inputs with the filter values */\n        _renderFilters: function() {\n            return this.$(\".forward-column .column-header input\")\n                .val(this.filters[0])\n                .add(this.$(\".reverse-column .column-header input\").val(this.filters[1]));\n        },\n\n        /** render the middle including unpaired and paired sections (which may be hidden) */\n        _renderMiddle: function(speed, callback) {\n            var $middle = this.$(\".middle\")\n                .empty()\n                .html(this.templates.middle());\n\n            // (re-) hide the un/paired panels based on instance vars\n            if (this.unpairedPanelHidden) {\n                this.$(\".unpaired-columns\").hide();\n            } else if (this.pairedPanelHidden) {\n                this.$(\".paired-columns\").hide();\n            }\n\n            this._renderUnpaired();\n            this._renderPaired();\n            return $middle;\n        },\n        /** render the unpaired section, showing datasets accrd. to filters, update the unpaired counts */\n        _renderUnpaired: function(speed, callback) {\n            //this.debug( '-- _renderUnpaired' );\n            var self = this;\n\n            var $fwd;\n            var $rev;\n            var $prd = [];\n            var split = this._splitByFilters();\n            // update unpaired counts\n            this.$(\".forward-column .title\").text([split[0].length, _l(\"unpaired forward\")].join(\" \"));\n            this.$(\".forward-column .unpaired-info\").text(\n                this._renderUnpairedDisplayStr(this.unpaired.length - split[0].length)\n            );\n            this.$(\".reverse-column .title\").text([split[1].length, _l(\"unpaired reverse\")].join(\" \"));\n            this.$(\".reverse-column .unpaired-info\").text(\n                this._renderUnpairedDisplayStr(this.unpaired.length - split[1].length)\n            );\n\n            this.$(\".unpaired-columns .column-datasets\").empty();\n\n            // show/hide the auto pair button if any unpaired are left\n            this.$(\".autopair-link\").toggle(this.unpaired.length !== 0);\n            if (this.unpaired.length === 0) {\n                this._renderUnpairedEmpty();\n                return;\n            }\n\n            // create the dataset dom arrays\n            $rev = split[1].map((dataset, i) => {\n                // if there'll be a fwd dataset across the way, add a button to pair the row\n                if (split[0][i] !== undefined && split[0][i] !== dataset) {\n                    $prd.push(self._renderPairButton());\n                }\n                return self._renderUnpairedDataset(dataset);\n            });\n            $fwd = split[0].map(dataset => self._renderUnpairedDataset(dataset));\n\n            if (!$fwd.length && !$rev.length) {\n                this._renderUnpairedNotShown();\n                return;\n            }\n            // add to appropo cols\n            //TODO: not the best way to render - consider rendering the entire unpaired-columns section in a fragment\n            //  and swapping out that\n            this.$(\".unpaired-columns .forward-column .column-datasets\")\n                .append($fwd)\n                .add(this.$(\".unpaired-columns .paired-column .column-datasets\").append($prd))\n                .add(this.$(\".unpaired-columns .reverse-column .column-datasets\").append($rev));\n            this._adjUnpairedOnScrollbar();\n        },\n        /** return a string to display the count of filtered out datasets */\n        _renderUnpairedDisplayStr: function(numFiltered) {\n            return [\"(\", numFiltered, \" \", _l(\"filtered out\"), \")\"].join(\"\");\n        },\n        /** return an unattached jQuery DOM element to represent an unpaired dataset */\n        _renderUnpairedDataset: function(dataset) {\n            //TODO: to underscore template\n            return (\n                $(\"<li/>\")\n                    .attr(\"id\", `dataset-${dataset.id}`)\n                    .addClass(\"dataset unpaired\")\n                    .attr(\"draggable\", true)\n                    .addClass(dataset.selected ? \"selected\" : \"\")\n                    .append(\n                        $(\"<span/>\")\n                            .addClass(\"dataset-name\")\n                            .text(dataset.name)\n                    )\n                    //??\n                    .data(\"dataset\", dataset)\n            );\n        },\n        /** render the button that may go between unpaired datasets, allowing the user to pair a row */\n        _renderPairButton: function() {\n            //TODO: *not* a dataset - don't pretend like it is\n            return $(\"<li/>\")\n                .addClass(\"dataset unpaired\")\n                .append(\n                    $(\"<span/>\")\n                        .addClass(\"dataset-name\")\n                        .text(_l(\"Pair these datasets\"))\n                );\n        },\n        /** a message to display when no unpaired left */\n        _renderUnpairedEmpty: function() {\n            //this.debug( '-- renderUnpairedEmpty' );\n            var $msg = $('<div class=\"empty-message\"></div>').text(`(${_l(\"no remaining unpaired datasets\")})`);\n            this.$(\".unpaired-columns .paired-column .column-datasets\")\n                .empty()\n                .prepend($msg);\n            return $msg;\n        },\n        /** a message to display when no unpaired can be shown with the current filters */\n        _renderUnpairedNotShown: function() {\n            //this.debug( '-- renderUnpairedEmpty' );\n            var $msg = $('<div class=\"empty-message\"></div>').text(\n                `(${_l(\"no datasets were found matching the current filters\")})`\n            );\n            this.$(\".unpaired-columns .paired-column .column-datasets\")\n                .empty()\n                .prepend($msg);\n            return $msg;\n        },\n        /** try to detect if the unpaired section has a scrollbar and adjust left column for better centering of all */\n        _adjUnpairedOnScrollbar: function() {\n            var $unpairedColumns = this.$(\".unpaired-columns\").last();\n\n            var $firstDataset = this.$(\".unpaired-columns .reverse-column .dataset\").first();\n\n            if (!$firstDataset.length) {\n                return;\n            }\n\n            var ucRight = $unpairedColumns.offset().left + $unpairedColumns.outerWidth();\n\n            var dsRight = $firstDataset.offset().left + $firstDataset.outerWidth();\n\n            var rightDiff = Math.floor(ucRight) - Math.floor(dsRight);\n            //this.debug( 'rightDiff:', ucRight, '-', dsRight, '=', rightDiff );\n            this.$(\".unpaired-columns .forward-column\").css(\"margin-left\", rightDiff > 0 ? rightDiff : 0);\n        },\n\n        /** render the paired section and update counts of paired datasets */\n        _renderPaired: function(speed, callback) {\n            //this.debug( '-- _renderPaired' );\n            this.$(\".paired-column-title .title\").text([this.paired.length, _l(\"paired\")].join(\" \"));\n            // show/hide the unpair all link\n            this.$(\".unpair-all-link\").toggle(this.paired.length !== 0);\n            if (this.paired.length === 0) {\n                this._renderPairedEmpty();\n                return;\n                //TODO: would be best to return here (the $columns)\n            } else {\n                // show/hide 'remove extensions link' when any paired and they seem to have extensions\n                this.$(\".remove-extensions-link\").show();\n            }\n\n            this.$(\".paired-columns .column-datasets\").empty();\n            var self = this;\n            this.paired.forEach((pair, i) => {\n                //TODO: cache these?\n                var pairView = new PairView({ pair: pair });\n                self\n                    .$(\".paired-columns .column-datasets\")\n                    .append(pairView.render().$el)\n                    .append(\n                        [\n                            '<button class=\"unpair-btn\">',\n                            '<span class=\"fa fa-unlink\" title=\"',\n                            _l(\"Unpair\"),\n                            '\"></span>',\n                            \"</button>\"\n                        ].join(\"\")\n                    );\n            });\n        },\n        /** a message to display when none paired */\n        _renderPairedEmpty: function() {\n            var $msg = $('<div class=\"empty-message\"></div>').text(`(${_l(\"no paired datasets yet\")})`);\n            this.$(\".paired-columns .column-datasets\")\n                .empty()\n                .prepend($msg);\n            return $msg;\n        },\n\n        footerSettings: {\n            \".hide-originals\": \"hideOriginals\",\n            \".remove-extensions\": \"removeExtensions\"\n        },\n\n        /** add any jQuery/bootstrap/custom plugins to elements rendered */\n        _addPluginComponents: function() {\n            this._chooseFiltersPopover(\".choose-filters-link\");\n            this.$(\".help-content i\").hoverhighlight(\".collection-creator\", \"rgba( 64, 255, 255, 1.0 )\");\n        },\n\n        /** build a filter selection popover allowing selection of common filter pairs */\n        _chooseFiltersPopover: function(selector) {\n            function filterChoice(val1, val2) {\n                return [\n                    '<button class=\"filter-choice btn\" ',\n                    'data-forward=\"',\n                    val1,\n                    '\" data-reverse=\"',\n                    val2,\n                    '\">',\n                    _l(\"Forward\"),\n                    \": \",\n                    val1,\n                    \", \",\n                    _l(\"Reverse\"),\n                    \": \",\n                    val2,\n                    \"</button>\"\n                ].join(\"\");\n            }\n            var $popoverContent = $(\n                _.template(\n                    [\n                        '<div class=\"choose-filters\">',\n                        '<div class=\"help\">',\n                        _l(\"Choose from the following filters to change which unpaired reads are shown in the display\"),\n                        \":</div>\",\n                        _.values(this.commonFilters)\n                            .map(filterSet => filterChoice(filterSet[0], filterSet[1]))\n                            .join(\"\"),\n                        \"</div>\"\n                    ].join(\"\")\n                )({})\n            );\n\n            return this.$(selector).popover({\n                container: \".collection-creator\",\n                placement: \"bottom\",\n                html: true,\n                //animation   : false,\n                content: $popoverContent\n            });\n        },\n\n        /** add (or clear if clear is truthy) a validation warning to what */\n        _validationWarning: function(what, clear) {\n            var VALIDATION_CLASS = \"validation-warning\";\n            if (what === \"name\") {\n                what = this.$(\".collection-name\").add(this.$(\".collection-name-prompt\"));\n                this.$(\".collection-name\")\n                    .focus()\n                    .select();\n            }\n            if (clear) {\n                what = what || this.$(`.${VALIDATION_CLASS}`);\n                what.removeClass(VALIDATION_CLASS);\n            } else {\n                what.addClass(VALIDATION_CLASS);\n            }\n        },\n\n        // ------------------------------------------------------------------------ events\n        /** set up event handlers on self */\n        _setUpBehaviors: function() {\n            this.once(\"rendered\", function() {\n                this.trigger(\"rendered:initial\", this);\n            });\n\n            this.on(\"pair:new\", function() {\n                //TODO: ideally only re-render the columns (or even elements) involved\n                this._renderUnpaired();\n                this._renderPaired();\n\n                // scroll to bottom where new pairs are added\n                //TODO: this doesn't seem to work - innerHeight sticks at 133...\n                //  may have to do with improper flex columns\n                //var $pairedView = this.$( '.paired-columns' );\n                //$pairedView.scrollTop( $pairedView.innerHeight() );\n                //this.debug( $pairedView.height() )\n                this.$(\".paired-columns\").scrollTop(8000000);\n            });\n            this.on(\"pair:unpair\", function(pairs) {\n                //TODO: ideally only re-render the columns (or even elements) involved\n                this._renderUnpaired();\n                this._renderPaired();\n                this.splitView();\n            });\n\n            this.on(\"filter-change\", function() {\n                this.filters = [\n                    this.$(\".forward-unpaired-filter input\").val(),\n                    this.$(\".reverse-unpaired-filter input\").val()\n                ];\n                this.metric(\"filter-change\", this.filters);\n                this._renderFilters();\n                this._renderUnpaired();\n            });\n\n            this.on(\"autopair\", function() {\n                this._renderUnpaired();\n                this._renderPaired();\n\n                var message;\n                var msgClass = null;\n                if (this.paired.length) {\n                    msgClass = \"alert-success\";\n                    message = `${this.paired.length} ${_l(\"pairs created\")}`;\n                    if (!this.unpaired.length) {\n                        message += `: ${_l(\"all datasets have been successfully paired\")}`;\n                        this.hideUnpaired();\n                        this.$(\".collection-name\").focus();\n                    }\n                } else {\n                    message = _l(\n                        [\n                            \"Could not automatically create any pairs from the given dataset names.\",\n                            \"You may want to choose or enter different filters and try auto-pairing again.\",\n                            \"Close this message using the X on the right to view more help.\"\n                        ].join(\" \")\n                    );\n                }\n                this._showAlert(message, msgClass);\n            });\n\n            //this.on( 'all', function(){\n            //    this.info( arguments );\n            //});\n            return this;\n        },\n\n        events: {\n            // header\n            \"click .more-help\": \"_clickMoreHelp\",\n            \"click .less-help\": \"_clickLessHelp\",\n            \"click .main-help\": \"_toggleHelp\",\n            \"click .header .alert button\": \"_hideAlert\",\n            \"click .forward-column .column-title\": \"_clickShowOnlyUnpaired\",\n            \"click .reverse-column .column-title\": \"_clickShowOnlyUnpaired\",\n            \"click .unpair-all-link\": \"_clickUnpairAll\",\n            //TODO: this seems kinda backasswards - re-sending jq event as a backbone event, can we listen directly?\n            \"change .forward-unpaired-filter input\": function(ev) {\n                this.trigger(\"filter-change\");\n            },\n            \"focus .forward-unpaired-filter input\": function(ev) {\n                $(ev.currentTarget).select();\n            },\n            \"click .autopair-link\": \"_clickAutopair\",\n            \"click .choose-filters .filter-choice\": \"_clickFilterChoice\",\n            \"click .clear-filters-link\": \"_clearFilters\",\n            \"change .reverse-unpaired-filter input\": function(ev) {\n                this.trigger(\"filter-change\");\n            },\n            \"focus .reverse-unpaired-filter input\": function(ev) {\n                $(ev.currentTarget).select();\n            },\n            // unpaired\n            \"click .forward-column .dataset.unpaired\": \"_clickUnpairedDataset\",\n            \"click .reverse-column .dataset.unpaired\": \"_clickUnpairedDataset\",\n            \"click .paired-column .dataset.unpaired\": \"_clickPairRow\",\n            \"click .unpaired-columns\": \"clearSelectedUnpaired\",\n            \"mousedown .unpaired-columns .dataset\": \"_mousedownUnpaired\",\n            // divider\n            \"click .paired-column-title\": \"_clickShowOnlyPaired\",\n            \"mousedown .flexible-partition-drag\": \"_startPartitionDrag\",\n            // paired\n            \"click .paired-columns .dataset.paired\": \"selectPair\",\n            \"click .paired-columns\": \"clearSelectedPaired\",\n            \"click .paired-columns .pair-name\": \"_clickPairName\",\n            \"click .unpair-btn\": \"_clickUnpair\",\n            // paired - drop target\n            //'dragenter .paired-columns'                 : '_dragenterPairedColumns',\n            //'dragleave .paired-columns .column-datasets': '_dragleavePairedColumns',\n            \"dragover .paired-columns .column-datasets\": \"_dragoverPairedColumns\",\n            \"drop .paired-columns .column-datasets\": \"_dropPairedColumns\",\n\n            \"pair.dragstart .paired-columns .column-datasets\": \"_pairDragstart\",\n            \"pair.dragend   .paired-columns .column-datasets\": \"_pairDragend\",\n\n            // footer\n            \"change .remove-extensions\": function(ev) {\n                this.toggleExtensions();\n            },\n            \"change .collection-name\": \"_changeName\",\n            \"keydown .collection-name\": \"_nameCheckForEnter\",\n            \"change .hide-originals\": \"_changeHideOriginals\",\n            \"click .cancel-create\": \"_cancelCreate\",\n            \"click .create-collection\": \"_clickCreate\" //,\n        },\n\n        /** toggle between showing only unpaired and split view */\n        _clickShowOnlyUnpaired: function(ev) {\n            //this.debug( 'click unpaired', ev.currentTarget );\n            if (this.$(\".paired-columns\").is(\":visible\")) {\n                this.hidePaired();\n            } else {\n                this.splitView();\n            }\n        },\n        /** toggle between showing only paired and split view */\n        _clickShowOnlyPaired: function(ev) {\n            //this.debug( 'click paired' );\n            if (this.$(\".unpaired-columns\").is(\":visible\")) {\n                this.hideUnpaired();\n            } else {\n                this.splitView();\n            }\n        },\n\n        /** hide unpaired, show paired */\n        hideUnpaired: function(speed, callback) {\n            this.unpairedPanelHidden = true;\n            this.pairedPanelHidden = false;\n            this._renderMiddle(speed, callback);\n        },\n        /** hide paired, show unpaired */\n        hidePaired: function(speed, callback) {\n            this.unpairedPanelHidden = false;\n            this.pairedPanelHidden = true;\n            this._renderMiddle(speed, callback);\n        },\n        /** show both paired and unpaired (splitting evenly) */\n        splitView: function(speed, callback) {\n            this.unpairedPanelHidden = this.pairedPanelHidden = false;\n            this._renderMiddle(speed, callback);\n            return this;\n        },\n\n        /** unpair all paired and do other super neat stuff which I'm not really sure about yet... */\n        _clickUnpairAll: function(ev) {\n            this.metric(\"unpairAll\");\n            this.unpairAll();\n        },\n\n        /** attempt to autopair */\n        _clickAutopair: function(ev) {\n            var paired = this.autoPair();\n            this.metric(\"autopair\", paired.length, this.unpaired.length);\n            this.trigger(\"autopair\");\n        },\n\n        /** set the filters based on the data attributes of the button click target */\n        _clickFilterChoice: function(ev) {\n            var $selected = $(ev.currentTarget);\n            this.$(\".forward-unpaired-filter input\").val($selected.data(\"forward\"));\n            this.$(\".reverse-unpaired-filter input\").val($selected.data(\"reverse\"));\n            this._hideChooseFilters();\n            this.trigger(\"filter-change\");\n        },\n\n        /** hide the choose filters popover */\n        _hideChooseFilters: function() {\n            //TODO: update bootstrap and remove the following hack\n            //  see also: https://github.com/twbs/bootstrap/issues/10260\n            this.$(\".choose-filters-link\").popover(\"hide\");\n            this.$(\".popover\").css(\"display\", \"none\");\n        },\n\n        /** clear both filters */\n        _clearFilters: function(ev) {\n            this.$(\".forward-unpaired-filter input\").val(\"\");\n            this.$(\".reverse-unpaired-filter input\").val(\"\");\n            this.trigger(\"filter-change\");\n        },\n\n        // ........................................................................ unpaired\n        /** select an unpaired dataset */\n        _clickUnpairedDataset: function(ev) {\n            ev.stopPropagation();\n            return this.toggleSelectUnpaired($(ev.currentTarget));\n        },\n\n        /** Toggle the selection of an unpaired dataset representation.\n         *  @param [jQuery] $dataset        the unpaired dataset dom rep to select\n         *  @param [Boolean] options.force  if defined, force selection based on T/F; otherwise, toggle\n         */\n        toggleSelectUnpaired: function($dataset, options) {\n            options = options || {};\n            var dataset = $dataset.data(\"dataset\");\n\n            var select = options.force !== undefined ? options.force : !$dataset.hasClass(\"selected\");\n\n            //this.debug( id, options.force, $dataset, dataset );\n            if (!$dataset.length || dataset === undefined) {\n                return $dataset;\n            }\n\n            if (select) {\n                $dataset.addClass(\"selected\");\n                if (!options.waitToPair) {\n                    this.pairAllSelected();\n                }\n            } else {\n                $dataset.removeClass(\"selected\");\n                //delete dataset.selected;\n            }\n            return $dataset;\n        },\n\n        /** pair all the currently selected unpaired datasets */\n        pairAllSelected: function(options) {\n            options = options || {};\n            var self = this;\n            var fwds = [];\n            var revs = [];\n            var pairs = [];\n            self.$(\".unpaired-columns .forward-column .dataset.selected\").each(function() {\n                fwds.push($(this).data(\"dataset\"));\n            });\n            self.$(\".unpaired-columns .reverse-column .dataset.selected\").each(function() {\n                revs.push($(this).data(\"dataset\"));\n            });\n            fwds.length = revs.length = Math.min(fwds.length, revs.length);\n            //this.debug( fwds );\n            //this.debug( revs );\n            fwds.forEach((fwd, i) => {\n                try {\n                    pairs.push(self._pair(fwd, revs[i], { silent: true }));\n                } catch (err) {\n                    //TODO: preserve selected state of those that couldn't be paired\n                    //TODO: warn that some could not be paired\n                    self.error(err);\n                }\n            });\n            if (pairs.length && !options.silent) {\n                this.trigger(\"pair:new\", pairs);\n            }\n            return pairs;\n        },\n\n        /** clear the selection on all unpaired datasets */\n        clearSelectedUnpaired: function() {\n            this.$(\".unpaired-columns .dataset.selected\").removeClass(\"selected\");\n        },\n\n        /** when holding down the shift key on a click, 'paint' the moused over datasets as selected */\n        _mousedownUnpaired: function(ev) {\n            if (ev.shiftKey) {\n                var self = this;\n                var $startTarget = $(ev.target).addClass(\"selected\");\n\n                var moveListener = ev => {\n                    self\n                        .$(ev.target)\n                        .filter(\".dataset\")\n                        .addClass(\"selected\");\n                };\n\n                $startTarget.parent().on(\"mousemove\", moveListener);\n\n                // on any mouseup, stop listening to the move and try to pair any selected\n                $(document).one(\"mouseup\", ev => {\n                    $startTarget.parent().off(\"mousemove\", moveListener);\n                    self.pairAllSelected();\n                });\n            }\n        },\n\n        /** attempt to pair two datasets directly across from one another */\n        _clickPairRow: function(ev) {\n            //if( !ev.currentTarget ){ return true; }\n            var rowIndex = $(ev.currentTarget).index();\n\n            var fwd = $(\".unpaired-columns .forward-column .dataset\")\n                .eq(rowIndex)\n                .data(\"dataset\");\n\n            var rev = $(\".unpaired-columns .reverse-column .dataset\")\n                .eq(rowIndex)\n                .data(\"dataset\");\n\n            //this.debug( 'row:', rowIndex, fwd, rev );\n            this._pair(fwd, rev);\n        },\n\n        // ........................................................................ divider/partition\n        /** start dragging the visible divider/partition between unpaired and paired panes */\n        _startPartitionDrag: function(ev) {\n            var self = this;\n            var startingY = ev.pageY;\n            //this.debug( 'partition drag START:', ev );\n            $(\"body\").css(\"cursor\", \"ns-resize\");\n            self.$(\".flexible-partition-drag\").css(\"color\", \"black\");\n\n            function endDrag(ev) {\n                self.$(\".flexible-partition-drag\").css(\"color\", \"\");\n                $(\"body\")\n                    .css(\"cursor\", \"\")\n                    .unbind(\"mousemove\", trackMouse);\n            }\n            function trackMouse(ev) {\n                var offset = ev.pageY - startingY;\n                if (!self.adjPartition(offset)) {\n                    $(\"body\").trigger(\"mouseup\");\n                }\n                self._adjUnpairedOnScrollbar();\n                startingY += offset;\n            }\n            $(\"body\").mousemove(trackMouse);\n            $(\"body\").one(\"mouseup\", endDrag);\n        },\n\n        /** adjust the parition up/down +/-adj pixels */\n        adjPartition: function(adj) {\n            var $unpaired = this.$(\".unpaired-columns\");\n            var $paired = this.$(\".paired-columns\");\n            var unpairedHi = parseInt($unpaired.css(\"height\"), 10);\n            var pairedHi = parseInt($paired.css(\"height\"), 10);\n            //this.debug( adj, 'hi\\'s:', unpairedHi, pairedHi, unpairedHi + adj, pairedHi - adj );\n\n            unpairedHi = Math.max(10, unpairedHi + adj);\n            pairedHi = pairedHi - adj;\n\n            var movingUpwards = adj < 0;\n            // when the divider gets close to the top - lock into hiding the unpaired section\n            if (movingUpwards) {\n                if (this.unpairedPanelHidden) {\n                    return false;\n                } else if (unpairedHi <= 10) {\n                    this.hideUnpaired();\n                    return false;\n                }\n            } else {\n                if (this.unpairedPanelHidden) {\n                    $unpaired.show();\n                    this.unpairedPanelHidden = false;\n                }\n            }\n\n            // when the divider gets close to the bottom - lock into hiding the paired section\n            if (!movingUpwards) {\n                if (this.pairedPanelHidden) {\n                    return false;\n                } else if (pairedHi <= 15) {\n                    this.hidePaired();\n                    return false;\n                }\n            } else {\n                if (this.pairedPanelHidden) {\n                    $paired.show();\n                    this.pairedPanelHidden = false;\n                }\n            }\n\n            $unpaired.css({\n                height: `${unpairedHi}px`,\n                flex: \"0 0 auto\"\n            });\n            return true;\n        },\n\n        // ........................................................................ paired\n        /** select a pair when clicked */\n        selectPair: function(ev) {\n            ev.stopPropagation();\n            $(ev.currentTarget).toggleClass(\"selected\");\n        },\n\n        /** deselect all pairs */\n        clearSelectedPaired: function(ev) {\n            this.$(\".paired-columns .dataset.selected\").removeClass(\"selected\");\n        },\n\n        /** rename a pair when the pair name is clicked */\n        _clickPairName: function(ev) {\n            ev.stopPropagation();\n            var $name = $(ev.currentTarget);\n            var $pair = $name.parent().parent();\n            var index = $pair.index(\".dataset.paired\");\n            var pair = this.paired[index];\n            var response = prompt(\"Enter a new name for the pair:\", pair.name);\n            if (response) {\n                pair.name = response;\n                // set a flag (which won't be passed in json creation) for manual naming so we don't overwrite these\n                //  when adding/removing extensions\n                //hackish\n                pair.customizedName = true;\n                $name.text(pair.name);\n            }\n        },\n\n        /** unpair this pair */\n        _clickUnpair: function(ev) {\n            //if( !ev.currentTarget ){ return true; }\n            var pairIndex = Math.floor($(ev.currentTarget).index(\".unpair-btn\"));\n            //this.debug( 'pair:', pairIndex );\n            this._unpair(this.paired[pairIndex]);\n        },\n\n        // ........................................................................ paired - drag and drop re-ordering\n        //_dragenterPairedColumns : function( ev ){\n        //    this.debug( '_dragenterPairedColumns:', ev );\n        //},\n        //_dragleavePairedColumns : function( ev ){\n        //    //this.debug( '_dragleavePairedColumns:', ev );\n        //},\n        /** track the mouse drag over the paired list adding a placeholder to show where the drop would occur */\n        _dragoverPairedColumns: function(ev) {\n            //this.debug( '_dragoverPairedColumns:', ev );\n            ev.preventDefault();\n\n            var $list = this.$(\".paired-columns .column-datasets\");\n            this._checkForAutoscroll($list, ev.originalEvent.clientY);\n            //this.debug( ev.originalEvent.clientX, ev.originalEvent.clientY );\n            var $nearest = this._getNearestPairedDatasetLi(ev.originalEvent.clientY);\n\n            $(\".element-drop-placeholder\").remove();\n            var $placeholder = $('<div class=\"element-drop-placeholder\"></div>');\n            if (!$nearest.length) {\n                $list.append($placeholder);\n            } else {\n                $nearest.before($placeholder);\n            }\n        },\n\n        /** If the mouse is near enough to the list's top or bottom, scroll the list */\n        _checkForAutoscroll: function($element, y) {\n            var AUTOSCROLL_SPEED = 2;\n            var offset = $element.offset();\n            var scrollTop = $element.scrollTop();\n            var upperDist = y - offset.top;\n            var lowerDist = offset.top + $element.outerHeight() - y;\n            //this.debug( '_checkForAutoscroll:', scrollTop, upperDist, lowerDist );\n            if (upperDist >= 0 && upperDist < this.autoscrollDist) {\n                $element.scrollTop(scrollTop - AUTOSCROLL_SPEED);\n            } else if (lowerDist >= 0 && lowerDist < this.autoscrollDist) {\n                $element.scrollTop(scrollTop + AUTOSCROLL_SPEED);\n            }\n        },\n\n        /** get the nearest *previous* paired dataset PairView based on the mouse's Y coordinate.\n         *      If the y is at the end of the list, return an empty jQuery object.\n         */\n        _getNearestPairedDatasetLi: function(y) {\n            var WIGGLE = 4;\n            var lis = this.$(\".paired-columns .column-datasets li\").toArray();\n            for (var i = 0; i < lis.length; i++) {\n                var $li = $(lis[i]);\n                var top = $li.offset().top;\n                var halfHeight = Math.floor($li.outerHeight() / 2) + WIGGLE;\n                if (top + halfHeight > y && top - halfHeight < y) {\n                    //this.debug( y, top + halfHeight, top - halfHeight )\n                    return $li;\n                }\n            }\n            return $();\n        },\n        /** drop (dragged/selected PairViews) onto the list, re-ordering both the DOM and the internal array of pairs */\n        _dropPairedColumns: function(ev) {\n            // both required for firefox\n            ev.preventDefault();\n            ev.dataTransfer.dropEffect = \"move\";\n\n            var $nearest = this._getNearestPairedDatasetLi(ev.originalEvent.clientY);\n            if ($nearest.length) {\n                this.$dragging.insertBefore($nearest);\n            } else {\n                // no nearest before - insert after last element (unpair button)\n                this.$dragging.insertAfter(this.$(\".paired-columns .unpair-btn\").last());\n            }\n            // resync the creator's list of paired based on the new DOM order\n            this._syncPairsToDom();\n            return false;\n        },\n        /** resync the creator's list of paired based on the DOM order of pairs */\n        _syncPairsToDom: function() {\n            var newPaired = [];\n            //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n            this.$(\".paired-columns .dataset.paired\").each(function() {\n                newPaired.push($(this).data(\"pair\"));\n            });\n            //this.debug( newPaired );\n            this.paired = newPaired;\n            this._renderPaired();\n        },\n        /** drag communication with pair sub-views: dragstart */\n        _pairDragstart: function(ev, pair) {\n            //this.debug( '_pairDragstart', ev, pair )\n            // auto select the pair causing the event and move all selected\n            pair.$el.addClass(\"selected\");\n            var $selected = this.$(\".paired-columns .dataset.selected\");\n            this.$dragging = $selected;\n        },\n        /** drag communication with pair sub-views: dragend - remove the placeholder */\n        _pairDragend: function(ev, pair) {\n            //this.debug( '_pairDragend', ev, pair )\n            $(\".element-drop-placeholder\").remove();\n            this.$dragging = null;\n        },\n\n        // ........................................................................ footer\n        toggleExtensions: function(force) {\n            var self = this;\n            self.removeExtensions = force !== undefined ? force : !self.removeExtensions;\n\n            _.each(self.paired, pair => {\n                // don't overwrite custom names\n                if (pair.customizedName) {\n                    return;\n                }\n                pair.name = self._guessNameForPair(pair.forward, pair.reverse);\n            });\n\n            self._renderPaired();\n            self._renderFooter();\n        },\n\n        // ------------------------------------------------------------------------ misc\n        /** debug a dataset list */\n        _printList: function(list) {\n            var self = this;\n            _.each(list, e => {\n                if (list === self.paired) {\n                    self._printPair(e);\n                } else {\n                    self.debug(e);\n                }\n            });\n        },\n\n        /** print a pair Object */\n        _printPair: function(pair) {\n            this.debug(pair.forward.name, pair.reverse.name, \": ->\", pair.name);\n        },\n\n        /** string rep */\n        toString: function() {\n            return \"PairedCollectionCreator\";\n        },\n\n        templates: _.extend({}, baseCreator.CollectionCreatorMixin._creatorTemplates, {\n            /** the header (not including help text) */\n            header: _.template(\n                [\n                    '<div class=\"main-help well clear\">',\n                    '<a class=\"more-help\" href=\"javascript:void(0);\">',\n                    _l(\"More help\"),\n                    \"</a>\",\n                    '<div class=\"help-content\">',\n                    '<a class=\"less-help\" href=\"javascript:void(0);\">',\n                    _l(\"Less\"),\n                    \"</a>\",\n                    \"</div>\",\n                    \"</div>\",\n                    '<div class=\"alert alert-dismissable\">',\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>',\n                    '<span class=\"alert-message\"></span>',\n                    \"</div>\",\n\n                    '<div class=\"column-headers vertically-spaced flex-column-container\">',\n                    '<div class=\"forward-column flex-column column\">',\n                    '<div class=\"column-header\">',\n                    '<div class=\"column-title\">',\n                    '<span class=\"title\">',\n                    _l(\"Unpaired forward\"),\n                    \"</span>\",\n                    '<span class=\"title-info unpaired-info\"></span>',\n                    \"</div>\",\n                    '<div class=\"unpaired-filter forward-unpaired-filter pull-left\">',\n                    '<input class=\"search-query\" placeholder=\"',\n                    _l(\"Filter this list\"),\n                    '\" />',\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\",\n                    '<div class=\"paired-column flex-column no-flex column\">',\n                    '<div class=\"column-header\">',\n                    '<a class=\"choose-filters-link\" href=\"javascript:void(0)\">',\n                    _l(\"Choose filters\"),\n                    \"</a>\",\n                    '<a class=\"clear-filters-link\" href=\"javascript:void(0);\">',\n                    _l(\"Clear filters\"),\n                    \"</a><br />\",\n                    '<a class=\"autopair-link\" href=\"javascript:void(0);\">',\n                    _l(\"Auto-pair\"),\n                    \"</a>\",\n                    \"</div>\",\n                    \"</div>\",\n                    '<div class=\"reverse-column flex-column column\">',\n                    '<div class=\"column-header\">',\n                    '<div class=\"column-title\">',\n                    '<span class=\"title\">',\n                    _l(\"Unpaired reverse\"),\n                    \"</span>\",\n                    '<span class=\"title-info unpaired-info\"></span>',\n                    \"</div>\",\n                    '<div class=\"unpaired-filter reverse-unpaired-filter pull-left\">',\n                    '<input class=\"search-query\" placeholder=\"',\n                    _l(\"Filter this list\"),\n                    '\" />',\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            /** the middle: unpaired, divider, and paired */\n            middle: _.template(\n                [\n                    // contains two flex rows (rows that fill available space) and a divider btwn\n                    '<div class=\"unpaired-columns flex-column-container scroll-container flex-row\">',\n                    '<div class=\"forward-column flex-column column\">',\n                    '<ol class=\"column-datasets\"></ol>',\n                    \"</div>\",\n                    '<div class=\"paired-column flex-column no-flex column\">',\n                    '<ol class=\"column-datasets\"></ol>',\n                    \"</div>\",\n                    '<div class=\"reverse-column flex-column column\">',\n                    '<ol class=\"column-datasets\"></ol>',\n                    \"</div>\",\n                    \"</div>\",\n                    '<div class=\"flexible-partition\">',\n                    '<div class=\"flexible-partition-drag\" title=\"',\n                    _l(\"Drag to change\"),\n                    '\"></div>',\n                    '<div class=\"column-header\">',\n                    '<div class=\"column-title paired-column-title\">',\n                    '<span class=\"title\"></span>',\n                    \"</div>\",\n                    '<a class=\"unpair-all-link\" href=\"javascript:void(0);\">',\n                    _l(\"Unpair all\"),\n                    \"</a>\",\n                    \"</div>\",\n                    \"</div>\",\n                    '<div class=\"paired-columns flex-column-container scroll-container flex-row\">',\n                    '<ol class=\"column-datasets\"></ol>',\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            /** creation and cancel controls */\n            footer: _.template(\n                [\n                    '<div class=\"attributes clear\">',\n                    '<div class=\"clear\">',\n                    '<label class=\"setting-prompt pull-right\">',\n                    _l(\"Hide original elements\"),\n                    \"?\",\n                    '<input class=\"hide-originals pull-right\" type=\"checkbox\" />',\n                    \"</label>\",\n                    '<label class=\"setting-prompt pull-right\">',\n                    _l(\"Remove file extensions from pair names\"),\n                    \"?\",\n                    '<input class=\"remove-extensions pull-right\" type=\"checkbox\" />',\n                    \"</label>\",\n                    \"</div>\",\n                    '<div class=\"clear\">',\n                    '<input class=\"collection-name form-control pull-right\" ',\n                    'placeholder=\"',\n                    _l(\"Enter a name for your new list\"),\n                    '\" />',\n                    '<div class=\"collection-name-prompt pull-right\">',\n                    _l(\"Name\"),\n                    \":</div>\",\n                    \"</div>\",\n                    \"</div>\",\n\n                    '<div class=\"actions clear vertically-spaced\">',\n                    '<div class=\"other-options pull-left\">',\n                    '<button class=\"cancel-create btn\" tabindex=\"-1\">',\n                    _l(\"Cancel\"),\n                    \"</button>\",\n                    '<div class=\"create-other btn-group dropup\">',\n                    '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                    _l(\"Create a different kind of collection\"),\n                    ' <span class=\"caret\"></span>',\n                    \"</button>\",\n                    '<ul class=\"dropdown-menu\" role=\"menu\">',\n                    '<li><a href=\"#\">',\n                    _l(\"Create a <i>single</i> pair\"),\n                    \"</a></li>\",\n                    '<li><a href=\"#\">',\n                    _l(\"Create a list of <i>unpaired</i> datasets\"),\n                    \"</a></li>\",\n                    \"</ul>\",\n                    \"</div>\",\n                    \"</div>\",\n\n                    '<div class=\"main-options pull-right\">',\n                    '<button class=\"create-collection btn btn-primary\">',\n                    _l(\"Create list\"),\n                    \"</button>\",\n                    \"</div>\",\n                    \"</div>\"\n                ].join(\"\")\n            ),\n\n            /** help content */\n            helpContent: _.template(\n                [\n                    \"<p>\",\n                    _l(\n                        [\n                            \"Collections of paired datasets are ordered lists of dataset pairs (often forward and reverse reads). \",\n                            \"These collections can be passed to tools and workflows in order to have analyses done on each member of \",\n                            \"the entire group. This interface allows you to create a collection, choose which datasets are paired, \",\n                            \"and re-order the final collection.\"\n                        ].join(\"\")\n                    ),\n                    \"</p>\",\n                    \"<p>\",\n                    _l(\n                        [\n                            'Unpaired datasets are shown in the <i data-target=\".unpaired-columns\">unpaired section</i> ',\n                            \"(hover over the underlined words to highlight below). \",\n                            'Paired datasets are shown in the <i data-target=\".paired-columns\">paired section</i>.',\n                            \"<ul>To pair datasets, you can:\",\n                            \"<li>Click a dataset in the \",\n                            '<i data-target=\".unpaired-columns .forward-column .column-datasets,',\n                            '.unpaired-columns .forward-column\">forward column</i> ',\n                            \"to select it then click a dataset in the \",\n                            '<i data-target=\".unpaired-columns .reverse-column .column-datasets,',\n                            '.unpaired-columns .reverse-column\">reverse column</i>.',\n                            \"</li>\",\n                            '<li>Click one of the \"Pair these datasets\" buttons in the ',\n                            '<i data-target=\".unpaired-columns .paired-column .column-datasets,',\n                            '.unpaired-columns .paired-column\">middle column</i> ',\n                            \"to pair the datasets in a particular row.\",\n                            \"</li>\",\n                            '<li>Click <i data-target=\".autopair-link\">\"Auto-pair\"</i> ',\n                            \"to have your datasets automatically paired based on name.\",\n                            \"</li>\",\n                            \"</ul>\"\n                        ].join(\"\")\n                    ),\n                    \"</p>\",\n                    \"<p>\",\n                    _l(\n                        [\n                            \"<ul>You can filter what is shown in the unpaired sections by:\",\n                            \"<li>Entering partial dataset names in either the \",\n                            '<i data-target=\".forward-unpaired-filter input\">forward filter</i> or ',\n                            '<i data-target=\".reverse-unpaired-filter input\">reverse filter</i>.',\n                            \"</li>\",\n                            \"<li>Choosing from a list of preset filters by clicking the \",\n                            '<i data-target=\".choose-filters-link\">\"Choose filters\" link</i>.',\n                            \"</li>\",\n                            \"<li>Entering regular expressions to match dataset names. See: \",\n                            '<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\"',\n                            ' target=\"_blank\">MDN\\'s JavaScript Regular Expression Tutorial</a>. ',\n                            \"Note: forward slashes (\\\\) are not needed.\",\n                            \"</li>\",\n                            \"<li>Clearing the filters by clicking the \",\n                            '<i data-target=\".clear-filters-link\">\"Clear filters\" link</i>.',\n                            \"</li>\",\n                            \"</ul>\"\n                        ].join(\"\")\n                    ),\n                    \"</p>\",\n                    \"<p>\",\n                    _l(\n                        [\n                            \"To unpair individual dataset pairs, click the \",\n                            '<i data-target=\".unpair-btn\">unpair buttons ( <span class=\"fa fa-unlink\"></span> )</i>. ',\n                            'Click the <i data-target=\".unpair-all-link\">\"Unpair all\" link</i> to unpair all pairs.'\n                        ].join(\"\")\n                    ),\n                    \"</p>\",\n                    \"<p>\",\n                    _l(\n                        [\n                            'You can include or remove the file extensions (e.g. \".fastq\") from your pair names by toggling the ',\n                            '<i data-target=\".remove-extensions-prompt\">\"Remove file extensions from pair names?\"</i> control.'\n                        ].join(\"\")\n                    ),\n                    \"</p>\",\n                    \"<p>\",\n                    _l(\n                        [\n                            'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n                            'click <i data-target=\".create-collection\">\"Create list\"</i>. ',\n                            \"(Note: you do not have to pair all unpaired datasets to finish.)\"\n                        ].join(\"\")\n                    ),\n                    \"</p>\"\n                ].join(\"\")\n            )\n        })\n    });\n\n//=============================================================================\n/** a modal version of the paired collection creator */\nvar pairedCollectionCreatorModal = function _pairedCollectionCreatorModal(datasets, options) {\n    var deferred = jQuery.Deferred();\n    var creator;\n\n    options = _.defaults(options || {}, {\n        datasets: datasets,\n        oncancel: function() {\n            Galaxy.modal.hide();\n            deferred.reject(\"cancelled\");\n        },\n        oncreate: function(creator, response) {\n            Galaxy.modal.hide();\n            deferred.resolve(response);\n        }\n    });\n\n    if (!window.Galaxy || !Galaxy.modal) {\n        throw new Error(\"Galaxy or Galaxy.modal not found\");\n    }\n\n    creator = new PairedCollectionCreator(options);\n    Galaxy.modal.show({\n        title: \"Create a collection of paired datasets\",\n        body: creator.$el,\n        width: \"80%\",\n        height: \"800px\",\n        closing_events: true\n    });\n    creator.render();\n    window.creator = creator;\n\n    //TODO: remove modal header\n    return deferred;\n};\n\n//=============================================================================\nfunction createListOfPairsCollection(collection, defaultHideSourceItems) {\n    var elements = collection.toJSON();\n    //TODO: validate elements\n    return pairedCollectionCreatorModal(elements, {\n        historyId: collection.historyId,\n        defaultHideSourceItems: defaultHideSourceItems\n    });\n}\n\n//=============================================================================\nexport default {\n    PairedCollectionCreator: PairedCollectionCreator,\n    pairedCollectionCreatorModal: pairedCollectionCreatorModal,\n    createListOfPairsCollection: createListOfPairsCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/collection/list-of-pairs-collection-creator.js","//=============================================================================\n/**\n(Imported for edit distance algorith. From: https://gist.github.com/andrei-m/982927)\nCopyright (c) 2011 Andrei Mackenzie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n// Compute the edit distance between the two given strings\n//exports.getEditDistance = function(a, b){\nfunction levenshteinDistance(a, b) {\n    if (a.length === 0) {\n        return b.length;\n    }\n    if (b.length === 0) {\n        return a.length;\n    }\n\n    var matrix = [];\n\n    // increment along the first column of each row\n    var i;\n    for (i = 0; i <= b.length; i++) {\n        matrix[i] = [i];\n    }\n\n    // increment each column in the first row\n    var j;\n    for (j = 0; j <= a.length; j++) {\n        matrix[0][j] = j;\n    }\n\n    // Fill in the rest of the matrix\n    for (i = 1; i <= b.length; i++) {\n        for (j = 1; j <= a.length; j++) {\n            if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            } else {\n                matrix[i][j] = Math.min(\n                    matrix[i - 1][j - 1] + 1, // substitution\n                    Math.min(\n                        matrix[i][j - 1] + 1, // insertion\n                        matrix[i - 1][j] + 1\n                    )\n                ); // deletion\n            }\n        }\n    }\n\n    //console.debug( '\\t\\t levenshteinDistance', a, b, matrix[b.length][a.length] );\n    return matrix[b.length][a.length];\n}\n\n//=============================================================================\nexport default levenshteinDistance;\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/utils/levenshtein.js","/** User Preferences view */\nimport Form from \"mvc/form/form-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\n/** Contains descriptive dictionaries describing user forms */\nvar Model = Backbone.Model.extend({\n    initialize: function(options) {\n        options = options || {};\n        options.user_id = options.user_id || Galaxy.user.id;\n        this.set({\n            user_id: options.user_id,\n            information: {\n                title: \"Manage information\",\n                description: \"Edit your email, addresses and custom parameters or change your username.\",\n                url: `api/users/${options.user_id}/information/inputs`,\n                icon: \"fa-user\",\n                redirect: \"user\"\n            },\n            password: {\n                title: \"Change password\",\n                description: \"Allows you to change your login credentials.\",\n                icon: \"fa-unlock-alt\",\n                url: `api/users/${options.user_id}/password/inputs`,\n                submit_title: \"Save password\",\n                redirect: \"user\"\n            },\n            communication: {\n                title: \"Change communication settings\",\n                description: \"Enable or disable the communication feature to chat with other users.\",\n                url: `api/users/${options.user_id}/communication/inputs`,\n                icon: \"fa-comments-o\",\n                redirect: \"user\"\n            },\n            permissions: {\n                title: \"Set dataset permissions for new histories\",\n                description:\n                    \"Grant others default access to newly created histories. Changes made here will only affect histories created after these settings have been stored.\",\n                url: `api/users/${options.user_id}/permissions/inputs`,\n                icon: \"fa-users\",\n                submit_title: \"Save permissions\",\n                redirect: \"user\"\n            },\n            api_key: {\n                title: \"Manage API key\",\n                description: \"Access your current API key or create a new one.\",\n                url: `api/users/${options.user_id}/api_key/inputs`,\n                icon: \"fa-key\",\n                submit_title: \"Create a new key\",\n                submit_icon: \"fa-check\"\n            },\n            toolbox_filters: {\n                title: \"Manage Toolbox filters\",\n                description: \"Customize your Toolbox by displaying or omitting sets of Tools.\",\n                url: `api/users/${options.user_id}/toolbox_filters/inputs`,\n                icon: \"fa-filter\",\n                submit_title: \"Save filters\",\n                redirect: \"user\"\n            },\n            openids: {\n                title: \"Manage OpenIDs\",\n                description: \"Associate OpenIDs with your account.\",\n                icon: \"fa-openid\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}user/openid_manage?cntrller=user&use_panels=True`;\n                }\n            },\n            custom_builds: {\n                title: \"Manage custom builds\",\n                description: \"Add or remove custom builds using history datasets.\",\n                icon: \"fa-cubes\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}custom_builds`;\n                }\n            },\n            logout: {\n                title: \"Sign out\",\n                description: \"Click here to sign out of all sessions.\",\n                icon: \"fa-sign-out\",\n                onclick: function() {\n                    Galaxy.modal.show({\n                        title: \"Sign out\",\n                        body: \"Do you want to continue and sign out of all active sessions?\",\n                        buttons: {\n                            Cancel: function() {\n                                Galaxy.modal.hide();\n                            },\n                            \"Sign out\": function() {\n                                window.location.href = `${Galaxy.root}user/logout?session_csrf_token=${\n                                    Galaxy.session_csrf_token\n                                }`;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n});\n\n/** View of the main user preference panel with links to individual user forms */\nvar View = Backbone.View.extend({\n    title: \"User Preferences\",\n    initialize: function() {\n        this.model = new Model();\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var config = Galaxy.config;\n        $.getJSON(`${Galaxy.root}api/users/${Galaxy.user.id}`, data => {\n            self.$preferences = $(\"<div/>\")\n                .addClass(\"ui-panel\")\n                .append($(\"<h2/>\").append(\"User preferences\"))\n                .append($(\"<p/>\").append(`You are logged in as <strong>${_.escape(data.email)}</strong>.`))\n                .append((self.$table = $(\"<table/>\").addClass(\"ui-panel-table\")));\n            var message = QueryStringParsing.get(\"message\");\n            var status = QueryStringParsing.get(\"status\");\n            if (message && status) {\n                self.$preferences.prepend(new Ui.Message({ message: message, status: status }).$el);\n            }\n            if (!config.use_remote_user) {\n                self._addLink(\"information\");\n                self._addLink(\"password\");\n            }\n            if (config.enable_communication_server) {\n                self._addLink(\"communication\");\n            }\n            self._addLink(\"custom_builds\");\n            self._addLink(\"permissions\");\n            self._addLink(\"api_key\");\n            if (config.has_user_tool_filters) {\n                self._addLink(\"toolbox_filters\");\n            }\n            if (config.enable_openid && !config.use_remote_user) {\n                self._addLink(\"openids\");\n            }\n            if (Galaxy.session_csrf_token) {\n                self._addLink(\"logout\");\n            }\n            self.$preferences.append(self._templateFooter(data));\n            self.$el.empty().append(self.$preferences);\n        });\n    },\n\n    _addLink: function(action) {\n        var options = this.model.get(action);\n        var $row = $(this._templateLink(options));\n        var $a = $row.find(\"a\");\n        if (options.onclick) {\n            $a.on(\"click\", () => {\n                options.onclick();\n            });\n        } else {\n            $a.attr(\"href\", `${Galaxy.root}user/${action}`);\n        }\n        this.$table.append($row);\n    },\n\n    _templateLink: function(options) {\n        return `<tr><td><div class=\"ui-panel-icon fa ${\n            options.icon\n        }\"></td><td><a class=\"ui-panel-anchor\" href=\"javascript:void(0)\">${\n            options.title\n        }</a><div class=\"ui-form-info\">${options.description}</div></td></tr>`;\n    },\n\n    _templateFooter: function(options) {\n        return `<p class=\"ui-panel-footer\">You are using <strong>${\n            options.nice_total_disk_usage\n        }</strong> of disk space in this Galaxy instance. ${\n            Galaxy.config.enable_quotas ? `Your disk quota is: <strong>${options.quota}</strong>. ` : \"\"\n        }Is your usage more than expected? See the <a href=\"https://galaxyproject.org/learn/managing-datasets/\" target=\"_blank\">documentation</a> for tips on how to find all of the data in your account.</p>`;\n    }\n});\n\nexport default {\n    View: View,\n    Model: Model\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/user/user-preferences.js","/** This class renders the chart configuration form. */\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport Table from \"mvc/ui/ui-table\";\nvar Collection = Backbone.Collection.extend({\n    comparator: function(a, b) {\n        a = a.get(\"name\");\n        b = b.get(\"name\");\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n});\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        var history_id = Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n        this.model = new Backbone.Model();\n        this.model.url = `${Galaxy.root}api/histories/${history_id}/custom_builds_metadata`;\n        this.collection = new Collection();\n        this.collection.url = `${Galaxy.root}api/users/${Galaxy.user.id}/custom_builds`;\n        this.message = new Ui.Message({});\n        this.installed_builds = new Ui.Select.View({\n            optional: true,\n            onchange: function() {\n                self.installed_builds.value(null);\n            },\n            empty_text: \"List of available builds:\",\n            error_text: \"No system installed builds available.\"\n        });\n        this.table = new Table.View({ cls: \"grid\", selectable: false });\n        this.table.addHeader(\"Name\");\n        this.table.addHeader(\"Key\");\n        this.table.addHeader(\"Number of chroms/contigs\");\n        this.table.addHeader(\"\");\n        this.table.appendHeader();\n        this.setElement(\n            $(\"<div/>\")\n                .append($(\"<h4/>\").text(\"Current Custom Builds\"))\n                .append(this.table.$el)\n                .append(\n                    (this.$installed = $(\"<div/>\")\n                        .append(\n                            $(\"<h4/>\")\n                                .text(\"System Installed Builds\")\n                                .addClass(\"ui-margin-top\")\n                        )\n                        .append(this.installed_builds.$el))\n                )\n                .append(\n                    $(\"<h4/>\")\n                        .text(\"Add a Custom Build\")\n                        .addClass(\"ui-margin-top\")\n                )\n                .append(\n                    $(\"<span/>\")\n                        .addClass(\"ui-column\")\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"ui-column-left\")\n                                .append(this.message.$el)\n                                .append((this.$form = $(\"<div/>\").addClass(\"ui-margin-top\")))\n                        )\n                        .append((this.$help = $(\"<div/>\").addClass(\"ui-column-right\")))\n                )\n        );\n        this.listenTo(this.collection, \"add remove reset\", () => {\n            self._renderTable();\n        });\n        this.listenTo(this.model, \"change\", () => {\n            self._renderForm();\n        });\n        this.collection.fetch();\n        this.model.fetch();\n    },\n\n    render: function() {\n        this._renderTable();\n        this._renderForm();\n    },\n\n    _renderTable: function() {\n        var self = this;\n        this.table.delAll();\n        this.collection.sort();\n        this.collection.each(model => {\n            self.table.add(model.get(\"name\"));\n            self.table.add(model.id);\n            self.table.add(model.get(\"count\") !== undefined ? model.get(\"count\") : \"Processing...\");\n            self.table.add(\n                new Ui.ButtonIcon({\n                    icon: \"fa-trash-o\",\n                    cls: \"ui-button-icon-plain\",\n                    tooltip: \"Delete custom build.\",\n                    onclick: function() {\n                        model.destroy();\n                    }\n                }).$el\n            );\n            self.table.append(model.id);\n        });\n    },\n\n    _renderForm: function() {\n        var self = this;\n        var initial_type = \"fasta\";\n        var form = new Form({\n            inputs: [\n                {\n                    type: \"text\",\n                    name: \"name\",\n                    label: \"Name\",\n                    help: \"Specify a build name e.g. Hamster.\"\n                },\n                {\n                    type: \"text\",\n                    name: \"id\",\n                    label: \"Key\",\n                    help: \"Specify a build key e.g. hamster_v1.\"\n                },\n                {\n                    name: \"len\",\n                    type: \"conditional\",\n                    test_param: {\n                        name: \"type\",\n                        label: \"Definition\",\n                        help: \"Provide the data source.\",\n                        type: \"select\",\n                        value: initial_type,\n                        data: [\n                            {\n                                value: \"fasta\",\n                                label: \"FASTA-file from history\"\n                            },\n                            {\n                                value: \"file\",\n                                label: \"Len-file from disk\"\n                            },\n                            {\n                                value: \"text\",\n                                label: \"Len-file by copy/paste\"\n                            }\n                        ]\n                    },\n                    cases: [\n                        {\n                            value: \"fasta\",\n                            inputs: [\n                                {\n                                    type: \"select\",\n                                    name: \"value\",\n                                    label: \"FASTA-file\",\n                                    data: this.model.get(\"fasta_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"file\",\n                            inputs: [\n                                {\n                                    type: \"upload\",\n                                    name: \"value\",\n                                    label: \"Len-file\",\n                                    data: this.model.get(\"len_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"text\",\n                            inputs: [\n                                {\n                                    type: \"text\",\n                                    area: true,\n                                    name: \"value\",\n                                    label: \"Edit/Paste\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            buttons: {\n                save: new Ui.Button({\n                    icon: \"fa-save\",\n                    tooltip: \"Create new Build\",\n                    title: \"Save\",\n                    cls: \"btn btn-primary ui-clear-float\",\n                    onclick: function() {\n                        var data = form.data.create();\n                        if (!data.id || !data.name) {\n                            self.message.update({\n                                message: \"All inputs are required.\",\n                                status: \"danger\"\n                            });\n                        } else {\n                            self.collection.create(data, {\n                                wait: true,\n                                success: function(response) {\n                                    if (response.get(\"message\")) {\n                                        self.message.update({\n                                            message: response.get(\"message\"),\n                                            status: \"warning\"\n                                        });\n                                    } else {\n                                        self.message.update({\n                                            message: \"Successfully added a new custom build.\",\n                                            status: \"success\"\n                                        });\n                                    }\n                                },\n                                error: function(response, err) {\n                                    var message = err && err.responseJSON && err.responseJSON.err_msg;\n                                    self.message.update({\n                                        message: message || \"Failed to create custom build.\",\n                                        status: \"danger\"\n                                    });\n                                }\n                            });\n                        }\n                    }\n                })\n            },\n            onchange: function() {\n                var input_id = form.data.match(\"len|type\");\n                if (input_id) {\n                    var input_field = form.field_list[input_id];\n                    self._renderHelp(input_field.value());\n                }\n            }\n        });\n        this.$form.empty().append(form.$el);\n        var installed_builds = this.model.get(\"installed_builds\");\n        if (installed_builds && installed_builds.length) {\n            this.$installed.show();\n            this.installed_builds.update(this.model.get(\"installed_builds\"));\n        } else {\n            this.$installed.hide();\n        }\n        this._renderHelp(initial_type);\n    },\n\n    _renderHelp: function(len_type) {\n        this.$help\n            .empty()\n            .addClass(\"alert alert-info\")\n            .html(len_type == \"fasta\" ? this._templateFasta() : this._templateLen());\n    },\n\n    _templateLen: function() {\n        return (\n            \"<h4>Length Format</h4>\" +\n            \"<p>\" +\n            \"The length format is two-column, separated by whitespace, of the form:\" +\n            \"<pre>chrom/contig   length of chrom/contig</pre>\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"For example, the first few entries of <em>mm9.len</em> are as follows:\" +\n            \"<pre>\" +\n            \"chr1    197195432\\n\" +\n            \"chr2    181748087\\n\" +\n            \"chr3    159599783\\n\" +\n            \"chr4    155630120\\n\" +\n            \"chr5    152537259\" +\n            \"</pre>\" +\n            \"</p>\" +\n            \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" +\n            \"to set the maximum basepair of the track browser. You may either upload a .len file\" +\n            \"of this format (Len File option), or directly enter the information into the box \" +\n            \"(Len Entry option).</p>\"\n        );\n    },\n\n    _templateFasta: function() {\n        return (\n            \"<h4>FASTA format</h4>\" +\n            \"<p>\" +\n            \"This is a multi-fasta file from your current history that provides the genome\" +\n            \"sequences for each chromosome/contig in your build.\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"Here is a snippet from an example multi-fasta file:\" +\n            \"<pre>\" +\n            \">chr1\\n\" +\n            \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" +\n            \">chr2\\n\" +\n            \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" +\n            \"...\" +\n            \"</pre>\" +\n            \"</p>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/user/user-custom-builds.js","/** This class renders the grid list with shared section. */\nimport GridView from \"mvc/grid/grid-view\";\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model(options);\n        this.item = this.model.get(\"item\");\n        this.title = this.model.get(\"plural\");\n        $.ajax({\n            url: `${Galaxy.root + this.item}/${this.model.get(\"action_id\")}?${$.param(Galaxy.params)}`,\n            success: function(response) {\n                response[\"dict_format\"] = true;\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function() {\n        var grid = new GridView(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n        this.$el.append(this._templateShared());\n    },\n\n    _templateShared: function() {\n        var self = this;\n        var $tmpl = $(`<div><h2>${this.model.get(\"plural\")} shared with you by others</h2></div>`);\n        var options = this.model.attributes;\n        if (options.shared_by_others && options.shared_by_others.length > 0) {\n            var $table = $(\n                '<table class=\"colored\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">' +\n                    '<tr class=\"header\">' +\n                    \"<th>Title</th>\" +\n                    \"<th>Owner</th>\" +\n                    \"</tr>\" +\n                    \"</table>\"\n            );\n            _.each(options.shared_by_others, (it, index) => {\n                var display_url = `${Galaxy.root + self.item}/display_by_username_and_slug?username=${\n                    it.username\n                }&slug=${it.slug}`;\n                $table.append(\n                    `<tr><td><a href=\"${display_url}\">${_.escape(it.title)}</a></td><td>${_.escape(\n                        it.username\n                    )}</td></tr>`\n                );\n            });\n            $tmpl.append($table);\n        } else {\n            $tmpl.append(`No ${this.model.get(\"plural\").toLowerCase()} have been shared with you.`);\n        }\n        return $tmpl;\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/grid/grid-shared.js","/** Workflow view */\nimport * as mod_toastr from \"libs/toastr\";\nimport TAGS from \"mvc/tag\";\nimport WORKFLOWS from \"mvc/workflow/workflow-model\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\n/** View of the individual workflows */\nvar WorkflowItemView = Backbone.View.extend({\n    tagName: \"tr\", // name of (orphan) root tag in this.el\n    initialize: function() {\n        _.bindAll(\n            this,\n            \"render\",\n            \"_rowTemplate\",\n            \"renderTagEditor\",\n            \"_templateActions\",\n            \"removeWorkflow\",\n            \"copyWorkflow\"\n        ); // every function that uses 'this' as the current object should be in here\n        mod_toastr.options.timeOut = 1500;\n    },\n\n    events: {\n        \"click #show-in-tool-panel\": \"showInToolPanel\",\n        \"click #delete-workflow\": \"removeWorkflow\",\n        \"click #rename-workflow\": \"renameWorkflow\",\n        \"click #copy-workflow\": \"copyWorkflow\"\n    },\n\n    render: function() {\n        $(this.el).html(this._rowTemplate());\n        return this;\n    },\n\n    showInToolPanel: function() {\n        this.model.set(\"show_in_tool_panel\", !this.model.get(\"show_in_tool_panel\"));\n        this.model.save();\n        // This reloads the whole page, so that the workflow appears in the tool panel.\n        // Ideally we would notify only the tool panel of a change\n        window.location = `${Galaxy.root}workflow`;\n    },\n\n    removeWorkflow: function() {\n        var wfName = this.model.get(\"name\");\n        if (window.confirm(`Are you sure you want to delete workflow '${wfName}'?`)) {\n            this.model.destroy({\n                success: function() {\n                    mod_toastr.success(`Successfully deleted workflow '${wfName}'`);\n                }\n            });\n            this.remove();\n        }\n    },\n\n    renameWorkflow: function() {\n        var oldName = this.model.get(\"name\");\n        var newName = window.prompt(`Enter a new Name for workflow '${oldName}'`, oldName);\n        if (newName) {\n            this.model.save(\n                { name: newName },\n                {\n                    success: function() {\n                        mod_toastr.success(`Successfully renamed workflow '${oldName}' to '${newName}'`);\n                    }\n                }\n            );\n            this.render();\n        }\n    },\n\n    copyWorkflow: function() {\n        var self = this;\n        var oldName = this.model.get(\"name\");\n        $.getJSON(`${this.model.urlRoot}/${this.model.id}/download`, wfJson => {\n            var newName = `Copy of ${oldName}`;\n            var currentOwner = self.model.get(\"owner\");\n            if (currentOwner != Galaxy.user.attributes.username) {\n                newName += ` shared by user ${currentOwner}`;\n            }\n            wfJson.name = newName;\n            self.collection.create(wfJson, {\n                at: 0,\n                wait: true,\n                success: function() {\n                    mod_toastr.success(`Successfully copied workflow '${oldName}' to '${newName}'`);\n                },\n                error: function(model, resp, options) {\n                    // signature seems to have changed over the course of backbone dev\n                    // see https://github.com/jashkenas/backbone/issues/2606#issuecomment-19289483\n                    mod_toastr.error(options.errorThrown);\n                }\n            });\n        }).error((jqXHR, textStatus, errorThrown) => {\n            mod_toastr.error(jqXHR.responseJSON.err_msg);\n        });\n    },\n\n    _rowTemplate: function() {\n        var show = this.model.get(\"show_in_tool_panel\");\n        var wfId = this.model.id;\n        var checkboxHtml = `<input id=\"show-in-tool-panel\" type=\"checkbox\" class=\"show-in-tool-panel\" ${\n            show ? `checked=\"${show}\"` : \"\"\n        } value=\"${wfId}\">`;\n        var trHtml = `<td><div class=\"dropdown\"><button class=\"menubutton\" type=\"button\" data-toggle=\"dropdown\">${_.escape(\n            this.model.get(\"name\")\n        )}<span class=\"caret\"></span></button>${this._templateActions()}</div></td><td><span><div class=\"${\n            wfId\n        } tags-display\"></div></td><td>${\n            this.model.get(\"owner\") === Galaxy.user.attributes.username ? \"You\" : this.model.get(\"owner\")\n        }</span></td><td>${this.model.get(\"number_of_steps\")}</td><td>${\n            this.model.get(\"published\") ? \"Yes\" : \"No\"\n        }</td><td>${checkboxHtml}</td>`;\n        return trHtml;\n    },\n\n    renderTagEditor: function() {\n        var TagEditor = new TAGS.TagsEditor({\n            model: this.model,\n            el: $.find(`.${this.model.id}.tags-display`),\n            workflow_mode: true\n        });\n        TagEditor.toggle(true);\n        TagEditor.render();\n    },\n\n    /** Template for user actions for workflows */\n    _templateActions: function() {\n        if (this.model.get(\"owner\") === Galaxy.user.attributes.username) {\n            return `<ul class=\"dropdown-menu action-dpd\"><li><a href=\"${Galaxy.root}workflow/editor?id=${\n                this.model.id\n            }\">Edit</a></li><li><a href=\"${Galaxy.root}workflow/run?id=${this.model.id}\">Run</a></li><li><a href=\"${\n                Galaxy.root\n            }workflow/sharing?id=${this.model.id}\">Share</a></li><li><a href=\"${Galaxy.root}api/workflows/${\n                this.model.id\n            }/download?format=json-download\">Download</a></li><li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li><li><a id=\"rename-workflow\" style=\"cursor: pointer;\">Rename</a></li><li><a href=\"${\n                Galaxy.root\n            }workflow/display_by_id?id=${\n                this.model.id\n            }\">View</a></li><li><a id=\"delete-workflow\" style=\"cursor: pointer;\">Delete</a></li></ul>`;\n        } else {\n            return `<ul class=\"dropdown-menu action-dpd\"><li><a href=\"${\n                Galaxy.root\n            }workflow/display_by_username_and_slug?username=${this.model.get(\"owner\")}&slug=${this.model.get(\n                \"slug\"\n            )}\">View</a></li><li><a href=\"${Galaxy.root}workflow/run?id=${\n                this.model.id\n            }\">Run</a></li><li><a id=\"copy-workflow\" style=\"cursor: pointer;\">Copy</a></li><li><a class=\"link-confirm-shared-${\n                this.model.id\n            }\" href=\"${Galaxy.root}workflow/sharing?unshare_me=True&id=${this.model.id}\">Remove</a></li></ul>`;\n        }\n    }\n});\n\n/** View of the main workflow list page */\nvar WorkflowListView = Backbone.View.extend({\n    title: \"Workflows\",\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        _.bindAll(this, \"adjustActiondropdown\");\n        this.collection = new WORKFLOWS.WorkflowCollection();\n        this.collection.fetch().done(this.render());\n        this.collection.bind(\"add\", this.appendItem);\n        this.collection.on(\"sync\", this.render, this);\n    },\n\n    events: {\n        dragleave: \"unhighlightDropZone\",\n        drop: \"drop\",\n        dragover: function(ev) {\n            $(\".hidden_description_layer\").addClass(\"dragover\");\n            $(\".menubutton\").addClass(\"background-none\");\n            ev.preventDefault();\n        }\n    },\n\n    unhighlightDropZone: function() {\n        $(\".hidden_description_layer\").removeClass(\"dragover\");\n        $(\".menubutton\").removeClass(\"background-none\");\n    },\n\n    drop: function(e) {\n        // TODO: check that file is valid galaxy workflow\n        this.unhighlightDropZone();\n        e.preventDefault();\n        var files = e.dataTransfer.files;\n        var self = this;\n        for (var i = 0, f; (f = files[i]); i++) {\n            self.readWorkflowFiles(f);\n        }\n    },\n\n    readWorkflowFiles: function(f) {\n        var self = this;\n        var reader = new FileReader();\n        reader.onload = theFile => {\n            var wf_json;\n            try {\n                wf_json = JSON.parse(reader.result);\n            } catch (e) {\n                mod_toastr.error(`Could not read file '${f.name}'. Verify it is a valid Galaxy workflow`);\n                wf_json = null;\n            }\n            if (wf_json) {\n                self.collection.create(wf_json, {\n                    at: 0,\n                    wait: true,\n                    success: function() {\n                        mod_toastr.success(`Successfully imported workflow '${wf_json.name}'`);\n                    },\n                    error: function(model, resp, options) {\n                        mod_toastr.error(options.errorThrown);\n                    }\n                });\n            }\n        };\n        reader.readAsText(f, \"utf-8\");\n    },\n\n    _showArgErrors: _.once(() => {\n        // Parse args out of params, display if there's a message.\n        var msg_text = QueryStringParsing.get(\"message\");\n        var msg_status = QueryStringParsing.get(\"status\");\n        if (msg_status === \"error\") {\n            mod_toastr.error(_.escape(msg_text || \"Unknown Error, please report this to an administrator.\"));\n        } else if (msg_text) {\n            mod_toastr.info(_.escape(msg_text));\n        }\n    }),\n\n    render: function() {\n        // Add workflow header\n        var header = this._templateHeader();\n        // Add the actions buttons\n        var templateActions = this._templateActionButtons();\n        var tableTemplate = this._templateWorkflowTable();\n        this.$el.html(header + templateActions + tableTemplate);\n        var self = this;\n        _(this.collection.models).each(item => {\n            // in case collection is not empty\n            self.appendItem(item);\n            self.confirmDelete(item);\n        }, this);\n        var minQueryLength = 3;\n        this.searchWorkflow(this.$(\".search-wf\"), this.$(\".workflow-search tr\"), minQueryLength);\n        this.adjustActiondropdown();\n        this._showArgErrors();\n        return this;\n    },\n\n    appendItem: function(item) {\n        var workflowItemView = new WorkflowItemView({\n            model: item,\n            collection: this.collection\n        });\n        $(\".workflow-search\").append(workflowItemView.render().el);\n        workflowItemView.renderTagEditor();\n    },\n\n    /** Add confirm box before removing/unsharing workflow */\n    confirmDelete: function(workflow) {\n        var $el_shared_wf_link = this.$(`.link-confirm-shared-${workflow.id}`);\n        $el_shared_wf_link.click(() =>\n            window.confirm(`Are you sure you want to remove the shared workflow '${workflow.attributes.name}'?`)\n        );\n    },\n\n    /** Implement client side workflow search/filtering */\n    searchWorkflow: function($el_searchinput, $el_tabletr, min_querylen) {\n        $el_searchinput.on(\"keyup\", function() {\n            var query = $(this).val();\n            // Filter when query is at least 3 characters\n            // otherwise show all rows\n            if (query.length >= min_querylen) {\n                // Ignore the query's case using 'i'\n                var regular_expression = new RegExp(query, \"i\");\n                $el_tabletr.hide();\n                $el_tabletr\n                    .filter(function() {\n                        // Apply regular expression on each row's text\n                        // and show when there is a match\n                        return regular_expression.test($(this).text());\n                    })\n                    .show();\n            } else {\n                $el_tabletr.show();\n            }\n        });\n    },\n\n    /** Ajust the position of dropdown with respect to table */\n    adjustActiondropdown: function() {\n        $(this.el).on(\"show.bs.dropdown\", function() {\n            $(this.el).css(\"overflow\", \"inherit\");\n        });\n        $(this.el).on(\"hide.bs.dropdown\", function() {\n            $(this.el).css(\"overflow\", \"auto\");\n        });\n    },\n\n    /** Template for no workflow */\n    _templateNoWorkflow: function() {\n        return '<div class=\"wf-nodata\"> You have no workflows. </div>';\n    },\n\n    /** Template for actions buttons */\n    _templateActionButtons: function() {\n        return `<ul class=\"manage-table-actions\"><li><input class=\"search-wf form-control\" type=\"text\" autocomplete=\"off\" placeholder=\"search for workflow...\"></li><li><a class=\"action-button fa fa-plus wf-action\" id=\"new-workflow\" title=\"Create new workflow\" href=\"${\n            Galaxy.root\n        }workflow/create\"></a></li><li><a class=\"action-button fa fa-upload wf-action\" id=\"import-workflow\" title=\"Upload or import workflow\" href=\"${\n            Galaxy.root\n        }workflow/import_workflow\"></a></li></ul>`;\n    },\n\n    /** Template for workflow table */\n    _templateWorkflowTable: function() {\n        var tableHtml =\n            '<table class=\"table colored\"><thead>' +\n            '<tr class=\"header\">' +\n            \"<th>Name</th>\" +\n            \"<th>Tags</th>\" +\n            \"<th>Owner</th>\" +\n            \"<th># of Steps</th>\" +\n            \"<th>Published</th>\" +\n            \"<th>Show in tools panel</th>\" +\n            \"</tr></thead>\";\n        return `${\n            tableHtml\n        }<tbody class=\"workflow-search \"><div class=\"hidden_description_layer\"><p>Drop workflow files here to import</p></tbody></table></div>`;\n    },\n\n    /** Main template */\n    _templateHeader: function() {\n        return (\n            '<div class=\"page-container\">' +\n            '<div class=\"user-workflows wf\">' +\n            '<div class=\"response-message\"></div>' +\n            \"<h2>Your workflows</h2>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nvar ImportWorkflowView = Backbone.View.extend({\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    /** Open page to import workflow */\n    render: function() {\n        var self = this;\n        $.getJSON(`${Galaxy.root}workflow/upload_import_workflow`, options => {\n            self.$el.empty().append(self._mainTemplate(options));\n        });\n    },\n\n    /** Template for the import workflow page */\n    _mainTemplate: function(options) {\n        return `<div class='toolForm'><div class='toolFormTitle'>Import Galaxy workflow</div><div class='toolFormBody'><form name='import_workflow' id='import_workflow' action='${\n            Galaxy.root\n        }workflow/upload_import_workflow' enctype='multipart/form-data' method='POST'><div class='form-row'><label>Galaxy workflow URL:</label><input type='text' name='url' class='input-url' value='${\n            options.url\n        }' size='40'><div class='toolParamHelp' style='clear: both;'>If the workflow is accessible via a URL, enter the URL above and click <b>Import</b>.</div><div style='clear: both'></div></div><div class='form-row'><label>Galaxy workflow file:</label><div class='form-row-input'><input type='file' name='file_data' class='input-file'/></div><div class='toolParamHelp' style='clear: both;'>If the workflow is in a file on your computer, choose it and then click <b>Import</b>.</div><div style='clear: both'></div></div><div class='form-row'><input type='submit' class='primary-button wf-import' name='import_button' value='Import'></div></form><hr/><div class='form-row'><label>Import a Galaxy workflow from myExperiment:</label><div class='form-row-input'><a href='${\n            options.myexperiment_target_url\n        }'> Visit myExperiment</a></div><div class='toolParamHelp' style='clear: both;'>Click the link above to visit myExperiment and browse for Galaxy workflows.</div><div style='clear: both'></div></div></div></div>`;\n    }\n});\n\nexport default {\n    View: WorkflowListView,\n    ImportWorkflowView: ImportWorkflowView\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/workflow/workflow.js","import baseMVC from \"mvc/base-mvc\";\n/* global Backbone */\n// workflow model\n\nvar logNamespace = \"workflow\";\n//==============================================================================\n/** @class model for a single workflow.\n *  @name WorkflowItem\n *  @augments Backbone.Model\n */\nvar WorkflowItem = Backbone.Model.extend(baseMVC.LoggableMixin).extend({\n    _logNamespace: logNamespace,\n\n    urlRoot: `${Galaxy.root}api/workflows`,\n\n    toJSON: function() {\n        // need to overwrite this as endpoint expects the 'workflow' key in payload\n        return { workflow: this.attributes };\n    }\n});\n\n//==============================================================================\n/** @class collection for workflows.\n *  @name WorkflowCollection\n *  @augments Backbone.Collection\n */\nvar WorkflowCollection = Backbone.Collection.extend({\n    model: WorkflowItem,\n    url: `${Galaxy.root}api/workflows`\n});\n\n//==============================================================================\n\nexport default {\n    WorkflowItem: WorkflowItem,\n    WorkflowCollection: WorkflowCollection\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/workflow/workflow-model.js","/** This class renders the grid list. */\nimport Utils from \"utils/utils\";\nimport GridView from \"mvc/grid/grid-view\";\nimport HistoryModel from \"mvc/history/history-model\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\nvar View = Backbone.View.extend({\n    title: \"Histories\",\n    initialize: function(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model();\n        Utils.get({\n            url: `${Galaxy.root}history/${options.action_id}?${$.param(Galaxy.params)}`,\n            success: function(response) {\n                response[\"dict_format\"] = true;\n                _.each(response[\"operations\"], operation => {\n                    if (operation.label == \"Copy\") {\n                        operation.onclick = id => {\n                            self._showCopyDialog(id);\n                        };\n                    }\n                });\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function() {\n        var grid = new GridView(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n    },\n\n    _showCopyDialog: function(id) {\n        var history = new HistoryModel.History({ id: id });\n        history\n            .fetch()\n            .fail(() => {\n                alert(\"History could not be fetched. Please contact an administrator\");\n            })\n            .done(() => {\n                historyCopyDialog(history, {}).done(() => {\n                    if (window.parent && window.parent.Galaxy && window.parent.Galaxy.currHistoryPanel) {\n                        window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                    }\n                    window.location.reload(true);\n                });\n            });\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/history/history-list.js","import Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\n/** Dataset edit attributes view */\nvar View = Backbone.View.extend({\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.model = new Backbone.Model({\n            dataset_id: Galaxy.params.dataset_id\n        });\n        this.render();\n    },\n\n    // Fetch data for the selected dataset and\n    render: function() {\n        var data_url = `${Galaxy.root}api/datasets/${this.model.get(\"dataset_id\")}`;\n\n        var self = this;\n\n        Utils.get({\n            url: data_url,\n            success: function(dataset) {\n                var job_url = `${Galaxy.root}api/jobs/${dataset.creating_job}?full=True`;\n                Utils.get({\n                    url: job_url,\n                    success: function(job) {\n                        var job_url = `${Galaxy.root}api/jobs/${dataset.creating_job}?full=True`;\n                        self.render_error_page(self, dataset, job);\n                    },\n                    error: function(response) {\n                        var error_response = {\n                            status: \"error\",\n                            message: \"Error occured while loading the job.\",\n                            persistent: true,\n                            cls: \"errormessage\"\n                        };\n                        self.display_message(error_response, self.$(\".response-message\"));\n                    }\n                });\n            },\n            error: function(response) {\n                var error_response = {\n                    status: \"error\",\n                    message: \"Error occured while loading the dataset.\",\n                    persistent: true,\n                    cls: \"errormessage\"\n                };\n                self.display_message(error_response, self.$(\".response-message\"));\n            }\n        });\n    },\n\n    /** Render the view */\n    render_error_page: function(self, dataset, job) {\n        self.$el.empty().append(self._templateHeader());\n        self.$el.append(\"<h2>Dataset Error</h2>\");\n        self.$el.append(`<p>An error occured while running the tool <b>${job.tool_id}</b>.</p>`);\n        self.$el.append(\"<p>Tool execution generated the following messages:</p>\");\n        self.$el.append(`<pre class=\"code\">${job.stderr}</pre>`);\n        self.$el.append(\"<h2>Report This Error</pre>\");\n        self.$el.append(\n            \"<p>Usually the local Galaxy administrators regularly review errors that occur on the server. However, if you would like to provide additional information (such as what you were trying to do when the error occurred) and a contact e-mail address, we will be better able to investigate your problem and get back to you.</p>\"\n        );\n        self.$el.append(self._getBugFormTemplate(dataset, job));\n    },\n\n    /** Display actions messages */\n    display_message: function(response, $el, doNotClear, safe) {\n        if (!safe) {\n            if (doNotClear) {\n                $el.append(new Ui.Message(response).$el);\n            } else {\n                $el.empty().html(new Ui.Message(response).$el);\n            }\n        } else {\n            if (doNotClear) {\n                $el.append(new Ui.UnescapedMessage(response).$el);\n            } else {\n                $el.empty().html(new Ui.UnescapedMessage(response).$el);\n            }\n        }\n    },\n\n    /** Main template */\n    _templateHeader: function() {\n        return '<div class=\"page-container edit-attr\">' + '<div class=\"response-message\"></div>' + \"</div>\";\n    },\n\n    /** Convert tab template */\n    _getBugFormTemplate: function(dataset, job) {\n        var self = this;\n        var inputs = [\n            {\n                help: \"Your email address\",\n                options: [],\n                type: \"text\",\n                name: \"email\",\n                label: \"Your email\",\n                value: Galaxy.user.get(\"email\")\n            },\n            {\n                help: \"Any additional comments you can provide regarding what you were doing at the time of the bug.\",\n                options: [],\n                type: \"text\",\n                area: true,\n                name: \"message\",\n                label: \"Message\"\n            }\n        ];\n\n        // TODO\n        /*\n        if (false && response.any_public) {\n            inputs.push({\n                name: \"public_consent\",\n                label: \"Public Disclosure Consent\",\n                help:\n                    \"This Galaxy is configured to report to one or more error reporting backends that public to the world. By selecting 'yes', you acknowledge that this bug report will be made public.\",\n                value: String(Boolean(false)),\n                options: [],\n                type: \"boolean\"\n            });\n        }\n        */\n\n        var form = new Form({\n            title: \"Error Report\",\n            inputs: inputs,\n            buttons: {\n                save: new Ui.Button({\n                    icon: \"fa-bug\",\n                    title: \"Report\",\n                    cls: \"ui-button btn btn-primary\",\n                    floating: \"clear\",\n                    onclick: function() {\n                        var form_data = form.data.create();\n                        var url = `${Galaxy.root}api/jobs/${job.id}/error`;\n                        form_data.dataset_id = dataset.id;\n                        self.submit(form_data, url);\n                    }\n                })\n            }\n        });\n        return form.$el;\n    },\n\n    /** Make ajax request */\n    submit: function(form_data, url) {\n        var self = this;\n        // Some required metadata\n        $.ajax({\n            type: \"POST\",\n            url: url,\n            data: form_data,\n            success: function(response) {\n                // Clear out the div\n                self.$el.empty().append(self._templateHeader());\n                // And display the messages.\n                response.messages.forEach(message => {\n                    self.display_message(\n                        {\n                            status: message[1],\n                            message: message[0],\n                            persistent: true\n                        },\n                        self.$(\".response-message\"),\n                        true,\n                        true\n                    );\n                });\n            },\n            error: function(response) {\n                var error_response = {\n                    status: \"error\",\n                    message: \"Error occured while saving. Please fill all the required fields and try again.\",\n                    persistent: true,\n                    cls: \"errormessage\"\n                };\n                self.display_message(error_response, self.$(\".response-message\"));\n            }\n        });\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/dataset-error.js","/** Dataset edit attributes view */\nimport Utils from \"utils/utils\";\nimport Tabs from \"mvc/ui/ui-tabs\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nvar View = Backbone.View.extend({\n    initialize: function() {\n        this.setElement(\"<div/>\");\n        this.model = new Backbone.Model({\n            dataset_id: Galaxy.params.dataset_id\n        });\n        this.message = new Ui.Message({ persistent: true });\n        this.tabs = this._createTabs();\n        this.$el\n            .append($(\"<h4/>\").append(\"Edit dataset attributes\"))\n            .append(this.message.$el)\n            .append(\"<p/>\")\n            .append(this.tabs.$el)\n            .hide();\n        this.render();\n    },\n\n    /** fetch data for the selected dataset and build forms */\n    render: function() {\n        var self = this;\n        $.ajax({\n            url: `${Galaxy.root}dataset/get_edit?dataset_id=${self.model.get(\"dataset_id\")}`,\n            success: function(response) {\n                !self.initial_message && self.message.update(response);\n                self.initial_message = true;\n                _.each(self.forms, (form, key) => {\n                    form.model.set(\"inputs\", response[`${key}_inputs`]);\n                    form.model.set(\"hide_operations\", response[`${key}_disable`]);\n                    form.render();\n                });\n                self.$el.show();\n            },\n            error: function(response) {\n                var err_msg = response.responseJSON && response.responseJSON.err_msg;\n                self.message.update({\n                    status: \"danger\",\n                    message: err_msg || \"Error occured while loading the dataset.\"\n                });\n            }\n        });\n    },\n\n    /** submit data to backend to update attributes */\n    _submit: function(operation, form) {\n        var self = this;\n        var data = form.data.create();\n        data.dataset_id = this.model.get(\"dataset_id\");\n        data.operation = operation;\n        $.ajax({\n            type: \"PUT\",\n            url: `${Galaxy.root}dataset/set_edit`,\n            data: data,\n            success: function(response) {\n                self.message.update(response);\n                self.render();\n                self._reloadHistory();\n            },\n            error: function(response) {\n                var err_msg = response.responseJSON && response.responseJSON.err_msg;\n                self.message.update({\n                    status: \"danger\",\n                    message: err_msg || \"Error occured while editing the dataset attributes.\"\n                });\n            }\n        });\n    },\n\n    /** create tabs for different dataset attribute categories*/\n    _createTabs: function() {\n        this.forms = {\n            attribute: this._getAttribute(),\n            conversion: this._getConversion(),\n            datatype: this._getDatatype(),\n            permission: this._getPermission()\n        };\n        var tabs = new Tabs.View();\n        tabs.add({\n            id: \"attribute\",\n            title: \"Attributes\",\n            icon: \"fa fa-bars\",\n            tooltip: \"Edit dataset attributes\",\n            $el: this.forms.attribute.$el\n        });\n        tabs.add({\n            id: \"convert\",\n            title: \"Convert\",\n            icon: \"fa-gear\",\n            tooltip: \"Convert to new format\",\n            $el: this.forms.conversion.$el\n        });\n        tabs.add({\n            id: \"datatype\",\n            title: \"Datatypes\",\n            icon: \"fa-database\",\n            tooltip: \"Change data type\",\n            $el: this.forms.datatype.$el\n        });\n        tabs.add({\n            id: \"permissions\",\n            title: \"Permissions\",\n            icon: \"fa-user\",\n            tooltip: \"Permissions\",\n            $el: this.forms.permission.$el\n        });\n        return tabs;\n    },\n\n    /** edit main attributes form */\n    _getAttribute: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Edit attributes\",\n            operations: {\n                submit_attributes: new Ui.ButtonIcon({\n                    tooltip: \"Save attributes of the dataset.\",\n                    icon: \"fa-floppy-o\",\n                    title: \"Save\",\n                    onclick: function() {\n                        self._submit(\"attributes\", form);\n                    }\n                }),\n                submit_autodetect: new Ui.ButtonIcon({\n                    tooltip:\n                        \"This will inspect the dataset and attempt to correct the values of fields if they are not accurate.\",\n                    icon: \"fa-undo\",\n                    title: \"Auto-detect\",\n                    onclick: function() {\n                        self._submit(\"autodetect\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** datatype conversion form */\n    _getConversion: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Convert to new format\",\n            operations: {\n                submit_conversion: new Ui.ButtonIcon({\n                    tooltip: \"Convert the datatype to a new format.\",\n                    title: \"Convert datatype\",\n                    icon: \"fa-exchange\",\n                    onclick: function() {\n                        self._submit(\"conversion\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** change datatype form */\n    _getDatatype: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Change datatype\",\n            operations: {\n                submit_datatype: new Ui.ButtonIcon({\n                    tooltip: \"Change the datatype to a new type.\",\n                    title: \"Change datatype\",\n                    icon: \"fa-exchange\",\n                    onclick: function() {\n                        self._submit(\"datatype\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** dataset permissions form */\n    _getPermission: function() {\n        var self = this;\n        var form = new Form({\n            title: \"Manage dataset permissions\",\n            operations: {\n                submit_permission: new Ui.ButtonIcon({\n                    tooltip: \"Save permissions.\",\n                    title: \"Save permissions\",\n                    icon: \"fa-floppy-o \",\n                    onclick: function() {\n                        self._submit(\"permission\", form);\n                    }\n                })\n            }\n        });\n        return form;\n    },\n\n    /** reload Galaxy's history after updating dataset's attributes */\n    _reloadHistory: function() {\n        if (window.Galaxy) {\n            window.Galaxy.currHistoryPanel.loadCurrentHistory();\n        }\n    }\n});\n\nexport default {\n    View: View\n};\n\n\n\n// WEBPACK FOOTER //\n// ./galaxy/scripts/mvc/dataset/dataset-edit-attributes.js"],"sourceRoot":""}