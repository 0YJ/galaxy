{"version":3,"sources":["webpack:///analysis.bundled.js","webpack:///./galaxy/scripts/apps/analysis.js","webpack:///./galaxy/scripts/utils/utils.js","webpack:///./galaxy/scripts/mvc/ui/ui-misc.js","webpack:///./galaxy/scripts/mvc/dataset/states.js","webpack:///./galaxy/scripts/mvc/ui/ui-modal.js","webpack:///./galaxy/scripts/mvc/ui/ui-portlet.js","webpack:///./galaxy/scripts/ui/editable-text.js","webpack:///./galaxy/scripts/ui/fa-icon-button.js","webpack:///./galaxy/scripts/mvc/collection/collection-panel.js","webpack:///./galaxy/scripts/mvc/data.js","webpack:///./galaxy/scripts/mvc/ui/ui-popover.js","webpack:///./galaxy/scripts/mvc/ui/ui-select.js","webpack:///./galaxy/scripts/viz/trackster/util.js","webpack:///./galaxy/scripts/galaxy.masthead.js","webpack:///./galaxy/scripts/mvc/collection/collection-li.js","webpack:///./galaxy/scripts/mvc/collection/collection-model.js","webpack:///./galaxy/scripts/mvc/collection/list-collection-creator.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-li.js","webpack:///./galaxy/scripts/mvc/history/hdca-model.js","webpack:///./galaxy/scripts/mvc/history/history-content-model.js","webpack:///./galaxy/scripts/mvc/history/history-contents.js","webpack:///./galaxy/scripts/mvc/list/list-item.js","webpack:///./galaxy/scripts/mvc/tools/tools-form.js","webpack:///./galaxy/scripts/mvc/tools/tools-template.js","webpack:///./galaxy/scripts/mvc/ui/popup-menu.js","webpack:///./galaxy/scripts/mvc/ui/ui-buttons.js","webpack:///./galaxy/scripts/mvc/ui/ui-table.js","webpack:///./galaxy/scripts/mvc/upload/upload-model.js","webpack:///./galaxy/scripts/mvc/annotations.js","webpack:///./galaxy/scripts/mvc/citation/citation-model.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-li-edit.js","webpack:///./galaxy/scripts/mvc/dataset/dataset-model.js","webpack:///./galaxy/scripts/mvc/history/hda-li.js","webpack:///./galaxy/scripts/mvc/history/hda-model.js","webpack:///./galaxy/scripts/mvc/history/hdca-li.js","webpack:///./galaxy/scripts/mvc/history/history-model.js","webpack:///./galaxy/scripts/mvc/list/list-panel.js","webpack:///./galaxy/scripts/mvc/tags.js","webpack:///./galaxy/scripts/mvc/tools.js","webpack:///./galaxy/scripts/mvc/ui/icon-button.js","webpack:///./galaxy/scripts/mvc/ui/ui-frames.js","webpack:///./galaxy/scripts/mvc/ui/ui-list.js","webpack:///./galaxy/scripts/mvc/ui/ui-options.js","webpack:///./galaxy/scripts/mvc/ui/ui-tabs.js","webpack:///./galaxy/scripts/mvc/upload/upload-ftp.js","webpack:///./galaxy/scripts/mvc/upload/upload-settings.js","webpack:///./galaxy/scripts/ui/hoverhighlight.js","webpack:///./galaxy/scripts/ui/search-input.js","webpack:///./galaxy/scripts/utils/natural-sort.js","webpack:///./galaxy/scripts/utils/uploadbox.js","webpack:///./galaxy/scripts/galaxy.frame.js","webpack:///./galaxy/scripts/galaxy.menu.js","webpack:///./galaxy/scripts/mvc/app/app-analysis.js","webpack:///./galaxy/scripts/mvc/app/app-login.js","webpack:///./galaxy/scripts/mvc/app/app-view.js","webpack:///./galaxy/scripts/mvc/citation/citation-view.js","webpack:///./galaxy/scripts/mvc/collection/collection-li-edit.js","webpack:///./galaxy/scripts/mvc/collection/collection-panel-edit.js","webpack:///./galaxy/scripts/mvc/collection/list-of-pairs-collection-creator.js","webpack:///./galaxy/scripts/mvc/collection/pair-collection-creator.js","webpack:///./galaxy/scripts/mvc/form/form-data.js","webpack:///./galaxy/scripts/mvc/form/form-input.js","webpack:///./galaxy/scripts/mvc/form/form-parameters.js","webpack:///./galaxy/scripts/mvc/form/form-repeat.js","webpack:///./galaxy/scripts/mvc/form/form-section.js","webpack:///./galaxy/scripts/mvc/form/form-select-content.js","webpack:///./galaxy/scripts/mvc/form/form-view.js","webpack:///./galaxy/scripts/mvc/history/hda-li-edit.js","webpack:///./galaxy/scripts/mvc/history/hdca-li-edit.js","webpack:///./galaxy/scripts/mvc/history/history-panel-edit-current.js","webpack:///./galaxy/scripts/mvc/history/history-panel-edit.js","webpack:///./galaxy/scripts/mvc/history/history-panel.js","webpack:///./galaxy/scripts/mvc/history/options-menu.js","webpack:///./galaxy/scripts/mvc/tools/tools-form-base.js","webpack:///./galaxy/scripts/mvc/tools/tools-jobs.js","webpack:///./galaxy/scripts/mvc/ui/ui-color-picker.js","webpack:///./galaxy/scripts/mvc/ui/ui-drilldown.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-default.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-ftp.js","webpack:///./galaxy/scripts/mvc/ui/ui-select-library.js","webpack:///./galaxy/scripts/mvc/ui/ui-slider.js","webpack:///./galaxy/scripts/mvc/upload/composite/composite-row.js","webpack:///./galaxy/scripts/mvc/upload/composite/composite-view.js","webpack:///./galaxy/scripts/mvc/upload/default/default-row.js","webpack:///./galaxy/scripts/mvc/upload/default/default-view.js","webpack:///./galaxy/scripts/mvc/upload/upload-button.js","webpack:///./galaxy/scripts/mvc/upload/upload-view.js","webpack:///./galaxy/scripts/mvc/user/user-quotameter.js","webpack:///./galaxy/scripts/templates/compiled/panel_section.js","webpack:///./galaxy/scripts/templates/compiled/tool_form.js","webpack:///./galaxy/scripts/templates/compiled/tool_link.js","webpack:///./galaxy/scripts/templates/compiled/tool_search.js","webpack:///./galaxy/scripts/ui/loading-indicator.js","webpack:///./galaxy/scripts/utils/deferred.js","webpack:///./galaxy/scripts/utils/levenshtein.js"],"names":["webpackJsonp","module","exports","__webpack_require__","$","App","window","app","options","bootstrapped","config","call","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","jQuery","_","deepeach","dict","callback","i","d","isJSON","text","test","replace","sanitize","content","html","validate","value","Array","length","undefined","indexOf","textify","lst","toString","pos","lastIndexOf","substr","get","top","__utils__get__","cache","url","success","console","debug","request","data","response","error","ajaxConfig","contentType","type","param","dataType","JSON","stringify","ajax","done","parseJSON","e","fail","response_text","responseText","cssGetAttribute","classname","name","el","appendTo","css","remove","cssLoadFile","galaxy_config","root","merge","optionsDefault","defaults","roundToDecimalPlaces","number","numPlaces","placesMultiplier","Math","round","bytesToString","size","normal_font","numberPlaces","unit","tb","gb","mb","kb","rounded","uid","__utils__uid__","time","Date","hours","getHours","minutes","getMinutes","datetime","getDate","getMonth","getFullYear","apply","Backbone","Utils","Select","Slider","Options","Drilldown","Buttons","Modal","Image","View","extend","initialize","this","cls","setElement","_template","Label","title","new_title","$el","Icon","floating","icon","tooltip","placement","Anchor","on","onclick","Message","message","status","persistent","update","fadeIn","timeout","clearTimeout","self","setTimeout","is","fadeOut","hide","cls_status","large","Searchbox","searchword","search_field","find","val","Input","placeholder","disabled","visible","area","prop","onchange","new_val","id","Hidden","tmpl","info","Button","ButtonDefault","ButtonIcon","ButtonCheck","ButtonMenu","ButtonLink","RadioButton","Checkbox","Radio","STATES","UPLOAD","QUEUED","RUNNING","SETTING_METADATA","NEW","EMPTY","OK","PAUSED","FAILED_METADATA","NOT_VIEWABLE","DISCARDED","ERROR","READY_STATES","NOT_READY_STATES","elMain","body","backdrop","height","width","closing_events","closing_callback","title_separator","buttonList","_create","show","$body","$dialog","enableButton","button_id","$buttons","disableButton","showButton","hideButton","getButton","scrollTop","document","off","$footer","$backdrop","removeClass","buttons","counter","each","append","click","keyCode","border","padding-bottom","scrollable","nopadding","operations","operations_flt","$title","$content","$operations","$header","$portlet_content","item","empty","hideOperation","showOperation","setOperation","disable","enable","__WEBPACK_AMD_DEFINE_FACTORY__","factory","fn","make_text_editable","config_dict","num_cols","num_rows","use_textarea","on_finish","help_text","container","addClass","children","input_elt","button_elt","set_text","new_text","cur_text","attr","rows","cols","trim","keyup","blur","trigger","stopPropagation","focus","select","faIconButton","tooltipConfig","classes","concat","push","join","target","href","faIcon","$button","isFunction","LIST_PANEL","DC_MODEL","DC_LI","BASE_MVC","_l","logNamespace","_super","ModelListPanel","CollectionPanel","_logNamespace","className","prototype","DatasetDCEViewClass","DatasetDCEListItemView","NestedDCDCEViewClass","NestedDCDCEListItemView","modelCollectionKey","attributes","linkTarget","hasUser","panelStack","parentName","foldoutStyle","_filterCollection","model","getVisibleContents","_getItemViewClass","TypeError","_getItemViewOptions","_setUpItemViewListeners","view","panel","v","drilldown","_expandDrilldownPanel","_collapseDrilldownPanel","add","$list","render","pop","events","click .navigation .back","close","event","templates","controlsTemplate","wrapTemplate","clone","controls","ListCollectionPanel","PairCollectionPanel","ListOfPairsCollectionPanel","foldoutPanelClass","Frames","mod_icon_btn","DatasetMetadata","Model","Dataset","hda_ldda","metadata","_set_metadata","keys","k","new_key","split","set","silent","get_metadata","attribute","urlRoot","TabularDataset","chunk_url","first_data_chunk","chunk_index","at_eof","url_viz","get_next_chunk","next_chunk","Deferred","getJSON","chunk","rval","ck_data","resolve","DatasetCollection","Collection","TabularDatasetChunkedView","row_count","loading_chunk","TabularButtonTracksterView","expand_to_container","scroll_elt","attempt_to_fetch","func","scrolled_to_bottom","loading_indicator","when","then","result","_renderChunk","data_table","cellpadding","column_names","header_container","header_row","j","first_chunk","scroll","_renderCell","cell_contents","index","colspan","$cell","column_types","_renderRow","line","cells","row","num_columns","slice","TopLevelTabularDatasetChunkedView","parents","p","EmbeddedTabularDatasetChunkedView","position","overflow","innerHeight","scrollHeight","col","chrom","start","end","dataset_id","genome_build","file_ext","search","str","array","match","Galaxy","parent","modal","frame","log","btn_viz","IconButtonView","IconButton","icon_class","mouseover tr","mouseleave","is_numeric","n","isNaN","parseFloat","isFinite","eq","btn_viz_pars","gene_region","offset","left","create_trackster_action","vis_url","dataset_params","dbkey","listTracksParams","Cancel","table_html","View in saved visualization","Add to visualization","vis_id","View in new visualization","createTabularDatasetChunkedView","dataset_config","parent_elt","embedded","with_close","_hide","_get_placement","_get_width","$container","container_width","container_height","_get_height","container_position","parseInt","has","multiple","minimumInputLength","initialData","select_data","_refresh","_setValue","new_value","before","_getValue","after","select2","del","_getIndex","splice","key","select_opt","containerCssClass","dropdownCssClass","escapeMarkup","formatResult","formatSelection","initSelection","selected","dropdownAutoWidth","commatize","rgx","is_deferred","ServerStateDeferred","ajax_settings","interval","success_fn","go","deferred","_go","get_random_color","colors","new_color","nr","ng","nb","other_color","or","og","ob","n_brightness","o_brightness","diff","brightness","r","g","b","difference","r1","g1","b1","r2","g2","b2","max","min","ok","num_tries","random","abs","GalaxyMasthead","el_masthead","$background","list","onunload","q","mousedown","preventDefault","_add","prepend","highlight","current","$loc","location","$current","_click","$all","closest","hasClass","brand_text","brand","logo_url","GalaxyMastheadIcon","with_number","alert","visibility","new_icon","toggle","untoggle","new_number","GalaxyMastheadTab","scratchbook","title_attribute","$menu","click .head","_attachPopover","menuOptions","divider","_templateMenu","$item","_templateMenuItem","_templateDivider","_head","$popover_element","popover","LIST_ITEM","DATASET_LI","FoldoutListItemView","ListItemView","DCListItemView","_setUpListeners","isEqual","changed","_renderSubtitle","$subtitle","_getFoldoutPanelOptions","$selector","modelString","warnings","purged","deleted","titleBarTemplate","titleBar","DCEListItemView","logger","DatasetListItemView","_fetchModelDetails","inReadyState","hasDetails","fetch","_swapNewRender","$newRender","state","DATASET_MODEL","DatasetCollectionElementMixin","model_class","element_identifier","element_index","element_type","_mergeObject","object","element_id","constructor","idAttribute","arguments","parse","DatasetCollectionElement","LoggableMixin","DCECollection","DatasetDCE","DatasetAssociation","mixin","galaxyRoot","warn","objStr","DatasetDCECollection","SearchableModelMixin","collection_type","collectionClass","elements","_createElementsModel","unset","toJSON","json","populated","isDeletedOrPurged","filters","delete","save","undelete","searchAttributes","idAndName","ListDatasetCollection","attrs","PairDatasetCollection","NestedDCDCE","NestedDCDCECollection","NestedPairDCDCE","NestedPairDCDCECollection","ListPairedDatasetCollection","HDCA","UI_MODAL","naturalSort","createListCollection","contents","promise","listCollectionCreatorModal","creationFn","map","element","src","history_content_type","createHDCA","DatasetCollectionElementView","tagName","template","toggleClass","source","discard","parentWidth","animate","margin-right","destroy","click .name","click .discard","dragstart","dragend","dragover","drop","ev","_clickName","prompt","_clickDiscard","_dragstart","originalEvent","dataTransfer","effectAllowed","setData","_dragend","_sendToParent","ListCollectionCreator","elementViewClass","HistoryListDatasetCollection","minElements","defaultAttributes","oncreate","oncancel","autoscrollDist","highlightClr","metric","creator","initialElements","_instanceSetUp","_elementsSetUp","_setUpBehaviors","selectedIds","$dragging","blocking","invalidElements","workingElements","elementViews","_ensureElementIds","_validateElements","_mangleDuplicateNames","_sortElements","forEach","hasOwnProperty","uniqueId","filter","problem","_isElementInvalid","contains","SAFETY","existingNames","currName","Error","speed","_renderInvalid","main","_renderHeader","_renderMiddle","_renderFooter","_addPluginComponents","invalidInitial","problems","header","helpContent","_invalidElementsAlert","$middle","middle","_renderList","footer","hoverhighlight","_showAlert","_validationWarning","what","clear","VALIDATION_CLASS","_disableNameAndCreate","isUndefined","_renderClearSelected","$tmp","removeElementView","elementView","_createElementView","invoke","_listenToElementView","listenTo","addElementView","without","stopListening","_renderNoElementsLeft","noElementsLeft","_elementToJSON","createList","always","xhr","_errorHandler","once","readyState","responseJSON","click .more-help","click .less-help","click .main-help","click .header .alert button","click .reset","click .clear-selected","click .collection-elements","dragover .collection-elements","drop .collection-elements","collection-element.dragstart .collection-elements","collection-element.dragend   .collection-elements","change .collection-name","keydown .collection-name","click .cancel-create","click .create-collection","_clickMoreHelp","_clickLessHelp","_toggleHelp","alertClass","_hideAlert","reset","clearSelectedElements","_dragoverElements","_checkForAutoscroll","clientY","$nearest","_getNearestElement","$placeholder","$element","y","AUTOSCROLL_SPEED","upperDist","lowerDist","outerHeight","WIGGLE","lis","toArray","$li","halfHeight","floor","_dropElements","dropEffect","insertBefore","insertAfter","last","_syncOrderToDom","newElements","findWhere","_elementDragstart","_elementDragend","_changeName","_getName","_nameCheckForEnter","_clickCreate","escape","collectionCreatorModal","CreatorClass","reject","_collectionCreator","changedAttributes","expanded","fxSpeed","_renderPrimaryActions","_renderDisplayButton","displayBtnData","urls","display","active","add_dataset","_renderDetails","noAccess","$details","_renderSecondaryActions","_renderSummary","_renderDetailMessages","_renderDisplayApplications","summaryRenderFn","summaries","unknown","$warnings","detailMessages","templateFn","displayApplications","_renderDownloadButton","_renderShowParamsButton","show_params","hasData","isEmpty","download","_renderMetaFileDownloadButton","meta_file","meta_download","file_type","click .display-btn","click .params-btn","click .download-btn","failed_metadata","detailsTemplate","noAccessTemplate","summaryTemplates","detailMessageTemplates","resubmitted","displayApplicationsTemplate","details","HISTORY_CONTENT","buildHDCASave","isNew","hcontentMixin","HistoryContentMixin","ListDC","PairDC","ListPairedDC","HistoryPairDatasetCollection","HistoryListPairedDatasetCollection","typeIdStr","history_id","hid","type_id","_typeIdStr","_createTypeId","hidden","isVisible","show_deleted","show_hidden","unhide","nameAndId","HistoryContent","HDA_MODEL","HDCA_MODEL","HistoryContents","HistoryDatasetAssociation","validationError","models","historyId","ids","notReady","running","idList","isRunning","getByHid","first","getVisible","filteredHdas","filterFn","c","haveDetails","all","fetchAllDetails","detailsFlag","ajaxQueue","ajaxFn","startingLength","responses","ajaxFns","chain","reverse","notify","curr","total","shift","isCopyable","contentsJSON","copyableModelClasses","isObject","copy","isString","LibraryDatasetDatasetAssociation","HistoryDatasetCollectionAssociation","collection","post","matches","matchesWhat","isArray","elementIdentifiers","collectionType","typeToModel","paired","hdca","element_identifiers","print","ExpandableView","_buildNewRender","_queueNewRender","replaceWith","queue","next","$where","$newDetails","toggleExpanded","expand","collapse","_expand","slideDown","duration","step","complete","slideUp","SelectableViewMixin","DraggableViewMixin","isSelectable","_renderWarnings","_renderTitleBar","selectable","showSelector","draggable","draggableOn","subtitle","click .title-bar","keydown .title-bar","click .selector","_clickTitleBar","altKey","toggleSelect","_keyDownTitleBar","KEYCODE_SPACE","KEYCODE_RETURN","elTemplato","subtitleTemplate","foldout","_createFoldoutPanel","_attachFoldout","FoldoutClass","_getFoldoutPanelClass","$whereTo","_expandByDrilldown","Ui","ToolFormBase","ToolJobs","customize","execute","execute_btn","version","wait","form","portlet","submit","unwait","job_id","job_remap","inputs","label","ignore","help","$tmpl","jobs","njobs","njobs_text","outputs","requirements","requirements_message","req","PopupMenu","menu","_renderAndShow","clickEvent","_getShownPosition","_setUpCloseBehavior","li","option","_templateOptions","check","menuWidth","x","pageX","scrollLeft","pageY","closePopup","err","one","addItem","removeItem","findIndexByHtml","findItemByHtml","create","make_popupmenu","button_element","initial_options","convertedOptions","optionVal","optionKey","newOption","convertLinksToOptions","$parent","selector","elem","$link","linkHref","confirmText","confirm","fromExistingDom","$buttonElement","$menuElement","menuElementLinkSelector","make_popup_menus","menuSelector","buttonSelectorBuildFn","popupMenusCreated","fromDom","ButtonBase","cls_wait","icons","$icon","setIcon","icon_cls","pull","tag","$root","addMenu","margin","ondblclick","onconfirm","cls_tr","dblclick","$thead","$tbody","$tmessage","_row","addHeader","wrapper","appendHeader","align","fade","_commit","delAll","_onclick","old_value","_ondblclick","extension","genome","url_paste","file_name","file_mode","file_size","file_path","file_data","percentage","space_to_tab","to_posix_lines","enabled","baseMVC","AnnotationEditor","HiddenUntilActivatedViewMixin","hiddenUntilActivated","$activator","$annotation","newAnnotation","annotation","previous","Citation","bibtex","entry","BibtexParser","entries","_fields","rawFields","Fields","lowerKey","toLowerCase","entryType","EntryType","fields","BaseCitationCollection","partial","HistoryCitationCollection","ToolCitationCollection","tool_id","TAGS","ANNOTATIONS","DatasetListItemEdit","purgeAllowed","tagsEditorShown","annotationEditorShown","actions","_renderEditButton","_renderDeleteButton","editBtnData","edit","deletedAlready","_renderTags","_renderAnnotation","_makeDbkeyEditLink","unshift","_renderErrButton","_renderRerunButton","_renderVisualizationsButton","report_error","creating_job","rerun","__WEBPACK_AMD_REQUIRE_ARRAY__","ToolsForm","visualizations","$visualizations","_addScratchBookFn","addBack","$links","tagsEditor","TagsEditor","onshowFirstTime","onshow","onhide","annotationEditor","editableDbkey","click .undelete-link","click .purge-link","click .edit-btn","click .delete-btn","click .rerun-btn","click .report-err-btn","click .visualization-btn","click .dbkey a","_clickUndeleteLink","_clickPurgeLink","purge","visualizationsTemplate","searchableMixin","accessible","data_type","meta_files","misc_blurb","misc_info","tags","_generateUrls","visualization","currModel","newState","ready","dataset","hda","responseObj","messageBuriedInUnfortunatelyFormattedError","searchAliases","format","database","blurb","description","DatasetAssociationCollection","HDAListItemView","DATASET","DC_PANEL","HDCAListItemView","change:populated change:visible","HISTORY_CONTENTS","UTILS","History","diskSize","historyJSON","updateTimeoutId","msg","errorHandler","makeArray","newId","clearUpdateTimeout","nice_size","ownedByCurrUser","currUser","isAnonymous","contentsCount","reduce","values","memo","num","checkForUpdates","onReadyCallback","setUpdateTimeout","delay","UPDATE_DELAY","history","refresh","detailIds","_delete","allDatasets","postData","all_datasets","newHistory","setAsCurrent","getHistoryData","getHistory","historyData","getContents","detailIdsFn","hdcaDetailIds","dataset_details","dataset_collection_details","df","historyFn","contentsFn","historyXHR","contentsXHR","ControlledFetchMixin","_buildFetchData","traditional","_fetchOptions","fetchDefaults","_fetchDefaults","pick","_buildFetchFilters","filterMap","qv","HistoryCollection","DEFAULT_ORDER","sortOrders","update_time","getter","h","asc","update_time-asc","name-dsc","size-asc","includeDeleted","setOrder","order","currentHistoryId","allFetched","setUpListeners","change:deleted","copied","original","newData","setCurrent","set-as-current","oldCurrentId","sort","sortOrder","comparator","a","fetchOptions","limit","fetchData","numFetched","hdas","historyOptions","xhrOptions","LoadingIndicator","ListPanel","viewClass","emptyMsg","noneFoundMsg","searchPlaceholder","searchFor","indicator","selecting","lastSelected","dragItems","views","$scrollContainer","freeViews","_showLoadingIndicator","_hideLoadingIndicator","_setUpCollectionListeners","_setUpViewListeners","renderItems","addItemView","removeItemView","shiftKey","lastSelectedView","viewFromModelId","selectRange","showSelectors","_renderControls","_renderTitle","_renderSearch","$controls","_renderMultiselectActionMenu","multiselectActions","$newMenu","$actions","action","$messages","$emptyMessage","itemModel","_createItemView","_attachItems","_renderEmptyMessage","bind","_filterItem","every","matchesAll","ViewClass","args","getSelectedModels","expandAll","collapseAll","_attachView","viewFromModel","viewsWhereModel","properties","viewRange","viewA","viewB","indexA","indexB","searchInput","initialVal","onfirstsearch","_firstSearch","onsearch","searchItems","onclear","clearSearch","hideSelectors","hideSelector","toggleSelectors","selectAll","deselectAll","deselect","range","getSelectedViews","scrollPosition","scrollTo","scrollToTop","scrollToItem","itemTop","scrollToId","click .select-all","click .deselect-all","elTemplate","setModel","freeModel","oldModelId","_setUpModelListeners","$input","_getTagsUsed","tagsToCSV","tagsArray","added","_addNewTagToTagsUsed","newTag","tagsUsed","Handlebars","util","tool_form","tool_link","panel_section","tool_search","_templates","VisibilityMixin","is_visible","ToolParameter","num_samples","unescape","set_value","ToolParameterCollection","DataToolParameter","IntegerToolParameter","get_samples","d3","scale","linear","domain","ticks","FloatToolParameter","SelectToolParameter","subModelTypes","integer","float","Tool","p_class","remove_inputs","types","tool","incompatible_inputs","input","only_samplable_inputs","valid_inputs","apply_search_results","results","set_input_value","set_input_values","inputs_dict","input_name","run","_run","target_dataset","regions","target_dataset_id","get_inputs_dict","input_dict","additional_params","payload","run_deferred","ss_deferred","ToolCollection","ToolSectionLabel","ToolSection","elems","open","clear_search_results","elt","cur_label","all_hidden","ToolSearch","search_hint_string","min_chars_for_search","spinner_url","clear_btn_url","search_url","query","clear_key","do_search","timer","ga","clear_search","ToolPanel","tools","layout","parse_elt","elt_dict","panel_elt","BaseView","update_visible","ToolLinkView","upload","ToolSectionLabelView","ToolSectionView","update_open","section_body","tool_view","label_view","click .toolSectionTitle > a","ToolSearchView","keyup :input","click #search-clear-btn","focus_and_select","query_changed","evData","which","ToolPanelView","handle_search_results","search_view","section_title_view","ToolFormView","tool_panel_view","tool_form_view","show_tool","on_click","menu_options","is_menu_button","tooltip_config","new_elem","buffer","IconButtonCollection","IconButtonMenuView","button","create_icon_buttons_menu","global_config","button_config","cell","top_min","frame_max","top_max","frame_z","frame_counter","frame_counter_id","frame_list","frame_shadow","_templateBackground","el_main","id_shadow","_templateShadow","substring","screen_location","grid_location","grid_rank","grid_lock","_frameResize","_panelRefresh","resize","frameOptions","frame_id","$frame_el","_templateFrameUrl","_templateFrame","content_elt","_toPixelCoord","_frameInsert","_menuRefresh","setOnChange","xy","mousemove","mouseup","mousewheel","DOMMouseScroll","mousedown .frame","mousedown .frame-background","mousedown .frame-scroll-up","mousedown .frame-scroll-down","mousedown .f-close","mousedown .f-pin","_eventFrameMouseDown","_frameIdentify","_frameDragStart","_eventFrameMouseMove","event_xy_new","event_xy_delta","_frameScreen","min_dim","_toGridCoord","_frameOffset","l","_eventFrameMouseUp","_frameDragStop","_eventFrameClose","_panelAnimationComplete","_eventFrameLock","_eventHide","_eventPanelScroll","frames","srcElement","delta","detail","wheelDelta","_panelScroll","_eventPanelScroll_up","_eventPanelScroll_down","_frameFocus","_frameGrid","px","sign","_toGrid","_toPixel","_isCollision","is_collision_pair","_locationRank","loc","top_new","new_loc","place_list","f","_framePlace","has_focus","z","Portlet","optional","v_id","v_name","_templateRow","Base","error_text","wait_text","$message","$options","all_button","$option","_templateOption","_size","exists","_messageShow","_messageHide","BaseIcons","pair","title_new","onnew","$nav","first_tab","current_id","$tabs","$tab_new","_template_tab_new","$tab_title","_template_tab","$tab_content","_template_tab_content","ondel","$del_icon","delRemovable","retitle","class_add","class_remove","class_partial","onadd","onremove","ftp_files","_fill","_templateTable","$select_all","ftp_file","model_index","_find","_templateInfo","$it","filtered","where","path","ctime","ftp_upload_site","class_check","class_uncheck","_switchState","_renderState","$cover","parameter_id","checked","scope","color","$this","targetSelector","mouseover","background","mouseout","parentNode","clearSearchInput","searchTerms","firstSearch","inputTemplate","KEYCODE_ESC","escWillClear","minSearchLen","$clearBtn","$loadingIndicator","toggleLoadingIndicator","$parentNode","inputVal","oninit","s","re","nC","String","fromCharCode","xN","yN","xD","getTime","yD","oFxNcL","oFyNcL","cLoc","numS","props","uploadpost","cnf","progress","maxfilesize","error_filesize","error_default","error_server","error_login","error_message","FormData","sizes","files","file","XMLHttpRequest","setRequestHeader","onreadystatechange","DONE","statusText","addEventListener","lengthComputable","loaded","send","uploadinput","opts","ondragover","ondragleave","change","dialog","uploadbox","queue_running","current_index","queue_index","announce","queue_length","process","queue_stop","stop","configure","compatible","File","FileList","dragleave","m","mod_masthead","GalaxyFrame","button_active","button_load","_activate","masthead","DATA","frame_config","is_tabular","tabular_dataset","add_trackster_viz","viz_id","trackster","viz","Visualization","ui","TracksterUI","view_config","stand_alone","latest_revision","drawables","create_visualization","viewport","bookmarks","$galaxy_main","Masthead","GalaxyMenu","tab_analysis","workflow_options","user","tab_workflow","tab_shared","user_requests","tab_lab","lims_doc_url","visualization_options","tab_visualization","tab_admin","extra_class","tab_help","biostar_url","biostar_url_redirect","support_url","mailing_lists","screencasts_url","wiki_url","citation_url","terms_url","tab_user","use_remote_user","allow_user_creation","active_view","Tools","Upload","optionsMenu","HistoryPanel","CenterPanel","contentWindow","host","prev","fullpath","pathname","hash","params","workflow_id","m_c","m_a","LeftPanel","require_login","toolbox","tool_panel","toolbox_in_panel","toolPanel","_templateTool","stored_workflow_menu_entries","stored_workflow","encoded_stored_workflow_id","handle_minwidth_hint","components","RightPanel","headerButtons","buttonRefresh","currHistoryPanel","loadCurrentHistory","buttonOptions","buttonViewMulti","historyOptionsMenu","anonymous","allow_user_dataset_purge","CurrentHistoryPanel","connectToQuotaMeter","quotaMeter","listenToGalaxy","center","right","Menu","Frame","QuotaMeter","Panel","Login","Analysis","router","Router","message_box_visible","show_inactivity_warning","UserQuotaMeter","build","panels","Views","panel_ids","$panel","_templatePanel","drag","message_box_class","message_box_content","inactivity_box_content","citationModel","CitationView","formattedReference","ref","authorsAndYear","_asSentence","author","year","pages","address","volume","journal","booktitle","howpublished","note","institution","_formatBookInfo","doiUrl","doi","chapter","editor","publisher","series","issn","CitationListView","renderCitation","click .citations-to-bibtex","click .citations-to-formatted","citation","citationView","rawTextarea","citationsElement","showFormatted","showBibtex","partialWarningElement","DATASET_LI_EDIT","DCListItemEdit","DCEListItemEdit","DatasetDCEListItemEdit","NestedDCDCEListItemEdit","DC_EDIT","CollectionPanelEdit","nameSelector","newName","previousName","ListCollectionPanelEdit","PairCollectionPanelEdit","NestedPairCollectionPanelEdit","ListOfPairsCollectionPanelEdit","levenshteinDistance","LIST_COLLECTION_CREATOR","autoPairFnBuilder","getRegExps","_regexps","RegExp","createPair","listA","listB","_pair","preprocessMatch","regexps","matchTo","possible","bestMatch","score","scoreThreshold","createListOfPairsCollection","pairedCollectionCreatorModal","PairView","currentTarget","style","opacity","PairedCollectionCreator","datasets","DEFAULT_FILTERS","automaticallyPair","strategy","matchPercentage","twoPassAutopairing","initialList","commonFilters","strategies","DEFAULT_STRATEGY","removeExtensions","unpairedPanelHidden","pairedPanelHidden","_dataSetUp","illumina","Rs","simple","lcs","levenshtein","unpaired","_sortInitialList","_ensureIds","autoPair","_sortDatasetList","_splitByFilters","_filter","regexFilters","stringFilter","_addToUnpaired","binSearchSortedIndex","low","hi","mid","compared","autopairSimple","autopairLevenshtein","distance","autopairLCS","_naiveStartingAndEndingLCS","s1","s2","fwdLCS","revLCS","fwd","rev","_createPair","_guessNameForPair","forward","fwdName","revName","lastDotIndex","_unpair","unpairAll","pairs","_pairToJSON","ajaxData","_ajaxErrHandler","_renderFilters","_renderUnpaired","_renderPaired","$fwd","$rev","$prd","_renderUnpairedDisplayStr","_renderUnpairedEmpty","_renderPairButton","_renderUnpairedDataset","_adjUnpairedOnScrollbar","_renderUnpairedNotShown","numFiltered","$msg","$unpairedColumns","$firstDataset","ucRight","outerWidth","dsRight","rightDiff","_renderPairedEmpty","pairView","_chooseFiltersPopover","filterChoice","val1","val2","$popoverContent","filterSet","splitView","msgClass","hideUnpaired","click .forward-column .column-title","click .reverse-column .column-title","click .unpair-all-link","change .forward-unpaired-filter input","focus .forward-unpaired-filter input","click .autopair-link","click .choose-filters .filter-choice","click .clear-filters-link","change .reverse-unpaired-filter input","focus .reverse-unpaired-filter input","click .forward-column .dataset.unpaired","click .reverse-column .dataset.unpaired","click .paired-column .dataset.unpaired","click .unpaired-columns","mousedown .unpaired-columns .dataset","click .paired-column-title","mousedown .flexible-partition-drag","click .paired-columns .dataset.paired","click .paired-columns","click .paired-columns .pair-name","click .unpair-btn","dragover .paired-columns .column-datasets","drop .paired-columns .column-datasets","pair.dragstart .paired-columns .column-datasets","pair.dragend   .paired-columns .column-datasets","change .remove-extensions","toggleExtensions","_clickShowOnlyUnpaired","hidePaired","_clickShowOnlyPaired","_clickUnpairAll","_clickAutopair","_clickFilterChoice","$selected","_hideChooseFilters","_clearFilters","_clickUnpairedDataset","toggleSelectUnpaired","$dataset","force","waitToPair","pairAllSelected","fwds","revs","clearSelectedUnpaired","_mousedownUnpaired","$startTarget","moveListener","_clickPairRow","rowIndex","_startPartitionDrag","endDrag","unbind","trackMouse","startingY","adjPartition","adj","$unpaired","$paired","unpairedHi","pairedHi","movingUpwards","flex","selectPair","clearSelectedPaired","_clickPairName","$name","$pair","customizedName","_clickUnpair","pairIndex","_dragoverPairedColumns","_getNearestPairedDatasetLi","_dropPairedColumns","_syncPairsToDom","newPaired","_pairDragstart","_pairDragend","_printList","_printPair","LIST_CREATOR","createPairCollection","pairCollectionCreatorModal","PairedDatasetCollectionElementView","identifier","PairCollectionCreator","_createForwardElementView","_createReverseElementView","swap","click .swap","checksum","sum","section","field","field_list","collapsed","job_input_id","input_id","input_value","map_dict","result_dict","convert","head","node","section_label","block_indices","block_prefix","block_label","test_param","selectedCase","matchCase","flat","collapsible_value","p_id","_iterate","truevalue","falsevalue","cases","matchModel","matchResponse","new_id","separator","child","input_list","text_enable","text_disable","cls_enable","cls_disable","default_value","$field","$optional","$optional_icon","$error_text","$error","collapsible","_tooltip","tmp","argument","SelectContent","SelectLibrary","SelectFtp","ColorPicker","data_column","genomebuild","data_collection","boolean","drill_down","hidden_data","baseurl","library_data","ftpfile","input_def","fieldClass","incompatible","_fieldSelect","_fieldText","_fieldData","is_workflow","extensions","_fieldHidden","SelectClass","searchable","_fieldDrilldown","str_value","_fieldSlider","precise","_fieldBoolean","_fieldColor","_fieldLibrary","_fieldFtp","Table","button_new","table","button_delete","table_row","Repeat","InputElement","Parameters","parameters","_addConditional","_addRepeat","_addSection","_addRow","case_def","section_id","section_row","nonhidden","sub_section_id","sub_section","block_index","repeat","n_min","n_cache","input_element","button_visible","element_list","Tabs","ToolTemplate","radio_buttons","mode","hda_error","hdca_error","select_single","select_multiple","select_collection","button_type","$batch","template_batch","n_buttons","button_width","margin-left","_update","select_options","id_list","_select","batch","_batch","map_over_type","FormSection","initial_errors","galaxy","_build","new_model","new_options","opt","is_dynamic","errors","error_messages","_renderForm","current_check","new_check","HDA_LI","HDAListItemEdit","click .unhide-link","HDCA_LI","DC_PANEL_EDIT","HDCAListItemEdit","HISTORY_MODEL","HPANEL_EDIT","HistoryPanelPrefs","SessionStorageModel","storageKey","HistoryPanelEdit","HDCAViewClass","preferences","currentContentId","loadHistoryWithDetails","contentsData","switchToHistory","createNewHistory","displayMessage","loadHistory","oldState","storage","_debouncedScrollCaptureHandler","debounce","prependTo","_renderQuotaMessage","quotaMsg","$emptyMsg","$toolMenu","_setCurrentContentById","setCurrentContent","pathToMatch","useToURLRegexMap","hdaId","hdaUse","regex","use","showQuotaMessage","hideQuotaMessage","isOverQuota","clearMessages","$target","not","quotaMsgTemplate","HPANEL","HDA_LI_EDIT","HDCA_LI_EDIT","PAIR_COLLECTION_CREATOR","LIST_OF_PAIRS_COLLECTION_CREATOR","HDAViewClass","dataDropped","dropTargetOff","_renderCounts","_handleHdaDeletionChange","_handleHdaVisibleChange","updateHistoryDiskSize","toggleLink","_class","msgs","showDeleted","showHidden","toggleHDATagEditors","toggleHDAAnnotationEditors","_collectionActions","showOrHide","click .show-selectors-btn","click .toggle-deleted-link","toggleShowDeleted","click .toggle-hidden-link","toggleShowHidden","dropTargetOn","dropTarget","dropHandlers","dragenter","$dropTarget","_renderDropTarget","_renderDropTargetHelp","evName","border-radius","font-size","font-style","_dropHandlers","dropTargetToggle","getData","COLLECTION_PANEL","USER","HistoryPrefs","expandedIds","addExpanded","removeExpanded","omit","storageKeyPrefix","historyStorageKey","clearAll","sessionStorage","loading-done","views:ready view:attached view:removed","_renderSelectButton","initiallyExpanded","_loadHistoryFromXHR","JSONToModel","refreshContents","newHistoryJSON","newHdaJSON","_setUpWebStorage","isBoolean","change:show_deleted","newVal","change:show_hidden","$existing","click .messages [class$=message]","store","inputSelector","parsed","_parseErrorMessage","sentryId","_bePolite","raven","Raven","lastEventId","agent","navigator","userAgent","lastAjax","User","getAllResponseHeaders","responseHeaders","compact","$msgContainer","$detailsLink","_messageToModalOptions","functions","pre","Ok","scrollToHid","buildMenu","isAnon","menuOption","anon","galaxy_main","Form","CitationModel","_buildForm","_buildModel","_operations","_updateModel","_footer","hide_message","build_url","build_data","err_msg","Close","model_url","update_url","current_state","tool_version","versions_button","narrow","versions","menu_button","origin","sharable_url","citations","$citations","citation_list_view","job_def","_validation","_refreshHdas","err_data","job_inputs","batch_n","batch_src","input_field","standard","base","theme","$view","$value","$boxes","_templateCheck","hex","rgb","_content","padding","line_def","bottom","_templateContent","$label","$line","$box","_templateBox","initial","header_index","_setState","header_id","is_expanded","$subgroup","attach","iterate","level","has_options","new_header","$group","$buttongroup","empty_text","$select","_availableOptions","available","List","ftpfile_list","Libraries","LibraryDatasets","library_id","libraries","library_select","dataset_list","library_current","useslider","$slider","slider","$text","pressed","UploadSettings","UploadFtp","Popover","status_classes","init","_refreshReady","button_menu","_showFtp","ftp","settings","_showSettings","_refreshPercentage","_refreshStatus","_refreshInfo","_refreshFileName","_refreshMode","_refreshFileSize","offsetHeight","UploadModel","UploadRow","select_extension","select_genome","list_extensions","list_genomes","currentFtp","btnStart","_eventStart","btnClose","ext","composite_files","file_desc","_showExtensionInfo","default_genome","_eventAnnounce","_updateScreen","upload_row","nginx_upload_path","toData","_eventSuccess","_eventError","_eventProgress","it","extension_popup","_templateDescription","description_url","queued","updateGenome","default_extension","updateExtension","_removeRow","showExtensionInfo","_refreshGenome","_refreshExtension","count","upload_size","ui_button","btnLocal","btnFtp","_eventFtp","btnCreate","_eventCreate","btnStop","_eventStop","btnReset","_eventReset","_eventComplete","_eventRemove","_uploadPercentage","upload_completed","currentHistory","defaults_only","_percentage","_status","UploadButton","UploadViewDefault","UploadViewComposite","auto","current_history","ui_button_view","datatypes","a_text","b_text","datatypes_disable_auto","genomes","current_user","tabs","default_view","composite_view","items","prefix","warnAtPercent","errorAtPercent","loadFromApi","_render_quota","modelJson","percent","quota_percent","$meter","_templateQuotaMeter","$bar","_render_usage","usage","_templateUsage","meterHtml","nice_total_disk_usage","compiler","depth0","helpers","partials","helper","alias1","helperMissing","alias2","alias3","escapeExpression","useData","1","stack1","program","inverse","noop","lambda","labels","link","min_width","$indicator","cover","z-index","background-color","text-align","margin-top","has_deferred","isEmptyObject","matrix","charAt"],"mappings":"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DAAmEA,EAAA,eACnE,SACA,SACA,wCACA,4DACA,UAAAA,EAAA,oEACA,sCACA,UACAV,KAAA,KAGAid,OAAArtB,EAAA2oB,UACA,6CACA,+CACA,UAAA7X,EAAA,yCACAA,EAAA,cACA,OACA,wDACA,UAAAA,EAAA,wCACAA,EAAA,kBACA,OACA,SACA,8DACA,UACAV,KAAA,KAGAmd,OAAAvtB,EAAA2oB,UACA,iCACA,sBACA,0DACA,gBAAA7X,EAAA,+CACA,kDAAAA,EAAA,kBACA,SACA,SAEA,gDACA,wCACA,mDAAAA,EAAA,sBACA,8CACA,0EACAA,EAAA,yCACA,+BACA,YACA,yCACA,mBAAAA,EAAA,2CACA,mBAAAA,EAAA,yDACA,QACA,SACA,SAEA,wCACA,qDAAAA,EAAA,2BACA,SACA,UACAV,KAAA,KAGA8c,YAAAltB,EAAA2oB,UACA,MAAA7X,GACA,oGACA,sGACA,iEACAV,KAAA,YACA,OACA,OAAAU,GACA,8CACA,qEACAV,KAAA,aACA,OAAAU,GACA,mEACA,uEACAV,KAAA,aACA,OAAAU,GACA,+FACA,sGACA,yEACA,mEACAV,KAAA,aACA,OAAAU,GACA,oGACA,kBACAV,KAAA,aACA,OAAAU,GACA,wFACAV,KAAA,aACA,cACA,MAAAU,GACA,4FACA,gEACAV,KAAA,aACAA,KAAA,KAGAkb,gBAAAtrB,EAAA2oB,UACA7X,EAAA,mEACA,mDACA,mEACA,kBACAV,KAAA,KAGAwe,eAAA5uB,EAAA2oB,UACA,wCACA7X,EAAA,sBACAA,EAAA,oEAAAA,EAAA,sBACA,SACAV,KAAA,KAGA2c,eAAA/sB,EAAA2oB,UACA,wCACA,2DACA,+BACA,kCACA7X,EAAA,sEACA,mDACA,mEACA,iBACA,6CACAA,EAAA,iCACA,UACA,SACAA,EAAA,0DACAA,EAAA,oBACA,sDAAAA,EAAA,kBACAA,EAAA,iCACA,UACA,SACA,SACA,wCACA,gDACA,wCACA,mDAAAA,EAAA,sBAEA,SACA,SACA,UACAV,KAAA,MAKA/O,SAAA,WAA0B,iCAS1BuxB,EAAA,SAAArM,EAAA9mB,EAAAozB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AGAid,OAAArtB,EAAA2oB,UAEA,iFACA,kDACA,oCACA,SACA,yDACA,oCACA,SACA,kDACA,oCACA,SACA,SACA,mCACA,+CAAA7X,EAAA,6BACA,8BACA,iDACA,8BACA,SACA,yDACAA,EAAA,cACA,OACA,SACA,SACA,+EACA,oCACA,UACAV,KAAA,KAGAmd,OAAAvtB,EAAA2oB,UACA,iCACA,sBACA,sDACA7X,EAAA,8CACA,iEACA,WACA,SACA,sBACA,0DACA,gBAAAA,EAAA,yCACA,kDAAAA,EAAA,kBACA,SACA,SAEA,gDACA,wCACA,mDAAAA,EAAA,sBACA,8CACA,0EACAA,EAAA,yCACA,+BACA,YACA,yCACA,mBAAAA,EAAA,2CACA,mBAAAA,EAAA,yDACA,QACA,SACA,SAEA,wCACA,qDAAAA,EAAA,2BACA,SACA,UACAV,KAAA,KAGA8c,YAAAltB,EAAA2oB,UACA,MAAA7X,GACA,wGACA,2GACA,yGACA,sCACAV,KAAA,YACA,MAAAU,GACA,8FACA,yDACA,wFACA,iCACA,8BACA,sEACA,yDACA,4CACA,sEACA,yDACA,QACA,6DACA,qEACA,uDACA,4CACA,QACA,6DACA,4DACA,QACA,SACAV,KAAA,YACA,MAAAU,GACA,gEACA,oDACA,yEACA,sEACA,QACA,8DACA,mEACA,QACA,iEACA,8FACA,uEACA,6CACA,QACA,4CACA,iEACA,QACA,SACAV,KAAA,YACA,MAAAU,GACA,iDACA,2FACA,0FACAV,KAAA,YACA,MAAAU,GACA,sGACA,qGACAV,KAAA,YACA,MAAAU,GACA,4FACA,gEACA,oEACAV,KAAA,aACAA,KAAA,KAMA,IAAAmnD,GAAA,SAAAM,EAAAp4D,GAEA,GACAqrB,GADA1M,EAAAre,EAAAyV,UAeA,IAZA/V,EAAAO,EAAA+D,SAAAtE,OACAo4D,WACAntC,SAAA,WACArR,OAAAE,MAAAlR,OACA+V,EAAA0U,OAAA,cAEArI,SAAA,SAAAK,EAAA3oB,GACAkX,OAAAE,MAAAlR,OACA+V,EAAAvI,QAAA1T,OAIA5C,OAAA8Z,gBAAAE,MACA,SAAAgT,OAA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","file":"analysis.bundled.js","sourcesContent":["webpackJsonp([2],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($) {\n\tvar App = __webpack_require__( 80 );\n\t\n\t//TODO: this doesn't address multiple apps per page\n\twindow.app = function app( options, bootstrapped ){\n\t    $( function() {\n\t        var app = new App( options.config );\n\t    });\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($, jQuery, _) {/**\n\t * Galaxy utilities comprises small functions, which at this point\n\t * do not require their own classes/files\n\t*/\n\t\n\t// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\t/** Traverse through json\n\t*/\n\tfunction deepeach(dict, callback) {\n\t    for (var i in dict) {\n\t        var d = dict[i];\n\t        if (d && typeof(d) == \"object\") {\n\t            callback(d);\n\t            deepeach(d, callback);\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * Check if a string is a json string\n\t * @param{String}   text - Content to be validated\n\t */\n\tfunction isJSON(text) {\n\t    return /^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').\n\t        replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n\t        replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''));\n\t};\n\t\n\t/**\n\t * Sanitize/escape a string\n\t * @param{String}   content - Content to be sanitized\n\t */\n\tfunction sanitize(content) {\n\t    return $('<div/>').text(content).html();\n\t};\n\t\n\t/**\n\t * Validate atomic values or list of values\n\t * usually used for selectable options\n\t * @param{String}   value - Value or list to be validated\n\t */\n\tfunction validate (value) {\n\t    if (!(value instanceof Array)) {\n\t        value = [value];\n\t    }\n\t    if (value.length === 0) {\n\t        return false;\n\t    }\n\t    for (var i in value) {\n\t        if (['__null__', '__undefined__', null, undefined].indexOf(value[i]) > -1) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t};\n\t\n\t/**\n\t * Convert list to pretty string\n\t * @param{String}   lst - List of strings to be converted in human readable list sentence\n\t */\n\tfunction textify(lst) {\n\t    var lst = lst.toString();\n\t    if (lst) {\n\t        lst = lst.replace(/,/g, ', ');\n\t        var pos = lst.lastIndexOf(', ');\n\t        if (pos != -1) {\n\t            lst = lst.substr(0, pos) + ' or ' + lst.substr(pos+1);\n\t        }\n\t        return lst;\n\t    }\n\t    return '';\n\t};\n\t\n\t/**\n\t * Request handler for GET\n\t * @param{String}   url     - Url request is made to\n\t * @param{Function} success - Callback on success\n\t * @param{Function} error   - Callback on error\n\t * @param{Boolean}  cache   - Use cached data if available\n\t */\n\tfunction get (options) {\n\t    top.__utils__get__ = top.__utils__get__ || {};\n\t    if (options.cache && top.__utils__get__[options.url]) {\n\t        options.success && options.success(top.__utils__get__[options.url]);\n\t        console.debug('utils.js::get() - Fetching from cache [' + options.url + '].');\n\t    } else {\n\t        request({\n\t            url     : options.url,\n\t            data    : options.data,\n\t            success : function(response) {\n\t                top.__utils__get__[options.url] = response;\n\t                options.success && options.success(response);\n\t            },\n\t            error : function(response) {\n\t                options.error && options.error(response);\n\t            }\n\t        });\n\t    }\n\t};\n\t\n\t/**\n\t * Request handler\n\t * @param{String}   method  - Request method ['GET', 'POST', 'DELETE', 'PUT']\n\t * @param{String}   url     - Url request is made to\n\t * @param{Object}   data    - Data send to url\n\t * @param{Function} success - Callback on success\n\t * @param{Function} error   - Callback on error\n\t */\n\tfunction request (options) {\n\t    // prepare ajax\n\t    var ajaxConfig = {\n\t        contentType : 'application/json',\n\t        type        : options.type || 'GET',\n\t        data        : options.data || {},\n\t        url         : options.url\n\t    }\n\t\n\t    // encode data into url\n\t    if (ajaxConfig.type == 'GET' || ajaxConfig.type == 'DELETE') {\n\t        if (ajaxConfig.url.indexOf('?') == -1) {\n\t            ajaxConfig.url += '?';\n\t        } else {\n\t            ajaxConfig.url += '&';\n\t        }\n\t        ajaxConfig.url      = ajaxConfig.url + $.param(ajaxConfig.data, true);\n\t        ajaxConfig.data     = null;\n\t    } else {\n\t        ajaxConfig.dataType = 'json';\n\t        ajaxConfig.url      = ajaxConfig.url;\n\t        ajaxConfig.data     = JSON.stringify(ajaxConfig.data);\n\t    }\n\t\n\t    // make request\n\t    $.ajax(ajaxConfig)\n\t    .done(function(response) {\n\t        if (typeof response === 'string') {\n\t            try {\n\t                response = response.replace('Infinity,', '\"Infinity\",');\n\t                response = jQuery.parseJSON(response);\n\t            } catch (e) {\n\t                console.debug(e);\n\t            }\n\t        }\n\t        options.success && options.success(response);\n\t    })\n\t    .fail(function(response) {\n\t        var response_text = null;\n\t        try {\n\t            response_text = jQuery.parseJSON(response.responseText);\n\t        } catch (e) {\n\t            response_text = response.responseText;\n\t        }\n\t        options.error && options.error(response_text, response);\n\t    });\n\t};\n\t\n\t/**\n\t * Read a property value from CSS\n\t * @param{String}   classname   - CSS class\n\t * @param{String}   name        - CSS property\n\t */\n\tfunction cssGetAttribute (classname, name) {\n\t    var el = $('<div class=\"' + classname + '\"></div>');\n\t    el.appendTo(':eq(0)');\n\t    var value = el.css(name);\n\t    el.remove();\n\t    return value;\n\t};\n\t\n\t/**\n\t * Load a CSS file\n\t * @param{String}   url - Url of CSS file\n\t */\n\tfunction cssLoadFile (url) {\n\t    if (!$('link[href^=\"' + url + '\"]').length) {\n\t        $('<link href=\"' + galaxy_config.root + url + '\" rel=\"stylesheet\">').appendTo('head');\n\t    }\n\t};\n\t\n\t/**\n\t * Safely merge to dictionaries\n\t * @param{Object}   options         - Target dictionary\n\t * @param{Object}   optionsDefault  - Source dictionary\n\t */\n\tfunction merge (options, optionsDefault) {\n\t    if (options) {\n\t        return _.defaults(options, optionsDefault);\n\t    } else {\n\t        return optionsDefault;\n\t    }\n\t};\n\t\n\t\n\t/**\n\t * Round floaing point 'number' to 'numPlaces' number of decimal places.\n\t * @param{Object}   number      a floaing point number\n\t * @param{Object}   numPlaces   number of decimal places\n\t */\n\tfunction roundToDecimalPlaces( number, numPlaces ){\n\t    var placesMultiplier = 1;\n\t    for( var i=0; i<numPlaces; i++ ){\n\t        placesMultiplier *= 10;\n\t    }\n\t    return Math.round( number * placesMultiplier ) / placesMultiplier;\n\t}\n\t\n\t// calculate on import\n\tvar kb = 1024,\n\t    mb = kb * kb,\n\t    gb = mb * kb,\n\t    tb = gb * kb;\n\t/**\n\t * Format byte size to string with units\n\t * @param{Integer}   size           - Size in bytes\n\t * @param{Boolean}   normal_font    - Switches font between normal and bold\n\t */\n\tfunction bytesToString (size, normal_font, numberPlaces) {\n\t    numberPlaces = numberPlaces !== undefined? numberPlaces: 1;\n\t    // identify unit\n\t    var unit = \"\";\n\t    if (size >= tb){ size = size / tb; unit = 'TB'; } else\n\t    if (size >= gb){ size = size / gb; unit = 'GB'; } else\n\t    if (size >= mb){ size = size / mb; unit = 'MB'; } else\n\t    if (size >= kb){ size = size / kb; unit = 'KB'; } else\n\t    if (size >  0){ unit = 'b'; }\n\t    else { return normal_font? '0 b': '<strong>-</strong>'; }\n\t    // return formatted string\n\t    var rounded = unit == 'b'? size: roundToDecimalPlaces( size, numberPlaces );\n\t    if (normal_font) {\n\t       return  rounded + ' ' + unit;\n\t    } else {\n\t        return '<strong>' + rounded + '</strong> ' + unit;\n\t    }\n\t};\n\t\n\t/**\n\t * Create a unique id\n\t */\n\tfunction uid(){\n\t    top.__utils__uid__ = top.__utils__uid__ || 0;\n\t    return 'uid-' + top.__utils__uid__++;\n\t};\n\t\n\t/**\n\t * Create a time stamp\n\t */\n\tfunction time() {\n\t    var d = new Date();\n\t    var hours = (d.getHours() < 10 ? \"0\" : \"\") + d.getHours();\n\t    var minutes = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes()\n\t    return datetime = d.getDate() + \"/\"\n\t                + (d.getMonth() + 1)  + \"/\"\n\t                + d.getFullYear() + \", \"\n\t                + hours + \":\"\n\t                + minutes;\n\t};\n\t\n\treturn {\n\t    cssLoadFile: cssLoadFile,\n\t    cssGetAttribute: cssGetAttribute,\n\t    get: get,\n\t    merge: merge,\n\t    bytesToString: bytesToString,\n\t    uid: uid,\n\t    time: time,\n\t    request: request,\n\t    sanitize: sanitize,\n\t    textify: textify,\n\t    validate: validate,\n\t    deepeach: deepeach,\n\t    isJSON: isJSON\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n/* 5 */,\n/* 6 */,\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/**\n\t *  This class contains backbone wrappers for basic ui elements such as Images, Labels, Buttons, Input fields etc.\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4),\n\t    __webpack_require__(103),\n\t    __webpack_require__(106),\n\t    __webpack_require__(56),\n\t    __webpack_require__(102),\n\t    __webpack_require__(31),\n\t    __webpack_require__(10)], __WEBPACK_AMD_DEFINE_RESULT__ = function( Utils, Select, Slider, Options, Drilldown, Buttons, Modal ) {\n\t\n\t    /** Image wrapper */\n\t    var Image = Backbone.View.extend({\n\t        initialize : function(options) {\n\t            this.options = Utils.merge(options, {\n\t                url  : '',\n\t                cls  : ''\n\t            });\n\t            this.setElement(this._template(this.options));\n\t        },\n\t        _template: function(options) {\n\t            return '<img class=\"ui-image ' + options.cls + '\" src=\"' + options.url + '\"/>';\n\t        }\n\t    });\n\t\n\t    /** Label wrapper */\n\t    var Label = Backbone.View.extend({\n\t        initialize : function(options) {\n\t            this.options = Utils.merge(options, {\n\t                title  : '',\n\t                cls    : ''\n\t            });\n\t            this.setElement(this._template(this.options));\n\t        },\n\t        title: function(new_title) {\n\t            this.$el.html(new_title);\n\t        },\n\t        value: function() {\n\t            return options.title;\n\t        },\n\t        _template: function(options) {\n\t            return '<label class=\"ui-label ' + options.cls + '\">' + options.title + '</label>';\n\t        }\n\t    });\n\t\n\t    /** Displays an icon with title */\n\t    var Icon = Backbone.View.extend({\n\t        initialize : function(options) {\n\t            this.options = Utils.merge(options, {\n\t                floating    : 'right',\n\t                icon        : '',\n\t                tooltip     : '',\n\t                placement   : 'bottom',\n\t                title       : '',\n\t                cls         : ''\n\t            });\n\t            this.setElement(this._template(this.options));\n\t            $(this.el).tooltip({title: options.tooltip, placement: 'bottom'});\n\t        },\n\t        _template: function(options) {\n\t            return  '<div>' +\n\t                        '<span class=\"fa ' + options.icon + '\" class=\"ui-icon\"/>&nbsp;' +\n\t                        options.title +\n\t                    '</div>';\n\t        }\n\t    });\n\t\n\t    /** Renders an anchor element */\n\t    var Anchor = Backbone.View.extend({\n\t        initialize : function(options) {\n\t            this.options = Utils.merge(options, {\n\t                title  : '',\n\t                cls    : ''\n\t            });\n\t            this.setElement(this._template(this.options));\n\t            $(this.el).on('click', options.onclick);\n\t        },\n\t        _template: function(options) {\n\t            return '<div><a href=\"javascript:void(0)\" class=\"ui-anchor ' + options.cls + '\">' + options.title + '</a></div>';\n\t        }\n\t    });\n\t\n\t    /** Displays messages used e.g. in the tool form */\n\t    var Message = Backbone.View.extend({\n\t        initialize : function(options) {\n\t            this.options = Utils.merge(options, {\n\t                message     : null,\n\t                status      : 'info',\n\t                cls         : '',\n\t                persistent  : false\n\t            });\n\t            this.setElement('<div class=\"' + this.options.cls + '\"/>');\n\t            this.options.message && this.update(this.options);\n\t        },\n\t\n\t        // update\n\t        update: function(options) {\n\t            // get options\n\t            this.options = Utils.merge(options, this.options);\n\t\n\t            // show message\n\t            if (options.message != '') {\n\t                this.$el.html(this._template(this.options));\n\t                this.$el.fadeIn();\n\t\n\t                // clear previous timeouts\n\t                if (this.timeout) {\n\t                    window.clearTimeout(this.timeout);\n\t                }\n\t\n\t                // set timeout if message is not persistent\n\t                if (!options.persistent) {\n\t                    var self = this;\n\t                    this.timeout = window.setTimeout(function() {\n\t                        if (self.$el.is(':visible')) {\n\t                            self.$el.fadeOut();\n\t                        } else {\n\t                            self.$el.hide();\n\t                        }\n\t                    }, 3000);\n\t                }\n\t            } else {\n\t                this.$el.fadeOut();\n\t            }\n\t        },\n\t\n\t        // template\n\t        _template: function(options) {\n\t            var cls_status = 'ui-message alert alert-' + options.status;\n\t            if (options.large) {\n\t                cls_status = ( ( options.status == 'success' && 'done' ) ||\n\t                               ( options.status == 'danger' && 'error' ) ||\n\t                                 options.status ) + 'messagelarge';\n\t            }\n\t            return  '<div class=\"' + cls_status + '\" >' +\n\t                        options.message +\n\t                    '</div>';\n\t        }\n\t    });\n\t\n\t    /** Render a search box */\n\t    var Searchbox = Backbone.View.extend({\n\t        initialize : function(options) {\n\t            this.options = Utils.merge(options, {\n\t                onclick : null,\n\t                searchword : ''\n\t            });\n\t            this.setElement(this._template(this.options));\n\t            var self = this;\n\t            if (this.options.onclick) {\n\t                this.$el.on('submit', function(e) {\n\t                    var search_field = self.$el.find('#search');\n\t                    self.options.onclick(search_field.val());\n\t                });\n\t            }\n\t        },\n\t        _template: function(options) {\n\t            return  '<div class=\"ui-search\">' +\n\t                        '<form onsubmit=\"return false;\">' +\n\t                            '<input id=\"search\" class=\"form-control input-sm\" type=\"text\" name=\"search\" placeholder=\"Search...\" value=\"' + options.searchword + '\">' +\n\t                            '<button type=\"submit\" class=\"btn search-btn\">' +\n\t                                '<i class=\"fa fa-search\"></i>' +\n\t                            '</button>' +\n\t                        '</form>' +\n\t                    '</div>';\n\t        }\n\t    });\n\t\n\t    /** Renders an input element used e.g. in the tool form */\n\t    var Input = Backbone.View.extend({\n\t        initialize : function(options) {\n\t            // configure options\n\t            this.options = Utils.merge(options, {\n\t                type            : 'text',\n\t                placeholder     : '',\n\t                disabled        : false,\n\t                visible         : true,\n\t                cls             : '',\n\t                area            : false\n\t            });\n\t\n\t            // create new element\n\t            this.setElement(this._template(this.options));\n\t\n\t            // set initial value\n\t            if (this.options.value !== undefined) {\n\t                this.value(this.options.value);\n\t            }\n\t\n\t            // disable input field\n\t            if (this.options.disabled) {\n\t                this.$el.prop('disabled', true);\n\t            }\n\t\n\t            // hide input field\n\t            if (!this.options.visible) {\n\t                this.$el.hide();\n\t            }\n\t\n\t            // onchange event handler. fires on user activity.\n\t            var self = this;\n\t            this.$el.on('input', function() {\n\t                if (self.options.onchange) {\n\t                    self.options.onchange(self.$el.val());\n\t                }\n\t            });\n\t        },\n\t\n\t        // value\n\t        value : function (new_val) {\n\t            if (new_val !== undefined) {\n\t                this.$el.val(new_val);\n\t            }\n\t            return this.$el.val();\n\t        },\n\t\n\t        // template\n\t        _template: function(options) {\n\t            if (options.area) {\n\t                return '<textarea id=\"' + options.id + '\" class=\"ui-textarea ' + options.cls + '\"></textarea>';\n\t            } else {\n\t                return '<input id=\"' + options.id + '\" type=\"' + options.type + '\" value=\"' + options.value + '\" placeholder=\"' + options.placeholder + '\" class=\"ui-input ' + options.cls + '\">';\n\t            }\n\t        }\n\t    });\n\t\n\t    /** Creates a hidden element input field used e.g. in the tool form */\n\t    var Hidden = Backbone.View.extend({\n\t        initialize : function(options) {\n\t            this.options = options;\n\t            this.setElement(this._template(this.options));\n\t            if (this.options.value !== undefined) {\n\t                this.value(this.options.value);\n\t            }\n\t        },\n\t        value : function (new_val) {\n\t            if (new_val !== undefined) {\n\t                this.$('hidden').val(new_val);\n\t            }\n\t            return this.$('hidden').val();\n\t        },\n\t        _template: function(options) {\n\t            var tmpl =  '<div id=\"' + options.id + '\" >';\n\t            if (options.info) {\n\t                tmpl +=     '<div>' + options.info + '</div>';\n\t            }\n\t            tmpl +=         '<hidden value=\"' + options.value + '\"/>' +\n\t                        '</div>';\n\t            return tmpl;\n\t        }\n\t    });\n\t\n\t    return {\n\t        Anchor      : Anchor,\n\t        Button      : Buttons.ButtonDefault,\n\t        ButtonIcon  : Buttons.ButtonIcon,\n\t        ButtonCheck : Buttons.ButtonCheck,\n\t        ButtonMenu  : Buttons.ButtonMenu,\n\t        ButtonLink  : Buttons.ButtonLink,\n\t        Icon        : Icon,\n\t        Image       : Image,\n\t        Input       : Input,\n\t        Label       : Label,\n\t        Message     : Message,\n\t        Modal       : Modal,\n\t        RadioButton : Options.RadioButton,\n\t        Checkbox    : Options.Checkbox,\n\t        Radio       : Options.Radio,\n\t        Searchbox   : Searchbox,\n\t        Select      : Select,\n\t        Hidden      : Hidden,\n\t        Slider      : Slider,\n\t        Drilldown   : Drilldown\n\t    }\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 8 */,\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function(){\n\t//==============================================================================\n\t/** Map of possible HDA/collection/job states to their string equivalents.\n\t *      A port of galaxy.model.Dataset.states.\n\t */\n\tvar STATES = {\n\t    // NOT ready states\n\t    /** is uploading and not ready */\n\t    UPLOAD              : 'upload',\n\t    /** the job that will produce the dataset queued in the runner */\n\t    QUEUED              : 'queued',\n\t    /** the job that will produce the dataset is running */\n\t    RUNNING             : 'running',\n\t    /** metadata for the dataset is being discovered/set */\n\t    SETTING_METADATA    : 'setting_metadata',\n\t\n\t    // ready states\n\t    /** was created without a tool */\n\t    NEW                 : 'new',\n\t    /** has no data */\n\t    EMPTY               : 'empty',\n\t    /** has successfully completed running */\n\t    OK                  : 'ok',\n\t\n\t    /** the job that will produce the dataset paused */\n\t    PAUSED              : 'paused',\n\t    /** metadata discovery/setting failed or errored (but otherwise ok) */\n\t    FAILED_METADATA     : 'failed_metadata',\n\t//TODO: not in trans.app.model.Dataset.states - is in database\n\t    /** not accessible to the current user (i.e. due to permissions) */\n\t    NOT_VIEWABLE        : 'noPermission',\n\t    /** deleted while uploading */\n\t    DISCARDED           : 'discarded',\n\t    /** the tool producing this dataset failed */\n\t    ERROR               : 'error'\n\t};\n\t\n\tSTATES.READY_STATES = [\n\t    STATES.OK,\n\t    STATES.EMPTY,\n\t    STATES.PAUSED,\n\t    STATES.FAILED_METADATA,\n\t    STATES.NOT_VIEWABLE,\n\t    STATES.DISCARDED,\n\t    STATES.ERROR\n\t];\n\t\n\tSTATES.NOT_READY_STATES = [\n\t    STATES.UPLOAD,\n\t    STATES.QUEUED,\n\t    STATES.RUNNING,\n\t    STATES.SETTING_METADATA,\n\t    STATES.NEW\n\t];\n\t\n\t\n\t//==============================================================================\n\t    return STATES;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\tvar View = Backbone.View.extend({\n\t\n\t    // base element\n\t    elMain: 'body',\n\t    \n\t    // defaults options\n\t    optionsDefault: {\n\t        title            : 'ui-modal',\n\t        body             : '',\n\t        backdrop         : true,\n\t        height           : null,\n\t        width            : null,\n\t        closing_events   : false,\n\t        closing_callback : null,\n\t        title_separator  : true\n\t    },\n\t\n\t    // button list\n\t    buttonList: {},\n\t\n\t    // initialize\n\t    initialize : function(options) {\n\t        if (options){\n\t            this._create(options);\n\t        }\n\t    },\n\t    \n\t    // adds and displays a new frame/window\n\t    show: function(options) {\n\t        // create\n\t        this.initialize(options);\n\t        \n\t        // fix height\n\t        if (this.options.height){\n\t            this.$body.css('height', this.options.height);\n\t            this.$body.css('overflow', 'hidden');\n\t        } else {\n\t            this.$body.css('max-height', $(window).height() / 2);\n\t        }\n\t\n\t        // fix width\n\t        if (this.options.width) {\n\t            this.$dialog.css('width', this.options.width);\n\t        }\n\t\n\t        // show\n\t        if (this.visible) {\n\t            this.$el.show();\n\t        } else {\n\t            this.$el.fadeIn('fast');\n\t        }\n\t\n\t        // set visible flag\n\t        this.visible = true;\n\t    },\n\t\n\t    // hide\n\t    hide: function() {\n\t        this.visible = false;\n\t        this.$el.fadeOut('fast');\n\t        if (this.options.closing_callback){\n\t            this.options.closing_callback();\n\t        }\n\t    },\n\t\n\t    // enable buttons\n\t    enableButton: function(name) {\n\t        var button_id = this.buttonList[name];\n\t        this.$buttons.find('#' + button_id).prop('disabled', false);\n\t    },\n\t\n\t    // disable buttons\n\t    disableButton: function(name) {\n\t        var button_id = this.buttonList[name];\n\t        this.$buttons.find('#' + button_id).prop('disabled', true);\n\t    },\n\t    \n\t    // show buttons\n\t    showButton: function(name) {\n\t        var button_id = this.buttonList[name];\n\t        this.$buttons.find('#' + button_id).show();\n\t    },\n\t\n\t    // hide buttons\n\t    hideButton: function(name) {\n\t        var button_id = this.buttonList[name];\n\t        this.$buttons.find('#' + button_id).hide();\n\t    },\n\t    \n\t    // get button\n\t    getButton: function(name) {\n\t        var button_id = this.buttonList[name];\n\t        return this.$buttons.find('#' + button_id);\n\t    },\n\t    \n\t    // returns scroll top for body element\n\t    scrollTop: function() {\n\t        return this.$body.scrollTop();\n\t    },\n\t\n\t    // create\n\t    _create: function(options) {\n\t        // link this\n\t        var self = this;\n\t        \n\t        // configure options\n\t        this.options = _.defaults(options, this.optionsDefault);\n\t        \n\t        // check for progress bar request\n\t        if (this.options.body == 'progress'){\n\t            this.options.body = $('<div class=\"progress progress-striped active\"><div class=\"progress-bar progress-bar-info\" style=\"width:100%\"></div></div>');\n\t        }\n\t            \n\t        // remove former element\n\t        if (this.$el) {\n\t            // remove element\n\t            this.$el.remove();\n\t            \n\t            // remove escape event\n\t            $(document).off('keyup.ui-modal');\n\t        }\n\t        \n\t        // create new element\n\t        this.setElement(this._template(this.options.title));\n\t        \n\t        // link elements\n\t        this.$dialog = (this.$el).find('.modal-dialog');\n\t        this.$body = (this.$el).find('.modal-body');\n\t        this.$footer  = (this.$el).find('.modal-footer');\n\t        this.$buttons = (this.$el).find('.buttons');\n\t        this.$backdrop = (this.$el).find('.modal-backdrop');\n\t        \n\t        // append body\n\t        this.$body.html(this.options.body);\n\t        \n\t        // configure background\n\t        if (!this.options.backdrop){\n\t            this.$backdrop.removeClass('in');\n\t        }\n\t                        \n\t        // append buttons\n\t        if (this.options.buttons) {\n\t            // reset button list\n\t            this.buttonList = {};\n\t            var counter = 0;\n\t            $.each(this.options.buttons, function(name, value) {\n\t                var button_id = 'button-' + counter++;\n\t                self.$buttons.append($('<button id=\"' + button_id + '\"></button>').text(name).click(value)).append(\" \");\n\t                self.buttonList[name] = button_id;\n\t            });\n\t        } else {\n\t            // hide footer\n\t            this.$footer.hide();\n\t        }\n\t        \n\t        // append to main element\n\t        $(this.elMain).append($(this.el));\n\t\n\t        // bind additional closing events\n\t        if (this.options.closing_events) {\n\t            // bind the ESC key to hide() function\n\t            $(document).on('keyup.ui-modal', function(e) {\n\t                if (e.keyCode == 27) {\n\t                    self.hide();\n\t                }\n\t            });\n\t            \n\t            // hide modal if background is clicked\n\t            this.$el.find('.modal-backdrop').on('click', function() { self.hide(); });\n\t        }\n\t\n\t        // removes the default separator line\n\t        if (!this.options.title_separator) {\n\t            this.$('.modal-header').css({ 'border': 'none', 'padding-bottom': '0px' });\n\t        }\n\t    },\n\t    \n\t    // fill regular modal template\n\t    _template: function(title) {\n\t        return  '<div class=\"ui-modal modal\">' +\n\t                    '<div class=\"modal-backdrop fade in\" style=\"z-index: -1;\"></div>' +\n\t                    '<div class=\"modal-dialog\">' +\n\t                        '<div class=\"modal-content\">' +\n\t                            '<div class=\"modal-header\">' +\n\t                                '<button type=\"button\" class=\"close\" style=\"display: none;\">&times;</button>' +\n\t                                '<h4 class=\"title\">' + title + '</h4>' +\n\t                            '</div>' +\n\t                            '<div class=\"modal-body\" style=\"position: static;\"></div>' +\n\t                            '<div class=\"modal-footer\">' +\n\t                                '<div class=\"buttons\" style=\"float: right;\"></div>' +\n\t                            '</div>' +\n\t                        '</div' +\n\t                    '</div>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View : View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils) {\n\t\n\t// portlet view class\n\tvar View = Backbone.View.extend({\n\t    // visibility\n\t    visible: false,\n\t    \n\t    // defaults options\n\t    optionsDefault: {\n\t        id              : Utils.uid(),\n\t        title           : '',\n\t        icon            : '',\n\t        buttons         : null,\n\t        body            : null,\n\t        scrollable      : true,\n\t        nopadding       : false,\n\t        operations      : null,\n\t        placement       : 'bottom',\n\t        cls             : 'ui-portlet',\n\t        operations_flt  : 'right'\n\t    },\n\t    \n\t    // elements\n\t    $title : null,\n\t    $content : null,\n\t    $buttons : null,\n\t    $operations : null,\n\t    $header : null,\n\t    \n\t    // initialize\n\t    initialize : function(options) {\n\t        // configure options\n\t        this.options = Utils.merge(options, this.optionsDefault);\n\t        \n\t        // create new element\n\t        this.setElement(this._template(this.options));\n\t        \n\t        // link content\n\t        this.$content = this.$el.find('.content');\n\t        \n\t        // link title\n\t        this.$title = this.$el.find('.portlet-title-text');\n\t        \n\t        // link header\n\t        this.$header = this.$el.find('.portlet-header');\n\t        \n\t        // link portlet content (wraps 'content')\n\t        var $portlet_content = this.$el.find('.portlet-content');\n\t        \n\t        // set content padding\n\t        if (this.options.nopadding) {\n\t            $portlet_content.css('padding', '0px');\n\t            this.$content.css('padding', '0px');\n\t        }\n\t        \n\t        // append buttons\n\t        this.$buttons = $(this.el).find('.buttons');\n\t        if (this.options.buttons) {\n\t            // link functions\n\t            var self = this;\n\t            $.each(this.options.buttons, function(name, item) {\n\t                item.$el.prop('id', name);\n\t                self.$buttons.append(item.$el);\n\t            });\n\t        } else {\n\t            this.$buttons.remove();\n\t        }\n\t        \n\t        // append operations\n\t        this.$operations = $(this.el).find('.portlet-operations');\n\t        if (this.options.operations) {\n\t            // link functions\n\t            var self = this;\n\t            $.each(this.options.operations, function(name, item) {\n\t                item.$el.prop('id', name);\n\t                self.$operations.append(item.$el);\n\t            });\n\t        }\n\t        \n\t        // add body\n\t        if(this.options.body) {\n\t            this.append(this.options.body);\n\t        }\n\t    },\n\t    \n\t    // append\n\t    append: function($el) {\n\t        this.$content.append($el);\n\t    },\n\t\n\t    // remove all content\n\t    empty: function() {\n\t        this.$content.empty();\n\t    },\n\t\n\t    // content\n\t    content: function() {\n\t        return this.$content;\n\t    },\n\t    \n\t    // show\n\t    show: function(){\n\t        // fade in\n\t        this.$el.fadeIn('fast');\n\t        \n\t        // set flag\n\t        this.visible = true;\n\t    },\n\t    \n\t    // hide\n\t    hide: function(){\n\t        // fade out\n\t        this.$el.fadeOut('fast');\n\t        \n\t        // set flag\n\t        this.visible = false;\n\t    },\n\t\n\t    // enable buttons\n\t    enableButton: function(id) {\n\t        this.$buttons.find('#' + id).prop('disabled', false);\n\t    },\n\t\n\t    // disable buttons\n\t    disableButton: function(id) {\n\t        this.$buttons.find('#' + id).prop('disabled', true);\n\t    },\n\t    \n\t    // hide operation\n\t    hideOperation: function(id) {\n\t        this.$operations.find('#' + id).hide();\n\t    },\n\t\n\t    // show operation\n\t    showOperation: function(id) {\n\t        this.$operations.find('#' + id).show();\n\t    },\n\t    \n\t    // set operation\n\t    setOperation: function(id, callback) {\n\t        var $el = this.$operations.find('#' + id);\n\t        $el.off('click');\n\t        $el.on('click', callback);\n\t    },\n\t    \n\t    // title\n\t    title: function(new_title) {\n\t        var $el = this.$title;\n\t        if (new_title) {\n\t            $el.html(new_title);\n\t        }\n\t        return $el.html();\n\t    },\n\t\n\t    // disable content access\n\t    disable: function() {\n\t        this.$('.portlet-backdrop').show();\n\t    },\n\t\n\t    // enable content access\n\t    enable: function() {\n\t        this.$('.portlet-backdrop').hide();\n\t    },\n\t\n\t    // fill regular modal template\n\t    _template: function(options) {\n\t        var tmpl =  '<div id=\"' + options.id + '\" class=\"' + options.cls + '\">';\n\t        \n\t        if (options.title) {\n\t            tmpl +=     '<div class=\"portlet-header\">' +\n\t                            '<div class=\"portlet-operations\" style=\"float: ' + options.operations_flt + ';\"></div>' +\n\t                            '<div class=\"portlet-title\">';\n\t                            \n\t            if (options.icon)\n\t                tmpl +=         '<i class=\"icon fa ' + options.icon + '\">&nbsp;</i>';\n\t        \n\t            tmpl +=             '<span class=\"portlet-title-text\">' + options.title + '</span>' +\n\t                            '</div>' +\n\t                        '</div>';\n\t        }\n\t        tmpl +=         '<div class=\"portlet-content\">';\n\t        \n\t        if (options.placement == 'top') {\n\t            tmpl +=         '<div class=\"buttons\"></div>';\n\t        }\n\t        \n\t        tmpl +=             '<div class=\"content\"></div>';\n\t        \n\t        if (options.placement == 'bottom') {\n\t            tmpl +=         '<div class=\"buttons\"></div>';\n\t        }\n\t        \n\t        tmpl +=         '</div>' +\n\t                        '<div class=\"portlet-backdrop\"/>' +\n\t                    '</div>';\n\t        return tmpl;\n\t    }\n\t});\n\t\n\treturn {\n\t    View : View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// from: https://raw.githubusercontent.com/umdjs/umd/master/jqueryPlugin.js\n\t// Uses AMD or browser globals to create a jQuery plugin.\n\t(function (factory) {\n\t    if (true) {\n\t        //TODO: So...this turns out to be an all or nothing thing. If I load jQuery in the define below, it will\n\t        //  (of course) wipe the old jquery *and all the plugins loaded into it*. So the define below *is still\n\t        //  relying on jquery being loaded globally* in order to preserve plugins.\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else {\n\t        // Browser globals\n\t        factory(jQuery);\n\t    }\n\t\n\t}(function ( jQuery ) {\n\t'use_strict';\n\t\n\tvar $ = jQuery;\n\t\n\t// ============================================================================\n\t/**\n\t * Make an element with text editable: (a) when user clicks on text, a textbox/area\n\t * is provided for editing; (b) when enter key pressed, element's text is set and on_finish\n\t * is called.\n\t */\n\t$.fn.make_text_editable = function(config_dict) {\n\t    // Get config options.\n\t    var num_cols = (\"num_cols\" in config_dict ? config_dict.num_cols : 30),\n\t        num_rows = (\"num_rows\" in config_dict ? config_dict.num_rows : 4),\n\t        use_textarea = (\"use_textarea\" in config_dict ? config_dict.use_textarea : false),\n\t        on_finish = (\"on_finish\" in config_dict ? config_dict.on_finish : null),\n\t        help_text = (\"help_text\" in config_dict ? config_dict.help_text : null);\n\t\n\t    // Add element behavior.\n\t    var container = $(this);\n\t    container.addClass(\"editable-text\").click(function(e) {\n\t        // If there's already an input element, editing is active, so do nothing.\n\t        if ($(this).children(\":input\").length > 0) {\n\t            return;\n\t        }\n\t\n\t        container.removeClass(\"editable-text\");\n\t\n\t        // Handler for setting element text.\n\t        var set_text = function(new_text) {\n\t            container.find(\":input\").remove();\n\t\n\t            if (new_text !== \"\") {\n\t                container.text(new_text);\n\t            } else {\n\t                // No text; need a line so that there is a click target.\n\t                container.html(\"<br>\");\n\t            }\n\t            container.addClass(\"editable-text\");\n\t\n\t            if (on_finish) {\n\t                on_finish(new_text);\n\t            }\n\t        };\n\t\n\t        // Create input element(s) for editing.\n\t        var cur_text = (\"cur_text\" in config_dict ? config_dict.cur_text : container.text() ),\n\t            input_elt, button_elt;\n\t\n\t        if (use_textarea) {\n\t            input_elt = $(\"<textarea/>\")\n\t                .attr({ rows: num_rows, cols: num_cols }).text($.trim(cur_text))\n\t                .keyup(function(e) {\n\t                    if (e.keyCode === 27) {\n\t                        // Escape key.\n\t                        set_text(cur_text);\n\t                    }\n\t                });\n\t            button_elt = $(\"<button/>\").text(\"Done\").click(function() {\n\t                set_text(input_elt.val());\n\t                // Return false so that click does not propogate to container.\n\t                return false;\n\t            });\n\t        }\n\t        else {\n\t            input_elt = $(\"<input type='text'/>\").attr({ value: $.trim(cur_text), size: num_cols })\n\t            .blur(function() {\n\t                set_text(cur_text);\n\t            }).keyup(function(e) {\n\t                if (e.keyCode === 27) {\n\t                    // Escape key.\n\t                    $(this).trigger(\"blur\");\n\t                } else if (e.keyCode === 13) {\n\t                    // Enter key.\n\t                    set_text($(this).val());\n\t                }\n\t\n\t                // Do not propogate event to avoid unwanted side effects.\n\t                e.stopPropagation();\n\t            });\n\t        }\n\t\n\t        // Replace text with input object(s) and focus & select.\n\t        container.text(\"\");\n\t        container.append(input_elt);\n\t        if (button_elt) {\n\t            container.append(button_elt);\n\t        }\n\t        input_elt.focus();\n\t        input_elt.select();\n\t\n\t        // Do not propogate to elements below b/c that blurs input and prevents it from being used.\n\t        e.stopPropagation();\n\t    });\n\t\n\t    // Add help text if there some.\n\t    if (help_text) {\n\t        container.attr(\"title\", help_text).tooltip();\n\t    }\n\t\n\t    return container;\n\t};\n\t\n\t// ============================================================================\n\t}));\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($, _) {(function (root, factory) {\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else {\n\t        root.faIconButton = factory();\n\t    }\n\t\n\t}(this, function () {\n\t//============================================================================\n\t    /** Returns a jQuery object containing a clickable font-awesome button.\n\t     *      options:\n\t     *          tooltipConfig   : option map for bootstrap tool tip\n\t     *          classes         : array of class names (will always be classed as icon-btn)\n\t     *          disabled        : T/F - add the 'disabled' class?\n\t     *          title           : tooltip/title string\n\t     *          target          : optional href target\n\t     *          href            : optional href\n\t     *          faIcon          : which font awesome icon to use\n\t     *          onclick         : function to call when the button is clicked\n\t     */\n\t    var faIconButton = function( options ){\n\t        options = options || {};\n\t        options.tooltipConfig = options.tooltipConfig || { placement: 'bottom' };\n\t\n\t        options.classes = [ 'icon-btn' ].concat( options.classes || [] );\n\t        if( options.disabled ){\n\t            options.classes.push( 'disabled' );\n\t        }\n\t\n\t        var html = [\n\t            '<a class=\"', options.classes.join( ' ' ), '\"',\n\t                    (( options.title )?( ' title=\"' + options.title + '\"' ):( '' )),\n\t                    (( !options.disabled && options.target )?  ( ' target=\"' + options.target + '\"' ):( '' )),\n\t                    ' href=\"', (( !options.disabled && options.href )?( options.href ):( 'javascript:void(0);' )), '\">',\n\t                // could go with something less specific here - like 'html'\n\t                '<span class=\"fa ', options.faIcon, '\"></span>',\n\t            '</a>'\n\t        ].join( '' );\n\t        var $button = $( html ).tooltip( options.tooltipConfig );\n\t        if( _.isFunction( options.onclick ) ){\n\t            $button.click( options.onclick );\n\t        }\n\t        return $button;\n\t    };\n\t\n\t//============================================================================\n\t    return faIconButton;\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(50),\n\t    __webpack_require__(21),\n\t    __webpack_require__(20),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( LIST_PANEL, DC_MODEL, DC_LI, BASE_MVC, _l ){\n\t\n\tvar logNamespace = 'collections';\n\t/* =============================================================================\n\tTODO:\n\t\n\t============================================================================= */\n\t/** @class non-editable, read-only View/Controller for a dataset collection.\n\t */\n\tvar _super = LIST_PANEL.ModelListPanel;\n\tvar CollectionPanel = _super.extend(\n\t/** @lends CollectionPanel.prototype */{\n\t    //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n\t    _logNamespace : logNamespace,\n\t\n\t    className           : _super.prototype.className + ' dataset-collection-panel',\n\t\n\t    /** sub view class used for datasets */\n\t    DatasetDCEViewClass : DC_LI.DatasetDCEListItemView,\n\t    /** sub view class used for nested collections */\n\t    NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView,\n\t    /** key of attribute in model to assign to this.collection */\n\t    modelCollectionKey  : 'elements',\n\t\n\t    // ......................................................................... SET UP\n\t    /** Set up the view, set up storage, bind listeners to HistoryContents events\n\t     *  @param {Object} attributes optional settings for the panel\n\t     */\n\t    initialize : function( attributes ){\n\t        _super.prototype.initialize.call( this, attributes );\n\t        this.linkTarget = attributes.linkTarget || '_blank';\n\t\n\t        this.hasUser = attributes.hasUser;\n\t        /** A stack of panels that currently cover or hide this panel */\n\t        this.panelStack = [];\n\t        /** The text of the link to go back to the panel containing this one */\n\t        this.parentName = attributes.parentName;\n\t        /** foldout or drilldown */\n\t        this.foldoutStyle = attributes.foldoutStyle || 'foldout';\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ sub-views\n\t    /** In this override, use model.getVisibleContents */\n\t    _filterCollection : function(){\n\t//TODO: should *not* be model.getVisibleContents - visibility is not model related\n\t        return this.model.getVisibleContents();\n\t    },\n\t\n\t    /** override to return proper view class based on element_type */\n\t    _getItemViewClass : function( model ){\n\t        //this.debug( this + '._getItemViewClass:', model );\n\t//TODO: subclasses use DCEViewClass - but are currently unused - decide\n\t        switch( model.get( 'element_type' ) ){\n\t            case 'hda':\n\t                return this.DatasetDCEViewClass;\n\t            case 'dataset_collection':\n\t                return this.NestedDCDCEViewClass;\n\t        }\n\t        throw new TypeError( 'Unknown element type:', model.get( 'element_type' ) );\n\t    },\n\t\n\t    /** override to add link target and anon */\n\t    _getItemViewOptions : function( model ){\n\t        var options = _super.prototype._getItemViewOptions.call( this, model );\n\t        return _.extend( options, {\n\t            linkTarget      : this.linkTarget,\n\t            hasUser         : this.hasUser,\n\t//TODO: could move to only nested: list:paired\n\t            foldoutStyle    : this.foldoutStyle\n\t        });\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ collection sub-views\n\t    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n\t    _setUpItemViewListeners : function( view ){\n\t        var panel = this;\n\t        _super.prototype._setUpItemViewListeners.call( panel, view );\n\t\n\t        // use pub-sub to: handle drilldown expansion and collapse\n\t        view.on( 'expanded:drilldown', function( v, drilldown ){\n\t            this._expandDrilldownPanel( drilldown );\n\t        }, this );\n\t        view.on( 'collapsed:drilldown', function( v, drilldown ){\n\t            this._collapseDrilldownPanel( drilldown );\n\t        }, this );\n\t        return this;\n\t    },\n\t\n\t    /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n\t    _expandDrilldownPanel : function( drilldown ){\n\t        this.panelStack.push( drilldown );\n\t        // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n\t        this.$( '> .controls' ).add( this.$list() ).hide();\n\t        drilldown.parentName = this.model.get( 'name' );\n\t        this.$el.append( drilldown.render().$el );\n\t    },\n\t\n\t    /** Handle drilldown close by freeing the panel and re-rendering this panel */\n\t    _collapseDrilldownPanel : function( drilldown ){\n\t        this.panelStack.pop();\n\t        this.render();\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ panel events\n\t    /** event map */\n\t    events : {\n\t        'click .navigation .back'       : 'close'\n\t    },\n\t\n\t    /** close/remove this collection panel */\n\t    close : function( event ){\n\t        this.$el.remove();\n\t        this.trigger( 'close' );\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    /** string rep */\n\t    toString    : function(){\n\t        return 'CollectionPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t//------------------------------------------------------------------------------ TEMPLATES\n\tCollectionPanel.prototype.templates = (function(){\n\t\n\t    var controlsTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"controls\">',\n\t            '<div class=\"navigation\">',\n\t                '<a class=\"back\" href=\"javascript:void(0)\">',\n\t                    '<span class=\"fa fa-icon fa-angle-left\"></span>',\n\t                    _l( 'Back to ' ), '<%- view.parentName %>',\n\t                '</a>',\n\t            '</div>',\n\t\n\t            '<div class=\"title\">',\n\t                '<div class=\"name\"><%- collection.name || collection.element_identifier %></div>',\n\t                '<div class=\"subtitle\">',\n\t//TODO: remove logic from template\n\t                    '<% if( collection.collection_type === \"list\" ){ %>',\n\t                        _l( 'a list of datasets' ),\n\t                    '<% } else if( collection.collection_type === \"paired\" ){ %>',\n\t                        _l( 'a pair of datasets' ),\n\t                    '<% } else if( collection.collection_type === \"list:paired\" ){ %>',\n\t                        _l( 'a list of paired datasets' ),\n\t                    '<% } %>',\n\t                '</div>',\n\t            '</div>',\n\t        '</div>'\n\t    ], 'collection' );\n\t\n\t    return _.extend( _.clone( _super.prototype.templates ), {\n\t        controls : controlsTemplate\n\t    });\n\t}());\n\t\n\t\n\t\n\t// =============================================================================\n\t/** @class non-editable, read-only View/Controller for a dataset collection. */\n\tvar ListCollectionPanel = CollectionPanel.extend(\n\t/** @lends ListCollectionPanel.prototype */{\n\t\n\t    //TODO: not strictly needed - due to switch in CollectionPanel._getContentClass\n\t    /** sub view class used for datasets */\n\t    DatasetDCEViewClass : DC_LI.DatasetDCEListItemView,\n\t\n\t    // ........................................................................ misc\n\t    /** string rep */\n\t    toString    : function(){\n\t        return 'ListCollectionPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t// =============================================================================\n\t/** @class non-editable, read-only View/Controller for a dataset collection. */\n\tvar PairCollectionPanel = ListCollectionPanel.extend(\n\t/** @lends PairCollectionPanel.prototype */{\n\t\n\t    // ........................................................................ misc\n\t    /** string rep */\n\t    toString    : function(){\n\t        return 'PairCollectionPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t// =============================================================================\n\t/** @class non-editable, read-only View/Controller for a dataset collection. */\n\tvar ListOfPairsCollectionPanel = CollectionPanel.extend(\n\t/** @lends ListOfPairsCollectionPanel.prototype */{\n\t\n\t    //TODO: not strictly needed - due to switch in CollectionPanel._getContentClass\n\t    /** sub view class used for nested collections */\n\t    NestedDCDCEViewClass : DC_LI.NestedDCDCEListItemView.extend({\n\t        foldoutPanelClass : PairCollectionPanel\n\t    }),\n\t\n\t    // ........................................................................ misc\n\t    /** string rep */\n\t    toString    : function(){\n\t        return 'ListOfPairsCollectionPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        CollectionPanel             : CollectionPanel,\n\t        ListCollectionPanel         : ListCollectionPanel,\n\t        PairCollectionPanel         : PairCollectionPanel,\n\t        ListOfPairsCollectionPanel  : ListOfPairsCollectionPanel\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {// Additional dependencies: jQuery, underscore.\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(10), __webpack_require__(54), __webpack_require__(53)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Modal, Frames, mod_icon_btn) {\n\t\n\t/**\n\t * Dataset metedata.\n\t */\n\tvar DatasetMetadata = Backbone.Model.extend({});\n\t\n\t/**\n\t * A dataset. In Galaxy, datasets are associated with a history, so\n\t * this object is also known as a HistoryDatasetAssociation.\n\t */\n\tvar Dataset = Backbone.Model.extend({\n\t    defaults: {\n\t        id: '',\n\t        type: '',\n\t        name: '',\n\t        hda_ldda: 'hda',\n\t        metadata: null\n\t    },\n\t\n\t    initialize: function() {\n\t        // Metadata can be passed in as a model or a set of attributes; if it's\n\t        // already a model, there's no need to set metadata.\n\t        if (!this.get('metadata')) {\n\t            this._set_metadata();\n\t        }\n\t\n\t        // Update metadata on change.\n\t        this.on('change', this._set_metadata, this);\n\t    },\n\t\n\t    _set_metadata: function() {\n\t        var metadata = new DatasetMetadata();\n\t\n\t        // Move metadata from dataset attributes to metadata object.\n\t        _.each(_.keys(this.attributes), function(k) {\n\t            if (k.indexOf('metadata_') === 0) {\n\t                // Found metadata.\n\t                var new_key = k.split('metadata_')[1];\n\t                metadata.set(new_key, this.attributes[k]);\n\t                delete this.attributes[k];\n\t            }\n\t        }, this);\n\t\n\t        // Because this is an internal change, silence it.\n\t        this.set('metadata', metadata, { 'silent': true });\n\t    },\n\t\n\t    /**\n\t     * Returns dataset metadata for a given attribute.\n\t     */\n\t    get_metadata: function(attribute) {\n\t        return this.attributes.metadata.get(attribute);\n\t    },\n\t\n\t    urlRoot: galaxy_config.root + \"api/datasets\"\n\t});\n\t\n\t/**\n\t * A tabular dataset. This object extends dataset to provide incremental chunked data.\n\t */\n\tvar TabularDataset = Dataset.extend({\n\t    defaults: _.extend({}, Dataset.prototype.defaults, {\n\t        chunk_url: null,\n\t        first_data_chunk: null,\n\t        chunk_index: -1,\n\t        at_eof: false\n\t    }),\n\t\n\t    initialize: function(options) {\n\t        Dataset.prototype.initialize.call(this);\n\t\n\t        // If first data chunk is available, next chunk is 1.\n\t        this.attributes.chunk_index = (this.attributes.first_data_chunk ? 1 : 0);\n\t        this.attributes.chunk_url = galaxy_config.root + 'dataset/display?dataset_id=' + this.id;\n\t        this.attributes.url_viz = galaxy_config.root + 'visualization';\n\t    },\n\t\n\t    /**\n\t     * Returns a jQuery Deferred object that resolves to the next data chunk or null if at EOF.\n\t     */\n\t    get_next_chunk: function() {\n\t        // If already at end of file, do nothing.\n\t        if (this.attributes.at_eof) {\n\t            return null;\n\t        }\n\t\n\t        // Get next chunk.\n\t        var self = this,\n\t            next_chunk = $.Deferred();\n\t        $.getJSON(this.attributes.chunk_url, {\n\t            chunk: self.attributes.chunk_index++\n\t        }).success(function(chunk) {\n\t            var rval;\n\t            if (chunk.ck_data !== '') {\n\t                // Found chunk.\n\t                rval = chunk;\n\t            }\n\t            else {\n\t                // At EOF.\n\t                self.attributes.at_eof = true;\n\t                rval = null;\n\t            }\n\t            next_chunk.resolve(rval);\n\t        });\n\t\n\t        return next_chunk;\n\t    }\n\t});\n\t\n\tvar DatasetCollection = Backbone.Collection.extend({\n\t    model: Dataset\n\t});\n\t\n\t/**\n\t * Provides a base for table-based, dynamic view of a tabular dataset.\n\t * Do not instantiate directly; use either TopLevelTabularDatasetChunkedView\n\t * or EmbeddedTabularDatasetChunkedView.\n\t */\n\tvar TabularDatasetChunkedView = Backbone.View.extend({\n\t\n\t    /**\n\t     * Initialize view and, importantly, set a scroll element.\n\t     */\n\t    initialize: function(options) {\n\t        // Row count for rendering.\n\t        this.row_count = 0;\n\t        this.loading_chunk = false;\n\t\n\t        // load trackster button\n\t        new TabularButtonTracksterView({\n\t            model   : options.model,\n\t            $el     : this.$el\n\t        });\n\t    },\n\t\n\t    expand_to_container: function(){\n\t        if (this.$el.height() < this.scroll_elt.height()){\n\t            this.attempt_to_fetch();\n\t        }\n\t    },\n\t\n\t    attempt_to_fetch: function( func ){\n\t        var self = this;\n\t        if ( !this.loading_chunk && this.scrolled_to_bottom() ) {\n\t            this.loading_chunk = true;\n\t            this.loading_indicator.show();\n\t            $.when(self.model.get_next_chunk()).then(function(result) {\n\t                if (result) {\n\t                    self._renderChunk(result);\n\t                    self.loading_chunk = false;\n\t                }\n\t                self.loading_indicator.hide();\n\t                self.expand_to_container();\n\t            });\n\t        }\n\t    },\n\t\n\t    render: function() {\n\t        // Add loading indicator.\n\t        this.loading_indicator = $('<div/>').attr('id', 'loading_indicator');\n\t        this.$el.append(this.loading_indicator);\n\t\n\t        // Add data table and header.\n\t        var data_table = $('<table/>').attr({\n\t            id: 'content_table',\n\t            cellpadding: 0\n\t        });\n\t        this.$el.append(data_table);\n\t        var column_names = this.model.get_metadata('column_names'),\n\t            header_container = $('<thead/>').appendTo(data_table),\n\t            header_row = $('<tr/>').appendTo(header_container);\n\t        if (column_names) {\n\t            header_row.append('<th>' + column_names.join('</th><th>') + '</th>');\n\t        } else {\n\t            for (var j = 1; j <= this.model.get_metadata('columns'); j++) {\n\t                header_row.append('<th>' + j + '</th>');\n\t            }\n\t        }\n\t\n\t        // Render first chunk.\n\t        var self = this,\n\t            first_chunk = this.model.get('first_data_chunk');\n\t        if (first_chunk) {\n\t            // First chunk is bootstrapped, so render now.\n\t            this._renderChunk(first_chunk);\n\t        }\n\t        else {\n\t            // No bootstrapping, so get first chunk and then render.\n\t            $.when(self.model.get_next_chunk()).then(function(result) {\n\t                self._renderChunk(result);\n\t            });\n\t        }\n\t\n\t        // -- Show new chunks during scrolling. --\n\t\n\t        // Set up chunk loading when scrolling using the scrolling element.\n\t        this.scroll_elt.scroll(function(){\n\t            self.attempt_to_fetch();\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Returns true if user has scrolled to the bottom of the view.\n\t     */\n\t    scrolled_to_bottom: function() {\n\t        return false;\n\t    },\n\t\n\t    // -- Helper functions. --\n\t\n\t    _renderCell: function(cell_contents, index, colspan) {\n\t        var $cell = $('<td>').text(cell_contents);\n\t        var column_types = this.model.get_metadata('column_types');\n\t        if (colspan !== undefined) {\n\t            $cell.attr('colspan', colspan).addClass('stringalign');\n\t        } else if (column_types) {\n\t            if (index < column_types.length) {\n\t                if (column_types[index] === 'str' || column_types[index] === 'list') {\n\t                    /* Left align all str columns, right align the rest */\n\t                    $cell.addClass('stringalign');\n\t                }\n\t            }\n\t        }\n\t        return $cell;\n\t    },\n\t\n\t    _renderRow: function(line) {\n\t        // Check length of cells to ensure this is a complete row.\n\t        var cells = line.split('\\t'),\n\t            row = $('<tr>'),\n\t            num_columns = this.model.get_metadata('columns');\n\t\n\t        if (this.row_count % 2 !== 0) {\n\t            row.addClass('dark_row');\n\t        }\n\t\n\t        if (cells.length === num_columns) {\n\t            _.each(cells, function(cell_contents, index) {\n\t                row.append(this._renderCell(cell_contents, index));\n\t            }, this);\n\t        }\n\t        else if (cells.length > num_columns) {\n\t            // SAM file or like format with optional metadata included.\n\t            _.each(cells.slice(0, num_columns - 1), function(cell_contents, index) {\n\t                row.append(this._renderCell(cell_contents, index));\n\t            }, this);\n\t            row.append(this._renderCell(cells.slice(num_columns - 1).join('\\t'), num_columns - 1));\n\t        }\n\t        else if (num_columns > 5 && cells.length === num_columns - 1 ) {\n\t            // SAM file or like format with optional metadata missing.\n\t            _.each(cells, function(cell_contents, index) {\n\t                row.append(this._renderCell(cell_contents, index));\n\t            }, this);\n\t            row.append($('<td>'));\n\t        }\n\t        else {\n\t            // Comment line, just return the one cell.\n\t            row.append(this._renderCell(line, 0, num_columns));\n\t        }\n\t\n\t        this.row_count++;\n\t        return row;\n\t    },\n\t\n\t    _renderChunk: function(chunk) {\n\t        var data_table = this.$el.find('table');\n\t        _.each(chunk.ck_data.split('\\n'), function(line, index) {\n\t            if (line !== ''){\n\t                data_table.append(this._renderRow(line));\n\t            }\n\t        }, this);\n\t    }\n\t});\n\t\n\t/**\n\t * Tabular view that is placed at the top level of page. Scrolling occurs\n\t * view top-level elements outside of view.\n\t */\n\tvar TopLevelTabularDatasetChunkedView = TabularDatasetChunkedView.extend({\n\t\n\t    initialize: function(options) {\n\t        TabularDatasetChunkedView.prototype.initialize.call(this, options);\n\t\n\t        // Scrolling happens in top-level elements.\n\t        scroll_elt = _.find(this.$el.parents(), function(p) {\n\t            return $(p).css('overflow') === 'auto';\n\t        });\n\t\n\t        // If no scrolling element found, use window.\n\t        if (!scroll_elt) { scroll_elt = window; }\n\t\n\t        // Wrap scrolling element for easy access.\n\t        this.scroll_elt = $(scroll_elt);\n\t    },\n\t\n\t    /**\n\t     * Returns true if user has scrolled to the bottom of the view.\n\t     */\n\t    scrolled_to_bottom: function() {\n\t        return (this.$el.height() - this.scroll_elt.scrollTop() - this.scroll_elt.height() <= 0);\n\t    }\n\t\n\t});\n\t\n\t/**\n\t * Tabular view tnat is embedded in a page. Scrolling occurs in view's el.\n\t */\n\tvar EmbeddedTabularDatasetChunkedView = TabularDatasetChunkedView.extend({\n\t\n\t    initialize: function(options) {\n\t        TabularDatasetChunkedView.prototype.initialize.call(this, options);\n\t\n\t        // Because view is embedded, set up div to do scrolling.\n\t        this.scroll_elt = this.$el.css({\n\t            position: 'relative',\n\t            overflow: 'scroll',\n\t            height: options.height || '500px'\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Returns true if user has scrolled to the bottom of the view.\n\t     */\n\t    scrolled_to_bottom: function() {\n\t        return this.$el.scrollTop() + this.$el.innerHeight() >= this.el.scrollHeight;\n\t    }\n\t\n\t});\n\t\n\t// button for trackster visualization\n\tvar TabularButtonTracksterView = Backbone.View.extend({\n\t\n\t    // gene region columns\n\t    col: {\n\t        chrom   : null,\n\t        start   : null,\n\t        end     : null\n\t    },\n\t\n\t    // url for trackster\n\t    url_viz     : null,\n\t\n\t    // dataset id\n\t    dataset_id  : null,\n\t\n\t    // database key\n\t    genome_build: null,\n\t\n\t    // data type\n\t    file_ext   : null,\n\t\n\t    // backbone initialize\n\t    initialize: function (options) {\n\t        // check if environment is available\n\t        var Galaxy = parent.Galaxy;\n\t\n\t        // link galaxy modal or create one\n\t        if (Galaxy && Galaxy.modal) {\n\t            this.modal = Galaxy.modal;\n\t        }\n\t\n\t        // link galaxy frames\n\t        if (Galaxy && Galaxy.frame) {\n\t            this.frame = Galaxy.frame;\n\t        }\n\t\n\t        // check\n\t        if (!this.modal || !this.frame) {\n\t            return;\n\t        }\n\t\n\t        // model/metadata\n\t        var model       = options.model;\n\t        var metadata    = model.get('metadata');\n\t\n\t        // check for datatype\n\t        if (!model.get('file_ext')) {\n\t            return;\n\t        }\n\t\n\t        // get data type\n\t        this.file_ext = model.get('file_ext');\n\t\n\t        // check for bed-file format\n\t        if (this.file_ext == 'bed')\n\t        {\n\t            // verify that metadata exists\n\t            if (metadata.get('chromCol') && metadata.get('startCol') && metadata.get('endCol'))\n\t            {\n\t                // read in columns\n\t                this.col.chrom   = metadata.get('chromCol') - 1;\n\t                this.col.start   = metadata.get('startCol') - 1;\n\t                this.col.end     = metadata.get('endCol') - 1;\n\t            } else {\n\t                console.log('TabularButtonTrackster : Bed-file metadata incomplete.');\n\t                return;\n\t            }\n\t        }\n\t\n\t        // check for vcf-file format\n\t        if (this.file_ext == 'vcf')\n\t        {\n\t            // search array\n\t            function search (str, array) {\n\t                for (var j = 0; j < array.length; j++)\n\t                    if (array[j].match(str)) return j;\n\t                return -1;\n\t            };\n\t\n\t            // load\n\t            this.col.chrom = search('Chrom', metadata.get('column_names'));\n\t            this.col.start = search('Pos', metadata.get('column_names'));\n\t            this.col.end   = null;\n\t\n\t            // verify that metadata exists\n\t            if (this.col.chrom == -1 || this.col.start == -1) {\n\t                console.log('TabularButtonTrackster : VCF-file metadata incomplete.');\n\t                return;\n\t            }\n\t        }\n\t\n\t        // check\n\t        if(this.col.chrom === undefined) {\n\t            return;\n\t        }\n\t\n\t        // get dataset id\n\t        if (model.id) {\n\t            this.dataset_id = model.id;\n\t        } else {\n\t            console.log('TabularButtonTrackster : Dataset identification is missing.');\n\t            return;\n\t        }\n\t\n\t        // get url\n\t        if (model.get('url_viz')) {\n\t            this.url_viz = model.get('url_viz');\n\t        } else {\n\t            console.log('TabularButtonTrackster : Url for visualization controller is missing.');\n\t            return;\n\t        }\n\t\n\t        // get genome_build / database key\n\t        if (model.get('genome_build')) {\n\t            this.genome_build = model.get('genome_build');\n\t        }\n\t\n\t        // create the icon\n\t        var btn_viz = new mod_icon_btn.IconButtonView({\n\t            model : new mod_icon_btn.IconButton({\n\t                title       : 'Visualize',\n\t                icon_class  : 'chart_curve',\n\t                id          : 'btn_viz'\n\t            })\n\t        });\n\t\n\t        // set element\n\t        this.setElement(options.$el);\n\t\n\t        // add to element\n\t        this.$el.append(btn_viz.render().$el);\n\t\n\t        // hide the button\n\t        this.hide();\n\t    },\n\t\n\t    // backbone events\n\t    events:\n\t    {\n\t        'mouseover tr'  : 'show',\n\t        'mouseleave'    : 'hide'\n\t    },\n\t\n\t    // show button\n\t    show: function (e) {\n\t        // is numeric\n\t        function is_numeric(n) {\n\t            return !isNaN(parseFloat(n)) && isFinite(n);\n\t        };\n\t\n\t        // check\n\t        if(this.col.chrom === null)\n\t            return;\n\t\n\t        // get selected data line\n\t        var row = $(e.target).parent();\n\t\n\t        // verify that location has been found\n\t        var chrom = row.children().eq(this.col.chrom).html();\n\t        var start = row.children().eq(this.col.start).html();\n\t\n\t        // end is optional\n\t        var end = this.col.end ? row.children().eq(this.col.end).html() : start;\n\t\n\t        // double check location\n\t        if (!chrom.match(\"^#\") && chrom !== \"\" && is_numeric(start)) {\n\t\n\t            // get target gene region\n\t            var btn_viz_pars = {\n\t                dataset_id  : this.dataset_id,\n\t                gene_region : chrom + \":\" + start + \"-\" + end\n\t            };\n\t\n\t            // get button position\n\t            var offset  = row.offset();\n\t            var left    = offset.left - 10;\n\t            var top     = offset.top - $(window).scrollTop() + 3;\n\t\n\t            // update css\n\t            $('#btn_viz').css({'position': 'fixed', 'top': top + 'px', 'left': left + 'px'});\n\t            $('#btn_viz').off('click');\n\t            $('#btn_viz').click(this.create_trackster_action(this.url_viz, btn_viz_pars, this.genome_build));\n\t\n\t            // show the button\n\t            $('#btn_viz').show();\n\t        } else {\n\t            // hide the button\n\t            $('#btn_viz').hide();\n\t        }\n\t    },\n\t\n\t    // hide button\n\t    hide: function () {\n\t        this.$el.find('#btn_viz').hide();\n\t    },\n\t\n\t    // create action\n\t    create_trackster_action : function (vis_url, dataset_params, dbkey) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // create function\n\t        return function() {\n\t            var listTracksParams = {};\n\t            if (dbkey) {\n\t                listTracksParams[ 'f-dbkey' ] = dbkey;\n\t            }\n\t            $.ajax({\n\t                url: vis_url + '/list_tracks?' + $.param( listTracksParams ),\n\t                dataType: 'html',\n\t                error: function() {\n\t                    // show error message\n\t                    self.modal.show({\n\t                        title   : 'Something went wrong!',\n\t                        body    : 'Unfortunately we could not add this dataset to the track browser. Please try again or contact us.',\n\t                        buttons : {\n\t                            'Cancel': function(){\n\t                                self.modal.hide();\n\t                            }\n\t                        }\n\t                    });\n\t                },\n\t                success: function(table_html) {\n\t                    self.modal.show({\n\t                        title   : 'View Data in a New or Saved Visualization',\n\t                        buttons :{\n\t                            'Cancel': function(){\n\t                                self.modal.hide();\n\t                            },\n\t                            'View in saved visualization': function(){\n\t                                // show modal with saved visualizations\n\t                                self.modal.show(\n\t                                {\n\t                                    title   : 'Add Data to Saved Visualization',\n\t                                    body    : table_html,\n\t                                    buttons : {\n\t                                        'Cancel': function(){\n\t                                            self.modal.hide();\n\t                                        },\n\t                                        'Add to visualization': function(){\n\t                                            // hide\n\t                                            self.modal.hide();\n\t\n\t                                            // search selected fields\n\t                                            self.modal.$el.find('input[name=id]:checked').each(function(){\n\t                                                // get visualization id\n\t                                                var vis_id = $(this).val();\n\t                                                dataset_params.id = vis_id;\n\t\n\t                                                // add widget\n\t                                                self.frame.add({\n\t                                                    title    : 'Trackster',\n\t                                                    type     : 'url',\n\t                                                    content  : vis_url + '/trackster?' + $.param(dataset_params)\n\t                                                });\n\t                                            });\n\t                                        }\n\t                                    }\n\t                                });\n\t                            },\n\t                            'View in new visualization': function(){\n\t                                // hide\n\t                                self.modal.hide();\n\t\n\t                                // add widget\n\t                                self.frame.add({\n\t                                    title    : 'Trackster',\n\t                                    type     : 'url',\n\t                                    content  : vis_url + '/trackster?' + $.param(dataset_params)\n\t                                });\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            });\n\t            return false;\n\t        };\n\t    }\n\t});\n\t\n\t// -- Utility functions. --\n\t\n\t/**\n\t * Create a model, attach it to a view, render view, and attach it to a parent element.\n\t */\n\tvar createModelAndView = function(model, view, model_config, parent_elt) {\n\t    // Create model, view.\n\t    var a_view = new view({\n\t        model: new model(model_config)\n\t    });\n\t\n\t    // Render view and add to parent element.\n\t    a_view.render();\n\t    if (parent_elt) {\n\t        parent_elt.append(a_view.$el);\n\t    }\n\t\n\t    return a_view;\n\t};\n\t\n\t/**\n\t * Create a tabular dataset chunked view (and requisite tabular dataset model)\n\t * and appends to parent_elt.\n\t */\n\tvar createTabularDatasetChunkedView = function(options) {\n\t    // If no model, create and set model from dataset config.\n\t    if (!options.model) {\n\t        options.model = new TabularDataset(options.dataset_config);\n\t    }\n\t\n\t    var parent_elt = options.parent_elt;\n\t    var embedded = options.embedded;\n\t\n\t    // Clean up options so that only needed options are passed to view.\n\t    delete options.embedded;\n\t    delete options.parent_elt;\n\t    delete options.dataset_config;\n\t\n\t    // Create and set up view.\n\t    var view = (embedded ? new EmbeddedTabularDatasetChunkedView(options) :\n\t                           new TopLevelTabularDatasetChunkedView(options));\n\t    view.render();\n\t\n\t    if (parent_elt) {\n\t        parent_elt.append(view.$el);\n\t        // If we're sticking this in another element, once it's appended check\n\t        // to make sure we've filled enough space.\n\t        // Without this, the scroll elements don't work.\n\t        view.expand_to_container();\n\t    }\n\t\n\t    return view;\n\t};\n\t\n\treturn {\n\t    Dataset: Dataset,\n\t    TabularDataset: TabularDataset,\n\t    DatasetCollection: DatasetCollection,\n\t    TabularDatasetChunkedView: TabularDatasetChunkedView,\n\t    createTabularDatasetChunkedView: createTabularDatasetChunkedView\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils) {\n\t\n\tvar View = Backbone.View.extend({\n\t\n\t    // default options\n\t    optionsDefault: {\n\t        with_close  : true,\n\t        container   : 'body',\n\t        title       : null,\n\t        placement   : 'top'\n\t    },\n\t\n\t    // visibility flag\n\t    visible: false,\n\t\n\t    // initialize\n\t    initialize: function (options) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // update options\n\t        this.options = _.defaults(options, this.optionsDefault);\n\t\n\t        // set element\n\t        this.setElement(this._template(this.options));\n\t\n\t        // attach popover to parent\n\t        this.options.container.parent().append(this.$el);\n\t\n\t        // attach close\n\t        if (this.options.with_close) {\n\t            this.$el.find('#close').on('click', function() { self.hide(); });\n\t        }\n\t\n\t        // generate unique id\n\t        this.uid = Utils.uid();\n\t\n\t        // add event to hide if click is outside of popup\n\t        var self = this;\n\t        $('body').on('mousedown.' + this.uid,  function(e) { self._hide(e) });\n\t    },\n\t\n\t    // title\n\t    title: function(val) {\n\t        if (val !== undefined) {\n\t            this.$el.find('.popover-title-label').html(val);\n\t        }\n\t    },\n\t\n\t    // show\n\t    show: function () {\n\t        // show popover\n\t        this.$el.show();\n\t        this.visible = true;\n\t\n\t        // calculate position\n\t        var position = this._get_placement(this.options.placement);\n\t\n\t        // set position\n\t        this.$el.css(position);\n\t    },\n\t\n\t    // hide\n\t    hide: function () {\n\t        this.$el.hide();\n\t        this.visible = false;\n\t    },\n\t\n\t    // append new doms to popover content\n\t    append: function($el) {\n\t        this.$el.find('.popover-content').append($el);\n\t    },\n\t\n\t    // empty popover content\n\t    empty: function($el) {\n\t        this.$el.find('.popover-content').empty();\n\t    },\n\t\n\t    // remove event handler and dom\n\t    remove: function() {\n\t        $('body').off('mousedown.' + this.uid);\n\t        this.$el.remove();\n\t    },\n\t\n\t    // calculate position and error\n\t    _get_placement: function(placement) {\n\t        // get popover dimensions\n\t        var width               = this._get_width(this.$el);\n\t        var height              = this.$el.height();\n\t\n\t        // get container details\n\t        var $container = this.options.container;\n\t        var container_width     = this._get_width($container);\n\t        var container_height    = this._get_height($container);\n\t        var container_position  = $container.position();\n\t\n\t        // initialize position\n\t        var top  = 0;\n\t        var left = 0;\n\t\n\t        // calculate position\n\t        if (['top', 'bottom'].indexOf(placement) != -1) {\n\t            left = container_position.left - width + (container_width + width) / 2;\n\t            switch (placement) {\n\t                case 'top':\n\t                    top = container_position.top - height - 5;\n\t                    break;\n\t                case 'bottom':\n\t                    top = container_position.top + container_height + 5;\n\t                    break;\n\t            }\n\t        } else {\n\t            top = container_position.top - height + (container_height + height) / 2;\n\t            switch (placement) {\n\t                case 'right':\n\t                    left = container_position.left + container_width;\n\t                    break;\n\t            }\n\t        }\n\t\n\t        // return\n\t        return {top: top, left: left};\n\t    },\n\t\n\t    // width\n\t    _get_width: function($el) {\n\t        return $el.width() + parseInt($el.css('padding-left')) + parseInt($el.css('padding-right'))\n\t    },\n\t\n\t    // height\n\t    _get_height: function($el) {\n\t        return $el.height() + parseInt($el.css('padding-top')) + parseInt($el.css('padding-bottom'))\n\t    },\n\t\n\t    // remove\n\t    _hide : function(e) {\n\t        // the 'is' for buttons that trigger popups\n\t        // the 'has' for icons within a button that triggers a popup\n\t        if (!$(this.options.container).is(e.target) &&\n\t            !$(this.el).is(e.target) &&\n\t            $(this.el).has(e.target).length === 0) {\n\t                this.hide();\n\t        }\n\t    },\n\t\n\t    // template\n\t    _template: function(options) {\n\t        var tmpl =  '<div class=\"ui-popover popover fade ' + options.placement + ' in\">' +\n\t                        '<div class=\"arrow\"/>' +\n\t                        '<div class=\"popover-title\">' +\n\t                            '<div class=\"popover-title-label\">' +\n\t                                options.title +\n\t                            '</div>';\n\t        if (options.with_close) {\n\t            tmpl +=         '<div id=\"close\" class=\"popover-close fa fa-times-circle\"/>';\n\t        }\n\t        tmpl +=         '</div>' +\n\t                        '<div class=\"popover-content\"/>' +\n\t                    '</div>';\n\t        return tmpl;\n\t    }\n\t});\n\t\n\treturn {\n\t    View: View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils) {\n\t\n\t/**\n\t * A plugin for initializing select2 input items.\n\t * Make sure the select2 library itself is loaded beforehand.\n\t * Also the element to which select2 will be appended has to \n\t * be created before select2 initialization (and passed as option).\n\t */\n\tvar View = Backbone.View.extend(\n\t{\n\t    // options\n\t    optionsDefault: {\n\t        css                 : '',\n\t        placeholder         : 'No data available',\n\t        data                : [],\n\t        value               : null,\n\t        multiple            : false,\n\t        minimumInputLength  : 0,\n\t        // example format of initial data: \"id:name,55:anotherrole@role.com,27:role@role.com\"\n\t        initialData         : ''\n\t    },\n\t    \n\t    // initialize\n\t    initialize : function(options) {\n\t        // configure options\n\t        this.options = Utils.merge(options, this.optionsDefault);\n\t        \n\t        // create new element\n\t        this.setElement(this._template(this.options));\n\t        \n\t        // check if container exists\n\t        if (!this.options.container) {\n\t            console.log('ui-select::initialize() : container not specified.');\n\t            return;\n\t        }\n\t        \n\t        // add to dom\n\t        this.options.container.append(this.$el);\n\t        \n\t        // link selection dictionary\n\t        this.select_data = this.options.data;\n\t        \n\t        // refresh\n\t        this._refresh();\n\t        \n\t        if (!this.options.multiple){\n\t            // initial value\n\t            if (this.options.value) {\n\t                this._setValue(this.options.value);\n\t            }\n\t            \n\t            // add change event\n\t            var self = this;\n\t            if (this.options.onchange) {\n\t                this.$el.on('change', function() {\n\t                    self.options.onchange(self.value());\n\t                });\n\t            }\n\t        }\n\t    },\n\t    \n\t    // value\n\t    value : function (new_value) {\n\t        // get current id/value\n\t        var before = this._getValue();\n\t        \n\t        // check if new_value is defined\n\t        if (new_value !== undefined) {\n\t            this._setValue(new_value);\n\t        }\n\t        \n\t        // get current id/value\n\t        var after = this._getValue();\n\t        \n\t        // fire onchange\n\t        if ((after != before && this.options.onchange)) {\n\t            this.options.onchange(after);\n\t        }\n\t            \n\t        // return current value\n\t        return after;\n\t    },\n\t    \n\t    // label\n\t    text : function () {\n\t        return this.$el.select2('data').text;\n\t    },\n\t    \n\t    // disabled\n\t    disabled: function() {\n\t        return !this.$el.select2('enable');\n\t    },\n\t\n\t    // enable\n\t    enable: function() {\n\t        this.$el.select2('enable', true);\n\t    },\n\t        \n\t    // disable\n\t    disable: function() {\n\t        this.$el.select2('enable', false);\n\t    },\n\t    \n\t    // add\n\t    add: function(options) {\n\t        // add options\n\t        this.select_data.push({\n\t            id      : options.id,\n\t            text    : options.text\n\t        });\n\t        \n\t        // refresh\n\t        this._refresh();\n\t    },\n\t    \n\t    // remove\n\t    del: function(id) {\n\t        // search option\n\t        var index = this._getIndex(id);\n\t        \n\t        // check if found\n\t        if (index != -1) {\n\t            // remove options\n\t            this.select_data.splice(index, 1);\n\t        \n\t            // refresh\n\t            this._refresh();\n\t        }\n\t    },\n\t    \n\t    // remove\n\t    remove: function() {\n\t        this.$el.select2('destroy');\n\t    },\n\t    \n\t    // update\n\t    update: function(options) {\n\t        // copy options\n\t        this.select_data = [];\n\t        for (var key in options.data) {\n\t            this.select_data.push(options.data[key]);\n\t        }\n\t        \n\t        // refresh\n\t        this._refresh();\n\t    },\n\t    \n\t    // refresh\n\t    _refresh: function() {\n\t        // add select2 data based on type of input\n\t        if (!this.options.multiple){\n\t            var selected = this._getValue();\n\t            var select_opt = {\n\t                data                : this.select_data,\n\t                containerCssClass   : this.options.css,\n\t                placeholder         : this.options.placeholder,\n\t                dropdownAutoWidth   : true\n\t            };\n\t            this.$el.select2(select_opt);\n\t            // select previous value (if exists)\n\t            this._setValue(selected);\n\t        } else {\n\t            var select_opt = {\n\t                multiple            : this.options.multiple,\n\t                containerCssClass   : this.options.css,\n\t                placeholder         : this.options.placeholder,\n\t                minimumInputLength  : this.options.minimumInputLength,\n\t                ajax                : this.options.ajax,\n\t                dropdownCssClass    : this.options.dropdownCssClass,\n\t                escapeMarkup        : this.options.escapeMarkup,\n\t                formatResult        : this.options.formatResult,\n\t                formatSelection     : this.options.formatSelection,\n\t                initSelection       : this.options.initSelection,\n\t                initialData         : this.options.initialData\n\t            };\n\t            this.$el.select2(select_opt);\n\t        }\n\t    },\n\t    \n\t    // get index\n\t    _getIndex: function(value) {\n\t        // search index\n\t        for (var key in this.select_data) {\n\t            if (this.select_data[key].id == value) {\n\t                return key;\n\t            }\n\t        }\n\t        \n\t        // not found\n\t        return -1;\n\t    },\n\t    \n\t    // get value\n\t    _getValue: function() {\n\t        return this.$el.select2('val');\n\t    },\n\t    \n\t    // set value\n\t    _setValue: function(new_value) {\n\t        var index = this._getIndex(new_value);\n\t        if (index == -1) {\n\t            if (this.select_data.length > 0) {\n\t                new_value = this.select_data[0].id;\n\t            }\n\t        }\n\t        this.$el.select2('val', new_value);\n\t    },\n\t    \n\t    // element\n\t    _template: function(options) {\n\t            return '<input type=\"hidden\" value=\"' + this.options.initialData + '\"/>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View : View\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {!(__WEBPACK_AMD_DEFINE_RESULT__ = function(){\n\t\n\t/**\n\t * Stringifies a number adding commas for digit grouping as per North America.\n\t */\n\tfunction commatize( number ) {\n\t    number += ''; // Convert to string\n\t    var rgx = /(\\d+)(\\d{3})/;\n\t    while (rgx.test(number)) {\n\t        number = number.replace(rgx, '$1' + ',' + '$2');\n\t    }\n\t    return number;\n\t}\n\t\n\t/**\n\t * Helper to determine if object is jQuery deferred.\n\t */\n\tvar is_deferred = function ( d ) {\n\t    return ('promise' in d);\n\t};\n\t\n\t/**\n\t * Implementation of a server-state based deferred. Server is repeatedly polled, and when\n\t * condition is met, deferred is resolved.\n\t */\n\tvar ServerStateDeferred = Backbone.Model.extend({\n\t    defaults: {\n\t        ajax_settings: {},\n\t        interval: 1000,\n\t        success_fn: function(result) { return true; }\n\t    },\n\t\n\t    /**\n\t     * Returns a deferred that resolves when success function returns true.\n\t     */\n\t    go: function() {\n\t        var deferred = $.Deferred(),\n\t            self = this,\n\t            ajax_settings = self.get('ajax_settings'),\n\t            success_fn = self.get('success_fn'),\n\t            interval = self.get('interval'),\n\t             _go = function() {\n\t                 $.ajax(ajax_settings).success(function(result) {\n\t                     if (success_fn(result)) {\n\t                         // Result is good, so resolve.\n\t                         deferred.resolve(result);\n\t                     }\n\t                     else {\n\t                         // Result not good, try again.\n\t                         setTimeout(_go, interval);\n\t                     }\n\t                 });\n\t             };\n\t         _go();\n\t         return deferred;\n\t    }\n\t});\n\t\n\t/**\n\t * Returns a random color in hexadecimal format that is sufficiently different from a single color\n\t * or set of colors.\n\t * @param colors a color or list of colors in the format '#RRGGBB'\n\t */\n\tvar get_random_color = function(colors) {\n\t    // Default for colors is white.\n\t    if (!colors) { colors = \"#ffffff\"; }\n\t\n\t    // If needed, create list of colors.\n\t    if ( typeof(colors) === \"string\" ) {\n\t        colors = [ colors ];\n\t    }\n\t\n\t    // Convert colors to numbers.\n\t    for (var i = 0; i < colors.length; i++) {\n\t        colors[i] = parseInt( colors[i].slice(1), 16 );\n\t    }\n\t\n\t    // -- Perceived brightness and difference formulas are from\n\t    // -- http://www.w3.org/WAI/ER/WD-AERT/#color-contrast\n\t\n\t    // Compute perceived color brightness (based on RGB-YIQ transformation):\n\t    var brightness = function(r, g, b) {\n\t        return ( (r * 299) + (g * 587) + (b * 114) ) / 1000;\n\t    };\n\t\n\t    // Compute color difference:\n\t    var difference = function(r1, g1, b1, r2, g2, b2) {\n\t        return ( Math.max(r1, r2) - Math.min(r1, r2) ) +\n\t               ( Math.max(g1, g2) - Math.min(g1, g2) ) +\n\t               ( Math.max(b1, b2) - Math.min(b1, b2) );\n\t    };\n\t\n\t    // Create new random color.\n\t    var new_color, nr, ng, nb,\n\t        other_color, or, og, ob,\n\t        n_brightness, o_brightness,\n\t        diff, ok = false,\n\t        num_tries = 0;\n\t    do {\n\t        // New color is never white b/c random in [0,1)\n\t        new_color = Math.round( Math.random() * 0xffffff );\n\t        nr = ( new_color & 0xff0000 ) >> 16;\n\t        ng = ( new_color & 0x00ff00 ) >> 8;\n\t        nb = new_color & 0x0000ff;\n\t        n_brightness = brightness(nr, ng, nb);\n\t        ok = true;\n\t        for (i = 0; i < colors.length; i++) {\n\t            other_color = colors[i];\n\t            or = ( other_color & 0xff0000 ) >> 16;\n\t            og = ( other_color & 0x00ff00 ) >> 8;\n\t            ob = other_color & 0x0000ff;\n\t            o_brightness = brightness(or, og, ob);\n\t            diff = difference(nr, ng, nb, or, og, ob);\n\t            // These thresholds may need to be adjusted. Brightness difference range is 125;\n\t            // color difference range is 500.\n\t            if ( ( Math.abs(n_brightness - o_brightness) < 40 ) ||\n\t                 ( diff < 200 ) ) {\n\t                ok = false;\n\t                break;\n\t            }\n\t        }\n\t\n\t        num_tries++\n\t;    } while (!ok && num_tries <= 10 );\n\t\n\t    // Add 0x1000000 to left pad number with 0s.\n\t    return '#' + ( 0x1000000 + new_color ).toString(16).substr(1,6);\n\t};\n\t\n\treturn {\n\t    commatize: commatize,\n\t    is_deferred: is_deferred,\n\t    ServerStateDeferred : ServerStateDeferred,\n\t    get_random_color    : get_random_color\n\t};\n\t\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\t/** Masthead **/\n\tvar GalaxyMasthead = Backbone.View.extend({\n\t    // base element\n\t    el_masthead: '#everything',\n\t\n\t    // options\n\t    options : null,\n\t\n\t    // background\n\t    $background: null,\n\t\n\t    // list\n\t    list: [],\n\t\n\t    // initialize\n\t    initialize : function(options) {\n\t        // update options\n\t        this.options = options;\n\t\n\t        // HACK: due to body events defined in panel.js\n\t        $(\"body\").off();\n\t\n\t        // define this element\n\t        this.setElement($(this._template(options)));\n\t\n\t        // append to masthead\n\t        $(this.el_masthead).append($(this.el));\n\t\n\t        // assign background\n\t        this.$background = $(this.el).find('#masthead-background');\n\t\n\t        // loop through unload functions if the user attempts to unload the page\n\t        var self = this;\n\t        $(window).on('beforeunload', function() {\n\t            var text = \"\";\n\t            for (key in self.list) {\n\t                if (self.list[key].options.onunload) {\n\t                    var q = self.list[key].options.onunload();\n\t                    if (q) text += q + \" \";\n\t                }\n\t            }\n\t            if (text != \"\") {\n\t                return text;\n\t            }\n\t        });\n\t    },\n\t\n\t    // configure events\n\t    events: {\n\t        'click'     : '_click',\n\t        'mousedown' : function(e) { e.preventDefault() }\n\t    },\n\t\n\t    // adds a new item to the masthead\n\t    append : function(item) {\n\t        return this._add(item, true);\n\t    },\n\t\n\t    // adds a new item to the masthead\n\t    prepend : function(item) {\n\t        return this._add(item, false);\n\t    },\n\t\n\t    // activate\n\t    highlight: function(id) {\n\t        var current = $(this.el).find('#' + id + '> li');\n\t        if (current) {\n\t            current.addClass('active');\n\t        }\n\t    },\n\t\n\t    // adds a new item to the masthead\n\t    _add : function(item, append) {\n\t        var $loc = $(this.el).find('#' + item.location);\n\t        if ($loc){\n\t            // create frame for new item\n\t            var $current = $(item.el);\n\t\n\t            // configure class in order to mark new items\n\t            $current.addClass('masthead-item');\n\t\n\t            // append to masthead\n\t            if (append) {\n\t                $loc.append($current);\n\t            } else {\n\t                $loc.prepend($current);\n\t            }\n\t\n\t            // add to list\n\t            this.list.push(item);\n\t        }\n\t\n\t        // location not found\n\t        return null;\n\t    },\n\t\n\t    // handle click event\n\t    _click: function(e) {\n\t        // close all popups\n\t        var $all = $(this.el).find('.popup');\n\t        if ($all) {\n\t            $all.hide();\n\t        }\n\t\n\t        // open current item\n\t        var $current = $(e.target).closest('.masthead-item').find('.popup');\n\t        if ($(e.target).hasClass('head')) {\n\t            $current.show();\n\t            this.$background.show();\n\t        } else {\n\t            this.$background.hide();\n\t        }\n\t    },\n\t\n\t    /*\n\t        HTML TEMPLATES\n\t    */\n\t\n\t    // fill template\n\t    _template: function(options) {\n\t        var brand_text = options.brand ? (\"/ \" + options.brand) : \"\" ;\n\t        return  '<div><div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n\t                    '<div style=\"position: relative; right: -50%; float: left;\">' +\n\t                        '<div id=\"navbar\" style=\"display: block; position: relative; right: 50%;\"></div>' +\n\t                    '</div>' +\n\t                   '<div class=\"navbar-brand\">' +\n\t                        '<a href=\"' + options.logo_url + '\">' +\n\t                            '<img style=\"margin-left: 0.35em;\" border=\"0\" src=\"' + galaxy_config.root + 'static/images/galaxyIcon_noText.png\">' +\n\t                            '<span id=\"brand\"> Galaxy ' + brand_text + '</span>' +\n\t                        '</a>' +\n\t                    '</div>' +\n\t                    '<div class=\"quota-meter-container\"></div>' +\n\t                    '<div id=\"iconbar\" class=\"iconbar\"></div>' +\n\t                '</div>' +\n\t                '<div id=\"masthead-background\" style=\"display: none; position: absolute; top: 33px; width: 100%; height: 100%; z-index: 1010\"></div>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\t/** Masthead icon **/\n\tvar GalaxyMastheadIcon = Backbone.View.extend({\n\t    // icon options\n\t    options:{\n\t        id              : '',\n\t        icon            : 'fa-cog',\n\t        tooltip         : '',\n\t        with_number     : false,\n\t        onclick         : function() { alert ('clicked') },\n\t        onunload        : null,\n\t        visible         : true\n\t    },\n\t\n\t    // location identifier for masthead class\n\t    location: 'iconbar',\n\t\n\t    // initialize\n\t    initialize: function (options){\n\t        // read in defaults\n\t        if (options)\n\t            this.options = _.defaults(options, this.options);\n\t\n\t        // add template for icon\n\t        this.setElement($(this._template(this.options)));\n\t\n\t        // configure icon\n\t        var self = this;\n\t        $(this.el).find('.icon').tooltip({title: this.options.tooltip, placement: 'bottom'})\n\t                                .on('mouseup', self.options.onclick);\n\t\n\t        // visiblity\n\t        if (!this.options.visible)\n\t            this.hide();\n\t    },\n\t\n\t    // show\n\t    show: function(){\n\t        $(this.el).css({visibility : 'visible'});\n\t    },\n\t\n\t    // show\n\t    hide: function(){\n\t        $(this.el).css({visibility : 'hidden'});\n\t    },\n\t\n\t    // switch icon\n\t    icon: function (new_icon){\n\t        // update icon class\n\t        $(this.el).find('.icon').removeClass(this.options.icon)\n\t                                .addClass(new_icon);\n\t\n\t        // update icon\n\t        this.options.icon = new_icon;\n\t    },\n\t\n\t    // toggle\n\t    toggle: function(){\n\t        $(this.el).addClass('toggle');\n\t    },\n\t\n\t    // untoggle\n\t    untoggle: function(){\n\t        $(this.el).removeClass('toggle');\n\t    },\n\t\n\t    // set/get number\n\t    number: function(new_number){\n\t        $(this.el).find('.number').text(new_number);\n\t    },\n\t\n\t    // fill template icon\n\t    _template: function (options){\n\t        var tmpl =  '<div id=\"' + options.id + '\" class=\"symbol\">' +\n\t                        '<div class=\"icon fa fa-2x ' + options.icon + '\"></div>';\n\t        if (options.with_number)\n\t            tmpl+=      '<div class=\"number\"></div>';\n\t        tmpl +=     '</div>';\n\t\n\t        // return template\n\t        return tmpl;\n\t    }\n\t});\n\t\n\t/** Masthead tab **/\n\tvar GalaxyMastheadTab = Backbone.View.extend({\n\t    // main options\n\t    options:{\n\t        id              : '',\n\t        title           : '',\n\t        target          : '_parent',\n\t        content         : '',\n\t        type            : 'url',\n\t        scratchbook     : false,\n\t        onunload        : null,\n\t        visible         : true,\n\t        disabled        : false,\n\t        title_attribute : ''\n\t    },\n\t\n\t    // location\n\t    location: 'navbar',\n\t\n\t    // optional sub menu\n\t    $menu: null,\n\t\n\t    // events\n\t    events:{\n\t        'click .head' : '_head'\n\t    },\n\t\n\t    // initialize\n\t    initialize: function ( options ){\n\t        // read in defaults\n\t        if ( options ){\n\t            this.options = _.defaults( options, this.options );\n\t        }\n\t\n\t        // update url\n\t        if ( this.options.content !== undefined && this.options.content.indexOf( '//' ) === -1 ){\n\t            this.options.content = galaxy_config.root + this.options.content;\n\t        }\n\t\n\t        // add template for tab\n\t        this.setElement( $( this._template( this.options ) ) );\n\t\n\t        // disable menu items that are not available to anonymous user\n\t        // also show title to explain why they are disabled\n\t        if ( this.options.disabled ){\n\t            $( this.el ).find( '.root' ).addClass( 'disabled' );\n\t            this._attachPopover();\n\t        }\n\t\n\t        // visiblity\n\t        if ( !this.options.visible ){\n\t            this.hide();\n\t        }\n\t    },\n\t\n\t    // show\n\t    show: function(){\n\t        $(this.el).css({visibility : 'visible'});\n\t    },\n\t\n\t    // show\n\t    hide: function(){\n\t        $(this.el).css({visibility : 'hidden'});\n\t    },\n\t\n\t    // add menu item\n\t    add: function (options){\n\t        // menu option defaults\n\t        var menuOptions = {\n\t            title       : 'Title',\n\t            content     : '',\n\t            type        : 'url',\n\t            target      : '_parent',\n\t            scratchbook : false,\n\t            divider     : false\n\t        }\n\t\n\t        // read in defaults\n\t        if (options)\n\t            menuOptions = _.defaults(options, menuOptions);\n\t\n\t        // update url\n\t        if (menuOptions.content && menuOptions.content.indexOf('//') === -1)\n\t            menuOptions.content = galaxy_config.root + menuOptions.content;\n\t\n\t        // check if submenu element is available\n\t        if (!this.$menu){\n\t            // insert submenu element into root\n\t            $(this.el).find('.root').append(this._templateMenu());\n\t\n\t            // show caret\n\t            $(this.el).find('.symbol').addClass('caret');\n\t\n\t            // update element link\n\t            this.$menu = $(this.el).find('.popup');\n\t        }\n\t\n\t        // create\n\t        var $item = $(this._templateMenuItem(menuOptions));\n\t\n\t        // append menu\n\t        this.$menu.append($item);\n\t\n\t        // add events\n\t        var self = this;\n\t        $item.on('click', function(e){\n\t            // prevent default\n\t            e.preventDefault();\n\t\n\t            // no modifications if new tab is requested\n\t            if (self.options.target === '_blank')\n\t                return true;\n\t\n\t            // load into frame\n\t            Galaxy.frame.add(options);\n\t        });\n\t\n\t        // append divider\n\t        if (menuOptions.divider)\n\t            this.$menu.append($(this._templateDivider()));\n\t    },\n\t\n\t    // show menu on header click\n\t    _head: function(e){\n\t        // prevent default\n\t        e.preventDefault();\n\t\n\t        if (this.options.disabled){\n\t            return // prevent link following if menu item is disabled\n\t        }\n\t\n\t        // check for menu options\n\t        if (!this.$menu) {\n\t            Galaxy.frame.add(this.options);\n\t        }\n\t    },\n\t\n\t    _attachPopover : function(){\n\t        var $popover_element = $(this.el).find('.head');\n\t        $popover_element.popover({\n\t            html: true,\n\t            content: 'Please <a href=\"' + galaxy_config.root + 'user/login?use_panels=True\">log in</a> or <a href=\"' + galaxy_config.root + 'user/create?use_panels=True\">register</a> to use this feature.',\n\t            placement: 'bottom'\n\t        }).on('shown.bs.popover', function() { // hooking on bootstrap event to automatically hide popovers after delay\n\t            setTimeout(function() {\n\t                $popover_element.popover('hide');\n\t            }, 5000);\n\t        });\n\t     },\n\t\n\t    // fill template header\n\t    _templateMenuItem: function (options){\n\t        return '<li><a href=\"' + options.content + '\" target=\"' + options.target + '\">' + options.title + '</a></li>';\n\t    },\n\t\n\t    // fill template header\n\t    _templateMenu: function (){\n\t        return '<ul class=\"popup dropdown-menu\"></ul>';\n\t    },\n\t\n\t    _templateDivider: function(){\n\t        return '<li class=\"divider\"></li>';\n\t    },\n\t\n\t    // fill template\n\t    _template: function (options){\n\t        // start template\n\t        var tmpl =  '<ul id=\"' + options.id + '\" class=\"nav navbar-nav\" border=\"0\" cellspacing=\"0\">' +\n\t                        '<li class=\"root dropdown\" style=\"\">' +\n\t                            '<a class=\"head dropdown-toggle\" data-toggle=\"dropdown\" target=\"' + options.target + '\" href=\"' + options.content + '\" title=\"' + options.title_attribute + '\">' +\n\t                                options.title + '<b class=\"symbol\"></b>' +\n\t                            '</a>' +\n\t                        '</li>' +\n\t                    '</ul>';\n\t\n\t        // return template\n\t        return tmpl;\n\t    }\n\t});\n\t\n\t// return\n\treturn {\n\t    GalaxyMasthead: GalaxyMasthead,\n\t    GalaxyMastheadTab: GalaxyMastheadTab,\n\t    GalaxyMastheadIcon: GalaxyMastheadIcon\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_, $, jQuery) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(27),\n\t    __webpack_require__(23),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( LIST_ITEM, DATASET_LI, BASE_MVC, _l ){\n\t/* global Backbone */\n\t//==============================================================================\n\tvar FoldoutListItemView = LIST_ITEM.FoldoutListItemView,\n\t    ListItemView = LIST_ITEM.ListItemView;\n\t/** @class Read only view for DatasetCollection.\n\t */\n\tvar DCListItemView = FoldoutListItemView.extend(\n\t/** @lends DCListItemView.prototype */{\n\t//TODO: may not be needed\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    className   : FoldoutListItemView.prototype.className + \" dataset-collection\",\n\t    id          : function(){\n\t        return [ 'dataset_collection', this.model.get( 'id' ) ].join( '-' );\n\t    },\n\t\n\t    /** override to add linkTarget */\n\t    initialize : function( attributes ){\n\t        this.linkTarget = attributes.linkTarget || '_blank';\n\t        this.hasUser = attributes.hasUser;\n\t        FoldoutListItemView.prototype.initialize.call( this, attributes );\n\t    },\n\t\n\t    /** event listeners */\n\t    _setUpListeners : function(){\n\t        FoldoutListItemView.prototype._setUpListeners.call( this );\n\t        // re-rendering on deletion\n\t        this.model.on( 'change', function( model, options ){\n\t            if( _.isEqual( _.keys( model.changed ), [ 'deleted' ] ) ){\n\t                this.render();\n\t            }\n\t        }, this );\n\t    },\n\t\n\t    // ......................................................................... rendering\n\t    //TODO:?? possibly move to listItem\n\t    /** render a subtitle to show the user what sort of collection this is */\n\t    _renderSubtitle : function(){\n\t        var $subtitle = $( '<div class=\"subtitle\"></div>' );\n\t        //TODO: would be good to get this in the subtitle\n\t        //var len = this.model.elements.length;\n\t        switch( this.model.get( 'collection_type' ) ){\n\t            case 'list':\n\t                return $subtitle.text( _l( 'a list of datasets' ) );\n\t            case 'paired':\n\t                return $subtitle.text( _l( 'a pair of datasets' ) );\n\t            case 'list:paired':\n\t                return $subtitle.text( _l( 'a list of paired datasets' ) );\n\t        }\n\t        return $subtitle;\n\t    },\n\t\n\t    // ......................................................................... foldout\n\t    /** override to add linktarget to sub-panel */\n\t    _getFoldoutPanelOptions : function(){\n\t        var options = FoldoutListItemView.prototype._getFoldoutPanelOptions.call( this );\n\t        return _.extend( options, {\n\t            linkTarget  : this.linkTarget,\n\t            hasUser     : this.hasUser\n\t        });\n\t    },\n\t\n\t    /** override to not catch sub-panel selectors */\n\t    $selector : function(){\n\t        return this.$( '> .selector' );\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'DCListItemView(' + modelString + ')';\n\t    }\n\t});\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tDCListItemView.prototype.templates = (function(){\n\t\n\t    var warnings = _.extend( {}, FoldoutListItemView.prototype.templates.warnings, {\n\t        error : BASE_MVC.wrapTemplate([\n\t            // error during index fetch - show error on dataset\n\t            '<% if( model.error ){ %>',\n\t                '<div class=\"errormessagesmall\">',\n\t                    _l( 'There was an error getting the data for this collection' ), ': <%- model.error %>',\n\t                '</div>',\n\t            '<% } %>'\n\t        ]),\n\t        purged : BASE_MVC.wrapTemplate([\n\t            '<% if( model.purged ){ %>',\n\t                '<div class=\"purged-msg warningmessagesmall\">',\n\t                    _l( 'This collection has been deleted and removed from disk' ),\n\t                '</div>',\n\t            '<% } %>'\n\t        ]),\n\t        deleted : BASE_MVC.wrapTemplate([\n\t            // deleted not purged\n\t            '<% if( model.deleted && !model.purged ){ %>',\n\t                '<div class=\"deleted-msg warningmessagesmall\">',\n\t                    _l( 'This collection has been deleted' ),\n\t                '</div>',\n\t            '<% } %>'\n\t        ])\n\t    });\n\t\n\t    // use element identifier\n\t    var titleBarTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"title-bar clear\" tabindex=\"0\">',\n\t            '<div class=\"title\">',\n\t                '<span class=\"name\"><%- collection.element_identifier || collection.name %></span>',\n\t            '</div>',\n\t            '<div class=\"subtitle\"></div>',\n\t        '</div>'\n\t    ], 'collection' );\n\t\n\t    return _.extend( {}, FoldoutListItemView.prototype.templates, {\n\t        warnings : warnings,\n\t        titleBar : titleBarTemplate\n\t    });\n\t}());\n\t\n\t\n\t//==============================================================================\n\t/** @class Read only view for DatasetCollectionElement.\n\t */\n\tvar DCEListItemView = ListItemView.extend(\n\t/** @lends DCEListItemView.prototype */{\n\t//TODO: this might be expendable - compacted with HDAListItemView\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** add the DCE class to the list item */\n\t    className   : ListItemView.prototype.className + \" dataset-collection-element\",\n\t\n\t    /** set up */\n\t    initialize  : function( attributes ){\n\t        if( attributes.logger ){ this.logger = this.model.logger = attributes.logger; }\n\t        this.log( 'DCEListItemView.initialize:', attributes );\n\t        ListItemView.prototype.initialize.call( this, attributes );\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'DCEListItemView(' + modelString + ')';\n\t    }\n\t});\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tDCEListItemView.prototype.templates = (function(){\n\t\n\t    // use the element identifier here - since that will persist and the user will need it\n\t    var titleBarTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"title-bar clear\" tabindex=\"0\">',\n\t            '<div class=\"title\">',\n\t                '<span class=\"name\"><%- element.element_identifier %></span>',\n\t            '</div>',\n\t            '<div class=\"subtitle\"></div>',\n\t        '</div>'\n\t    ], 'element' );\n\t\n\t    return _.extend( {}, ListItemView.prototype.templates, {\n\t        titleBar : titleBarTemplate\n\t    });\n\t}());\n\t\n\t\n\t//==============================================================================\n\t/** @class Read only view for a DatasetCollectionElement that is also an DatasetAssociation\n\t *      (a dataset contained in a dataset collection).\n\t */\n\tvar DatasetDCEListItemView = DATASET_LI.DatasetListItemView.extend(\n\t/** @lends DatasetDCEListItemView.prototype */{\n\t\n\t    className   : DATASET_LI.DatasetListItemView.prototype.className + \" dataset-collection-element\",\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** set up */\n\t    initialize  : function( attributes ){\n\t        if( attributes.logger ){ this.logger = this.model.logger = attributes.logger; }\n\t        this.log( 'DatasetDCEListItemView.initialize:', attributes );\n\t        DATASET_LI.DatasetListItemView.prototype.initialize.call( this, attributes );\n\t    },\n\t\n\t    /** In this override, only get details if in the ready state.\n\t     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n\t     */\n\t    _fetchModelDetails : function(){\n\t        var view = this;\n\t        if( view.model.inReadyState() && !view.model.hasDetails() ){\n\t            return view.model.fetch({ silent: true });\n\t        }\n\t        return jQuery.when();\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'DatasetDCEListItemView(' + modelString + ')';\n\t    }\n\t});\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tDatasetDCEListItemView.prototype.templates = (function(){\n\t\n\t    // use the element identifier here and not the dataset name\n\t    //TODO:?? can we steal the DCE titlebar?\n\t    var titleBarTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"title-bar clear\" tabindex=\"0\">',\n\t            '<span class=\"state-icon\"></span>',\n\t            '<div class=\"title\">',\n\t                '<span class=\"name\"><%- element.element_identifier %></span>',\n\t            '</div>',\n\t        '</div>'\n\t    ], 'element' );\n\t\n\t    return _.extend( {}, DATASET_LI.DatasetListItemView.prototype.templates, {\n\t        titleBar : titleBarTemplate\n\t    });\n\t}());\n\t\n\t\n\t//==============================================================================\n\t/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n\t *      (a nested DC).\n\t */\n\tvar NestedDCDCEListItemView = DCListItemView.extend(\n\t/** @lends NestedDCDCEListItemView.prototype */{\n\t\n\t    className   : DCListItemView.prototype.className + \" dataset-collection-element\",\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    // comment this out to suppress log output\n\t    //logger              : console,\n\t\n\t    /** In this override, add the state as a class for use with state-based CSS */\n\t    _swapNewRender : function( $newRender ){\n\t        DCListItemView.prototype._swapNewRender.call( this, $newRender );\n\t//TODO: model currently has no state\n\t        var state = this.model.get( 'state' ) || 'ok';\n\t        //if( this.model.has( 'state' ) ){\n\t        this.$el.addClass( 'state-' + state );\n\t        //}\n\t        return this.$el;\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'NestedDCDCEListItemView(' + modelString + ')';\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        DCListItemView          : DCListItemView,\n\t        DCEListItemView         : DCEListItemView,\n\t        DatasetDCEListItemView  : DatasetDCEListItemView,\n\t        NestedDCDCEListItemView : NestedDCDCEListItemView\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1), __webpack_require__(1)))\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_, Backbone, jQuery) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(45),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( DATASET_MODEL, BASE_MVC, _l ){\n\t\n\tvar logNamespace = 'collections';\n\t//==============================================================================\n\t/*\n\tNotes:\n\t\n\tTerminology:\n\t    DatasetCollection/DC : a container of datasets or nested DatasetCollections\n\t    Element/DatasetCollectionElement/DCE : an item contained in a DatasetCollection\n\t    HistoryDatasetCollectionAssociation/HDCA: a DatasetCollection contained in a history\n\t\n\t\n\tThis all seems too complex unfortunately:\n\t\n\t- Terminology collision between DatasetCollections (DCs) and Backbone Collections.\n\t- In the DatasetCollections API JSON, DC Elements use a 'Has A' stucture to *contain*\n\t    either a dataset or a nested DC. This would make the hierarchy much taller. I've\n\t    decided to merge the contained JSON with the DC element json - making the 'has a'\n\t    relation into an 'is a' relation. This seems simpler to me and allowed a lot of\n\t    DRY in both models and views, but may make tracking or tracing within these models\n\t    more difficult (since DatasetCollectionElements are now *also* DatasetAssociations\n\t    or DatasetCollections (nested)). This also violates the rule of thumb about\n\t    favoring aggregation over inheritance.\n\t- Currently, there are three DatasetCollection subclasses: List, Pair, and ListPaired.\n\t    These each should a) be usable on their own, b) be usable in the context of\n\t    nesting within a collection model (at least in the case of ListPaired), and\n\t    c) be usable within the context of other container models (like History or\n\t    LibraryFolder, etc.). I've tried to separate/extract classes in order to\n\t    handle those three situations, but it's proven difficult to do in a simple,\n\t    readable manner.\n\t- Ideally, histories and libraries would inherit from the same server models as\n\t    dataset collections do since they are (in essence) dataset collections themselves -\n\t    making the whole nested structure simpler. This would be a large, error-prone\n\t    refactoring and migration.\n\t\n\tMany of the classes and heirarchy are meant as extension points so, while the\n\trelations and flow may be difficult to understand initially, they'll allow us to\n\thandle the growth or flux dataset collection in the future (w/o actually implementing\n\tany YAGNI).\n\t\n\t*/\n\t//_________________________________________________________________________________________________ ELEMENTS\n\t/** @class mixin for Dataset collection elements.\n\t *      When collection elements are passed from the API, the underlying element is\n\t *          in a sub-object 'object' (IOW, a DCE representing an HDA will have HDA json in element.object).\n\t *      This mixin uses the constructor and parse methods to merge that JSON with the DCE attribtues\n\t *          effectively changing a DCE from a container to a subclass (has a --> is a).\n\t */\n\tvar DatasetCollectionElementMixin = {\n\t\n\t    /** default attributes used by elements in a dataset collection */\n\t    defaults : {\n\t        model_class         : 'DatasetCollectionElement',\n\t        element_identifier  : null,\n\t        element_index       : null,\n\t        element_type        : null\n\t    },\n\t\n\t    /** merge the attributes of the sub-object 'object' into this model */\n\t    _mergeObject : function( attributes ){\n\t        // if we don't preserve and correct ids here, the element id becomes the object id\n\t        // and collision in backbone's _byId will occur and only\n\t        _.extend( attributes, attributes.object, { element_id: attributes.id });\n\t        delete attributes.object;\n\t        return attributes;\n\t    },\n\t\n\t    /** override to merge this.object into this */\n\t    constructor : function( attributes, options ){\n\t        // console.debug( '\\t DatasetCollectionElement.constructor:', attributes, options );\n\t        attributes = this._mergeObject( attributes );\n\t        this.idAttribute = 'element_id';\n\t        Backbone.Model.apply( this, arguments );\n\t    },\n\t\n\t    /** when the model is fetched, merge this.object into this */\n\t    parse : function( response, options ){\n\t        var attributes = response;\n\t        attributes = this._mergeObject( attributes );\n\t        return attributes;\n\t    }\n\t};\n\t\n\t//TODO: unused?\n\t/** @class Concrete class of Generic DatasetCollectionElement */\n\tvar DatasetCollectionElement = Backbone.Model\n\t    .extend( BASE_MVC.LoggableMixin )\n\t    .extend( DatasetCollectionElementMixin )\n\t    .extend({ _logNamespace : logNamespace });\n\t\n\t\n\t//==============================================================================\n\t/** @class Base/Abstract Backbone collection for Generic DCEs. */\n\tvar DCECollection = Backbone.Collection.extend( BASE_MVC.LoggableMixin ).extend(\n\t/** @lends DCECollection.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    model: DatasetCollectionElement,\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t//TODO: unused?\n\t    /** Set up.\n\t     *  @see Backbone.Collection#initialize\n\t     */\n\t    initialize : function( attributes, options ){\n\t        this.debug( this + '(DCECollection).initialize:', attributes, options );\n\t        options = options || {};\n\t        //this._setUpListeners();\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'DatasetCollectionElementCollection(', this.length, ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t/** @class Backbone model for a dataset collection element that is a dataset (HDA).\n\t */\n\tvar DatasetDCE = DATASET_MODEL.DatasetAssociation.extend( BASE_MVC.mixin( DatasetCollectionElementMixin,\n\t/** @lends DatasetDCE.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** url fn */\n\t    url : function(){\n\t        var galaxyRoot = (( window.galaxy_config && galaxy_config.root )?( galaxy_config.root ):( '/' ));\n\t        // won't always be an hda\n\t        if( !this.has( 'history_id' ) ){\n\t            console.warn( 'no endpoint for non-hdas within a collection yet' );\n\t            // (a little silly since this api endpoint *also* points at hdas)\n\t            return galaxyRoot + 'api/datasets';\n\t        }\n\t        return galaxyRoot + 'api/histories/' + this.get( 'history_id' ) + '/contents/' + this.get( 'id' );\n\t    },\n\t\n\t    defaults : _.extend( {},\n\t        DATASET_MODEL.DatasetAssociation.prototype.defaults,\n\t        DatasetCollectionElementMixin.defaults\n\t    ),\n\t\n\t    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n\t    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n\t    //  - re-apply manually for now\n\t    /** call the mixin constructor */\n\t    constructor : function( attributes, options ){\n\t        this.debug( '\\t DatasetDCE.constructor:', attributes, options );\n\t        //DATASET_MODEL.DatasetAssociation.prototype.constructor.call( this, attributes, options );\n\t        DatasetCollectionElementMixin.constructor.call( this, attributes, options );\n\t    },\n\t\n\t//TODO: unused?\n\t    /** set up */\n\t    initialize : function( attributes, options ){\n\t        this.debug( this + '(DatasetDCE).initialize:', attributes, options );\n\t        DATASET_MODEL.DatasetAssociation.prototype.initialize.call( this, attributes, options );\n\t    },\n\t\n\t    /** Does this model already contain detailed data (as opposed to just summary level data)? */\n\t    hasDetails : function(){\n\t        // dataset collection api does return genome_build but doesn't return annotation\n\t        return _.has( this.attributes, 'annotation' );\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t        var objStr = this.get( 'element_identifier' );\n\t        return ([ 'DatasetDCE(', objStr, ')' ].join( '' ));\n\t    }\n\t}));\n\t\n\t\n\t//==============================================================================\n\t/** @class DCECollection of DatasetDCE's (a list of datasets, a pair of datasets).\n\t */\n\tvar DatasetDCECollection = DCECollection.extend(\n\t/** @lends DatasetDCECollection.prototype */{\n\t    model: DatasetDCE,\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t//TODO: unused?\n\t    /** set up */\n\t    initialize : function( attributes, options ){\n\t        this.debug( this + '(DatasetDCECollection).initialize:', attributes, options );\n\t        DCECollection.prototype.initialize.call( this, attributes, options );\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'DatasetDCECollection(', this.length, ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//_________________________________________________________________________________________________ COLLECTIONS\n\t/** @class Backbone model for Dataset Collections.\n\t *      The DC API returns an array of JSON objects under the attribute elements.\n\t *      This model:\n\t *          - removes that array/attribute ('elements') from the model,\n\t *          - creates a bbone collection (of the class defined in the 'collectionClass' attribute),\n\t *          - passes that json onto the bbone collection\n\t *          - caches the bbone collection in this.elements\n\t */\n\tvar DatasetCollection = Backbone.Model\n\t        .extend( BASE_MVC.LoggableMixin )\n\t        .extend( BASE_MVC.SearchableModelMixin )\n\t        .extend(/** @lends DatasetCollection.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** default attributes for a model */\n\t    defaults : {\n\t        /* 'list', 'paired', or 'list:paired' */\n\t        collection_type     : null,\n\t        //??\n\t        deleted             : false\n\t    },\n\t\n\t    /** Which class to use for elements */\n\t    collectionClass : DCECollection,\n\t\n\t    /** set up: create elements instance var and (on changes to elements) update them  */\n\t    initialize : function( model, options ){\n\t        this.debug( this + '(DatasetCollection).initialize:', model, options, this );\n\t        //historyContent.HistoryContent.prototype.initialize.call( this, attrs, options );\n\t        this.elements = this._createElementsModel();\n\t        this.on( 'change:elements', function(){\n\t            this.log( 'change:elements' );\n\t//TODO: prob. better to update the collection instead of re-creating it\n\t            this.elements = this._createElementsModel();\n\t        });\n\t    },\n\t\n\t    /** move elements model attribute to full collection */\n\t    _createElementsModel : function(){\n\t        this.debug( this + '._createElementsModel', this.collectionClass, this.get( 'elements' ), this.elements );\n\t//TODO: same patterns as DatasetCollectionElement _createObjectModel - refactor to BASE_MVC.hasSubModel?\n\t        var elements = this.get( 'elements' ) || [];\n\t        this.unset( 'elements', { silent: true });\n\t        this.elements = new this.collectionClass( elements );\n\t        //this.debug( 'collectionClass:', this.collectionClass + '', this.elements );\n\t        return this.elements;\n\t    },\n\t\n\t    // ........................................................................ common queries\n\t    /** pass the elements back within the model json when this is serialized */\n\t    toJSON : function(){\n\t        var json = Backbone.Model.prototype.toJSON.call( this );\n\t        if( this.elements ){\n\t            json.elements = this.elements.toJSON();\n\t        }\n\t        return json;\n\t    },\n\t\n\t    /** Is this collection in a 'ready' state no processing (for the collection) is left\n\t     *  to do on the server.\n\t     */\n\t    inReadyState : function(){\n\t        var populated = this.get( 'populated' );\n\t        return ( this.isDeletedOrPurged() || populated );\n\t    },\n\t\n\t    //TODO:?? the following are the same interface as DatasetAssociation - can we combine?\n\t    /** Does the DC contain any elements yet? Is a fetch() required? */\n\t    hasDetails : function(){\n\t//TODO: this is incorrect for (accidentally) empty collections\n\t        this.debug( 'hasDetails:', this.elements.length );\n\t        return this.elements.length !== 0;\n\t    },\n\t\n\t    /** Given the filters, what models in this.elements would be returned? */\n\t    getVisibleContents : function( filters ){\n\t        // filters unused for now\n\t        return this.elements;\n\t    },\n\t\n\t    // ........................................................................ ajax\n\t    /** save this dataset, _Mark_ing it as deleted (just a flag) */\n\t    'delete' : function( options ){\n\t        if( this.get( 'deleted' ) ){ return jQuery.when(); }\n\t        return this.save( { deleted: true }, options );\n\t    },\n\t    /** save this dataset, _Mark_ing it as undeleted */\n\t    undelete : function( options ){\n\t        if( !this.get( 'deleted' ) || this.get( 'purged' ) ){ return jQuery.when(); }\n\t        return this.save( { deleted: false }, options );\n\t    },\n\t\n\t    /** Is this collection deleted or purged? */\n\t    isDeletedOrPurged : function(){\n\t        return ( this.get( 'deleted' ) || this.get( 'purged' ) );\n\t    },\n\t\n\t    // ........................................................................ searchable\n\t    /** searchable attributes for collections */\n\t    searchAttributes : [\n\t        'name'\n\t    ],\n\t\n\t    // ........................................................................ misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var idAndName = [ this.get( 'id' ), this.get( 'name' ) || this.get( 'element_identifier' ) ];\n\t        return 'DatasetCollection(' + ( idAndName.join(',') ) + ')';\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t/** Model for a DatasetCollection containing datasets (non-nested).\n\t */\n\tvar ListDatasetCollection = DatasetCollection.extend(\n\t/** @lends ListDatasetCollection.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** override since we know the collection will only contain datasets */\n\t    collectionClass : DatasetDCECollection,\n\t\n\t//TODO: unused?\n\t    initialize : function( attrs, options ){\n\t        this.debug( this + '(ListDatasetCollection).initialize:', attrs, options );\n\t        DatasetCollection.prototype.initialize.call( this, attrs, options );\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'ListDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t/** Model for a DatasetCollection containing fwd/rev datasets (a list of 2).\n\t */\n\tvar PairDatasetCollection = ListDatasetCollection.extend(\n\t/** @lends PairDatasetCollection.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t//TODO: unused?\n\t    /**  */\n\t    initialize : function( attrs, options ){\n\t        this.debug( this + '(PairDatasetCollection).initialize:', attrs, options );\n\t        ListDatasetCollection.prototype.initialize.call( this, attrs, options );\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'PairDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//_________________________________________________________________________________________________ NESTED COLLECTIONS\n\t// this is where things get weird, man. Weird.\n\t//TODO: it might be possible to compact all the following...I think.\n\t//==============================================================================\n\t/** @class Backbone model for a Generic DatasetCollectionElement that is also a DatasetCollection\n\t *      (a nested collection). Currently only list:paired.\n\t */\n\tvar NestedDCDCE = DatasetCollection.extend( BASE_MVC.mixin( DatasetCollectionElementMixin,\n\t/** @lends NestedDCDCE.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n\t    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n\t    //  - re-apply manually it now\n\t    /** call the mixin constructor */\n\t    constructor : function( attributes, options ){\n\t        this.debug( '\\t NestedDCDCE.constructor:', attributes, options );\n\t        DatasetCollectionElementMixin.constructor.call( this, attributes, options );\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t        var objStr = ( this.object )?( '' + this.object ):( this.get( 'element_identifier' ) );\n\t        return ([ 'NestedDCDCE(', objStr, ')' ].join( '' ));\n\t    }\n\t}));\n\t\n\t\n\t//==============================================================================\n\t/** @class Backbone collection containing Generic NestedDCDCE's (nested dataset collections).\n\t */\n\tvar NestedDCDCECollection = DCECollection.extend(\n\t/** @lends NestedDCDCECollection.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** This is a collection of nested collections */\n\t    model: NestedDCDCE,\n\t\n\t//TODO: unused?\n\t    /** set up */\n\t    initialize : function( attrs, options ){\n\t        this.debug( this + '(NestedDCDCECollection).initialize:', attrs, options );\n\t        DCECollection.prototype.initialize.call( this, attrs, options );\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'NestedDCDCECollection(', this.length, ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t/** @class Backbone model for a paired dataset collection within a list:paired dataset collection.\n\t */\n\tvar NestedPairDCDCE = PairDatasetCollection.extend( BASE_MVC.mixin( DatasetCollectionElementMixin,\n\t/** @lends NestedPairDCDCE.prototype */{\n\t//TODO:?? possibly rename to NestedDatasetCollection?\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n\t    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n\t    //  - re-apply manually it now\n\t    /** This is both a collection and a collection element - call the constructor */\n\t    constructor : function( attributes, options ){\n\t        this.debug( '\\t NestedPairDCDCE.constructor:', attributes, options );\n\t        //DatasetCollection.constructor.call( this, attributes, options );\n\t        DatasetCollectionElementMixin.constructor.call( this, attributes, options );\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t        var objStr = ( this.object )?( '' + this.object ):( this.get( 'element_identifier' ) );\n\t        return ([ 'NestedPairDCDCE(', objStr, ')' ].join( '' ));\n\t    }\n\t}));\n\t\n\t\n\t//==============================================================================\n\t/** @class Backbone collection for a backbone collection containing paired dataset collections.\n\t */\n\tvar NestedPairDCDCECollection = NestedDCDCECollection.extend(\n\t/** @lends PairDCDCECollection.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** We know this collection is composed of only nested pair collections */\n\t    model: NestedPairDCDCE,\n\t\n\t//TODO: unused?\n\t    /** set up */\n\t    initialize : function( attrs, options ){\n\t        this.debug( this + '(NestedPairDCDCECollection).initialize:', attrs, options );\n\t        NestedDCDCECollection.prototype.initialize.call( this, attrs, options );\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'NestedPairDCDCECollection(', this.length, ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t/** @class Backbone Model for a DatasetCollection (list) that contains DatasetCollections (pairs).\n\t */\n\tvar ListPairedDatasetCollection = DatasetCollection.extend(\n\t/** @lends ListPairedDatasetCollection.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** list:paired is the only collection that itself contains collections */\n\t    collectionClass : NestedPairDCDCECollection,\n\t\n\t//TODO: unused?\n\t    /** set up */\n\t    initialize : function( attributes, options ){\n\t        this.debug( this + '(ListPairedDatasetCollection).initialize:', attributes, options );\n\t        DatasetCollection.prototype.initialize.call( this, attributes, options );\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'ListPairedDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        ListDatasetCollection               : ListDatasetCollection,\n\t        PairDatasetCollection               : PairDatasetCollection,\n\t        ListPairedDatasetCollection         : ListPairedDatasetCollection\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $, jQuery) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(24),\n\t    __webpack_require__(9),\n\t    __webpack_require__(6),\n\t    __webpack_require__(10),\n\t    __webpack_require__(65),\n\t    __webpack_require__(5),\n\t    __webpack_require__(62)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( HDCA, STATES, BASE_MVC, UI_MODAL, naturalSort, _l ){\n\t\n\tvar logNamespace = 'collections';\n\t/*==============================================================================\n\tTODO:\n\t    use proper Element model and not just json\n\t    straighten out createFn, collection.createHDCA\n\t    possibly stop using modals for this\n\t    It would be neat to do a drag and drop\n\t\n\t==============================================================================*/\n\t/** A view for both DatasetDCEs and NestedDCDCEs\n\t *  (things that implement collection-model:DatasetCollectionElementMixin)\n\t */\n\tvar DatasetCollectionElementView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n\t    _logNamespace : logNamespace,\n\t\n\t//TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n\t    tagName     : 'li',\n\t    className   : 'collection-element',\n\t\n\t    initialize : function( attributes ){\n\t        this.element = attributes.element || {};\n\t        this.selected = attributes.selected || false;\n\t    },\n\t\n\t    render : function(){\n\t        this.$el\n\t            .attr( 'data-element-id', this.element.id )\n\t            .attr( 'draggable', true )\n\t            .html( this.template({ element: this.element }) );\n\t        if( this.selected ){\n\t            this.$el.addClass( 'selected' );\n\t        }\n\t        return this;\n\t    },\n\t\n\t    //TODO: lots of unused space in the element - possibly load details and display them horiz.\n\t    template : _.template([\n\t        '<a class=\"name\" title=\"', _l( 'Click to rename' ), '\" href=\"javascript:void(0)\">',\n\t            '<%= element.name %>',\n\t        '</a>',\n\t        '<button class=\"discard btn btn-sm\" title=\"', _l( 'Remove this dataset from the list' ), '\">',\n\t            _l( 'Discard' ),\n\t        '</button>',\n\t    ].join('')),\n\t\n\t    /** select this element and pub */\n\t    select : function( toggle ){\n\t        this.$el.toggleClass( 'selected', toggle );\n\t        this.trigger( 'select', {\n\t            source   : this,\n\t            selected : this.$el.hasClass( 'selected' )\n\t        });\n\t    },\n\t\n\t    /** animate the removal of this element and pub */\n\t    discard : function(){\n\t        var view = this,\n\t            parentWidth = this.$el.parent().width();\n\t        this.$el.animate({ 'margin-right' : parentWidth }, 'fast', function(){\n\t            view.trigger( 'discard', {\n\t                source : view\n\t            });\n\t            view.destroy();\n\t        });\n\t    },\n\t\n\t    /** remove the DOM and any listeners */\n\t    destroy : function(){\n\t        this.off();\n\t        this.$el.remove();\n\t    },\n\t\n\t    events : {\n\t        'click'         : '_click',\n\t        'click .name'   : '_clickName',\n\t        'click .discard': '_clickDiscard',\n\t\n\t        'dragstart'     : '_dragstart',\n\t        'dragend'       : '_dragend',\n\t        'dragover'      : '_sendToParent',\n\t        'drop'          : '_sendToParent'\n\t    },\n\t\n\t    /** select when the li is clicked */\n\t    _click : function( ev ){\n\t        ev.stopPropagation();\n\t        this.select( ev );\n\t    },\n\t\n\t    /** rename a pair when the name is clicked */\n\t    _clickName : function( ev ){\n\t        ev.stopPropagation();\n\t        ev.preventDefault();\n\t        var promptString = [ _l( 'Enter a new name for the element' ), ':\\n(',\n\t                             _l( 'Note that changing the name here will not rename the dataset' ), ')' ].join( '' ),\n\t            response = prompt( _l( 'Enter a new name for the element' ) + ':', this.element.name );\n\t        if( response ){\n\t            this.element.name = response;\n\t            this.render();\n\t        }\n\t        //TODO: cancelling with ESC leads to closure of the creator...\n\t    },\n\t\n\t    /** discard when the discard button is clicked */\n\t    _clickDiscard : function( ev ){\n\t        ev.stopPropagation();\n\t        this.discard();\n\t    },\n\t\n\t    /** dragging pairs for re-ordering */\n\t    _dragstart : function( ev ){\n\t        if( ev.originalEvent ){ ev = ev.originalEvent; }\n\t        ev.dataTransfer.effectAllowed = 'move';\n\t        ev.dataTransfer.setData( 'text/plain', JSON.stringify( this.element ) );\n\t\n\t        this.$el.addClass( 'dragging' );\n\t        this.$el.parent().trigger( 'collection-element.dragstart', [ this ] );\n\t    },\n\t\n\t    /** dragging for re-ordering */\n\t    _dragend : function( ev ){\n\t        this.$el.removeClass( 'dragging' );\n\t        this.$el.parent().trigger( 'collection-element.dragend', [ this ] );\n\t    },\n\t\n\t    /** manually bubble up an event to the parent/container */\n\t    _sendToParent : function( ev ){\n\t        this.$el.parent().trigger( ev );\n\t    },\n\t\n\t    /** string rep */\n\t    toString : function(){\n\t        return 'DatasetCollectionElementView()';\n\t    }\n\t});\n\t\n\t\n\t// ============================================================================\n\t/** An interface for building collections.\n\t */\n\tvar ListCollectionCreator = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n\t    _logNamespace : logNamespace,\n\t\n\t    /** the class used to display individual elements */\n\t    elementViewClass : DatasetCollectionElementView,\n\t    /** the class this creator will create and save */\n\t    collectionClass  : HDCA.HistoryListDatasetCollection,\n\t    className        : 'list-collection-creator collection-creator flex-row-container',\n\t\n\t    /** minimum number of valid elements to start with in order to build a collection of this type */\n\t    minElements      : 1,\n\t\n\t    defaultAttributes : {\n\t//TODO: remove - use new collectionClass().save()\n\t        /** takes elements and creates the proper collection - returns a promise */\n\t        creationFn : function(){ throw new TypeError( 'no creation fn for creator' ); },\n\t        /** fn to call when the collection is created (scoped to this) */\n\t        oncreate   : function(){},\n\t        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n\t        oncancel   : function(){},\n\t        /** distance from list edge to begin autoscrolling list */\n\t        autoscrollDist  : 24,\n\t        /** Color passed to hoverhighlight */\n\t        highlightClr    : 'rgba( 64, 255, 255, 1.0 )'\n\t    },\n\t\n\t    /** set up initial options, instance vars, behaviors */\n\t    initialize : function( attributes ){\n\t        this.metric( 'ListCollectionCreator.initialize', attributes );\n\t        var creator = this;\n\t        _.each( this.defaultAttributes, function( value, key ){\n\t            value = attributes[ key ] || value;\n\t            creator[ key ] = value;\n\t        });\n\t\n\t        /** unordered, original list - cache to allow reversal */\n\t        creator.initialElements = attributes.elements || [];\n\t\n\t        this._instanceSetUp();\n\t        this._elementsSetUp();\n\t        this._setUpBehaviors();\n\t    },\n\t\n\t    /** set up instance vars */\n\t    _instanceSetUp : function(){\n\t        /** Ids of elements that have been selected by the user - to preserve over renders */\n\t        this.selectedIds = {};\n\t        /** DOM elements currently being dragged */\n\t        this.$dragging = null;\n\t        /** Used for blocking UI events during ajax/operations (don't post twice) */\n\t        this.blocking = false;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ process raw list\n\t    /** set up main data */\n\t    _elementsSetUp : function(){\n\t        //this.debug( '-- _dataSetUp' );\n\t        /** a list of invalid elements and the reasons they aren't valid */\n\t        this.invalidElements = [];\n\t//TODO: handle fundamental problem of syncing DOM, views, and list here\n\t        /** data for list in progress */\n\t        this.workingElements = [];\n\t        /** views for workingElements */\n\t        this.elementViews = [];\n\t\n\t        // copy initial list, sort, add ids if needed\n\t        this.workingElements = this.initialElements.slice( 0 );\n\t        this._ensureElementIds();\n\t        this._validateElements();\n\t        this._mangleDuplicateNames();\n\t        this._sortElements();\n\t    },\n\t\n\t    /** add ids to dataset objs in initial list if none */\n\t    _ensureElementIds : function(){\n\t        this.workingElements.forEach( function( element ){\n\t            if( !element.hasOwnProperty( 'id' ) ){\n\t                element.id = _.uniqueId();\n\t            }\n\t        });\n\t        return this.workingElements;\n\t    },\n\t\n\t    /** separate working list into valid and invalid elements for this collection */\n\t    _validateElements : function(){\n\t        var creator = this,\n\t            existingNames = {};\n\t        creator.invalidElements = [];\n\t\n\t        this.workingElements = this.workingElements.filter( function( element ){\n\t            var problem = creator._isElementInvalid( element );\n\t            if( problem ){\n\t                creator.invalidElements.push({\n\t                    element : element,\n\t                    text    : problem\n\t                });\n\t            }\n\t            return !problem;\n\t        });\n\t        return this.workingElements;\n\t    },\n\t\n\t    /** describe what is wrong with a particular element if anything */\n\t    _isElementInvalid : function( element ){\n\t        if( element.history_content_type !== 'dataset' ){\n\t            return _l( \"is not a dataset\" );\n\t        }\n\t        if( element.state !== STATES.OK ){\n\t            if( _.contains( STATES.NOT_READY_STATES, element.state ) ){\n\t                return _l( \"hasn't finished running yet\" );\n\t            }\n\t            return _l( \"has errored, is paused, or is not accessible\" );\n\t        }\n\t        if( element.deleted || element.purged ){\n\t            return _l( \"has been deleted or purged\" );\n\t        }\n\t        return null;\n\t    },\n\t\n\t    /** mangle duplicate names using a mac-like '(counter)' addition to any duplicates */\n\t    _mangleDuplicateNames : function(){\n\t        var SAFETY = 900,\n\t            counter = 1,\n\t            existingNames = {};\n\t        this.workingElements.forEach( function( element ){\n\t            var currName = element.name;\n\t            while( existingNames.hasOwnProperty( currName ) ){\n\t                currName = element.name + ' (' + counter + ')';\n\t                counter += 1;\n\t                if( counter >= SAFETY ){\n\t                    throw new Error( 'Safety hit in while loop - thats impressive' );\n\t                }\n\t            }\n\t            element.name = currName;\n\t            existingNames[ element.name ] = true;\n\t        });\n\t    },\n\t\n\t    /** sort a list of elements */\n\t    _sortElements : function( list ){\n\t        // // currently only natural sort by name\n\t        // this.workingElements.sort( function( a, b ){ return naturalSort( a.name, b.name ); });\n\t        // return this.workingElements;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ rendering\n\t    // templates : ListCollectionCreator.templates,\n\t    /** render the entire interface */\n\t    render : function( speed, callback ){\n\t        //this.debug( '-- _render' );\n\t        if( this.workingElements.length < this.minElements ){\n\t            return this._renderInvalid( speed, callback );\n\t        }\n\t\n\t        this.$el.empty().html( this.templates.main() );\n\t        this._renderHeader( speed );\n\t        this._renderMiddle( speed );\n\t        this._renderFooter( speed );\n\t        this._addPluginComponents();\n\t        this.$( '.collection-name' ).focus();\n\t        this.trigger( 'rendered', this );\n\t        return this;\n\t    },\n\t\n\t\n\t    /** render a simplified interface aimed at telling the user why they can't move forward */\n\t    _renderInvalid : function( speed, callback ){\n\t        //this.debug( '-- _render' );\n\t        this.$el.empty().html( this.templates.invalidInitial({\n\t            problems: this.invalidElements,\n\t            elements: this.workingElements,\n\t        }));\n\t        if( typeof this.oncancel === 'function' ){\n\t            this.$( '.cancel-create.btn' ).show();\n\t        }\n\t        this.trigger( 'rendered', this );\n\t        return this;\n\t    },\n\t\n\t    /** render the header section */\n\t    _renderHeader : function( speed, callback ){\n\t        var $header = this.$( '.header' ).empty().html( this.templates.header() )\n\t            .find( '.help-content' ).prepend( $( this.templates.helpContent() ) );\n\t        //TODO: should only show once despite calling _renderHeader again\n\t        if( this.invalidElements.length ){\n\t            this._invalidElementsAlert();\n\t        }\n\t        return $header;\n\t    },\n\t\n\t    /** render the middle including the elements */\n\t    _renderMiddle : function( speed, callback ){\n\t        var $middle = this.$( '.middle' ).empty().html( this.templates.middle() );\n\t        this._renderList( speed );\n\t        return $middle;\n\t    },\n\t\n\t    /** render the footer, completion controls, and cancel controls */\n\t    _renderFooter : function( speed, callback ){\n\t        var $footer = this.$( '.footer' ).empty().html( this.templates.footer() );\n\t        if( typeof this.oncancel === 'function' ){\n\t            this.$( '.cancel-create.btn' ).show();\n\t        }\n\t        return $footer;\n\t    },\n\t\n\t    /** add any jQuery/bootstrap/custom plugins to elements rendered */\n\t    _addPluginComponents : function(){\n\t        this.$( '.help-content i' ).hoverhighlight( '.collection-creator', this.highlightClr );\n\t    },\n\t\n\t    /** build and show an alert describing any elements that could not be included due to problems */\n\t    _invalidElementsAlert : function(){\n\t        this._showAlert( this.templates.invalidElements({ problems: this.invalidElements }), 'alert-warning' );\n\t    },\n\t\n\t    /** add (or clear if clear is truthy) a validation warning to the DOM element described in what */\n\t    _validationWarning : function( what, clear ){\n\t        var VALIDATION_CLASS = 'validation-warning';\n\t        if( what === 'name' ){\n\t            what = this.$( '.collection-name' ).add( this.$( '.collection-name-prompt' ) );\n\t            this.$( '.collection-name' ).focus().select();\n\t        }\n\t        if( clear ){\n\t            what = what || this.$( '.' + VALIDATION_CLASS );\n\t            what.removeClass( VALIDATION_CLASS );\n\t        } else {\n\t            what.addClass( VALIDATION_CLASS );\n\t        }\n\t    },\n\t\n\t    _disableNameAndCreate : function( disable ){\n\t        disable = !_.isUndefined( disable )? disable : true;\n\t        if( disable ){\n\t            this.$( '.collection-name' ).prop( 'disabled', true );\n\t            this.$( '.create-collection' ).toggleClass( 'disabled', true );\n\t        // } else {\n\t        //     this.$( '.collection-name' ).prop( 'disabled', false );\n\t        //     this.$( '.create-collection' ).removeClass( 'disable' );\n\t        }\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ rendering elements\n\t    /** conv. to the main list display DOM */\n\t    $list : function(){\n\t        return this.$( '.collection-elements' );\n\t    },\n\t\n\t    /** show or hide the clear selected control based on the num of selected elements */\n\t    _renderClearSelected : function(){\n\t        if( _.size( this.selectedIds ) ){\n\t            this.$( '.collection-elements-controls > .clear-selected' ).show();\n\t        } else {\n\t            this.$( '.collection-elements-controls > .clear-selected' ).hide();\n\t        }\n\t    },\n\t\n\t    /** render the elements in order (or a warning if no elements found) */\n\t    _renderList : function( speed, callback ){\n\t        //this.debug( '-- _renderList' );\n\t        var creator = this,\n\t            $tmp = jQuery( '<div/>' ),\n\t            $list = creator.$list();\n\t\n\t        _.each( this.elementViews, function( view ){\n\t            view.destroy();\n\t            creator.removeElementView( view );\n\t        });\n\t\n\t        // if( !this.workingElements.length ){\n\t        //     this._renderNoValidElements();\n\t        //     return;\n\t        // }\n\t\n\t        creator.workingElements.forEach( function( element ){\n\t            var elementView = creator._createElementView( element );\n\t            $tmp.append( elementView.$el );\n\t        });\n\t\n\t        creator._renderClearSelected();\n\t        $list.empty().append( $tmp.children() );\n\t        _.invoke( creator.elementViews, 'render' );\n\t\n\t        if( $list.height() > $list.css( 'max-height' ) ){\n\t            $list.css( 'border-width', '1px 0px 1px 0px' );\n\t        } else {\n\t            $list.css( 'border-width', '0px' );\n\t        }\n\t    },\n\t\n\t    /** create an element view, cache in elementViews, set up listeners, and return */\n\t    _createElementView : function( element ){\n\t        var elementView = new this.elementViewClass({\n\t//TODO: use non-generic class or not all\n\t            // model : COLLECTION.DatasetDCE( element )\n\t            element : element,\n\t            selected: _.has( this.selectedIds, element.id )\n\t        });\n\t        this.elementViews.push( elementView );\n\t        this._listenToElementView( elementView );\n\t        return elementView;\n\t    },\n\t\n\t    /** listen to any element events */\n\t    _listenToElementView : function( view ){\n\t        var creator = this;\n\t        creator.listenTo( view, {\n\t            select : function( data ){\n\t                var element = data.source.element;\n\t                if( data.selected ){\n\t                    creator.selectedIds[ element.id ] = true;\n\t                } else {\n\t                    delete creator.selectedIds[ element.id ];\n\t                }\n\t                creator.trigger( 'elements:select', data );\n\t            },\n\t            discard : function( data ){\n\t                creator.trigger( 'elements:discard', data );\n\t            }\n\t        });\n\t    },\n\t\n\t    /** add a new element view based on the json in element */\n\t    addElementView : function( element ){\n\t//TODO: workingElements is sorted, add element in appropo index\n\t        // add element, sort elements, find element index\n\t        // var view = this._createElementView( element );\n\t        // return view;\n\t    },\n\t\n\t    /** stop listening to view and remove from caches */\n\t    removeElementView : function( view ){\n\t        delete this.selectedIds[ view.element.id ];\n\t        this._renderClearSelected();\n\t\n\t        this.elementViews = _.without( this.elementViews, view );\n\t        this.stopListening( view );\n\t    },\n\t\n\t    /** render a message in the list that no elements remain to create a collection */\n\t    _renderNoElementsLeft : function(){\n\t        this._disableNameAndCreate( true );\n\t        this.$( '.collection-elements' ).append( this.templates.noElementsLeft() );\n\t    },\n\t\n\t    // /** render a message in the list that no valid elements were found to create a collection */\n\t    // _renderNoValidElements : function(){\n\t    //     this._disableNameAndCreate( true );\n\t    //     this.$( '.collection-elements' ).append( this.templates.noValidElements() );\n\t    // },\n\t\n\t    // ------------------------------------------------------------------------ API\n\t    /** convert element into JSON compatible with the collections API */\n\t    _elementToJSON : function( element ){\n\t        // return element.toJSON();\n\t        return element;\n\t    },\n\t\n\t    /** create the collection via the API\n\t     *  @returns {jQuery.xhr Object} the jquery ajax request\n\t     */\n\t    createList : function( name ){\n\t        if( !this.workingElements.length ){\n\t            var message = _l( 'No valid elements for final list' ) + '. ';\n\t            message += '<a class=\"cancel-create\" href=\"javascript:void(0);\">' + _l( 'Cancel' ) + '</a> ';\n\t            message += _l( 'or' );\n\t            message += ' <a class=\"reset\" href=\"javascript:void(0);\">' + _l( 'start over' ) + '</a>.';\n\t            this._showAlert( message );\n\t            return;\n\t        }\n\t\n\t        var creator = this,\n\t            elements = this.workingElements.map( function( element ){\n\t                return creator._elementToJSON( element );\n\t            });\n\t\n\t        creator.blocking = true;\n\t        return creator.creationFn( elements, name )\n\t            .always( function(){\n\t                creator.blocking = false;\n\t            })\n\t            .fail( function( xhr, status, message ){\n\t                creator.trigger( 'error', {\n\t                    xhr     : xhr,\n\t                    status  : status,\n\t                    message : _l( 'An error occurred while creating this collection' )\n\t                });\n\t            })\n\t            .done( function( response, message, xhr ){\n\t                creator.trigger( 'collection:created', response, message, xhr );\n\t                creator.metric( 'collection:created', response );\n\t                if( typeof creator.oncreate === 'function' ){\n\t                    creator.oncreate.call( this, response, message, xhr );\n\t                }\n\t            });\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ events\n\t    /** set up event handlers on self */\n\t    _setUpBehaviors : function(){\n\t        this.on( 'error', this._errorHandler );\n\t\n\t        this.once( 'rendered', function(){\n\t            this.trigger( 'rendered:initial', this );\n\t        });\n\t\n\t        this.on( 'elements:select', function( data ){\n\t            this._renderClearSelected();\n\t        });\n\t\n\t        this.on( 'elements:discard', function( data ){\n\t            var element = data.source.element;\n\t            this.removeElementView( data.source );\n\t\n\t            this.workingElements = _.without( this.workingElements, element );\n\t            if( !this.workingElements.length ){\n\t                this._renderNoElementsLeft();\n\t            }\n\t        });\n\t\n\t        //this.on( 'all', function(){\n\t        //    this.info( arguments );\n\t        //});\n\t        return this;\n\t    },\n\t\n\t    /** handle errors with feedback and details to the user (if available) */\n\t    _errorHandler : function( data ){\n\t        this.error( data );\n\t\n\t        var creator = this;\n\t            content = data.message || _l( 'An error occurred' );\n\t        if( data.xhr ){\n\t            var xhr = data.xhr,\n\t                message = data.message;\n\t            if( xhr.readyState === 0 && xhr.status === 0 ){\n\t                content += ': ' + _l( 'Galaxy could not be reached and may be updating.' ) +\n\t                    _l( ' Try again in a few minutes.' );\n\t            } else if( xhr.responseJSON ){\n\t                content += ':<br /><pre>' + JSON.stringify( xhr.responseJSON ) + '</pre>';\n\t            } else {\n\t                content += ': ' + message;\n\t            }\n\t        }\n\t        creator._showAlert( content, 'alert-danger' );\n\t    },\n\t\n\t    events : {\n\t        // header\n\t        'click .more-help'              : '_clickMoreHelp',\n\t        'click .less-help'              : '_clickLessHelp',\n\t        'click .main-help'              : '_toggleHelp',\n\t        'click .header .alert button'   : '_hideAlert',\n\t\n\t        'click .reset'                  : 'reset',\n\t        'click .clear-selected'         : 'clearSelectedElements',\n\t\n\t        // elements - selection\n\t        'click .collection-elements'    : 'clearSelectedElements',\n\t\n\t        // elements - drop target\n\t        // 'dragenter .collection-elements': '_dragenterElements',\n\t        // 'dragleave .collection-elements': '_dragleaveElements',\n\t        'dragover .collection-elements' : '_dragoverElements',\n\t        'drop .collection-elements'     : '_dropElements',\n\t\n\t        // these bubble up from the elements as custom events\n\t        'collection-element.dragstart .collection-elements' : '_elementDragstart',\n\t        'collection-element.dragend   .collection-elements' : '_elementDragend',\n\t\n\t        // footer\n\t        'change .collection-name'       : '_changeName',\n\t        'keydown .collection-name'      : '_nameCheckForEnter',\n\t        'click .cancel-create'          : function( ev ){\n\t            if( typeof this.oncancel === 'function' ){\n\t                this.oncancel.call( this );\n\t            }\n\t        },\n\t        'click .create-collection'      : '_clickCreate'//,\n\t    },\n\t\n\t    // ........................................................................ header\n\t    /** expand help */\n\t    _clickMoreHelp : function( ev ){\n\t        ev.stopPropagation();\n\t        this.$( '.main-help' ).addClass( 'expanded' );\n\t        this.$( '.more-help' ).hide();\n\t    },\n\t    /** collapse help */\n\t    _clickLessHelp : function( ev ){\n\t        ev.stopPropagation();\n\t        this.$( '.main-help' ).removeClass( 'expanded' );\n\t        this.$( '.more-help' ).show();\n\t    },\n\t    /** toggle help */\n\t    _toggleHelp : function( ev ){\n\t        ev.stopPropagation();\n\t        this.$( '.main-help' ).toggleClass( 'expanded' );\n\t        this.$( '.more-help' ).toggle();\n\t    },\n\t\n\t    /** show an alert on the top of the interface containing message (alertClass is bootstrap's alert-*) */\n\t    _showAlert : function( message, alertClass ){\n\t        alertClass = alertClass || 'alert-danger';\n\t        this.$( '.main-help' ).hide();\n\t        this.$( '.header .alert' )\n\t            .attr( 'class', 'alert alert-dismissable' ).addClass( alertClass ).show()\n\t            .find( '.alert-message' ).html( message );\n\t    },\n\t    /** hide the alerts at the top */\n\t    _hideAlert : function( message ){\n\t        this.$( '.main-help' ).show();\n\t        this.$( '.header .alert' ).hide();\n\t    },\n\t\n\t    // ........................................................................ elements\n\t    /** reset all data to the initial state */\n\t    reset : function(){\n\t        this._instanceSetUp();\n\t        this._elementsSetUp();\n\t        this.render();\n\t    },\n\t\n\t    /** deselect all elements */\n\t    clearSelectedElements : function( ev ){\n\t        this.$( '.collection-elements .collection-element' ).removeClass( 'selected' );\n\t        this.$( '.collection-elements-controls > .clear-selected' ).hide();\n\t    },\n\t\n\t    //_dragenterElements : function( ev ){\n\t    //    //this.debug( '_dragenterElements:', ev );\n\t    //},\n\t//TODO: if selected are dragged out of the list area - remove the placeholder - cuz it won't work anyway\n\t    // _dragleaveElements : function( ev ){\n\t    //    //this.debug( '_dragleaveElements:', ev );\n\t    // },\n\t\n\t    /** track the mouse drag over the list adding a placeholder to show where the drop would occur */\n\t    _dragoverElements : function( ev ){\n\t        //this.debug( '_dragoverElements:', ev );\n\t        ev.preventDefault();\n\t\n\t        var $list = this.$list();\n\t        this._checkForAutoscroll( $list, ev.originalEvent.clientY );\n\t        var $nearest = this._getNearestElement( ev.originalEvent.clientY );\n\t\n\t        //TODO: no need to re-create - move instead\n\t        this.$( '.element-drop-placeholder' ).remove();\n\t        var $placeholder = $( '<div class=\"element-drop-placeholder\"></div>' );\n\t        if( !$nearest.size() ){\n\t            $list.append( $placeholder );\n\t        } else {\n\t            $nearest.before( $placeholder );\n\t        }\n\t    },\n\t\n\t    /** If the mouse is near enough to the list's top or bottom, scroll the list */\n\t    _checkForAutoscroll : function( $element, y ){\n\t        var AUTOSCROLL_SPEED = 2,\n\t            offset = $element.offset(),\n\t            scrollTop = $element.scrollTop(),\n\t            upperDist = y - offset.top,\n\t            lowerDist = ( offset.top + $element.outerHeight() ) - y;\n\t        if( upperDist >= 0 && upperDist < this.autoscrollDist ){\n\t            $element.scrollTop( scrollTop - AUTOSCROLL_SPEED );\n\t        } else if( lowerDist >= 0 && lowerDist < this.autoscrollDist ){\n\t            $element.scrollTop( scrollTop + AUTOSCROLL_SPEED );\n\t        }\n\t    },\n\t\n\t    /** get the nearest element based on the mouse's Y coordinate.\n\t     *  If the y is at the end of the list, return an empty jQuery object.\n\t     */\n\t    _getNearestElement : function( y ){\n\t        var WIGGLE = 4,\n\t            lis = this.$( '.collection-elements li.collection-element' ).toArray();\n\t        for( var i=0; i<lis.length; i++ ){\n\t            var $li = $( lis[i] ),\n\t                top = $li.offset().top,\n\t                halfHeight = Math.floor( $li.outerHeight() / 2 ) + WIGGLE;\n\t            if( top + halfHeight > y && top - halfHeight < y ){\n\t                return $li;\n\t            }\n\t        }\n\t        return $();\n\t    },\n\t\n\t    /** drop (dragged/selected elements) onto the list, re-ordering the internal list */\n\t    _dropElements : function( ev ){\n\t        if( ev.originalEvent ){ ev = ev.originalEvent; }\n\t        // both required for firefox\n\t        ev.preventDefault();\n\t        ev.dataTransfer.dropEffect = 'move';\n\t\n\t        // insert before the nearest element or after the last.\n\t        var $nearest = this._getNearestElement( ev.clientY );\n\t        if( $nearest.size() ){\n\t            this.$dragging.insertBefore( $nearest );\n\t        } else {\n\t            // no nearest before - insert after last element\n\t            this.$dragging.insertAfter( this.$( '.collection-elements .collection-element' ).last() );\n\t        }\n\t        // resync the creator's list based on the new DOM order\n\t        this._syncOrderToDom();\n\t        return false;\n\t    },\n\t\n\t    /** resync the creator's list of elements based on the DOM order */\n\t    _syncOrderToDom : function(){\n\t        var creator = this,\n\t            newElements = [];\n\t        //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n\t        this.$( '.collection-elements .collection-element' ).each( function(){\n\t            var id = $( this ).attr( 'data-element-id' ),\n\t                element = _.findWhere( creator.workingElements, { id: id });\n\t            if( element ){\n\t                newElements.push( element );\n\t            } else {\n\t                console.error( 'missing element: ', id );\n\t            }\n\t        });\n\t        this.workingElements = newElements;\n\t        this._renderList();\n\t    },\n\t\n\t    /** drag communication with element sub-views: dragstart */\n\t    _elementDragstart : function( ev, element ){\n\t        // auto select the element causing the event and move all selected\n\t        element.select( true );\n\t        this.$dragging = this.$( '.collection-elements .collection-element.selected' );\n\t    },\n\t\n\t    /** drag communication with element sub-views: dragend - remove the placeholder */\n\t    _elementDragend : function( ev, element ){\n\t        $( '.element-drop-placeholder' ).remove();\n\t        this.$dragging = null;\n\t    },\n\t\n\t    // ........................................................................ footer\n\t    /** handle a collection name change */\n\t    _changeName : function( ev ){\n\t        this._validationWarning( 'name', !!this._getName() );\n\t    },\n\t\n\t    /** check for enter key press when in the collection name and submit */\n\t    _nameCheckForEnter : function( ev ){\n\t        if( ev.keyCode === 13 && !this.blocking ){\n\t            this._clickCreate();\n\t        }\n\t    },\n\t\n\t    /** get the current collection name */\n\t    _getName : function(){\n\t        return _.escape( this.$( '.collection-name' ).val() );\n\t    },\n\t\n\t    /** attempt to create the current collection */\n\t    _clickCreate : function( ev ){\n\t        var name = this._getName();\n\t        if( !name ){\n\t            this._validationWarning( 'name' );\n\t        } else if( !this.blocking ){\n\t            this.createList( name );\n\t        }\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ templates\n\t    //TODO: move to require text plugin and load these as text\n\t    //TODO: underscore currently unnecc. bc no vars are used\n\t    //TODO: better way of localizing text-nodes in long strings\n\t    /** underscore template fns attached to class */\n\t    templates : {\n\t        /** the skeleton */\n\t        main : _.template([\n\t            '<div class=\"header flex-row no-flex\"></div>',\n\t            '<div class=\"middle flex-row flex-row-container\"></div>',\n\t            '<div class=\"footer flex-row no-flex\"></div>'\n\t        ].join('')),\n\t\n\t        /** the header (not including help text) */\n\t        header : _.template([\n\t            '<div class=\"main-help well clear\">',\n\t                '<a class=\"more-help\" href=\"javascript:void(0);\">', _l( 'More help' ), '</a>',\n\t                '<div class=\"help-content\">',\n\t                    '<a class=\"less-help\" href=\"javascript:void(0);\">', _l( 'Less' ), '</a>',\n\t                '</div>',\n\t            '</div>',\n\t            '<div class=\"alert alert-dismissable\">',\n\t                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" ',\n\t                    'title=\"', _l( 'Close and show more help' ), '\" aria-hidden=\"true\">&times;</button>',\n\t                '<span class=\"alert-message\"></span>',\n\t            '</div>',\n\t        ].join('')),\n\t\n\t        /** the middle: element list */\n\t        middle : _.template([\n\t            '<div class=\"collection-elements-controls\">',\n\t                '<a class=\"reset\" href=\"javascript:void(0);\" ',\n\t                    'title=\"', _l( 'Undo all reordering and discards' ), '\">',\n\t                    _l( 'Start over' ),\n\t                '</a>',\n\t                '<a class=\"clear-selected\" href=\"javascript:void(0);\" ',\n\t                    'title=\"', _l( 'De-select all selected datasets' ), '\">',\n\t                    _l( 'Clear selected' ),\n\t                '</a>',\n\t            '</div>',\n\t            '<div class=\"collection-elements scroll-container flex-row\">',\n\t            '</div>'\n\t        ].join('')),\n\t\n\t        /** creation and cancel controls */\n\t        footer : _.template([\n\t            '<div class=\"attributes clear\">',\n\t                '<div class=\"clear\">',\n\t                    '<input class=\"collection-name form-control pull-right\" ',\n\t                        'placeholder=\"', _l( 'Enter a name for your new collection' ), '\" />',\n\t                    '<div class=\"collection-name-prompt pull-right\">', _l( 'Name' ), ':</div>',\n\t                '</div>',\n\t            '</div>',\n\t\n\t            '<div class=\"actions clear vertically-spaced\">',\n\t                '<div class=\"other-options pull-left\">',\n\t                    '<button class=\"cancel-create btn\" tabindex=\"-1\">', _l( 'Cancel' ), '</button>',\n\t                    '<div class=\"create-other btn-group dropup\">',\n\t                        '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n\t                              _l( 'Create a different kind of collection' ),\n\t                              ' <span class=\"caret\"></span>',\n\t                        '</button>',\n\t                        '<ul class=\"dropdown-menu\" role=\"menu\">',\n\t                              '<li><a href=\"#\">', _l( 'Create a <i>single</i> pair' ), '</a></li>',\n\t                              '<li><a href=\"#\">', _l( 'Create a list of <i>unpaired</i> datasets' ), '</a></li>',\n\t                        '</ul>',\n\t                    '</div>',\n\t                '</div>',\n\t\n\t                '<div class=\"main-options pull-right\">',\n\t                    '<button class=\"create-collection btn btn-primary\">', _l( 'Create list' ), '</button>',\n\t                '</div>',\n\t            '</div>'\n\t        ].join('')),\n\t\n\t        /** help content */\n\t        helpContent : _.template([\n\t            '<p>', _l([\n\t                'Collections of datasets are permanent, ordered lists of datasets that can be passed to tools and ',\n\t                'workflows in order to have analyses done on each member of the entire group. This interface allows ',\n\t                'you to create a collection and re-order the final collection.'\n\t            ].join( '' )), '</p>',\n\t            '<ul>',\n\t                '<li>', _l([\n\t                    'Rename elements in the list by clicking on ',\n\t                    '<i data-target=\".collection-element .name\">the existing name</i>.'\n\t                ].join( '' )), '</li>',\n\t                '<li>', _l([\n\t                    'Discard elements from the final created list by clicking on the ',\n\t                    '<i data-target=\".collection-element .discard\">\"Discard\"</i> button.'\n\t                ].join( '' )), '</li>',\n\t                '<li>', _l([\n\t                    'Reorder the list by clicking and dragging elements. Select multiple elements by clicking on ',\n\t                    '<i data-target=\".collection-element\">them</i> and you can then move those selected by dragging the ',\n\t                    'entire group. Deselect them by clicking them again or by clicking the ',\n\t                    'the <i data-target=\".clear-selected\">\"Clear selected\"</i> link.'\n\t                ].join( '' )), '</li>',\n\t                '<li>', _l([\n\t                    'Click the <i data-target=\".reset\">\"Start over\"</i> link to begin again as if you had just opened ',\n\t                    'the interface.'\n\t                ].join( '' )), '</li>',\n\t                '<li>', _l([\n\t                    'Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'\n\t                ].join( '' )), '</li>',\n\t            '</ul><br />',\n\t            '<p>', _l([\n\t                'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n\t                'click <i data-target=\".create-collection\">\"Create list\"</i>.'\n\t            ].join( '' )), '</p>'\n\t        ].join('')),\n\t\n\t        /** shown in list when all elements are discarded */\n\t        invalidElements : _.template([\n\t            _l( 'The following selections could not be included due to problems:' ),\n\t            '<ul><% _.each( problems, function( problem ){ %>',\n\t                '<li><b><%= problem.element.name %></b>: <%= problem.text %></li>',\n\t            '<% }); %></ul>'\n\t        ].join('')),\n\t\n\t        /** shown in list when all elements are discarded */\n\t        noElementsLeft : _.template([\n\t            '<li class=\"no-elements-left-message\">',\n\t                _l( 'No elements left! ' ),\n\t                _l( 'Would you like to ' ), '<a class=\"reset\" href=\"javascript:void(0)\">', _l( 'start over' ), '</a>?',\n\t            '</li>'\n\t        ].join('')),\n\t\n\t        /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n\t        invalidInitial : _.template([\n\t            '<div class=\"header flex-row no-flex\">',\n\t                '<div class=\"alert alert-warning\" style=\"display: block\">',\n\t                    '<span class=\"alert-message\">',\n\t                        '<% if( _.size( problems ) ){ %>',\n\t                            _l( 'The following selections could not be included due to problems' ), ':',\n\t                            '<ul><% _.each( problems, function( problem ){ %>',\n\t                                '<li><b><%= problem.element.name %></b>: <%= problem.text %></li>',\n\t                            '<% }); %></ul>',\n\t                        '<% } else if( _.size( elements ) < 1 ){ %>',\n\t                            _l( 'No datasets were selected' ), '.',\n\t                        '<% } %>',\n\t                        '<br />',\n\t                        _l( 'At least one element is needed for the collection' ), '. ',\n\t                        _l( 'You may need to ' ),\n\t                        '<a class=\"cancel-create\" href=\"javascript:void(0)\">', _l( 'cancel' ), '</a> ',\n\t                        _l( 'and reselect new elements' ), '.',\n\t                    '</span>',\n\t                '</div>',\n\t            '</div>',\n\t            '<div class=\"footer flex-row no-flex\">',\n\t                '<div class=\"actions clear vertically-spaced\">',\n\t                    '<div class=\"other-options pull-left\">',\n\t                        '<button class=\"cancel-create btn\" tabindex=\"-1\">', _l( 'Cancel' ), '</button>',\n\t                        // _l( 'Create a different kind of collection' ),\n\t                    '</div>',\n\t                '</div>',\n\t            '</div>'\n\t        ].join('')),\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ misc\n\t    /** string rep */\n\t    toString : function(){ return 'ListCollectionCreator'; }\n\t});\n\t\n\t\n\t\n\t//=============================================================================\n\t/** Create a modal and load its body with the given CreatorClass creator type\n\t *  @returns {Deferred} resolved when creator has built a collection.\n\t */\n\tvar collectionCreatorModal = function _collectionCreatorModal( elements, options, CreatorClass ){\n\t\n\t    var deferred = jQuery.Deferred(),\n\t        modal = Galaxy.modal || ( new UI_MODAL.View() ),\n\t        creator;\n\t\n\t    options = _.defaults( options || {}, {\n\t        elements    : elements,\n\t        oncancel    : function(){\n\t            modal.hide();\n\t            deferred.reject( 'cancelled' );\n\t        },\n\t        oncreate    : function( creator, response ){\n\t            modal.hide();\n\t            deferred.resolve( response );\n\t        }\n\t    });\n\t\n\t    creator = new CreatorClass( options );\n\t    modal.show({\n\t        title   : options.title || _l( 'Create a collection' ),\n\t        body    : creator.$el,\n\t        width   : '80%',\n\t        height  : 'min-content',\n\t        closing_events: true\n\t    });\n\t    creator.render();\n\t    window._collectionCreator = creator;\n\t\n\t    //TODO: remove modal header\n\t    return deferred;\n\t};\n\t\n\t/** List collection flavor of collectionCreatorModal. */\n\tvar listCollectionCreatorModal = function _listCollectionCreatorModal( elements, options ){\n\t    options = options || {};\n\t    options.title = _l( 'Create a collection from a list of datasets' );\n\t    return collectionCreatorModal( elements, options, ListCollectionCreator );\n\t};\n\t\n\t\n\t//==============================================================================\n\t/** Use a modal to create a list collection, then add it to the given history contents.\n\t *  @returns {Deferred} resolved when the collection is added to the history.\n\t */\n\tfunction createListCollection( contents ){\n\t    var elements = contents.toJSON(),\n\t        promise = listCollectionCreatorModal( elements, {\n\t            creationFn : function( elements, name ){\n\t                elements = elements.map( function( element ){\n\t                    return {\n\t                        id      : element.id,\n\t                        name    : element.name,\n\t                        //TODO: this allows for list:list even if the filter above does not - reconcile\n\t                        src     : ( element.history_content_type === 'dataset'? 'hda' : 'hdca' )\n\t                    };\n\t                });\n\t                return contents.createHDCA( elements, 'list', name );\n\t            }\n\t        });\n\t    return promise;\n\t}\n\t\n\t//==============================================================================\n\t    return {\n\t        DatasetCollectionElementView: DatasetCollectionElementView,\n\t        ListCollectionCreator       : ListCollectionCreator,\n\t\n\t        collectionCreatorModal      : collectionCreatorModal,\n\t        listCollectionCreatorModal  : listCollectionCreatorModal,\n\t        createListCollection        : createListCollection\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1), __webpack_require__(1)))\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(jQuery, Backbone, $, _) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(27),\n\t    __webpack_require__(9),\n\t    __webpack_require__(13),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( LIST_ITEM, STATES, faIconButton, BASE_MVC, _l ){\n\t/* global Backbone */\n\t\n\tvar logNamespace = 'dataset';\n\t/*==============================================================================\n\tTODO:\n\t    straighten out state rendering and templates used\n\t    inaccessible/STATES.NOT_VIEWABLE is a special case\n\t    simplify button rendering\n\t\n\t==============================================================================*/\n\tvar _super = LIST_ITEM.ListItemView;\n\t/** @class Read only list view for either LDDAs, HDAs, or HDADCEs.\n\t *      Roughly, any DatasetInstance (and not a raw Dataset).\n\t */\n\tvar DatasetListItemView = _super.extend(\n\t/** @lends DatasetListItemView.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    className   : _super.prototype.className + \" dataset\",\n\t    //TODO:?? doesn't exactly match an hda's type_id\n\t    id          : function(){\n\t        return [ 'dataset', this.model.get( 'id' ) ].join( '-' );\n\t    },\n\t\n\t    /** Set up: instance vars, options, and event handlers */\n\t    initialize : function( attributes ){\n\t        if( attributes.logger ){ this.logger = this.model.logger = attributes.logger; }\n\t        this.log( this + '.initialize:', attributes );\n\t        _super.prototype.initialize.call( this, attributes );\n\t\n\t        /** where should pages from links be displayed? (default to new tab/window) */\n\t        this.linkTarget = attributes.linkTarget || '_blank';\n\t    },\n\t\n\t    /** event listeners */\n\t    _setUpListeners : function(){\n\t        _super.prototype._setUpListeners.call( this );\n\t\n\t        // re-rendering on any model changes\n\t        this.model.on( 'change', function( model, options ){\n\t            // if the model moved into the ready state and is expanded without details, fetch those details now\n\t            if( this.model.changedAttributes().state && this.model.inReadyState()\n\t            &&  this.expanded && !this.model.hasDetails() ){\n\t                // will render automatically (due to fetch -> change)\n\t                this.model.fetch();\n\t\n\t            } else {\n\t                this.render();\n\t            }\n\t        }, this );\n\t    },\n\t\n\t    // ......................................................................... expandable\n\t    /** In this override, only get details if in the ready state, get rerunnable if in other states.\n\t     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n\t     */\n\t    _fetchModelDetails : function(){\n\t        var view = this;\n\t        if( view.model.inReadyState() && !view.model.hasDetails() ){\n\t            return view.model.fetch({ silent: true });\n\t        }\n\t        return jQuery.when();\n\t    },\n\t\n\t    // ......................................................................... removal\n\t    /** Remove this view's html from the DOM and remove all event listeners.\n\t     *  @param {Number or String} speed jq effect speed\n\t     *  @param {Function} callback      an optional function called when removal is done (scoped to this view)\n\t     */\n\t    remove : function( speed, callback ){\n\t        var view = this;\n\t        speed = speed || this.fxSpeed;\n\t        this.$el.fadeOut( speed, function(){\n\t            Backbone.View.prototype.remove.call( view );\n\t            if( callback ){ callback.call( view ); }\n\t        });\n\t    },\n\t\n\t    // ......................................................................... rendering\n\t    /* TODO:\n\t        dataset states are the issue primarily making dataset rendering complex\n\t            each state should have it's own way of displaying/set of details\n\t            often with different actions that can be applied\n\t        throw in deleted/purged/visible and things get complicated easily\n\t        I've considered (a couple of times) - creating a view for each state\n\t            - but recreating the view during an update...seems wrong\n\t    */\n\t    /** Render this HDA, set up ui.\n\t     *  @param {Number or String} speed jq fx speed\n\t     *  @returns {Object} this\n\t     */\n\t    render : function( speed ){\n\t        //HACK: hover exit doesn't seem to be called on prev. tooltips when RE-rendering - so: no tooltip hide\n\t        // handle that here by removing previous view's tooltips\n\t        //this.$el.find(\"[title]\").tooltip( \"destroy\" );\n\t        return _super.prototype.render.call( this, speed );\n\t    },\n\t\n\t    /** In this override, add the dataset state as a class for use with state-based CSS */\n\t    _swapNewRender : function( $newRender ){\n\t        _super.prototype._swapNewRender.call( this, $newRender );\n\t        if( this.model.has( 'state' ) ){\n\t            this.$el.addClass( 'state-' + this.model.get( 'state' ) );\n\t        }\n\t        return this.$el;\n\t    },\n\t\n\t    // ................................................................................ titlebar\n\t    /** In this override, add the dataset display button. */\n\t    _renderPrimaryActions : function(){\n\t        // render just the display for read-only\n\t        return [ this._renderDisplayButton() ];\n\t    },\n\t\n\t    /** Render icon-button to display dataset data */\n\t    _renderDisplayButton : function(){\n\t//TODO:?? too complex - possibly move into template\n\t        // don't show display if not viewable or not accessible\n\t        var state = this.model.get( 'state' );\n\t        if( ( state === STATES.NOT_VIEWABLE )\n\t        ||  ( state === STATES.DISCARDED )\n\t        ||  ( !this.model.get( 'accessible' ) ) ){\n\t            return null;\n\t        }\n\t\n\t        var displayBtnData = {\n\t            target      : this.linkTarget,\n\t            classes     : 'display-btn'\n\t        };\n\t\n\t        // show a disabled display if the data's been purged\n\t        if( this.model.get( 'purged' ) ){\n\t            displayBtnData.disabled = true;\n\t            displayBtnData.title = _l( 'Cannot display datasets removed from disk' );\n\t\n\t        // disable if still uploading\n\t        } else if( state === STATES.UPLOAD ){\n\t            displayBtnData.disabled = true;\n\t            displayBtnData.title = _l( 'This dataset must finish uploading before it can be viewed' );\n\t\n\t        // disable if still new\n\t        } else if( state === STATES.NEW ){\n\t            displayBtnData.disabled = true;\n\t            displayBtnData.title = _l( 'This dataset is not yet viewable' );\n\t\n\t        } else {\n\t            displayBtnData.title = _l( 'View data' );\n\t\n\t            // default link for dataset\n\t            displayBtnData.href  = this.model.urls.display;\n\t\n\t            // add frame manager option onclick event\n\t            var self = this;\n\t            displayBtnData.onclick = function( ev ){\n\t                if (Galaxy.frame && Galaxy.frame.active) {\n\t                    // Add dataset to frames.\n\t                    Galaxy.frame.add_dataset(self.model.get('id'));\n\t                    ev.preventDefault();\n\t                }\n\t            };\n\t        }\n\t        displayBtnData.faIcon = 'fa-eye';\n\t        return faIconButton( displayBtnData );\n\t    },\n\t\n\t    // ......................................................................... rendering details\n\t    /** Render the enclosing div of the hda body and, if expanded, the html in the body\n\t     *  @returns {jQuery} rendered DOM\n\t     */\n\t    _renderDetails : function(){\n\t        //TODO: generalize to be allow different details for each state\n\t\n\t        // no access - render nothing but a message\n\t        if( this.model.get( 'state' ) === STATES.NOT_VIEWABLE ){\n\t            return $( this.templates.noAccess( this.model.toJSON(), this ) );\n\t        }\n\t\n\t        var $details = _super.prototype._renderDetails.call( this );\n\t        $details.find( '.actions .left' ).empty().append( this._renderSecondaryActions() );\n\t        $details.find( '.summary' ).html( this._renderSummary() )\n\t            .prepend( this._renderDetailMessages() );\n\t        $details.find( '.display-applications' ).html( this._renderDisplayApplications() );\n\t\n\t//TODO: double tap\n\t        this._setUpBehaviors( $details );\n\t        return $details;\n\t    },\n\t\n\t    /** Defer to the appropo summary rendering fn based on state */\n\t    _renderSummary : function(){\n\t        var json = this.model.toJSON(),\n\t            summaryRenderFn = this.templates.summaries[ json.state ];\n\t        summaryRenderFn = summaryRenderFn || this.templates.summaries.unknown;\n\t        return summaryRenderFn( json, this );\n\t    },\n\t\n\t    /** Render messages to be displayed only when the details are shown */\n\t    _renderDetailMessages : function(){\n\t        var view = this,\n\t            $warnings = $( '<div class=\"detail-messages\"></div>' ),\n\t            json = view.model.toJSON();\n\t//TODO:! unordered (map)\n\t        _.each( view.templates.detailMessages, function( templateFn ){\n\t            $warnings.append( $( templateFn( json, view ) ) );\n\t        });\n\t        return $warnings;\n\t    },\n\t\n\t    /** Render the external display application links */\n\t    _renderDisplayApplications : function(){\n\t        if( this.model.isDeletedOrPurged() ){ return ''; }\n\t        // render both old and new display apps using the same template\n\t        return [\n\t            this.templates.displayApplications( this.model.get( 'display_apps' ), this ),\n\t            this.templates.displayApplications( this.model.get( 'display_types' ), this )\n\t        ].join( '' );\n\t    },\n\t\n\t    // ......................................................................... secondary/details actions\n\t    /** A series of links/buttons for less commonly used actions: re-run, info, etc. */\n\t    _renderSecondaryActions : function(){\n\t        this.debug( '_renderSecondaryActions' );\n\t        switch( this.model.get( 'state' ) ){\n\t            case STATES.NOT_VIEWABLE:\n\t                return [];\n\t            case STATES.OK:\n\t            case STATES.FAILED_METADATA:\n\t            case STATES.ERROR:\n\t                return [ this._renderDownloadButton(), this._renderShowParamsButton() ];\n\t        }\n\t        return [ this._renderShowParamsButton() ];\n\t    },\n\t\n\t    /** Render icon-button to show the input and output (stdout/err) for the job that created this.\n\t     *  @returns {jQuery} rendered DOM\n\t     */\n\t    _renderShowParamsButton : function(){\n\t        // gen. safe to show in all cases\n\t        return faIconButton({\n\t            title       : _l( 'View details' ),\n\t            classes     : 'params-btn',\n\t            href        : this.model.urls.show_params,\n\t            target      : this.linkTarget,\n\t            faIcon      : 'fa-info-circle'\n\t        });\n\t    },\n\t\n\t    /** Render icon-button/popupmenu to download the data (and/or the associated meta files (bai, etc.)) for this.\n\t     *  @returns {jQuery} rendered DOM\n\t     */\n\t    _renderDownloadButton : function(){\n\t//TODO: to (its own) template fn\n\t        // don't show anything if the data's been purged\n\t        if( this.model.get( 'purged' ) || !this.model.hasData() ){ return null; }\n\t\n\t        // return either: a popupmenu with links to download assoc. meta files (if there are meta files)\n\t        //  or a single download icon-button (if there are no meta files)\n\t        if( !_.isEmpty( this.model.get( 'meta_files' ) ) ){\n\t            return this._renderMetaFileDownloadButton();\n\t        }\n\t\n\t        return $([\n\t            '<a class=\"download-btn icon-btn\" href=\"', this.model.urls.download, '\" title=\"' + _l( 'Download' ) + '\">',\n\t                '<span class=\"fa fa-floppy-o\"></span>',\n\t            '</a>'\n\t        ].join( '' ));\n\t    },\n\t\n\t    /** Render the download button which opens a dropdown with links to download assoc. meta files (indeces, etc.) */\n\t    _renderMetaFileDownloadButton : function(){\n\t        var urls = this.model.urls;\n\t        return $([\n\t            '<div class=\"metafile-dropdown dropdown\">',\n\t                '<a class=\"download-btn icon-btn\" href=\"javascript:void(0)\" data-toggle=\"dropdown\"',\n\t                    ' title=\"' + _l( 'Download' ) + '\">',\n\t                    '<span class=\"fa fa-floppy-o\"></span>',\n\t                '</a>',\n\t                '<ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dLabel\">',\n\t                    '<li><a href=\"' + urls.download + '\">', _l( 'Download dataset' ), '</a></li>',\n\t                    _.map( this.model.get( 'meta_files' ), function( meta_file ){\n\t                        return [\n\t                            '<li><a href=\"', urls.meta_download + meta_file.file_type, '\">',\n\t                                _l( 'Download' ), ' ', meta_file.file_type,\n\t                            '</a></li>'\n\t                        ].join( '' );\n\t                    }).join( '\\n' ),\n\t                '</ul>',\n\t            '</div>'\n\t        ].join( '\\n' ));\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    events : _.extend( _.clone( _super.prototype.events ), {\n\t        'click .display-btn'    : function( ev ){ this.trigger( 'display', this, ev ); },\n\t        'click .params-btn'     : function( ev ){ this.trigger( 'params', this, ev ); },\n\t        'click .download-btn'   : function( ev ){ this.trigger( 'download', this, ev ); }\n\t    }),\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'DatasetListItemView(' + modelString + ')';\n\t    }\n\t});\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tDatasetListItemView.prototype.templates = (function(){\n\t//TODO: move to require text! plugin\n\t\n\t    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n\t        failed_metadata : BASE_MVC.wrapTemplate([\n\t            // failed metadata is rendered as a warning on an otherwise ok dataset view\n\t            '<% if( model.state === \"failed_metadata\" ){ %>',\n\t                '<div class=\"warningmessagesmall\">',\n\t                    _l( 'An error occurred setting the metadata for this dataset' ),\n\t                '</div>',\n\t            '<% } %>'\n\t        ]),\n\t        error : BASE_MVC.wrapTemplate([\n\t            // error during index fetch - show error on dataset\n\t            '<% if( model.error ){ %>',\n\t                '<div class=\"errormessagesmall\">',\n\t                    _l( 'There was an error getting the data for this dataset' ), ': <%- model.error %>',\n\t                '</div>',\n\t            '<% } %>'\n\t        ]),\n\t        purged : BASE_MVC.wrapTemplate([\n\t            '<% if( model.purged ){ %>',\n\t                '<div class=\"purged-msg warningmessagesmall\">',\n\t                    _l( 'This dataset has been deleted and removed from disk' ),\n\t                '</div>',\n\t            '<% } %>'\n\t        ]),\n\t        deleted : BASE_MVC.wrapTemplate([\n\t            // deleted not purged\n\t            '<% if( model.deleted && !model.purged ){ %>',\n\t                '<div class=\"deleted-msg warningmessagesmall\">',\n\t                    _l( 'This dataset has been deleted' ),\n\t                '</div>',\n\t            '<% } %>'\n\t        ])\n\t\n\t        //NOTE: hidden warning is only needed for HDAs\n\t    });\n\t\n\t    var detailsTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"details\">',\n\t            '<div class=\"summary\"></div>',\n\t\n\t            '<div class=\"actions clear\">',\n\t                '<div class=\"left\"></div>',\n\t                '<div class=\"right\"></div>',\n\t            '</div>',\n\t\n\t            // do not display tags, annotation, display apps, or peek when deleted\n\t            '<% if( !dataset.deleted && !dataset.purged ){ %>',\n\t                '<div class=\"tags-display\"></div>',\n\t                '<div class=\"annotation-display\"></div>',\n\t\n\t                '<div class=\"display-applications\"></div>',\n\t\n\t                '<% if( dataset.peek ){ %>',\n\t                    '<pre class=\"dataset-peek\"><%= dataset.peek %></pre>',\n\t                '<% } %>',\n\t            '<% } %>',\n\t        '</div>'\n\t    ], 'dataset' );\n\t\n\t    var noAccessTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"details\">',\n\t            '<div class=\"summary\">',\n\t                _l( 'You do not have permission to view this dataset' ),\n\t            '</div>',\n\t        '</div>'\n\t    ], 'dataset' );\n\t\n\t//TODO: still toooooooooooooo complex - rework\n\t    var summaryTemplates = {};\n\t    summaryTemplates[ STATES.OK ] = summaryTemplates[ STATES.FAILED_METADATA ] = BASE_MVC.wrapTemplate([\n\t        '<% if( dataset.misc_blurb ){ %>',\n\t            '<div class=\"blurb\">',\n\t                '<span class=\"value\"><%- dataset.misc_blurb %></span>',\n\t            '</div>',\n\t        '<% } %>',\n\t\n\t        '<% if( dataset.file_ext ){ %>',\n\t            '<div class=\"datatype\">',\n\t                '<label class=\"prompt\">', _l( 'format' ), '</label>',\n\t                '<span class=\"value\"><%- dataset.file_ext %></span>',\n\t            '</div>',\n\t        '<% } %>',\n\t\n\t        '<% if( dataset.metadata_dbkey ){ %>',\n\t            '<div class=\"dbkey\">',\n\t                '<label class=\"prompt\">', _l( 'database' ), '</label>',\n\t                '<span class=\"value\">',\n\t                    '<%- dataset.metadata_dbkey %>',\n\t                '</span>',\n\t            '</div>',\n\t        '<% } %>',\n\t\n\t        '<% if( dataset.misc_info ){ %>',\n\t            '<div class=\"info\">',\n\t                '<span class=\"value\"><%- dataset.misc_info %></span>',\n\t            '</div>',\n\t        '<% } %>'\n\t    ], 'dataset' );\n\t    summaryTemplates[ STATES.NEW ] = BASE_MVC.wrapTemplate([\n\t        '<div>', _l( 'This is a new dataset and not all of its data are available yet' ), '</div>'\n\t    ], 'dataset' );\n\t    summaryTemplates[ STATES.NOT_VIEWABLE ] = BASE_MVC.wrapTemplate([\n\t        '<div>', _l( 'You do not have permission to view this dataset' ), '</div>'\n\t    ], 'dataset' );\n\t    summaryTemplates[ STATES.DISCARDED ] = BASE_MVC.wrapTemplate([\n\t        '<div>', _l( 'The job creating this dataset was cancelled before completion' ), '</div>'\n\t    ], 'dataset' );\n\t    summaryTemplates[ STATES.QUEUED ] = BASE_MVC.wrapTemplate([\n\t        '<div>', _l( 'This job is waiting to run' ), '</div>'\n\t    ], 'dataset' );\n\t    summaryTemplates[ STATES.RUNNING ] = BASE_MVC.wrapTemplate([\n\t        '<div>', _l( 'This job is currently running' ), '</div>'\n\t    ], 'dataset' );\n\t    summaryTemplates[ STATES.UPLOAD ] = BASE_MVC.wrapTemplate([\n\t        '<div>', _l( 'This dataset is currently uploading' ), '</div>'\n\t    ], 'dataset' );\n\t    summaryTemplates[ STATES.SETTING_METADATA ] = BASE_MVC.wrapTemplate([\n\t        '<div>', _l( 'Metadata is being auto-detected' ), '</div>'\n\t    ], 'dataset' );\n\t    summaryTemplates[ STATES.PAUSED ] = BASE_MVC.wrapTemplate([\n\t        '<div>', _l( 'This job is paused. Use the \"Resume Paused Jobs\" in the history menu to resume' ), '</div>'\n\t    ], 'dataset' );\n\t    summaryTemplates[ STATES.ERROR ] = BASE_MVC.wrapTemplate([\n\t        '<% if( !dataset.purged ){ %>',\n\t            '<div><%- dataset.misc_blurb %></div>',\n\t        '<% } %>',\n\t        '<span class=\"help-text\">', _l( 'An error occurred with this dataset' ), ':</span>',\n\t        '<div class=\"job-error-text\"><%- dataset.misc_info %></div>'\n\t    ], 'dataset' );\n\t    summaryTemplates[ STATES.EMPTY ] = BASE_MVC.wrapTemplate([\n\t        '<div>', _l( 'No data' ), ': <i><%- dataset.misc_blurb %></i></div>'\n\t    ], 'dataset' );\n\t    summaryTemplates.unknown = BASE_MVC.wrapTemplate([\n\t        '<div>Error: unknown dataset state: \"<%- dataset.state %>\"</div>'\n\t    ], 'dataset' );\n\t\n\t    // messages to be displayed only within the details section ('below the fold')\n\t    var detailMessageTemplates = {\n\t        resubmitted : BASE_MVC.wrapTemplate([\n\t            // deleted not purged\n\t            '<% if( model.resubmitted ){ %>',\n\t                '<div class=\"resubmitted-msg infomessagesmall\">',\n\t                    _l( 'The job creating this dataset has been resubmitted' ),\n\t                '</div>',\n\t            '<% } %>'\n\t        ])\n\t    };\n\t\n\t    // this is applied to both old and new style display apps\n\t    var displayApplicationsTemplate = BASE_MVC.wrapTemplate([\n\t        '<% _.each( apps, function( app ){ %>',\n\t            '<div class=\"display-application\">',\n\t                '<span class=\"display-application-location\"><%- app.label %></span> ',\n\t                '<span class=\"display-application-links\">',\n\t                    '<% _.each( app.links, function( link ){ %>',\n\t                        '<a target=\"<%= link.target %>\" href=\"<%= link.href %>\">',\n\t                            '<% print( _l( link.text ) ); %>',\n\t                        '</a> ',\n\t                    '<% }); %>',\n\t                '</span>',\n\t            '</div>',\n\t        '<% }); %>'\n\t    ], 'apps' );\n\t\n\t    return _.extend( {}, _super.prototype.templates, {\n\t        warnings    : warnings,\n\t        details     : detailsTemplate,\n\t        noAccess    : noAccessTemplate,\n\t        summaries   : summaryTemplates,\n\t        detailMessages      : detailMessageTemplates,\n\t        displayApplications : displayApplicationsTemplate\n\t    });\n\t}());\n\t\n\t\n\t// ============================================================================\n\t    return {\n\t        DatasetListItemView : DatasetListItemView\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(21),\n\t    __webpack_require__(25),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( DC_MODEL, HISTORY_CONTENT, _l ){\n\t/*==============================================================================\n\t\n\tModels for DatasetCollections contained within a history.\n\t\n\tTODO:\n\t    these might be compactable to one class if some duplication with\n\t    collection-model is used.\n\t\n\t==============================================================================*/\n\tvar hcontentMixin = HISTORY_CONTENT.HistoryContentMixin,\n\t    ListDC = DC_MODEL.ListDatasetCollection,\n\t    PairDC = DC_MODEL.PairDatasetCollection,\n\t    ListPairedDC = DC_MODEL.ListPairedDatasetCollection;\n\t\n\t//==============================================================================\n\t/** Override to post to contents route w/o id. */\n\tfunction buildHDCASave( _super ){\n\t    return function _save( attributes, options ){\n\t        if( this.isNew() ){\n\t            options = options || {};\n\t            options.url = this.urlRoot + this.get( 'history_id' ) + '/contents';\n\t            attributes = attributes || {};\n\t            attributes.type = 'dataset_collection';\n\t        }\n\t        return _super.call( this, attributes, options );\n\t    };\n\t}\n\t\n\t\n\t//==============================================================================\n\t/** @class Backbone model for List Dataset Collection within a History.\n\t */\n\tvar HistoryListDatasetCollection = ListDC.extend( hcontentMixin ).extend(\n\t/** @lends HistoryListDatasetCollection.prototype */{\n\t\n\t    defaults : _.extend( _.clone( ListDC.prototype.defaults ), {\n\t        history_content_type: 'dataset_collection',\n\t        collection_type     : 'list',\n\t        model_class         : 'HistoryDatasetCollectionAssociation'\n\t    }),\n\t\n\t    initialize : function( model, options ){\n\t        ListDC.prototype.initialize.call( this, model, options );\n\t        hcontentMixin.initialize.call( this, model, options );\n\t    },\n\t\n\t    /** Override to post to contents route w/o id. */\n\t    save : buildHDCASave( ListDC.prototype.save ),\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'HistoryListDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t/** @class Backbone model for Pair Dataset Collection within a History.\n\t *  @constructs\n\t */\n\tvar HistoryPairDatasetCollection = PairDC.extend( hcontentMixin ).extend(\n\t/** @lends HistoryPairDatasetCollection.prototype */{\n\t\n\t    defaults : _.extend( _.clone( PairDC.prototype.defaults ), {\n\t        history_content_type: 'dataset_collection',\n\t        collection_type     : 'paired',\n\t        model_class         : 'HistoryDatasetCollectionAssociation'\n\t    }),\n\t\n\t    initialize : function( model, options ){\n\t        PairDC.prototype.initialize.call( this, model, options );\n\t        hcontentMixin.initialize.call( this, model, options );\n\t    },\n\t\n\t    /** Override to post to contents route w/o id. */\n\t    save : buildHDCASave( PairDC.prototype.save ),\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'HistoryPairDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t/** @class Backbone model for List of Pairs Dataset Collection within a History.\n\t *  @constructs\n\t */\n\tvar HistoryListPairedDatasetCollection = ListPairedDC.extend( hcontentMixin ).extend(\n\t/** @lends HistoryListPairedDatasetCollection.prototype */{\n\t\n\t    defaults : _.extend( _.clone( ListPairedDC.prototype.defaults ), {\n\t        history_content_type: 'dataset_collection',\n\t        collection_type     : 'list:paired',\n\t        model_class         : 'HistoryDatasetCollectionAssociation'\n\t    }),\n\t\n\t    initialize : function( model, options ){\n\t        ListPairedDC.prototype.initialize.call( this, model, options );\n\t        hcontentMixin.initialize.call( this, model, options );\n\t    },\n\t\n\t    /** Override to post to contents route w/o id. */\n\t    save : buildHDCASave( ListPairedDC.prototype.save ),\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'HistoryListPairedDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        HistoryListDatasetCollection        : HistoryListDatasetCollection,\n\t        HistoryPairDatasetCollection        : HistoryPairDatasetCollection,\n\t        HistoryListPairedDatasetCollection  : HistoryListPairedDatasetCollection\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, jQuery) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(9),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( STATES, BASE_MVC, _l ){\n\t\n\tvar logNamespace = 'history';\n\t//==============================================================================\n\t/** How the type_id attribute is built for the history's mixed contents collection */\n\tvar typeIdStr = function _typeIdStr( type, id ){\n\t    return [ type, id ].join( '-' );\n\t};\n\t\n\t//==============================================================================\n\t/** @class Mixin for HistoryContents content (HDAs, HDCAs).\n\t */\n\tvar HistoryContentMixin = {\n\t//TODO:?? into true Backbone.Model?\n\t\n\t    /** default attributes for a model */\n\t    defaults : {\n\t        /** parent (containing) history */\n\t        history_id          : null,\n\t        /** some content_type (HistoryContents can contain mixed model classes) */\n\t        history_content_type: null,\n\t        /** indicating when/what order the content was generated in the context of the history */\n\t        hid                 : null,\n\t        /** whether the user wants the content shown (visible) */\n\t        visible             : true\n\t    },\n\t\n\t    // ........................................................................ mixed content element\n\t//TODO: there's got to be a way to move this into HistoryContents - if we can do that, this class might not be needed\n\t    // In order to be part of a MIXED bbone collection, we can't rely on the id\n\t    //  (which may collide btwn models of different classes)\n\t    // Build a new id (type_id) that prefixes the history_content_type so the bbone collection can differentiate\n\t    idAttribute : 'type_id',\n\t\n\t    /** override constructor to build type_id and insert into original attributes */\n\t    constructor : function( attrs, options ){\n\t        attrs.type_id = typeIdStr( attrs.history_content_type, attrs.id );\n\t        this.debug( 'HistoryContentMixin.constructor:', attrs.type_id );\n\t        Backbone.Model.apply( this, arguments );\n\t    },\n\t\n\t    /** object level fn for building the type_id string */\n\t    _typeIdStr : function(){\n\t        return typeIdStr( this.get( 'history_content_type' ), this.get( 'id' ) );\n\t    },\n\t\n\t    /** add listener to re-create type_id when the id changes */\n\t    initialize : function( attrs, options ){\n\t        this.on( 'change:id', this._createTypeId );\n\t    },\n\t\n\t    /** set the type_id in the model attributes */\n\t    _createTypeId : function(){\n\t        this.set( 'type_id', this._typeIdStr() );\n\t    },\n\t\n\t    /** override because backbone tests boolean( idAttribute ), but it's not an empty string even for new models\n\t     *  due to our use of type_id.\n\t     */\n\t    isNew : function(){\n\t        return !this.get( 'id' );\n\t    },\n\t\n\t    // ........................................................................ common queries\n\t    /** the more common alias of visible */\n\t    hidden : function(){\n\t        return !this.get( 'visible' );\n\t    },\n\t\n\t    /** based on show_deleted, show_hidden (gen. from the container control),\n\t     *      would this ds show in the list of ds's?\n\t     *  @param {Boolean} show_deleted are we showing deleted hdas?\n\t     *  @param {Boolean} show_hidden are we showing hidden hdas?\n\t     */\n\t    isVisible : function( show_deleted, show_hidden ){\n\t//TODO:?? Another unfortunate name collision\n\t        var isVisible = true;\n\t        if( ( !show_deleted )\n\t        &&  ( this.get( 'deleted' ) || this.get( 'purged' ) ) ){\n\t            isVisible = false;\n\t        }\n\t        if( ( !show_hidden )\n\t        &&  ( !this.get( 'visible' ) ) ){\n\t            isVisible = false;\n\t        }\n\t        return isVisible;\n\t    },\n\t\n\t    // ........................................................................ ajax\n\t//TODO: global\n\t//TODO: these are probably better done on the leaf classes\n\t    /** history content goes through the 'api/histories' API */\n\t    urlRoot: ( window.Galaxy? Galaxy.options.root : '/' ) + 'api/histories/',\n\t\n\t    /** full url spec. for this content */\n\t    url : function(){\n\t        var url = this.urlRoot + this.get( 'history_id' ) + '/contents/'\n\t             + this.get('history_content_type') + 's/' + this.get( 'id' );\n\t        return url;\n\t    },\n\t\n\t    /** save this content as not visible */\n\t    hide : function( options ){\n\t        if( !this.get( 'visible' ) ){ return jQuery.when(); }\n\t        return this.save( { visible: false }, options );\n\t    },\n\t    /** save this content as visible */\n\t    unhide : function( options ){\n\t        if( this.get( 'visible' ) ){ return jQuery.when(); }\n\t        return this.save( { visible: true }, options );\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var nameAndId = this.get( 'id' ) || '';\n\t        if( this.get( 'name' ) ){\n\t            nameAndId = this.get( 'hid' ) + ' :\"' + this.get( 'name' ) + '\",' + nameAndId;\n\t        }\n\t        return 'HistoryContent(' + nameAndId + ')';\n\t    }\n\t};\n\t\n\t\n\t//==============================================================================\n\t//TODO: needed?\n\t/** @class (Concrete/non-mixin) base model for content items.\n\t */\n\tvar HistoryContent = Backbone.Model\n\t        .extend( BASE_MVC.LoggableMixin )\n\t        .extend( HistoryContentMixin )\n\t        .extend({ _logNamespace : logNamespace });\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        typeIdStr           : typeIdStr,\n\t        HistoryContentMixin : HistoryContentMixin,\n\t        HistoryContent      : HistoryContent\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, jQuery) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(25),\n\t    __webpack_require__(47),\n\t    __webpack_require__(24),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( HISTORY_CONTENT, HDA_MODEL, HDCA_MODEL, BASE_MVC, _l ){\n\t\n\tvar logNamespace = 'history';\n\t//==============================================================================\n\t/** @class Backbone collection for history content.\n\t *      NOTE: history content seems like a dataset collection, but differs in that it is mixed:\n\t *          each element can be either an HDA (dataset) or a DatasetCollection and co-exist on\n\t *          the same level.\n\t *      Dataset collections on the other hand are not mixed and (so far) can only contain either\n\t *          HDAs or child dataset collections on one level.\n\t *      This is why this does not inherit from any of the DatasetCollections (currently).\n\t */\n\tvar HistoryContents = Backbone.Collection\n\t        .extend( BASE_MVC.LoggableMixin )\n\t        .extend(/** @lends HistoryContents.prototype */{\n\t//TODO:?? may want to inherit from some MixedModelCollection\n\t//TODO:?? also consider inheriting from a 'DatasetList'\n\t//TODO: can we decorate the mixed models using the model fn below (instead of having them build their own type_id)?\n\t\n\t    _logNamespace : logNamespace,\n\t\n\t    /** since history content is a mix, override model fn into a factory, creating based on history_content_type */\n\t    model : function( attrs, options ) {\n\t//TODO: can we move the type_id stuff here?\n\t        //attrs.type_id = typeIdStr( attrs );\n\t\n\t        if( attrs.history_content_type === \"dataset\" ) {\n\t            return new HDA_MODEL.HistoryDatasetAssociation( attrs, options );\n\t\n\t        } else if( attrs.history_content_type === \"dataset_collection\" ) {\n\t            switch( attrs.collection_type ){\n\t                case 'list':\n\t                    return new HDCA_MODEL.HistoryListDatasetCollection( attrs, options );\n\t                case 'paired':\n\t                    return new HDCA_MODEL.HistoryPairDatasetCollection( attrs, options );\n\t                case 'list:paired':\n\t                    return new HDCA_MODEL.HistoryListPairedDatasetCollection( attrs, options );\n\t            }\n\t            // This is a hack inside a hack:\n\t            // Raise a plain object with validationError to fake a model.validationError\n\t            // (since we don't have a model to use validate with)\n\t            // (the outer hack being the mixed content/model function in this collection)\n\t            return { validationError : 'Unknown collection_type: ' + attrs.history_content_type };\n\t        }\n\t        return { validationError : 'Unknown history_content_type: ' + attrs.history_content_type };\n\t    },\n\t\n\t    /** Set up.\n\t     *  @see Backbone.Collection#initialize\n\t     */\n\t    initialize : function( models, options ){\n\t        options = options || {};\n\t//TODO: could probably use the contents.history_id instead\n\t        this.historyId = options.historyId;\n\t        //this._setUpListeners();\n\t\n\t        // backbonejs uses collection.model.prototype.idAttribute to determine if a model is *already* in a collection\n\t        //  and either merged or replaced. In this case, our 'model' is a function so we need to add idAttribute\n\t        //  manually here - if we don't, contents will not merge but be replaced/swapped.\n\t        this.model.prototype.idAttribute = 'type_id';\n\t\n\t        this.on( 'all', function(){\n\t            this.debug( this + '.event:', arguments );\n\t        });\n\t    },\n\t\n\t    /** root api url */\n\t    urlRoot : galaxy_config.root + 'api/histories',\n\t    /** complete api url */\n\t    url : function(){\n\t        return this.urlRoot + '/' + this.historyId + '/contents';\n\t    },\n\t\n\t    // ........................................................................ common queries\n\t    /** Get the ids of every item in this collection\n\t     *  @returns array of encoded ids\n\t     */\n\t    ids : function(){\n\t//TODO: is this still useful since type_id\n\t        return this.map( function( item ){ return item.get('id'); });\n\t    },\n\t\n\t    /** Get contents that are not ready\n\t     *  @returns array of content models\n\t     */\n\t    notReady : function(){\n\t        return this.filter( function( content ){\n\t            return !content.inReadyState();\n\t        });\n\t    },\n\t\n\t    /** Get the id of every model in this collection not in a 'ready' state (running).\n\t     *  @returns an array of model ids\n\t     *  @see HistoryDatasetAssociation#inReadyState\n\t     */\n\t    running : function(){\n\t        var idList = [];\n\t        this.each( function( item ){\n\t            var isRunning = !item.inReadyState();\n\t            if( isRunning ){\n\t//TODO: is this still correct since type_id\n\t                idList.push( item.get( 'id' ) );\n\t            }\n\t        });\n\t        return idList;\n\t    },\n\t\n\t    /** Get the model with the given hid\n\t     *  @param {Int} hid the hid to search for\n\t     *  @returns {HistoryDatasetAssociation} the model with the given hid or undefined if not found\n\t     */\n\t    getByHid : function( hid ){\n\t        return _.first( this.filter( function( content ){ return content.get( 'hid' ) === hid; }) );\n\t    },\n\t\n\t    //TODO:?? this may belong in the containing view\n\t    /** Get every 'shown' model in this collection based on show_deleted/hidden\n\t     *  @param {Boolean} show_deleted are we showing deleted content?\n\t     *  @param {Boolean} show_hidden are we showing hidden content?\n\t     *  @returns array of content models\n\t     *  @see HistoryDatasetAssociation#isVisible\n\t     */\n\t    getVisible : function( show_deleted, show_hidden, filters ){\n\t        filters = filters || [];\n\t        //this.debug( 'filters:', filters );\n\t        // always filter by show deleted/hidden first\n\t        this.debug( 'checking isVisible' );\n\t        var filteredHdas = new HistoryContents( this.filter( function( item ){\n\t            return item.isVisible( show_deleted, show_hidden );\n\t        }));\n\t\n\t        _.each( filters, function( filterFn ){\n\t            if( !_.isFunction( filterFn ) ){ return; }\n\t            filteredHdas = new HistoryContents( filteredHdas.filter( filterFn ) );\n\t        });\n\t        return filteredHdas;\n\t    },\n\t\n\t    /** return a new contents collection of only hidden items */\n\t    hidden : function(){\n\t        function filterFn( c ){ return c.hidden(); }\n\t        return new HistoryContents( this.filter( filterFn ) );\n\t    },\n\t\n\t    /** return a new contents collection of only hidden items */\n\t    deleted : function(){\n\t        function filterFn( c ){ return c.get( 'deleted' ); }\n\t        return new HistoryContents( this.filter( filterFn ) );\n\t    },\n\t\n\t    /** return true if any contents don't have details */\n\t    haveDetails : function(){\n\t        return this.all( function( content ){ return content.hasDetails(); });\n\t    },\n\t\n\t    // ........................................................................ ajax\n\t    /** fetch detailed model data for all contents in this collection */\n\t    fetchAllDetails : function( options ){\n\t        options = options || {};\n\t        var detailsFlag = { details: 'all' };\n\t        options.data = ( options.data )?( _.extend( options.data, detailsFlag ) ):( detailsFlag );\n\t        return this.fetch( options );\n\t    },\n\t\n\t    /** using a queue, perform ajaxFn on each of the models in this collection */\n\t    ajaxQueue : function( ajaxFn, options ){\n\t        var deferred = jQuery.Deferred(),\n\t            startingLength = this.length,\n\t            responses = [];\n\t\n\t        if( !startingLength ){\n\t            deferred.resolve([]);\n\t            return deferred;\n\t        }\n\t\n\t        // use reverse order (stylistic choice)\n\t        var ajaxFns = this.chain().reverse().map( function( content, i ){\n\t            return function(){\n\t                var xhr = ajaxFn.call( content, options );\n\t                // if successful, notify using the deferred to allow tracking progress\n\t                xhr.done( function( response ){\n\t                    deferred.notify({ curr: i, total: startingLength, response: response, model: content });\n\t                });\n\t                // (regardless of previous error or success) if not last ajax call, shift and call the next\n\t                //  if last fn, resolve deferred\n\t                xhr.always( function( response ){\n\t                    responses.push( response );\n\t                    if( ajaxFns.length ){\n\t                        ajaxFns.shift()();\n\t                    } else {\n\t                        deferred.resolve( responses );\n\t                    }\n\t                });\n\t            };\n\t        }).value();\n\t        // start the queue\n\t        ajaxFns.shift()();\n\t\n\t        return deferred;\n\t    },\n\t\n\t    isCopyable : function( contentsJSON ){\n\t        var copyableModelClasses = [\n\t            'HistoryDatasetAssociation',\n\t            'HistoryDatasetCollectionAssociation'\n\t        ];\n\t        return ( ( _.isObject( contentsJSON ) && contentsJSON.id )\n\t              && ( _.contains( copyableModelClasses, contentsJSON.model_class ) ) );\n\t    },\n\t\n\t    /** copy an existing, accessible hda into this collection */\n\t    copy : function( json ){\n\t        var id, type, contentType;\n\t        if( _.isString( json ) ){\n\t            id = json;\n\t            contentType = 'hda';\n\t            type = 'dataset';\n\t        } else {\n\t            id = json.id;\n\t            contentType = ({\n\t                'HistoryDatasetAssociation' : 'hda',\n\t                'LibraryDatasetDatasetAssociation' : 'ldda',\n\t                'HistoryDatasetCollectionAssociation' : 'hdca'\n\t            })[ json.model_class ] || 'hda';\n\t            type = ( contentType === 'hdca'? 'dataset_collection' : 'dataset' );\n\t        }\n\t        var collection = this,\n\t            xhr = jQuery.post( this.url(), {\n\t                content : id,\n\t                source  : contentType,\n\t                type    : type\n\t            })\n\t            .done( function( response ){\n\t                collection.add([ response ]);\n\t            })\n\t            .fail( function( error, status, message ){\n\t                collection.trigger( 'error', collection, xhr, {},\n\t                    'Error copying contents', { type: type, id: id, source: contentType });\n\t            });\n\t        return xhr;\n\t    },\n\t\n\t    // ........................................................................ sorting/filtering\n\t    /** return a new collection of contents whose attributes contain the substring matchesWhat */\n\t    matches : function( matchesWhat ){\n\t        return this.filter( function( content ){\n\t            return content.matches( matchesWhat );\n\t        });\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    /** override to ensure type id is set */\n\t    set : function( models, options ){\n\t        models = _.isArray( models )? models : [ models ];\n\t        _.each( models, function( model ){\n\t            if( !model.type_id || !model.get || !model.get( 'type_id' ) ){\n\t                model.type_id = HISTORY_CONTENT.typeIdStr( model.history_content_type, model.id );\n\t            }\n\t        });\n\t        Backbone.Collection.prototype.set.call( this, models, options );\n\t    },\n\t\n\t    /** */\n\t    createHDCA : function( elementIdentifiers, collectionType, name, options ){\n\t        //precondition: elementIdentifiers is an array of plain js objects\n\t        //  in the proper form to create the collectionType\n\t        var contents = this,\n\t            typeToModel = {\n\t                list    : HDCA_MODEL.HistoryListDatasetCollection,\n\t                paired  : HDCA_MODEL.HistoryPairDatasetCollection\n\t            },\n\t            hdca = new (typeToModel[ collectionType ])({\n\t                history_id          : this.historyId,\n\t                name                : name,\n\t                // should probably be able to just send in a bunch of json here and restruct per class\n\t                element_identifiers : elementIdentifiers\n\t            });\n\t        // do I even need to use new above, can I just pass the attrs here\n\t        return hdca.save()\n\t            .done( function( response ){\n\t                contents.add( hdca );\n\t            })\n\t            .fail( function( xhr, status, message ){\n\t                contents.trigger( 'error', xhr, status, message );\n\t            });\n\t    },\n\t\n\t\n\t    /** In this override, copy the historyId to the clone */\n\t    clone : function(){\n\t        var clone = Backbone.Collection.prototype.clone.call( this );\n\t        clone.historyId = this.historyId;\n\t        return clone;\n\t    },\n\t\n\t    /** debugging */\n\t    print : function(){\n\t        var contents = this;\n\t        contents.each( function( c ){\n\t            contents.debug( c );\n\t            if( c.elements ){\n\t                contents.debug( '\\t elements:', c.elements );\n\t            }\n\t        });\n\t    },\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'HistoryContents(', [ this.historyId, this.length ].join(), ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        HistoryContents : HistoryContents\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _, jQuery) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( BASE_MVC, _l ){\n\t\n\tvar logNamespace = 'list';\n\t//==============================================================================\n\t/** A view which, when first rendered, shows only summary data/attributes, but\n\t *      can be expanded to show further details (and optionally fetch those\n\t *      details from the server).\n\t */\n\tvar ExpandableView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n\t    _logNamespace : logNamespace,\n\t\n\t//TODO: Although the reasoning behind them is different, this shares a lot with HiddenUntilActivated above: combine them\n\t    //PRECONDITION: model must have method hasDetails\n\t    //PRECONDITION: subclasses must have templates.el and templates.details\n\t\n\t    initialize : function( attributes ){\n\t        /** are the details of this view expanded/shown or not? */\n\t        this.expanded   = attributes.expanded || false;\n\t        this.log( '\\t expanded:', this.expanded );\n\t        this.fxSpeed = attributes.fxSpeed !== undefined? attributes.fxSpeed : this.fxSpeed;\n\t    },\n\t\n\t    // ........................................................................ render main\n\t    /** jq fx speed */\n\t    fxSpeed : 'fast',\n\t\n\t    /** Render this content, set up ui.\n\t     *  @param {Number or String} speed   the speed of the render\n\t     */\n\t    render : function( speed ){\n\t        var $newRender = this._buildNewRender();\n\t        this._setUpBehaviors( $newRender );\n\t        this._queueNewRender( $newRender, speed );\n\t        return this;\n\t    },\n\t\n\t    /** Build a temp div containing the new children for the view's $el.\n\t     *      If the view is already expanded, build the details as well.\n\t     */\n\t    _buildNewRender : function(){\n\t        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n\t        var $newRender = $( this.templates.el( this.model.toJSON(), this ) );\n\t        if( this.expanded ){\n\t            this.$details( $newRender ).replaceWith( this._renderDetails().show() );\n\t        }\n\t        return $newRender;\n\t    },\n\t\n\t    /** Fade out the old el, swap in the new contents, then fade in.\n\t     *  @param {Number or String} speed   jq speed to use for rendering effects\n\t     *  @fires rendered when rendered\n\t     */\n\t    _queueNewRender : function( $newRender, speed ) {\n\t        speed = ( speed === undefined )?( this.fxSpeed ):( speed );\n\t        var view = this;\n\t\n\t        $( view ).queue( 'fx', [\n\t            function( next ){ this.$el.fadeOut( speed, next ); },\n\t            function( next ){\n\t                view._swapNewRender( $newRender );\n\t                next();\n\t            },\n\t            function( next ){ this.$el.fadeIn( speed, next ); },\n\t            function( next ){\n\t                this.trigger( 'rendered', view );\n\t                next();\n\t            }\n\t        ]);\n\t    },\n\t\n\t    /** empty out the current el, move the $newRender's children in */\n\t    _swapNewRender : function( $newRender ){\n\t        return this.$el.empty()\n\t            .attr( 'class', _.isFunction( this.className )? this.className(): this.className )\n\t            .append( $newRender.children() );\n\t    },\n\t\n\t    /** set up js behaviors, event handlers for elements within the given container\n\t     *  @param {jQuery} $container jq object that contains the elements to process (defaults to this.$el)\n\t     */\n\t    _setUpBehaviors : function( $where ){\n\t        $where = $where || this.$el;\n\t        // set up canned behavior on children (bootstrap, popupmenus, editable_text, etc.)\n\t        //make_popup_menus( $where );\n\t        $where.find( '[title]' ).tooltip({ placement : 'bottom' });\n\t    },\n\t\n\t    // ......................................................................... details\n\t    /** shortcut to details DOM (as jQ) */\n\t    $details : function( $where ){\n\t        $where = $where || this.$el;\n\t        return $where.find( '> .details' );\n\t    },\n\t\n\t    /** build the DOM for the details and set up behaviors on it */\n\t    _renderDetails : function(){\n\t        var $newDetails = $( this.templates.details( this.model.toJSON(), this ) );\n\t        this._setUpBehaviors( $newDetails );\n\t        return $newDetails;\n\t    },\n\t\n\t    // ......................................................................... expansion/details\n\t    /** Show or hide the details\n\t     *  @param {Boolean} expand if true, expand; if false, collapse\n\t     */\n\t    toggleExpanded : function( expand ){\n\t        expand = ( expand === undefined )?( !this.expanded ):( expand );\n\t        if( expand ){\n\t            this.expand();\n\t        } else {\n\t            this.collapse();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /** Render and show the full, detailed body of this view including extra data and controls.\n\t     *      note: if the model does not have detailed data, fetch that data before showing the body\n\t     *  @fires expanded when a body has been expanded\n\t     */\n\t    expand : function(){\n\t        var view = this;\n\t        return view._fetchModelDetails().always( function(){\n\t                view._expand();\n\t            });\n\t    },\n\t\n\t    /** Check for model details and, if none, fetch them.\n\t     *  @returns {jQuery.promise} the model.fetch.xhr if details are being fetched, an empty promise if not\n\t     */\n\t    _fetchModelDetails : function(){\n\t        if( !this.model.hasDetails() ){\n\t            return this.model.fetch();\n\t        }\n\t        return jQuery.when();\n\t    },\n\t\n\t    /** Inner fn called when expand (public) has fetched the details */\n\t    _expand : function(){\n\t        var view = this,\n\t            $newDetails = view._renderDetails();\n\t        view.$details().replaceWith( $newDetails );\n\t        // needs to be set after the above or the slide will not show\n\t        view.expanded = true;\n\t        view.$details().slideDown({\n\t            duration : view.fxSpeed,\n\t            step: function(){\n\t                view.trigger( 'expanding', view );\n\t            },\n\t            complete: function(){\n\t                view.trigger( 'expanded', view );\n\t            }\n\t        });\n\t    },\n\t\n\t    /** Hide the body/details of an HDA.\n\t     *  @fires collapsed when a body has been collapsed\n\t     */\n\t    collapse : function(){\n\t        this.debug( this + '(ExpandableView).collapse' );\n\t        var view = this;\n\t        view.expanded = false;\n\t        this.$details().slideUp({\n\t            duration : view.fxSpeed,\n\t            step: function(){\n\t                view.trigger( 'collapsing', view );\n\t            },\n\t            complete: function(){\n\t                view.trigger( 'collapsed', view );\n\t            }\n\t        });\n\t    }\n\t\n\t});\n\t\n\t\n\t//==============================================================================\n\t/** A view that is displayed in some larger list/grid/collection.\n\t *      Inherits from Expandable, Selectable, Draggable.\n\t *  The DOM contains warnings, a title bar, and a series of primary action controls.\n\t *      Primary actions are meant to be easily accessible item functions (such as delete)\n\t *      that are rendered in the title bar.\n\t *\n\t *  Details are rendered when the user clicks the title bar or presses enter/space when\n\t *      the title bar is in focus.\n\t *\n\t *  Designed as a base class for history panel contents - but usable elsewhere (I hope).\n\t */\n\tvar ListItemView = ExpandableView.extend(\n\t        BASE_MVC.mixin( BASE_MVC.SelectableViewMixin, BASE_MVC.DraggableViewMixin, {\n\t\n\t//TODO: that's a little contradictory\n\t    tagName     : 'div',\n\t    className   : 'list-item',\n\t\n\t    /** Set up the base class and all mixins */\n\t    initialize : function( attributes ){\n\t        ExpandableView.prototype.initialize.call( this, attributes );\n\t        BASE_MVC.SelectableViewMixin.initialize.call( this, attributes );\n\t        BASE_MVC.DraggableViewMixin.initialize.call( this, attributes );\n\t        this._setUpListeners();\n\t    },\n\t\n\t    /** event listeners */\n\t    _setUpListeners : function(){\n\t        // hide the primary actions in the title bar when selectable and narrow\n\t        this.on( 'selectable', function( isSelectable ){\n\t            if( isSelectable ){\n\t                this.$( '.primary-actions' ).hide();\n\t            } else {\n\t                this.$( '.primary-actions' ).show();\n\t            }\n\t        }, this );\n\t        //this.on( 'all', function( event ){\n\t        //    this.log( event );\n\t        //}, this );\n\t        return this;\n\t    },\n\t\n\t    // ........................................................................ rendering\n\t    /** In this override, call methods to build warnings, titlebar and primary actions */\n\t    _buildNewRender : function(){\n\t        var $newRender = ExpandableView.prototype._buildNewRender.call( this );\n\t        $newRender.children( '.warnings' ).replaceWith( this._renderWarnings() );\n\t        $newRender.children( '.title-bar' ).replaceWith( this._renderTitleBar() );\n\t        $newRender.children( '.primary-actions' ).append( this._renderPrimaryActions() );\n\t        $newRender.find( '> .title-bar .subtitle' ).replaceWith( this._renderSubtitle() );\n\t        return $newRender;\n\t    },\n\t\n\t    /** In this override, render the selector controls and set up dragging before the swap */\n\t    _swapNewRender : function( $newRender ){\n\t        ExpandableView.prototype._swapNewRender.call( this, $newRender );\n\t        if( this.selectable ){ this.showSelector( 0 ); }\n\t        if( this.draggable ){ this.draggableOn(); }\n\t        return this.$el;\n\t    },\n\t\n\t    /** Render any warnings the item may need to show (e.g. \"I'm deleted\") */\n\t    _renderWarnings : function(){\n\t        var view = this,\n\t            $warnings = $( '<div class=\"warnings\"></div>' ),\n\t            json = view.model.toJSON();\n\t//TODO:! unordered (map)\n\t        _.each( view.templates.warnings, function( templateFn ){\n\t            $warnings.append( $( templateFn( json, view ) ) );\n\t        });\n\t        return $warnings;\n\t    },\n\t\n\t    /** Render the title bar (the main/exposed SUMMARY dom element) */\n\t    _renderTitleBar : function(){\n\t        return $( this.templates.titleBar( this.model.toJSON(), this ) );\n\t    },\n\t\n\t    /** Return an array of jQ objects containing common/easily-accessible item controls */\n\t    _renderPrimaryActions : function(){\n\t        // override this\n\t        return [];\n\t    },\n\t\n\t    /** Render the title bar (the main/exposed SUMMARY dom element) */\n\t    _renderSubtitle : function(){\n\t        return $( this.templates.subtitle( this.model.toJSON(), this ) );\n\t    },\n\t\n\t    // ......................................................................... events\n\t    /** event map */\n\t    events : {\n\t        // expand the body when the title is clicked or when in focus and space or enter is pressed\n\t        'click .title-bar'      : '_clickTitleBar',\n\t        'keydown .title-bar'    : '_keyDownTitleBar',\n\t\n\t        // dragging - don't work, originalEvent === null\n\t        //'dragstart .dataset-title-bar'  : 'dragStartHandler',\n\t        //'dragend .dataset-title-bar'    : 'dragEndHandler'\n\t\n\t        'click .selector'       : 'toggleSelect'\n\t    },\n\t\n\t    /** expand when the title bar is clicked */\n\t    _clickTitleBar : function( event ){\n\t        event.stopPropagation();\n\t        if( event.altKey ){\n\t            this.toggleSelect( event );\n\t            if( !this.selectable ){\n\t                this.showSelector();\n\t            }\n\t        } else {\n\t            this.toggleExpanded();\n\t        }\n\t    },\n\t\n\t    /** expand when the title bar is in focus and enter or space is pressed */\n\t    _keyDownTitleBar : function( event ){\n\t        // bail (with propagation) if keydown and not space or enter\n\t        var KEYCODE_SPACE = 32, KEYCODE_RETURN = 13;\n\t        if( event && ( event.type === 'keydown' )\n\t        &&( event.keyCode === KEYCODE_SPACE || event.keyCode === KEYCODE_RETURN ) ){\n\t            this.toggleExpanded();\n\t            event.stopPropagation();\n\t            return false;\n\t        }\n\t        return true;\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'ListItemView(' + modelString + ')';\n\t    }\n\t}));\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tListItemView.prototype.templates = (function(){\n\t//TODO: move to require text! plugin\n\t\n\t    var elTemplato = BASE_MVC.wrapTemplate([\n\t        '<div class=\"list-element\">',\n\t            // errors, messages, etc.\n\t            '<div class=\"warnings\"></div>',\n\t\n\t            // multi-select checkbox\n\t            '<div class=\"selector\">',\n\t                '<span class=\"fa fa-2x fa-square-o\"></span>',\n\t            '</div>',\n\t            // space for title bar buttons - gen. floated to the right\n\t            '<div class=\"primary-actions\"></div>',\n\t            '<div class=\"title-bar\"></div>',\n\t\n\t            // expandable area for more details\n\t            '<div class=\"details\"></div>',\n\t        '</div>'\n\t    ]);\n\t\n\t    var warnings = {};\n\t\n\t    var titleBarTemplate = BASE_MVC.wrapTemplate([\n\t        // adding a tabindex here allows focusing the title bar and the use of keydown to expand the dataset display\n\t        '<div class=\"title-bar clear\" tabindex=\"0\">',\n\t//TODO: prob. belongs in dataset-list-item\n\t            '<span class=\"state-icon\"></span>',\n\t            '<div class=\"title\">',\n\t                '<span class=\"name\"><%- element.name %></span>',\n\t            '</div>',\n\t            '<div class=\"subtitle\"></div>',\n\t        '</div>'\n\t    ], 'element' );\n\t\n\t    var subtitleTemplate = BASE_MVC.wrapTemplate([\n\t        // override this\n\t        '<div class=\"subtitle\"></div>'\n\t    ]);\n\t\n\t    var detailsTemplate = BASE_MVC.wrapTemplate([\n\t        // override this\n\t        '<div class=\"details\"></div>'\n\t    ]);\n\t\n\t    return {\n\t        el          : elTemplato,\n\t        warnings    : warnings,\n\t        titleBar    : titleBarTemplate,\n\t        subtitle    : subtitleTemplate,\n\t        details     : detailsTemplate\n\t    };\n\t}());\n\t\n\t\n\t//==============================================================================\n\t/** A view that is displayed in some larger list/grid/collection.\n\t *  *AND* can display some sub-list of it's own when expanded (e.g. dataset collections).\n\t *  This list will 'foldout' when the item is expanded depending on this.foldoutStyle:\n\t *      If 'foldout': will expand vertically to show the nested list\n\t *      If 'drilldown': will overlay the parent list\n\t *\n\t *  Inherits from ListItemView.\n\t *\n\t *  _renderDetails does the work of creating this.details: a sub-view that shows the nested list\n\t */\n\tvar FoldoutListItemView = ListItemView.extend({\n\t\n\t    /** If 'foldout': show the sub-panel inside the expanded item\n\t     *  If 'drilldown': only fire events and handle by pub-sub\n\t     *      (allow the panel containing this item to attach it, hide itself, etc.)\n\t     */\n\t    foldoutStyle        : 'foldout',\n\t    /** Panel view class to instantiate for the sub-panel */\n\t    foldoutPanelClass   : null,\n\t\n\t    /** override to:\n\t     *      add attributes foldoutStyle and foldoutPanelClass for config poly\n\t     *      disrespect attributes.expanded if drilldown\n\t     */\n\t    initialize : function( attributes ){\n\t//TODO: hackish\n\t        if( this.foldoutStyle === 'drilldown' ){ this.expanded = false; }\n\t        this.foldoutStyle = attributes.foldoutStyle || this.foldoutStyle;\n\t        this.foldoutPanelClass = attributes.foldoutPanelClass || this.foldoutPanelClass;\n\t\n\t        ListItemView.prototype.initialize.call( this, attributes );\n\t        this.foldout = this._createFoldoutPanel();\n\t    },\n\t\n\t//TODO:?? override to exclude foldout scope?\n\t    //$ : function( selector ){\n\t    //    var $found = ListItemView.prototype.$.call( this, selector );\n\t    //    return $found;\n\t    //},\n\t\n\t    /** in this override, attach the foldout panel when rendering details */\n\t    _renderDetails : function(){\n\t//TODO: hackish\n\t        if( this.foldoutStyle === 'drilldown' ){ return $(); }\n\t        var $newDetails = ListItemView.prototype._renderDetails.call( this );\n\t        return this._attachFoldout( this.foldout, $newDetails );\n\t    },\n\t\n\t    /** In this override, handle collection expansion. */\n\t    _createFoldoutPanel : function(){\n\t        var model = this.model;\n\t        var FoldoutClass = this._getFoldoutPanelClass( model ),\n\t            options = this._getFoldoutPanelOptions( model ),\n\t            foldout = new FoldoutClass( _.extend( options, {\n\t                model           : model\n\t            }));\n\t        return foldout;\n\t    },\n\t\n\t    /** Stub to return proper foldout panel class */\n\t    _getFoldoutPanelClass : function(){\n\t        // override\n\t        return this.foldoutPanelClass;\n\t    },\n\t\n\t    /** Stub to return proper foldout panel options */\n\t    _getFoldoutPanelOptions : function(){\n\t        return {\n\t            // propagate foldout style down\n\t            foldoutStyle : this.foldoutStyle,\n\t            fxSpeed      : this.fxSpeed\n\t        };\n\t    },\n\t\n\t    /** Render the foldout panel inside the view, hiding controls */\n\t    _attachFoldout : function( foldout, $whereTo ){\n\t        $whereTo = $whereTo || this.$( '> .details' );\n\t        this.foldout = foldout.render( 0 );\n\t//TODO: hack\n\t        foldout.$( '> .controls' ).hide();\n\t        return $whereTo.append( foldout.$el );\n\t    },\n\t\n\t    /** In this override, branch on foldoutStyle to show expanded */\n\t    expand : function(){\n\t        var view = this;\n\t        return view._fetchModelDetails()\n\t            .always(function(){\n\t                if( view.foldoutStyle === 'foldout' ){\n\t                    view._expand();\n\t                } else if( view.foldoutStyle === 'drilldown' ){\n\t                    view._expandByDrilldown();\n\t                }\n\t            });\n\t    },\n\t\n\t    /** For drilldown, set up close handler and fire expanded:drilldown\n\t     *      containing views can listen to this and handle other things\n\t     *      (like hiding themselves) by listening for expanded/collapsed:drilldown\n\t     */\n\t    _expandByDrilldown : function(){\n\t        var view = this;\n\t        // attachment and rendering done by listener\n\t        view.foldout.on( 'close', function(){\n\t            view.trigger( 'collapsed:drilldown', view, view.foldout );\n\t        });\n\t        view.trigger( 'expanded:drilldown', view, view.foldout );\n\t    }\n\t\n\t});\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tFoldoutListItemView.prototype.templates = (function(){\n\t\n\t//TODO:?? unnecessary?\n\t    // use element identifier\n\t    var detailsTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"details\">',\n\t            // override with more info (that goes above the panel)\n\t        '</div>'\n\t    ], 'collection' );\n\t\n\t    return _.extend( {}, ListItemView.prototype.templates, {\n\t        details : detailsTemplate\n\t    });\n\t}());\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        ExpandableView                  : ExpandableView,\n\t        ListItemView                    : ListItemView,\n\t        FoldoutListItemView             : FoldoutListItemView\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t    This is the regular tool form.\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(7), __webpack_require__(99), __webpack_require__(100)], __WEBPACK_AMD_DEFINE_RESULT__ = function( Utils, Ui, ToolFormBase, ToolJobs ) {\n\t    var View = ToolFormBase.extend({\n\t        initialize: function( options ) {\n\t            var self = this;\n\t            ToolFormBase.prototype.initialize.call( this, Utils.merge({\n\t                customize       : function( options ) {\n\t                    // build execute button\n\t                    options.buttons = {\n\t                        execute : execute_btn = new Ui.Button({\n\t                            icon     : 'fa-check',\n\t                            tooltip  : 'Execute: ' + options.name + ' (' + options.version + ')',\n\t                            title    : 'Execute',\n\t                            cls      : 'btn btn-primary',\n\t                            floating : 'clear',\n\t                            onclick  : function() {\n\t                                execute_btn.wait();\n\t                                self.form.portlet.disable();\n\t                                ToolJobs.submit( self.form, options, function() {\n\t                                    execute_btn.unwait();\n\t                                    self.form.portlet.enable();\n\t                                } );\n\t                            }\n\t                        })\n\t                    };\n\t\n\t                    // remap feature\n\t                    if ( options.job_id && options.job_remap ) {\n\t                        options.inputs[ 'rerun_remap_job_id' ] = {\n\t                            label       : 'Resume dependencies from this job',\n\t                            name        : 'rerun_remap_job_id',\n\t                            type        : 'select',\n\t                            display     : 'radio',\n\t                            ignore      : '__ignore__',\n\t                            value       : '__ignore__',\n\t                            options     : [ [ 'Yes', options.job_id ], [ 'No', '__ignore__' ] ],\n\t                            help        : 'The previous run of this tool failed and other tools were waiting for it to finish successfully. Use this option to resume those tools using the new output(s) of this tool run.'\n\t                        }\n\t                    }\n\t                }\n\t            }, options ) );\n\t        }\n\t    });\n\t\n\t    return {\n\t        View: View\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\t// tool form templates\n\treturn {\n\t    help: function(options) {\n\t        var $tmpl = $('<div class=\"toolHelp\" style=\"overflow: auto;\"/>')\n\t                        .append( $('<div class=\"toolHelpBody\"/>').append(options.help) );\n\t        $tmpl.find('a').attr('target', '_blank');\n\t        return $tmpl;\n\t    },\n\t\n\t    success: function(response) {\n\t        // check\n\t        if (!response.jobs || !response.jobs.length) {\n\t            return this.error(response);\n\t        }\n\t\n\t        // number of jobs\n\t        var njobs = response.jobs.length;\n\t\n\t        // job count info text\n\t        var njobs_text = '';\n\t        if (njobs == 1) {\n\t            njobs_text = '1 job has';\n\t        } else {\n\t            njobs_text = njobs + ' jobs have';\n\t        }\n\t\n\t        // create template string\n\t        var tmpl =  '<div class=\"donemessagelarge\">' +\n\t                        '<p>' + njobs_text + ' been successfully added to the queue - resulting in the following datasets:</p>';\n\t        for (var i in response.outputs) {\n\t            tmpl +=     '<p style=\"padding: 10px 20px;\"><b>' + response.outputs[i].hid + ': ' + response.outputs[i].name + '</b></p>';\n\t        }\n\t        tmpl +=         '<p>You can check the status of queued jobs and view the resulting data by refreshing the History pane. When the job has been run the status will change from \\'running\\' to \\'finished\\' if completed successfully or \\'error\\' if problems were encountered.</p>' +\n\t                    '</div>';\n\t\n\t        // return success message element\n\t        return tmpl;\n\t    },\n\t\n\t    error: function(response) {\n\t        return  '<div>' +\n\t                    '<p>' +\n\t                        'The server could not complete the request. Please contact the Galaxy Team if this error persists.' +\n\t                    '</p>' +\n\t                    '<textarea class=\"ui-textarea\" disabled style=\"color: black; height: 300px !important;\">' +\n\t                        JSON.stringify(response, undefined, 4) +\n\t                    '</textarea>' +\n\t                '</div>';\n\t    },\n\t\n\t    requirements: function(options) {\n\t        var requirements_message = 'This tool requires ';\n\t        for (var i in options.requirements) {\n\t            var req = options.requirements[i];\n\t            requirements_message += req.name;\n\t            if (req.version) {\n\t                requirements_message += ' (Version ' + req.version + ')';\n\t            }\n\t            if (i < options.requirements.length - 2) {\n\t                requirements_message += ', ';\n\t            }\n\t            if (i == options.requirements.length - 2) {\n\t                requirements_message += ' and ';\n\t            }\n\t        }\n\t        return requirements_message + '. Click <a target=\"_blank\" href=\"https://wiki.galaxyproject.org/Tools/Requirements\">here</a> for more information.';\n\t    }\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _, jQuery) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    //jquery\n\t    //backbone\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function(){\n\t// =============================================================================\n\t/**\n\t * view for a popup menu\n\t */\n\tvar PopupMenu = Backbone.View.extend({\n\t//TODO: maybe better as singleton off the Galaxy obj\n\t    /** Cache the desired button element and options, set up the button click handler\n\t     *  NOTE: attaches this view as HTML/jQ data on the button for later use.\n\t     */\n\t    initialize: function( $button, options ){\n\t        // default settings\n\t        this.$button = $button;\n\t        if( !this.$button.size() ){\n\t            this.$button = $( '<div/>' );\n\t        }\n\t        this.options = options || [];\n\t\n\t        // set up button click -> open menu behavior\n\t        var menu = this;\n\t        this.$button.click( function( event ){\n\t            // if there's already a menu open, remove it\n\t            $( '.popmenu-wrapper' ).remove();\n\t            menu._renderAndShow( event );\n\t            return false;\n\t        });\n\t    },\n\t\n\t    // render the menu, append to the page body at the click position, and set up the 'click-away' handlers, show\n\t    _renderAndShow: function( clickEvent ){\n\t        this.render();\n\t        this.$el.appendTo( 'body' ).css( this._getShownPosition( clickEvent )).show();\n\t        this._setUpCloseBehavior();\n\t    },\n\t\n\t    // render the menu\n\t    // this menu doesn't attach itself to the DOM ( see _renderAndShow )\n\t    render: function(){\n\t        // render the menu body absolute and hidden, fill with template\n\t        this.$el.addClass( 'popmenu-wrapper' ).hide()\n\t            .css({ position : 'absolute' })\n\t            .html( this.template( this.$button.attr( 'id' ), this.options ));\n\t\n\t        // set up behavior on each link/anchor elem\n\t        if( this.options.length ){\n\t            var menu = this;\n\t            //precondition: there should be one option per li\n\t            this.$el.find( 'li' ).each( function( i, li ){\n\t                var option = menu.options[i];\n\t\n\t                // if the option has 'func', call that function when the anchor is clicked\n\t                if( option.func ){\n\t                    $( this ).children( 'a.popupmenu-option' ).click( function( event ){\n\t                        option.func.call( menu, event, option );\n\t                        // We must preventDefault otherwise clicking \"cancel\"\n\t                        // on a purge or something still navigates and causes\n\t                        // the action.\n\t                        event.preventDefault();\n\t                        // bubble up so that an option click will call the close behavior\n\t                    });\n\t                }\n\t            });\n\t        }\n\t        return this;\n\t    },\n\t\n\t    template : function( id, options ){\n\t        return [\n\t            '<ul id=\"', id, '-menu\" class=\"dropdown-menu\">', this._templateOptions( options ), '</ul>'\n\t        ].join( '' );\n\t    },\n\t\n\t    _templateOptions : function( options ){\n\t        if( !options.length ){\n\t            return '<li>(no options)</li>';\n\t        }\n\t        return _.map( options, function( option ){\n\t            if( option.divider ){\n\t                return '<li class=\"divider\"></li>';\n\t            } else if( option.header ){\n\t                return [ '<li class=\"head\"><a href=\"javascript:void(0);\">', option.html, '</a></li>' ].join( '' );\n\t            }\n\t            var href   = option.href || 'javascript:void(0);',\n\t                target = ( option.target  )?( ' target=\"' + option.target + '\"' ):( '' ),\n\t                check  = ( option.checked )?( '<span class=\"fa fa-check\"></span>' ):( '' );\n\t            return [\n\t                '<li><a class=\"popupmenu-option\" href=\"', href, '\"', target, '>',\n\t                    check, option.html,\n\t                '</a></li>'\n\t            ].join( '' );\n\t        }).join( '' );\n\t    },\n\t\n\t    // get the absolute position/offset for the menu\n\t    _getShownPosition : function( clickEvent ){\n\t\n\t        // display menu horiz. centered on click...\n\t        var menuWidth = this.$el.width();\n\t        var x = clickEvent.pageX - menuWidth / 2 ;\n\t\n\t        // adjust to handle horiz. scroll and window dimensions ( draw entirely on visible screen area )\n\t        x = Math.min( x, $( document ).scrollLeft() + $( window ).width() - menuWidth - 5 );\n\t        x = Math.max( x, $( document ).scrollLeft() + 5 );\n\t        return {\n\t            top: clickEvent.pageY,\n\t            left: x\n\t        };\n\t    },\n\t\n\t    // bind an event handler to all available frames so that when anything is clicked\n\t    // the menu is removed from the DOM and the event handler unbinds itself\n\t    _setUpCloseBehavior: function(){\n\t        var menu = this;\n\t//TODO: alternately: focus hack, blocking overlay, jquery.blockui\n\t\n\t        // function to close popup and unbind itself\n\t        function closePopup( event ){\n\t            $( document ).off( 'click.close_popup' );\n\t            if( window.parent !== window ){\n\t                try {\n\t                    $( window.parent.document ).off( \"click.close_popup\" );\n\t                } catch( err ){}\n\t            } else {\n\t                try {\n\t                    $( 'iframe#galaxy_main' ).contents().off( \"click.close_popup\" );\n\t                } catch( err ){}\n\t            }\n\t            menu.remove();\n\t        }\n\t\n\t        $( 'html' ).one( \"click.close_popup\", closePopup );\n\t        if( window.parent !== window ){\n\t            try {\n\t                $( window.parent.document ).find( 'html' ).one( \"click.close_popup\", closePopup );\n\t            } catch( err ){}\n\t        } else {\n\t            try {\n\t                $( 'iframe#galaxy_main' ).contents().one( \"click.close_popup\", closePopup );\n\t            } catch( err ){}\n\t        }\n\t    },\n\t\n\t    // add a menu option/item at the given index\n\t    addItem: function( item, index ){\n\t        // append to end if no index\n\t        index = ( index >= 0 ) ? index : this.options.length;\n\t        this.options.splice( index, 0, item );\n\t        return this;\n\t    },\n\t\n\t    // remove a menu option/item at the given index\n\t    removeItem: function( index ){\n\t        if( index >=0 ){\n\t            this.options.splice( index, 1 );\n\t        }\n\t        return this;\n\t    },\n\t\n\t    // search for a menu option by its html\n\t    findIndexByHtml: function( html ){\n\t        for( var i = 0; i < this.options.length; i++ ){\n\t            if( _.has( this.options[i], 'html' ) && ( this.options[i].html === html )){\n\t                return i;\n\t            }\n\t        }\n\t        return null;\n\t    },\n\t\n\t    // search for a menu option by its html\n\t    findItemByHtml: function( html ){\n\t        return this.options[( this.findIndexByHtml( html ))];\n\t    },\n\t\n\t    // string representation\n\t    toString: function(){\n\t        return 'PopupMenu';\n\t    }\n\t});\n\t/** shortcut to new for when you don't need to preserve the ref */\n\tPopupMenu.create = function _create( $button, options ){\n\t    return new PopupMenu( $button, options );\n\t};\n\t\n\t// -----------------------------------------------------------------------------\n\t// the following class functions are bridges from the original make_popupmenu and make_popup_menus\n\t// to the newer backbone.js PopupMenu\n\t\n\t/** Create a PopupMenu from simple map initial_options activated by clicking button_element.\n\t *      Converts initial_options to object array used by PopupMenu.\n\t *  @param {jQuery|DOMElement} button_element element which, when clicked, activates menu\n\t *  @param {Object} initial_options map of key -> values, where\n\t *      key is option text, value is fn to call when option is clicked\n\t *  @returns {PopupMenu} the PopupMenu created\n\t */\n\tPopupMenu.make_popupmenu = function( button_element, initial_options ){\n\t    var convertedOptions = [];\n\t    _.each( initial_options, function( optionVal, optionKey ){\n\t        var newOption = { html: optionKey };\n\t\n\t        // keys with null values indicate: header\n\t        if( optionVal === null ){ // !optionVal? (null only?)\n\t            newOption.header = true;\n\t\n\t        // keys with function values indicate: a menu option\n\t        } else if( jQuery.type( optionVal ) === 'function' ){\n\t            newOption.func = optionVal;\n\t        }\n\t        //TODO:?? any other special optionVals?\n\t        // there was no divider option originally\n\t        convertedOptions.push( newOption );\n\t    });\n\t    return new PopupMenu( $( button_element ), convertedOptions );\n\t};\n\t\n\t/** Find all anchors in $parent (using selector) and covert anchors into a PopupMenu options map.\n\t *  @param {jQuery} $parent the element that contains the links to convert to options\n\t *  @param {String} selector jq selector string to find links\n\t *  @returns {Object[]} the options array to initialize a PopupMenu\n\t */\n\t//TODO: lose parent and selector, pass in array of links, use map to return options\n\tPopupMenu.convertLinksToOptions = function( $parent, selector ){\n\t    $parent = $( $parent );\n\t    selector = selector || 'a';\n\t    var options = [];\n\t    $parent.find( selector ).each( function( elem, i ){\n\t        var option = {}, $link = $( elem );\n\t\n\t        // convert link text to the option text (html) and the href into the option func\n\t        option.html = $link.text();\n\t        if( $link.attr( 'href' ) ){\n\t            var linkHref    = $link.attr( 'href' ),\n\t                linkTarget  = $link.attr( 'target' ),\n\t                confirmText = $link.attr( 'confirm' );\n\t\n\t            option.func = function(){\n\t                // if there's a \"confirm\" attribute, throw up a confirmation dialog, and\n\t                //  if the user cancels - do nothing\n\t                if( ( confirmText ) && ( !confirm( confirmText ) ) ){ return; }\n\t\n\t                // if there's no confirm attribute, or the user accepted the confirm dialog:\n\t                switch( linkTarget ){\n\t                    // relocate the center panel\n\t                    case '_parent':\n\t                        window.parent.location = linkHref;\n\t                        break;\n\t\n\t                    // relocate the entire window\n\t                    case '_top':\n\t                        window.top.location = linkHref;\n\t                        break;\n\t\n\t                    // relocate this panel\n\t                    default:\n\t                        window.location = linkHref;\n\t                }\n\t            };\n\t        }\n\t        options.push( option );\n\t    });\n\t    return options;\n\t};\n\t\n\t/** Create a single popupmenu from existing DOM button and anchor elements\n\t *  @param {jQuery} $buttonElement the element that when clicked will open the menu\n\t *  @param {jQuery} $menuElement the element that contains the anchors to convert into a menu\n\t *  @param {String} menuElementLinkSelector jq selector string used to find anchors to be made into menu options\n\t *  @returns {PopupMenu} the PopupMenu (Backbone View) that can render, control the menu\n\t */\n\tPopupMenu.fromExistingDom = function( $buttonElement, $menuElement, menuElementLinkSelector ){\n\t    $buttonElement = $( $buttonElement );\n\t    $menuElement = $( $menuElement );\n\t    var options = PopupMenu.convertLinksToOptions( $menuElement, menuElementLinkSelector );\n\t    // we're done with the menu (having converted it to an options map)\n\t    $menuElement.remove();\n\t    return new PopupMenu( $buttonElement, options );\n\t};\n\t\n\t/** Create all popupmenus within a document or a more specific element\n\t *  @param {DOMElement} parent the DOM element in which to search for popupmenus to build (defaults to document)\n\t *  @param {String} menuSelector jq selector string to find popupmenu menu elements (defaults to \"div[popupmenu]\")\n\t *  @param {Function} buttonSelectorBuildFn the function to build the jq button selector.\n\t *      Will be passed $menuElement, parent.\n\t *      (Defaults to return '#' + $menuElement.attr( 'popupmenu' ); )\n\t *  @returns {PopupMenu[]} array of popupmenus created\n\t */\n\tPopupMenu.make_popup_menus = function( parent, menuSelector, buttonSelectorBuildFn ){\n\t    parent = parent || document;\n\t    // orig. Glx popupmenu menus have a (non-std) attribute 'popupmenu'\n\t    //  which contains the id of the button that activates the menu\n\t    menuSelector = menuSelector || 'div[popupmenu]';\n\t    // default to (orig. Glx) matching button to menu by using the popupmenu attr of the menu as the id of the button\n\t    buttonSelectorBuildFn = buttonSelectorBuildFn || function( $menuElement, parent ){\n\t        return '#' + $menuElement.attr( 'popupmenu' );\n\t    };\n\t\n\t    // aggregate and return all PopupMenus\n\t    var popupMenusCreated = [];\n\t    $( parent ).find( menuSelector ).each( function(){\n\t        var $menuElement    = $( this ),\n\t            $buttonElement  = $( parent ).find( buttonSelectorBuildFn( $menuElement, parent ) );\n\t        popupMenusCreated.push( PopupMenu.fromDom( $buttonElement, $menuElement ) );\n\t        $buttonElement.addClass( 'popup' );\n\t    });\n\t    return popupMenusCreated;\n\t};\n\t\n\t\n\t// =============================================================================\n\t    return PopupMenu;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/** This class contains all button views.\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function( Utils ) {\n\t    /** This renders the default button which is used e.g. at the bottom of the upload modal.\n\t    */\n\t    var ButtonBase = Backbone.View.extend({\n\t        initialize: function( options ) {\n\t            this.options = Utils.merge( options, {\n\t                id          : Utils.uid(),\n\t                title       : '',\n\t                floating    : 'right',\n\t                icon        : '',\n\t                cls         : 'ui-button btn btn-default',\n\t                cls_wait    : 'btn btn-info'\n\t            } );\n\t            this.setElement( this._template( this.options ) );\n\t            var self = this;\n\t            $( this.el ).on( 'click' , function() {\n\t                $( '.tooltip' ).hide();\n\t                if ( options.onclick && !self.disabled ) {\n\t                    options.onclick();\n\t                }\n\t            } );\n\t            $( this.el ).tooltip( { title: options.tooltip, placement: 'bottom' } );\n\t        },\n\t\n\t        // disable\n\t        disable: function() {\n\t            this.$el.addClass( 'disabled' );\n\t            this.disabled = true;\n\t        },\n\t\n\t        // enable\n\t        enable: function() {\n\t            this.$el.removeClass( 'disabled' );\n\t            this.disabled = false;\n\t        },\n\t\n\t        // show spinner\n\t        wait: function() {\n\t            this.$el.removeClass( this.options.cls ).addClass( this.options.cls_wait ).prop( 'disabled', true );\n\t            this.$( '.icon' ).removeClass( this.options.icon ).addClass( 'fa-spinner fa-spin' );\n\t            this.$( '.title' ).html( 'Sending...' );\n\t        },\n\t\n\t        // hide spinner\n\t        unwait: function() {\n\t            this.$el.removeClass( this.options.cls_wait ).addClass( this.options.cls ).prop( 'disabled', false );\n\t            this.$( '.icon' ).removeClass( 'fa-spinner fa-spin' ).addClass( this.options.icon );\n\t            this.$( '.title' ).html( this.options.title );\n\t        },\n\t\n\t        // template\n\t        _template: function( options ) {\n\t            var str =   '<button id=\"' + options.id + '\" type=\"submit\" style=\"float: ' + options.floating + ';\" type=\"button\" class=\"' + options.cls + '\">';\n\t            if (options.icon) {\n\t                str +=      '<i class=\"icon fa ' + options.icon + '\"/>&nbsp;';\n\t            }\n\t            str +=          '<span class=\"title\">' + options.title + '</span>' +\n\t                        '</button>';\n\t            return str;\n\t        }\n\t    });\n\t\n\t    /** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons.\n\t    */\n\t    var ButtonLink = ButtonBase.extend({\n\t        initialize: function( options ) {\n\t            ButtonBase.prototype.initialize.call( this, options );\n\t        },\n\t        _template: function( options ) {\n\t            return  '<a id=\"' + options.id + '\" class=\"' + options.cls + '\" href=\"' + ( options.href || 'javascript:void(0)' ) + '\"' +\n\t                        ' title=\"' + options.title + '\" target=\"' + ( options.target || '_top' ) + '\">' + '<span class=\"' + options.icon + '\"/>' +\n\t                    '</a>';\n\t        }\n\t    });\n\t\n\t    /** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected.\n\t    */\n\t    var ButtonCheck = Backbone.View.extend({\n\t        initialize: function( options ) {\n\t            // configure options\n\t            this.options = Utils.merge(options, {\n\t                title : 'Select/Unselect all',\n\t                icons : ['fa fa-square-o', 'fa fa-minus-square-o', 'fa fa-check-square-o'],\n\t                value : 0\n\t            });\n\t\n\t            // create new element\n\t            this.setElement( this._template() );\n\t            this.$title = this.$( '.title' );\n\t            this.$icon  = this.$( '.icon' );\n\t\n\t            // set initial value\n\t            this.value( this.options.value );\n\t\n\t            // set title\n\t            this.$title.html( this.options.title );\n\t\n\t            // add event handler\n\t            var self = this;\n\t            this.$el.on('click', function() {\n\t                self.current = ( self.current === 0 && 2 ) || 0;\n\t                self.value( self.current );\n\t                self.options.onclick && self.options.onclick();\n\t            });\n\t        },\n\t\n\t        /* Sets a new value and/or returns the current value.\n\t        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n\t        * OR:\n\t        * @param{Integer}   new_val - Number of selected options.\n\t        * @param{Integer}   total   - Total number of available options.\n\t        */\n\t        value: function ( new_val, total ) {\n\t            if ( new_val !== undefined ) {\n\t                if ( total ) {\n\t                    if ( new_val !== 0 ) {\n\t                        new_val = ( new_val !== total ) && 1 || 2;\n\t                    }\n\t                }\n\t                this.current = new_val;\n\t                this.$icon.removeClass()\n\t                          .addClass( 'icon' )\n\t                          .addClass( this.options.icons[ new_val ] );\n\t                this.options.onchange && this.options.onchange( new_val );\n\t            }\n\t            return this.current;\n\t        },\n\t\n\t        /** Template containing the check button and the title\n\t        */\n\t        _template: function() {\n\t            return  '<div class=\"ui-button-check\" >' +\n\t                        '<span class=\"icon\"/>' +\n\t                        '<span class=\"title\"/>' +\n\t                    '</div>';\n\t        }\n\t    });\n\t\n\t    /** This renders a differently styled, more compact button version.\n\t        TODO: Consolidate with icon-button.js and/or button-default.js.\n\t    */\n\t    var ButtonIcon = Backbone.View.extend({\n\t        initialize : function( options ) {\n\t            // get options\n\t            this.options = Utils.merge( options, {\n\t                id          : Utils.uid(),\n\t                title       : '',\n\t                floating    : 'right',\n\t                cls         : 'ui-button-icon',\n\t                icon        : '',\n\t                tooltip     : '',\n\t                onclick     : null\n\t            });\n\t\n\t            // create new element\n\t            this.setElement( this._template( this.options ) );\n\t\n\t            // link button element\n\t            this.$button = this.$el.find( '.button' );\n\t\n\t            // add event\n\t            var self = this;\n\t            $(this.el).on('click', function() {\n\t                // hide all tooltips\n\t                $( '.tooltip' ).hide();\n\t\n\t                // execute onclick callback\n\t                if ( options.onclick && !self.disabled ) {\n\t                    options.onclick();\n\t                }\n\t            });\n\t\n\t            // add tooltip\n\t            this.$button.tooltip( { title: options.tooltip, placement: 'bottom' } );\n\t        },\n\t\n\t        // disable\n\t        disable: function() {\n\t            this.$button.addClass( 'disabled' );\n\t            this.disabled = true;\n\t        },\n\t\n\t        // enable\n\t        enable: function() {\n\t            this.$button.removeClass( 'disabled' );\n\t            this.disabled = false;\n\t        },\n\t\n\t        // change icon\n\t        setIcon: function(icon_cls) {\n\t            this.$('i').removeClass( this.options.icon ).addClass( icon_cls );\n\t            this.options.icon = icon_cls;\n\t        },\n\t\n\t        // template\n\t        _template: function( options ) {\n\t            // width\n\t            var width = '';\n\t            if ( options.title ) {\n\t                width = 'width: auto;';\n\t            }\n\t\n\t            // string\n\t            var str =   '<div id=\"' + options.id + '\" style=\"float: ' + options.floating + '; ' + width + '\" class=\"' + options.cls + '\">' +\n\t                            '<div class=\"button\">';\n\t            if (options.title) {\n\t                str +=          '<i class=\"icon fa ' + options.icon + '\"/>&nbsp;' +\n\t                                '<span class=\"title\">' + options.title + '</span>';\n\t            } else {\n\t                str +=          '<i class=\"icon fa ' + options.icon + '\"/>';\n\t            }\n\t            str +=          '</div>' +\n\t                        '</div>';\n\t            return str;\n\t        }\n\t    });\n\t\n\t    /** This class creates a button with dropdown menu. It extends the functionality of the Ui.ButtonIcon class.\n\t        TODO: Consolidate class, use common base class\n\t    */\n\t    var ButtonMenu = Backbone.View.extend({\n\t        // optional sub menu\n\t        $menu: null,\n\t\n\t        // initialize\n\t        initialize: function ( options ) {\n\t            // get options\n\t            this.options = Utils.merge( options, {\n\t                // same as Ui.ButtonIcon\n\t                id              : '',\n\t                title           : '',\n\t                floating        : 'right',\n\t                pull            : 'right',\n\t                icon            : null,\n\t                onclick         : null,\n\t                cls             : 'ui-button-icon ui-button-menu',\n\t                tooltip         : '',\n\t                \n\t                // additional options\n\t                target          : '',\n\t                href            : '',\n\t                onunload        : null,\n\t                visible         : true,\n\t                tag             : ''\n\t            } );\n\t\n\t            // add template for tab\n\t            this.setElement( $( this._template( this.options ) ) );\n\t\n\t            // find root\n\t            var $root = $( this.el ).find( '.root' );\n\t\n\t            // link head\n\t            var self = this;\n\t            $root.on( 'click', function( e ) {\n\t                // hide all tooltips\n\t                $( '.tooltip' ).hide();\n\t\n\t                // prevent default\n\t                e.preventDefault();\n\t\n\t                // add click event\n\t                if( self.options.onclick ) {\n\t                    self.options.onclick();\n\t                }\n\t            });\n\t\n\t            // visiblity\n\t            if ( !this.options.visible )\n\t                this.hide();\n\t\n\t            // add tooltip\n\t            $root.tooltip( { title: options.tooltip, placement: 'bottom' } );\n\t        },\n\t\n\t        // show\n\t        show: function() {\n\t            $( this.el ).show();\n\t        },\n\t\n\t        // hide\n\t        hide: function() {\n\t            $( this.el ).hide();\n\t        },\n\t\n\t        // add menu item\n\t        addMenu: function ( options ) {\n\t            // menu option defaults\n\t            var menuOptions = {\n\t                title       : '',\n\t                target      : '',\n\t                href        : '',\n\t                onclick     : null,\n\t                divider     : false,\n\t                icon        : null,\n\t                cls         : 'button-menu btn-group'\n\t            }\n\t\n\t            // get options\n\t            menuOptions = Utils.merge( options, menuOptions );\n\t\n\t            // check if submenu element is available\n\t            if ( !this.$menu ) {\n\t                // insert submenu element into root\n\t                $( this.el ).append( this._templateMenu() );\n\t\n\t                // update element link\n\t                this.$menu = $( this.el ).find( '.menu' );\n\t            }\n\t\n\t            // create\n\t            var $item = $( this._templateMenuItem( menuOptions ) );\n\t\n\t            // add events\n\t            $item.on( 'click', function( e ) {\n\t                // prevent default\n\t                e.preventDefault();\n\t\n\t                // add click event\n\t                if( menuOptions.onclick ) {\n\t                    menuOptions.onclick ();\n\t                }\n\t            });\n\t\n\t            // append menu\n\t            this.$menu.append( $item );\n\t\n\t            // append divider\n\t            if ( menuOptions.divider ) {\n\t                this.$menu.append( $( this._templateDivider() ) );\n\t            }\n\t        },\n\t\n\t        // fill template header\n\t        _templateMenuItem: function ( options ) {\n\t            var tmpl =  '<li>' +\n\t                            '<a class=\"dropdown-item\" href=\"' + options.href + '\" target=\"' + options.target + '\">';\n\t            if ( options.icon ) {\n\t                tmpl +=         '<i class=\"fa ' + options.icon + '\"/>';\n\t            }\n\t            tmpl +=             ' ' + options.title +\n\t                            '</a>' +\n\t                        '</li>';\n\t            return tmpl;\n\t        },\n\t\n\t        // fill template header\n\t        _templateMenu: function () {\n\t            return '<ul class=\"menu dropdown-menu pull-' + this.options.pull + '\" role=\"menu\"/>';\n\t        },\n\t\n\t        _templateDivider: function() {\n\t            return '<li class=\"divider\"/>';\n\t        },\n\t\n\t        // element\n\t        _template: function(options) {\n\t            // TODO: width/margin should be set in css\n\t            var width = '';\n\t            var margin = '';\n\t            if ( options.title ) {\n\t                width = 'width: auto;';\n\t            } else {\n\t                margin = 'margin: 0px;';\n\t            }\n\t            var str =   '<div id=\"' + options.id + '\" style=\"float: ' + options.floating + '; ' + width + '\" class=\"dropdown ' + options.cls + '\">' +\n\t                            '<div class=\"root button dropdown-toggle\" data-toggle=\"dropdown\" style=\"' + margin + '\">' +\n\t                                '<i class=\"icon fa ' + options.icon + '\"/>';\n\t            if ( options.title ) {\n\t                str +=          '&nbsp;<span class=\"title\">' + options.title + '</span>';\n\t            }\n\t            str +=          '</div>' +\n\t                        '</div>';\n\t            return str;\n\t        }\n\t    });\n\t\n\t    return {\n\t        ButtonDefault   : ButtonBase,\n\t        ButtonLink      : ButtonLink,\n\t        ButtonIcon      : ButtonIcon,\n\t        ButtonCheck     : ButtonCheck,\n\t        ButtonMenu      : ButtonMenu\n\t    }\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils) {\n\t\n\t/**\n\t *  This class creates a ui table element.\n\t */\n\tvar View = Backbone.View.extend({\n\t    // current row\n\t    row: null,\n\t    \n\t    // count rows\n\t    row_count: 0,\n\t    \n\t    // defaults options\n\t    optionsDefault: {\n\t        content     : 'No content available.',\n\t        onchange    : null,\n\t        ondblclick  : null,\n\t        onconfirm   : null,\n\t        cls         : 'ui-table',\n\t        cls_tr      : ''\n\t    },\n\t    \n\t    // events\n\t    events : {\n\t        'click'     : '_onclick',\n\t        'dblclick'  : '_ondblclick'\n\t    },\n\t    \n\t    // initialize\n\t    initialize : function(options) {\n\t        // configure options\n\t        this.options = Utils.merge(options, this.optionsDefault);\n\t        \n\t        // create new element\n\t        var $el = $(this._template(this.options));\n\t        \n\t        // link sub-elements\n\t        this.$thead = $el.find('thead');\n\t        this.$tbody = $el.find('tbody');\n\t        this.$tmessage = $el.find('tmessage');\n\t        \n\t        // set element\n\t        this.setElement($el);\n\t                \n\t        // initialize row\n\t        this.row = this._row();\n\t    },\n\t    \n\t    // add header cell\n\t    addHeader: function($el) {\n\t        var wrapper = $('<th></th>');\n\t        wrapper.append($el);\n\t        this.row.append(wrapper);\n\t    },\n\t    \n\t    // header\n\t    appendHeader: function() {\n\t        // append header row\n\t        this.$thead.append(this.row);\n\t\n\t        // row\n\t        this.row = $('<tr></tr>');\n\t    },\n\t    \n\t    // add row cell\n\t    add: function($el, width, align) {\n\t        var wrapper = $('<td></td>');\n\t        if (width) {\n\t            wrapper.css('width', width);\n\t        }\n\t        if (align) {\n\t            wrapper.css('text-align', align);\n\t        }\n\t        wrapper.append($el);\n\t        this.row.append(wrapper);\n\t    },\n\t    \n\t    // append\n\t    append: function(id, fade) {\n\t        this._commit(id, fade, false);\n\t    },\n\t    \n\t    // prepend\n\t    prepend: function(id, fade) {\n\t        this._commit(id, fade, true);\n\t    },\n\t    \n\t    // get element\n\t    get: function(id) {\n\t        return this.$el.find('#' + id);\n\t    },\n\t    \n\t    // delete\n\t    del: function(id) {\n\t        var item = this.$tbody.find('#' + id);\n\t        if (item.length > 0) {\n\t            item.remove();\n\t            this.row_count--;\n\t            this._refresh();\n\t        }\n\t    },\n\t\n\t    // delete all\n\t    delAll: function() {\n\t        this.$tbody.empty();\n\t        this.row_count = 0;\n\t        this._refresh();\n\t    },\n\t        \n\t    // value\n\t    value: function(new_value) {\n\t        // get current id/value\n\t        this.before = this.$tbody.find('.current').attr('id');\n\t        \n\t        // check if new_value is defined\n\t        if (new_value !== undefined) {\n\t            this.$tbody.find('tr').removeClass('current');\n\t            if (new_value) {\n\t                this.$tbody.find('#' + new_value).addClass('current');\n\t            }\n\t        }\n\t        \n\t        // get current id/value\n\t        var after = this.$tbody.find('.current').attr('id');\n\t        if(after === undefined) {\n\t            return null;\n\t        } else {\n\t            // fire onchange\n\t            if (after != this.before && this.options.onchange) {\n\t                this.options.onchange(new_value);\n\t            }\n\t            \n\t            // return current value\n\t            return after;\n\t        }\n\t    },\n\t    \n\t    // size\n\t    size: function() {\n\t        return this.$tbody.find('tr').length;\n\t    },\n\t    \n\t    // commit\n\t    _commit: function(id, fade, prepend) {\n\t        // remove previous item with same id\n\t        this.del(id);\n\t        \n\t        // add\n\t        this.row.attr('id', id);\n\t        \n\t        // add row\n\t        if (prepend) {\n\t            this.$tbody.prepend(this.row);\n\t        } else {\n\t            this.$tbody.append(this.row);\n\t        }\n\t        \n\t        // fade mode\n\t        if (fade) {\n\t            this.row.hide();\n\t            this.row.fadeIn();\n\t        }\n\t        \n\t        // row\n\t        this.row = this._row();\n\t        \n\t        // row count\n\t        this.row_count++;\n\t        this._refresh();\n\t    },\n\t    \n\t    // create new row\n\t    _row: function() {\n\t        return $('<tr class=\"' + this.options.cls_tr + '\"></tr>');\n\t    },\n\t    \n\t    // onclick\n\t    _onclick: function(e) {\n\t        // get values\n\t        var old_value = this.value();\n\t        var new_value = $(e.target).closest('tr').attr('id');\n\t        if (new_value != ''){\n\t            // check equality\n\t            if (new_value && old_value != new_value) {\n\t                if (this.options.onconfirm) {\n\t                    this.options.onconfirm(new_value);\n\t                } else {\n\t                    this.value(new_value);\n\t                }\n\t            }\n\t        }\n\t    },\n\t\n\t    // ondblclick\n\t    _ondblclick: function(e) {\n\t        var value = this.value();\n\t        if (value && this.options.ondblclick) {\n\t            this.options.ondblclick(value);\n\t        }\n\t    },\n\t        \n\t    // refresh\n\t    _refresh: function() {\n\t        if (this.row_count == 0) {\n\t            this.$tmessage.show();\n\t        } else {\n\t            this.$tmessage.hide();\n\t        }\n\t    },\n\t        \n\t    // load html template\n\t    _template: function(options) {\n\t        return  '<div>' +\n\t                    '<table class=\"' + options.cls + '\">' +\n\t                        '<thead></thead>' +\n\t                        '<tbody></tbody>' +\n\t                    '</table>' +\n\t                    '<tmessage>' + options.content + '</tmessage>' +\n\t                '<div>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View: View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\t// model\n\tvar Model = Backbone.Model.extend({\n\t    defaults: {\n\t        extension       : 'auto',\n\t        genome          : '?',\n\t        url_paste       : '',\n\t        status          : 'init',\n\t        info            : null,\n\t        file_name       : '',\n\t        file_mode       : '',\n\t        file_size       : 0,\n\t        file_type       : null,\n\t        file_path       : '',\n\t        file_data       : null,\n\t        percentage      : 0,\n\t        space_to_tab    : false,\n\t        to_posix_lines  : true,\n\t        enabled         : true\n\t    },\n\t    reset: function(attr) {\n\t        this.clear().set(this.defaults).set(attr);\n\t    }\n\t});\n\t\n\t// collection\n\tvar Collection = Backbone.Collection.extend({\n\t    model: Model\n\t});\n\t\n\t// return\n\treturn {\n\t    Model: Model,\n\t    Collection : Collection\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(6),\n\t    __webpack_require__(5),\n\t    __webpack_require__(12),\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( baseMVC, _l ){\n\t// =============================================================================\n\t/** A view on any model that has a 'annotation' attribute\n\t */\n\tvar AnnotationEditor = Backbone.View\n\t        .extend( baseMVC.LoggableMixin )\n\t        .extend( baseMVC.HiddenUntilActivatedViewMixin ).extend({\n\t\n\t    tagName     : 'div',\n\t    className   : 'annotation-display',\n\t\n\t    /** Set up listeners, parse options */\n\t    initialize : function( options ){\n\t        options = options || {};\n\t        this.tooltipConfig = options.tooltipConfig || { placement: 'bottom' };\n\t        //console.debug( this, options );\n\t        // only listen to the model only for changes to annotations\n\t        this.listenTo( this.model, 'change:annotation', function(){\n\t            this.render();\n\t        });\n\t        this.hiddenUntilActivated( options.$activator, options );\n\t    },\n\t\n\t    /** Build the DOM elements, call select to on the created input, and set up behaviors */\n\t    render : function(){\n\t        var view = this;\n\t        this.$el.html( this._template() );\n\t        this.$el.find( \"[title]\" ).tooltip( this.tooltipConfig );\n\t\n\t        //TODO: handle empties better\n\t        this.$annotation().make_text_editable({\n\t            use_textarea: true,\n\t            on_finish: function( newAnnotation ){\n\t                view.$annotation().text( newAnnotation );\n\t                view.model.save({ annotation: newAnnotation }, { silent: true })\n\t                    .fail( function(){\n\t                        view.$annotation().text( view.model.previous( 'annotation' ) );\n\t                    });\n\t            }\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /** @returns {String} the html text used to build the view's DOM */\n\t    _template : function(){\n\t        var annotation = this.model.get( 'annotation' );\n\t        //if( !annotation ){\n\t        //    //annotation = [ '<em class=\"annotation-empty\">', _l( 'Click to add an annotation' ), '</em>' ].join( '' );\n\t        //    annotation = [ '<em class=\"annotation-empty\"></em>' ].join( '' );\n\t        //}\n\t        return [\n\t            //TODO: make prompt optional\n\t            '<label class=\"prompt\">', _l( 'Annotation' ), '</label>',\n\t            // set up initial tags by adding as CSV to input vals (necc. to init select2)\n\t            '<div class=\"annotation\" title=\"', _l( 'Edit annotation' ), '\">',\n\t                _.escape( annotation ),\n\t            '</div>'\n\t        ].join( '' );\n\t    },\n\t\n\t    /** @returns {jQuery} the main element for this view */\n\t    $annotation : function(){\n\t        return this.$el.find( '.annotation' );\n\t    },\n\t\n\t    /** shut down event listeners and remove this view's DOM */\n\t    remove : function(){\n\t        this.$annotation.off();\n\t        this.stopListening( this.model );\n\t        Backbone.View.prototype.remove.call( this );\n\t    },\n\t\n\t    /** string rep */\n\t    toString : function(){ return [ 'AnnotationEditor(', this.model + '', ')' ].join(''); }\n\t});\n\t// =============================================================================\n\treturn {\n\t    AnnotationEditor : AnnotationEditor\n\t};\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3)))\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( baseMVC, _l ){\n\t/* global Backbone */\n\t\n\tvar logNamespace = 'citation';\n\t//==============================================================================\n\t/** @class model for tool citations.\n\t *  @name Citation\n\t *  @augments Backbone.Model\n\t */\n\tvar Citation = Backbone.Model.extend( baseMVC.LoggableMixin ).extend( {\n\t    _logNamespace : logNamespace,\n\t\n\t    initialize: function( ) {\n\t        var bibtex = this.attributes.content;\n\t        var entry = new BibtexParser(bibtex).entries[0];\n\t        this.entry = entry;\n\t        this._fields = {};\n\t        var rawFields = entry.Fields;\n\t        for(key in rawFields) {\n\t            var value = rawFields[ key ];\n\t            var lowerKey = key.toLowerCase();\n\t            this._fields[ lowerKey ] = value;\n\t        }\n\t    },\n\t    entryType: function() {\n\t        return this.entry.EntryType;\n\t    },\n\t    fields: function() {\n\t        return this._fields;\n\t    }\n\t} );\n\t\n\t//==============================================================================\n\t/** @class Backbone collection of citations.\n\t */\n\tvar BaseCitationCollection = Backbone.Collection.extend( baseMVC.LoggableMixin ).extend( {\n\t    _logNamespace : logNamespace,\n\t\n\t    /** root api url */\n\t    urlRoot : galaxy_config.root + 'api',\n\t    partial : true, // Assume some tools in history/workflow may not be properly annotated yet.\n\t    model : Citation,\n\t} );\n\t\n\tvar HistoryCitationCollection = BaseCitationCollection.extend( {\n\t    /** complete api url */\n\t    url : function() {\n\t        return this.urlRoot + '/histories/' + this.history_id + '/citations';\n\t    }\n\t} );\n\t\n\tvar ToolCitationCollection = BaseCitationCollection.extend( {\n\t    /** complete api url */\n\t    url : function() {\n\t        return this.urlRoot + '/tools/' + this.tool_id + '/citations';\n\t    },\n\t    partial : false, // If a tool has citations, assume they are complete.\n\t} );\n\t\n\t//==============================================================================\n\treturn {\n\t    Citation : Citation,\n\t    HistoryCitationCollection  : HistoryCitationCollection,\n\t    ToolCitationCollection: ToolCitationCollection\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(9),\n\t    __webpack_require__(23),\n\t    __webpack_require__(51),\n\t    __webpack_require__(42),\n\t    __webpack_require__(13),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( STATES, DATASET_LI, TAGS, ANNOTATIONS, faIconButton, BASE_MVC, _l ){\n\t//==============================================================================\n\tvar _super = DATASET_LI.DatasetListItemView;\n\t/** @class Editing view for DatasetAssociation.\n\t */\n\tvar DatasetListItemEdit = _super.extend(\n\t/** @lends DatasetListItemEdit.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** set up: options */\n\t    initialize  : function( attributes ){\n\t        _super.prototype.initialize.call( this, attributes );\n\t//TODO: shouldn't this err if false?\n\t        this.hasUser = attributes.hasUser;\n\t\n\t        /** allow user purge of dataset files? */\n\t        this.purgeAllowed = attributes.purgeAllowed || false;\n\t\n\t        //TODO: move to HiddenUntilActivatedViewMixin\n\t        /** should the tags editor be shown or hidden initially? */\n\t        this.tagsEditorShown        = attributes.tagsEditorShown || false;\n\t        /** should the tags editor be shown or hidden initially? */\n\t        this.annotationEditorShown  = attributes.annotationEditorShown || false;\n\t    },\n\t\n\t    // ......................................................................... titlebar actions\n\t    /** In this override, add the other two primary actions: edit and delete */\n\t    _renderPrimaryActions : function(){\n\t        var actions = _super.prototype._renderPrimaryActions.call( this );\n\t        if( this.model.get( 'state' ) === STATES.NOT_VIEWABLE ){\n\t            return actions;\n\t        }\n\t        // render the display, edit attr and delete icon-buttons\n\t        return _super.prototype._renderPrimaryActions.call( this ).concat([\n\t            this._renderEditButton(),\n\t            this._renderDeleteButton()\n\t        ]);\n\t    },\n\t\n\t//TODO: move titleButtons into state renderers, remove state checks in the buttons\n\t\n\t    /** Render icon-button to edit the attributes (format, permissions, etc.) this dataset. */\n\t    _renderEditButton : function(){\n\t        // don't show edit while uploading, in-accessible\n\t        // DO show if in error (ala previous history panel)\n\t        if( ( this.model.get( 'state' ) === STATES.DISCARDED )\n\t        ||  ( !this.model.get( 'accessible' ) ) ){\n\t            return null;\n\t        }\n\t\n\t        var purged = this.model.get( 'purged' ),\n\t            deleted = this.model.get( 'deleted' ),\n\t            editBtnData = {\n\t                title       : _l( 'Edit attributes' ),\n\t                href        : this.model.urls.edit,\n\t                target      : this.linkTarget,\n\t                faIcon      : 'fa-pencil',\n\t                classes     : 'edit-btn'\n\t            };\n\t\n\t        // disable if purged or deleted and explain why in the tooltip\n\t        if( deleted || purged ){\n\t            editBtnData.disabled = true;\n\t            if( purged ){\n\t                editBtnData.title = _l( 'Cannot edit attributes of datasets removed from disk' );\n\t            } else if( deleted ){\n\t                editBtnData.title = _l( 'Undelete dataset to edit attributes' );\n\t            }\n\t\n\t        // disable if still uploading or new\n\t        } else if( _.contains( [ STATES.UPLOAD, STATES.NEW ], this.model.get( 'state' ) ) ){\n\t            editBtnData.disabled = true;\n\t            editBtnData.title = _l( 'This dataset is not yet editable' );\n\t        }\n\t        return faIconButton( editBtnData );\n\t    },\n\t\n\t    /** Render icon-button to delete this hda. */\n\t    _renderDeleteButton : function(){\n\t        // don't show delete if...\n\t        if( ( !this.model.get( 'accessible' ) ) ){\n\t            return null;\n\t        }\n\t\n\t        var self = this,\n\t            deletedAlready = this.model.isDeletedOrPurged();\n\t        return faIconButton({\n\t                title       : !deletedAlready? _l( 'Delete' ) : _l( 'Dataset is already deleted' ),\n\t                disabled    : deletedAlready,\n\t                faIcon      : 'fa-times',\n\t                classes     : 'delete-btn',\n\t                onclick     : function() {\n\t                    // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n\t                    self.$el.find( '.icon-btn.delete-btn' ).trigger( 'mouseout' );\n\t                    self.model[ 'delete' ]();\n\t                }\n\t        });\n\t    },\n\t\n\t    // ......................................................................... details\n\t    /** In this override, add tags and annotations controls, make the ? dbkey a link to editing page */\n\t    _renderDetails : function(){\n\t        //TODO: generalize to be allow different details for each state\n\t        var $details = _super.prototype._renderDetails.call( this ),\n\t            state = this.model.get( 'state' );\n\t\n\t        if( !this.model.isDeletedOrPurged() && _.contains([ STATES.OK, STATES.FAILED_METADATA ], state ) ){\n\t            this._renderTags( $details );\n\t            this._renderAnnotation( $details );\n\t            this._makeDbkeyEditLink( $details );\n\t        }\n\t\n\t//TODO: TRIPLE tap, ugh.\n\t        this._setUpBehaviors( $details );\n\t        return $details;\n\t    },\n\t\n\t    /** Add less commonly used actions in the details section based on state */\n\t    _renderSecondaryActions : function(){\n\t        var actions = _super.prototype._renderSecondaryActions.call( this );\n\t        switch( this.model.get( 'state' ) ){\n\t            case STATES.UPLOAD:\n\t            case STATES.NEW:\n\t            case STATES.NOT_VIEWABLE:\n\t                return actions;\n\t            case STATES.ERROR:\n\t                // error button comes first\n\t                actions.unshift( this._renderErrButton() );\n\t                return actions.concat([ this._renderRerunButton() ]);\n\t            case STATES.OK:\n\t            case STATES.FAILED_METADATA:\n\t                return actions.concat([ this._renderRerunButton(), this._renderVisualizationsButton() ]);\n\t        }\n\t        return actions.concat([ this._renderRerunButton() ]);\n\t    },\n\t\n\t    /** Render icon-button to report an error on this dataset to the galaxy admin. */\n\t    _renderErrButton : function(){\n\t        return faIconButton({\n\t            title       : _l( 'View or report this error' ),\n\t            href        : this.model.urls.report_error,\n\t            classes     : 'report-error-btn',\n\t            target      : this.linkTarget,\n\t            faIcon      : 'fa-bug'\n\t        });\n\t    },\n\t\n\t    /** Render icon-button to re-run the job that created this dataset. */\n\t    _renderRerunButton : function(){\n\t        var creating_job = this.model.get( 'creating_job' );\n\t        if( this.model.get( 'rerunnable' ) ){\n\t            return faIconButton({\n\t                title       : _l( 'Run this job again' ),\n\t                href        : this.model.urls.rerun,\n\t                classes     : 'rerun-btn',\n\t                target      : this.linkTarget,\n\t                faIcon      : 'fa-refresh',\n\t                onclick     : function( ev ) {\n\t                    ev.preventDefault();\n\t                    // create webpack split point in order to load the tool form async\n\t                    // TODO: split not working (tool loads fine)\n\t                    !/* require */(/* empty */function() { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [ __webpack_require__(28) ]; (function( ToolsForm ){\n\t                        var form = new ToolsForm.View({ 'job_id' : creating_job });\n\t                        form.deferred.execute( function(){\n\t                            Galaxy.app.display( form );\n\t                        });\n\t                    }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}());\n\t                }\n\t            });\n\t        }\n\t    },\n\t\n\t    /** Render an icon-button or popupmenu of links based on the applicable visualizations */\n\t    _renderVisualizationsButton : function(){\n\t        //TODO: someday - lazyload visualizations\n\t        var visualizations = this.model.get( 'visualizations' );\n\t        if( ( this.model.isDeletedOrPurged() )\n\t        ||  ( !this.hasUser )\n\t        ||  ( !this.model.hasData() )\n\t        ||  ( _.isEmpty( visualizations ) ) ){\n\t            return null;\n\t        }\n\t        if( !_.isObject( visualizations[0] ) ){\n\t            this.warn( 'Visualizations have been switched off' );\n\t            return null;\n\t        }\n\t\n\t        var $visualizations = $( this.templates.visualizations( visualizations, this ) );\n\t        //HACK: need to re-write those directed at galaxy_main with linkTarget\n\t        $visualizations.find( '[target=\"galaxy_main\"]').attr( 'target', this.linkTarget );\n\t        // use addBack here to include the root $visualizations elem (for the case of 1 visualization)\n\t        this._addScratchBookFn( $visualizations.find( '.visualization-link' ).addBack( '.visualization-link' ) );\n\t        return $visualizations;\n\t    },\n\t\n\t    /** add scratchbook functionality to visualization links */\n\t    _addScratchBookFn : function( $links ){\n\t        var li = this;\n\t        $links.click( function( ev ){\n\t            if( Galaxy.frame && Galaxy.frame.active ){\n\t                Galaxy.frame.add({\n\t                    title       : \"Visualization\",\n\t                    type        : \"url\",\n\t                    content     : $( this ).attr( 'href' )\n\t                });\n\t                ev.preventDefault();\n\t                ev.stopPropagation();\n\t            }\n\t        });\n\t    },\n\t\n\t//TODO: if possible move these to readonly view - but display the owner's tags/annotation (no edit)\n\t    /** Render the tags list/control */\n\t    _renderTags : function( $where ){\n\t        if( !this.hasUser ){ return; }\n\t        var view = this;\n\t        this.tagsEditor = new TAGS.TagsEditor({\n\t            model           : this.model,\n\t            el              : $where.find( '.tags-display' ),\n\t            onshowFirstTime : function(){ this.render(); },\n\t            // persist state on the hda view (and not the editor) since these are currently re-created each time\n\t            onshow          : function(){ view.tagsEditorShown = true; },\n\t            onhide          : function(){ view.tagsEditorShown = false; },\n\t            $activator      : faIconButton({\n\t                title   : _l( 'Edit dataset tags' ),\n\t                classes : 'tag-btn',\n\t                faIcon  : 'fa-tags'\n\t            }).appendTo( $where.find( '.actions .right' ) )\n\t        });\n\t        if( this.tagsEditorShown ){ this.tagsEditor.toggle( true ); }\n\t    },\n\t\n\t    /** Render the annotation display/control */\n\t    _renderAnnotation : function( $where ){\n\t        if( !this.hasUser ){ return; }\n\t        var view = this;\n\t        this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n\t            model           : this.model,\n\t            el              : $where.find( '.annotation-display' ),\n\t            onshowFirstTime : function(){ this.render(); },\n\t            // persist state on the hda view (and not the editor) since these are currently re-created each time\n\t            onshow          : function(){ view.annotationEditorShown = true; },\n\t            onhide          : function(){ view.annotationEditorShown = false; },\n\t            $activator      : faIconButton({\n\t                title   : _l( 'Edit dataset annotation' ),\n\t                classes : 'annotate-btn',\n\t                faIcon  : 'fa-comment'\n\t            }).appendTo( $where.find( '.actions .right' ) )\n\t        });\n\t        if( this.annotationEditorShown ){ this.annotationEditor.toggle( true ); }\n\t    },\n\t\n\t    /** If the format/dbkey/genome_build isn't set, make the display a link to the edit page */\n\t    _makeDbkeyEditLink : function( $details ){\n\t        // make the dbkey a link to editing\n\t        if( this.model.get( 'metadata_dbkey' ) === '?'\n\t        &&  !this.model.isDeletedOrPurged() ){\n\t            var editableDbkey = $( '<a class=\"value\">?</a>' )\n\t                .attr( 'href', this.model.urls.edit )\n\t                .attr( 'target', this.linkTarget );\n\t            $details.find( '.dbkey .value' ).replaceWith( editableDbkey );\n\t        }\n\t    },\n\t\n\t    // ......................................................................... events\n\t    /** event map */\n\t    events : _.extend( _.clone( _super.prototype.events ), {\n\t        'click .undelete-link'  : '_clickUndeleteLink',\n\t        'click .purge-link'     : '_clickPurgeLink',\n\t\n\t        'click .edit-btn'       : function( ev ){ this.trigger( 'edit', this, ev ); },\n\t        'click .delete-btn'     : function( ev ){ this.trigger( 'delete', this, ev ); },\n\t        'click .rerun-btn'      : function( ev ){ this.trigger( 'rerun', this, ev ); },\n\t        'click .report-err-btn' : function( ev ){ this.trigger( 'report-err', this, ev ); },\n\t        'click .visualization-btn' : function( ev ){ this.trigger( 'visualize', this, ev ); },\n\t        'click .dbkey a'        : function( ev ){ this.trigger( 'edit', this, ev ); }\n\t    }),\n\t\n\t\n\t    /** listener for item undelete (in the messages section) */\n\t    _clickUndeleteLink : function( ev ){\n\t        this.model.undelete();\n\t        return false;\n\t    },\n\t\n\t    /** listener for item purge (in the messages section) */\n\t    _clickPurgeLink : function( ev ){\n\t//TODO: confirm dialog\n\t        this.model.purge();\n\t        return false;\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** string rep */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'HDAEditView(' + modelString + ')';\n\t    }\n\t});\n\t\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tDatasetListItemEdit.prototype.templates = (function(){\n\t//TODO: move to require text! plugin\n\t\n\t    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n\t        failed_metadata : BASE_MVC.wrapTemplate([\n\t            // in this override, provide a link to the edit page\n\t            '<% if( dataset.state === \"failed_metadata\" ){ %>',\n\t                '<div class=\"failed_metadata-warning warningmessagesmall\">',\n\t                    _l( 'An error occurred setting the metadata for this dataset' ),\n\t                    '<br /><a href=\"<%= dataset.urls.edit %>\" target=\"<%= view.linkTarget %>\">',\n\t                        _l( 'Set it manually or retry auto-detection' ),\n\t                    '</a>',\n\t                '</div>',\n\t            '<% } %>'\n\t        ], 'dataset' ),\n\t\n\t        deleted : BASE_MVC.wrapTemplate([\n\t            // in this override, provide links to undelete or purge the dataset\n\t            '<% if( dataset.deleted && !dataset.purged ){ %>',\n\t                // deleted not purged\n\t                '<div class=\"deleted-msg warningmessagesmall\">',\n\t                    _l( 'This dataset has been deleted' ),\n\t                    '<br /><a class=\"undelete-link\" href=\"javascript:void(0);\">', _l( 'Undelete it' ), '</a>',\n\t                    '<% if( view.purgeAllowed ){ %>',\n\t                        '<br /><a class=\"purge-link\" href=\"javascript:void(0);\">',\n\t                            _l( 'Permanently remove it from disk' ),\n\t                        '</a>',\n\t                    '<% } %>',\n\t                '</div>',\n\t            '<% } %>'\n\t        ], 'dataset' )\n\t    });\n\t\n\t    var visualizationsTemplate = BASE_MVC.wrapTemplate([\n\t        '<% if( visualizations.length === 1 ){ %>',\n\t            '<a class=\"visualization-btn visualization-link icon-btn\" href=\"<%= visualizations[0].href %>\"',\n\t                    ' target=\"<%= visualizations[0].target %>\" title=\"', _l( 'Visualize in' ),\n\t                    ' <%= visualizations[0].html %>\">',\n\t                '<span class=\"fa fa-bar-chart-o\"></span>',\n\t            '</a>',\n\t\n\t        '<% } else { %>',\n\t            '<div class=\"visualizations-dropdown dropdown\">',\n\t                '<a class=\"visualization-btn icon-btn\" data-toggle=\"dropdown\" title=\"', _l( 'Visualize' ), '\">',\n\t                    '<span class=\"fa fa-bar-chart-o\"></span>',\n\t                '</a>',\n\t                '<ul class=\"dropdown-menu\" role=\"menu\">',\n\t                    '<% _.each( visualizations, function( visualization ){ %>',\n\t                        '<li><a class=\"visualization-link\" href=\"<%= visualization.href %>\"',\n\t                                ' target=\"<%= visualization.target %>\">',\n\t                            '<%= visualization.html %>',\n\t                        '</a></li>',\n\t                    '<% }); %>',\n\t                '</ul>',\n\t            '</div>',\n\t        '<% } %>'\n\t    ], 'visualizations' );\n\t\n\t    return _.extend( {}, _super.prototype.templates, {\n\t        warnings : warnings,\n\t        visualizations : visualizationsTemplate\n\t    });\n\t}());\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        DatasetListItemEdit : DatasetListItemEdit\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, jQuery) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(9),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( STATES, BASE_MVC, _l ){\n\t\n\tvar logNamespace = 'dataset';\n\t//==============================================================================\n\tvar searchableMixin = BASE_MVC.SearchableModelMixin;\n\t/** @class base model for any DatasetAssociation (HDAs, LDDAs, DatasetCollectionDAs).\n\t *      No knowledge of what type (HDA/LDDA/DCDA) should be needed here.\n\t *  The DA's are made searchable (by attribute) by mixing in SearchableModelMixin.\n\t */\n\tvar DatasetAssociation = Backbone.Model\n\t        .extend( BASE_MVC.LoggableMixin )\n\t        .extend( BASE_MVC.mixin( searchableMixin, /** @lends DatasetAssociation.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    /** default attributes for a model */\n\t    defaults : {\n\t        state               : STATES.NEW,\n\t        deleted             : false,\n\t        purged              : false,\n\t\n\t        // unreliable attribute\n\t        name                : '(unnamed dataset)',\n\t\n\t//TODO: update to false when this is correctly passed from the API (when we have a security model for this)\n\t        accessible          : true,\n\t\n\t        // sniffed datatype (sam, tabular, bed, etc.)\n\t        data_type           : '',\n\t        file_ext            : '',\n\t\n\t        // size in bytes\n\t        file_size           : 0,\n\t\n\t        // array of associated file types (eg. [ 'bam_index', ... ])\n\t        meta_files          : [],\n\t\n\t        misc_blurb          : '',\n\t        misc_info           : '',\n\t\n\t        tags                : []\n\t        // do NOT default on annotation, as this default is valid and will be passed on 'save'\n\t        //  which is incorrect behavior when the model is only partially fetched (annos are not passed in summary data)\n\t        //annotation          : ''\n\t    },\n\t\n\t    /** instance vars and listeners */\n\t    initialize : function( attributes, options ){\n\t        this.debug( this + '(Dataset).initialize', attributes, options );\n\t\n\t        //!! this state is not in trans.app.model.Dataset.states - set it here -\n\t        if( !this.get( 'accessible' ) ){\n\t            this.set( 'state', STATES.NOT_VIEWABLE );\n\t        }\n\t\n\t        /** Datasets rely/use some web controllers - have the model generate those URLs on startup */\n\t        this.urls = this._generateUrls();\n\t\n\t        this._setUpListeners();\n\t    },\n\t\n\t    /** returns misc. web urls for rendering things like re-run, display, etc. */\n\t    _generateUrls : function(){\n\t//TODO: would be nice if the API did this\n\t        var id = this.get( 'id' );\n\t        if( !id ){ return {}; }\n\t        var urls = {\n\t            'purge'         : 'datasets/' + id + '/purge_async',\n\t            'display'       : 'datasets/' + id + '/display/?preview=True',\n\t            'edit'          : 'datasets/' + id + '/edit',\n\t            'download'      : 'datasets/' + id + '/display?to_ext=' + this.get( 'file_ext' ),\n\t            'report_error'  : 'dataset/errors?id=' + id,\n\t            'rerun'         : 'tool_runner/rerun?id=' + id,\n\t            'show_params'   : 'datasets/' + id + '/show_params',\n\t            'visualization' : 'visualization',\n\t            'meta_download' : 'dataset/get_metadata_file?hda_id=' + id + '&metadata_name='\n\t        };\n\t//TODO: global\n\t        var root = ( window.galaxy_config && galaxy_config.root )?( galaxy_config.root ):( '/' );\n\t        _.each( urls, function( value, key ){\n\t            urls[ key ] = root + value;\n\t        });\n\t        this.urls = urls;\n\t        return urls;\n\t    },\n\t\n\t    /** set up any event listeners\n\t     *  event: state:ready  fired when this DA moves into/is already in a ready state\n\t     */\n\t    _setUpListeners : function(){\n\t        // if the state has changed and the new state is a ready state, fire an event\n\t        this.on( 'change:state', function( currModel, newState ){\n\t            this.log( this + ' has changed state:', currModel, newState );\n\t            if( this.inReadyState() ){\n\t                this.trigger( 'state:ready', currModel, newState, this.previous( 'state' ) );\n\t            }\n\t        });\n\t        // the download url (currently) relies on having a correct file extension\n\t        this.on( 'change:id change:file_ext', function( currModel ){\n\t            this._generateUrls();\n\t        });\n\t    },\n\t\n\t    // ........................................................................ common queries\n\t    /** override to add urls */\n\t    toJSON : function(){\n\t        var json = Backbone.Model.prototype.toJSON.call( this );\n\t        //console.warn( 'returning json?' );\n\t        //return json;\n\t        return _.extend( json, {\n\t            urls : this.urls\n\t        });\n\t    },\n\t\n\t    /** Is this dataset deleted or purged? */\n\t    isDeletedOrPurged : function(){\n\t        return ( this.get( 'deleted' ) || this.get( 'purged' ) );\n\t    },\n\t\n\t    /** Is this dataset in a 'ready' state; where 'Ready' states are states where no\n\t     *      processing (for the ds) is left to do on the server.\n\t     */\n\t    inReadyState : function(){\n\t        var ready = _.contains( STATES.READY_STATES, this.get( 'state' ) );\n\t        return ( this.isDeletedOrPurged() || ready );\n\t    },\n\t\n\t    /** Does this model already contain detailed data (as opposed to just summary level data)? */\n\t    hasDetails : function(){\n\t        //?? this may not be reliable\n\t        return _.has( this.attributes, 'genome_build' );\n\t    },\n\t\n\t    /** Convenience function to match dataset.has_data. */\n\t    hasData : function(){\n\t        return ( this.get( 'file_size' ) > 0 );\n\t    },\n\t\n\t    // ........................................................................ ajax\n\t    fetch : function( options ){\n\t        var dataset = this;\n\t        return Backbone.Model.prototype.fetch.call( this, options )\n\t            .always( function(){\n\t                dataset._generateUrls();\n\t            });\n\t    },\n\t\n\t    //NOTE: subclasses of DA's will need to implement url and urlRoot in order to have these work properly\n\t    /** save this dataset, _Mark_ing it as deleted (just a flag) */\n\t    'delete' : function( options ){\n\t        if( this.get( 'deleted' ) ){ return jQuery.when(); }\n\t        return this.save( { deleted: true }, options );\n\t    },\n\t    /** save this dataset, _Mark_ing it as undeleted */\n\t    undelete : function( options ){\n\t        if( !this.get( 'deleted' ) || this.get( 'purged' ) ){ return jQuery.when(); }\n\t        return this.save( { deleted: false }, options );\n\t    },\n\t\n\t    /** remove the file behind this dataset from the filesystem (if permitted) */\n\t    purge : function _purge( options ){\n\t//TODO: use, override model.destroy, HDA.delete({ purge: true })\n\t        if( this.get( 'purged' ) ){ return jQuery.when(); }\n\t        options = options || {};\n\t        //var hda = this,\n\t        //    //xhr = jQuery.ajax( this.url() + '?' + jQuery.param({ purge: true }), _.extend({\n\t        //    xhr = jQuery.ajax( this.url(), _.extend({\n\t        //        type : 'DELETE',\n\t        //        data : {\n\t        //            purge : true\n\t        //        }\n\t        //    }, options ));\n\t        //\n\t        //xhr.done( function( response ){\n\t        //    hda.debug( 'response', response );\n\t        //    //hda.set({ deleted: true, purged: true });\n\t        //    hda.set( response );\n\t        //});\n\t        //return xhr;\n\t\n\t        options.url = this.urls.purge;\n\t\n\t        //TODO: ideally this would be a DELETE call to the api\n\t        //  using purge async for now\n\t        var hda = this,\n\t            xhr = jQuery.ajax( options );\n\t        xhr.done( function( message, status, responseObj ){\n\t            hda.set({ deleted: true, purged: true });\n\t        });\n\t        xhr.fail( function( xhr, status, message ){\n\t            // Exception messages are hidden within error page including:  '...not allowed in this Galaxy instance.'\n\t            // unbury and re-add to xhr\n\t            var error = _l( \"Unable to purge dataset\" );\n\t            var messageBuriedInUnfortunatelyFormattedError = ( 'Removal of datasets by users '\n\t                + 'is not allowed in this Galaxy instance' );\n\t            if( xhr.responseJSON && xhr.responseJSON.error ){\n\t                error = xhr.responseJSON.error;\n\t            } else if( xhr.responseText.indexOf( messageBuriedInUnfortunatelyFormattedError ) !== -1 ){\n\t                error = messageBuriedInUnfortunatelyFormattedError;\n\t            }\n\t            xhr.responseText = error;\n\t            hda.trigger( 'error', hda, xhr, options, _l( error ), { error: error } );\n\t        });\n\t        return xhr;\n\t    },\n\t\n\t    // ........................................................................ searching\n\t    // see base-mvc, SearchableModelMixin\n\t\n\t    /** what attributes of an HDA will be used in a text search */\n\t    searchAttributes : [\n\t        'name', 'file_ext', 'genome_build', 'misc_blurb', 'misc_info', 'annotation', 'tags'\n\t    ],\n\t\n\t    /** our attr keys don't often match the labels we display to the user - so, when using\n\t     *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n\t     *      following attr keys.\n\t     */\n\t    searchAliases : {\n\t        title       : 'name',\n\t        format      : 'file_ext',\n\t        database    : 'genome_build',\n\t        blurb       : 'misc_blurb',\n\t        description : 'misc_blurb',\n\t        info        : 'misc_info',\n\t        tag         : 'tags'\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var nameAndId = this.get( 'id' ) || '';\n\t        if( this.get( 'name' ) ){\n\t            nameAndId = '\"' + this.get( 'name' ) + '\",' + nameAndId;\n\t        }\n\t        return 'Dataset(' + nameAndId + ')';\n\t    }\n\t}));\n\t\n\t\n\t//==============================================================================\n\t/** @class Backbone collection for dataset associations.\n\t */\n\tvar DatasetAssociationCollection = Backbone.Collection.extend( BASE_MVC.LoggableMixin ).extend(\n\t/** @lends HistoryContents.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    model : DatasetAssociation,\n\t\n\t    /** root api url */\n\t    urlRoot : (( window.galaxy_config && galaxy_config.root )?( galaxy_config.root ):( '/' ))\n\t        + 'api/datasets',\n\t\n\t    /** url fn */\n\t    url : function(){\n\t        return this.urlRoot\n\t    },\n\t\n\t    // ........................................................................ common queries\n\t    /** Get the ids of every item in this collection\n\t     *  @returns array of encoded ids\n\t     */\n\t    ids : function(){\n\t        return this.map( function( item ){ return item.get('id'); });\n\t    },\n\t\n\t    /** Get contents that are not ready\n\t     *  @returns array of content models\n\t     */\n\t    notReady : function(){\n\t        return this.filter( function( content ){\n\t            return !content.inReadyState();\n\t        });\n\t    },\n\t\n\t    /** return true if any datasets don't have details */\n\t    haveDetails : function(){\n\t        return this.all( function( dataset ){ return dataset.hasDetails(); });\n\t    },\n\t\n\t    // ........................................................................ ajax\n\t    /** using a queue, perform ajaxFn on each of the models in this collection */\n\t    ajaxQueue : function( ajaxFn, options ){\n\t        var deferred = jQuery.Deferred(),\n\t            startingLength = this.length,\n\t            responses = [];\n\t\n\t        if( !startingLength ){\n\t            deferred.resolve([]);\n\t            return deferred;\n\t        }\n\t\n\t        // use reverse order (stylistic choice)\n\t        var ajaxFns = this.chain().reverse().map( function( dataset, i ){\n\t            return function(){\n\t                var xhr = ajaxFn.call( dataset, options );\n\t                // if successful, notify using the deferred to allow tracking progress\n\t                xhr.done( function( response ){\n\t                    deferred.notify({ curr: i, total: startingLength, response: response, model: dataset });\n\t                });\n\t                // (regardless of previous error or success) if not last ajax call, shift and call the next\n\t                //  if last fn, resolve deferred\n\t                xhr.always( function( response ){\n\t                    responses.push( response );\n\t                    if( ajaxFns.length ){\n\t                        ajaxFns.shift()();\n\t                    } else {\n\t                        deferred.resolve( responses );\n\t                    }\n\t                });\n\t            };\n\t        }).value();\n\t        // start the queue\n\t        ajaxFns.shift()();\n\t\n\t        return deferred;\n\t    },\n\t\n\t    // ........................................................................ sorting/filtering\n\t    /** return a new collection of datasets whose attributes contain the substring matchesWhat */\n\t    matches : function( matchesWhat ){\n\t        return this.filter( function( dataset ){\n\t            return dataset.matches( matchesWhat );\n\t        });\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    ///** Convert this ad-hoc collection of hdas to a formal collection tracked\n\t    //    by the server.\n\t    //**/\n\t    //promoteToHistoryDatasetCollection : function _promote( history, collection_type, options ){\n\t    //},\n\t\n\t    /** String representation. */\n\t    toString : function(){\n\t         return ([ 'DatasetAssociationCollection(', this.length, ')' ].join( '' ));\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        DatasetAssociation              : DatasetAssociation,\n\t        DatasetAssociationCollection    : DatasetAssociationCollection\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(23),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( DATASET_LI, BASE_MVC, _l ){\n\t/* global Backbone */\n\t//==============================================================================\n\tvar _super = DATASET_LI.DatasetListItemView;\n\t/** @class Read only view for HistoryDatasetAssociation.\n\t *      Since there are no controls on the HDAView to hide the dataset,\n\t *      the primary thing this class does (currently) is override templates\n\t *      to render the HID.\n\t */\n\tvar HDAListItemView = _super.extend(\n\t/** @lends HDAListItemView.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    className   : _super.prototype.className + \" history-content\",\n\t\n\t    initialize : function( attributes, options ){\n\t        _super.prototype.initialize.call( this, attributes, options );\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'HDAListItemView(' + modelString + ')';\n\t    }\n\t});\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tHDAListItemView.prototype.templates = (function(){\n\t//TODO: move to require text! plugin\n\t\n\t    var titleBarTemplate = BASE_MVC.wrapTemplate([\n\t        // adding the hid display to the title\n\t        '<div class=\"title-bar clear\" tabindex=\"0\">',\n\t            '<span class=\"state-icon\"></span>',\n\t            '<div class=\"title\">',\n\t                //TODO: remove whitespace and use margin-right\n\t                '<span class=\"hid\"><%- dataset.hid %></span> ',\n\t                '<span class=\"name\"><%- dataset.name %></span>',\n\t            '</div>',\n\t        '</div>'\n\t    ], 'dataset' );\n\t\n\t    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n\t        hidden : BASE_MVC.wrapTemplate([\n\t            // add a warning when hidden\n\t            '<% if( !dataset.visible ){ %>',\n\t                '<div class=\"hidden-msg warningmessagesmall\">',\n\t                    _l( 'This dataset has been hidden' ),\n\t                '</div>',\n\t            '<% } %>'\n\t        ], 'dataset' )\n\t    });\n\t\n\t    return _.extend( {}, _super.prototype.templates, {\n\t        titleBar : titleBarTemplate,\n\t        warnings : warnings\n\t    });\n\t}());\n\t\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        HDAListItemView  : HDAListItemView\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(45),\n\t    __webpack_require__(25),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( DATASET, HISTORY_CONTENT, BASE_MVC, _l ){\n\t//==============================================================================\n\tvar _super = DATASET.DatasetAssociation,\n\t    hcontentMixin = HISTORY_CONTENT.HistoryContentMixin;\n\t/** @class (HDA) model for a Galaxy dataset contained in and related to a history.\n\t */\n\tvar HistoryDatasetAssociation = _super.extend( BASE_MVC.mixin( hcontentMixin,\n\t/** @lends HistoryDatasetAssociation.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n\t    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n\t    //  - re-apply manually it now\n\t    /** call the mixin constructor */\n\t    constructor : function( attrs, options ){\n\t        hcontentMixin.constructor.call( this, attrs, options );\n\t    },\n\t    \n\t    /** default attributes for a model */\n\t    defaults : _.extend( {}, _super.prototype.defaults, hcontentMixin.defaults, {\n\t        model_class         : 'HistoryDatasetAssociation'\n\t    }),\n\t\n\t    /** Set up the model, determine if accessible, bind listeners\n\t     */\n\t    initialize : function( attributes, options ){\n\t        _super.prototype.initialize.call( this, attributes, options );\n\t        hcontentMixin.initialize.call( this, attributes, options );\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var nameAndId = this.get( 'id' ) || '';\n\t        if( this.get( 'name' ) ){\n\t            nameAndId = this.get( 'hid' ) + ' :\"' + this.get( 'name' ) + '\",' + nameAndId;\n\t        }\n\t        return 'HDA(' + nameAndId + ')';\n\t    }\n\t}));\n\t\n\t//==============================================================================\n\t    return {\n\t        HistoryDatasetAssociation   : HistoryDatasetAssociation\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(9),\n\t    __webpack_require__(20),\n\t    __webpack_require__(14),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( STATES, DC_LI, DC_PANEL, BASE_MVC, _l ){\n\t/* global Backbone */\n\t//==============================================================================\n\tvar _super = DC_LI.DCListItemView;\n\t/** @class Read only view for HistoryDatasetCollectionAssociation (a dataset collection inside a history).\n\t */\n\tvar HDCAListItemView = _super.extend(\n\t/** @lends HDCAListItemView.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    className   : _super.prototype.className + \" history-content\",\n\t\n\t    /** event listeners */\n\t    _setUpListeners : function(){\n\t        _super.prototype._setUpListeners.call( this );\n\t\n\t        this.model.on({\n\t            'change:populated change:visible' : function( model, options ){ this.render(); },\n\t        }, this );\n\t    },\n\t\n\t    /** Override to provide the proper collections panels as the foldout */\n\t    _getFoldoutPanelClass : function(){\n\t        switch( this.model.get( 'collection_type' ) ){\n\t            case 'list':\n\t                return DC_PANEL.ListCollectionPanel;\n\t            case 'paired':\n\t                return DC_PANEL.PairCollectionPanel;\n\t            case 'list:paired':\n\t                return DC_PANEL.ListOfPairsCollectionPanel;\n\t        }\n\t        throw new TypeError( 'Uknown collection_type: ' + this.model.get( 'collection_type' ) );\n\t    },\n\t\n\t    /** In this override, add the state as a class for use with state-based CSS */\n\t    _swapNewRender : function( $newRender ){\n\t        _super.prototype._swapNewRender.call( this, $newRender );\n\t//TODO: model currently has no state\n\t        var state = !this.model.get( 'populated' ) ? STATES.RUNNING : STATES.OK;\n\t        //if( this.model.has( 'state' ) ){\n\t        this.$el.addClass( 'state-' + state );\n\t        //}\n\t        return this.$el;\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'HDCAListItemView(' + modelString + ')';\n\t    }\n\t});\n\t\n\t/** underscore templates */\n\tHDCAListItemView.prototype.templates = (function(){\n\t\n\t    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n\t        hidden : BASE_MVC.wrapTemplate([\n\t            // add a warning when hidden\n\t            '<% if( !collection.visible ){ %>',\n\t                '<div class=\"hidden-msg warningmessagesmall\">',\n\t                    _l( 'This collection has been hidden' ),\n\t                '</div>',\n\t            '<% } %>'\n\t        ], 'collection' )\n\t    });\n\t\n\t// could steal this from hda-base (or use mixed content)\n\t    var titleBarTemplate = BASE_MVC.wrapTemplate([\n\t        // adding the hid display to the title\n\t        '<div class=\"title-bar clear\" tabindex=\"0\">',\n\t            '<span class=\"state-icon\"></span>',\n\t            '<div class=\"title\">',\n\t                //TODO: remove whitespace and use margin-right\n\t                '<span class=\"hid\"><%- collection.hid %></span> ',\n\t                '<span class=\"name\"><%- collection.name %></span>',\n\t            '</div>',\n\t            '<div class=\"subtitle\"></div>',\n\t        '</div>'\n\t    ], 'collection' );\n\t\n\t    return _.extend( {}, _super.prototype.templates, {\n\t        warnings : warnings,\n\t        titleBar : titleBarTemplate\n\t    });\n\t}());\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        HDCAListItemView : HDCAListItemView\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, jQuery, _) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(26),\n\t    __webpack_require__(4),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( HISTORY_CONTENTS, UTILS, BASE_MVC, _l ){\n\t\n\tvar logNamespace = 'history';\n\t//==============================================================================\n\t/** @class Model for a Galaxy history resource - both a record of user\n\t *      tool use and a collection of the datasets those tools produced.\n\t *  @name History\n\t *  @augments Backbone.Model\n\t */\n\tvar History = Backbone.Model\n\t        .extend( BASE_MVC.LoggableMixin )\n\t        .extend( BASE_MVC.mixin( BASE_MVC.SearchableModelMixin, /** @lends History.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    // values from api (may need more)\n\t    defaults : {\n\t        model_class     : 'History',\n\t        id              : null,\n\t        name            : 'Unnamed History',\n\t        state           : 'new',\n\t\n\t        diskSize        : 0,\n\t        deleted         : false\n\t    },\n\t\n\t    // ........................................................................ urls\n\t    urlRoot: galaxy_config.root + 'api/histories',\n\t\n\t    // ........................................................................ set up/tear down\n\t    /** Set up the model\n\t     *  @param {Object} historyJSON model data for this History\n\t     *  @param {Object[]} contentsJSON   array of model data for this History's contents (hdas or collections)\n\t     *  @param {Object} options     any extra settings including logger\n\t     */\n\t    initialize : function( historyJSON, contentsJSON, options ){\n\t        options = options || {};\n\t        this.logger = options.logger || null;\n\t        this.log( this + \".initialize:\", historyJSON, contentsJSON, options );\n\t\n\t        /** HistoryContents collection of the HDAs contained in this history. */\n\t        this.log( 'creating history contents:', contentsJSON );\n\t        this.contents = new HISTORY_CONTENTS.HistoryContents( contentsJSON || [], { historyId: this.get( 'id' )});\n\t        //// if we've got hdas passed in the constructor, load them\n\t        //if( contentsJSON && _.isArray( contentsJSON ) ){\n\t        //    this.log( 'resetting history contents:', contentsJSON );\n\t        //    this.contents.reset( contentsJSON );\n\t        //}\n\t\n\t        this._setUpListeners();\n\t\n\t        /** cached timeout id for the dataset updater */\n\t        this.updateTimeoutId = null;\n\t        // set up update timeout if needed\n\t        //this.checkForUpdates();\n\t    },\n\t\n\t    /** set up any event listeners for this history including those to the contained HDAs\n\t     *  events: error:contents  if an error occurred with the contents collection\n\t     */\n\t    _setUpListeners : function(){\n\t        this.on( 'error', function( model, xhr, options, msg, details ){\n\t            this.errorHandler( model, xhr, options, msg, details );\n\t        });\n\t\n\t        // hda collection listening\n\t        if( this.contents ){\n\t            this.listenTo( this.contents, 'error', function(){\n\t                this.trigger.apply( this, [ 'error:contents' ].concat( jQuery.makeArray( arguments ) ) );\n\t            });\n\t        }\n\t        // if the model's id changes ('current' or null -> an actual id), update the contents history_id\n\t        this.on( 'change:id', function( model, newId ){\n\t            if( this.contents ){\n\t                this.contents.historyId = newId;\n\t            }\n\t        }, this );\n\t    },\n\t\n\t    //TODO: see base-mvc\n\t    //onFree : function(){\n\t    //    if( this.contents ){\n\t    //        this.contents.free();\n\t    //    }\n\t    //},\n\t\n\t    /** event listener for errors. Generally errors are handled outside this model */\n\t    errorHandler : function( model, xhr, options, msg, details ){\n\t        // clear update timeout on model err\n\t        this.clearUpdateTimeout();\n\t    },\n\t\n\t    /** convert size in bytes to a more human readable version */\n\t    nice_size : function(){\n\t        return UTILS.bytesToString( this.get( 'size' ), true, 2 );\n\t    },\n\t\n\t    /** override to add nice_size */\n\t    toJSON : function(){\n\t        return _.extend( Backbone.Model.prototype.toJSON.call( this ), {\n\t            nice_size : this.nice_size()\n\t        });\n\t    },\n\t\n\t    /** override to allow getting nice_size */\n\t    get : function( key ){\n\t        if( key === 'nice_size' ){\n\t            return this.nice_size();\n\t        }\n\t        return Backbone.Model.prototype.get.apply( this, arguments );\n\t    },\n\t\n\t    // ........................................................................ common queries\n\t    /** T/F is this history owned by the current user (Galaxy.currUser)\n\t     *      Note: that this will return false for an anon user even if the history is theirs.\n\t     */\n\t    ownedByCurrUser : function(){\n\t        // no currUser\n\t        if( !Galaxy || !Galaxy.currUser ){\n\t            return false;\n\t        }\n\t        // user is anon or history isn't owned\n\t        if( Galaxy.currUser.isAnonymous() || Galaxy.currUser.id !== this.get( 'user_id' ) ){\n\t            return false;\n\t        }\n\t        return true;\n\t    },\n\t\n\t    /**  */\n\t    contentsCount : function(){\n\t        return _.reduce( _.values( this.get( 'state_details' ) ), function( memo, num ){ return memo + num; }, 0 );\n\t    },\n\t\n\t    // ........................................................................ search\n\t    /** What model fields to search with */\n\t    searchAttributes : [\n\t        'name', 'annotation', 'tags'\n\t    ],\n\t\n\t    /** Adding title and singular tag */\n\t    searchAliases : {\n\t        title       : 'name',\n\t        tag         : 'tags'\n\t    },\n\t\n\t    // ........................................................................ updates\n\t    /** does the contents collection indicate they're still running and need to be updated later?\n\t     *      delay + update if needed\n\t     *  @param {Function} onReadyCallback   function to run when all contents are in the ready state\n\t     *  events: ready\n\t     */\n\t    checkForUpdates : function( onReadyCallback ){\n\t        //this.info( 'checkForUpdates' )\n\t\n\t        // get overall History state from collection, run updater if History has running/queued contents\n\t        //  boiling it down on the client to running/not\n\t        if( this.contents.running().length ){\n\t            this.setUpdateTimeout();\n\t\n\t        } else {\n\t            this.trigger( 'ready' );\n\t            if( _.isFunction( onReadyCallback ) ){\n\t                onReadyCallback.call( this );\n\t            }\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /** create a timeout (after UPDATE_DELAY or delay ms) to refetch the contents. Clear any prev. timeout */\n\t    setUpdateTimeout : function( delay ){\n\t        delay = delay || History.UPDATE_DELAY;\n\t        var history = this;\n\t\n\t        // prevent buildup of updater timeouts by clearing previous if any, then set new and cache id\n\t        this.clearUpdateTimeout();\n\t        this.updateTimeoutId = setTimeout( function(){\n\t            history.refresh();\n\t        }, delay );\n\t        return this.updateTimeoutId;\n\t    },\n\t\n\t    /** clear the timeout and the cached timeout id */\n\t    clearUpdateTimeout : function(){\n\t        if( this.updateTimeoutId ){\n\t            clearTimeout( this.updateTimeoutId );\n\t            this.updateTimeoutId = null;\n\t        }\n\t    },\n\t\n\t    /* update the contents, getting full detailed model data for any whose id is in detailIds\n\t     *  set up to run this again in some interval of time\n\t     *  @param {String[]} detailIds list of content ids to get detailed model data for\n\t     *  @param {Object} options     std. backbone fetch options map\n\t     */\n\t    refresh : function( detailIds, options ){\n\t        //this.info( 'refresh:', detailIds, this.contents );\n\t        detailIds = detailIds || [];\n\t        options = options || {};\n\t        var history = this;\n\t\n\t        // add detailIds to options as CSV string\n\t        options.data = options.data || {};\n\t        if( detailIds.length ){\n\t            options.data.details = detailIds.join( ',' );\n\t        }\n\t        var xhr = this.contents.fetch( options );\n\t        xhr.done( function( models ){\n\t            history.checkForUpdates( function(){\n\t                // fetch the history inside onReadyCallback in order to recalc history size\n\t                this.fetch();\n\t            });\n\t        });\n\t        return xhr;\n\t    },\n\t\n\t    // ........................................................................ ajax\n\t    /** save this history, _Mark_ing it as deleted (just a flag) */\n\t    _delete : function( options ){\n\t        if( this.get( 'deleted' ) ){ return jQuery.when(); }\n\t        return this.save( { deleted: true }, options );\n\t    },\n\t    /** purge this history, _Mark_ing it as purged and removing all dataset data from the server */\n\t    purge : function( options ){\n\t        if( this.get( 'purged' ) ){ return jQuery.when(); }\n\t        return this.save( { deleted: true, purged: true }, options );\n\t    },\n\t    /** save this history, _Mark_ing it as undeleted */\n\t    undelete : function( options ){\n\t        if( !this.get( 'deleted' ) ){ return jQuery.when(); }\n\t        return this.save( { deleted: false }, options );\n\t    },\n\t\n\t    /** Make a copy of this history on the server\n\t     *  @param {Boolean} current    if true, set the copy as the new current history (default: true)\n\t     *  @param {String} name        name of new history (default: none - server sets to: Copy of <current name>)\n\t     *  @fires copied               passed this history and the response JSON from the copy\n\t     *  @returns {xhr}\n\t     */\n\t    copy : function( current, name, allDatasets ){\n\t        current = ( current !== undefined )?( current ):( true );\n\t        if( !this.id ){\n\t            throw new Error( 'You must set the history ID before copying it.' );\n\t        }\n\t\n\t        var postData = { history_id  : this.id };\n\t        if( current ){\n\t            postData.current = true;\n\t        }\n\t        if( name ){\n\t            postData.name = name;\n\t        }\n\t        if( !allDatasets ){\n\t            postData.all_datasets = false;\n\t        }\n\t\n\t        var history = this,\n\t            copy = jQuery.post( this.urlRoot, postData );\n\t        // if current - queue to setAsCurrent before firing 'copied'\n\t        if( current ){\n\t            return copy.then( function( response ){\n\t                var newHistory = new History( response );\n\t                return newHistory.setAsCurrent()\n\t                    .done( function(){\n\t                        history.trigger( 'copied', history, response );\n\t                    });\n\t            });\n\t        }\n\t        return copy.done( function( response ){\n\t            history.trigger( 'copied', history, response );\n\t        });\n\t    },\n\t\n\t    setAsCurrent : function(){\n\t        var history = this,\n\t            xhr = jQuery.getJSON( galaxy_config.root + 'history/set_as_current?id=' + this.id );\n\t\n\t        xhr.done( function(){\n\t            history.trigger( 'set-as-current', history );\n\t        });\n\t        return xhr;\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    toString : function(){\n\t        return 'History(' + this.get( 'id' ) + ',' + this.get( 'name' ) + ')';\n\t    }\n\t}));\n\t\n\t//------------------------------------------------------------------------------ CLASS VARS\n\t/** When the history has running hdas,\n\t *  this is the amount of time between update checks from the server\n\t */\n\tHistory.UPDATE_DELAY = 4000;\n\t\n\t/** Get data for a history then its hdas using a sequential ajax call, return a deferred to receive both */\n\tHistory.getHistoryData = function getHistoryData( historyId, options ){\n\t    options = options || {};\n\t    var detailIdsFn = options.detailIdsFn || [];\n\t    var hdcaDetailIds = options.hdcaDetailIds || [];\n\t    //console.debug( 'getHistoryData:', historyId, options );\n\t\n\t    var df = jQuery.Deferred(),\n\t        historyJSON = null;\n\t\n\t    function getHistory( id ){\n\t        // get the history data\n\t        if( historyId === 'current' ){\n\t            return jQuery.getJSON( galaxy_config.root + 'history/current_history_json' );\n\t        }\n\t        return jQuery.ajax( galaxy_config.root + 'api/histories/' + historyId );\n\t    }\n\t    function isEmpty( historyData ){\n\t        // get the number of hdas accrd. to the history\n\t        return historyData && historyData.empty;\n\t    }\n\t    function getContents( historyData ){\n\t        // get the hda data\n\t        // if no hdas accrd. to history: return empty immed.\n\t        if( isEmpty( historyData ) ){ return []; }\n\t        // if there are hdas accrd. to history: get those as well\n\t        if( _.isFunction( detailIdsFn ) ){\n\t            detailIdsFn = detailIdsFn( historyData );\n\t        }\n\t        if( _.isFunction( hdcaDetailIds ) ){\n\t            hdcaDetailIds = hdcaDetailIds( historyData );\n\t        }\n\t        var data = {};\n\t        if( detailIdsFn.length ) {\n\t            data.dataset_details = detailIdsFn.join( ',' );\n\t        }\n\t        if( hdcaDetailIds.length ) {\n\t            // for symmetry, not actually used by backend of consumed\n\t            // by frontend.\n\t            data.dataset_collection_details = hdcaDetailIds.join( ',' );\n\t        }\n\t        return jQuery.ajax( galaxy_config.root + 'api/histories/' + historyData.id + '/contents', { data: data });\n\t    }\n\t\n\t    // getting these concurrently is 400% slower (sqlite, local, vanilla) - so:\n\t    //  chain the api calls - getting history first then contents\n\t\n\t    var historyFn = options.historyFn || getHistory,\n\t        contentsFn = options.contentsFn || getContents;\n\t\n\t    // chain ajax calls: get history first, then hdas\n\t    var historyXHR = historyFn( historyId );\n\t    historyXHR.done( function( json ){\n\t        // set outer scope var here for use below\n\t        historyJSON = json;\n\t        df.notify({ status: 'history data retrieved', historyJSON: historyJSON });\n\t    });\n\t    historyXHR.fail( function( xhr, status, message ){\n\t        // call reject on the outer deferred to allow its fail callback to run\n\t        df.reject( xhr, 'loading the history' );\n\t    });\n\t\n\t    var contentsXHR = historyXHR.then( contentsFn );\n\t    contentsXHR.then( function( contentsJSON ){\n\t        df.notify({ status: 'contents data retrieved', historyJSON: historyJSON, contentsJSON: contentsJSON });\n\t        // we've got both: resolve the outer scope deferred\n\t        df.resolve( historyJSON, contentsJSON );\n\t    });\n\t    contentsXHR.fail( function( xhr, status, message ){\n\t        // call reject on the outer deferred to allow its fail callback to run\n\t        df.reject( xhr, 'loading the contents', { history: historyJSON } );\n\t    });\n\t\n\t    return df;\n\t};\n\t\n\t\n\t//==============================================================================\n\tvar ControlledFetchMixin = {\n\t\n\t    /** Override to convert certain options keys into API index parameters */\n\t    fetch : function( options ){\n\t        options = options || {};\n\t        options.data = options.data || this._buildFetchData( options );\n\t        // use repeated params for arrays, e.g. q=1&qv=1&q=2&qv=2\n\t        options.traditional = true;\n\t        return Backbone.Collection.prototype.fetch.call( this, options );\n\t    },\n\t\n\t    /** These attribute keys are valid params to fetch/API-index */\n\t    _fetchOptions : [\n\t        /** model dependent string to control the order of models returned */\n\t        'order',\n\t        /** limit the number of models returned from a fetch */\n\t        'limit',\n\t        /** skip this number of models when fetching */\n\t        'offset',\n\t        /** what series of attributes to return (model dependent) */\n\t        'view',\n\t        /** individual keys to return for the models (see api/histories.index) */\n\t        'keys'\n\t    ],\n\t\n\t    /** Build the data dictionary to send to fetch's XHR as data */\n\t    _buildFetchData : function( options ){\n\t        var data = {},\n\t            fetchDefaults = this._fetchDefaults();\n\t        options = _.defaults( options || {}, fetchDefaults );\n\t        data = _.pick( options, this._fetchOptions );\n\t\n\t        var filters = _.has( options, 'filters' )? options.filters : ( fetchDefaults.filters || {} );\n\t        if( !_.isEmpty( filters ) ){\n\t            _.extend( data, this._buildFetchFilters( filters ) );\n\t        }\n\t        return data;\n\t    },\n\t\n\t    /** Override to have defaults for fetch options and filters */\n\t    _fetchDefaults : function(){\n\t        // to be overridden\n\t        return {};\n\t    },\n\t\n\t    /** Convert dictionary filters to qqv style arrays */\n\t    _buildFetchFilters : function( filters ){\n\t        var filterMap = {\n\t            q  : [],\n\t            qv : []\n\t        };\n\t        _.each( filters, function( v, k ){\n\t            if( v === true ){ v = 'True'; }\n\t            if( v === false ){ v = 'False'; }\n\t            filterMap.q.push( k );\n\t            filterMap.qv.push( v );\n\t        });\n\t        return filterMap;\n\t    },\n\t};\n\t\n\t//==============================================================================\n\t/** @class A collection of histories (per user).\n\t *      (stub) currently unused.\n\t */\n\tvar HistoryCollection = Backbone.Collection\n\t        .extend( BASE_MVC.LoggableMixin )\n\t        .extend( ControlledFetchMixin )\n\t        .extend(/** @lends HistoryCollection.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    model   : History,\n\t\n\t    /** @type {String} the default sortOrders key for sorting */\n\t    DEFAULT_ORDER : 'update_time',\n\t\n\t    /** @type {Object} map of collection sorting orders generally containing a getter to return the attribute\n\t     *      sorted by and asc T/F if it is an ascending sort.\n\t     */\n\t    sortOrders : {\n\t        'update_time' : {\n\t            getter : function( h ){ return new Date( h.get( 'update_time' ) ); },\n\t            asc : false\n\t        },\n\t        'update_time-asc' : {\n\t            getter : function( h ){ return new Date( h.get( 'update_time' ) ); },\n\t            asc : true\n\t        },\n\t        'name' : {\n\t            getter : function( h ){ return h.get( 'name' ); },\n\t            asc : true\n\t        },\n\t        'name-dsc' : {\n\t            getter : function( h ){ return h.get( 'name' ); },\n\t            asc : false\n\t        },\n\t        'size' : {\n\t            getter : function( h ){ return h.get( 'size' ); },\n\t            asc : false\n\t        },\n\t        'size-asc' : {\n\t            getter : function( h ){ return h.get( 'size' ); },\n\t            asc : true\n\t        }\n\t    },\n\t\n\t    initialize : function( models, options ){\n\t        options = options || {};\n\t        this.log( 'HistoryCollection.initialize', arguments );\n\t\n\t        // instance vars\n\t        /** @type {boolean} should deleted histories be included */\n\t        this.includeDeleted = options.includeDeleted || false;\n\t        // set the sort order\n\t        this.setOrder( options.order || this.DEFAULT_ORDER );\n\t        /** @type {String} encoded id of the history that's current */\n\t        this.currentHistoryId = options.currentHistoryId;\n\t        /** @type {boolean} have all histories been fetched and in the collection? */\n\t        this.allFetched = options.allFetched || false;\n\t\n\t        // this.on( 'all', function(){\n\t        //    console.info( 'event:', arguments );\n\t        // });\n\t        this.setUpListeners();\n\t    },\n\t\n\t    urlRoot : ( window.galaxy_config? galaxy_config.root : '/' ) + 'api/histories',\n\t    url     : function(){ return this.urlRoot; },\n\t\n\t    /** returns map of default filters and settings for fetching from the API */\n\t    _fetchDefaults : function(){\n\t        // to be overridden\n\t        var defaults = {\n\t            order   : this.order,\n\t            view    : 'detailed'\n\t        };\n\t        if( !this.includeDeleted ){\n\t            defaults.filters = {\n\t                deleted : false,\n\t                purged  : false,\n\t            };\n\t        }\n\t        return defaults;\n\t    },\n\t\n\t    /** set up reflexive event handlers */\n\t    setUpListeners : function setUpListeners(){\n\t        this.on({\n\t            // when a history is deleted, remove it from the collection (if optionally set to do so)\n\t            'change:deleted' : function( history ){\n\t                // TODO: this becomes complicated when more filters are used\n\t                this.debug( 'change:deleted', this.includeDeleted, history.get( 'deleted' ) );\n\t                if( !this.includeDeleted && history.get( 'deleted' ) ){\n\t                    this.remove( history );\n\t                }\n\t            },\n\t            // listen for a history copy, setting it to current\n\t            'copied' : function( original, newData ){\n\t                this.setCurrent( new History( newData, [] ) );\n\t            },\n\t            // when a history is made current, track the id in the collection\n\t            'set-as-current' : function( history ){\n\t                var oldCurrentId = this.currentHistoryId;\n\t                this.trigger( 'no-longer-current', oldCurrentId );\n\t                this.currentHistoryId = history.id;\n\t            }\n\t        }, this );\n\t    },\n\t\n\t    /** override to allow passing options.order and setting the sort order to one of sortOrders */\n\t    sort : function( options ){\n\t        options = options || {};\n\t        this.setOrder( options.order );\n\t        return Backbone.Collection.prototype.sort.call( this, options );\n\t    },\n\t\n\t    /** build the comparator used to sort this collection using the sortOrder map and the given order key\n\t     *  @event 'changed-order' passed the new order and the collection\n\t     */\n\t    setOrder : function( order ){\n\t        var collection = this,\n\t            sortOrder = this.sortOrders[ order ];\n\t        if( _.isUndefined( sortOrder ) ){ return; }\n\t\n\t        collection.order = order;\n\t        collection.comparator = function comparator( a, b ){\n\t            var currentHistoryId = collection.currentHistoryId;\n\t            // current always first\n\t            if( a.id === currentHistoryId ){ return -1; }\n\t            if( b.id === currentHistoryId ){ return 1; }\n\t            // then compare by an attribute\n\t            a = sortOrder.getter( a );\n\t            b = sortOrder.getter( b );\n\t            return sortOrder.asc?\n\t                ( ( a === b )?( 0 ):( a > b ?  1 : -1 ) ):\n\t                ( ( a === b )?( 0 ):( a > b ? -1 :  1 ) );\n\t        };\n\t        collection.trigger( 'changed-order', collection.order, collection );\n\t        return collection;\n\t    },\n\t\n\t    /** override to provide order and offsets based on instance vars, set limit if passed,\n\t     *  and set allFetched/fire 'all-fetched' when xhr returns\n\t     */\n\t    fetch : function( options ){\n\t        options = options || {};\n\t        if( this.allFetched ){ return jQuery.when({}); }\n\t        var collection = this,\n\t            fetchOptions = _.defaults( options, {\n\t                remove : false,\n\t                offset : collection.length >= 1? ( collection.length - 1 ) : 0,\n\t                order  : collection.order\n\t            }),\n\t            limit = options.limit;\n\t        if( !_.isUndefined( limit ) ){\n\t            fetchOptions.limit = limit;\n\t        }\n\t\n\t        return ControlledFetchMixin.fetch.call( this, fetchOptions )\n\t            .done( function _postFetchMore( fetchData ){\n\t                var numFetched = _.isArray( fetchData )? fetchData.length : 0;\n\t                // anything less than a full page means we got all there is to get\n\t                if( !limit || numFetched < limit ){\n\t                    collection.allFetched = true;\n\t                    collection.trigger( 'all-fetched', collection );\n\t                }\n\t            }\n\t        );\n\t    },\n\t\n\t    /** create a new history and by default set it to be the current history */\n\t    create : function create( data, hdas, historyOptions, xhrOptions ){\n\t        //TODO: .create is actually a collection function that's overridden here\n\t        var collection = this,\n\t            xhr = jQuery.getJSON( galaxy_config.root + 'history/create_new_current'  );\n\t        return xhr.done( function( newData ){\n\t            collection.setCurrent( new History( newData, [], historyOptions || {} ) );\n\t        });\n\t    },\n\t\n\t    /** set the current history to the given history, placing it first in the collection.\n\t     *  Pass standard bbone options for use in unshift.\n\t     *  @triggers new-current passed history and this collection\n\t     */\n\t    setCurrent : function( history, options ){\n\t        options = options || {};\n\t        // new histories go in the front\n\t        this.unshift( history, options );\n\t        this.currentHistoryId = history.get( 'id' );\n\t        if( !options.silent ){\n\t            this.trigger( 'new-current', history, this );\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /** override to reset allFetched flag to false */\n\t    reset : function( models, options ){\n\t        this.allFetched = false;\n\t        return Backbone.Collection.prototype.reset.call( this, models, options );\n\t    },\n\t\n\t    toString: function toString(){\n\t        return 'HistoryCollection(' + this.length + ')';\n\t    }\n\t});\n\t\n\t//==============================================================================\n\treturn {\n\t    History           : History,\n\t    HistoryCollection : HistoryCollection\n\t};}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(27),\n\t    __webpack_require__(120),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5),\n\t    __webpack_require__(63)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( LIST_ITEM, LoadingIndicator, BASE_MVC, _l ){\n\t\n\tvar logNamespace = 'list';\n\t/* ============================================================================\n\tTODO:\n\t\n\t============================================================================ */\n\t/** @class View for a list/collection of models and the sub-views of those models.\n\t *      Sub-views must (at least have the interface if not) inherit from ListItemView.\n\t *      (For a list panel that also includes some 'container' model (History->HistoryContents)\n\t *      use ModelWithListPanel)\n\t *\n\t *  Allows for:\n\t *      searching collection/sub-views\n\t *      selecting/multi-selecting sub-views\n\t *\n\t *  Currently used:\n\t *      for dataset/dataset-choice\n\t *      as superclass of ModelListPanel\n\t */\n\tvar ListPanel = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend(/** @lends ReadOnlyHistoryPanel.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    /** class to use for constructing the sub-views */\n\t    viewClass           : LIST_ITEM.ListItemView,\n\t    /** class to used for constructing collection of sub-view models */\n\t    collectionClass     : Backbone.Collection,\n\t\n\t    tagName             : 'div',\n\t    className           : 'list-panel',\n\t\n\t    /** (in ms) that jquery effects will use */\n\t    fxSpeed             : 'fast',\n\t\n\t    /** string to display when the collection has no contents */\n\t    emptyMsg            : _l( 'This list is empty' ),\n\t    /** displayed when no items match the search terms */\n\t    noneFoundMsg        : _l( 'No matching items found' ),\n\t    /** string used for search placeholder */\n\t    searchPlaceholder   : _l( 'search' ),\n\t\n\t    // ......................................................................... SET UP\n\t    /** Set up the view, set up storage, bind listeners to HistoryContents events\n\t     *  @param {Object} attributes optional settings for the list\n\t     */\n\t    initialize : function( attributes, options ){\n\t        attributes = attributes || {};\n\t        // set the logger if requested\n\t        if( attributes.logger ){\n\t            this.logger = attributes.logger;\n\t        }\n\t        this.log( this + '.initialize:', attributes );\n\t\n\t        // ---- instance vars\n\t        /** how quickly should jquery fx run? */\n\t        this.fxSpeed = _.has( attributes, 'fxSpeed' )?( attributes.fxSpeed ):( this.fxSpeed );\n\t\n\t        /** filters for displaying subviews */\n\t        this.filters = [];\n\t        /** current search terms */\n\t        this.searchFor = attributes.searchFor || '';\n\t\n\t        /** loading indicator */\n\t        this.indicator = new LoadingIndicator( this.$el );\n\t\n\t        /** currently showing selectors on items? */\n\t        this.selecting = ( attributes.selecting !== undefined )? attributes.selecting : true;\n\t        //this.selecting = false;\n\t\n\t        /** cached selected item.model.ids to persist btwn renders */\n\t        this.selected = attributes.selected || [];\n\t        /** the last selected item.model.id */\n\t        this.lastSelected = null;\n\t\n\t        /** are sub-views draggable */\n\t        this.dragItems = attributes.dragItems || false;\n\t\n\t        /** list item view class (when passed models) */\n\t        this.viewClass = attributes.viewClass || this.viewClass;\n\t\n\t        /** list item views */\n\t        this.views = [];\n\t        /** list item models */\n\t        this.collection = attributes.collection || ( new this.collectionClass([]) );\n\t\n\t        /** filter fns run over collection items to see if they should show in the list */\n\t        this.filters = attributes.filters || [];\n\t\n\t        /** override $scrollContainer fn via attributes - fn should return jq for elem to call scrollTo on */\n\t        this.$scrollContainer = attributes.$scrollContainer || this.$scrollContainer;\n\t\n\t//TODO: remove\n\t        this.title = attributes.title || '';\n\t        this.subtitle = attributes.subtitle || '';\n\t\n\t        this._setUpListeners();\n\t    },\n\t\n\t    /** free any sub-views the list has */\n\t    freeViews : function(){\n\t//TODO: stopListening? remove?\n\t        _.each( this.views, function( view ){\n\t            view.off();\n\t        });\n\t        this.views = [];\n\t        return this;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ listeners\n\t    /** create any event listeners for the list\n\t     */\n\t    _setUpListeners : function(){\n\t        this.off();\n\t\n\t        //TODO: move errorHandler down into list-panel from history-panel or\n\t        //  pass to global error handler (Galaxy)\n\t        this.on( 'error', function( model, xhr, options, msg, details ){\n\t            //this.errorHandler( model, xhr, options, msg, details );\n\t            console.error( model, xhr, options, msg, details );\n\t        }, this );\n\t\n\t        // show hide the loading indicator\n\t        this.on( 'loading', function(){\n\t            this._showLoadingIndicator( 'loading...', 40 );\n\t        }, this );\n\t        this.on( 'loading-done', function(){\n\t            this._hideLoadingIndicator( 40 );\n\t        }, this );\n\t\n\t        // throw the first render up as a diff namespace using once (for outside consumption)\n\t        this.once( 'rendered', function(){\n\t            this.trigger( 'rendered:initial', this );\n\t        }, this );\n\t\n\t        // debugging\n\t        if( this.logger ){\n\t            this.on( 'all', function( event ){\n\t                this.log( this + '', arguments );\n\t            }, this );\n\t        }\n\t\n\t        this._setUpCollectionListeners();\n\t        this._setUpViewListeners();\n\t        return this;\n\t    },\n\t\n\t    /** listening for collection events */\n\t    _setUpCollectionListeners : function(){\n\t        this.log( this + '._setUpCollectionListeners', this.collection );\n\t        this.collection.off();\n\t\n\t        // bubble up error events\n\t        this.collection.on( 'error', function( model, xhr, options, msg, details ){\n\t            this.trigger( 'error', model, xhr, options, msg, details );\n\t        }, this );\n\t\n\t        this.collection.on( 'reset', function(){\n\t            this.renderItems();\n\t        }, this );\n\t        this.collection.on( 'add', this.addItemView, this );\n\t        this.collection.on( 'remove', this.removeItemView, this );\n\t\n\t        // debugging\n\t        if( this.logger ){\n\t            this.collection.on( 'all', function( event ){\n\t                this.info( this + '(collection)', arguments );\n\t            }, this );\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /** listening for sub-view events that bubble up with the 'view:' prefix */\n\t    _setUpViewListeners : function(){\n\t        this.log( this + '._setUpViewListeners' );\n\t\n\t        // shift to select a range\n\t        this.on( 'view:selected', function( view, ev ){\n\t            if( ev && ev.shiftKey && this.lastSelected ){\n\t                var lastSelectedView = this.viewFromModelId( this.lastSelected );\n\t                if( lastSelectedView ){\n\t                    this.selectRange( view, lastSelectedView );\n\t                }\n\t            } else if( ev && ev.altKey && !this.selecting ){\n\t                this.showSelectors();\n\t            }\n\t            this.selected.push( view.model.id );\n\t            this.lastSelected = view.model.id;\n\t        }, this );\n\t\n\t        this.on( 'view:de-selected', function( view, ev ){\n\t            this.selected = _.without( this.selected, view.model.id );\n\t            //this.lastSelected = view.model.id;\n\t        }, this );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ rendering\n\t    /** Render this content, set up ui.\n\t     *  @param {Number or String} speed   the speed of the render\n\t     */\n\t    render : function( speed ){\n\t        this.log( this + '.render', speed );\n\t        var $newRender = this._buildNewRender();\n\t        this._setUpBehaviors( $newRender );\n\t        this._queueNewRender( $newRender, speed );\n\t        return this;\n\t    },\n\t\n\t    /** Build a temp div containing the new children for the view's $el.\n\t     */\n\t    _buildNewRender : function(){\n\t        this.debug( this + '(ListPanel)._buildNewRender' );\n\t        var $newRender = $( this.templates.el( {}, this ) );\n\t        this._renderControls( $newRender );\n\t        this._renderTitle( $newRender );\n\t        this._renderSubtitle( $newRender );\n\t        this._renderSearch( $newRender );\n\t        this.renderItems( $newRender );\n\t        return $newRender;\n\t    },\n\t\n\t    /** Build a temp div containing the new children for the view's $el.\n\t     */\n\t    _renderControls : function( $newRender ){\n\t        this.debug( this + '(ListPanel)._renderControls' );\n\t        var $controls = $( this.templates.controls( {}, this ) );\n\t        $newRender.find( '.controls' ).replaceWith( $controls );\n\t        return $controls;\n\t    },\n\t\n\t    /**\n\t     */\n\t    _renderTitle : function( $where ){\n\t        //$where = $where || this.$el;\n\t        //$where.find( '.title' ).replaceWith( ... )\n\t    },\n\t\n\t    /**\n\t     */\n\t    _renderSubtitle : function( $where ){\n\t        //$where = $where || this.$el;\n\t        //$where.find( '.title' ).replaceWith( ... )\n\t    },\n\t\n\t    /** Fade out the old el, swap in the new contents, then fade in.\n\t     *  @param {Number or String} speed   jq speed to use for rendering effects\n\t     *  @fires rendered when rendered\n\t     */\n\t    _queueNewRender : function( $newRender, speed ) {\n\t        speed = ( speed === undefined )?( this.fxSpeed ):( speed );\n\t        var panel = this;\n\t        panel.log( '_queueNewRender:', $newRender, speed );\n\t\n\t        $( panel ).queue( 'fx', [\n\t            function( next ){ this.$el.fadeOut( speed, next ); },\n\t            function( next ){\n\t                panel._swapNewRender( $newRender );\n\t                next();\n\t            },\n\t            function( next ){ this.$el.fadeIn( speed, next ); },\n\t            function( next ){\n\t                panel.trigger( 'rendered', panel );\n\t                next();\n\t            }\n\t        ]);\n\t    },\n\t\n\t    /** empty out the current el, move the $newRender's children in */\n\t    _swapNewRender : function( $newRender ){\n\t        this.$el.empty().attr( 'class', this.className ).append( $newRender.children() );\n\t        if( this.selecting ){ this.showSelectors( 0 ); }\n\t        return this;\n\t    },\n\t\n\t    /**  */\n\t    _setUpBehaviors : function( $where ){\n\t        $where = $where || this.$el;\n\t        $where.find( '.controls [title]' ).tooltip({ placement: 'bottom' });\n\t        // set up the pupup for actions available when multi selecting\n\t        this._renderMultiselectActionMenu( $where );\n\t        return this;\n\t    },\n\t\n\t    /** render a menu containing the actions available to sets of selected items */\n\t    _renderMultiselectActionMenu : function( $where ){\n\t        $where = $where || this.$el;\n\t        var $menu = $where.find( '.list-action-menu' ),\n\t            actions = this.multiselectActions();\n\t        if( !actions.length ){\n\t            return $menu.empty();\n\t        }\n\t\n\t        var $newMenu = $([\n\t            '<div class=\"list-action-menu btn-group\">',\n\t                '<button class=\"list-action-menu-btn btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n\t                    _l( 'For all selected' ), '...',\n\t                '</button>',\n\t                '<ul class=\"dropdown-menu pull-right\" role=\"menu\">', '</ul>',\n\t            '</div>'\n\t        ].join(''));\n\t        var $actions = actions.map( function( action ){\n\t            var html = [ '<li><a href=\"javascript:void(0);\">', action.html, '</a></li>' ].join( '' );\n\t            return $( html ).click( function( ev ){\n\t                ev.preventDefault();\n\t                return action.func( ev );\n\t            });\n\t        });\n\t        $newMenu.find( 'ul' ).append( $actions );\n\t        $menu.replaceWith( $newMenu );\n\t        return $newMenu;\n\t    },\n\t\n\t    /** return a list of plain objects used to render multiselect actions menu. Each object should have:\n\t     *      html: an html string used as the anchor contents\n\t     *      func: a function called when the anchor is clicked (passed the click event)\n\t     */\n\t    multiselectActions : function(){\n\t        return [];\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ sub-$element shortcuts\n\t    /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n\t    $scrollContainer : function(){\n\t        // override or set via attributes.$scrollContainer\n\t        return this.$el.parent().parent();\n\t    },\n\t    /**  */\n\t    $list : function( $where ){\n\t        return ( $where || this.$el ).find( '> .list-items' );\n\t    },\n\t    /** container where list messages are attached */\n\t    $messages : function( $where ){\n\t        return ( $where || this.$el ).find( '> .controls .messages' );\n\t    },\n\t    /** the message displayed when no views can be shown (no views, none matching search) */\n\t    $emptyMessage : function( $where ){\n\t        return ( $where || this.$el ).find( '> .empty-message' );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ hda sub-views\n\t    /**\n\t     *  @param {jQuery} $whereTo what dom element to prepend the sub-views to\n\t     *  @returns the visible item views\n\t     */\n\t    renderItems : function( $whereTo ){\n\t        $whereTo = $whereTo || this.$el;\n\t        var panel = this;\n\t        panel.log( this + '.renderItems', $whereTo );\n\t\n\t        var $list = panel.$list( $whereTo );\n\t//TODO: free prev. views?\n\t        panel.views = panel._filterCollection().map( function( itemModel ){\n\t//TODO: creates views each time - not neccessarily good\n\t//TODO: pass speed here\n\t                return panel._createItemView( itemModel ).render( 0 );\n\t            });\n\t        //panel.debug( item$els );\n\t        //panel.debug( newViews );\n\t\n\t        $list.empty();\n\t        if( panel.views.length ){\n\t            panel._attachItems( $whereTo );\n\t            panel.$emptyMessage( $whereTo ).hide();\n\t\n\t        } else {\n\t            panel._renderEmptyMessage( $whereTo ).show();\n\t        }\n\t        panel.trigger( 'views:ready', panel.views );\n\t\n\t        return panel.views;\n\t    },\n\t\n\t    /** Filter the collection to only those models that should be currently viewed */\n\t    _filterCollection : function(){\n\t        // override this\n\t        var panel = this;\n\t        return panel.collection.filter( _.bind( panel._filterItem, panel ) );\n\t    },\n\t\n\t    /** Should the model be viewable in the current state?\n\t     *     Checks against this.filters and this.searchFor\n\t     */\n\t    _filterItem : function( model ){\n\t        // override this\n\t        var panel = this;\n\t        return ( _.every( panel.filters.map( function( fn ){ return fn.call( model ); }) ) )\n\t            && ( !panel.searchFor || model.matchesAll( panel.searchFor ) );\n\t    },\n\t\n\t    /** Create a view for a model and set up it's listeners */\n\t    _createItemView : function( model ){\n\t        var ViewClass = this._getItemViewClass( model ),\n\t            options = _.extend( this._getItemViewOptions( model ), {\n\t                    model : model\n\t                }),\n\t            view = new ViewClass( options );\n\t        this._setUpItemViewListeners( view );\n\t        return view;\n\t    },\n\t\n\t    /** Get the bbone view class based on the model */\n\t    _getItemViewClass : function( model ){\n\t        // override this\n\t        return this.viewClass;\n\t    },\n\t\n\t    /** Get the options passed to the new view based on the model */\n\t    _getItemViewOptions : function( model ){\n\t        // override this\n\t        return {\n\t            //logger      : this.logger,\n\t            fxSpeed     : this.fxSpeed,\n\t            expanded    : false,\n\t            selectable  : this.selecting,\n\t            selected    : _.contains( this.selected, model.id ),\n\t            draggable   : this.dragItems\n\t        };\n\t    },\n\t\n\t    /** Set up listeners for new models */\n\t    _setUpItemViewListeners : function( view ){\n\t        var panel = this;\n\t        // send all events to the panel, re-namspaceing them with the view prefix\n\t        view.on( 'all', function(){\n\t            var args = Array.prototype.slice.call( arguments, 0 );\n\t            args[0] = 'view:' + args[0];\n\t            panel.trigger.apply( panel, args );\n\t        });\n\t\n\t        // drag multiple - hijack ev.setData to add all selected items\n\t        view.on( 'draggable:dragstart', function( ev, v ){\n\t            //TODO: set multiple drag data here\n\t            var json = {},\n\t                selected = this.getSelectedModels();\n\t            if( selected.length ){\n\t                json = selected.toJSON();\n\t            } else {\n\t                json = [ v.model.toJSON() ];\n\t            }\n\t            ev.dataTransfer.setData( 'text', JSON.stringify( json ) );\n\t            //ev.dataTransfer.setDragImage( v.el, 60, 60 );\n\t        }, this );\n\t\n\t        // debugging\n\t        //if( this.logger ){\n\t        //    view.on( 'all', function( event ){\n\t        //        this.log( this + '(view)', arguments );\n\t        //    }, this );\n\t        //}\n\t        return panel;\n\t    },\n\t\n\t    /** Attach views in this.views to the model based on $whereTo */\n\t    _attachItems : function( $whereTo ){\n\t        //ASSUMES: $list has been emptied\n\t        this.$list( $whereTo ).append( this.views.map( function( view ){\n\t            return view.$el;\n\t        }));\n\t        return this;\n\t    },\n\t\n\t    /** render the empty/none-found message */\n\t    _renderEmptyMessage : function( $whereTo ){\n\t        this.debug( '_renderEmptyMessage', $whereTo, this.searchFor );\n\t        var text = this.searchFor? this.noneFoundMsg : this.emptyMsg;\n\t        return this.$emptyMessage( $whereTo ).text( text );\n\t    },\n\t\n\t    /** collapse all item views */\n\t    expandAll : function(){\n\t        _.each( this.views, function( view ){\n\t            view.expand();\n\t        });\n\t    },\n\t\n\t    /** collapse all item views */\n\t    collapseAll : function(){\n\t        _.each( this.views, function( view ){\n\t            view.collapse();\n\t        });\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ collection/views syncing\n\t    /** Add a view (if the model should be viewable) to the panel */\n\t    addItemView : function( model, collection, options ){\n\t        this.log( this + '.addItemView:', model );\n\t        var panel = this;\n\t        if( !panel._filterItem( model ) ){ return undefined; }\n\t\n\t        var view = panel._createItemView( model );\n\t        // hide the empty message if only view\n\t        $( view ).queue( 'fx', [\n\t            //TODO:? could poss. pubsub this\n\t            function( next ){ panel.$emptyMessage().fadeOut( panel.fxSpeed, next ); },\n\t            function( next ){\n\t                panel._attachView( view );\n\t                next();\n\t            }\n\t        ]);\n\t        return view;\n\t    },\n\t\n\t    /** internal fn to add view (to both panel.views and panel.$list) */\n\t    _attachView : function( view ){\n\t        var panel = this;\n\t        // override to control where the view is added, how/whether it's rendered\n\t        panel.views.push( view );\n\t        panel.$list().append( view.render( 0 ).$el.hide() );\n\t        panel.trigger( 'view:attached', view );\n\t        view.$el.slideDown( panel.fxSpeed, function(){\n\t            panel.trigger( 'view:attached:rendered' );\n\t        });\n\t    },\n\t\n\t    /** Remove a view from the panel (if found) */\n\t    removeItemView : function( model, collection, options ){\n\t        this.log( this + '.removeItemView:', model );\n\t        var panel = this,\n\t            view = panel.viewFromModel( model );\n\t        if( !view ){ return undefined; }\n\t        panel.views = _.without( panel.views, view );\n\t        panel.trigger( 'view:removed', view );\n\t\n\t        // potentially show the empty message if no views left\n\t        // use anonymous queue here - since remove can happen multiple times\n\t        $({}).queue( 'fx', [\n\t            function( next ){ view.$el.fadeOut( panel.fxSpeed, next ); },\n\t            function( next ){\n\t                view.remove();\n\t                panel.trigger( 'view:removed:rendered' );\n\t                if( !panel.views.length ){\n\t                    panel._renderEmptyMessage().fadeIn( panel.fxSpeed, next );\n\t                } else {\n\t                    next();\n\t                }\n\t            }\n\t        ]);\n\t        return view;\n\t    },\n\t\n\t    /** get views based on model.id */\n\t    viewFromModelId : function( id ){\n\t        for( var i = 0; i < this.views.length; i++ ){\n\t            if( this.views[i].model.id === id ){\n\t                return this.views[i];\n\t            }\n\t        }\n\t        return undefined;\n\t    },\n\t\n\t    /** get views based on model */\n\t    viewFromModel : function( model ){\n\t        if( !model ){ return undefined; }\n\t        return this.viewFromModelId( model.id );\n\t    },\n\t\n\t    /** get views based on model properties */\n\t    viewsWhereModel : function( properties ){\n\t        return this.views.filter( function( view ){\n\t            //return view.model.matches( properties );\n\t//TODO: replace with _.matches (underscore 1.6.0)\n\t            var json = view.model.toJSON();\n\t            for( var key in properties ){\n\t                if( properties.hasOwnProperty( key ) ){\n\t                    if( json[ key ] !== view.model.get( key ) ){\n\t                        return false;\n\t                    }\n\t                }\n\t            }\n\t            return true;\n\t        });\n\t    },\n\t\n\t    /** A range of views between (and including) viewA and viewB */\n\t    viewRange : function( viewA, viewB ){\n\t        if( viewA === viewB ){ return ( viewA )?( [ viewA ] ):( [] ); }\n\t\n\t        var indexA = this.views.indexOf( viewA ),\n\t            indexB = this.views.indexOf( viewB );\n\t\n\t        // handle not found\n\t        if( indexA === -1 || indexB === -1 ){\n\t            if( indexA === indexB ){ return []; }\n\t            return ( indexA === -1 )?( [ viewB ] ):( [ viewA ] );\n\t        }\n\t        // reverse if indeces are\n\t        //note: end inclusive\n\t        return ( indexA < indexB )?\n\t            this.views.slice( indexA, indexB + 1 ) :\n\t            this.views.slice( indexB, indexA + 1 );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ searching\n\t    /** render a search input for filtering datasets shown\n\t     *      (see SearchableMixin in base-mvc for implementation of the actual searching)\n\t     *      return will start the search\n\t     *      esc will clear the search\n\t     *      clicking the clear button will clear the search\n\t     *      uses searchInput in ui.js\n\t     */\n\t    _renderSearch : function( $where ){\n\t        $where.find( '.controls .search-input' ).searchInput({\n\t            placeholder     : this.searchPlaceholder,\n\t            initialVal      : this.searchFor,\n\t            onfirstsearch   : _.bind( this._firstSearch, this ),\n\t            onsearch        : _.bind( this.searchItems, this ),\n\t            onclear         : _.bind( this.clearSearch, this )\n\t        });\n\t        return $where;\n\t    },\n\t\n\t    /** What to do on the first search entered */\n\t    _firstSearch : function( searchFor ){\n\t        // override to load model details if necc.\n\t        this.log( 'onFirstSearch', searchFor );\n\t        return this.searchItems( searchFor );\n\t    },\n\t\n\t    /** filter view list to those that contain the searchFor terms */\n\t    searchItems : function( searchFor ){\n\t        this.searchFor = searchFor;\n\t        this.trigger( 'search:searching', searchFor, this );\n\t        this.renderItems();\n\t        this.$( '> .controls .search-query' ).val( searchFor );\n\t        return this;\n\t    },\n\t\n\t    /** clear the search filters and show all views that are normally shown */\n\t    clearSearch : function( searchFor ){\n\t        //this.log( 'onSearchClear', this );\n\t        this.searchFor = '';\n\t        this.trigger( 'search:clear', this );\n\t        this.$( '> .controls .search-query' ).val( '' );\n\t        this.renderItems();\n\t        return this;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ selection\n\t    /** show selectors on all visible itemViews and associated controls */\n\t    showSelectors : function( speed ){\n\t        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n\t        this.selecting = true;\n\t        this.$( '.list-actions' ).slideDown( speed );\n\t        _.each( this.views, function( view ){\n\t            view.showSelector( speed );\n\t        });\n\t        //this.selected = [];\n\t        //this.lastSelected = null;\n\t    },\n\t\n\t    /** hide selectors on all visible itemViews and associated controls */\n\t    hideSelectors : function( speed ){\n\t        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n\t        this.selecting = false;\n\t        this.$( '.list-actions' ).slideUp( speed );\n\t        _.each( this.views, function( view ){\n\t            view.hideSelector( speed );\n\t        });\n\t        this.selected = [];\n\t        this.lastSelected = null;\n\t    },\n\t\n\t    /** show or hide selectors on all visible itemViews and associated controls */\n\t    toggleSelectors : function(){\n\t        if( !this.selecting ){\n\t            this.showSelectors();\n\t        } else {\n\t            this.hideSelectors();\n\t        }\n\t    },\n\t\n\t    /** select all visible items */\n\t    selectAll : function( event ){\n\t        _.each( this.views, function( view ){\n\t            view.select( event );\n\t        });\n\t    },\n\t\n\t    /** deselect all visible items */\n\t    deselectAll : function( event ){\n\t        this.lastSelected = null;\n\t        _.each( this.views, function( view ){\n\t            view.deselect( event );\n\t        });\n\t    },\n\t\n\t    /** select a range of datasets between A and B */\n\t    selectRange : function( viewA, viewB ){\n\t        var range = this.viewRange( viewA, viewB );\n\t        _.each( range, function( view ){\n\t            view.select();\n\t        });\n\t        return range;\n\t    },\n\t\n\t    /** return an array of all currently selected itemViews */\n\t    getSelectedViews : function(){\n\t        return _.filter( this.views, function( v ){\n\t            return v.selected;\n\t        });\n\t    },\n\t\n\t    /** return a collection of the models of all currenly selected items */\n\t    getSelectedModels : function(){\n\t        return new this.collection.constructor( _.map( this.getSelectedViews(), function( view ){\n\t            return view.model;\n\t        }));\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ loading indicator\n\t//TODO: questionable\n\t    /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n\t    _showLoadingIndicator : function( msg, speed, callback ){\n\t        this.debug( '_showLoadingIndicator', this.indicator, msg, speed, callback );\n\t        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n\t        if( !this.indicator ){\n\t            this.indicator = new LoadingIndicator( this.$el, this.$el.parent() );\n\t            this.debug( '\\t created', this.indicator );\n\t        }\n\t        if( !this.$el.is( ':visible' ) ){\n\t            this.indicator.show( 0, callback );\n\t        } else {\n\t            this.$el.fadeOut( speed );\n\t            this.indicator.show( msg, speed, callback );\n\t        }\n\t    },\n\t\n\t    /** hide the loading indicator */\n\t    _hideLoadingIndicator : function( speed, callback ){\n\t        this.debug( '_hideLoadingIndicator', this.indicator, speed, callback );\n\t        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n\t        if( this.indicator ){\n\t            this.indicator.hide( speed, callback );\n\t        }\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ scrolling\n\t    /** get the current scroll position of the panel in its parent */\n\t    scrollPosition : function(){\n\t        return this.$scrollContainer().scrollTop();\n\t    },\n\t\n\t    /** set the current scroll position of the panel in its parent */\n\t    scrollTo : function( pos, speed ){\n\t        speed = speed || 0;\n\t        this.$scrollContainer().animate({ scrollTop: pos }, speed );\n\t        return this;\n\t    },\n\t\n\t    /** Scrolls the panel to the top. */\n\t    scrollToTop : function( speed ){\n\t        return this.scrollTo( 0, speed );\n\t    },\n\t\n\t    /**  */\n\t    scrollToItem : function( view, speed ){\n\t        if( !view ){ return this; }\n\t        //var itemTop = view.$el.offset().top;\n\t        var itemTop = view.$el.position().top;\n\t        return this.scrollTo( itemTop, speed );\n\t    },\n\t\n\t    /** Scrolls the panel to show the content with the given id. */\n\t    scrollToId : function( id, speed ){\n\t        return this.scrollToItem( this.viewFromModelId( id ), speed );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ panel events\n\t    /** event map */\n\t    events : {\n\t        'click .select-all'     : 'selectAll',\n\t        'click .deselect-all'   : 'deselectAll'\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ misc\n\t    /** Return a string rep of the panel */\n\t    toString : function(){\n\t        return 'ListPanel(' + this.collection + ')';\n\t    }\n\t});\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tListPanel.prototype.templates = (function(){\n\t//TODO: move to require text! plugin\n\t\n\t    var elTemplate = BASE_MVC.wrapTemplate([\n\t        // temp container\n\t        '<div>',\n\t            '<div class=\"controls\"></div>',\n\t            '<div class=\"list-items\"></div>',\n\t            '<div class=\"empty-message infomessagesmall\"></div>',\n\t        '</div>'\n\t    ]);\n\t\n\t    var controlsTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"controls\">',\n\t            '<div class=\"title\">',\n\t                '<div class=\"name\"><%= view.title %></div>',\n\t            '</div>',\n\t            '<div class=\"subtitle\"><%= view.subtitle %></div>',\n\t            // buttons, controls go here\n\t            '<div class=\"actions\"></div>',\n\t            // deleted msg, etc.\n\t            '<div class=\"messages\"></div>',\n\t\n\t            '<div class=\"search\">',\n\t                '<div class=\"search-input\"></div>',\n\t            '</div>',\n\t\n\t            // show when selectors are shown\n\t            '<div class=\"list-actions\">',\n\t                '<div class=\"btn-group\">',\n\t                    '<button class=\"select-all btn btn-default\"',\n\t                            'data-mode=\"select\">', _l( 'All' ), '</button>',\n\t                    '<button class=\"deselect-all btn btn-default\"',\n\t                            'data-mode=\"select\">', _l( 'None' ), '</button>',\n\t                '</div>',\n\t                '<div class=\"list-action-menu btn-group\">',\n\t                '</div>',\n\t            '</div>',\n\t        '</div>'\n\t    ]);\n\t\n\t    return {\n\t        el          : elTemplate,\n\t        controls    : controlsTemplate\n\t    };\n\t}());\n\t\n\t\n\t//=============================================================================\n\t/** View for a model that has a sub-collection (e.g. History, DatasetCollection)\n\t *  Allows:\n\t *      the model to be reset\n\t *      auto assign panel.collection to panel.model[ panel.modelCollectionKey ]\n\t *\n\t */\n\tvar ModelListPanel = ListPanel.extend({\n\t\n\t    /** key of attribute in model to assign to this.collection */\n\t    modelCollectionKey : 'contents',\n\t\n\t    initialize : function( attributes ){\n\t        ListPanel.prototype.initialize.call( this, attributes );\n\t        this.selecting = ( attributes.selecting !== undefined )? attributes.selecting : false;\n\t\n\t        this.setModel( this.model, attributes );\n\t    },\n\t\n\t    /** release/free/shutdown old models and set up panel for new models\n\t     *  @fires new-model with the panel as parameter\n\t     */\n\t    setModel : function( model, attributes ){\n\t        attributes = attributes || {};\n\t        this.debug( this + '.setModel:', model, attributes );\n\t\n\t        this.freeModel();\n\t        this.freeViews();\n\t\n\t        if( model ){\n\t            var oldModelId = this.model? this.model.get( 'id' ): null;\n\t\n\t            // set up the new model with user, logger, storage, events\n\t            this.model = model;\n\t            if( this.logger ){\n\t                this.model.logger = this.logger;\n\t            }\n\t            this._setUpModelListeners();\n\t\n\t//TODO: relation btwn model, collection becoming tangled here\n\t            // free the collection, and assign the new collection to either\n\t            //  the model[ modelCollectionKey ], attributes.collection, or an empty vanilla collection\n\t            this.collection.off();\n\t            this.collection = ( this.model[ this.modelCollectionKey ] )?\n\t                this.model[ this.modelCollectionKey ]:\n\t                ( attributes.collection || ( new this.collectionClass([]) ) );\n\t            this._setUpCollectionListeners();\n\t\n\t            if( oldModelId && model.get( 'id' ) !== oldModelId  ){\n\t                this.trigger( 'new-model', this );\n\t            }\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /** free the current model and all listeners for it, free any views for the model */\n\t    freeModel : function(){\n\t        // stop/release the previous model, and clear cache to sub-views\n\t        if( this.model ){\n\t            this.stopListening( this.model );\n\t            //TODO: see base-mvc\n\t            //this.model.free();\n\t            //this.model = null;\n\t        }\n\t        return this;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ listening\n\t    /** listening for model events */\n\t    _setUpModelListeners : function(){\n\t        // override\n\t        this.log( this + '._setUpModelListeners', this.model );\n\t        // bounce model errors up to the panel\n\t        this.model.on( 'error', function(){\n\t            var args = Array.prototype.slice.call( arguments, 0 );\n\t            //args.unshift( 'model:error' );\n\t            args.unshift( 'error' );\n\t            this.trigger.apply( this, args );\n\t        }, this );\n\t        return this;\n\t    },\n\t\n\t    /** Build a temp div containing the new children for the view's $el.\n\t     */\n\t    _renderControls : function( $newRender ){\n\t        this.debug( this + '(ListPanel)._renderControls' );\n\t        var json = this.model? this.model.toJSON() : {},\n\t            $controls = $( this.templates.controls( json, this ) );\n\t        $newRender.find( '.controls' ).replaceWith( $controls );\n\t        return $controls;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ misc\n\t    /** Return a string rep of the panel */\n\t    toString : function(){\n\t        return 'ModelListPanel(' + this.model + ')';\n\t    }\n\t});\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tModelListPanel.prototype.templates = (function(){\n\t//TODO: move to require text! plugin\n\t\n\t    var controlsTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"controls\">',\n\t            '<div class=\"title\">',\n\t//TODO: this is really the only difference - consider factoring titlebar out\n\t                '<div class=\"name\"><%= model.name %></div>',\n\t            '</div>',\n\t            '<div class=\"subtitle\"><%= view.subtitle %></div>',\n\t            '<div class=\"actions\"></div>',\n\t            '<div class=\"messages\"></div>',\n\t\n\t            '<div class=\"search\">',\n\t                '<div class=\"search-input\"></div>',\n\t            '</div>',\n\t\n\t            '<div class=\"list-actions\">',\n\t                '<div class=\"btn-group\">',\n\t                    '<button class=\"select-all btn btn-default\"',\n\t                            'data-mode=\"select\">', _l( 'All' ), '</button>',\n\t                    '<button class=\"deselect-all btn btn-default\"',\n\t                            'data-mode=\"select\">', _l( 'None' ), '</button>',\n\t                '</div>',\n\t                '<div class=\"list-action-menu btn-group\">',\n\t                '</div>',\n\t            '</div>',\n\t        '</div>'\n\t    ]);\n\t\n\t    return _.extend( _.clone( ListPanel.prototype.templates ), {\n\t        controls : controlsTemplate\n\t    });\n\t}());\n\t\n\t\n\t//=============================================================================\n\t    return {\n\t        ListPanel      : ListPanel,\n\t        ModelListPanel : ModelListPanel\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( baseMVC, _l ){\n\t// =============================================================================\n\t/** A view on any model that has a 'tags' attribute (a list of tag strings)\n\t *      Incorporates the select2 jQuery plugin for tags display/editing:\n\t *      http://ivaynberg.github.io/select2/\n\t */\n\tvar TagsEditor = Backbone.View\n\t        .extend( baseMVC.LoggableMixin )\n\t        .extend( baseMVC.HiddenUntilActivatedViewMixin ).extend({\n\t\n\t    tagName     : 'div',\n\t    className   : 'tags-display',\n\t\n\t    /** Set up listeners, parse options */\n\t    initialize : function( options ){\n\t        //console.debug( this, options );\n\t        // only listen to the model only for changes to tags - re-render\n\t        this.listenTo( this.model, 'change:tags', function(){\n\t            this.render();\n\t        });\n\t        this.hiddenUntilActivated( options.$activator, options );\n\t    },\n\t\n\t    /** Build the DOM elements, call select to on the created input, and set up behaviors */\n\t    render : function(){\n\t        var view = this;\n\t        this.$el.html( this._template() );\n\t\n\t        this.$input().select2({\n\t            placeholder : 'Add tags',\n\t            width       : '100%',\n\t            tags : function(){\n\t                // initialize possible tags in the dropdown based on all the tags the user has used so far\n\t                return view._getTagsUsed();\n\t            }\n\t        });\n\t\n\t        this._setUpBehaviors();\n\t        return this;\n\t    },\n\t\n\t    /** @returns {String} the html text used to build the view's DOM */\n\t    _template : function(){\n\t        return [\n\t            //TODO: make prompt optional\n\t            '<label class=\"prompt\">', _l( 'Tags' ), '</label>',\n\t            // set up initial tags by adding as CSV to input vals (necc. to init select2)\n\t            '<input class=\"tags-input\" value=\"', this.tagsToCSV(), '\" />'\n\t        ].join( '' );\n\t    },\n\t\n\t    /** @returns {String} the sorted, comma-separated tags from the model */\n\t    tagsToCSV : function(){\n\t        var tagsArray = this.model.get( 'tags' );\n\t        if( !_.isArray( tagsArray ) || _.isEmpty( tagsArray ) ){\n\t            return '';\n\t        }\n\t        return tagsArray.map( function( tag ){\n\t            return _.escape( tag );\n\t        }).sort().join( ',' );\n\t    },\n\t\n\t    /** @returns {jQuery} the input for this view */\n\t    $input : function(){\n\t        return this.$el.find( 'input.tags-input' );\n\t    },\n\t\n\t    /** @returns {String[]} all tags used by the current user */\n\t    _getTagsUsed : function(){\n\t//TODO: global\n\t        return Galaxy.currUser.get( 'tags_used' );\n\t    },\n\t\n\t    /** set up any event listeners on the view's DOM (mostly handled by select2) */\n\t    _setUpBehaviors : function(){\n\t        var view = this;\n\t        this.$input().on( 'change', function( event ){\n\t            // save the model's tags in either remove or added event\n\t            view.model.save({ tags: event.val }, { silent: true });\n\t            // if it's new, add the tag to the users tags\n\t            if( event.added ){\n\t                //??: solve weird behavior in FF on test.galaxyproject.org where\n\t                //  event.added.text is string object: 'String{ 0=\"o\", 1=\"n\", 2=\"e\" }'\n\t                view._addNewTagToTagsUsed( event.added.text + '' );\n\t            }\n\t        });\n\t    },\n\t\n\t    /** add a new tag (if not already there) to the list of all tags used by the user\n\t     *  @param {String} newTag  the tag to add to the list of used\n\t     */\n\t    _addNewTagToTagsUsed : function( newTag ){\n\t//TODO: global\n\t        var tagsUsed = Galaxy.currUser.get( 'tags_used' );\n\t        if( !_.contains( tagsUsed, newTag ) ){\n\t            tagsUsed.push( newTag );\n\t            tagsUsed.sort();\n\t            Galaxy.currUser.set( 'tags_used', tagsUsed );\n\t        }\n\t    },\n\t\n\t    /** shut down event listeners and remove this view's DOM */\n\t    remove : function(){\n\t        this.$input.off();\n\t        this.stopListening( this.model );\n\t        Backbone.View.prototype.remove.call( this );\n\t    },\n\t\n\t    /** string rep */\n\t    toString : function(){ return [ 'TagsEditor(', this.model + '', ')' ].join(''); }\n\t});\n\t\n\t// =============================================================================\n\treturn {\n\t    TagsEditor : TagsEditor\n\t};\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3)))\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Handlebars, Backbone, $) {/**\n\t * Model, view, and controller objects for Galaxy tools and tool panel.\n\t */\n\t\n\t !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(3),\n\t    __webpack_require__(18),\n\t    __webpack_require__(15),\n\t    __webpack_require__(28),\n\t    __webpack_require__(117),\n\t    __webpack_require__(118),\n\t    __webpack_require__(116),\n\t    __webpack_require__(119),\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function(_, util, data, ToolsForm, tool_form, tool_link, panel_section, tool_search) {\n\tconsole.debug( tool_form, tool_link, panel_section, tool_search );\n\t\n\t// TODO: certainly not the way to do this\n\tvar _templates = {\n\t    tool_form       : tool_form? tool_form.Handlebars.templates.tool_form : Handlebars.templates.tool_form,\n\t    tool_link       : tool_link? tool_link.Handlebars.templates.tool_link : Handlebars.templates.tool_link,\n\t    panel_section   : panel_section? panel_section.Handlebars.templates.panel_section : Handlebars.templates.panel_section,\n\t    tool_search     : tool_search? tool_search.Handlebars.templates.tool_search : Handlebars.templates.tool_search\n\t};\n\t\n\t/**\n\t * Mixin for tracking model visibility.\n\t */\n\tvar VisibilityMixin = {\n\t    hidden: false,\n\t\n\t    show: function() {\n\t        this.set(\"hidden\", false);\n\t    },\n\t\n\t    hide: function() {\n\t        this.set(\"hidden\", true);\n\t    },\n\t\n\t    toggle: function() {\n\t        this.set(\"hidden\", !this.get(\"hidden\"));\n\t    },\n\t\n\t    is_visible: function() {\n\t        return !this.attributes.hidden;\n\t    }\n\t\n\t};\n\t\n\t/**\n\t * A tool parameter.\n\t */\n\tvar ToolParameter = Backbone.Model.extend({\n\t    defaults: {\n\t        name: null,\n\t        label: null,\n\t        type: null,\n\t        value: null,\n\t        html: null,\n\t        num_samples: 5\n\t    },\n\t\n\t    initialize: function(options) {\n\t        this.attributes.html = unescape(this.attributes.html);\n\t    },\n\t\n\t    copy: function() {\n\t        return new ToolParameter(this.toJSON());\n\t    },\n\t\n\t    set_value: function(value) {\n\t        this.set('value', value || '');\n\t    }\n\t});\n\t\n\tvar ToolParameterCollection = Backbone.Collection.extend({\n\t    model: ToolParameter\n\t});\n\t\n\t/**\n\t * A data tool parameter.\n\t */\n\tvar DataToolParameter = ToolParameter.extend({});\n\t\n\t/**\n\t * An integer tool parameter.\n\t */\n\tvar IntegerToolParameter = ToolParameter.extend({\n\t    set_value: function(value) {\n\t        this.set('value', parseInt(value, 10));\n\t    },\n\t\n\t    /**\n\t     * Returns samples from a tool input.\n\t     */\n\t    get_samples: function() {\n\t        return d3.scale.linear()\n\t                        .domain([this.get('min'), this.get('max')])\n\t                        .ticks(this.get('num_samples'));\n\t    }\n\t});\n\t\n\tvar FloatToolParameter = IntegerToolParameter.extend({\n\t    set_value: function(value) {\n\t        this.set('value', parseFloat(value));\n\t    }\n\t});\n\t\n\t/**\n\t * A select tool parameter.\n\t */\n\tvar SelectToolParameter = ToolParameter.extend({\n\t    /**\n\t     * Returns tool options.\n\t     */\n\t    get_samples: function() {\n\t        return _.map(this.get('options'), function(option) {\n\t            return option[0];\n\t        });\n\t    }\n\t});\n\t\n\t// Set up dictionary of parameter types.\n\tToolParameter.subModelTypes = {\n\t    'integer': IntegerToolParameter,\n\t    'float': FloatToolParameter,\n\t    'data': DataToolParameter,\n\t    'select': SelectToolParameter\n\t};\n\t\n\t/**\n\t * A Galaxy tool.\n\t */\n\tvar Tool = Backbone.Model.extend({\n\t    // Default attributes.\n\t    defaults: {\n\t        id: null,\n\t        name: null,\n\t        description: null,\n\t        target: null,\n\t        inputs: [],\n\t        outputs: []\n\t    },\n\t\n\t    urlRoot: galaxy_config.root + 'api/tools',\n\t\n\t    initialize: function(options) {\n\t\n\t        // Set parameters.\n\t        this.set('inputs', new ToolParameterCollection(_.map(options.inputs, function(p) {\n\t            var p_class = ToolParameter.subModelTypes[p.type] || ToolParameter;\n\t            return new p_class(p);\n\t        })));\n\t    },\n\t\n\t    /**\n\t     *\n\t     */\n\t    toJSON: function() {\n\t        var rval = Backbone.Model.prototype.toJSON.call(this);\n\t\n\t        // Convert inputs to JSON manually.\n\t        rval.inputs = this.get('inputs').map(function(i) { return i.toJSON(); });\n\t        return rval;\n\t    },\n\t\n\t    /**\n\t     * Removes inputs of a particular type; this is useful because not all inputs can be handled by\n\t     * client and server yet.\n\t     */\n\t    remove_inputs: function(types) {\n\t        var tool = this,\n\t            incompatible_inputs = tool.get('inputs').filter( function(input) {\n\t                return ( types.indexOf( input.get('type') ) !== -1);\n\t            });\n\t        tool.get('inputs').remove(incompatible_inputs);\n\t    },\n\t\n\t    /**\n\t     * Returns object copy, optionally including only inputs that can be sampled.\n\t     */\n\t    copy: function(only_samplable_inputs) {\n\t        var copy = new Tool(this.toJSON());\n\t\n\t        // Return only samplable inputs if flag is set.\n\t        if (only_samplable_inputs) {\n\t            var valid_inputs = new Backbone.Collection();\n\t            copy.get('inputs').each(function(input) {\n\t                if (input.get_samples()) {\n\t                    valid_inputs.push(input);\n\t                }\n\t            });\n\t            copy.set('inputs', valid_inputs);\n\t        }\n\t\n\t        return copy;\n\t    },\n\t\n\t    apply_search_results: function(results) {\n\t        ( _.indexOf(results, this.attributes.id) !== -1 ? this.show() : this.hide() );\n\t        return this.is_visible();\n\t    },\n\t\n\t    /**\n\t     * Set a tool input's value.\n\t     */\n\t    set_input_value: function(name, value) {\n\t        this.get('inputs').find(function(input) {\n\t            return input.get('name') === name;\n\t        }).set('value', value);\n\t    },\n\t\n\t    /**\n\t     * Set many input values at once.\n\t     */\n\t    set_input_values: function(inputs_dict) {\n\t        var self = this;\n\t        _.each(_.keys(inputs_dict), function(input_name) {\n\t            self.set_input_value(input_name, inputs_dict[input_name]);\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Run tool; returns a Deferred that resolves to the tool's output(s).\n\t     */\n\t    run: function() {\n\t        return this._run();\n\t    },\n\t\n\t    /**\n\t     * Rerun tool using regions and a target dataset.\n\t     */\n\t    rerun: function(target_dataset, regions) {\n\t        return this._run({\n\t            action: 'rerun',\n\t            target_dataset_id: target_dataset.id,\n\t            regions: regions\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Returns input dict for tool's inputs.\n\t     */\n\t    get_inputs_dict: function() {\n\t        var input_dict = {};\n\t        this.get('inputs').each(function(input) {\n\t            input_dict[input.get('name')] = input.get('value');\n\t        });\n\t        return input_dict;\n\t    },\n\t\n\t    /**\n\t     * Run tool; returns a Deferred that resolves to the tool's output(s).\n\t     * NOTE: this method is a helper method and should not be called directly.\n\t     */\n\t    _run: function(additional_params) {\n\t        // Create payload.\n\t        var payload = _.extend({\n\t                tool_id: this.id,\n\t                inputs: this.get_inputs_dict()\n\t            }, additional_params);\n\t\n\t        // Because job may require indexing datasets, use server-side\n\t        // deferred to ensure that job is run. Also use deferred that\n\t        // resolves to outputs from tool.\n\t        var run_deferred = $.Deferred(),\n\t            ss_deferred = new util.ServerStateDeferred({\n\t            ajax_settings: {\n\t                url: this.urlRoot,\n\t                data: JSON.stringify(payload),\n\t                dataType: \"json\",\n\t                contentType: 'application/json',\n\t                type: \"POST\"\n\t            },\n\t            interval: 2000,\n\t            success_fn: function(response) {\n\t                return response !== \"pending\";\n\t            }\n\t        });\n\t\n\t        // Run job and resolve run_deferred to tool outputs.\n\t        $.when(ss_deferred.go()).then(function(result) {\n\t            run_deferred.resolve(new data.DatasetCollection(result));\n\t        });\n\t        return run_deferred;\n\t    }\n\t});\n\t_.extend(Tool.prototype, VisibilityMixin);\n\t\n\t/**\n\t * Tool view.\n\t */\n\tvar ToolView = Backbone.View.extend({\n\t\n\t});\n\t\n\t/**\n\t * Wrap collection of tools for fast access/manipulation.\n\t */\n\tvar ToolCollection = Backbone.Collection.extend({\n\t    model: Tool\n\t});\n\t\n\t/**\n\t * Label or section header in tool panel.\n\t */\n\tvar ToolSectionLabel = Backbone.Model.extend(VisibilityMixin);\n\t\n\t/**\n\t * Section of tool panel with elements (labels and tools).\n\t */\n\tvar ToolSection = Backbone.Model.extend({\n\t    defaults: {\n\t        elems: [],\n\t        open: false\n\t    },\n\t\n\t    clear_search_results: function() {\n\t        _.each(this.attributes.elems, function(elt) {\n\t            elt.show();\n\t        });\n\t\n\t        this.show();\n\t        this.set(\"open\", false);\n\t    },\n\t\n\t    apply_search_results: function(results) {\n\t        var all_hidden = true,\n\t            cur_label;\n\t        _.each(this.attributes.elems, function(elt) {\n\t            if (elt instanceof ToolSectionLabel) {\n\t                cur_label = elt;\n\t                cur_label.hide();\n\t            }\n\t            else if (elt instanceof Tool) {\n\t                if (elt.apply_search_results(results)) {\n\t                    all_hidden = false;\n\t                    if (cur_label) {\n\t                        cur_label.show();\n\t                    }\n\t                }\n\t            }\n\t        });\n\t\n\t        if (all_hidden) {\n\t            this.hide();\n\t        }\n\t        else {\n\t            this.show();\n\t            this.set(\"open\", true);\n\t        }\n\t    }\n\t});\n\t_.extend(ToolSection.prototype, VisibilityMixin);\n\t\n\t/**\n\t * Tool search that updates results when query is changed. Result value of null\n\t * indicates that query was not run; if not null, results are from search using\n\t * query.\n\t */\n\tvar ToolSearch = Backbone.Model.extend({\n\t    defaults: {\n\t        search_hint_string: \"search tools\",\n\t        min_chars_for_search: 3,\n\t        spinner_url: \"\",\n\t        clear_btn_url: \"\",\n\t        search_url: \"\",\n\t        visible: true,\n\t        query: \"\",\n\t        results: null,\n\t        // ESC (27) will clear the input field and tool search filters\n\t        clear_key: 27\n\t    },\n\t\n\t    urlRoot: galaxy_config.root + 'api/tools',\n\t\n\t    initialize: function() {\n\t        this.on(\"change:query\", this.do_search);\n\t    },\n\t\n\t    /**\n\t     * Do the search and update the results.\n\t     */\n\t    do_search: function() {\n\t        var query = this.attributes.query;\n\t\n\t        // If query is too short, do not search.\n\t        if (query.length < this.attributes.min_chars_for_search) {\n\t            this.set(\"results\", null);\n\t            return;\n\t        }\n\t\n\t        // Do search via AJAX.\n\t        var q = query;\n\t        // Stop previous ajax-request\n\t        if (this.timer) {\n\t            clearTimeout(this.timer);\n\t        }\n\t        // Start a new ajax-request in X ms\n\t        $(\"#search-clear-btn\").hide();\n\t        $(\"#search-spinner\").show();\n\t        var self = this;\n\t        this.timer = setTimeout(function () {\n\t            // log the search to analytics if present\n\t            if ( typeof ga !== 'undefined' ) {\n\t                ga( 'send', 'pageview', galaxy_config.root + '?q=' + q );\n\t            }\n\t            $.get( self.urlRoot, { q: q }, function (data) {\n\t                self.set(\"results\", data);\n\t                $(\"#search-spinner\").hide();\n\t                $(\"#search-clear-btn\").show();\n\t            }, \"json\" );\n\t        }, 400 );\n\t    },\n\t\n\t    clear_search: function() {\n\t        this.set(\"query\", \"\");\n\t        this.set(\"results\", null);\n\t    }\n\t\n\t});\n\t_.extend(ToolSearch.prototype, VisibilityMixin);\n\t\n\t/**\n\t * Tool Panel.\n\t */\n\tvar ToolPanel = Backbone.Model.extend({\n\t\n\t    initialize: function(options) {\n\t        this.attributes.tool_search = options.tool_search;\n\t        this.attributes.tool_search.on(\"change:results\", this.apply_search_results, this);\n\t        this.attributes.tools = options.tools;\n\t        this.attributes.layout = new Backbone.Collection( this.parse(options.layout) );\n\t    },\n\t\n\t    /**\n\t     * Parse tool panel dictionary and return collection of tool panel elements.\n\t     */\n\t    parse: function(response) {\n\t        // Recursive function to parse tool panel elements.\n\t        var self = this,\n\t            // Helper to recursively parse tool panel.\n\t            parse_elt = function(elt_dict) {\n\t                var type = elt_dict.model_class;\n\t                // There are many types of tools; for now, anything that ends in 'Tool'\n\t                // is treated as a generic tool.\n\t                if ( type.indexOf('Tool') === type.length - 4 ) {\n\t                    return self.attributes.tools.get(elt_dict.id);\n\t                }\n\t                else if (type === 'ToolSection') {\n\t                    // Parse elements.\n\t                    var elems = _.map(elt_dict.elems, parse_elt);\n\t                    elt_dict.elems = elems;\n\t                    return new ToolSection(elt_dict);\n\t                }\n\t                else if (type === 'ToolSectionLabel') {\n\t                    return new ToolSectionLabel(elt_dict);\n\t                }\n\t            };\n\t\n\t        return _.map(response, parse_elt);\n\t    },\n\t\n\t    clear_search_results: function() {\n\t        this.get('layout').each(function(panel_elt) {\n\t            if (panel_elt instanceof ToolSection) {\n\t                panel_elt.clear_search_results();\n\t            }\n\t            else {\n\t                // Label or tool, so just show.\n\t                panel_elt.show();\n\t            }\n\t        });\n\t    },\n\t\n\t    apply_search_results: function() {\n\t        var results = this.get('tool_search').get('results');\n\t        if (results === null) {\n\t            this.clear_search_results();\n\t            return;\n\t        }\n\t\n\t        var cur_label = null;\n\t        this.get('layout').each(function(panel_elt) {\n\t            if (panel_elt instanceof ToolSectionLabel) {\n\t                cur_label = panel_elt;\n\t                cur_label.hide();\n\t            }\n\t            else if (panel_elt instanceof Tool) {\n\t                if (panel_elt.apply_search_results(results)) {\n\t                    if (cur_label) {\n\t                        cur_label.show();\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                // Starting new section, so clear current label.\n\t                cur_label = null;\n\t                panel_elt.apply_search_results(results);\n\t            }\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * View classes for Galaxy tools and tool panel.\n\t *\n\t * Views use precompiled Handlebars templates for rendering. Views update as needed\n\t * based on (a) model/collection events and (b) user interactions; in this sense,\n\t * they are controllers are well and the HTML is the real view in the MVC architecture.\n\t */\n\t\n\t/**\n\t * Base view that handles visibility based on model's hidden attribute.\n\t */\n\tvar BaseView = Backbone.View.extend({\n\t    initialize: function() {\n\t        this.model.on(\"change:hidden\", this.update_visible, this);\n\t        this.update_visible();\n\t    },\n\t    update_visible: function() {\n\t        ( this.model.attributes.hidden ? this.$el.hide() : this.$el.show() );\n\t    }\n\t});\n\t\n\t/**\n\t * Link to a tool.\n\t */\n\tvar ToolLinkView = BaseView.extend({\n\t    tagName: 'div',\n\t\n\t    render: function() {\n\t        // create element\n\t        var $link = $('<div/>');\n\t        $link.append(_templates.tool_link(this.model.toJSON()));\n\t\n\t        // open upload dialog for upload tool\n\t        if (this.model.id === 'upload1') {\n\t            $link.find('a').on('click', function(e) {\n\t                e.preventDefault();\n\t                Galaxy.upload.show();\n\t            });\n\t        }\n\t\n\t        // regular tools\n\t        if ( this.model.id !== 'upload1' && this.model.get( 'model_class' ) === 'Tool' ) {\n\t            var self = this;\n\t            $link.find('a').on('click', function(e) {\n\t                e.preventDefault();\n\t                var form = new ToolsForm.View( { id : self.model.id, version : self.model.get('version') } );\n\t                form.deferred.execute(function() {\n\t                    Galaxy.app.display( form );\n\t                });\n\t            });\n\t        }\n\t\n\t        // add element\n\t        this.$el.append($link);\n\t        return this;\n\t    }\n\t});\n\t\n\t/**\n\t * Panel label/section header.\n\t */\n\tvar ToolSectionLabelView = BaseView.extend({\n\t    tagName: 'div',\n\t    className: 'toolPanelLabel',\n\t\n\t    render: function() {\n\t        this.$el.append( $(\"<span/>\").text(this.model.attributes.text) );\n\t        return this;\n\t    }\n\t});\n\t\n\t/**\n\t * Panel section.\n\t */\n\tvar ToolSectionView = BaseView.extend({\n\t    tagName: 'div',\n\t    className: 'toolSectionWrapper',\n\t\n\t    initialize: function() {\n\t        BaseView.prototype.initialize.call(this);\n\t        this.model.on(\"change:open\", this.update_open, this);\n\t    },\n\t\n\t    render: function() {\n\t        // Build using template.\n\t        this.$el.append( _templates.panel_section(this.model.toJSON()) );\n\t\n\t        // Add tools to section.\n\t        var section_body = this.$el.find(\".toolSectionBody\");\n\t        _.each(this.model.attributes.elems, function(elt) {\n\t            if (elt instanceof Tool) {\n\t                var tool_view = new ToolLinkView({model: elt, className: \"toolTitle\"});\n\t                tool_view.render();\n\t                section_body.append(tool_view.$el);\n\t            }\n\t            else if (elt instanceof ToolSectionLabel) {\n\t                var label_view = new ToolSectionLabelView({model: elt});\n\t                label_view.render();\n\t                section_body.append(label_view.$el);\n\t            }\n\t            else {\n\t                // TODO: handle nested section bodies?\n\t            }\n\t        });\n\t        return this;\n\t    },\n\t\n\t    events: {\n\t        'click .toolSectionTitle > a': 'toggle'\n\t    },\n\t\n\t    /**\n\t     * Toggle visibility of tool section.\n\t     */\n\t    toggle: function() {\n\t        this.model.set(\"open\", !this.model.attributes.open);\n\t    },\n\t\n\t    /**\n\t     * Update whether section is open or close.\n\t     */\n\t    update_open: function() {\n\t        (this.model.attributes.open ?\n\t            this.$el.children(\".toolSectionBody\").slideDown(\"fast\") :\n\t            this.$el.children(\".toolSectionBody\").slideUp(\"fast\")\n\t        );\n\t    }\n\t});\n\t\n\tvar ToolSearchView = Backbone.View.extend({\n\t    tagName: 'div',\n\t    id: 'tool-search',\n\t    className: 'bar',\n\t\n\t    events: {\n\t        'click': 'focus_and_select',\n\t        'keyup :input': 'query_changed',\n\t        'click #search-clear-btn': 'clear'\n\t    },\n\t\n\t    render: function() {\n\t        this.$el.append( _templates.tool_search(this.model.toJSON()) );\n\t        if (!this.model.is_visible()) {\n\t            this.$el.hide();\n\t        }\n\t        this.$el.find('[title]').tooltip();\n\t        return this;\n\t    },\n\t\n\t    focus_and_select: function() {\n\t        this.$el.find(\":input\").focus().select();\n\t    },\n\t\n\t    clear: function() {\n\t        this.model.clear_search();\n\t        this.$el.find(\":input\").val('');\n\t        this.focus_and_select();\n\t        return false;\n\t    },\n\t\n\t    query_changed: function( evData ) {\n\t        // check for the 'clear key' (ESC) first\n\t        if( ( this.model.attributes.clear_key ) &&\n\t            ( this.model.attributes.clear_key === evData.which ) ){\n\t            this.clear();\n\t            return false;\n\t        }\n\t        this.model.set(\"query\", this.$el.find(\":input\").val());\n\t    }\n\t});\n\t\n\t/**\n\t * Tool panel view. Events triggered include:\n\t * tool_link_click(click event, tool_model)\n\t */\n\tvar ToolPanelView = Backbone.View.extend({\n\t    tagName: 'div',\n\t    className: 'toolMenu',\n\t\n\t    /**\n\t     * Set up view.\n\t     */\n\t    initialize: function() {\n\t        this.model.get('tool_search').on(\"change:results\", this.handle_search_results, this);\n\t    },\n\t\n\t    render: function() {\n\t        var self = this;\n\t\n\t        // Render search.\n\t        var search_view = new ToolSearchView( { model: this.model.get('tool_search') } );\n\t        search_view.render();\n\t        self.$el.append(search_view.$el);\n\t\n\t        // Render panel.\n\t        this.model.get('layout').each(function(panel_elt) {\n\t            if (panel_elt instanceof ToolSection) {\n\t                var section_title_view = new ToolSectionView({model: panel_elt});\n\t                section_title_view.render();\n\t                self.$el.append(section_title_view.$el);\n\t            }\n\t            else if (panel_elt instanceof Tool) {\n\t                var tool_view = new ToolLinkView({model: panel_elt, className: \"toolTitleNoSection\"});\n\t                tool_view.render();\n\t                self.$el.append(tool_view.$el);\n\t            }\n\t            else if (panel_elt instanceof ToolSectionLabel) {\n\t                var label_view = new ToolSectionLabelView({model: panel_elt});\n\t                label_view.render();\n\t                self.$el.append(label_view.$el);\n\t            }\n\t        });\n\t\n\t        // Setup tool link click eventing.\n\t        self.$el.find(\"a.tool-link\").click(function(e) {\n\t            // Tool id is always the first class.\n\t            var\n\t                tool_id = $(this).attr('class').split(/\\s+/)[0],\n\t                tool = self.model.get('tools').get(tool_id);\n\t\n\t            self.trigger(\"tool_link_click\", e, tool);\n\t        });\n\t\n\t        return this;\n\t    },\n\t\n\t    handle_search_results: function() {\n\t        var results = this.model.get('tool_search').get('results');\n\t        if (results && results.length === 0) {\n\t            $(\"#search-no-results\").show();\n\t        }\n\t        else {\n\t            $(\"#search-no-results\").hide();\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * View for working with a tool: setting parameters and inputs and executing the tool.\n\t */\n\tvar ToolFormView = Backbone.View.extend({\n\t    className: 'toolForm',\n\t\n\t    render: function() {\n\t        this.$el.children().remove();\n\t        this.$el.append( _templates.tool_form(this.model.toJSON()) );\n\t    }\n\t});\n\t\n\t/**\n\t * Integrated tool menu + tool execution.\n\t */\n\tvar IntegratedToolMenuAndView = Backbone.View.extend({\n\t    className: 'toolMenuAndView',\n\t\n\t    initialize: function() {\n\t        this.tool_panel_view = new ToolPanelView({collection: this.collection});\n\t        this.tool_form_view = new ToolFormView();\n\t    },\n\t\n\t    render: function() {\n\t        // Render and append tool panel.\n\t        this.tool_panel_view.render();\n\t        this.tool_panel_view.$el.css(\"float\", \"left\");\n\t        this.$el.append(this.tool_panel_view.$el);\n\t\n\t        // Append tool form view.\n\t        this.tool_form_view.$el.hide();\n\t        this.$el.append(this.tool_form_view.$el);\n\t\n\t        // On tool link click, show tool.\n\t        var self = this;\n\t        this.tool_panel_view.on(\"tool_link_click\", function(e, tool) {\n\t            // Prevents click from activating link:\n\t            e.preventDefault();\n\t            // Show tool that was clicked on:\n\t            self.show_tool(tool);\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Fetch and display tool.\n\t     */\n\t    show_tool: function(tool) {\n\t        var self = this;\n\t        tool.fetch().done( function() {\n\t            self.tool_form_view.model = tool;\n\t            self.tool_form_view.render();\n\t            self.tool_form_view.$el.show();\n\t            $('#left').width(\"650px\");\n\t        });\n\t    }\n\t});\n\t\n\t// Exports\n\treturn {\n\t    ToolParameter: ToolParameter,\n\t    IntegerToolParameter: IntegerToolParameter,\n\t    SelectToolParameter: SelectToolParameter,\n\t    Tool: Tool,\n\t    ToolCollection: ToolCollection,\n\t    ToolSearch: ToolSearch,\n\t    ToolPanel: ToolPanel,\n\t    ToolPanelView: ToolPanelView,\n\t    ToolFormView: ToolFormView\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8), __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    //jquery\n\t    //backbone\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function(){\n\t//=============================================================================\n\t/**\n\t * backbone model for icon buttons\n\t */\n\tvar IconButton = Backbone.Model.extend({\n\t    defaults: {\n\t        title           : \"\",\n\t        icon_class      : \"\",\n\t        on_click        : null,\n\t        menu_options    : null,\n\t        is_menu_button  : true,\n\t        id              : null,\n\t        href            : null,\n\t        target          : null,\n\t        enabled         : true,\n\t        visible         : true,\n\t        tooltip_config  : {}\n\t    }\n\t});\n\t\n\t/**\n\t *  backbone view for icon buttons\n\t */\n\tvar IconButtonView = Backbone.View.extend({\n\t\n\t    initialize : function(){\n\t        // better rendering this way\n\t        this.model.attributes.tooltip_config = { placement : 'bottom' };\n\t        this.model.bind( 'change', this.render, this );\n\t    },\n\t\n\t    render : function( ){\n\t        // hide tooltip\n\t        this.$el.tooltip( 'hide' );\n\t\n\t        var new_elem = this.template( this.model.toJSON() );\n\t        // configure tooltip\n\t        new_elem.tooltip( this.model.get( 'tooltip_config' ));\n\t        this.$el.replaceWith( new_elem );\n\t        this.setElement( new_elem );\n\t        return this;\n\t    },\n\t\n\t    events : {\n\t        'click' : 'click'\n\t    },\n\t\n\t    click : function( event ){\n\t        // if on_click pass to that function\n\t        if( _.isFunction( this.model.get( 'on_click' ) ) ){\n\t            this.model.get( 'on_click' )( event );\n\t            return false;\n\t        }\n\t        // otherwise, bubble up ( to href or whatever )\n\t        return true;\n\t    },\n\t\n\t    // generate html element\n\t    template: function( options ){\n\t        var buffer = 'title=\"' + options.title + '\" class=\"icon-button';\n\t\n\t        if( options.is_menu_button ){\n\t            buffer += ' menu-button';\n\t        }\n\t\n\t        buffer += ' ' + options.icon_class;\n\t\n\t        if( !options.enabled ){\n\t            buffer += '_disabled';\n\t        }\n\t\n\t        // close class tag\n\t        buffer += '\"';\n\t\n\t        if( options.id ){\n\t            buffer += ' id=\"' + options.id + '\"';\n\t        }\n\t\n\t        buffer += ' href=\"' + options.href + '\"';\n\t        // add target for href\n\t        if( options.target ){\n\t            buffer += ' target=\"' + options.target + '\"';\n\t        }\n\t        // set visibility\n\t        if( !options.visible ){\n\t            buffer += ' style=\"display: none;\"';\n\t        }\n\t\n\t        // enabled/disabled\n\t        if ( options.enabled ){\n\t            buffer = '<a ' + buffer + '/>';\n\t        } else {\n\t            buffer = '<span ' + buffer + '/>';\n\t        }\n\t\n\t        // return element\n\t        return $( buffer );\n\t    }\n\t} );\n\t\n\t// define collection\n\tvar IconButtonCollection = Backbone.Collection.extend({\n\t    model: IconButton\n\t});\n\t\n\t/**\n\t * menu with multiple icon buttons\n\t * views are not needed nor used for individual buttons\n\t */\n\tvar IconButtonMenuView = Backbone.View.extend({\n\t\n\t    tagName: 'div',\n\t\n\t    initialize: function(){\n\t        this.render();\n\t    },\n\t\n\t    render: function(){\n\t        // initialize icon buttons\n\t        var self = this;\n\t        this.collection.each(function(button){\n\t            // create and add icon button to menu\n\t            var elt = $('<a/>')\n\t                .attr('href', 'javascript:void(0)')\n\t                .attr('title', button.attributes.title)\n\t                .addClass('icon-button menu-button')\n\t                .addClass(button.attributes.icon_class)\n\t                .appendTo(self.$el)\n\t                .click(button.attributes.on_click);\n\t\n\t            // configure tooltip\n\t            if (button.attributes.tooltip_config){\n\t                elt.tooltip(button.attributes.tooltip_config);\n\t            }\n\t\n\t            // add popup menu to icon\n\t            var menu_options = button.get('options');\n\t            if (menu_options){\n\t                make_popupmenu(elt, menu_options);\n\t            }\n\t        });\n\t\n\t        // return\n\t        return this;\n\t    }\n\t});\n\t\n\t/**\n\t * Returns an IconButtonMenuView for the provided configuration.\n\t * Configuration is a list of dictionaries where each dictionary\n\t * defines an icon button. Each dictionary must have the following\n\t * elements: icon_class, title, and on_click.\n\t */\n\tvar create_icon_buttons_menu = function(config, global_config)\n\t{\n\t    // initialize global configuration\n\t    if (!global_config) global_config = {};\n\t\n\t    // create and initialize menu\n\t    var buttons = new IconButtonCollection(\n\t        _.map(config, function(button_config){\n\t            return new IconButton(_.extend(button_config, global_config));\n\t        })\n\t    );\n\t\n\t    // return menu\n\t    return new IconButtonMenuView( {collection: buttons} );\n\t};\n\t\n\t\n\t//=============================================================================\n\t    return {\n\t        IconButton              : IconButton,\n\t        IconButtonView          : IconButtonView,\n\t        IconButtonCollection    : IconButtonCollection,\n\t        IconButtonMenuView      : IconButtonMenuView,\n\t        create_icon_buttons_menu: create_icon_buttons_menu\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\t// frame manager\n\tvar View = Backbone.View.extend({\n\t    // defaults inputs\n\t    options: {\n\t        // default frame size\n\t        frame: {\n\t            cols : 6,\n\t            rows : 3\n\t        },\n\t\n\t        // maximum number of rows\n\t        rows: 1000,\n\t\n\t        // cell size in px\n\t        cell: 130,\n\t\n\t        // margin\n\t        margin: 5,\n\t\n\t        // scroll speed\n\t        scroll: 5,\n\t\n\t        // minimum top\n\t        top_min: 40,\n\t\n\t        // maximum number of frames\n\t        frame_max: 9,\n\t\n\t        // visible\n\t        visible: true,\n\t\n\t        // onchange\n\t        onchange: null\n\t    },\n\t\n\t    // number of columns\n\t    cols: 0,\n\t\n\t    // scroll/element top\n\t    top: 0,\n\t\n\t    // viewport scrolling state\n\t    top_max: 0,\n\t\n\t    // frame z-index\n\t    frame_z : 0,\n\t\n\t    // frame counter\n\t    frame_counter: 0,\n\t\n\t    // frame counter\n\t    frame_counter_id: 0,\n\t\n\t    // frame list\n\t    frame_list: [],\n\t\n\t    // frame shadow\n\t    frame_shadow: null,\n\t\n\t    // frame panel visible\n\t    visible: null,\n\t\n\t    // initialize\n\t    initialize : function(options) {\n\t        // add to masthead menu\n\t        var self = this;\n\t\n\t        // read in defaults\n\t        if (options) {\n\t            this.options = _.defaults(options, this.options);\n\t        }\n\t\n\t        // set visibility\n\t        this.visible = this.options.visible;\n\t\n\t        // initialize top\n\t        this.top = this.top_max = this.options.top_min;\n\t\n\t        // create\n\t        this.setElement(this._template());\n\t\n\t        // load background\n\t        $(this.el).append(this._templateBackground());\n\t\n\t        // load menu buttons\n\t        $(this.el).append(this._templateMenu());\n\t\n\t        // load to main frame\n\t        $(this.el_main).append($(this.el));\n\t\n\t        //\n\t        // define shadow frame\n\t        //\n\t        var id_shadow = '#frame-shadow';\n\t\n\t        // add shadow template\n\t        $(this.el).append(this._templateShadow(id_shadow.substring(1)));\n\t\n\t        // initialize frame\n\t        this.frame_shadow = {\n\t            id              : id_shadow,\n\t            screen_location : {},\n\t            grid_location   : {},\n\t            grid_rank       : null,\n\t            grid_lock       : false\n\t        };\n\t\n\t        // initialize size\n\t        this._frameResize(this.frame_shadow, {width: 0, height: 0});\n\t\n\t        // add shadow to frame list\n\t        this.frame_list[id_shadow] = this.frame_shadow;\n\t\n\t        // initialize panel\n\t        this._panelRefresh();\n\t\n\t        // apply visibility\n\t        if (!this.visible) {\n\t            this.hide();\n\t        } else {\n\t            this.show();\n\t        }\n\t\n\t        // catch window resize event\n\t        var self = this;\n\t        $(window).resize(function () {\n\t            if (self.visible)\n\t                self._panelRefresh();\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Adds and displays a new frame.\n\t     *\n\t     * options:\n\t     *  type: 'url' or 'other' ; if 'url', 'content' is treated as a URL and loaded into an iframe; \n\t     *        if 'other', content is treated as a function or raw HTML. content function is passed a single \n\t     *        argument that is the frame's content DOM element\n\t     *  content: the content to be loaded into the frame.\n\t     */\n\t    add: function(options) {\n\t        // frame default options\n\t        var frameOptions = {\n\t            title: '',\n\t            content: null,\n\t            target: '',\n\t            type: null\n\t        };\n\t\n\t        // read in defaults\n\t        if (options) {\n\t            options = _.defaults(options, frameOptions);\n\t        } else {\n\t            options = frameOptions;\n\t        }\n\t\n\t        // check for content\n\t        if(!options.content) {\n\t            return;\n\t        }\n\t\n\t        // check for number of frames\n\t        if (this.frame_counter >= this.options.frame_max) {\n\t            alert(\"You have reached the maximum number of allowed frames (\" + this.options.frame_max + \").\");   \n\t            return;\n\t        }\n\t\n\t        // generate frame identifier\n\t        var frame_id = '#frame-' + (this.frame_counter_id++);\n\t\n\t        // check if frame exists\n\t        if ($(frame_id).length !== 0) {\n\t            alert(\"This frame already exists. This page might contain multiple frame managers.\");\n\t            return;\n\t        }\n\t\n\t        // reset top\n\t        this.top = this.options.top_min;\n\t\n\t        // append\n\t        var $frame_el = null;\n\t        if (options.type === 'url') {\n\t            $frame_el = $(this._templateFrameUrl(frame_id.substring(1), options.title, options.content));\n\t        } else if (options.type === 'other') {\n\t            $frame_el = $(this._templateFrame(frame_id.substring(1), options.title));\n\t\n\t            // Load content into frame.\n\t            var content_elt = $frame_el.find('.f-content');\n\t            if (_.isFunction(options.content)) {\n\t                options.content(content_elt);\n\t            }\n\t            else {\n\t                content_elt.append(options.content);\n\t            }\n\t        }\n\t        $(this.el).append($frame_el);\n\t\n\t        // construct a new frame\n\t        var frame = {\n\t            id              : frame_id,\n\t            screen_location : {},\n\t            grid_location   : {},\n\t            grid_rank       : null,\n\t            grid_lock       : false\n\t        };\n\t\n\t        // set dimensions\n\t        options.width   = this._toPixelCoord('width', this.options.frame.cols);\n\t        options.height  = this._toPixelCoord('height', this.options.frame.rows);\n\t\n\t        // default z-index\n\t        this.frame_z = parseInt($(frame.id).css('z-index'));\n\t\n\t        // add to frame list\n\t        this.frame_list[frame_id] = frame;\n\t\n\t        // increase frame counter\n\t        this.frame_counter++;\n\t\n\t        // resize\n\t        this._frameResize(frame, {width: options.width, height: options.height});\n\t\n\t        // place frame\n\t        this._frameInsert(frame, {top: 0, left: 0}, true);\n\t\n\t        // show frames if hidden\n\t        if (!this.visible) {\n\t            this.show();\n\t        }\n\t    },\n\t\n\t    // show panel\n\t    show: function() {\n\t        // show\n\t        this.visible = true;\n\t\n\t        // show\n\t        this.$el.find(\".frame\").fadeIn('fast');\n\t\n\t        // hide shadow\n\t        this.$el.find(this.frame_shadow.id).hide();\n\t\n\t        // show background\n\t        this.$el.find(\".frame-background\").show();\n\t\n\t        // show panel\n\t        this._panelRefresh();\n\t\n\t        // refresh\n\t        this._menuRefresh();\n\t    },\n\t\n\t    // hide panel\n\t    hide: function() {\n\t        // make sure that no event is currently processing\n\t        if (this.event.type !== null)\n\t            return;\n\t\n\t        // hide\n\t        this.visible = false;\n\t\n\t        // hide \n\t        this.$el.find(\".frame\").fadeOut('fast');\n\t\n\t        // hide background\n\t        this.$el.find(\".frame-background\").hide();\n\t\n\t        // hide menu\n\t        this.$el.find(\".frame-menu\").hide();\n\t\n\t        // refresh\n\t        this._menuRefresh();\n\t    },\n\t\n\t    // length\n\t    length: function() {\n\t        return this.frame_counter;\n\t    },\n\t\n\t    // set onchange event\n\t    setOnChange: function(callback) {\n\t        this.options.onchange = callback;\n\t    },\n\t\n\t    /*\n\t        EVENT HANDLING\n\t    */\n\t\n\t    // event\n\t    event: {\n\t        type    : null,\n\t        target  : null,\n\t        xy      : null\n\t    },\n\t\n\t    // events\n\t    events: {\n\t        // global frame events\n\t        'mousemove'                         : '_eventFrameMouseMove',\n\t        'mouseup'                           : '_eventFrameMouseUp',\n\t        'mouseleave'                        : '_eventFrameMouseUp',\n\t        'mousewheel'                        : '_eventPanelScroll',\n\t        'DOMMouseScroll'                    : '_eventPanelScroll',\n\t\n\t        // events fixed to elements\n\t        'mousedown .frame'                  : '_eventFrameMouseDown',\n\t        'mousedown .frame-background'       : '_eventHide',\n\t        'mousedown .frame-scroll-up'        : '_eventPanelScroll_up',\n\t        'mousedown .frame-scroll-down'      : '_eventPanelScroll_down',\n\t        'mousedown .f-close'                : '_eventFrameClose',\n\t        'mousedown .f-pin'                  : '_eventFrameLock'\n\t    },\n\t\n\t    // drag start\n\t    _eventFrameMouseDown: function (e) {\n\t        // skip if event is already active\n\t        if (this.event.type !== null) {\n\t            return;\n\t        }\n\t\n\t        // check for drag event\n\t        if ($(e.target).hasClass('f-header') || $(e.target).hasClass('f-title')) {\n\t            this.event.type = 'drag';\n\t        }\n\t\n\t        // check for resize event\n\t        if ($(e.target).hasClass('f-resize')) {\n\t            this.event.type = 'resize';\n\t        }\n\t\n\t        // skip if no event has to be handled\n\t        if (this.event.type === null) {\n\t            return;\n\t        }\n\t\n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // identify frame\n\t        this.event.target = this._frameIdentify(e.target);\n\t\n\t        // check if frame is locked\n\t        if (this.event.target.grid_lock) {\n\t            this.event.type = null;\n\t            return;\n\t        }\n\t\n\t        // backup event details\n\t        this.event.xy = {\n\t            x: e.originalEvent.pageX,\n\t            y: e.originalEvent.pageY\n\t        };\n\t\n\t        // prepare drag/resize\n\t        this._frameDragStart(this.event.target);\n\t    },\n\t\n\t    // mouse move event\n\t    _eventFrameMouseMove: function (e) {\n\t        // check\n\t        if (this.event.type != 'drag' && this.event.type != 'resize') {\n\t            return;\n\t        }\n\t\n\t        // current position\n\t        var event_xy_new = {\n\t            x : e.originalEvent.pageX,\n\t            y : e.originalEvent.pageY\n\t        };\n\t\n\t        // position delta\n\t        var event_xy_delta = {\n\t            x : event_xy_new.x - this.event.xy.x,\n\t            y : event_xy_new.y - this.event.xy.y\n\t        };\n\t\n\t        // update\n\t        this.event.xy = event_xy_new;\n\t\n\t        // object position / size\n\t        var p = this._frameScreen (this.event.target);\n\t\n\t        // resize event\n\t        if (this.event.type == 'resize') {\n\t            // update\n\t            p.width  += event_xy_delta.x;\n\t            p.height += event_xy_delta.y;\n\t\n\t            // check size\n\t            var min_dim = this.options.cell - this.options.margin - 1;\n\t            p.width = Math.max(p.width, min_dim);\n\t            p.height = Math.max(p.height, min_dim);\n\t\n\t            // apply resize to frame\n\t            this._frameResize(this.event.target, p);\n\t\n\t            // break down to grid coordinates\n\t            p.width = this._toGridCoord('width', p.width) + 1;\n\t            p.height = this._toGridCoord('height', p.height) + 1;\n\t\n\t            // transfer back to pixels\n\t            p.width = this._toPixelCoord('width', p.width);\n\t            p.height = this._toPixelCoord('height', p.height);\n\t\n\t            // apply\n\t            this._frameResize(this.frame_shadow, p);\n\t\n\t            // fix position\n\t            this._frameInsert(this.frame_shadow, {\n\t                top     : this._toGridCoord('top', p.top),\n\t                left    : this._toGridCoord('left', p.left)\n\t            });\n\t        }\n\t\n\t        // drag event\n\t        if (this.event.type == 'drag') {\n\t            // update\n\t            p.left  += event_xy_delta.x;\n\t            p.top   += event_xy_delta.y;\n\t\n\t            // apply\n\t            this._frameOffset(this.event.target, p);\n\t\n\t            // get location of shadow\n\t            var l = {\n\t                top     : this._toGridCoord('top', p.top),\n\t                left    : this._toGridCoord('left', p.left)\n\t            };\n\t\n\t            // increase priority of current frame\n\t            if (l.left !== 0) {\n\t                l.left++;\n\t            }\n\t\n\t            // fix position\n\t            this._frameInsert(this.frame_shadow, l);\n\t        }\n\t    },\n\t\n\t    // mouse up\n\t    _eventFrameMouseUp: function (e) {\n\t        // check\n\t        if (this.event.type != 'drag' && this.event.type != 'resize') {\n\t            return;\n\t        }\n\t\n\t        // stop\n\t        this._frameDragStop(this.event.target);\n\t\n\t        // reset event\n\t        this.event.type = null;\n\t    },\n\t\n\t    // drag start\n\t    _eventFrameClose: function (e) {\n\t        // check\n\t        if (this.event.type !== null) {\n\t            return;\n\t        }\n\t\n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // get frame\n\t        var frame = this._frameIdentify(e.target);\n\t        var self  = this;\n\t\n\t        // fade out\n\t        $(frame.id).fadeOut('fast', function() {\n\t            // remove element\n\t            $(frame.id).remove();\n\t\n\t            // remove from dictionary\n\t            delete self.frame_list[frame.id];\n\t\n\t            // reduce frame counter\n\t            self.frame_counter--;\n\t\n\t            // reload\n\t            self._panelRefresh(true);\n\t\n\t            // refresh scroll state once all animations completed\n\t            self._panelAnimationComplete();\n\t\n\t            // hide if no frames left\n\t            if (self.visible && self.frame_counter == 0)\n\t                self.hide();\n\t        });\n\t    },\n\t\n\t    // drag start\n\t    _eventFrameLock: function (e) {\n\t        // check\n\t        if (this.event.type !== null) {\n\t            return;\n\t        }\n\t\n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // get frame\n\t        var frame = this._frameIdentify(e.target);\n\t\n\t        // check\n\t        if (frame.grid_lock) {\n\t            // unlock\n\t            frame.grid_lock = false;\n\t\n\t            // remove class\n\t            $(frame.id).find('.f-pin').removeClass('toggle');\n\t            $(frame.id).find('.f-header').removeClass('f-not-allowed');\n\t            $(frame.id).find('.f-title').removeClass('f-not-allowed');\n\t            $(frame.id).find('.f-resize').show();\n\t            $(frame.id).find('.f-close').show();\n\t        } else {\n\t            // lock\n\t            frame.grid_lock = true;\n\t\n\t            // add class\n\t            $(frame.id).find('.f-pin').addClass('toggle');\n\t            $(frame.id).find('.f-header').addClass('f-not-allowed');\n\t            $(frame.id).find('.f-title').addClass('f-not-allowed');\n\t            $(frame.id).find('.f-resize').hide();\n\t            $(frame.id).find('.f-close').hide();\n\t        }\n\t    },\n\t\n\t    // show/hide panel\n\t    _eventHide: function (e) {\n\t        // check\n\t        if (this.event.type !== null) {\n\t            return;\n\t        }\n\t\n\t        // hide panel\n\t        this.hide();\n\t    },\n\t\n\t    /**\n\t     * Fired when scrolling occurs on panel.\n\t     */\n\t    _eventPanelScroll: function(e) {\n\t        // check\n\t        if (this.event.type !== null || !this.visible) {\n\t            return;\n\t        }\n\t\n\t        // Stop propagation if scrolling is happening inside a frame.\n\t        // TODO: could propagate scrolling if at top/bottom of frame.\n\t        var frames = $(e.srcElement).parents('.frame')\n\t        if (frames.length !== 0) {\n\t            e.stopPropagation();\n\t            return;\n\t        }\n\t\n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // get wheel delta\n\t        var delta = e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3;\n\t\n\t        // refresh panel\n\t        this._panelScroll(delta);\n\t    },\n\t\n\t    // scroll up\n\t    _eventPanelScroll_up: function(e) {\n\t        // check\n\t        if (this.event.type !== null)\n\t            return;\n\t  \n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // scroll up\n\t        this._panelScroll(-this.options.scroll);\n\t    },\n\t\n\t    // scroll down\n\t    _eventPanelScroll_down: function(e) {\n\t        // check\n\t        if (this.event.type !== null)\n\t            return;\n\t\n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // scroll down\n\t        this._panelScroll(this.options.scroll);\n\t    },\n\t\n\t    /*\n\t        FRAME EVENTS SUPPORT\n\t    */\n\t\n\t    // identify\n\t    _frameIdentify: function(target) {\n\t        return this.frame_list['#' + $(target).closest('.frame').attr('id')];\n\t    },\n\t\n\t    // drag start\n\t    _frameDragStart : function (frame) {\n\t        // set focus\n\t        this._frameFocus(frame, true);\n\t\n\t        // get current dimensions\n\t        var p = this._frameScreen (frame);\n\t\n\t        // initialize shadow\n\t        this._frameResize(this.frame_shadow, p);\n\t        this._frameGrid(this.frame_shadow, frame.grid_location);\n\t\n\t        // reset location\n\t        frame.grid_location = null;\n\t\n\t        // show shadow\n\t        $(this.frame_shadow.id).show();\n\t\n\t        // load frame cover\n\t        $('.f-cover').show();\n\t    },\n\t\n\t    // drag stop\n\t    _frameDragStop : function (frame) {\n\t        // remove focus\n\t        this._frameFocus(frame, false);\n\t\n\t        // get new dimensions\n\t        var p = this._frameScreen(this.frame_shadow);\n\t\n\t        // update frame\n\t        this._frameResize(frame, p);\n\t        this._frameGrid(frame, this.frame_shadow.grid_location, true);\n\t\n\t        // reset location of shadow\n\t        this.frame_shadow.grid_location = null;\n\t\n\t        // hide shadow\n\t        $(this.frame_shadow.id).hide();\n\t\n\t        // hide frame cover\n\t        $('.f-cover').hide();\n\t\n\t        // refresh scroll state once all animations completed\n\t        this._panelAnimationComplete();\n\t    },\n\t\n\t    /*\n\t        GRID/PIXEL CONVERTER\n\t    */\n\t\n\t    // converts a pixel coordinate to grids\n\t    _toGridCoord: function (type, px) {\n\t        var sign = (type == 'width' || type == 'height') ? 1 : -1;\n\t        if (type == 'top') px -= this.top;\n\t        return parseInt((px + sign * this.options.margin) / this.options.cell, 10);\n\t    },\n\t    \n\t    // converts a grid coordinate to pixels\n\t    _toPixelCoord: function (type, g) {\n\t        var sign = (type == 'width' || type == 'height') ? 1 : -1;\n\t        var px = (g * this.options.cell) - sign * this.options.margin;\n\t        if (type == 'top') px += this.top;\n\t        return px;\n\t    },\n\t\n\t    // get grid coordinates\n\t    _toGrid: function (px) {\n\t        return {\n\t            top     : this._toGridCoord('top', px.top),\n\t            left    : this._toGridCoord('left', px.left),\n\t            width   : this._toGridCoord('width', px.width),\n\t            height  : this._toGridCoord('height', px.height)\n\t        };\n\t    },\n\t\n\t    // get pixel coordinates\n\t    _toPixel: function(g) {\n\t        return {\n\t            top     : this._toPixelCoord('top', g.top),\n\t            left    : this._toPixelCoord('left', g.left),\n\t            width   : this._toPixelCoord('width', g.width),\n\t            height  : this._toPixelCoord('height', g.height)\n\t        };\n\t    },\n\t\n\t    /* \n\t        COLLISION DETECTION\n\t    */\n\t\n\t    // check collision\n\t    _isCollision: function(g) {\n\t        // is collision pair\n\t        function is_collision_pair (a, b) {\n\t            return !(a.left > b.left + b.width - 1 || a.left + a.width - 1 < b.left ||\n\t                     a.top > b.top + b.height  - 1 || a.top + a.height - 1 < b.top);\n\t        }\n\t\n\t        // search\n\t        for (var i in this.frame_list) {\n\t            // get frame\n\t            var frame = this.frame_list[i];\n\t\n\t            // skip\n\t            if (frame.grid_location === null)\n\t                continue;\n\t\n\t            // check if g collides with frame\n\t            if (is_collision_pair (g, frame.grid_location))\n\t                return true;\n\t        }\n\t\n\t        // return\n\t        return false;\n\t    },\n\t\n\t    // location/grid rank\n\t    _locationRank: function(loc) {\n\t        return (loc.top * this.cols) + loc.left;\n\t    },\n\t\n\t    /*\n\t        ONSCREEN MENU\n\t    */\n\t\n\t    // update frame counter\n\t    _menuRefresh: function() {\n\t        // scroll up possible?\n\t        if (this.visible) {\n\t            if (this.top == this.options.top_min)\n\t                $(\".frame-scroll-up\").hide();\n\t            else\n\t                $(\".frame-scroll-up\").show();\n\t\n\t            // scroll down possible?\n\t            if (this.top == this.top_max)\n\t                $(\".frame-scroll-down\").hide();\n\t            else\n\t                $(\".frame-scroll-down\").show();\n\t        }\n\t\n\t        // trigger onchange\n\t        if (this.options.onchange) {\n\t            this.options.onchange();\n\t        }\n\t    },\n\t\n\t    /*\n\t        PANEL/WINDOW FUNCTIONS\n\t    */\n\t\n\t    // panel on animation complete / frames not moving\n\t    _panelAnimationComplete: function() {\n\t        var self = this;\n\t        $(\".frame\").promise().done(function() {self._panelScroll(0, true)});\n\t    },\n\t\n\t    // refresh panel\n\t    _panelRefresh: function(animate) {\n\t        // get current size\n\t        this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n\t\n\t        // recalculate frame positions\n\t        this._frameInsert(null, null, animate);\n\t    },\n\t\n\t    // update scroll\n\t    _panelScroll: function(delta, animate) {\n\t        // new top value\n\t        var top_new = this.top - this.options.scroll * delta;\n\t\n\t        // update top\n\t        top_new = Math.max(top_new, this.top_max);\n\t        top_new = Math.min(top_new, this.options.top_min);\n\t\n\t        // update screen if necessary\n\t        if (this.top != top_new) {\n\t            // update screen\n\t            for (var i in this.frame_list) {\n\t                // get frame\n\t                var frame = this.frame_list[i];\n\t\n\t                // skip\n\t                if (frame.grid_location !== null) {\n\t                    var screen_location = {\n\t                        top  : frame.screen_location.top - (this.top - top_new),\n\t                        left : frame.screen_location.left\n\t                    }\n\t                    this._frameOffset(frame, screen_location, animate);\n\t                }\n\t            }\n\t\n\t            // update top value\n\t            this.top = top_new;\n\t        }\n\t\n\t        // refresh\n\t        this._menuRefresh();\n\t    },\n\t\n\t    /*\n\t        FRAME FUNCTIONS\n\t    */\n\t\n\t    // frame insert at given location\n\t    _frameInsert: function(frame, new_loc, animate) {\n\t        // define\n\t        var place_list = [];\n\t\n\t        // frame to place\n\t        if (frame) {\n\t            // reset grid location\n\t            frame.grid_location = null;\n\t\n\t            // set first one to be placed\n\t            place_list.push([frame, this._locationRank(new_loc)]);\n\t        }\n\t\n\t        // search\n\t        var i = null;\n\t        for (i in this.frame_list) {\n\t            // get frame\n\t            var f = this.frame_list[i];\n\t\n\t            // check\n\t            if (f.grid_location !== null && !f.grid_lock) {\n\t                // reset grid location\n\t                f.grid_location = null;\n\t\n\t                // set up for placement\n\t                place_list.push([f, f.grid_rank]);\n\t            }\n\t        }\n\t\n\t        // sort place list by rank\n\t        place_list.sort(function(a, b) {\n\t            var i = a[1];\n\t            var j = b[1];\n\t            return i < j ? -1 : (i > j ? 1 : 0);\n\t        });\n\t\n\t        // place\n\t        for (i = 0; i < place_list.length; i++) {\n\t            this._framePlace(place_list[i][0], animate);\n\t        }\n\t\n\t        // identify maximum viewport size\n\t        this.top_max = 0;\n\t        for (var i in this.frame_list) {\n\t            // get frame\n\t            var frame = this.frame_list[i];\n\t\n\t            // skip\n\t            if (frame.grid_location !== null)\n\t                this.top_max = Math.max(this.top_max, frame.grid_location.top + frame.grid_location.height);\n\t        }\n\t\n\t        // mesh maximum top with window size and margin\n\t        this.top_max = $(window).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n\t\n\t        // fix value\n\t        this.top_max = Math.min(this.top_max, this.options.top_min);\n\t\n\t        // panel menu\n\t        this._menuRefresh();\n\t    },\n\t\n\t    // naive frame place\n\t    _framePlace: function(frame, animate) {\n\t        // reset grid location\n\t        frame.grid_location = null;\n\t\n\t        // grid coordinates of new frame\n\t        var g = this._toGrid(this._frameScreen(frame));\n\t\n\t        // try grid coordinates\n\t        var done = false;\n\t        for (var i = 0; i < this.options.rows; i++) {\n\t            // ensure that the first grid column is checked despite limited window space\n\t            for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n\t                // coordinates\n\t                g.top   = i;\n\t                g.left  = j;\n\t\n\t                // no collision\n\t                if (!this._isCollision(g)) {\n\t                    done = true;\n\t                    break;\n\t                }\n\t            }\n\t\n\t            // break\n\t            if (done) {\n\t                break;\n\t            }\n\t        }\n\t\n\t        // check if valid spot was found\n\t        if (done) {\n\t            this._frameGrid(frame, g, animate);\n\t        } else {\n\t            console.log(\"Grid dimensions exceeded.\");\n\t        }\n\t    },\n\t\n\t    // focus\n\t    _frameFocus: function(frame, has_focus) {\n\t        // get new z-value\n\t        var z = this.frame_z + (has_focus ? 1 : 0);\n\t\n\t        // update\n\t        $(frame.id).css('z-index', z);\n\t    },\n\t\n\t    // new left/top position frame\n\t    _frameOffset: function(frame, p, animate) {\n\t        // update screen location\n\t        frame.screen_location.left = p.left;\n\t        frame.screen_location.top = p.top;\n\t\n\t        // animate\n\t        if (animate) {\n\t            // set focus on animated\n\t            this._frameFocus(frame, true);\n\t\n\t            // prepare for callback\n\t            var self = this;\n\t\n\t            // animate and remove focus\n\t            $(frame.id).animate({top: p.top, left: p.left}, 'fast', function() {\n\t                self._frameFocus(frame, false);\n\t            });\n\t        } else {\n\t            $(frame.id).css({top: p.top, left: p.left});\n\t        }\n\t    },\n\t\n\t    // resize frame\n\t    _frameResize: function(frame, p) {\n\t        // update css\n\t        $(frame.id).css({width: p.width, height: p.height});\n\t\n\t        // update descriptor\n\t        frame.screen_location.width = p.width;\n\t        frame.screen_location.height = p.height;\n\t    },\n\t\n\t    // new grid location\n\t    _frameGrid: function (frame, l, animate) {\n\t        // update grid location\n\t        frame.grid_location = l;\n\t\n\t        // place frame\n\t        this._frameOffset(frame, this._toPixel(l), animate);\n\t\n\t        // update grid rank\n\t        frame.grid_rank = this._locationRank(l);\n\t    },\n\t\n\t    // get frame dimensions\n\t    _frameScreen: function(frame) {\n\t        var p = frame.screen_location;\n\t        return {top: p.top, left: p.left, width: p.width, height: p.height};\n\t    },\n\t\n\t    /*\n\t        HTML TEMPLATES\n\t    */\n\t\n\t    // main element\n\t    _template: function() {\n\t        return  '<div class=\"galaxy-frame\"></div>';\n\t    },\n\t\n\t    // fill regular frame template\n\t    _templateFrame: function(id, title) {\n\t        // check title\n\t        if (!title)\n\t            title = '';\n\t\n\t        // load template\n\t        return  '<div id=\"' + id + '\" class=\"frame corner\">' +\n\t                    '<div class=\"f-header corner\">' +\n\t                        '<span class=\"f-title\">' + title + '</span>' +\n\t                        '<span class=\"f-icon f-close fa fa-trash-o\"></span>' +\n\t                        '<span class=\"f-icon f-pin fa fa-thumb-tack\"></span>' +\n\t                    '</div>' +\n\t                    '<div class=\"f-content\">' +\n\t                        '<div class=\"f-cover\"></div>' +\n\t                    '</div>' +\n\t                    '<span class=\"f-resize f-icon corner fa fa-expand\"></span>' +\n\t                '</div>';\n\t    },\n\t\n\t    // fill regular frame template\n\t    _templateFrameUrl: function(id, title, url) {\n\t        // url\n\t        if (url.indexOf('?') == -1)\n\t            url += '?';\n\t        else\n\t            url += '&';\n\t        url += 'widget=True';\n\t\n\t        // element\n\t        var $el = $(this._templateFrame(id, title));\n\t        $el.find('.f-content').append('<iframe scrolling=\"auto\" class=\"f-iframe\" src=\"' + url + '\"></iframe>');\n\t\n\t        // load template\n\t        return $el;\n\t    },\n\t\n\t    // fill shadow template\n\t    _templateShadow: function(id) {\n\t        return '<div id=\"' + id + '\" class=\"frame-shadow corner\"></div>';\n\t    },\n\t\n\t    // fill background template in order to cover underlying iframes\n\t    _templateBackground: function() {\n\t        return '<div class=\"frame-background\"></div>';\n\t    },\n\t\n\t    // fill menu button template\n\t    _templateMenu: function() {\n\t        return  '<div class=\"frame-scroll-up frame-menu fa fa-chevron-up fa-2x\"></div>' +\n\t                '<div class=\"frame-scroll-down frame-menu fa fa-chevron-down fa-2x\"></div>';\n\t    }\n\t});\n\t\n\t// return\n\treturn {\n\t    View: View\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(11), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Portlet, Ui) {\n\t\n\t// ui list element\n\tvar View = Backbone.View.extend({\n\t    // create portlet to keep track of selected list elements\n\t    initialize : function(options) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // initialize options\n\t        this.options = options;\n\t        this.name = options.name || 'element';\n\t        this.multiple = options.multiple || false;\n\t\n\t        // create message handler\n\t        this.message = new Ui.Message({ cls: 'ui-margin-top' });\n\t\n\t        // create portlet\n\t        this.portlet = new Portlet.View({ cls: 'ui-portlet-section' });\n\t\n\t        // create select field containing the options which can be inserted into the list\n\t        this.select = new Ui.Select.View({ optional : options.optional });\n\t\n\t        // create insert new list element button\n\t        this.button = new Ui.ButtonIcon({\n\t            icon        : 'fa fa-sign-in',\n\t            floating    : 'left',\n\t            tooltip     : 'Insert new ' + this.name,\n\t            onclick     : function() {\n\t                self.add({\n\t                    id      : self.select.value(),\n\t                    name    : self.select.text()\n\t                });\n\t            }\n\t        });\n\t\n\t        // build main element\n\t        this.setElement(this._template(options));\n\t        this.$('.ui-list-message').append(this.message.$el);\n\t        this.$('.ui-list-portlet').append(this.portlet.$el);\n\t        this.$('.ui-list-button').append(this.button.$el);\n\t        this.$('.ui-list-select').append(this.select.$el);\n\t    },\n\t\n\t    /** Return/Set currently selected list elements */\n\t    value: function(val) {\n\t        // set new value\n\t        if (val !== undefined) {\n\t            this.portlet.empty();\n\t            if ($.isArray(val)) {\n\t                for (var i in val) {\n\t                    var v = val[i];\n\t                    var v_id = null;\n\t                    var v_name = null;\n\t                    if ($.type(v) != 'string') {\n\t                        v_id = v.id;\n\t                        v_name = v.name;\n\t                    } else {\n\t                        v_id = v_name = v;\n\t                    }\n\t                    if (v_id != null) {\n\t                        this.add({\n\t                            id      : v_id,\n\t                            name    : v_name\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t            this._refresh();\n\t        }\n\t        // get current value\n\t        var lst = [];\n\t        this.$('.ui-list-id').each(function() {\n\t            lst.push({\n\t                id      : $(this).prop('id'),\n\t                name    : $(this).find('.ui-list-name').html()\n\t            });\n\t        });\n\t        if (lst.length == 0) {\n\t            return null;\n\t        }\n\t        return lst;\n\t    },\n\t\n\t    /** Add row */\n\t    add: function(options) {\n\t        var self = this;\n\t        if (this.$('[id=\"' + options.id + '\"]').length === 0) {\n\t            if (Utils.validate(options.id)) {\n\t                var $el = $(this._templateRow({\n\t                    id      : options.id,\n\t                    name    : options.name\n\t                }));\n\t                $el.on('click', function() {\n\t                    $el.remove();\n\t                    self._refresh();\n\t                });\n\t                $el.on('mouseover', function() {\n\t                    $el.addClass('portlet-highlight');\n\t                });\n\t                $el.on('mouseout', function() {\n\t                    $el.removeClass('portlet-highlight');\n\t                });\n\t                this.portlet.append($el);\n\t                this._refresh();\n\t            } else {\n\t                this.message.update({ message: 'Please select a valid ' + this.name + '.', status: 'danger' });\n\t            }\n\t        } else {\n\t            this.message.update({ message: 'This ' + this.name + ' is already in the list.' });\n\t        }\n\t    },\n\t\n\t    /** Update available options */\n\t    update: function(options) {\n\t        this.select.update(options);\n\t    },\n\t\n\t    /** Refresh view */\n\t    _refresh: function() {\n\t        if (this.$('.ui-list-id').length > 0) {\n\t            !this.multiple && this.button.disable();\n\t            this.$('.ui-list-portlet').show();\n\t        } else {\n\t            this.button.enable();\n\t            this.$('.ui-list-portlet').hide();\n\t        }\n\t        this.options.onchange && this.options.onchange();\n\t    },\n\t\n\t    /** Main Template */\n\t    _template: function(options) {\n\t        return  '<div class=\"ui-list\">' +\n\t                    '<div class=\"ui-margin-top\">' +\n\t                        '<span class=\"ui-list-button\"/>' +\n\t                        '<span class=\"ui-list-select\"/>' +\n\t                    '</div>' +\n\t                    '<div class=\"ui-list-message\"/>' +\n\t                    '<div class=\"ui-list-portlet\"/>' +\n\t                '</div>';\n\t    },\n\t\n\t    /** Row Template */\n\t    _templateRow: function(options) {\n\t        return  '<div id=\"' + options.id + '\" class=\"ui-list-id\">' +\n\t                    '<span class=\"ui-list-delete fa fa-trash\"/>' +\n\t                    '<span class=\"ui-list-name\">' + options.name + '</span>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View: View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(31)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Buttons) {\n\t\n\t/** Base class for options based ui elements **/\n\tvar Base = Backbone.View.extend({\n\t    // initialize\n\t    initialize: function(options) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // configure options\n\t        this.options = Utils.merge(options, {\n\t            visible     : true,\n\t            data        : [],\n\t            id          : Utils.uid(),\n\t            error_text  : 'No options available.',\n\t            wait_text   : 'Please wait...',\n\t            multiple    : false\n\t        });\n\t\n\t        // create new element\n\t        this.setElement('<div class=\"ui-options\"/>');\n\t\n\t        // create elements\n\t        this.$message   = $('<div/>');\n\t        this.$options   = $(this._template(options));\n\t        this.$menu      = $('<div class=\"ui-options-menu\"/>');\n\t\n\t        // append\n\t        this.$el.append(this.$message);\n\t        this.$el.append(this.$menu);\n\t        this.$el.append(this.$options);\n\t\n\t        // add select/unselect all button\n\t        if (this.options.multiple) {\n\t            this.all_button = new Buttons.ButtonCheck({\n\t                onclick: function() {\n\t                    self.$('input').prop('checked', self.all_button.value() !== 0);\n\t                    self.trigger('change');\n\t                }\n\t            });\n\t            this.$menu.append(this.all_button.$el);\n\t        }\n\t\n\t        // hide input field\n\t        if (!this.options.visible) {\n\t            this.$el.hide();\n\t        }\n\t\n\t        // initialize data\n\t        this.update(this.options.data);\n\t\n\t        // set initial value\n\t        if (this.options.value !== undefined) {\n\t            this.value(this.options.value);\n\t        }\n\t\n\t        // add change event. fires on trigger\n\t        this.on('change', function() {\n\t            this.options.onchange && this.options.onchange(this.value());\n\t        });\n\t    },\n\t\n\t    /** Update options\n\t    */\n\t    update: function(options) {\n\t        // backup current value\n\t        var current = this._getValue();\n\t\n\t        // remove all options\n\t        this.$options.empty();\n\t\n\t        // add new options using single option templates or full template\n\t        if (this._templateOptions) {\n\t            // rebuild options using full template\n\t            this.$options.append(this._templateOptions(options));\n\t        } else {\n\t            // rebuild options using single option templates\n\t            for (var key in options) {\n\t                var $option = $(this._templateOption(options[key]));\n\t                $option.addClass('ui-option');\n\t                $option.tooltip({title: options[key].tooltip, placement: 'bottom'});\n\t                this.$options.append($option);\n\t            }\n\t        }\n\t\n\t        // add change events\n\t        var self = this;\n\t        this.$('input').on('change', function() {\n\t            self.value(self._getValue());\n\t            self.trigger('change');\n\t        });\n\t\n\t        // set previous value\n\t        this.value(current);\n\t\n\t        // data initialization has been completed\n\t        this.unwait();\n\t    },\n\t\n\t    /** Return/Set current value\n\t    */\n\t    value: function (new_value) {\n\t        // set new value if available\n\t        if (new_value !== undefined) {\n\t            // reset selection\n\t            this.$('input').prop('checked', false);\n\t            // set value\n\t            if (new_value !== null) {\n\t                // check if its an array\n\t                if (!(new_value instanceof Array)) {\n\t                    new_value = [new_value];\n\t                }\n\t                // update to new selection\n\t                for (var i in new_value) {\n\t                    this.$('input[value=\"' + new_value[i] + '\"]').first().prop('checked', true);\n\t                }\n\t            };\n\t        }\n\t        // get current value\n\t        var current = this._getValue();\n\t        if (this.all_button) {\n\t            var value = current;\n\t            if (!(value instanceof Array)) {\n\t                value = 0;\n\t            } else {\n\t                value = value.length;\n\t            }\n\t            this.all_button.value(value, this._size());\n\t        }\n\t        return current;\n\t    },\n\t\n\t    /** Check if selected value exists (or any if multiple)\n\t    */\n\t    exists: function(value) {\n\t        if (value !== undefined) {\n\t            if (!(value instanceof Array)) {\n\t                value = [value];\n\t            }\n\t            for (var i in value) {\n\t                if (this.$('input[value=\"' + value[i] + '\"]').length > 0) {\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        return false;\n\t    },\n\t\n\t    /** Return first available option\n\t    */\n\t    first: function() {\n\t        var options = this.$('input').first();\n\t        if (options.length > 0) {\n\t            return options.val();\n\t        } else {\n\t            return null;\n\t        }\n\t    },\n\t\n\t    /** Wait message during request processing\n\t    */\n\t    wait: function() {\n\t        if (this._size() == 0) {\n\t            this._messageShow(this.options.wait_text, 'info');\n\t            this.$options.hide();\n\t            this.$menu.hide();\n\t        }\n\t    },\n\t\n\t    /** Hide wait message\n\t    */\n\t    unwait: function() {\n\t        var total = this._size();\n\t        if (total == 0) {\n\t            this._messageShow(this.options.error_text, 'danger');\n\t            this.$options.hide();\n\t            this.$menu.hide();\n\t        } else {\n\t            this._messageHide();\n\t            this.$options.css('display', 'inline-block');\n\t            this.$menu.show();\n\t        }\n\t    },\n\t\n\t    /** Return current selection\n\t    */\n\t    _getValue: function() {\n\t        // track values in array\n\t        var selected = [];\n\t        this.$(':checked').each(function() {\n\t            selected.push($(this).val());\n\t        });\n\t\n\t        // get selected elements\n\t        if (!Utils.validate(selected)) {\n\t            return null;\n\t        }\n\t\n\t        // return multiple or single value\n\t        if (this.options.multiple) {\n\t            return selected;\n\t        } else {\n\t            return selected[0];\n\t        }\n\t    },\n\t\n\t    /** Returns the number of options\n\t    */\n\t    _size: function() {\n\t        return this.$('.ui-option').length;\n\t    },\n\t\n\t    /** Show message instead if options\n\t    */\n\t    _messageShow: function(text, status) {\n\t        this.$message.show();\n\t        this.$message.removeClass();\n\t        this.$message.addClass('ui-message alert alert-' + status);\n\t        this.$message.html(text);\n\t    },\n\t\n\t    /** Hide message\n\t    */\n\t    _messageHide: function() {\n\t        this.$message.hide();\n\t    },\n\t\n\t    /** Main template function\n\t    */\n\t    _template: function() {\n\t        return '<div class=\"ui-options-list\"/>';\n\t    }\n\t});\n\t\n\t/** Iconized **/\n\tvar BaseIcons = Base.extend({\n\t    _templateOption: function(pair) {\n\t        var id = Utils.uid();\n\t        return  '<div class=\"ui-option\">' +\n\t                    '<input id=\"' + id + '\" type=\"' + this.options.type + '\" name=\"' + this.options.id + '\" value=\"' + pair.value + '\"/>' +\n\t                    '<label class=\"ui-options-label\" for=\"' + id + '\">' + pair.label + '</label>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\t/** Radio button field **/\n\tvar Radio = {};\n\tRadio.View = BaseIcons.extend({\n\t    initialize: function(options) {\n\t        options.type = 'radio';\n\t        BaseIcons.prototype.initialize.call(this, options);\n\t    }\n\t});\n\t\n\t/** Checkbox options field **/\n\tvar Checkbox = {};\n\tCheckbox.View = BaseIcons.extend({\n\t    initialize: function(options) {\n\t        options.multiple = true;\n\t        options.type = 'checkbox';\n\t        BaseIcons.prototype.initialize.call(this, options);\n\t    }\n\t});\n\t\n\t/** Radio button options field styled as classic buttons **/\n\tvar RadioButton = {};\n\tRadioButton.View = Base.extend({\n\t    // initialize\n\t    initialize: function(options) {\n\t        Base.prototype.initialize.call(this, options);\n\t    },\n\t\n\t    /** Return/Set current value\n\t    */\n\t    value: function (new_value) {\n\t        // set new value\n\t        if (new_value !== undefined) {\n\t            this.$('input').prop('checked', false);\n\t            this.$('label').removeClass('active');\n\t            this.$('[value=\"' + new_value + '\"]').prop('checked', true).closest('label').addClass('active');\n\t        }\n\t\n\t        // get and return value\n\t        return this._getValue();\n\t    },\n\t\n\t    /** Template for a single option\n\t    */\n\t    _templateOption: function(pair) {\n\t        var cls = 'fa ' + pair.icon;\n\t        if (!pair.label) {\n\t            cls += ' no-padding';\n\t        }\n\t        var tmpl =  '<label class=\"btn btn-default\">';\n\t        if (pair.icon) {\n\t            tmpl +=     '<i class=\"' + cls + '\"/>';\n\t        }\n\t        tmpl +=         '<input type=\"radio\" name=\"' + this.options.id + '\" value=\"' + pair.value + '\"/>';\n\t        if (pair.label) {\n\t            tmpl +=         pair.label;\n\t        }\n\t        tmpl +=     '</label>';\n\t        return tmpl;\n\t    },\n\t\n\t    /** Main template function\n\t    */\n\t    _template: function() {\n\t        return '<div class=\"btn-group ui-radiobutton\" data-toggle=\"buttons\"/>';\n\t    }\n\t});\n\t\n\treturn {\n\t    Base        : Base,\n\t    BaseIcons   : BaseIcons,\n\t    Radio       : Radio,\n\t    RadioButton : RadioButton,\n\t    Checkbox    : Checkbox\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils) {\n\t\n\t// return\n\tvar View = Backbone.View.extend({\n\t    // defaults options\n\t    optionsDefault: {\n\t        title_new       : '',\n\t        operations      : null,\n\t        onnew           : null,\n\t        max             : null,\n\t        onchange        : null\n\t    },\n\t    \n\t    // initialize\n\t    initialize : function(options) {\n\t        // configure\n\t        this.visible    = false;\n\t        this.$nav       = null;\n\t        this.$content   = null;\n\t        this.first_tab  = null;\n\t        this.current_id = null;\n\t            \n\t        // configure options\n\t        this.options = Utils.merge(options, this.optionsDefault);\n\t        \n\t        // create tabs\n\t        var $tabs = $(this._template(this.options));\n\t        \n\t        // link elements\n\t        this.$nav       = $tabs.find('.tab-navigation');\n\t        this.$content   = $tabs.find('.tab-content');\n\t        \n\t        // create new element\n\t        this.setElement($tabs);\n\t        \n\t        // clear list\n\t        this.list = {};\n\t        \n\t        // link this\n\t        var self = this;\n\t            \n\t        // append operations\n\t        if (this.options.operations) {\n\t            $.each(this.options.operations, function(name, item) {\n\t                item.$el.prop('id', name);\n\t                self.$nav.find('.operations').append(item.$el);\n\t            });\n\t        }\n\t        \n\t        // add built-in add-new-tab tab\n\t        if (this.options.onnew) {\n\t            // create tab object\n\t            var $tab_new = $(this._template_tab_new(this.options));\n\t            \n\t            // append to navbar\n\t            this.$nav.append($tab_new);\n\t            \n\t            // add tooltip\n\t            $tab_new.tooltip({title: 'Add a new tab', placement: 'bottom', container: self.$el});\n\t            \n\t            // link click event\n\t            $tab_new.on('click', function(e) {\n\t                $tab_new.tooltip('hide');\n\t                self.options.onnew();\n\t            });\n\t        }\n\t    },\n\t    \n\t    // size\n\t    size: function() {\n\t        return _.size(this.list);\n\t    },\n\t    \n\t    // front\n\t    current: function() {\n\t        return this.$el.find('.tab-pane.active').attr('id');\n\t    },\n\t    \n\t    // append\n\t    add: function(options) {\n\t        // self\n\t        var self = this;\n\t            \n\t        // get tab id\n\t        var id = options.id;\n\t\n\t        // create tab object\n\t        var $tab_title      = $(this._template_tab(options));\n\t        var $tab_content    = $(this._template_tab_content(options));\n\t        \n\t        // add to list\n\t        this.list[id] = options.ondel ? true : false;\n\t            \n\t        // add a new tab either before the add-new-tab tab or behind the last tab\n\t        if (this.options.onnew) {\n\t            this.$nav.find('#new-tab').before($tab_title);\n\t        } else {\n\t            this.$nav.append($tab_title);\n\t        }\n\t        \n\t        // add content\n\t        $tab_content.append(options.$el);\n\t        this.$content.append($tab_content);\n\t        \n\t        // activate this tab if this is the first tab\n\t        if (this.size() == 1) {\n\t            $tab_title.addClass('active');\n\t            $tab_content.addClass('active');\n\t            this.first_tab = id;\n\t        }\n\t        \n\t        // hide add tab\n\t        if (this.options.max && this.size() >= this.options.max) {\n\t            this.$el.find('#new-tab').hide();\n\t        }\n\t        \n\t        // add click event to remove tab\n\t        if (options.ondel) {\n\t            var $del_icon = $tab_title.find('#delete');\n\t            $del_icon.tooltip({title: 'Delete this tab', placement: 'bottom', container: self.$el});\n\t            $del_icon.on('click', function() {\n\t                $del_icon.tooltip('destroy');\n\t                self.$el.find('.tooltip').remove();\n\t                options.ondel();\n\t                return false;\n\t            });\n\t        }\n\t        \n\t        // add custom click event handler\n\t        $tab_title.on('click', function(e) {\n\t            // prevent default\n\t            e.preventDefault();\n\t            \n\t            // click\n\t            if (options.onclick) {\n\t                options.onclick();\n\t            } else {\n\t                self.show(id);\n\t            }\n\t        });\n\t        \n\t        // initialize current id\n\t        if (!this.current_id) {\n\t            this.current_id = id;\n\t        }\n\t    },\n\t    \n\t    // delete tab\n\t    del: function(id) {\n\t        // delete tab from dom\n\t        this.$el.find('#tab-' + id).remove();\n\t        this.$el.find('#' + id).remove();\n\t        \n\t        // check if first tab has been deleted\n\t        if (this.first_tab == id) {\n\t            this.first_tab = null;\n\t        }\n\t        \n\t        // show first tab\n\t        if (this.first_tab != null) {\n\t            this.show(this.first_tab);\n\t        }\n\t        \n\t        // delete from list\n\t        if (this.list[id]) {\n\t            delete this.list[id];\n\t        }\n\t        \n\t        // show add tab\n\t        if (this.size() < this.options.max) {\n\t            this.$el.find('#new-tab').show();\n\t        }\n\t    },\n\t    \n\t    // delete tab\n\t    delRemovable: function() {\n\t        for (var id in this.list) {\n\t            this.del(id);\n\t        }\n\t    },\n\t    \n\t    // show\n\t    show: function(id){\n\t        // show tab view\n\t        this.$el.fadeIn('fast');\n\t        this.visible = true;\n\t        \n\t        // show selected tab\n\t        if (id) {\n\t            // reassign active class\n\t            this.$el.find('#tab-' + this.current_id).removeClass('active');\n\t            this.$el.find('#' + this.current_id).removeClass('active');\n\t            this.$el.find('#tab-' + id).addClass('active');\n\t            this.$el.find('#' + id).addClass('active');\n\t            \n\t            // update current id\n\t            this.current_id = id;\n\t        }\n\t        \n\t        // change\n\t        if (this.options.onchange) {\n\t            this.options.onchange(id);\n\t        }\n\t    },\n\t    \n\t    // hide\n\t    hide: function(){\n\t        this.$el.fadeOut('fast');\n\t        this.visible = false;\n\t    },\n\t\n\t    // hide operation\n\t    hideOperation: function(id) {\n\t        this.$nav.find('#' + id).hide();\n\t    },\n\t\n\t    // show operation\n\t    showOperation: function(id) {\n\t        this.$nav.find('#' + id).show();\n\t    },\n\t    \n\t    // set operation\n\t    setOperation: function(id, callback) {\n\t        var $el = this.$nav.find('#' + id);\n\t        $el.off('click');\n\t        $el.on('click', callback);\n\t    },\n\t    \n\t    // title\n\t    title: function(id, new_title) {\n\t        var $el = this.$el.find('#tab-title-text-' + id);\n\t        if (new_title) {\n\t            $el.html(new_title);\n\t        }\n\t        return $el.html();\n\t    },\n\t    \n\t    // retitle\n\t    retitle: function(new_title) {\n\t        var index = 0;\n\t        for (var id in this.list) {\n\t            this.title(id, ++index + ': ' + new_title);\n\t        }\n\t    },\n\t    \n\t    // fill template\n\t    _template: function(options) {\n\t        return  '<div class=\"ui-tabs tabbable tabs-left\">' +\n\t                    '<ul id=\"tab-navigation\" class=\"tab-navigation nav nav-tabs\">' +\n\t                        '<div class=\"operations\" style=\"float: right; margin-bottom: 4px;\"></div>' +\n\t                    '</ul>'+\n\t                    '<div id=\"tab-content\" class=\"tab-content\"/>' +\n\t                '</div>';\n\t    },\n\t    \n\t    // fill template tab\n\t    _template_tab_new: function(options) {\n\t        return  '<li id=\"new-tab\">' +\n\t                    '<a href=\"javascript:void(0);\">' +\n\t                        '<i class=\"ui-tabs-add fa fa-plus-circle\"/>' +\n\t                            options.title_new +\n\t                    '</a>' +\n\t                '</li>';\n\t    },\n\t    \n\t    // fill template tab\n\t    _template_tab: function(options) {\n\t        var tmpl =  '<li id=\"tab-' + options.id + '\" class=\"tab-element\">' +\n\t                        '<a id=\"tab-title-link-' + options.id + '\" title=\"\" href=\"#' + options.id + '\" data-original-title=\"\">' +\n\t                            '<span id=\"tab-title-text-' + options.id + '\" class=\"tab-title-text\">' + options.title + '</span>';\n\t        \n\t        if (options.ondel) {\n\t            tmpl +=         '<i id=\"delete\" class=\"ui-tabs-delete fa fa-minus-circle\"/>';\n\t        }\n\t        \n\t        tmpl +=         '</a>' +\n\t                    '</li>';\n\t        \n\t        return tmpl;\n\t    },\n\t    \n\t    // fill template tab content\n\t    _template_tab_content: function(options) {\n\t        return  '<div id=\"' + options.id + '\" class=\"tab-pane\"/>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View : View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/** This renders the content of the ftp popup **/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils) {\n\treturn Backbone.View.extend({\n\t    // render\n\t    initialize: function(options) {\n\t        // link options\n\t        this.options = Utils.merge(options, {\n\t            class_add       : 'upload-icon-button fa fa-square-o',\n\t            class_remove    : 'upload-icon-button fa fa-check-square-o',\n\t            class_partial   : 'upload-icon-button fa fa-minus-square-o',\n\t            collection      : null,\n\t            onchange        : function() {},\n\t            onadd           : function() {},\n\t            onremove        : function() {}\n\t        });\n\t\n\t        // link this\n\t        var self = this;\n\t\n\t        // link app\n\t        this.collection = this.options.collection;\n\t\n\t        // set template\n\t        this.setElement(this._template());\n\t\n\t        // list of rows\n\t        this.rows = [];\n\t\n\t        // load extension\n\t        Utils.get({\n\t            url     : galaxy_config.root + 'api/remote_files',\n\t            success : function(ftp_files) { self._fill(ftp_files); },\n\t            error   : function() { self._fill(); }\n\t        });\n\t    },\n\t\n\t    // events\n\t    events: {\n\t        'mousedown': function(e) { e.preventDefault(); }\n\t    },\n\t\n\t    // fill table\n\t    _fill: function(ftp_files) {\n\t        if (ftp_files && ftp_files.length > 0) {\n\t            // add table\n\t            this.$el.find('#upload-ftp-content').html($(this._templateTable()));\n\t\n\t            // add files to table\n\t            var size = 0;\n\t            for (index in ftp_files) {\n\t                this.rows.push(this._add(ftp_files[index]));\n\t                size += ftp_files[index].size;\n\t            }\n\t\n\t            // update stats\n\t            this.$el.find('#upload-ftp-number').html(ftp_files.length + ' files');\n\t            this.$el.find('#upload-ftp-disk').html(Utils.bytesToString (size, true));\n\t\n\t            // add event handler to select/unselect all\n\t            if (this.collection) {\n\t                var self = this;\n\t                this.$('._has_collection').show();\n\t                this.$select_all = $('#upload-selectall');\n\t                this.$select_all.addClass(this.options.class_add);\n\t                this.$select_all.on('click', function() {\n\t                    var add = self.$select_all.hasClass(self.options.class_add);\n\t                    for (index in ftp_files) {\n\t                        var ftp_file = ftp_files[index];\n\t                        var model_index = self._find(ftp_file);\n\t                        if(!model_index && add || model_index && !add) {\n\t                            self.rows[index].trigger('click');\n\t                        }\n\t                    }\n\t                });\n\t                this._refresh();\n\t            }\n\t        } else {\n\t            this.$el.find('#upload-ftp-content').html($(this._templateInfo()));\n\t        }\n\t        this.$el.find('#upload-ftp-wait').hide();\n\t    },\n\t\n\t    // add\n\t    _add: function(ftp_file) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // create new item\n\t        var $it = $(this._templateRow(ftp_file));\n\t\n\t        // identify icon\n\t        var $icon = $it.find('.icon');\n\t\n\t        // append to table\n\t        $(this.el).find('tbody').append($it);\n\t\n\t        // collection mode with add/remove triggers\n\t        if (this.collection) {\n\t            // find model and set initial 'add' icon class\n\t            var icon_class = '';\n\t            if (this._find(ftp_file)) {\n\t                icon_class = this.options.class_remove;\n\t            } else {\n\t                icon_class = this.options.class_add;\n\t            }\n\t            $icon.addClass(icon_class);\n\t\n\t            // click triggers add/remove events\n\t            $it.on('click', function() {\n\t                var model_index = self._find(ftp_file);\n\t                $icon.removeClass();\n\t                if (!model_index) {\n\t                    self.options.onadd(ftp_file);\n\t                    $icon.addClass(self.options.class_remove);\n\t                } else {\n\t                    self.options.onremove(model_index);\n\t                    $icon.addClass(self.options.class_add);\n\t                }\n\t                self._refresh();\n\t            });\n\t        } else {\n\t            // click triggers only change\n\t            $it.on('click', function() {\n\t                self.options.onchange(ftp_file);\n\t            });\n\t        }\n\t\n\t        // return dom handler\n\t        return $it;\n\t    },\n\t\n\t    // refresh\n\t    _refresh: function() {\n\t        var filtered = this.collection.where({file_mode: 'ftp', enabled: true});\n\t        this.$select_all.removeClass();\n\t        if (filtered.length == 0) {\n\t            this.$select_all.addClass(this.options.class_add);\n\t        } else {\n\t            if (filtered.length == this.rows.length) {\n\t                this.$select_all.addClass(this.options.class_remove);\n\t            } else {\n\t                this.$select_all.addClass(this.options.class_partial);\n\t            }\n\t        }\n\t    },\n\t\n\t    // get model index\n\t    _find: function(ftp_file) {\n\t        var item = this.collection.findWhere({\n\t            file_path   : ftp_file.path,\n\t            file_mode   : 'ftp',\n\t            enabled     : true\n\t        });\n\t        return item && item.get('id');\n\t    },\n\t\n\t    // template row\n\t    _templateRow: function(options) {\n\t        return  '<tr class=\"upload-ftp-row\">' +\n\t                    '<td class=\"_has_collection\" style=\"display: none;\"><div class=\"icon\"/></td>' +\n\t                    '<td class=\"ftp-name\">' + options.path + '</td>' +\n\t                    '<td class=\"ftp-size\">' + Utils.bytesToString(options.size) + '</td>' +\n\t                    '<td class=\"ftp-time\">' + options.ctime + '</td>' +\n\t                '</tr>';\n\t    },\n\t\n\t    // load table template\n\t    _templateTable: function() {\n\t        return  '<span style=\"whitespace: nowrap; float: left;\">Available files: </span>' +\n\t                '<span style=\"whitespace: nowrap; float: right;\">' +\n\t                    '<span class=\"upload-icon fa fa-file-text-o\"/>' +\n\t                    '<span id=\"upload-ftp-number\"/>&nbsp;&nbsp;' +\n\t                    '<span class=\"upload-icon fa fa-hdd-o\"/>' +\n\t                    '<span id=\"upload-ftp-disk\"/>' +\n\t                '</span>' +\n\t                '<table class=\"grid\" style=\"float: left;\">' +\n\t                    '<thead>' +\n\t                        '<tr>' +\n\t                            '<th class=\"_has_collection\" style=\"display: none;\"><div id=\"upload-selectall\"></th>' +\n\t                            '<th>Name</th>' +\n\t                            '<th>Size</th>' +\n\t                            '<th>Created</th>' +\n\t                        '</tr>' +\n\t                    '</thead>' +\n\t                    '<tbody/>' +\n\t                '</table>';\n\t    },\n\t\n\t    // load table template\n\t    _templateInfo: function() {\n\t        return  '<div class=\"upload-ftp-warning warningmessage\">' +\n\t                    'Your FTP directory does not contain any files.' +\n\t                '</div>';\n\t    },\n\t\n\t    // load html template\n\t    _template: function() {\n\t        return  '<div class=\"upload-ftp\">' +\n\t                    '<div id=\"upload-ftp-wait\" class=\"upload-ftp-wait fa fa-spinner fa-spin\"/>' +\n\t                    '<div class=\"upload-ftp-help\">This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>' + this.options.ftp_upload_site + '</strong> using your Galaxy credentials (email address and password).</div>' +\n\t                    '<div id=\"upload-ftp-content\"/>' +\n\t                '<div>';\n\t    }\n\t});\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {/** This renders the content of the settings popup, allowing users to specify flags i.e. for space-to-tab conversion **/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils) {\n\treturn Backbone.View.extend({\n\t    // options\n\t    options: {\n\t        class_check     : 'upload-icon-button fa fa-check-square-o',\n\t        class_uncheck   : 'upload-icon-button fa fa-square-o'\n\t    },\n\t\n\t    // initialize\n\t    initialize: function(app) {\n\t        // link app\n\t        this.app = app;\n\t\n\t        // link this\n\t        var self = this;\n\t\n\t        // set template\n\t        this.setElement(this._template());\n\t\n\t        // link model\n\t        this.model = this.app.model;\n\t\n\t        // ui event: space-to-tab\n\t        this.$('#upload-space-to-tab').on('click', function() {\n\t            self._switchState('#upload-space-to-tab', 'space_to_tab');\n\t        });\n\t\n\t        // ui event: to-posix-lines\n\t        this.$('#upload-to-posix-lines').on('click', function() {\n\t            self._switchState('#upload-to-posix-lines', 'to_posix_lines');\n\t        });\n\t\n\t        // render\n\t        this.render();\n\t    },\n\t\n\t    // events\n\t    events: {\n\t        'mousedown' : function(e) { e.preventDefault(); }\n\t    },\n\t\n\t    // render\n\t    render: function() {\n\t        // render states\n\t        this._renderState('#upload-space-to-tab', this.model.get('space_to_tab'));\n\t        this._renderState('#upload-to-posix-lines', this.model.get('to_posix_lines'));\n\t\n\t        // disable options\n\t        var $cover = this.$('#upload-settings-cover');\n\t        if (!this.model.get('enabled')) {\n\t            $cover.show();\n\t        } else {\n\t            $cover.hide();\n\t        }\n\t    },\n\t\n\t    // switch state\n\t    _switchState: function (element_id, parameter_id) {\n\t        if (this.model.get('enabled')) {\n\t            var checked = !this.model.get(parameter_id);\n\t            this.model.set(parameter_id, checked);\n\t            this._renderState(element_id, checked);\n\t        }\n\t    },\n\t\n\t    // render state\n\t    _renderState: function (element_id, checked) {\n\t        var $it = this.$(element_id);\n\t        $it.removeClass();\n\t        if (checked) {\n\t            $it.addClass(this.options.class_check);\n\t        } else {\n\t            $it.addClass(this.options.class_uncheck);\n\t        }\n\t    },\n\t\n\t    // load template\n\t    _template: function() {\n\t        return  '<div class=\"upload-settings\" style=\"position: relative;\">' +\n\t                    '<div id=\"upload-settings-cover\" class=\"upload-settings-cover\"/>' +\n\t                    '<table class=\"ui-table-striped\">' +\n\t                        '<tbody>' +\n\t                            '<tr>' +\n\t                                '<td><div id=\"upload-space-to-tab\"/></td>' +\n\t                                '<td>Convert spaces to tabs</td>' +\n\t                            '</tr>' +\n\t                            '<tr>' +\n\t                                '<td><div id=\"upload-to-posix-lines\"/></td>' +\n\t                                '<td>Use POSIX standard</td>' +\n\t                            '</tr>' +\n\t                        '</tbody>' +\n\t                    '</table>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 60 */,\n/* 61 */,\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(jQuery, $) {(function (factory) {\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else {\n\t        // Browser globals\n\t        factory(jQuery);\n\t    }\n\t\n\t}(function () {\n\t//=============================================================================\n\t\n\t    jQuery.fn.extend({\n\t        hoverhighlight : function $hoverhighlight( scope, color ){\n\t            scope = scope || 'body';\n\t            if( !this.size() ){ return this; }\n\t\n\t            $( this ).each( function(){\n\t                var $this = $( this ),\n\t                    targetSelector = $this.data( 'target' );\n\t\n\t                if( targetSelector ){\n\t                    $this.mouseover( function( ev ){\n\t                        $( targetSelector, scope ).css({\n\t                            background: color\n\t                        });\n\t                    })\n\t                    .mouseout( function( ev ){\n\t                        $( targetSelector ).css({\n\t                            background: ''\n\t                        });\n\t                    });\n\t                }\n\t            });\n\t            return this;\n\t        }\n\t    });\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(1)))\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($, jQuery) {// from: https://raw.githubusercontent.com/umdjs/umd/master/jqueryPlugin.js\n\t// Uses AMD or browser globals to create a jQuery plugin.\n\t(function (factory) {\n\t    if (true) {\n\t        //TODO: So...this turns out to be an all or nothing thing. If I load jQuery in the define below, it will\n\t        //  (of course) wipe the old jquery *and all the plugins loaded into it*. So the define below *is still\n\t        //  relying on jquery being loaded globally* in order to preserve plugins.\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else {\n\t        // Browser globals\n\t        factory(jQuery);\n\t    }\n\t\n\t}(function () {\n\t    var _l = window._l || function( s ){ return s; };\n\t\n\t    /** searchInput: (jQuery plugin)\n\t     *      Creates a search input, a clear button, and loading indicator\n\t     *      within the selected node.\n\t     *\n\t     *      When the user either presses return or enters some minimal number\n\t     *      of characters, a callback is called. Pressing ESC when the input\n\t     *      is focused will clear the input and call a separate callback.\n\t     */\n\t    function searchInput( parentNode, options ){\n\t//TODO: consolidate with tool menu functionality, use there\n\t        var KEYCODE_ESC     = 27,\n\t            KEYCODE_RETURN  = 13,\n\t            $parentNode     = $( parentNode ),\n\t            firstSearch     = true,\n\t            defaults = {\n\t                initialVal      : '',\n\t                name            : 'search',\n\t                placeholder     : 'search',\n\t                classes         : '',\n\t                onclear         : function(){},\n\t                onfirstsearch   : null,\n\t                onsearch        : function( inputVal ){},\n\t                minSearchLen    : 0,\n\t                escWillClear    : true,\n\t                oninit          : function(){}\n\t            };\n\t\n\t        // .................................................................... input rendering and events\n\t        // visually clear the search, trigger an event, and call the callback\n\t        function clearSearchInput( event ){\n\t            var $input = $( this ).parent().children( 'input' );\n\t            //console.debug( this, 'clear', $input );\n\t            $input.focus().val( '' ).trigger( 'clear:searchInput' );\n\t            options.onclear();\n\t        }\n\t\n\t        // search for searchTerms, trigger an event, call the appropo callback (based on whether this is the first)\n\t        function search( event, searchTerms ){\n\t            //console.debug( this, 'searching', searchTerms );\n\t            //TODO: I don't think this is classic jq custom event form? search.searchInput?\n\t            $( this ).trigger( 'search:searchInput', searchTerms );\n\t            if( typeof options.onfirstsearch === 'function' && firstSearch ){\n\t                firstSearch = false;\n\t                options.onfirstsearch( searchTerms );\n\t            } else {\n\t                options.onsearch( searchTerms );\n\t            }\n\t        }\n\t\n\t        // .................................................................... input rendering and events\n\t        function inputTemplate(){\n\t            // class search-query is bootstrap 2.3 style that now lives in base.less\n\t            return [ '<input type=\"text\" name=\"', options.name, '\" placeholder=\"', options.placeholder, '\" ',\n\t                            'class=\"search-query ', options.classes, '\" ', '/>' ].join( '' );\n\t        }\n\t\n\t        // the search input that responds to keyboard events and displays the search value\n\t        function $input(){\n\t            return $( inputTemplate() )\n\t                // select all text on a focus\n\t                .focus( function( event ){\n\t                    $( this ).select();\n\t                })\n\t                // attach behaviors to esc, return if desired, search on some min len string\n\t                .keyup( function( event ){\n\t                    event.preventDefault();\n\t                    event.stopPropagation();\n\t//TODO: doesn't work\n\t                    if( !$( this ).val() ){ $( this ).blur(); }\n\t\n\t                    // esc key will clear if desired\n\t                    if( event.which === KEYCODE_ESC && options.escWillClear ){\n\t                        clearSearchInput.call( this, event );\n\t\n\t                    } else {\n\t                        var searchTerms = $( this ).val();\n\t                        // return key or the search string len > minSearchLen (if not 0) triggers search\n\t                        if( ( event.which === KEYCODE_RETURN )\n\t                        ||  ( options.minSearchLen && searchTerms.length >= options.minSearchLen ) ){\n\t                            search.call( this, event, searchTerms );\n\t                        } else if( !searchTerms.length ){\n\t                            clearSearchInput.call( this, event );\n\t                        }\n\t                    }\n\t                })\n\t                .on( 'change', function( event ){\n\t                    search.call( this, event, $( this ).val() );\n\t                })\n\t                .val( options.initialVal );\n\t        }\n\t\n\t        // .................................................................... clear button rendering and events\n\t        // a button for clearing the search bar, placed on the right hand side\n\t        function $clearBtn(){\n\t            return $([ '<span class=\"search-clear fa fa-times-circle\" ',\n\t                             'title=\"', _l( 'clear search (esc)' ), '\"></span>' ].join('') )\n\t            .tooltip({ placement: 'bottom' })\n\t            .click( function( event ){\n\t                clearSearchInput.call( this, event );\n\t            });\n\t        }\n\t\n\t        // .................................................................... loadingIndicator rendering\n\t        // a button for clearing the search bar, placed on the right hand side\n\t        function $loadingIndicator(){\n\t            return $([ '<span class=\"search-loading fa fa-spinner fa-spin\" ',\n\t                             'title=\"', _l( 'loading...' ), '\"></span>' ].join('') )\n\t                .hide().tooltip({ placement: 'bottom' });\n\t        }\n\t\n\t        // .................................................................... commands\n\t        // visually swap the load, clear buttons\n\t        function toggleLoadingIndicator(){\n\t            $parentNode.find( '.search-loading' ).toggle();\n\t            $parentNode.find( '.search-clear' ).toggle();\n\t        }\n\t\n\t        // .................................................................... init\n\t        // string command (not constructor)\n\t        if( jQuery.type( options ) === 'string' ){\n\t            if( options === 'toggle-loading' ){\n\t                toggleLoadingIndicator();\n\t            }\n\t            return $parentNode;\n\t        }\n\t\n\t        // initial render\n\t        if( jQuery.type( options ) === 'object' ){\n\t            options = jQuery.extend( true, {}, defaults, options );\n\t        }\n\t        //NOTE: prepended\n\t        return $parentNode.addClass( 'search-input' ).prepend([ $input(), $clearBtn(), $loadingIndicator() ]);\n\t    }\n\t\n\t    // as jq plugin\n\t    jQuery.fn.extend({\n\t        searchInput : function $searchInput( options ){\n\t            return this.each( function(){\n\t                return searchInput( this, options );\n\t            });\n\t        }\n\t    });\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(1)))\n\n/***/ },\n/* 64 */,\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){\n\t// Alphanumeric/natural sort fn\n\tfunction naturalSort(a, b) {\n\t    // setup temp-scope variables for comparison evauluation\n\t    var re = /(-?[0-9\\.]+)/g,\n\t        x = a.toString().toLowerCase() || '',\n\t        y = b.toString().toLowerCase() || '',\n\t        nC = String.fromCharCode(0),\n\t        xN = x.replace( re, nC + '$1' + nC ).split(nC),\n\t        yN = y.replace( re, nC + '$1' + nC ).split(nC),\n\t        xD = (new Date(x)).getTime(),\n\t        yD = xD ? (new Date(y)).getTime() : null;\n\t    // natural sorting of dates\n\t    if ( yD ) {\n\t        if ( xD < yD ) { return -1; }\n\t        else if ( xD > yD ) { return 1; }\n\t    }\n\t    // natural sorting through split numeric strings and default strings\n\t    var oFxNcL, oFyNcL;\n\t    for ( var cLoc = 0, numS = Math.max(xN.length, yN.length); cLoc < numS; cLoc++ ) {\n\t        oFxNcL = parseFloat(xN[cLoc]) || xN[cLoc];\n\t        oFyNcL = parseFloat(yN[cLoc]) || yN[cLoc];\n\t        if (oFxNcL < oFyNcL) { return -1; }\n\t        else if (oFxNcL > oFyNcL) { return 1; }\n\t    }\n\t    return 0;\n\t}\n\t\n\treturn naturalSort;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(jQuery) {/*\n\t    galaxy upload plugins - requires FormData and XMLHttpRequest\n\t*/\n\t;(function($){\n\t    // add event properties\n\t    jQuery.event.props.push(\"dataTransfer\");\n\t\n\t    /**\n\t        Posts file data to the API\n\t    */\n\t    $.uploadpost = function (config) {\n\t        // parse options\n\t        var cnf = $.extend({}, {\n\t            data            : {},\n\t            success         : function() {},\n\t            error           : function() {},\n\t            progress        : function() {},\n\t            url             : null,\n\t            maxfilesize     : 2048,\n\t            error_filesize  : 'File exceeds 2GB. Please use an FTP client.',\n\t            error_default   : 'Please make sure the file is available.',\n\t            error_server    : 'Upload request failed.',\n\t            error_login     : 'Uploads require you to log in.'\n\t        }, config);\n\t\n\t        // link data\n\t        var data = cnf.data;\n\t\n\t        // check errors\n\t        if (data.error_message) {\n\t            cnf.error(data.error_message);\n\t            return;\n\t        }\n\t\n\t        // construct form data\n\t        var form = new FormData();\n\t        for (var key in data.payload) {\n\t            form.append(key, data.payload[key]);\n\t        }\n\t\n\t        // add files to submission\n\t        var sizes = 0;\n\t        for (var key in data.files) {\n\t            var d = data.files[key];\n\t            form.append(d.name, d.file, d.file.name);\n\t            sizes += d.file.size;\n\t        }\n\t\n\t        // check file size, unless it's an ftp file\n\t        if (sizes > 1048576 * cnf.maxfilesize) {\n\t            cnf.error(cnf.error_filesize);\n\t            return;\n\t        }\n\t\n\t        // prepare request\n\t        xhr = new XMLHttpRequest();\n\t        xhr.open('POST', cnf.url, true);\n\t        xhr.setRequestHeader('Accept', 'application/json');\n\t        xhr.setRequestHeader('Cache-Control', 'no-cache');\n\t        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\t\n\t        // captures state changes\n\t        xhr.onreadystatechange = function() {\n\t            // check for request completed, server connection closed\n\t            if (xhr.readyState == xhr.DONE) {\n\t                // parse response\n\t                var response = null;\n\t                if (xhr.responseText) {\n\t                    try {\n\t                        response = jQuery.parseJSON(xhr.responseText);\n\t                    } catch (e) {\n\t                        response = xhr.responseText;\n\t                    }\n\t                }\n\t                // pass any error to the error option\n\t                if (xhr.status < 200 || xhr.status > 299) {\n\t                    var text = xhr.statusText;\n\t                    if (xhr.status == 403) {\n\t                        text = cnf.error_login;\n\t                    } else if (xhr.status == 0) {\n\t                        text = cnf.error_server;\n\t                    } else if (!text) {\n\t                        text = cnf.error_default;\n\t                    }\n\t                    cnf.error(text + ' (' + xhr.status + ')');\n\t                } else {\n\t                    cnf.success(response);\n\t                }\n\t            }\n\t        }\n\t\n\t        // prepare upload progress\n\t        xhr.upload.addEventListener('progress', function(e) {\n\t            if (e.lengthComputable) {\n\t                cnf.progress(Math.round((e.loaded * 100) / e.total));\n\t            }\n\t        }, false);\n\t\n\t        // send request\n\t        console.debug('uploadbox::uploadpost() - Posting following data:');\n\t        console.debug(cnf);\n\t        xhr.send(form);\n\t    }\n\t\n\t    /**\n\t        Handles the upload events drag/drop etc.\n\t    */\n\t    $.fn.uploadinput = function(options) {\n\t        // initialize\n\t        var el = this;\n\t        var opts = $.extend({}, {\n\t            ondragover  : function() {},\n\t            ondragleave : function() {},\n\t            onchange    : function() {},\n\t            multiple    : false\n\t        }, options);\n\t\n\t        // append hidden upload field\n\t        var $input = $('<input type=\"file\" style=\"display: none\" ' + (opts.multiple && 'multiple' || '') + '/>');\n\t        el.append($input).change(function (e) {\n\t            opts.onchange(e.target.files);\n\t            $(this).val('');\n\t        });\n\t\n\t        // drag/drop events\n\t        el.on('drop', function (e) {\n\t            opts.ondragleave(e);\n\t            if(e.dataTransfer) {\n\t                opts.onchange(e.dataTransfer.files);\n\t                e.preventDefault();\n\t            }\n\t        });\n\t        el.on('dragover',  function (e) {\n\t            e.preventDefault();\n\t            opts.ondragover(e);\n\t        });\n\t        el.on('dragleave', function (e) {\n\t            e.stopPropagation();\n\t            opts.ondragleave(e);\n\t        });\n\t\n\t        // exports\n\t        return {\n\t            dialog: function () {\n\t                $input.trigger('click');\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t        Handles the upload queue and events such as drag/drop etc.\n\t    */\n\t    $.fn.uploadbox = function(options) {\n\t        // parse options\n\t        var opts = $.extend({}, {\n\t            dragover        : function() {},\n\t            dragleave       : function() {},\n\t            announce        : function(d) {},\n\t            initialize      : function(d) {},\n\t            progress        : function(d, m) {},\n\t            success         : function(d, m) {},\n\t            error           : function(d, m) { alert(m); },\n\t            complete        : function() {}\n\t        }, options);\n\t\n\t        // file queue\n\t        var queue = {};\n\t\n\t        // queue index/length counter\n\t        var queue_index = 0;\n\t        var queue_length = 0;\n\t\n\t        // indicates if queue is currently running\n\t        var queue_running = false;\n\t        var queue_stop = false;\n\t\n\t        // element\n\t        var uploadinput = $(this).uploadinput({\n\t            multiple    : true,\n\t            onchange    : function(files) { add(files); },\n\t            ondragover  : options.ondragover,\n\t            ondragleave : options.ondragleave\n\t        });\n\t\n\t        // add new files to upload queue\n\t        function add(files) {\n\t            if (files && files.length && !queue_running) {\n\t                var current_index = queue_index;\n\t                for (var i = 0; i < files.length; i++) {\n\t                    var index = String(queue_index++);\n\t                    queue[index] = files[i];\n\t                    opts.announce(index, queue[index]);\n\t                    queue_length++;\n\t                }\n\t                return current_index;\n\t            }\n\t        }\n\t\n\t        // remove file from queue\n\t        function remove(index) {\n\t            if (queue[index]) {\n\t                delete queue[index];\n\t                queue_length--;\n\t            }\n\t        }\n\t\n\t        // process an upload, recursive\n\t        function process() {\n\t            // validate\n\t            if (queue_length == 0 || queue_stop) {\n\t                queue_stop = false;\n\t                queue_running = false;\n\t                opts.complete();\n\t                return;\n\t            } else {\n\t                queue_running = true;\n\t            }\n\t\n\t            // get an identifier from the queue\n\t            var index = -1;\n\t            for (var key in queue) {\n\t                index = key;\n\t                break;\n\t            }\n\t\n\t            // get current file from queue\n\t            var file = queue[index];\n\t\n\t            // remove from queue\n\t            remove(index)\n\t\n\t            // create and submit data\n\t            $.uploadpost({\n\t                url      : opts.url,\n\t                data     : opts.initialize(index),\n\t                success  : function(message) { opts.success(index, message); process();},\n\t                error    : function(message) { opts.error(index, message); process();},\n\t                progress : function(percentage) { opts.progress(index, percentage); }\n\t            });\n\t        }\n\t\n\t        /*\n\t            public interface\n\t        */\n\t\n\t        // open file browser for selection\n\t        function select() {\n\t            uploadinput.dialog();\n\t        }\n\t\n\t        // remove all entries from queue\n\t        function reset(index) {\n\t            for (index in queue) {\n\t                remove(index);\n\t            }\n\t        }\n\t\n\t        // initiate upload process\n\t        function start() {\n\t            if (!queue_running) {\n\t                queue_running = true;\n\t                process();\n\t            }\n\t        }\n\t\n\t        // stop upload process\n\t        function stop() {\n\t            queue_stop = true;\n\t        }\n\t\n\t        // set options\n\t        function configure(options) {\n\t            opts = $.extend({}, opts, options);\n\t            return opts;\n\t        }\n\t\n\t        // verify browser compatibility\n\t        function compatible() {\n\t            return window.File && window.FormData && window.XMLHttpRequest && window.FileList;\n\t        }\n\t\n\t        // export functions\n\t        return {\n\t            'select'        : select,\n\t            'add'           : add,\n\t            'remove'        : remove,\n\t            'start'         : start,\n\t            'stop'          : stop,\n\t            'reset'         : reset,\n\t            'configure'     : configure,\n\t            'compatible'    : compatible\n\t        };\n\t    }\n\t})(jQuery);\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 67 */,\n/* 68 */,\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(19), __webpack_require__(54)], __WEBPACK_AMD_DEFINE_RESULT__ = function(mod_masthead, Frames) {\n\t\n\t/** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\n\tvar GalaxyFrame = Backbone.View.extend({\n\t    // base element\n\t    el_main: 'body',\n\t        \n\t    // frame active/disabled\n\t    active: false,\n\t    \n\t    // button active\n\t    button_active: null,\n\t    \n\t    // button load\n\t    button_load  : null,\n\t    \n\t    // initialize\n\t    initialize : function(options) {\n\t        // add to masthead menu\n\t        var self = this;\n\t        \n\t        // create frames\n\t        this.frames = new Frames.View({\n\t            visible: false,\n\t        });\n\t\n\t        // add activate icon\n\t        this.button_active = new mod_masthead.GalaxyMastheadIcon({\n\t            icon        : 'fa-th',\n\t            tooltip     : 'Enable/Disable Scratchbook',\n\t            onclick     : function() { self._activate(); },\n\t            onunload    : function() {\n\t                if (self.frames.length() > 0) {\n\t                    return \"You opened \" + self.frames.length() + \" frame(s) which will be lost.\";\n\t                }\n\t            }\n\t        });\n\t        \n\t        // add to masthead\n\t        Galaxy.masthead.append(this.button_active);\n\t\n\t        // add load icon\n\t        this.button_load = new mod_masthead.GalaxyMastheadIcon({\n\t            icon        : 'fa-eye',\n\t            tooltip     : 'Show/Hide Scratchbook',\n\t            onclick     : function(e) {\n\t                if (self.frames.visible) {\n\t                    self.frames.hide();\n\t                } else {\n\t                    self.frames.show();\n\t                }\n\t            },\n\t            with_number : true\n\t        });\n\t\n\t        // add to masthead\n\t        Galaxy.masthead.append(this.button_load);\n\t        \n\t        // create\n\t        this.setElement(this.frames.$el);\n\t        \n\t        // append to main\n\t        $(this.el_main).append(this.$el);\n\t        \n\t        // refresh menu\n\t        this.frames.setOnChange(function() {\n\t            self._refresh();\n\t        });\n\t        this._refresh();\n\t    },\n\t\n\t    /**\n\t     * Add a dataset to the frames.\n\t     */\n\t    add_dataset: function(dataset_id) {\n\t        var self = this;\n\t        !/* require */(/* empty */function() { /* WEBPACK VAR INJECTION */(function($, _) {var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(15)]; (function(DATA) {\n\t            var dataset = new DATA.Dataset({ id: dataset_id });\n\t            $.when( dataset.fetch() ).then( function() {\n\t                // Construct frame config based on dataset's type.\n\t                var frame_config = {\n\t                        title: dataset.get('name')\n\t                    },\n\t                    // HACK: For now, assume 'tabular' and 'interval' are the only \n\t                    // modules that contain tabular files. This needs to be replaced\n\t                    // will a is_datatype() function.\n\t                    is_tabular = _.find(['tabular', 'interval'], function(data_type) { \n\t                        return dataset.get('data_type').indexOf(data_type) !== -1;\n\t                    });\n\t\n\t                // Use tabular chunked display if dataset is tabular; otherwise load via URL.\n\t                if (is_tabular) {\n\t                    var tabular_dataset = new DATA.TabularDataset(dataset.toJSON());\n\t                    _.extend(frame_config, {\n\t                        type: 'other',\n\t                        content: function( parent_elt ) {\n\t                            DATA.createTabularDatasetChunkedView({\n\t                                model: tabular_dataset,\n\t                                parent_elt: parent_elt,\n\t                                embedded: true,\n\t                                height: '100%'\n\t                            });\n\t                        }\n\t                    });\n\t                }\n\t                else {\n\t                    _.extend(frame_config, {\n\t                        type: 'url',\n\t                        content: galaxy_config.root + 'datasets/' + \n\t                                 dataset.id + '/display/?preview=True'\n\t                    });\n\t                }\n\t\n\t                self.add(frame_config);\n\t\n\t            });\n\t        }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));\n\t/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1), __webpack_require__(3)))}());\n\t\n\t    },\n\t\n\t    /**\n\t     * Add a trackster visualization to the frames.\n\t     */\n\t    add_trackster_viz: function(viz_id) {\n\t        var self = this;\n\t        __webpack_require__.e/* require */(1, function(__webpack_require__) { /* WEBPACK VAR INJECTION */(function($, _) {var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(36), __webpack_require__(127)]; (function(visualization, trackster) {\n\t            var viz = new visualization.Visualization({id: viz_id});\n\t            $.when( viz.fetch() ).then( function() {\n\t                var ui = new trackster.TracksterUI(galaxy_config.root);\n\t\n\t                // Construct frame config based on dataset's type.\n\t                var frame_config = {\n\t                        title: viz.get('name'),\n\t                        type: 'other',\n\t                        content: function(parent_elt) {\n\t                            // Create view config.\n\t                            var view_config = {\n\t                                container: parent_elt,\n\t                                name: viz.get('title'),\n\t                                id: viz.id,\n\t                                // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n\t                                dbkey: viz.get('dbkey'),\n\t                                stand_alone: false\n\t                            },\n\t                            latest_revision = viz.get('latest_revision'),\n\t                            drawables = latest_revision.config.view.drawables;\n\t\n\t                            // Set up datasets in drawables.\n\t                            _.each(drawables, function(d) {\n\t                                d.dataset = {\n\t                                    hda_ldda: d.hda_ldda,\n\t                                    id: d.dataset_id\n\t                                };\n\t                            });\n\t\n\t                            view = ui.create_visualization(view_config,\n\t                                                           latest_revision.config.viewport,\n\t                                                           latest_revision.config.view.drawables,\n\t                                                           latest_revision.config.bookmarks,\n\t                                                           false);\n\t                        }\n\t                    };\n\t\n\t                self.add(frame_config);\n\t            });\n\t        }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));\n\t/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1), __webpack_require__(3)))});\n\t    },\n\t    \n\t    /**\n\t     * Add and display a new frame/window based on options.\n\t     */\n\t    add: function(options){\n\t        // open new tab\n\t        if (options.target == '_blank'){\n\t            window.open(options.content);\n\t            return;\n\t        }\n\t        \n\t        // reload entire window\n\t        if (options.target == '_top' || options.target == '_parent' || options.target == '_self'){\n\t            window.location = options.content;\n\t            return;\n\t        }\n\t        \n\t        // validate\n\t        if (!this.active){\n\t            // fix url if main frame is unavailable\n\t            var $galaxy_main = $(window.parent.document).find('#galaxy_main');\n\t            if (options.target == 'galaxy_main' || options.target == 'center'){\n\t                if ($galaxy_main.length === 0){\n\t                    var href = options.content;\n\t                    if (href.indexOf('?') == -1)\n\t                        href += '?';\n\t                    else\n\t                        href += '&';\n\t                    href += 'use_panels=True';\n\t                    window.location = href;\n\t                } else {\n\t                    $galaxy_main.attr('src', options.content);\n\t                }\n\t            } else\n\t                window.location = options.content;\n\t                \n\t            // stop\n\t            return;\n\t        }\n\t\n\t        // add to frames view\n\t        this.frames.add(options);\n\t    },\n\t    \n\t    // activate/disable panel\n\t    _activate: function (){\n\t        // check\n\t        if (this.active){\n\t            // disable\n\t            this.active = false;\n\t\n\t            // toggle\n\t            this.button_active.untoggle();\n\t    \n\t            // hide panel\n\t            this.frames.hide();\n\t        } else {\n\t            // activate\n\t            this.active = true;\n\t        \n\t            // untoggle\n\t            this.button_active.toggle();\n\t        }\n\t    },\n\t    \n\t    // update frame counter\n\t    _refresh: function(){\n\t        // update on screen counter\n\t        this.button_load.number(this.frames.length());\n\t        \n\t        // check\n\t        if(this.frames.length() === 0)\n\t            this.button_load.hide();\n\t        else\n\t            this.button_load.show();\n\t            \n\t        // check\n\t        if (this.frames.visible) {\n\t            this.button_load.toggle();\n\t        } else {\n\t            this.button_load.untoggle();\n\t        }\n\t    }\n\t});\n\t\n\t// return\n\treturn {\n\t    GalaxyFrame: GalaxyFrame\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(19)], __WEBPACK_AMD_DEFINE_RESULT__ = function( Masthead ) {\n\t\n\t/** GalaxyMenu uses the GalaxyMasthead class in order to add menu items and icons to the Masthead **/\n\tvar GalaxyMenu = Backbone.Model.extend({\n\t    initialize: function( options ) {\n\t        this.options = options.config;\n\t        this.masthead  = options.masthead;\n\t        this.create();\n\t    },\n\t\n\t    // default menu\n\t    create: function() {\n\t        //\n\t        // Analyze data tab.\n\t        //\n\t        var tab_analysis = new Masthead.GalaxyMastheadTab({\n\t            id              : 'analysis',\n\t            title           : 'Analyze Data',\n\t            content         : '',\n\t            title_attribute : 'Analysis home view'\n\t        });\n\t        this.masthead.append( tab_analysis );\n\t\n\t        //\n\t        // Workflow tab.\n\t        //\n\t\n\t        var workflow_options = {\n\t            id              : 'workflow',\n\t            title           : 'Workflow',\n\t            content         : 'workflow',\n\t            title_attribute : 'Chain tools into workflows'\n\t        }\n\t        if ( !Galaxy.user.id ) {\n\t            workflow_options.disabled = true; // disable workflows for anonymous users\n\t        }\n\t\n\t        var tab_workflow = new Masthead.GalaxyMastheadTab( workflow_options );\n\t        this.masthead.append( tab_workflow );\n\t\n\t        //\n\t        // 'Shared Items' or Libraries tab.\n\t        //\n\t        var tab_shared = new Masthead.GalaxyMastheadTab({\n\t            id              : 'shared',\n\t            title           : 'Shared Data',\n\t            content         : 'library/index',\n\t            title_attribute : 'Access published resources'\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Data Libraries',\n\t            content : 'library/index'\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Data Libraries Beta',\n\t            content : 'library/list',\n\t            divider : true\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Published Histories',\n\t            content : 'history/list_published'\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Published Workflows',\n\t            content : 'workflow/list_published'\n\t\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Published Visualizations',\n\t            content : 'visualization/list_published'\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Published Pages',\n\t            content : 'page/list_published'\n\t        });\n\t\n\t        this.masthead.append(tab_shared);\n\t\n\t        //\n\t        // Lab menu.\n\t        //\n\t        if ( this.options.user_requests ) {\n\t            var tab_lab = new Masthead.GalaxyMastheadTab({\n\t                id      : 'lab',\n\t                title   : 'Lab'\n\t            });\n\t            tab_lab.add({\n\t                title   : 'Sequencing Requests',\n\t                content : 'requests/index'\n\t            });\n\t            tab_lab.add({\n\t                title   : 'Find Samples',\n\t                content : 'requests/find_samples_index'\n\t            });\n\t            tab_lab.add({\n\t                title   : 'Help',\n\t                content : this.options.lims_doc_url\n\t            });\n\t            this.masthead.append( tab_lab );\n\t        }\n\t\n\t        //\n\t        // Visualization tab.\n\t        //\n\t\n\t        var visualization_options = {\n\t            id              : 'visualization',\n\t            title           : 'Visualization',\n\t            content         : 'visualization/list',\n\t            title_attribute : 'Visualize datasets'\n\t        }\n\t\n\t        // disable visualizations for anonymous users\n\t        if ( !Galaxy.user.id ) {\n\t            visualization_options.disabled = true;\n\t        }\n\t        var tab_visualization = new Masthead.GalaxyMastheadTab( visualization_options );\n\t\n\t        // add submenu only when user is logged in\n\t        if ( Galaxy.user.id ) {\n\t            tab_visualization.add({\n\t                title   : 'New Track Browser',\n\t                content : 'visualization/trackster',\n\t                target  : '_frame'\n\t            });\n\t            tab_visualization.add({\n\t                title   : 'Saved Visualizations',\n\t                content : 'visualization/list',\n\t                target  : '_frame'\n\t            });\n\t        }\n\t        this.masthead.append( tab_visualization );\n\t\n\t        //\n\t        // Admin.\n\t        //\n\t        if ( Galaxy.user.get( 'is_admin' ) ) {\n\t            var tab_admin = new Masthead.GalaxyMastheadTab({\n\t                id              : 'admin',\n\t                title           : 'Admin',\n\t                content         : 'admin',\n\t                extra_class     : 'admin-only',\n\t                title_attribute : 'Administer this Galaxy'\n\t            });\n\t            this.masthead.append( tab_admin );\n\t        }\n\t\n\t        //\n\t        // Help tab.\n\t        //\n\t        var tab_help = new Masthead.GalaxyMastheadTab({\n\t            id              : 'help',\n\t            title           : 'Help',\n\t            title_attribute : 'Support, contact, and community hubs'\n\t        });\n\t        if ( this.options.biostar_url ){\n\t            tab_help.add({\n\t                title   : 'Galaxy Biostar',\n\t                content : this.options.biostar_url_redirect,\n\t                target  : '_blank'\n\t            });\n\t            tab_help.add({\n\t                title   : 'Ask a question',\n\t                content : 'biostar/biostar_question_redirect',\n\t                target  : '_blank'\n\t            });\n\t        }\n\t        tab_help.add({\n\t            title   : 'Support',\n\t            content : this.options.support_url,\n\t            target  : '_blank'\n\t        });\n\t        tab_help.add({\n\t            title   : 'Search',\n\t            content : this.options.search_url,\n\t            target  : '_blank'\n\t        });\n\t        tab_help.add({\n\t            title   : 'Mailing Lists',\n\t            content : this.options.mailing_lists,\n\t            target  : '_blank'\n\t        });\n\t        tab_help.add({\n\t            title   : 'Videos',\n\t            content : this.options.screencasts_url,\n\t            target  : '_blank'\n\t        });\n\t        tab_help.add({\n\t            title   : 'Wiki',\n\t            content : this.options.wiki_url,\n\t            target  : '_blank'\n\t        });\n\t        tab_help.add({\n\t            title   : 'How to Cite Galaxy',\n\t            content : this.options.citation_url,\n\t            target  : '_blank'\n\t        });\n\t        if (this.options.terms_url){\n\t            tab_help.add({\n\t                title   : 'Terms and Conditions',\n\t                content : this.options.terms_url,\n\t                target  : '_blank'\n\t            });\n\t        }\n\t        this.masthead.append( tab_help );\n\t\n\t        //\n\t        // User tab.\n\t        //\n\t        if ( !Galaxy.user.id ){\n\t            var tab_user = new Masthead.GalaxyMastheadTab({\n\t                id              : 'user',\n\t                title           : 'User',\n\t                extra_class     : 'loggedout-only',\n\t                title_attribute : 'Account registration or login'\n\t            });\n\t\n\t            // login\n\t            tab_user.add({\n\t                title   : 'Login',\n\t                content : 'user/login',\n\t                target  : 'galaxy_main'\n\t            });\n\t\n\t            // register\n\t            if ( this.options.allow_user_creation ){\n\t                tab_user.add({\n\t                    title   : 'Register',\n\t                    content : 'user/create',\n\t                    target  : 'galaxy_main'\n\t                });\n\t            }\n\t\n\t            // add to masthead\n\t            this.masthead.append( tab_user );\n\t        } else {\n\t            var tab_user = new Masthead.GalaxyMastheadTab({\n\t                id              : 'user',\n\t                title           : 'User',\n\t                extra_class     : 'loggedin-only',\n\t                title_attribute : 'Account preferences and saved data'\n\t            });\n\t\n\t            // show user logged in info\n\t            tab_user.add({\n\t                title   : 'Logged in as ' + Galaxy.user.get( 'email' )\n\t            });\n\t\n\t            tab_user.add({\n\t                title   : 'Preferences',\n\t                content : 'user?cntrller=user',\n\t                target  : 'galaxy_main'\n\t            });\n\t\n\t            tab_user.add({\n\t                title   : 'Custom Builds',\n\t                content : 'user/dbkeys',\n\t                target  : 'galaxy_main'\n\t            });\n\t\n\t            tab_user.add({\n\t                title   : 'Logout',\n\t                content : 'user/logout',\n\t                target  : '_top',\n\t                divider : true\n\t            });\n\t\n\t            // default tabs\n\t            tab_user.add({\n\t                title   : 'Saved Histories',\n\t                content : 'history/list',\n\t                target  : 'galaxy_main'\n\t            });\n\t            tab_user.add({\n\t                title   : 'Saved Datasets',\n\t                content : 'dataset/list',\n\t                target  : 'galaxy_main'\n\t            });\n\t            tab_user.add({\n\t                title   : 'Saved Pages',\n\t                content : 'page/list',\n\t                target  : '_top'\n\t            });\n\t\n\t            tab_user.add({\n\t                title   : 'API Keys',\n\t                content : 'user/api_keys?cntrller=user',\n\t                target  : 'galaxy_main'\n\t            });\n\t\n\t            if ( this.options.use_remote_user ){\n\t                tab_user.add({\n\t                    title   : 'Public Name',\n\t                    content : 'user/edit_username?cntrller=user',\n\t                    target  : 'galaxy_main'\n\t                });\n\t            }\n\t\n\t            // add to masthead\n\t            this.masthead.append( tab_user );\n\t        }\n\t\n\t        // identify active tab\n\t        if ( this.options.active_view ) {\n\t            this.masthead.highlight( this.options.active_view );\n\t        }\n\t    }\n\t});\n\t\n\t// return\n\treturn {\n\t    GalaxyMenu: GalaxyMenu\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(4),\n\t    __webpack_require__(52),\n\t    __webpack_require__(112),\n\t    __webpack_require__(7),\n\t    __webpack_require__(98),\n\t    __webpack_require__(95),\n\t    __webpack_require__(28)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( Utils, Tools, Upload, Ui, optionsMenu, HistoryPanel, ToolsForm ) {\n\t\n\t    /* Builds the center panel */\n\t    var CenterPanel = Backbone.View.extend({\n\t        initialize: function( options ) {\n\t            this.options = Utils.merge( options, {} );\n\t            this.setElement( this._template() );\n\t            var self = this;\n\t\n\t            this.$( '#galaxy_main' ).on( 'load', function() {\n\t                var location = this.contentWindow && this.contentWindow.location;\n\t                if ( location && location.host ) {\n\t                    $( this ).show();\n\t                    self.prev && self.prev.remove();\n\t                    self.$( '#center-panel' ).hide();\n\t                    Galaxy.trigger( 'galaxy_main:load', {\n\t                        fullpath: location.pathname + location.search + location.hash,\n\t                        pathname: location.pathname,\n\t                        search  : location.search,\n\t                        hash    : location.hash\n\t                    });\n\t                }\n\t            });\n\t\n\t            var params = $.extend( {}, Galaxy.params );\n\t            if ( params.tool_id !== 'upload1' && ( params.tool_id || params.job_id ) ) {\n\t                params.tool_id && ( params.id = params.tool_id );\n\t                this.display( new ToolsForm.View( params ) );\n\t            } else {\n\t                this.$( '#galaxy_main' ).prop( 'src', Galaxy.root + (\n\t                    ( params.workflow_id && ( 'workflow/run?id=' + params.workflow_id ) ) ||\n\t                    ( params.m_c && ( params.m_c + '/' + params.m_a ) ) ||\n\t                    'root/welcome'\n\t                ));\n\t            }\n\t        },\n\t        display: function( view ) {\n\t            this.prev && this.prev.remove();\n\t            this.prev = view;\n\t            this.$( '#galaxy_main' ).hide();\n\t            this.$( '#center-panel' ).scrollTop( 0 ).append( view.$el ).show();\n\t        },\n\t        _template: function() {\n\t            return  '<div style=\"position: absolute; width: 100%; height: 100%\">' +\n\t                        '<iframe name=\"galaxy_main\" id=\"galaxy_main\" frameborder=\"0\" style=\"position: absolute; width: 100%; height: 100%;\"/>' +\n\t                        '<div id=\"center-panel\" style=\"position: absolute; width: 100%; height: 100%; padding: 10px; overflow: auto;\"/>' +\n\t                    '</div>';\n\t        }\n\t    });\n\t\n\t    /* Builds the tool panel on the left */\n\t    var LeftPanel = Backbone.View.extend({\n\t        initialize: function( options ) {\n\t            this.options = Utils.merge( options, {} );\n\t            this.setElement( this._template() );\n\t            // create tool search, tool panel, and tool panel view.\n\t            if ( Galaxy.user.id || !Galaxy.config.require_login ) {\n\t                var tool_search = new Tools.ToolSearch({\n\t                    spinner_url : options.spinner_url,\n\t                    search_url  : options.search_url,\n\t                    hidden      : false\n\t                });\n\t                var tools = new Tools.ToolCollection( options.toolbox );\n\t                var tool_panel = new Tools.ToolPanel({\n\t                    tool_search : tool_search,\n\t                    tools       : tools,\n\t                    layout      : options.toolbox_in_panel\n\t                });\n\t                tool_panel_view = new Tools.ToolPanelView({ model: tool_panel });\n\t\n\t                // add tool panel to Galaxy object\n\t                Galaxy.toolPanel = tool_panel;\n\t\n\t                // if there are tools, render panel and display everything\n\t                if (tool_panel.get( 'layout' ).size() > 0) {\n\t                    tool_panel_view.render();\n\t                    this.$( '.toolMenu' ).show();\n\t                }\n\t                this.$el.prepend( tool_panel_view.$el );\n\t\n\t                // add internal workflow list\n\t                this.$( '#internal-workflows' ).append( this._templateTool({\n\t                    title   : 'All workflows',\n\t                    href    : 'workflow/list_for_run'\n\t                }) )\n\t                for ( var i in options.stored_workflow_menu_entries ) {\n\t                    var m = options.stored_workflow_menu_entries[ i ];\n\t                    this.$( '#internal-workflows' ).append( this._templateTool({\n\t                        title : m.stored_workflow.name,\n\t                        href  : 'workflow/run?id=' + m.encoded_stored_workflow_id\n\t                    }) );\n\t                }\n\t\n\t                // minsize init hint\n\t                this.$( 'a[minsizehint]' ).click( function() {\n\t                    if ( parent.handle_minwidth_hint ) {\n\t                        parent.handle_minwidth_hint( $( this ).attr( 'minsizehint' ) );\n\t                    }\n\t                });\n\t\n\t                // add upload plugin\n\t                Galaxy.upload = new Upload( options );\n\t\n\t                // define components (is used in app-view.js)\n\t                this.components = {\n\t                    header  : {\n\t                        title   : 'Tools',\n\t                        buttons : [ Galaxy.upload ]\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        _templateTool: function( options ) {\n\t            return  '<div class=\"toolTitle\">' +\n\t                        '<a href=\"' + Galaxy.root + options.href + '\" target=\"galaxy_main\">' + options.title + '</a>' +\n\t                    '</div>';\n\t        },\n\t\n\t        _template: function() {\n\t            return  '<div class=\"toolMenuContainer\">' +\n\t                        '<div class=\"toolMenu\" style=\"display: none\">' +\n\t                            '<div id=\"search-no-results\" style=\"display: none; padding-top: 5px\">' +\n\t                                '<em><strong>Search did not match any tools.</strong></em>' +\n\t                            '</div>' +\n\t                        '</div>' +\n\t                        '<div class=\"toolSectionPad\"/>' +\n\t                        '<div class=\"toolSectionPad\"/>' +\n\t                        '<div class=\"toolSectionTitle\" id=\"title_XXinternalXXworkflow\">' +\n\t                            '<span>Workflows</span>' +\n\t                        '</div>' +\n\t                        '<div id=\"internal-workflows\" class=\"toolSectionBody\">' +\n\t                            '<div class=\"toolSectionBg\"/>' +\n\t                        '</div>' +\n\t                    '</div>';\n\t        }\n\t    });\n\t\n\t    /* Builds the history panel on the right */\n\t    var RightPanel = Backbone.View.extend({\n\t        initialize: function(options) {\n\t            this.options = Utils.merge( options, {} );\n\t            this.setElement( this._template() );\n\t\n\t            var headerButtons = [];\n\t            // this button re-fetches the history and contents and re-renders the history panel\n\t            var buttonRefresh = new Ui.ButtonLink({\n\t                id      : 'history-refresh-button',\n\t                title   : 'Refresh history',\n\t                cls     : 'panel-header-button',\n\t                icon    : 'fa fa-refresh',\n\t                onclick : function() {\n\t                    if( top.Galaxy && top.Galaxy.currHistoryPanel ) {\n\t                        top.Galaxy.currHistoryPanel.loadCurrentHistory();\n\t                    }\n\t                }\n\t            });\n\t            headerButtons.push( buttonRefresh );\n\t\n\t            // opens a drop down menu with history related functions (like view all, delete, share, etc.)\n\t            var buttonOptions = new Ui.ButtonLink({\n\t                id      : 'history-options-button',\n\t                title   : 'History options',\n\t                cls     : 'panel-header-button',\n\t                target  : 'galaxy_main',\n\t                icon    : 'fa fa-cog',\n\t                href    : Galaxy.root + 'root/history_options'\n\t            });\n\t            headerButtons.push( buttonOptions );\n\t\n\t            // goes to a page showing all the users histories in panel form (for logged in users)\n\t            if( !Galaxy.user.isAnonymous() ){\n\t                var buttonViewMulti = new Ui.ButtonLink({\n\t                    id      : 'history-view-multi-button',\n\t                    title   : 'View all histories',\n\t                    cls     : 'panel-header-button',\n\t                    icon    : 'fa fa-columns',\n\t                    href    : Galaxy.root + 'history/view_multiple'\n\t                });\n\t                headerButtons.push( buttonViewMulti );\n\t            }\n\t\n\t            // define components (is used in app-view.js)\n\t            this.components = {\n\t                header  : {\n\t                    title   : 'History',\n\t                    cls     : 'history-panel-header',\n\t                    buttons : headerButtons\n\t                },\n\t                body    : {\n\t                    cls     : 'unified-panel-body-background',\n\t                }\n\t            };\n\t\n\t            // build history options menu\n\t            Galaxy.historyOptionsMenu = optionsMenu( buttonOptions.$el, {\n\t                anonymous    : Galaxy.user.isAnonymous(),\n\t                purgeAllowed : Galaxy.config.allow_user_dataset_purge,\n\t                root         : Galaxy.root\n\t            });\n\t\n\t            // load current history\n\t            Galaxy.currHistoryPanel = new HistoryPanel.CurrentHistoryPanel({\n\t                el              : this.$el,\n\t                purgeAllowed    : Galaxy.config.allow_user_dataset_purge,\n\t                linkTarget      : 'galaxy_main',\n\t                $scrollContainer: function(){ return this.$el.parent(); }\n\t            });\n\t            Galaxy.currHistoryPanel.connectToQuotaMeter( Galaxy.quotaMeter );\n\t            Galaxy.currHistoryPanel.listenToGalaxy( Galaxy );\n\t            Galaxy.currHistoryPanel.loadCurrentHistory();\n\t        },\n\t\n\t        // body template\n\t        _template: function() {\n\t            return '<div id=\"current-history-panel\" class=\"history-panel\"/>';\n\t        }\n\t    });\n\t\n\t    return {\n\t        left    : LeftPanel,\n\t        center  : CenterPanel,\n\t        right   : RightPanel\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return {\n\t        center: Backbone.View.extend({\n\t            initialize: function() {\n\t                this.setElement( '<iframe src=\"' + Galaxy.root + 'user/login\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>' );\n\t            }\n\t        })\n\t    }\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/**\n\t    This is the entrance point for the Galaxy UI.\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(4),\n\t    __webpack_require__(19),\n\t    __webpack_require__(70),\n\t    __webpack_require__(69),\n\t    __webpack_require__(11),\n\t    __webpack_require__(7),\n\t    __webpack_require__(10),\n\t    __webpack_require__(113),\n\t    __webpack_require__(34),\n\t    __webpack_require__(79),\n\t    __webpack_require__(78)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( Utils, Masthead, Menu, Frame, Portlet, Ui, Modal, QuotaMeter, Panel, Login, Analysis ) {\n\t    console.debug( 'loading app-view' );\n\t    console.debug( 'panel:', Panel );\n\t\n\t    return Backbone.View.extend({\n\t        initialize: function( options ) {\n\t            this.options = Utils.merge( options, {} );\n\t            this.setElement( this._template( options ) );\n\t\n\t            // register this view\n\t            Galaxy.app = this;\n\t\n\t            // url request parameters\n\t            Galaxy.params = this.options.params;\n\t\n\t            // shared backbone router\n\t            Galaxy.router = new Backbone.Router();\n\t\n\t            // configure body\n\t            $( 'body' ).append( this.$el );\n\t\n\t            // adjust parent container\n\t            var $container = $( this.$el.parent() ).attr( 'scroll', 'no' ).addClass( 'full-content' );\n\t            if ( this.options.message_box_visible ) {\n\t                $container.addClass( 'has-message-box' );\n\t                this.$( '#messagebox' ).show();\n\t            }\n\t            if ( this.options.show_inactivity_warning ) {\n\t                $container.addClass( 'has-inactivity-box' );\n\t                this.$( '#inactivebox' ).show();\n\t            }\n\t\n\t            // load global galaxy objects\n\t            if ( !Galaxy.masthead ) {\n\t                Galaxy.masthead = new Masthead.GalaxyMasthead( this.options );\n\t                Galaxy.modal = new Modal.View();\n\t                Galaxy.frame = new Frame.GalaxyFrame();\n\t\n\t                // construct default menu options\n\t                Galaxy.menu = new Menu.GalaxyMenu({\n\t                    masthead    : Galaxy.masthead,\n\t                    config      : this.options\n\t                });\n\t\n\t                // set up the quota meter (And fetch the current user data from trans)\n\t                // add quota meter to masthead\n\t                Galaxy.quotaMeter = new QuotaMeter.UserQuotaMeter({\n\t                    model       : Galaxy.user,\n\t                    el          : Galaxy.masthead.$( '.quota-meter-container' )\n\t                }).render();\n\t            }\n\t\n\t            // build page\n\t            if ( Galaxy.config.require_login && !Galaxy.user.id ) {\n\t                this.build( Login );\n\t            } else {\n\t                this.build( Analysis );\n\t            }\n\t        },\n\t\n\t        /** Display content */\n\t        display: function ( view, target ) {\n\t            // TODO: Remove this line after select2 update\n\t            $( '.select2-hidden-accessible' ).remove();\n\t            this.panels && this.panels[ target || 'center' ].display( view );\n\t        },\n\t\n\t        /** Build all panels **/\n\t        build: function( Views ) {\n\t            this.panels = [];\n\t            var options = $.extend( true, {}, this.options );\n\t            var panel_ids = [ 'center', 'left', 'right' ];\n\t            for ( var i in panel_ids ) {\n\t                var id = panel_ids[ i ];\n\t                this.$( '#' + id ).remove();\n\t                if ( !Views[ id ] ) {\n\t                    this.$( '#center' ).css( id, '0' );\n\t                    continue;\n\t                }\n\t                var view = this.panels[ id ] = new Views[ id ]( options );\n\t                if ( id == 'center' ) {\n\t                    this.$el.append( $( '<div id=\"' + id + '\"/>' ).addClass( 'inbound' ).append( view.$el ) );\n\t                } else {\n\t                    var components = Utils.merge( view.components, {\n\t                        header  : {\n\t                            title   : '',\n\t                            cls     : '',\n\t                            buttons : []\n\t                        },\n\t                        body    : {\n\t                            cls     : ''\n\t                        }\n\t                    });\n\t                    var $panel = $( this._templatePanel( id ) );\n\t                    $panel.find('.panel-header-text').html( components.header.title );\n\t                    $panel.find('.unified-panel-header-inner').addClass( components.header.cls );\n\t                    for ( var i in components.header.buttons ) {\n\t                        $panel.find('.panel-header-buttons').append( components.header.buttons[ i ].$el );\n\t                    }\n\t                    $panel.find('.unified-panel-body').addClass( components.body.cls ).append( view.$el );\n\t                    var panel = new Panel( {\n\t                        center  : this.$( '#center' ),\n\t                        panel   : $panel,\n\t                        drag    : $panel.find('.unified-panel-footer > .drag' ),\n\t                        toggle  : $panel.find('.unified-panel-footer > .panel-collapse' ),\n\t                        right   : id == 'right'\n\t                    } );\n\t                    this.$el.append( $panel );\n\t                }\n\t            }\n\t        },\n\t\n\t        /** Template for left/right panel */\n\t        _templatePanel: function( id ) {\n\t            return  '<div id=\"' + id + '\">' +\n\t                        '<div class=\"unified-panel-header\" unselectable=\"on\">' +\n\t                            '<div class=\"unified-panel-header-inner\">' +\n\t                                '<div class=\"panel-header-buttons\" style=\"float: right\"/>' +\n\t                                '<div class=\"panel-header-text\"/>' +\n\t                            '</div>' +\n\t                        '</div>' +\n\t                        '<div class=\"unified-panel-body\"/>' +\n\t                        '<div class=\"unified-panel-footer\">' +\n\t                            '<div class=\"panel-collapse ' + id + '\"/>' +\n\t                            '<div class=\"drag\"/>' +\n\t                        '</div>' +\n\t                    '</div>';\n\t        },\n\t\n\t        /** Main template **/\n\t        _template: function() {\n\t            return  '<div id=\"everything\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\">' +\n\t                        '<div id=\"background\"/>' +\n\t                        '<div id=\"messagebox\" class=\"panel-' + Galaxy.config.message_box_class + '-message\" style=\"display: none;\">' +\n\t                            Galaxy.config.message_box_content +\n\t                        '</div>' +\n\t                        '<div id=\"inactivebox\" class=\"panel-warning-message\" style=\"display: none;\">' +\n\t                            Galaxy.config.inactivity_box_content +\n\t                                ' <a href=\"' + Galaxy.root + 'user/resend_verification\">Resend verification.</a>' +\n\t                        '</div>' +\n\t                    '</div>';\n\t        }\n\t    });\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(6),\n\t    __webpack_require__(43),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( baseMVC, citationModel, _l ){\n\t\n\tvar CitationView = Backbone.View.extend({\n\t    tagName: 'div',\n\t    className: 'citations',\n\t    render: function() {\n\t        this.$el.append( \"<p>\" + this.formattedReference() + \"</p>\" );\n\t        return this;\n\t    },\n\t    formattedReference: function() {\n\t        var model = this.model;\n\t        var entryType = model.entryType();\n\t        var fields = model.fields();\n\t\n\t        var ref = \"\";\n\t        // Code inspired by...\n\t        // https://github.com/vkaravir/bib-publication-list/blob/master/src/bib-publication-list.js\n\t        var authorsAndYear = this._asSentence( (fields.author ? fields.author : \"\") + (fields.year ? (\" (\" + fields.year + \")\") : \"\") ) + \" \";\n\t        var title = fields.title || \"\";\n\t        var pages = fields.pages ? (\"pp. \" + fields.pages) : \"\";\n\t        var address = fields.address;\n\t        if( entryType == \"article\" ) {\n\t            var volume = (fields.volume ? fields.volume : \"\") +\n\t                         (fields.number ? ( \" (\" + fields.number + \")\" ) : \"\") +\n\t                         (pages ? \", \" + pages : \"\");\n\t            ref = authorsAndYear + this._asSentence(title) +\n\t                    (fields.journal ? (\"In <em>\" + fields.journal + \", \") : \"\") +\n\t                    this._asSentence(volume) + \n\t                    this._asSentence(fields.address) +\n\t                    \"<\\/em>\";\n\t        } else if( entryType == \"inproceedings\" || entryType == \"proceedings\" ) {\n\t            ref = authorsAndYear + \n\t                    this._asSentence(title) + \n\t                    (fields.booktitle ? (\"In <em>\" + fields.booktitle + \", \") : \"\") +\n\t                    (pages ? pages : \"\") +\n\t                    (address ? \", \" + address : \"\") + \n\t                    \".<\\/em>\";\n\t        } else if( entryType == \"mastersthesis\" || entryType == \"phdthesis\" ) {\n\t            ref = authorsAndYear + this._asSentence(title) +\n\t                    (fields.howpublished ? fields.howpublished + \". \" : \"\") +\n\t                    (fields.note ? fields.note + \".\" : \"\");\n\t        } else if( entryType == \"techreport\" ) {\n\t            ref = authorsAndYear + this._asSentence(title) +\n\t                    this._asSentence(fields.institution) +\n\t                    this._asSentence(fields.number) +\n\t                    this._asSentence(fields.type);\n\t        } else if( entryType == \"book\" || entryType == \"inbook\" || entryType == \"incollection\" ) {\n\t            ref = authorsAndYear + \" \" + this._formatBookInfo(fields);\n\t        } else {\n\t            ref = authorsAndYear + \" \" + this._asSentence(title) +\n\t                    this._asSentence(fields.howpublished) +\n\t                    this._asSentence(fields.note);\n\t        }\n\t        var doiUrl = \"\";\n\t        if( fields.doi ) {\n\t            doiUrl = 'http://dx.doi.org/' + fields.doi;\n\t            ref += '[<a href=\"' + doiUrl + '\" target=\"_blank\">doi:' + fields.doi + \"</a>]\";\n\t        }\n\t        var url = fields.url || doiUrl;\n\t        if( url ) {\n\t            ref += '[<a href=\"' + url + '\" target=\"_blank\">Link</a>]';\n\t        }\n\t        return ref;\n\t    },\n\t    _formatBookInfo: function(fields) {\n\t        var info = \"\";\n\t        if( fields.chapter ) {\n\t            info += fields.chapter + \" in \";\n\t        }\n\t        if( fields.title ) {\n\t            info += \"<em>\" + fields.title + \"<\\/em>\";\n\t        }\n\t        if( fields.editor ) {\n\t            info += \", Edited by \" + fields.editor + \", \";\n\t        }\n\t        if( fields.publisher) {\n\t            info += \", \" + fields.publisher;\n\t        }\n\t        if( fields.pages ) {\n\t            info += \", pp. \" + fields.pages + \"\";\n\t        }\n\t        if( fields.series ) {\n\t            info += \", <em>\" + fields.series + \"<\\/em>\";\n\t        }\n\t        if( fields.volume ) {\n\t            info += \", Vol.\" + fields.volume;\n\t        }\n\t        if( fields.issn ) {\n\t            info += \", ISBN: \" + fields.issn;\n\t        }\n\t        return info + \".\";\n\t    },\n\t    _asSentence: function(str) {\n\t        return (str && str.trim()) ? str + \". \" : \"\";\n\t    }\n\t});\n\t\n\tvar CitationListView = Backbone.View.extend({\n\t    el: '#citations',\n\t    /**\n\t     * Set up view.\n\t     */\n\t    initialize: function() {\n\t        this.listenTo( this.collection, 'add', this.renderCitation );\n\t    },\n\t\n\t    events: {\n\t        'click .citations-to-bibtex': 'showBibtex',\n\t        'click .citations-to-formatted': 'showFormatted'\n\t    },\n\t\n\t    renderCitation: function( citation ) {\n\t        var citationView = new CitationView( { model: citation } );\n\t        this.$(\".citations-formatted\").append( citationView.render().el );\n\t        var rawTextarea = this.$(\".citations-bibtex-text\");\n\t        rawTextarea.val( rawTextarea.val() + \"\\n\\r\" + citation.attributes.content );\n\t    },\n\t\n\t    render: function() {\n\t        this.$el.html(this.citationsElement());\n\t        this.collection.each(function( item ){\n\t            this.renderCitation( item );\n\t        }, this);\n\t        this.showFormatted();\n\t    },\n\t\n\t    showBibtex: function() {\n\t        this.$(\".citations-to-formatted\").show();\n\t        this.$(\".citations-to-bibtex\").hide();\n\t        this.$(\".citations-bibtex\").show();\n\t        this.$(\".citations-formatted\").hide();\n\t        this.$(\".citations-bibtex-text\").select();\n\t    },\n\t\n\t    showFormatted: function() {\n\t        this.$(\".citations-to-formatted\").hide();\n\t        this.$(\".citations-to-bibtex\").show();\n\t        this.$(\".citations-bibtex\").hide();\n\t        this.$(\".citations-formatted\").show();\n\t    },\n\t\n\t    partialWarningElement: function() {\n\t        if( this.collection.partial ) {\n\t            return [\n\t                '<div style=\"padding:5px 10px\">',\n\t                '<b>Warning: This is a experimental feature.</b> Most Galaxy tools will not annotate',\n\t                ' citations explicitly at this time. When writing up your analysis, please manually',\n\t                ' review your histories and find all references',\n\t                ' that should be cited in order to completely describe your work. Also, please remember to',\n\t                ' <a href=\"https://wiki.galaxyproject.org/CitingGalaxy\">cite Galaxy</a>.',\n\t                '</div>',\n\t            ].join('');\n\t        } else {\n\t            return '';\n\t        }\n\t    },\n\t\n\t    citationsElement: function() {\n\t        return [\n\t            '<div class=\"toolForm\">',\n\t                '<div class=\"toolFormTitle\">',\n\t                    _l(\"Citations\"),\n\t                    ' <button type=\"button\" class=\"btn btn-xs citations-to-bibtex\" title=\"Show all in BibTeX format.\"><i class=\"fa fa-pencil-square-o\"></i> Show BibTeX</button>',\n\t                    ' <button type=\"button\" class=\"btn btn-xs citations-to-formatted\" title=\"Return to formatted citation list.\"><i class=\"fa fa-times\"></i> Hide BibTeX</button>',\n\t                '</div>',\n\t                '<div class=\"toolFormBody\" style=\"padding:5px 10px\">',\n\t                this.partialWarningElement(),\n\t                '<span class=\"citations-formatted\" style=\"word-wrap: break-word;\"></span>',\n\t                '</div>',\n\t                '<div class=\"citations-bibtex toolFormBody\" style=\"padding:5px 10px\">',\n\t                '<textarea style=\"width: 100%; height: 500px;\" class=\"citations-bibtex-text\"></textarea>',\n\t                '</div>',\n\t            '</div>'\n\t        ].join( '' );\n\t    }\n\t});\n\t\n\t//==============================================================================\n\treturn {\n\t    CitationView : CitationView,\n\t    CitationListView  : CitationListView\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(jQuery, _) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(20),\n\t    __webpack_require__(44),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( DC_LI, DATASET_LI_EDIT, BASE_MVC, _l ){\n\t/* global Backbone */\n\t//==============================================================================\n\tvar DCListItemView = DC_LI.DCListItemView;\n\t/** @class Edit view for DatasetCollection.\n\t */\n\tvar DCListItemEdit = DCListItemView.extend(\n\t/** @lends DCListItemEdit.prototype */{\n\t//TODO: may not be needed\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** override to add linkTarget */\n\t    initialize : function( attributes ){\n\t        DCListItemView.prototype.initialize.call( this, attributes );\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'DCListItemEdit(' + modelString + ')';\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\tvar DCEListItemView = DC_LI.DCEListItemView;\n\t/** @class Read only view for DatasetCollectionElement.\n\t */\n\tvar DCEListItemEdit = DCEListItemView.extend(\n\t/** @lends DCEListItemEdit.prototype */{\n\t//TODO: this might be expendable - compacted with HDAListItemView\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** set up */\n\t    initialize  : function( attributes ){\n\t        DCEListItemView.prototype.initialize.call( this, attributes );\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'DCEListItemEdit(' + modelString + ')';\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t// NOTE: this does not inherit from DatasetDCEListItemView as you would expect\n\t//TODO: but should - if we can find something simpler than using diamond\n\t/** @class Editable view for a DatasetCollectionElement that is also an DatasetAssociation\n\t *      (a dataset contained in a dataset collection).\n\t */\n\tvar DatasetDCEListItemEdit = DATASET_LI_EDIT.DatasetListItemEdit.extend(\n\t/** @lends DatasetDCEListItemEdit.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** set up */\n\t    initialize  : function( attributes ){\n\t        DATASET_LI_EDIT.DatasetListItemEdit.prototype.initialize.call( this, attributes );\n\t    },\n\t\n\t    // NOTE: this does not inherit from DatasetDCEListItemView - so we duplicate this here\n\t    //TODO: fix\n\t    /** In this override, only get details if in the ready state.\n\t     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n\t     */\n\t    _fetchModelDetails : function(){\n\t        var view = this;\n\t        if( view.model.inReadyState() && !view.model.hasDetails() ){\n\t            return view.model.fetch({ silent: true });\n\t        }\n\t        return jQuery.when();\n\t    },\n\t\n\t    /** Override to remove delete button */\n\t    _renderDeleteButton : function(){\n\t        return null;\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'DatasetDCEListItemEdit(' + modelString + ')';\n\t    }\n\t});\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tDatasetDCEListItemEdit.prototype.templates = (function(){\n\t\n\t    return _.extend( {}, DATASET_LI_EDIT.DatasetListItemEdit.prototype.templates, {\n\t        titleBar : DC_LI.DatasetDCEListItemView.prototype.templates.titleBar\n\t    });\n\t}());\n\t\n\t\n\t//==============================================================================\n\t/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n\t *      (a nested DC).\n\t */\n\tvar NestedDCDCEListItemEdit = DC_LI.NestedDCDCEListItemView.extend(\n\t/** @lends NestedDCDCEListItemEdit.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    // comment this out to suppress log output\n\t    //logger              : console,\n\t\n\t    // ......................................................................... misc\n\t    /** String representation */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'NestedDCDCEListItemEdit(' + modelString + ')';\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        DCListItemEdit          : DCListItemEdit,\n\t        DCEListItemEdit         : DCEListItemEdit,\n\t        DatasetDCEListItemEdit  : DatasetDCEListItemEdit,\n\t        NestedDCDCEListItemEdit : NestedDCDCEListItemEdit\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(14),\n\t    __webpack_require__(21),\n\t    __webpack_require__(82),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5),\n\t    __webpack_require__(12),\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( DC_PANEL, DC_MODEL, DC_EDIT, BASE_MVC, _l ){\n\t/* =============================================================================\n\tTODO:\n\t\n\t============================================================================= */\n\t/** @class editable View/Controller for a dataset collection.\n\t */\n\tvar _super = DC_PANEL.CollectionPanel;\n\tvar CollectionPanelEdit = _super.extend(\n\t/** @lends CollectionPanel.prototype */{\n\t    //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** sub view class used for datasets */\n\t    DatasetDCEViewClass : DC_EDIT.DatasetDCEListItemEdit,\n\t    /** sub view class used for nested collections */\n\t    NestedDCDCEViewClass: DC_EDIT.NestedDCDCEListItemEdit,\n\t\n\t    // ......................................................................... SET UP\n\t    /** Set up the view, set up storage, bind listeners to HistoryContents events\n\t     *  @param {Object} attributes optional settings for the panel\n\t     */\n\t    initialize : function( attributes ){\n\t        _super.prototype.initialize.call( this, attributes );\n\t    },\n\t\n\t    /** In this override, make the collection name editable\n\t     */\n\t    _setUpBehaviors : function( $where ){\n\t        $where = $where || this.$el;\n\t        _super.prototype._setUpBehaviors.call( this, $where );\n\t        if( !this.model ){ return; }\n\t\n\t        // anon users shouldn't have access to any of the following\n\t        if( !Galaxy.currUser || Galaxy.currUser.isAnonymous() ){\n\t            return;\n\t        }\n\t\n\t        //TODO: extract\n\t        var panel = this,\n\t            nameSelector = '> .controls .name';\n\t        $where.find( nameSelector )\n\t            .attr( 'title', _l( 'Click to rename collection' ) )\n\t            .tooltip({ placement: 'bottom' })\n\t            .make_text_editable({\n\t                on_finish: function( newName ){\n\t                    var previousName = panel.model.get( 'name' );\n\t                    if( newName && newName !== previousName ){\n\t                        panel.$el.find( nameSelector ).text( newName );\n\t                        panel.model.save({ name: newName })\n\t                            .fail( function(){\n\t                                panel.$el.find( nameSelector ).text( panel.model.previous( 'name' ) );\n\t                            });\n\t                    } else {\n\t                        panel.$el.find( nameSelector ).text( previousName );\n\t                    }\n\t                }\n\t            });\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    /** string rep */\n\t    toString    : function(){\n\t        return 'CollectionPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t// =============================================================================\n\t/** @class non-editable, read-only View/Controller for a dataset collection. */\n\tvar ListCollectionPanelEdit = CollectionPanelEdit.extend(\n\t/** @lends ListCollectionPanel.prototype */{\n\t\n\t    //TODO: not strictly needed - due to switch in CollectionPanel._getContentClass\n\t    /** sub view class used for datasets */\n\t    DatasetDCEViewClass : DC_EDIT.DatasetDCEListItemEdit,\n\t\n\t    // ........................................................................ misc\n\t    /** string rep */\n\t    toString    : function(){\n\t        return 'ListCollectionPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t// =============================================================================\n\t/** @class Editable, read-only View/Controller for a dataset collection. */\n\tvar PairCollectionPanelEdit = ListCollectionPanelEdit.extend(\n\t/** @lends PairCollectionPanelEdit.prototype */{\n\t\n\t    // ........................................................................ misc\n\t    /** string rep */\n\t    toString    : function(){\n\t        return 'PairCollectionPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t// =============================================================================\n\t/** @class Editable (roughly since these collections are immutable),\n\t *  View/Controller for a dataset collection.\n\t */\n\tvar NestedPairCollectionPanelEdit = PairCollectionPanelEdit.extend(\n\t/** @lends NestedPairCollectionPanelEdit.prototype */{\n\t\n\t    /** Override to remove the editable text from the name/identifier - these collections are considered immutable */\n\t    _setUpBehaviors : function( $where ){\n\t        _super.prototype._setUpBehaviors.call( this, $where );\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    /** string rep */\n\t    toString    : function(){\n\t        return 'NestedPairCollectionPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t// =============================================================================\n\t/** @class non-editable, read-only View/Controller for a dataset collection. */\n\tvar ListOfPairsCollectionPanelEdit = CollectionPanelEdit.extend(\n\t/** @lends ListOfPairsCollectionPanel.prototype */{\n\t\n\t    //TODO: not strictly needed - due to switch in CollectionPanel._getContentClass\n\t    /** sub view class used for nested collections */\n\t    NestedDCDCEViewClass : DC_EDIT.NestedDCDCEListItemEdit.extend({\n\t        foldoutPanelClass : NestedPairCollectionPanelEdit\n\t    }),\n\t\n\t    // ........................................................................ misc\n\t    /** string rep */\n\t    toString    : function(){\n\t        return 'ListOfPairsCollectionPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        CollectionPanelEdit             : CollectionPanelEdit,\n\t        ListCollectionPanelEdit         : ListCollectionPanelEdit,\n\t        PairCollectionPanelEdit         : PairCollectionPanelEdit,\n\t        ListOfPairsCollectionPanelEdit  : ListOfPairsCollectionPanelEdit\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, jQuery, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(124),\n\t    __webpack_require__(65),\n\t    __webpack_require__(22),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5),\n\t    __webpack_require__(62)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( levenshteinDistance, naturalSort, LIST_COLLECTION_CREATOR, baseMVC, _l ){\n\t\n\tvar logNamespace = 'collections';\n\t/* ============================================================================\n\tTODO:\n\t\n\t\n\tPROGRAMMATICALLY:\n\tcurrPanel.once( 'rendered', function(){\n\t    currPanel.showSelectors();\n\t    currPanel.selectAll();\n\t    _.last( currPanel.actionsPopup.options ).func();\n\t});\n\t\n\t============================================================================ */\n\t/** A view for paired datasets in the collections creator.\n\t */\n\tvar PairView = Backbone.View.extend( baseMVC.LoggableMixin ).extend({\n\t    _logNamespace : logNamespace,\n\t\n\t    tagName     : 'li',\n\t    className   : 'dataset paired',\n\t\n\t    initialize : function( attributes ){\n\t        this.pair = attributes.pair || {};\n\t    },\n\t\n\t    template : _.template([\n\t        '<span class=\"forward-dataset-name flex-column\"><%= pair.forward.name %></span>',\n\t        '<span class=\"pair-name-column flex-column\">',\n\t            '<span class=\"pair-name\"><%= pair.name %></span>',\n\t        '</span>',\n\t        '<span class=\"reverse-dataset-name flex-column\"><%= pair.reverse.name %></span>'\n\t    ].join('')),\n\t\n\t    render : function(){\n\t        this.$el\n\t            .attr( 'draggable', true )\n\t            .data( 'pair', this.pair )\n\t            .html( this.template({ pair: this.pair }) )\n\t            .addClass( 'flex-column-container' );\n\t        return this;\n\t    },\n\t\n\t    events : {\n\t        'dragstart'         : '_dragstart',\n\t        'dragend'           : '_dragend',\n\t        'dragover'          : '_sendToParent',\n\t        'drop'              : '_sendToParent'\n\t    },\n\t\n\t    /** dragging pairs for re-ordering */\n\t    _dragstart : function( ev ){\n\t        ev.currentTarget.style.opacity = '0.4';\n\t        if( ev.originalEvent ){ ev = ev.originalEvent; }\n\t\n\t        ev.dataTransfer.effectAllowed = 'move';\n\t        ev.dataTransfer.setData( 'text/plain', JSON.stringify( this.pair ) );\n\t\n\t        this.$el.parent().trigger( 'pair.dragstart', [ this ] );\n\t    },\n\t\n\t    /** dragging pairs for re-ordering */\n\t    _dragend : function( ev ){\n\t        ev.currentTarget.style.opacity = '1.0';\n\t        this.$el.parent().trigger( 'pair.dragend', [ this ] );\n\t    },\n\t\n\t    /** manually bubble up an event to the parent/container */\n\t    _sendToParent : function( ev ){\n\t        this.$el.parent().trigger( ev );\n\t    },\n\t\n\t    /** string rep */\n\t    toString : function(){\n\t        return 'PairView(' + this.pair.name + ')';\n\t    }\n\t});\n\t\n\t\n\t// ============================================================================\n\t/** returns an autopair function that uses the provided options.match function */\n\tfunction autoPairFnBuilder( options ){\n\t    options = options || {};\n\t    options.createPair = options.createPair || function _defaultCreatePair( params ){\n\t        this.debug( 'creating pair:', params.listA[ params.indexA ].name, params.listB[ params.indexB ].name );\n\t        params = params || {};\n\t        return this._pair(\n\t            params.listA.splice( params.indexA, 1 )[0],\n\t            params.listB.splice( params.indexB, 1 )[0],\n\t            { silent: true }\n\t        );\n\t    };\n\t    // compile these here outside of the loop\n\t    var _regexps = [];\n\t    function getRegExps(){\n\t        if( !_regexps.length ){\n\t            _regexps = [\n\t                new RegExp( this.filters[0] ),\n\t                new RegExp( this.filters[1] )\n\t            ];\n\t        }\n\t        return _regexps;\n\t    }\n\t    // mangle params as needed\n\t    options.preprocessMatch = options.preprocessMatch || function _defaultPreprocessMatch( params ){\n\t        var regexps = getRegExps.call( this );\n\t        return _.extend( params, {\n\t            matchTo     : params.matchTo.name.replace( regexps[0], '' ),\n\t            possible    : params.possible.name.replace( regexps[1], '' )\n\t        });\n\t    };\n\t\n\t    return function _strategy( params ){\n\t        this.debug( 'autopair _strategy ---------------------------' );\n\t        params = params || {};\n\t        var listA = params.listA,\n\t            listB = params.listB,\n\t            indexA = 0, indexB,\n\t            bestMatch = {\n\t                score : 0.0,\n\t                index : null\n\t            },\n\t            paired = [];\n\t        //console.debug( 'params:', JSON.stringify( params, null, '  ' ) );\n\t        this.debug( 'starting list lens:', listA.length, listB.length );\n\t        this.debug( 'bestMatch (starting):', JSON.stringify( bestMatch, null, '  ' ) );\n\t\n\t        while( indexA < listA.length ){\n\t            var matchTo = listA[ indexA ];\n\t            bestMatch.score = 0.0;\n\t\n\t            for( indexB=0; indexB<listB.length; indexB++ ){\n\t                var possible = listB[ indexB ];\n\t                this.debug( indexA + ':' + matchTo.name );\n\t                this.debug( indexB + ':' + possible.name );\n\t\n\t                // no matching with self\n\t                if( listA[ indexA ] !== listB[ indexB ] ){\n\t                    bestMatch = options.match.call( this, options.preprocessMatch.call( this, {\n\t                        matchTo : matchTo,\n\t                        possible: possible,\n\t                        index   : indexB,\n\t                        bestMatch : bestMatch\n\t                    }));\n\t                    this.debug( 'bestMatch:', JSON.stringify( bestMatch, null, '  ' ) );\n\t                    if( bestMatch.score === 1.0 ){\n\t                        this.debug( 'breaking early due to perfect match' );\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            var scoreThreshold = options.scoreThreshold.call( this );\n\t            this.debug( 'scoreThreshold:', scoreThreshold );\n\t            this.debug( 'bestMatch.score:', bestMatch.score );\n\t\n\t            if( bestMatch.score >= scoreThreshold ){\n\t                this.debug( 'creating pair' );\n\t                paired.push( options.createPair.call( this, {\n\t                    listA   : listA,\n\t                    indexA  : indexA,\n\t                    listB   : listB,\n\t                    indexB  : bestMatch.index\n\t                }));\n\t                this.debug( 'list lens now:', listA.length, listB.length );\n\t            } else {\n\t                indexA += 1;\n\t            }\n\t            if( !listA.length || !listB.length ){\n\t                return paired;\n\t            }\n\t        }\n\t        this.debug( 'paired:', JSON.stringify( paired, null, '  ' ) );\n\t        this.debug( 'autopair _strategy ---------------------------' );\n\t        return paired;\n\t    };\n\t}\n\t\n\t\n\t// ============================================================================\n\t/** An interface for building collections of paired datasets.\n\t */\n\tvar PairedCollectionCreator = Backbone.View.extend( baseMVC.LoggableMixin ).extend({\n\t    _logNamespace : logNamespace,\n\t\n\t    className: 'list-of-pairs-collection-creator collection-creator flex-row-container',\n\t\n\t    /** set up initial options, instance vars, behaviors, and autopair (if set to do so) */\n\t    initialize : function( attributes ){\n\t        this.metric( 'PairedCollectionCreator.initialize', attributes );\n\t        //this.debug( '-- PairedCollectionCreator:', attributes );\n\t\n\t        attributes = _.defaults( attributes, {\n\t            datasets            : [],\n\t            filters             : this.DEFAULT_FILTERS,\n\t            automaticallyPair   : true,\n\t            strategy            : 'lcs',\n\t            matchPercentage     : 0.9,\n\t            twoPassAutopairing  : true\n\t        });\n\t\n\t        /** unordered, original list */\n\t        this.initialList = attributes.datasets;\n\t\n\t        /** is this from a history? if so, what's its id? */\n\t        this.historyId = attributes.historyId;\n\t\n\t        /** which filters should be used initially? (String[2] or name in commonFilters) */\n\t        this.filters = this.commonFilters[ attributes.filters ] || this.commonFilters[ this.DEFAULT_FILTERS ];\n\t        if( _.isArray( attributes.filters ) ){\n\t            this.filters = attributes.filters;\n\t        }\n\t\n\t        /** try to auto pair the unpaired datasets on load? */\n\t        this.automaticallyPair = attributes.automaticallyPair;\n\t\n\t        /** what method to use for auto pairing (will be passed aggression level) */\n\t        this.strategy = this.strategies[ attributes.strategy ] || this.strategies[ this.DEFAULT_STRATEGY ];\n\t        if( _.isFunction( attributes.strategy ) ){\n\t            this.strategy = attributes.strategy;\n\t        }\n\t\n\t        /** distance/mismatch level allowed for autopairing */\n\t        this.matchPercentage = attributes.matchPercentage;\n\t\n\t        /** try to autopair using simple first, then this.strategy on the remainder */\n\t        this.twoPassAutopairing = attributes.twoPassAutopairing;\n\t\n\t        /** remove file extensions (\\.*) from created pair names? */\n\t        this.removeExtensions = true;\n\t        //this.removeExtensions = false;\n\t\n\t        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n\t        this.oncancel = attributes.oncancel;\n\t        /** fn to call when the collection is created (scoped to this) */\n\t        this.oncreate = attributes.oncreate;\n\t\n\t        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n\t        this.autoscrollDist = attributes.autoscrollDist || 24;\n\t\n\t        /** is the unpaired panel shown? */\n\t        this.unpairedPanelHidden = false;\n\t        /** is the paired panel shown? */\n\t        this.pairedPanelHidden = false;\n\t\n\t        /** DOM elements currently being dragged */\n\t        this.$dragging = null;\n\t\n\t        /** Used for blocking UI events during ajax/operations (don't post twice) */\n\t        this.blocking = false;\n\t\n\t        this._setUpBehaviors();\n\t        this._dataSetUp();\n\t    },\n\t\n\t    /** map of common filter pairs by name */\n\t    commonFilters : {\n\t        illumina        : [ '_1', '_2' ],\n\t        Rs              : [ '_R1', '_R2' ]\n\t    },\n\t    /** which commonFilter to use by default */\n\t    DEFAULT_FILTERS : 'illumina',\n\t\n\t    /** map of name->fn for autopairing */\n\t    strategies : {\n\t        'simple'        : 'autopairSimple',\n\t        'lcs'           : 'autopairLCS',\n\t        'levenshtein'   : 'autopairLevenshtein'\n\t    },\n\t    /** default autopair strategy name */\n\t    DEFAULT_STRATEGY : 'lcs',\n\t\n\t    // ------------------------------------------------------------------------ process raw list\n\t    /** set up main data: cache initialList, sort, and autopair */\n\t    _dataSetUp : function(){\n\t        //this.debug( '-- _dataSetUp' );\n\t\n\t        this.paired = [];\n\t        this.unpaired = [];\n\t\n\t        this.selectedIds = [];\n\t\n\t        // sort initial list, add ids if needed, and save new working copy to unpaired\n\t        this._sortInitialList();\n\t        this._ensureIds();\n\t        this.unpaired = this.initialList.slice( 0 );\n\t\n\t        if( this.automaticallyPair ){\n\t            this.autoPair();\n\t            this.once( 'rendered:initial', function(){\n\t                this.trigger( 'autopair' );\n\t            });\n\t        }\n\t    },\n\t\n\t    /** sort initial list */\n\t    _sortInitialList : function(){\n\t        //this.debug( '-- _sortInitialList' );\n\t        this._sortDatasetList( this.initialList );\n\t    },\n\t\n\t    /** sort a list of datasets */\n\t    _sortDatasetList : function( list ){\n\t        // currently only natural sort by name\n\t        list.sort( function( a, b ){ return naturalSort( a.name, b.name ); });\n\t        return list;\n\t    },\n\t\n\t    /** add ids to dataset objs in initial list if none */\n\t    _ensureIds : function(){\n\t        this.initialList.forEach( function( dataset ){\n\t            if( !dataset.hasOwnProperty( 'id' ) ){\n\t                dataset.id = _.uniqueId();\n\t            }\n\t        });\n\t        return this.initialList;\n\t    },\n\t\n\t    /** split initial list into two lists, those that pass forward filters & those passing reverse */\n\t    _splitByFilters : function(){\n\t        var regexFilters = this.filters.map( function( stringFilter ){\n\t                return new RegExp( stringFilter );\n\t            }),\n\t            split = [ [], [] ];\n\t\n\t        function _filter( unpaired, filter ){\n\t            return filter.test( unpaired.name );\n\t            //return dataset.name.indexOf( filter ) >= 0;\n\t        }\n\t        this.unpaired.forEach( function _filterEach( unpaired ){\n\t            // 90% of the time this seems to work, but:\n\t            //TODO: this treats *all* strings as regex which may confuse people - possibly check for // surrounding?\n\t            //  would need explanation in help as well\n\t            regexFilters.forEach( function( filter, i ){\n\t                if( _filter( unpaired, filter ) ){\n\t                    split[i].push( unpaired );\n\t                }\n\t            });\n\t        });\n\t        return split;\n\t    },\n\t\n\t    /** add a dataset to the unpaired list in it's proper order */\n\t    _addToUnpaired : function( dataset ){\n\t        // currently, unpaired is natural sorted by name, use binary search to find insertion point\n\t        var binSearchSortedIndex = function( low, hi ){\n\t            if( low === hi ){ return low; }\n\t\n\t            var mid = Math.floor( ( hi - low ) / 2 ) + low,\n\t                compared = naturalSort( dataset.name, this.unpaired[ mid ].name );\n\t\n\t            if( compared < 0 ){\n\t                return binSearchSortedIndex( low, mid );\n\t            } else if( compared > 0 ){\n\t                return binSearchSortedIndex( mid + 1, hi );\n\t            }\n\t            // walk the equal to find the last\n\t            while( this.unpaired[ mid ] && this.unpaired[ mid ].name === dataset.name ){ mid++; }\n\t            return mid;\n\t\n\t        }.bind( this );\n\t\n\t        this.unpaired.splice( binSearchSortedIndex( 0, this.unpaired.length ), 0, dataset );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ auto pairing\n\t    /** two passes to automatically create pairs:\n\t     *  use both simpleAutoPair, then the fn mentioned in strategy\n\t     */\n\t    autoPair : function( strategy ){\n\t        // split first using exact matching\n\t        var split = this._splitByFilters(),\n\t            paired = [];\n\t        if( this.twoPassAutopairing ){\n\t            paired = this.autopairSimple({\n\t                listA : split[0],\n\t                listB : split[1]\n\t            });\n\t            split = this._splitByFilters();\n\t        }\n\t\n\t        // uncomment to see printlns while running tests\n\t        //this.debug = function(){ console.log.apply( console, arguments ); };\n\t\n\t        // then try the remainder with something less strict\n\t        strategy = strategy || this.strategy;\n\t        split = this._splitByFilters();\n\t        paired = paired.concat( this[ strategy ].call( this, {\n\t                listA : split[0],\n\t                listB : split[1]\n\t        }));\n\t        return paired;\n\t    },\n\t\n\t    /** autopair by exact match */\n\t    autopairSimple : autoPairFnBuilder({\n\t        scoreThreshold: function(){ return 1.0; },\n\t        match : function _match( params ){\n\t            params = params || {};\n\t            if( params.matchTo === params.possible ){\n\t                return {\n\t                    index: params.index,\n\t                    score: 1.0\n\t                };\n\t            }\n\t            return params.bestMatch;\n\t        }\n\t    }),\n\t\n\t    /** autopair by levenshtein edit distance scoring */\n\t    autopairLevenshtein : autoPairFnBuilder({\n\t        scoreThreshold: function(){ return this.matchPercentage; },\n\t        match : function _matches( params ){\n\t            params = params || {};\n\t            var distance = levenshteinDistance( params.matchTo, params.possible ),\n\t                score = 1.0 - ( distance / ( Math.max( params.matchTo.length, params.possible.length ) ) );\n\t            if( score > params.bestMatch.score ){\n\t                return {\n\t                    index: params.index,\n\t                    score: score\n\t                };\n\t            }\n\t            return params.bestMatch;\n\t        }\n\t    }),\n\t\n\t    /** autopair by longest common substrings scoring */\n\t    autopairLCS : autoPairFnBuilder({\n\t        scoreThreshold: function(){ return this.matchPercentage; },\n\t        match : function _matches( params ){\n\t            params = params || {};\n\t            var match = this._naiveStartingAndEndingLCS( params.matchTo, params.possible ).length,\n\t                score = match / ( Math.max( params.matchTo.length, params.possible.length ) );\n\t            if( score > params.bestMatch.score ){\n\t                return {\n\t                    index: params.index,\n\t                    score: score\n\t                };\n\t            }\n\t            return params.bestMatch;\n\t        }\n\t    }),\n\t\n\t    /** return the concat'd longest common prefix and suffix from two strings */\n\t    _naiveStartingAndEndingLCS : function( s1, s2 ){\n\t        var fwdLCS = '',\n\t            revLCS = '',\n\t            i = 0, j = 0;\n\t        while( i < s1.length && i < s2.length ){\n\t            if( s1[ i ] !== s2[ i ] ){\n\t                break;\n\t            }\n\t            fwdLCS += s1[ i ];\n\t            i += 1;\n\t        }\n\t        if( i === s1.length ){ return s1; }\n\t        if( i === s2.length ){ return s2; }\n\t\n\t        i = ( s1.length - 1 );\n\t        j = ( s2.length - 1 );\n\t        while( i >= 0 && j >= 0 ){\n\t            if( s1[ i ] !== s2[ j ] ){\n\t                break;\n\t            }\n\t            revLCS = [ s1[ i ], revLCS ].join( '' );\n\t            i -= 1;\n\t            j -= 1;\n\t        }\n\t        return fwdLCS + revLCS;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ pairing / unpairing\n\t    /** create a pair from fwd and rev, removing them from unpaired, and placing the new pair in paired */\n\t    _pair : function( fwd, rev, options ){\n\t        options = options || {};\n\t        //this.debug( '_pair:', fwd, rev );\n\t        var pair = this._createPair( fwd, rev, options.name );\n\t        this.paired.push( pair );\n\t        this.unpaired = _.without( this.unpaired, fwd, rev );\n\t        if( !options.silent ){\n\t            this.trigger( 'pair:new', pair );\n\t        }\n\t        return pair;\n\t    },\n\t\n\t    /** create a pair Object from fwd and rev, adding the name attribute (will guess if not given) */\n\t    _createPair : function( fwd, rev, name ){\n\t        // ensure existance and don't pair something with itself\n\t        if( !( fwd && rev ) || ( fwd === rev ) ){\n\t            throw new Error( 'Bad pairing: ' + [ JSON.stringify( fwd ), JSON.stringify( rev ) ] );\n\t        }\n\t        name = name || this._guessNameForPair( fwd, rev );\n\t        return { forward : fwd, name : name, reverse : rev };\n\t    },\n\t\n\t    /** try to find a good pair name for the given fwd and rev datasets */\n\t    _guessNameForPair : function( fwd, rev, removeExtensions ){\n\t        removeExtensions = ( removeExtensions !== undefined )?( removeExtensions ):( this.removeExtensions );\n\t        var fwdName = fwd.name,\n\t            revName = rev.name,\n\t            lcs = this._naiveStartingAndEndingLCS(\n\t                fwdName.replace( this.filters[0], '' ),\n\t                revName.replace( this.filters[1], '' )\n\t            );\n\t        if( removeExtensions ){\n\t            var lastDotIndex = lcs.lastIndexOf( '.' );\n\t            if( lastDotIndex > 0 ){\n\t                var extension = lcs.slice( lastDotIndex, lcs.length );\n\t                lcs = lcs.replace( extension, '' );\n\t                fwdName = fwdName.replace( extension, '' );\n\t                revName = revName.replace( extension, '' );\n\t            }\n\t        }\n\t        return lcs || ( fwdName + ' & ' + revName );\n\t    },\n\t\n\t    /** unpair a pair, removing it from paired, and adding the fwd,rev datasets back into unpaired */\n\t    _unpair : function( pair, options ){\n\t        options = options || {};\n\t        if( !pair ){\n\t            throw new Error( 'Bad pair: ' + JSON.stringify( pair ) );\n\t        }\n\t        this.paired = _.without( this.paired, pair );\n\t        this._addToUnpaired( pair.forward );\n\t        this._addToUnpaired( pair.reverse );\n\t\n\t        if( !options.silent ){\n\t            this.trigger( 'pair:unpair', [ pair ] );\n\t        }\n\t        return pair;\n\t    },\n\t\n\t    /** unpair all paired datasets */\n\t    unpairAll : function(){\n\t        var pairs = [];\n\t        while( this.paired.length ){\n\t            pairs.push( this._unpair( this.paired[ 0 ], { silent: true }) );\n\t        }\n\t        this.trigger( 'pair:unpair', pairs );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ API\n\t    /** convert a pair into JSON compatible with the collections API */\n\t    _pairToJSON : function( pair, src ){\n\t        src = src || 'hda';\n\t        //TODO: consider making this the pair structure when created instead\n\t        return {\n\t            collection_type : 'paired',\n\t            src             : 'new_collection',\n\t            name            : pair.name,\n\t            element_identifiers : [{\n\t                name    : 'forward',\n\t                id      : pair.forward.id,\n\t                src     : src\n\t            }, {\n\t                name    : 'reverse',\n\t                id      : pair.reverse.id,\n\t                src     : src\n\t            }]\n\t        };\n\t    },\n\t\n\t    /** create the collection via the API\n\t     *  @returns {jQuery.xhr Object}    the jquery ajax request\n\t     */\n\t    createList : function( name ){\n\t        var creator = this,\n\t            root = ( window.Galaxy && Galaxy.options.root )? Galaxy.options.root : '/',\n\t            url = root + 'api/histories/' + this.historyId + '/contents/dataset_collections';\n\t\n\t        //TODO: use ListPairedCollection.create()\n\t        var ajaxData = {\n\t            type            : 'dataset_collection',\n\t            collection_type : 'list:paired',\n\t            name            : _.escape( name || creator.$( '.collection-name' ).val() ),\n\t            element_identifiers : creator.paired.map( function( pair ){\n\t                return creator._pairToJSON( pair );\n\t            })\n\t\n\t        };\n\t        //this.debug( JSON.stringify( ajaxData ) );\n\t        creator.blocking = true;\n\t        return jQuery.ajax( url, {\n\t            type        : 'POST',\n\t            contentType : 'application/json',\n\t            dataType    : 'json',\n\t            data        : JSON.stringify( ajaxData )\n\t        })\n\t        .always( function(){\n\t            creator.blocking = false;\n\t        })\n\t        .fail( function( xhr, status, message ){\n\t            creator._ajaxErrHandler( xhr, status, message );\n\t        })\n\t        .done( function( response, message, xhr ){\n\t            //this.info( 'ok', response, message, xhr );\n\t            creator.trigger( 'collection:created', response, message, xhr );\n\t            creator.metric( 'collection:created', response );\n\t            if( typeof creator.oncreate === 'function' ){\n\t                creator.oncreate.call( this, response, message, xhr );\n\t            }\n\t        });\n\t    },\n\t\n\t    /** handle ajax errors with feedback and details to the user (if available) */\n\t    _ajaxErrHandler : function( xhr, status, message ){\n\t        this.error( xhr, status, message );\n\t        var content = _l( 'An error occurred while creating this collection' );\n\t        if( xhr ){\n\t            if( xhr.readyState === 0 && xhr.status === 0 ){\n\t                content += ': ' + _l( 'Galaxy could not be reached and may be updating.' )\n\t                    + _l( ' Try again in a few minutes.' );\n\t            } else if( xhr.responseJSON ){\n\t                content += '<br /><pre>' + JSON.stringify( xhr.responseJSON ) + '</pre>';\n\t            } else {\n\t                content += ': ' + message;\n\t            }\n\t        }\n\t        creator._showAlert( content, 'alert-danger' );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ rendering\n\t    /** render the entire interface */\n\t    render : function( speed, callback ){\n\t        //this.debug( '-- _render' );\n\t        //this.$el.empty().html( PairedCollectionCreator.templates.main() );\n\t        this.$el.empty().html( PairedCollectionCreator.templates.main() );\n\t        this._renderHeader( speed );\n\t        this._renderMiddle( speed );\n\t        this._renderFooter( speed );\n\t        this._addPluginComponents();\n\t        this.trigger( 'rendered', this );\n\t        return this;\n\t    },\n\t\n\t    /** render the header section */\n\t    _renderHeader : function( speed, callback ){\n\t        //this.debug( '-- _renderHeader' );\n\t        var $header = this.$( '.header' ).empty().html( PairedCollectionCreator.templates.header() )\n\t            .find( '.help-content' ).prepend( $( PairedCollectionCreator.templates.helpContent() ) );\n\t\n\t        this._renderFilters();\n\t        return $header;\n\t    },\n\t    /** fill the filter inputs with the filter values */\n\t    _renderFilters : function(){\n\t        return    this.$( '.forward-column .column-header input' ).val( this.filters[0] )\n\t            .add( this.$( '.reverse-column .column-header input' ).val( this.filters[1] ) );\n\t    },\n\t\n\t    /** render the middle including unpaired and paired sections (which may be hidden) */\n\t    _renderMiddle : function( speed, callback ){\n\t        var $middle = this.$( '.middle' ).empty().html( PairedCollectionCreator.templates.middle() );\n\t\n\t        // (re-) hide the un/paired panels based on instance vars\n\t        if( this.unpairedPanelHidden ){\n\t            this.$( '.unpaired-columns' ).hide();\n\t        } else if( this.pairedPanelHidden ){\n\t            this.$( '.paired-columns' ).hide();\n\t        }\n\t\n\t        this._renderUnpaired();\n\t        this._renderPaired();\n\t        return $middle;\n\t    },\n\t    /** render the unpaired section, showing datasets accrd. to filters, update the unpaired counts */\n\t    _renderUnpaired : function( speed, callback ){\n\t        //this.debug( '-- _renderUnpaired' );\n\t        var creator = this,\n\t            $fwd, $rev, $prd = [],\n\t            split = this._splitByFilters();\n\t        // update unpaired counts\n\t        this.$( '.forward-column .title' )\n\t            .text([ split[0].length, _l( 'unpaired forward' ) ].join( ' ' ));\n\t        this.$( '.forward-column .unpaired-info' )\n\t            .text( this._renderUnpairedDisplayStr( this.unpaired.length - split[0].length ) );\n\t        this.$( '.reverse-column .title' )\n\t            .text([ split[1].length, _l( 'unpaired reverse' ) ].join( ' ' ));\n\t        this.$( '.reverse-column .unpaired-info' )\n\t            .text( this._renderUnpairedDisplayStr( this.unpaired.length - split[1].length ) );\n\t\n\t        this.$( '.unpaired-columns .column-datasets' ).empty();\n\t\n\t        // show/hide the auto pair button if any unpaired are left\n\t        this.$( '.autopair-link' ).toggle( this.unpaired.length !== 0 );\n\t        if( this.unpaired.length === 0 ){\n\t            this._renderUnpairedEmpty();\n\t            return;\n\t        }\n\t\n\t        // create the dataset dom arrays\n\t        $rev = split[1].map( function( dataset, i ){\n\t            // if there'll be a fwd dataset across the way, add a button to pair the row\n\t            if( ( split[0][ i ] !== undefined )\n\t            &&  ( split[0][ i ] !== dataset ) ){\n\t                $prd.push( creator._renderPairButton() );\n\t            }\n\t            return creator._renderUnpairedDataset( dataset );\n\t        });\n\t        $fwd = split[0].map( function( dataset ){\n\t            return creator._renderUnpairedDataset( dataset );\n\t        });\n\t\n\t        if( !$fwd.length && !$rev.length ){\n\t            this._renderUnpairedNotShown();\n\t            return;\n\t        }\n\t        // add to appropo cols\n\t        //TODO: not the best way to render - consider rendering the entire unpaired-columns section in a fragment\n\t        //  and swapping out that\n\t        this.$( '.unpaired-columns .forward-column .column-datasets' ).append( $fwd )\n\t            .add( this.$( '.unpaired-columns .paired-column .column-datasets' ).append( $prd ) )\n\t            .add( this.$( '.unpaired-columns .reverse-column .column-datasets' ).append( $rev ) );\n\t        this._adjUnpairedOnScrollbar();\n\t    },\n\t    /** return a string to display the count of filtered out datasets */\n\t    _renderUnpairedDisplayStr : function( numFiltered ){\n\t        return [ '(', numFiltered, ' ', _l( 'filtered out' ), ')' ].join('');\n\t    },\n\t    /** return an unattached jQuery DOM element to represent an unpaired dataset */\n\t    _renderUnpairedDataset : function( dataset ){\n\t        //TODO: to underscore template\n\t        return $( '<li/>')\n\t            .attr( 'id', 'dataset-' + dataset.id )\n\t            .addClass( 'dataset unpaired' )\n\t            .attr( 'draggable', true )\n\t            .addClass( dataset.selected? 'selected': '' )\n\t            .append( $( '<span/>' ).addClass( 'dataset-name' ).text( dataset.name ) )\n\t            //??\n\t            .data( 'dataset', dataset );\n\t    },\n\t    /** render the button that may go between unpaired datasets, allowing the user to pair a row */\n\t    _renderPairButton : function(){\n\t        //TODO: *not* a dataset - don't pretend like it is\n\t        return $( '<li/>').addClass( 'dataset unpaired' )\n\t            .append( $( '<span/>' ).addClass( 'dataset-name' ).text( _l( 'Pair these datasets' ) ) );\n\t    },\n\t    /** a message to display when no unpaired left */\n\t    _renderUnpairedEmpty : function(){\n\t        //this.debug( '-- renderUnpairedEmpty' );\n\t        var $msg = $( '<div class=\"empty-message\"></div>' )\n\t            .text( '(' + _l( 'no remaining unpaired datasets' ) + ')' );\n\t        this.$( '.unpaired-columns .paired-column .column-datasets' ).empty().prepend( $msg );\n\t        return $msg;\n\t    },\n\t    /** a message to display when no unpaired can be shown with the current filters */\n\t    _renderUnpairedNotShown : function(){\n\t        //this.debug( '-- renderUnpairedEmpty' );\n\t        var $msg = $( '<div class=\"empty-message\"></div>' )\n\t            .text( '(' + _l( 'no datasets were found matching the current filters' ) + ')' );\n\t        this.$( '.unpaired-columns .paired-column .column-datasets' ).empty().prepend( $msg );\n\t        return $msg;\n\t    },\n\t    /** try to detect if the unpaired section has a scrollbar and adjust left column for better centering of all */\n\t    _adjUnpairedOnScrollbar : function(){\n\t        var $unpairedColumns = this.$( '.unpaired-columns' ).last(),\n\t            $firstDataset = this.$( '.unpaired-columns .reverse-column .dataset' ).first();\n\t        if( !$firstDataset.size() ){ return; }\n\t        var ucRight = $unpairedColumns.offset().left + $unpairedColumns.outerWidth(),\n\t            dsRight = $firstDataset.offset().left + $firstDataset.outerWidth(),\n\t            rightDiff = Math.floor( ucRight ) - Math.floor( dsRight );\n\t        //this.debug( 'rightDiff:', ucRight, '-', dsRight, '=', rightDiff );\n\t        this.$( '.unpaired-columns .forward-column' )\n\t            .css( 'margin-left', ( rightDiff > 0 )? rightDiff: 0 );\n\t    },\n\t\n\t    /** render the paired section and update counts of paired datasets */\n\t    _renderPaired : function( speed, callback ){\n\t        //this.debug( '-- _renderPaired' );\n\t        this.$( '.paired-column-title .title' ).text([ this.paired.length, _l( 'paired' ) ].join( ' ' ) );\n\t        // show/hide the unpair all link\n\t        this.$( '.unpair-all-link' ).toggle( this.paired.length !== 0 );\n\t        if( this.paired.length === 0 ){\n\t            this._renderPairedEmpty();\n\t            return;\n\t            //TODO: would be best to return here (the $columns)\n\t        } else {\n\t            // show/hide 'remove extensions link' when any paired and they seem to have extensions\n\t            this.$( '.remove-extensions-link' ).show();\n\t        }\n\t\n\t        this.$( '.paired-columns .column-datasets' ).empty();\n\t        var creator = this;\n\t        this.paired.forEach( function( pair, i ){\n\t            //TODO: cache these?\n\t            var pairView = new PairView({ pair: pair });\n\t            creator.$( '.paired-columns .column-datasets' )\n\t                .append( pairView.render().$el )\n\t                .append([\n\t                    '<button class=\"unpair-btn\">',\n\t                        '<span class=\"fa fa-unlink\" title=\"', _l( 'Unpair' ), '\"></span>',\n\t                    '</button>'\n\t                ].join( '' ));\n\t        });\n\t    },\n\t    /** a message to display when none paired */\n\t    _renderPairedEmpty : function(){\n\t        var $msg = $( '<div class=\"empty-message\"></div>' )\n\t            .text( '(' + _l( 'no paired datasets yet' ) + ')' );\n\t        this.$( '.paired-columns .column-datasets' ).empty().prepend( $msg );\n\t        return $msg;\n\t    },\n\t\n\t    /** render the footer, completion controls, and cancel controls */\n\t    _renderFooter : function( speed, callback ){\n\t        var $footer = this.$( '.footer' ).empty().html( PairedCollectionCreator.templates.footer() );\n\t        this.$( '.remove-extensions' ).prop( 'checked', this.removeExtensions );\n\t        if( typeof this.oncancel === 'function' ){\n\t            this.$( '.cancel-create.btn' ).show();\n\t        }\n\t        return $footer;\n\t    },\n\t\n\t    /** add any jQuery/bootstrap/custom plugins to elements rendered */\n\t    _addPluginComponents : function(){\n\t        this._chooseFiltersPopover( '.choose-filters-link' );\n\t        this.$( '.help-content i' ).hoverhighlight( '.collection-creator', 'rgba( 64, 255, 255, 1.0 )' );\n\t    },\n\t\n\t    /** build a filter selection popover allowing selection of common filter pairs */\n\t    _chooseFiltersPopover : function( selector ){\n\t        function filterChoice( val1, val2 ){\n\t            return [\n\t                '<button class=\"filter-choice btn\" ',\n\t                        'data-forward=\"', val1, '\" data-reverse=\"', val2, '\">',\n\t                    _l( 'Forward' ), ': ', val1, ', ',\n\t                    _l( 'Reverse' ), ': ', val2,\n\t                '</button>'\n\t            ].join('');\n\t        }\n\t        var $popoverContent = $( _.template([\n\t            '<div class=\"choose-filters\">',\n\t                '<div class=\"help\">',\n\t                    _l( 'Choose from the following filters to change which unpaired reads are shown in the display' ),\n\t                ':</div>',\n\t                _.values( this.commonFilters ).map( function( filterSet ){\n\t                    return filterChoice( filterSet[0], filterSet[1] );\n\t                }).join( '' ),\n\t            '</div>'\n\t        ].join(''))({}));\n\t\n\t        return this.$( selector ).popover({\n\t            container   : '.collection-creator',\n\t            placement   : 'bottom',\n\t            html        : true,\n\t            //animation   : false,\n\t            content     : $popoverContent\n\t        });\n\t    },\n\t\n\t    /** add (or clear if clear is truthy) a validation warning to what */\n\t    _validationWarning : function( what, clear ){\n\t        var VALIDATION_CLASS = 'validation-warning';\n\t        if( what === 'name' ){\n\t            what = this.$( '.collection-name' ).add( this.$( '.collection-name-prompt' ) );\n\t            this.$( '.collection-name' ).focus().select();\n\t        }\n\t        if( clear ){\n\t            what = what || this.$( '.' + VALIDATION_CLASS );\n\t            what.removeClass( VALIDATION_CLASS );\n\t        } else {\n\t            what.addClass( VALIDATION_CLASS );\n\t        }\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ events\n\t    /** set up event handlers on self */\n\t    _setUpBehaviors : function(){\n\t        this.once( 'rendered', function(){\n\t            this.trigger( 'rendered:initial', this );\n\t        });\n\t\n\t        this.on( 'pair:new', function(){\n\t            //TODO: ideally only re-render the columns (or even elements) involved\n\t            this._renderUnpaired();\n\t            this._renderPaired();\n\t\n\t            // scroll to bottom where new pairs are added\n\t            //TODO: this doesn't seem to work - innerHeight sticks at 133...\n\t            //  may have to do with improper flex columns\n\t            //var $pairedView = this.$( '.paired-columns' );\n\t            //$pairedView.scrollTop( $pairedView.innerHeight() );\n\t            //this.debug( $pairedView.height() )\n\t            this.$( '.paired-columns' ).scrollTop( 8000000 );\n\t        });\n\t        this.on( 'pair:unpair', function( pairs ){\n\t            //TODO: ideally only re-render the columns (or even elements) involved\n\t            this._renderUnpaired();\n\t            this._renderPaired();\n\t            this.splitView();\n\t        });\n\t\n\t        this.on( 'filter-change', function(){\n\t            this.filters = [\n\t                this.$( '.forward-unpaired-filter input' ).val(),\n\t                this.$( '.reverse-unpaired-filter input' ).val()\n\t            ];\n\t            this.metric( 'filter-change', this.filters );\n\t            this._renderFilters();\n\t            this._renderUnpaired();\n\t        });\n\t\n\t        this.on( 'autopair', function(){\n\t            this._renderUnpaired();\n\t            this._renderPaired();\n\t\n\t            var message, msgClass = null;\n\t            if( this.paired.length ){\n\t                msgClass = 'alert-success';\n\t                message = this.paired.length + ' ' + _l( 'pairs created' );\n\t                if( !this.unpaired.length ){\n\t                    message += ': ' + _l( 'all datasets have been successfully paired' );\n\t                    this.hideUnpaired();\n\t                    this.$( '.collection-name' ).focus();\n\t                }\n\t            } else {\n\t                message = _l( 'Could not automatically create any pairs from the given dataset names' );\n\t            }\n\t            this._showAlert( message, msgClass );\n\t        });\n\t\n\t        //this.on( 'all', function(){\n\t        //    this.info( arguments );\n\t        //});\n\t        return this;\n\t    },\n\t\n\t    events : {\n\t        // header\n\t        'click .more-help'                          : '_clickMoreHelp',\n\t        'click .less-help'                          : '_clickLessHelp',\n\t        'click .header .alert button'               : '_hideAlert',\n\t        'click .forward-column .column-title'       : '_clickShowOnlyUnpaired',\n\t        'click .reverse-column .column-title'       : '_clickShowOnlyUnpaired',\n\t        'click .unpair-all-link'                    : '_clickUnpairAll',\n\t        //TODO: this seems kinda backasswards - re-sending jq event as a backbone event, can we listen directly?\n\t        'change .forward-unpaired-filter input'     : function( ev ){ this.trigger( 'filter-change' ); },\n\t        'focus .forward-unpaired-filter input'      : function( ev ){ $( ev.currentTarget ).select(); },\n\t        'click .autopair-link'                      : '_clickAutopair',\n\t        'click .choose-filters .filter-choice'      : '_clickFilterChoice',\n\t        'click .clear-filters-link'                 : '_clearFilters',\n\t        'change .reverse-unpaired-filter input'     : function( ev ){ this.trigger( 'filter-change' ); },\n\t        'focus .reverse-unpaired-filter input'      : function( ev ){ $( ev.currentTarget ).select(); },\n\t        // unpaired\n\t        'click .forward-column .dataset.unpaired'   : '_clickUnpairedDataset',\n\t        'click .reverse-column .dataset.unpaired'   : '_clickUnpairedDataset',\n\t        'click .paired-column .dataset.unpaired'    : '_clickPairRow',\n\t        'click .unpaired-columns'                   : 'clearSelectedUnpaired',\n\t        'mousedown .unpaired-columns .dataset'      : '_mousedownUnpaired',\n\t        // divider\n\t        'click .paired-column-title'                : '_clickShowOnlyPaired',\n\t        'mousedown .flexible-partition-drag'        : '_startPartitionDrag',\n\t        // paired\n\t        'click .paired-columns .dataset.paired'     : 'selectPair',\n\t        'click .paired-columns'                     : 'clearSelectedPaired',\n\t        'click .paired-columns .pair-name'          : '_clickPairName',\n\t        'click .unpair-btn'                         : '_clickUnpair',\n\t        // paired - drop target\n\t        //'dragenter .paired-columns'                 : '_dragenterPairedColumns',\n\t        //'dragleave .paired-columns .column-datasets': '_dragleavePairedColumns',\n\t        'dragover .paired-columns .column-datasets' : '_dragoverPairedColumns',\n\t        'drop .paired-columns .column-datasets'     : '_dropPairedColumns',\n\t\n\t        'pair.dragstart .paired-columns .column-datasets' : '_pairDragstart',\n\t        'pair.dragend   .paired-columns .column-datasets' : '_pairDragend',\n\t\n\t        // footer\n\t        'change .remove-extensions'                 : function( ev ){ this.toggleExtensions(); },\n\t        'change .collection-name'                   : '_changeName',\n\t        'keydown .collection-name'                  : '_nameCheckForEnter',\n\t        'click .cancel-create'                      : function( ev ){\n\t            if( typeof this.oncancel === 'function' ){\n\t                this.oncancel.call( this );\n\t            }\n\t        },\n\t        'click .create-collection'                  : '_clickCreate'//,\n\t    },\n\t\n\t    // ........................................................................ header\n\t    /** expand help */\n\t    _clickMoreHelp : function( ev ){\n\t        this.$( '.main-help' ).addClass( 'expanded' );\n\t        this.$( '.more-help' ).hide();\n\t    },\n\t    /** collapse help */\n\t    _clickLessHelp : function( ev ){\n\t        this.$( '.main-help' ).removeClass( 'expanded' );\n\t        this.$( '.more-help' ).show();\n\t    },\n\t\n\t    /** show an alert on the top of the interface containing message (alertClass is bootstrap's alert-*)*/\n\t    _showAlert : function( message, alertClass ){\n\t        alertClass = alertClass || 'alert-danger';\n\t        this.$( '.main-help' ).hide();\n\t        this.$( '.header .alert' ).attr( 'class', 'alert alert-dismissable' ).addClass( alertClass ).show()\n\t            .find( '.alert-message' ).html( message );\n\t    },\n\t    /** hide the alerts at the top */\n\t    _hideAlert : function( message ){\n\t        this.$( '.main-help' ).show();\n\t        this.$( '.header .alert' ).hide();\n\t    },\n\t\n\t    /** toggle between showing only unpaired and split view */\n\t    _clickShowOnlyUnpaired : function( ev ){\n\t        //this.debug( 'click unpaired', ev.currentTarget );\n\t        if( this.$( '.paired-columns' ).is( ':visible' ) ){\n\t            this.hidePaired();\n\t        } else {\n\t            this.splitView();\n\t        }\n\t    },\n\t    /** toggle between showing only paired and split view */\n\t    _clickShowOnlyPaired : function( ev ){\n\t        //this.debug( 'click paired' );\n\t        if( this.$( '.unpaired-columns' ).is( ':visible' ) ){\n\t            this.hideUnpaired();\n\t        } else {\n\t            this.splitView();\n\t        }\n\t    },\n\t\n\t    /** hide unpaired, show paired */\n\t    hideUnpaired : function( speed, callback ){\n\t        this.unpairedPanelHidden = true;\n\t        this.pairedPanelHidden = false;\n\t        this._renderMiddle( speed, callback );\n\t    },\n\t    /** hide paired, show unpaired */\n\t    hidePaired : function( speed, callback ){\n\t        this.unpairedPanelHidden = false;\n\t        this.pairedPanelHidden = true;\n\t        this._renderMiddle( speed, callback );\n\t    },\n\t    /** show both paired and unpaired (splitting evenly) */\n\t    splitView : function( speed, callback ){\n\t        this.unpairedPanelHidden = this.pairedPanelHidden = false;\n\t        this._renderMiddle( speed, callback );\n\t        return this;\n\t    },\n\t\n\t    /** unpair all paired and do other super neat stuff which I'm not really sure about yet... */\n\t    _clickUnpairAll : function( ev ){\n\t        this.metric( 'unpairAll' );\n\t        this.unpairAll();\n\t    },\n\t\n\t    /** attempt to autopair */\n\t    _clickAutopair : function( ev ){\n\t        var paired = this.autoPair();\n\t        this.metric( 'autopair', paired.length, this.unpaired.length );\n\t        this.trigger( 'autopair' );\n\t    },\n\t\n\t    /** set the filters based on the data attributes of the button click target */\n\t    _clickFilterChoice : function( ev ){\n\t        var $selected = $( ev.currentTarget );\n\t        this.$( '.forward-unpaired-filter input' ).val( $selected.data( 'forward' ) );\n\t        this.$( '.reverse-unpaired-filter input' ).val( $selected.data( 'reverse' ) );\n\t        this._hideChooseFilters();\n\t        this.trigger( 'filter-change' );\n\t    },\n\t\n\t    /** hide the choose filters popover */\n\t    _hideChooseFilters : function(){\n\t        //TODO: update bootstrap and remove the following hack\n\t        //  see also: https://github.com/twbs/bootstrap/issues/10260\n\t        this.$( '.choose-filters-link' ).popover( 'hide' );\n\t        this.$( '.popover' ).css( 'display', 'none' );\n\t    },\n\t\n\t    /** clear both filters */\n\t    _clearFilters : function( ev ){\n\t        this.$( '.forward-unpaired-filter input' ).val( '' );\n\t        this.$( '.reverse-unpaired-filter input' ).val( '' );\n\t        this.trigger( 'filter-change' );\n\t    },\n\t\n\t    // ........................................................................ unpaired\n\t    /** select an unpaired dataset */\n\t    _clickUnpairedDataset : function( ev ){\n\t        ev.stopPropagation();\n\t        return this.toggleSelectUnpaired( $( ev.currentTarget ) );\n\t    },\n\t\n\t    /** Toggle the selection of an unpaired dataset representation.\n\t     *  @param [jQuery] $dataset        the unpaired dataset dom rep to select\n\t     *  @param [Boolean] options.force  if defined, force selection based on T/F; otherwise, toggle\n\t     */\n\t    toggleSelectUnpaired : function( $dataset, options ){\n\t        options = options || {};\n\t        var dataset = $dataset.data( 'dataset' ),\n\t            select = options.force !== undefined? options.force: !$dataset.hasClass( 'selected' );\n\t        //this.debug( id, options.force, $dataset, dataset );\n\t        if( !$dataset.size() || dataset === undefined ){ return $dataset; }\n\t\n\t        if( select ){\n\t            $dataset.addClass( 'selected' );\n\t            if( !options.waitToPair ){\n\t                this.pairAllSelected();\n\t            }\n\t\n\t        } else {\n\t            $dataset.removeClass( 'selected' );\n\t            //delete dataset.selected;\n\t        }\n\t        return $dataset;\n\t    },\n\t\n\t    /** pair all the currently selected unpaired datasets */\n\t    pairAllSelected : function( options ){\n\t        options = options || {};\n\t        var creator = this,\n\t            fwds = [],\n\t            revs = [],\n\t            pairs = [];\n\t        creator.$( '.unpaired-columns .forward-column .dataset.selected' ).each( function(){\n\t            fwds.push( $( this ).data( 'dataset' ) );\n\t        });\n\t        creator.$( '.unpaired-columns .reverse-column .dataset.selected' ).each( function(){\n\t            revs.push( $( this ).data( 'dataset' ) );\n\t        });\n\t        fwds.length = revs.length = Math.min( fwds.length, revs.length );\n\t        //this.debug( fwds );\n\t        //this.debug( revs );\n\t        fwds.forEach( function( fwd, i ){\n\t            try {\n\t                pairs.push( creator._pair( fwd, revs[i], { silent: true }) );\n\t\n\t            } catch( err ){\n\t                //TODO: preserve selected state of those that couldn't be paired\n\t                //TODO: warn that some could not be paired\n\t                creator.error( err );\n\t            }\n\t        });\n\t        if( pairs.length && !options.silent ){\n\t            this.trigger( 'pair:new', pairs );\n\t        }\n\t        return pairs;\n\t    },\n\t\n\t    /** clear the selection on all unpaired datasets */\n\t    clearSelectedUnpaired : function(){\n\t        this.$( '.unpaired-columns .dataset.selected' ).removeClass( 'selected' );\n\t    },\n\t\n\t    /** when holding down the shift key on a click, 'paint' the moused over datasets as selected */\n\t    _mousedownUnpaired : function( ev ){\n\t        if( ev.shiftKey ){\n\t            var creator = this,\n\t                $startTarget = $( ev.target ).addClass( 'selected' ),\n\t                moveListener = function( ev ){\n\t                    creator.$( ev.target ).filter( '.dataset' ).addClass( 'selected' );\n\t                };\n\t            $startTarget.parent().on( 'mousemove', moveListener );\n\t\n\t            // on any mouseup, stop listening to the move and try to pair any selected\n\t            $( document ).one( 'mouseup', function( ev ){\n\t                $startTarget.parent().off( 'mousemove', moveListener );\n\t                creator.pairAllSelected();\n\t            });\n\t        }\n\t    },\n\t\n\t    /** attempt to pair two datasets directly across from one another */\n\t    _clickPairRow : function( ev ){\n\t        //if( !ev.currentTarget ){ return true; }\n\t        var rowIndex = $( ev.currentTarget ).index(),\n\t            fwd = $( '.unpaired-columns .forward-column .dataset' ).eq( rowIndex ).data( 'dataset' ),\n\t            rev = $( '.unpaired-columns .reverse-column .dataset' ).eq( rowIndex ).data( 'dataset' );\n\t        //this.debug( 'row:', rowIndex, fwd, rev );\n\t        this._pair( fwd, rev );\n\t    },\n\t\n\t    // ........................................................................ divider/partition\n\t    /** start dragging the visible divider/partition between unpaired and paired panes */\n\t    _startPartitionDrag : function( ev ){\n\t        var creator = this,\n\t            startingY = ev.pageY;\n\t        //this.debug( 'partition drag START:', ev );\n\t        $( 'body' ).css( 'cursor', 'ns-resize' );\n\t        creator.$( '.flexible-partition-drag' ).css( 'color', 'black' );\n\t\n\t        function endDrag( ev ){\n\t            //creator.debug( 'partition drag STOP:', ev );\n\t            // doing this by an added class didn't really work well - kept flashing still\n\t            creator.$( '.flexible-partition-drag' ).css( 'color', '' );\n\t            $( 'body' ).css( 'cursor', '' ).unbind( 'mousemove', trackMouse );\n\t        }\n\t        function trackMouse( ev ){\n\t            var offset = ev.pageY - startingY;\n\t            //creator.debug( 'partition:', startingY, offset );\n\t            if( !creator.adjPartition( offset ) ){\n\t                //creator.debug( 'mouseup triggered' );\n\t                $( 'body' ).trigger( 'mouseup' );\n\t            }\n\t            creator._adjUnpairedOnScrollbar();\n\t            startingY += offset;\n\t        }\n\t        $( 'body' ).mousemove( trackMouse );\n\t        $( 'body' ).one( 'mouseup', endDrag );\n\t    },\n\t\n\t    /** adjust the parition up/down +/-adj pixels */\n\t    adjPartition : function( adj ){\n\t        var $unpaired = this.$( '.unpaired-columns' ),\n\t            $paired = this.$( '.paired-columns' ),\n\t            unpairedHi = parseInt( $unpaired.css( 'height' ), 10 ),\n\t            pairedHi = parseInt( $paired.css( 'height' ), 10 );\n\t        //this.debug( adj, 'hi\\'s:', unpairedHi, pairedHi, unpairedHi + adj, pairedHi - adj );\n\t\n\t        unpairedHi = Math.max( 10, unpairedHi + adj );\n\t        pairedHi = pairedHi - adj;\n\t\n\t        var movingUpwards = adj < 0;\n\t        // when the divider gets close to the top - lock into hiding the unpaired section\n\t        if( movingUpwards ){\n\t            if( this.unpairedPanelHidden ){\n\t                return false;\n\t            } else if( unpairedHi <= 10 ){\n\t                this.hideUnpaired();\n\t                return false;\n\t            }\n\t        } else {\n\t            if( this.unpairedPanelHidden ){\n\t                $unpaired.show();\n\t                this.unpairedPanelHidden = false;\n\t            }\n\t        }\n\t\n\t        // when the divider gets close to the bottom - lock into hiding the paired section\n\t        if( !movingUpwards ){\n\t            if( this.pairedPanelHidden ){\n\t                return false;\n\t            } else if( pairedHi <= 15 ){\n\t                this.hidePaired();\n\t                return false;\n\t            }\n\t\n\t        } else {\n\t            if( this.pairedPanelHidden ){\n\t                $paired.show();\n\t                this.pairedPanelHidden = false;\n\t            }\n\t        }\n\t\n\t        $unpaired.css({\n\t            height  : unpairedHi + 'px',\n\t            flex    : '0 0 auto'\n\t        });\n\t        return true;\n\t    },\n\t\n\t    // ........................................................................ paired\n\t    /** select a pair when clicked */\n\t    selectPair : function( ev ){\n\t        ev.stopPropagation();\n\t        $( ev.currentTarget ).toggleClass( 'selected' );\n\t    },\n\t\n\t    /** deselect all pairs */\n\t    clearSelectedPaired : function( ev ){\n\t        this.$( '.paired-columns .dataset.selected' ).removeClass( 'selected' );\n\t    },\n\t\n\t    /** rename a pair when the pair name is clicked */\n\t    _clickPairName : function( ev ){\n\t        ev.stopPropagation();\n\t        var $name = $( ev.currentTarget ),\n\t            $pair = $name.parent().parent(),\n\t            index = $pair.index( '.dataset.paired' ),\n\t            pair = this.paired[ index ],\n\t            response = prompt( 'Enter a new name for the pair:', pair.name );\n\t        if( response ){\n\t            pair.name = response;\n\t            // set a flag (which won't be passed in json creation) for manual naming so we don't overwrite these\n\t            //  when adding/removing extensions\n\t            //hackish\n\t            pair.customizedName = true;\n\t            $name.text( pair.name );\n\t        }\n\t    },\n\t\n\t    /** unpair this pair */\n\t    _clickUnpair : function( ev ){\n\t        //if( !ev.currentTarget ){ return true; }\n\t        var pairIndex = Math.floor( $( ev.currentTarget ).index( '.unpair-btn' ) );\n\t        //this.debug( 'pair:', pairIndex );\n\t        this._unpair( this.paired[ pairIndex ] );\n\t    },\n\t\n\t    // ........................................................................ paired - drag and drop re-ordering\n\t    //_dragenterPairedColumns : function( ev ){\n\t    //    this.debug( '_dragenterPairedColumns:', ev );\n\t    //},\n\t    //_dragleavePairedColumns : function( ev ){\n\t    //    //this.debug( '_dragleavePairedColumns:', ev );\n\t    //},\n\t    /** track the mouse drag over the paired list adding a placeholder to show where the drop would occur */\n\t    _dragoverPairedColumns : function( ev ){\n\t        //this.debug( '_dragoverPairedColumns:', ev );\n\t        ev.preventDefault();\n\t\n\t        var $list = this.$( '.paired-columns .column-datasets' );\n\t        this._checkForAutoscroll( $list, ev.originalEvent.clientY );\n\t        //this.debug( ev.originalEvent.clientX, ev.originalEvent.clientY );\n\t        var $nearest = this._getNearestPairedDatasetLi( ev.originalEvent.clientY );\n\t\n\t        $( '.element-drop-placeholder' ).remove();\n\t        var $placeholder = $( '<div class=\"element-drop-placeholder\"></div>' );\n\t        if( !$nearest.size() ){\n\t            $list.append( $placeholder );\n\t        } else {\n\t            $nearest.before( $placeholder );\n\t        }\n\t    },\n\t\n\t    /** If the mouse is near enough to the list's top or bottom, scroll the list */\n\t    _checkForAutoscroll : function( $element, y ){\n\t        var AUTOSCROLL_SPEED = 2;\n\t        var offset = $element.offset(),\n\t            scrollTop = $element.scrollTop(),\n\t            upperDist = y - offset.top,\n\t            lowerDist = ( offset.top + $element.outerHeight() ) - y;\n\t        //this.debug( '_checkForAutoscroll:', scrollTop, upperDist, lowerDist );\n\t        if( upperDist >= 0 && upperDist < this.autoscrollDist ){\n\t            $element.scrollTop( scrollTop - AUTOSCROLL_SPEED );\n\t        } else if( lowerDist >= 0 && lowerDist < this.autoscrollDist ){\n\t            $element.scrollTop( scrollTop + AUTOSCROLL_SPEED );\n\t        }\n\t    },\n\t\n\t    /** get the nearest *previous* paired dataset PairView based on the mouse's Y coordinate.\n\t     *      If the y is at the end of the list, return an empty jQuery object.\n\t     */\n\t    _getNearestPairedDatasetLi : function( y ){\n\t        var WIGGLE = 4,\n\t            lis = this.$( '.paired-columns .column-datasets li' ).toArray();\n\t        for( var i=0; i<lis.length; i++ ){\n\t            var $li = $( lis[i] ),\n\t                top = $li.offset().top,\n\t                halfHeight = Math.floor( $li.outerHeight() / 2 ) + WIGGLE;\n\t            if( top + halfHeight > y && top - halfHeight < y ){\n\t                //this.debug( y, top + halfHeight, top - halfHeight )\n\t                return $li;\n\t            }\n\t        }\n\t        return $();\n\t    },\n\t    /** drop (dragged/selected PairViews) onto the list, re-ordering both the DOM and the internal array of pairs */\n\t    _dropPairedColumns : function( ev ){\n\t        // both required for firefox\n\t        ev.preventDefault();\n\t        ev.dataTransfer.dropEffect = 'move';\n\t\n\t        var $nearest = this._getNearestPairedDatasetLi( ev.originalEvent.clientY );\n\t        if( $nearest.size() ){\n\t            this.$dragging.insertBefore( $nearest );\n\t\n\t        } else {\n\t            // no nearest before - insert after last element (unpair button)\n\t            this.$dragging.insertAfter( this.$( '.paired-columns .unpair-btn' ).last() );\n\t        }\n\t        // resync the creator's list of paired based on the new DOM order\n\t        this._syncPairsToDom();\n\t        return false;\n\t    },\n\t    /** resync the creator's list of paired based on the DOM order of pairs */\n\t    _syncPairsToDom : function(){\n\t        var newPaired = [];\n\t        //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n\t        this.$( '.paired-columns .dataset.paired' ).each( function(){\n\t            newPaired.push( $( this ).data( 'pair' ) );\n\t        });\n\t        //this.debug( newPaired );\n\t        this.paired = newPaired;\n\t        this._renderPaired();\n\t    },\n\t    /** drag communication with pair sub-views: dragstart */\n\t    _pairDragstart : function( ev, pair ){\n\t        //this.debug( '_pairDragstart', ev, pair )\n\t        // auto select the pair causing the event and move all selected\n\t        pair.$el.addClass( 'selected' );\n\t        var $selected = this.$( '.paired-columns .dataset.selected' );\n\t        this.$dragging = $selected;\n\t    },\n\t    /** drag communication with pair sub-views: dragend - remove the placeholder */\n\t    _pairDragend : function( ev, pair ){\n\t        //this.debug( '_pairDragend', ev, pair )\n\t        $( '.element-drop-placeholder' ).remove();\n\t        this.$dragging = null;\n\t    },\n\t\n\t    // ........................................................................ footer\n\t    toggleExtensions : function( force ){\n\t        var creator = this;\n\t        creator.removeExtensions = ( force !== undefined )?( force ):( !creator.removeExtensions );\n\t\n\t        _.each( creator.paired, function( pair ){\n\t            // don't overwrite custom names\n\t            if( pair.customizedName ){ return; }\n\t            pair.name = creator._guessNameForPair( pair.forward, pair.reverse );\n\t        });\n\t\n\t        creator._renderPaired();\n\t        creator._renderFooter();\n\t    },\n\t\n\t    /** handle a collection name change */\n\t    _changeName : function( ev ){\n\t        this._validationWarning( 'name', !!this._getName() );\n\t    },\n\t\n\t    /** check for enter key press when in the collection name and submit */\n\t    _nameCheckForEnter : function( ev ){\n\t        if( ev.keyCode === 13 && !this.blocking ){\n\t            this._clickCreate();\n\t        }\n\t    },\n\t\n\t    /** get the current collection name */\n\t    _getName : function(){\n\t        return _.escape( this.$( '.collection-name' ).val() );\n\t    },\n\t\n\t    /** attempt to create the current collection */\n\t    _clickCreate : function( ev ){\n\t        var name = this._getName();\n\t        if( !name ){\n\t            this._validationWarning( 'name' );\n\t        } else if( !this.blocking ){\n\t            this.createList();\n\t        }\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ misc\n\t    /** debug a dataset list */\n\t    _printList : function( list ){\n\t        var creator = this;\n\t        _.each( list, function( e ){\n\t            if( list === creator.paired ){\n\t                creator._printPair( e );\n\t            } else {\n\t                //creator.debug( e );\n\t            }\n\t        });\n\t    },\n\t\n\t    /** print a pair Object */\n\t    _printPair : function( pair ){\n\t        this.debug( pair.forward.name, pair.reverse.name, ': ->', pair.name );\n\t    },\n\t\n\t    /** string rep */\n\t    toString : function(){ return 'PairedCollectionCreator'; }\n\t});\n\t\n\t\n\t//TODO: move to require text plugin and load these as text\n\t//TODO: underscore currently unnecc. bc no vars are used\n\t//TODO: better way of localizing text-nodes in long strings\n\t/** underscore template fns attached to class */\n\tPairedCollectionCreator.templates = PairedCollectionCreator.templates || {\n\t\n\t    /** the skeleton */\n\t    main : _.template([\n\t        '<div class=\"header flex-row no-flex\"></div>',\n\t        '<div class=\"middle flex-row flex-row-container\"></div>',\n\t        '<div class=\"footer flex-row no-flex\">'\n\t    ].join('')),\n\t\n\t    /** the header (not including help text) */\n\t    header : _.template([\n\t        '<div class=\"main-help well clear\">',\n\t            '<a class=\"more-help\" href=\"javascript:void(0);\">', _l( 'More help' ), '</a>',\n\t            '<div class=\"help-content\">',\n\t                '<a class=\"less-help\" href=\"javascript:void(0);\">', _l( 'Less' ), '</a>',\n\t            '</div>',\n\t        '</div>',\n\t        '<div class=\"alert alert-dismissable\">',\n\t            '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>',\n\t            '<span class=\"alert-message\"></span>',\n\t        '</div>',\n\t\n\t        '<div class=\"column-headers vertically-spaced flex-column-container\">',\n\t            '<div class=\"forward-column flex-column column\">',\n\t                '<div class=\"column-header\">',\n\t                    '<div class=\"column-title\">',\n\t                        '<span class=\"title\">', _l( 'Unpaired forward' ), '</span>',\n\t                        '<span class=\"title-info unpaired-info\"></span>',\n\t                    '</div>',\n\t                    '<div class=\"unpaired-filter forward-unpaired-filter pull-left\">',\n\t                        '<input class=\"search-query\" placeholder=\"', _l( 'Filter this list' ), '\" />',\n\t                    '</div>',\n\t                '</div>',\n\t            '</div>',\n\t            '<div class=\"paired-column flex-column no-flex column\">',\n\t                '<div class=\"column-header\">',\n\t                    '<a class=\"choose-filters-link\" href=\"javascript:void(0)\">',\n\t                        _l( 'Choose filters' ),\n\t                    '</a>',\n\t                    '<a class=\"clear-filters-link\" href=\"javascript:void(0);\">',\n\t                        _l( 'Clear filters' ),\n\t                    '</a><br />',\n\t                    '<a class=\"autopair-link\" href=\"javascript:void(0);\">',\n\t                        _l( 'Auto-pair' ),\n\t                    '</a>',\n\t                '</div>',\n\t            '</div>',\n\t            '<div class=\"reverse-column flex-column column\">',\n\t                '<div class=\"column-header\">',\n\t                    '<div class=\"column-title\">',\n\t                        '<span class=\"title\">', _l( 'Unpaired reverse' ), '</span>',\n\t                        '<span class=\"title-info unpaired-info\"></span>',\n\t                    '</div>',\n\t                    '<div class=\"unpaired-filter reverse-unpaired-filter pull-left\">',\n\t                        '<input class=\"search-query\" placeholder=\"', _l( 'Filter this list' ), '\" />',\n\t                    '</div>',\n\t                '</div>',\n\t            '</div>',\n\t        '</div>'\n\t    ].join('')),\n\t\n\t    /** the middle: unpaired, divider, and paired */\n\t    middle : _.template([\n\t        // contains two flex rows (rows that fill available space) and a divider btwn\n\t        '<div class=\"unpaired-columns flex-column-container scroll-container flex-row\">',\n\t            '<div class=\"forward-column flex-column column\">',\n\t                '<ol class=\"column-datasets\"></ol>',\n\t            '</div>',\n\t            '<div class=\"paired-column flex-column no-flex column\">',\n\t                '<ol class=\"column-datasets\"></ol>',\n\t            '</div>',\n\t            '<div class=\"reverse-column flex-column column\">',\n\t                '<ol class=\"column-datasets\"></ol>',\n\t            '</div>',\n\t        '</div>',\n\t        '<div class=\"flexible-partition\">',\n\t            '<div class=\"flexible-partition-drag\" title=\"', _l( 'Drag to change' ), '\"></div>',\n\t            '<div class=\"column-header\">',\n\t                '<div class=\"column-title paired-column-title\">',\n\t                    '<span class=\"title\"></span>',\n\t                '</div>',\n\t                '<a class=\"unpair-all-link\" href=\"javascript:void(0);\">',\n\t                    _l( 'Unpair all' ),\n\t                '</a>',\n\t            '</div>',\n\t        '</div>',\n\t        '<div class=\"paired-columns flex-column-container scroll-container flex-row\">',\n\t            '<ol class=\"column-datasets\"></ol>',\n\t        '</div>'\n\t    ].join('')),\n\t\n\t    /** creation and cancel controls */\n\t    footer : _.template([\n\t        '<div class=\"attributes clear\">',\n\t            '<div class=\"clear\">',\n\t                '<label class=\"remove-extensions-prompt pull-right\">',\n\t                    _l( 'Remove file extensions from pair names' ), '?',\n\t                    '<input class=\"remove-extensions pull-right\" type=\"checkbox\" />',\n\t                '</label>',\n\t            '</div>',\n\t            '<div class=\"clear\">',\n\t                '<input class=\"collection-name form-control pull-right\" ',\n\t                    'placeholder=\"', _l( 'Enter a name for your new list' ), '\" />',\n\t                '<div class=\"collection-name-prompt pull-right\">', _l( 'Name' ), ':</div>',\n\t            '</div>',\n\t        '</div>',\n\t\n\t        '<div class=\"actions clear vertically-spaced\">',\n\t            '<div class=\"other-options pull-left\">',\n\t                '<button class=\"cancel-create btn\" tabindex=\"-1\">', _l( 'Cancel' ), '</button>',\n\t                '<div class=\"create-other btn-group dropup\">',\n\t                    '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n\t                          _l( 'Create a different kind of collection' ),\n\t                          ' <span class=\"caret\"></span>',\n\t                    '</button>',\n\t                    '<ul class=\"dropdown-menu\" role=\"menu\">',\n\t                          '<li><a href=\"#\">', _l( 'Create a <i>single</i> pair' ), '</a></li>',\n\t                          '<li><a href=\"#\">', _l( 'Create a list of <i>unpaired</i> datasets' ), '</a></li>',\n\t                    '</ul>',\n\t                '</div>',\n\t            '</div>',\n\t\n\t            '<div class=\"main-options pull-right\">',\n\t                '<button class=\"create-collection btn btn-primary\">', _l( 'Create list' ), '</button>',\n\t            '</div>',\n\t        '</div>'\n\t    ].join('')),\n\t\n\t    /** help content */\n\t    helpContent : _.template([\n\t        '<p>', _l([\n\t            'Collections of paired datasets are ordered lists of dataset pairs (often forward and reverse reads). ',\n\t            'These collections can be passed to tools and workflows in order to have analyses done on each member of ',\n\t            'the entire group. This interface allows you to create a collection, choose which datasets are paired, ',\n\t            'and re-order the final collection.'\n\t        ].join( '' )), '</p>',\n\t        '<p>', _l([\n\t            'Unpaired datasets are shown in the <i data-target=\".unpaired-columns\">unpaired section</i> ',\n\t            '(hover over the underlined words to highlight below). ',\n\t            'Paired datasets are shown in the <i data-target=\".paired-columns\">paired section</i>.',\n\t            '<ul>To pair datasets, you can:',\n\t                '<li>Click a dataset in the ',\n\t                    '<i data-target=\".unpaired-columns .forward-column .column-datasets,',\n\t                                    '.unpaired-columns .forward-column\">forward column</i> ',\n\t                    'to select it then click a dataset in the ',\n\t                    '<i data-target=\".unpaired-columns .reverse-column .column-datasets,',\n\t                                    '.unpaired-columns .reverse-column\">reverse column</i>.',\n\t                '</li>',\n\t                '<li>Click one of the \"Pair these datasets\" buttons in the ',\n\t                    '<i data-target=\".unpaired-columns .paired-column .column-datasets,',\n\t                                    '.unpaired-columns .paired-column\">middle column</i> ',\n\t                    'to pair the datasets in a particular row.',\n\t                '</li>',\n\t                '<li>Click <i data-target=\".autopair-link\">\"Auto-pair\"</i> ',\n\t                    'to have your datasets automatically paired based on name.',\n\t                '</li>',\n\t            '</ul>'\n\t        ].join( '' )), '</p>',\n\t        '<p>', _l([\n\t            '<ul>You can filter what is shown in the unpaired sections by:',\n\t                '<li>Entering partial dataset names in either the ',\n\t                    '<i data-target=\".forward-unpaired-filter input\">forward filter</i> or ',\n\t                    '<i data-target=\".reverse-unpaired-filter input\">reverse filter</i>.',\n\t                '</li>',\n\t                '<li>Choosing from a list of preset filters by clicking the ',\n\t                    '<i data-target=\".choose-filters-link\">\"Choose filters\" link</i>.',\n\t                '</li>',\n\t                '<li>Entering regular expressions to match dataset names. See: ',\n\t                    '<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\"',\n\t                        ' target=\"_blank\">MDN\\'s JavaScript Regular Expression Tutorial</a>. ',\n\t                    'Note: forward slashes (\\\\) are not needed.',\n\t                '</li>',\n\t                '<li>Clearing the filters by clicking the ',\n\t                    '<i data-target=\".clear-filters-link\">\"Clear filters\" link</i>.',\n\t                '</li>',\n\t            '</ul>'\n\t        ].join( '' )), '</p>',\n\t        '<p>', _l([\n\t            'To unpair individual dataset pairs, click the ',\n\t                '<i data-target=\".unpair-btn\">unpair buttons ( <span class=\"fa fa-unlink\"></span> )</i>. ',\n\t            'Click the <i data-target=\".unpair-all-link\">\"Unpair all\" link</i> to unpair all pairs.'\n\t        ].join( '' )), '</p>',\n\t        '<p>', _l([\n\t            'You can include or remove the file extensions (e.g. \".fastq\") from your pair names by toggling the ',\n\t                '<i data-target=\".remove-extensions-prompt\">\"Remove file extensions from pair names?\"</i> control.'\n\t        ].join( '' )), '</p>',\n\t        '<p>', _l([\n\t            'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n\t            'click <i data-target=\".create-collection\">\"Create list\"</i>. ',\n\t            '(Note: you do not have to pair all unpaired datasets to finish.)'\n\t        ].join( '' )), '</p>'\n\t    ].join(''))\n\t};\n\t\n\t\n\t//=============================================================================\n\t/** a modal version of the paired collection creator */\n\tvar pairedCollectionCreatorModal = function _pairedCollectionCreatorModal( datasets, options ){\n\t\n\t    var deferred = jQuery.Deferred(),\n\t        creator;\n\t\n\t    options = _.defaults( options || {}, {\n\t        datasets    : datasets,\n\t        oncancel    : function(){\n\t            Galaxy.modal.hide();\n\t            deferred.reject( 'cancelled' );\n\t        },\n\t        oncreate    : function( creator, response ){\n\t            Galaxy.modal.hide();\n\t            deferred.resolve( response );\n\t        }\n\t    });\n\t\n\t    if( !window.Galaxy || !Galaxy.modal ){\n\t        throw new Error( 'Galaxy or Galaxy.modal not found' );\n\t    }\n\t\n\t    creator = new PairedCollectionCreator( options );\n\t    Galaxy.modal.show({\n\t        title   : 'Create a collection of paired datasets',\n\t        body    : creator.$el,\n\t        width   : '80%',\n\t        height  : '800px',\n\t        closing_events: true\n\t    });\n\t    creator.render();\n\t    window.creator = creator;\n\t\n\t    //TODO: remove modal header\n\t    return deferred;\n\t};\n\t\n\t\n\t//=============================================================================\n\tfunction createListOfPairsCollection( collection ){\n\t    var elements = collection.toJSON();\n\t//TODO: validate elements\n\t    return pairedCollectionCreatorModal( elements, {\n\t        historyId : collection.historyId\n\t    });\n\t}\n\t\n\t\n\t//=============================================================================\n\t    return {\n\t        PairedCollectionCreator : PairedCollectionCreator,\n\t        pairedCollectionCreatorModal : pairedCollectionCreatorModal,\n\t        createListOfPairsCollection : createListOfPairsCollection\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1), __webpack_require__(1)))\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, jQuery) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(22),\n\t    __webpack_require__(24),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( LIST_CREATOR, HDCA, BASE_MVC, _l ){\n\t\n\tvar logNamespace = 'collections';\n\t/*==============================================================================\n\tTODO:\n\t    the paired creator doesn't really mesh with the list creator as parent\n\t        it may be better to make an abstract super class for both\n\t    composites may inherit from this (or vis-versa)\n\t    PairedDatasetCollectionElementView doesn't make a lot of sense\n\t\n\t==============================================================================*/\n\t/**  */\n\tvar PairedDatasetCollectionElementView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n\t    _logNamespace : logNamespace,\n\t\n\t//TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n\t    tagName     : 'li',\n\t    className   : 'collection-element',\n\t\n\t    initialize : function( attributes ){\n\t        this.element = attributes.element || {};\n\t        this.identifier = attributes.identifier;\n\t    },\n\t\n\t    render : function(){\n\t        this.$el\n\t            .attr( 'data-element-id', this.element.id )\n\t            .html( this.template({ identifier: this.identifier, element: this.element }) );\n\t        return this;\n\t    },\n\t\n\t    //TODO: lots of unused space in the element - possibly load details and display them horiz.\n\t    template : _.template([\n\t        '<span class=\"identifier\"><%= identifier %></span>',\n\t        '<span class=\"name\"><%= element.name %></span>',\n\t    ].join('')),\n\t\n\t    /** remove the DOM and any listeners */\n\t    destroy : function(){\n\t        this.off();\n\t        this.$el.remove();\n\t    },\n\t\n\t    /** string rep */\n\t    toString : function(){\n\t        return 'DatasetCollectionElementView()';\n\t    }\n\t});\n\t\n\t\n\t// ============================================================================\n\tvar _super = LIST_CREATOR.ListCollectionCreator;\n\t\n\t/** An interface for building collections.\n\t */\n\tvar PairCollectionCreator = _super.extend({\n\t\n\t    /** the class used to display individual elements */\n\t    elementViewClass : PairedDatasetCollectionElementView,\n\t    /** the class this creator will create and save */\n\t    collectionClass : HDCA.HistoryPairDatasetCollection,\n\t    className : 'pair-collection-creator collection-creator flex-row-container',\n\t\n\t    /** override to no-op */\n\t    _mangleDuplicateNames : function(){},\n\t\n\t    // TODO: this whole pattern sucks. There needs to be two classes of problem area:\n\t    //      bad inital choices and\n\t    //      when the user has painted his/her self into a corner during creation/use-of-the-creator\n\t    /** render the entire interface */\n\t    render : function( speed, callback ){\n\t        if( this.workingElements.length === 2 ){\n\t            return _super.prototype.render.call( this, speed, callback );\n\t        }\n\t        return this._renderInvalid( speed, callback );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ rendering elements\n\t    /** render forward/reverse */\n\t    _renderList : function( speed, callback ){\n\t        //this.debug( '-- _renderList' );\n\t        //precondition: there are two valid elements in workingElements\n\t        var creator = this,\n\t            $tmp = jQuery( '<div/>' ),\n\t            $list = creator.$list();\n\t\n\t        // lose the original views, create the new, append all at once, then call their renders\n\t        _.each( this.elementViews, function( view ){\n\t            view.destroy();\n\t            creator.removeElementView( view );\n\t        });\n\t        $tmp.append( creator._createForwardElementView().$el );\n\t        $tmp.append( creator._createReverseElementView().$el );\n\t        $list.empty().append( $tmp.children() );\n\t        _.invoke( creator.elementViews, 'render' );\n\t    },\n\t\n\t    /** create the forward element view */\n\t    _createForwardElementView : function(){\n\t        return this._createElementView( this.workingElements[0], { identifier: 'forward' } );\n\t    },\n\t\n\t    /** create the forward element view */\n\t    _createReverseElementView : function(){\n\t        return this._createElementView( this.workingElements[1], { identifier: 'reverse' } );\n\t    },\n\t\n\t    /** create an element view, cache in elementViews, and return */\n\t    _createElementView : function( element, options ){\n\t        var elementView = new this.elementViewClass( _.extend( options, {\n\t            element : element,\n\t        }));\n\t        this.elementViews.push( elementView );\n\t        return elementView;\n\t    },\n\t\n\t    /** swap the forward, reverse elements and re-render */\n\t    swap : function(){\n\t        this.workingElements = [\n\t            this.workingElements[1],\n\t            this.workingElements[0],\n\t        ];\n\t        this._renderList();\n\t    },\n\t\n\t    events : _.extend( _.clone( _super.prototype.events ), {\n\t        'click .swap' : 'swap',\n\t    }),\n\t\n\t    // ------------------------------------------------------------------------ templates\n\t    //TODO: move to require text plugin and load these as text\n\t    //TODO: underscore currently unnecc. bc no vars are used\n\t    //TODO: better way of localizing text-nodes in long strings\n\t    /** underscore template fns attached to class */\n\t    templates : _.extend( _.clone( _super.prototype.templates ), {\n\t        /** the middle: element list */\n\t        middle : _.template([\n\t            '<div class=\"collection-elements-controls\">',\n\t                '<a class=\"swap\" href=\"javascript:void(0);\" title=\"', _l( 'Swap forward and reverse datasets' ), '\">',\n\t                    _l( 'Swap' ),\n\t                '</a>',\n\t            '</div>',\n\t            '<div class=\"collection-elements scroll-container flex-row\">',\n\t            '</div>'\n\t        ].join('')),\n\t\n\t        /** help content */\n\t        helpContent : _.template([\n\t            '<p>', _l([\n\t                'Pair collections are permanent collections containing two datasets: one forward and one reverse. ',\n\t                'Often these are forward and reverse reads. The pair collections can be passed to tools and ',\n\t                'workflows in order to have analyses done on both datasets. This interface allows ',\n\t                'you to create a pair, name it, and swap which is forward and which reverse.'\n\t            ].join( '' )), '</p>',\n\t            '<ul>',\n\t                '<li>', _l([\n\t                    'Click the <i data-target=\".swap\">\"Swap\"</i> link to make your forward dataset the reverse ',\n\t                    'and the reverse dataset forward.'\n\t                ].join( '' )), '</li>',\n\t                '<li>', _l([\n\t                    'Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'\n\t                ].join( '' )), '</li>',\n\t            '</ul><br />',\n\t            '<p>', _l([\n\t                'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n\t                'click <i data-target=\".create-collection\">\"Create list\"</i>.'\n\t            ].join( '' )), '</p>'\n\t        ].join('')),\n\t\n\t        /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n\t        invalidInitial : _.template([\n\t            '<div class=\"header flex-row no-flex\">',\n\t                '<div class=\"alert alert-warning\" style=\"display: block\">',\n\t                    '<span class=\"alert-message\">',\n\t                        '<% if( _.size( problems ) ){ %>',\n\t                            _l( 'The following selections could not be included due to problems' ),\n\t                            '<ul><% _.each( problems, function( problem ){ %>',\n\t                                '<li><b><%= problem.element.name %></b>: <%= problem.text %></li>',\n\t                            '<% }); %></ul>',\n\t                        '<% } else if( _.size( elements ) === 0 ){ %>',\n\t                            _l( 'No datasets were selected' ), '.',\n\t                        '<% } else if( _.size( elements ) === 1 ){ %>',\n\t                            _l( 'Only one dataset was selected' ), ': <%= elements[0].name %>',\n\t                        '<% } else if( _.size( elements ) > 2 ){ %>',\n\t                            _l( 'Too many datasets were selected' ),\n\t                            ': <%= _.pluck( elements, \"name\" ).join( \", \") %>',\n\t                        '<% } %>',\n\t                        '<br />',\n\t                        _l( 'Two (and only two) elements are needed for the pair' ), '. ',\n\t                        _l( 'You may need to ' ),\n\t                        '<a class=\"cancel-create\" href=\"javascript:void(0)\">', _l( 'cancel' ), '</a> ',\n\t                        _l( 'and reselect new elements' ), '.',\n\t                    '</span>',\n\t                '</div>',\n\t            '</div>',\n\t            '<div class=\"footer flex-row no-flex\">',\n\t                '<div class=\"actions clear vertically-spaced\">',\n\t                    '<div class=\"other-options pull-left\">',\n\t                        '<button class=\"cancel-create btn\" tabindex=\"-1\">', _l( 'Cancel' ), '</button>',\n\t                        // _l( 'Create a different kind of collection' ),\n\t                    '</div>',\n\t                '</div>',\n\t            '</div>'\n\t        ].join('')),\n\t    }),\n\t\n\t    // ------------------------------------------------------------------------ misc\n\t    /** string rep */\n\t    toString : function(){ return 'PairCollectionCreator'; }\n\t});\n\t\n\t\n\t//==============================================================================\n\t/** List collection flavor of collectionCreatorModal. */\n\tvar pairCollectionCreatorModal = function _pairCollectionCreatorModal( elements, options ){\n\t    options = options || {};\n\t    options.title = _l( 'Create a collection from a pair of datasets' );\n\t    return LIST_CREATOR.collectionCreatorModal( elements, options, PairCollectionCreator );\n\t};\n\t\n\t\n\t//==============================================================================\n\t/** Use a modal to create a pair collection, then add it to the given history contents.\n\t *  @returns {Deferred} resolved when the collection is added to the history.\n\t */\n\tfunction createPairCollection( contents ){\n\t    var elements = contents.toJSON(),\n\t        promise = pairCollectionCreatorModal( elements, {\n\t            creationFn : function( elements, name ){\n\t                elements = [\n\t                    { name: \"forward\", src: \"hda\", id: elements[0].id },\n\t                    { name: \"reverse\", src: \"hda\", id: elements[1].id }\n\t                ];\n\t                return contents.createHDCA( elements, 'paired', name );\n\t            }\n\t        });\n\t    return promise;\n\t}\n\t\n\t//==============================================================================\n\t    return {\n\t        PairCollectionCreator       : PairCollectionCreator,\n\t        pairCollectionCreatorModal  : pairCollectionCreatorModal,\n\t        createPairCollection        : createPairCollection,\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/*\n\t    This class maps the form dom to an api compatible javascript dictionary.\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils) {\n\treturn Backbone.Model.extend({\n\t    // initialize\n\t    initialize: function(app) {\n\t        this.app = app;\n\t    },\n\t\n\t    /** Creates a checksum.\n\t    */\n\t    checksum: function() {\n\t        var sum = '';\n\t        var self = this;\n\t        this.app.section.$el.find('.section-row').each(function() {\n\t            var id = $(this).attr('id');\n\t            var field = self.app.field_list[id];\n\t            if (field) {\n\t                sum += id + ':' + JSON.stringify(field.value && field.value()) + ':' + field.collapsed + ';';\n\t            }\n\t        });\n\t        return sum;\n\t    },\n\t\n\t    /** Convert dom into dictionary.\n\t    */\n\t    create: function() {\n\t        // link this\n\t        var self = this;\n\t\n\t        // get raw dictionary from dom\n\t        var dict = {};\n\t        this._iterate(this.app.section.$el, dict);\n\t\n\t        // add to result dictionary\n\t        var result_dict = {};\n\t        this.map_dict = {};\n\t        function add(job_input_id, input_id, input_value) {\n\t            self.map_dict[job_input_id] = input_id;\n\t            result_dict[job_input_id] = input_value;\n\t        };\n\t\n\t        // converter between raw dictionary and job dictionary\n\t        function convert(identifier, head) {\n\t            for (var index in head) {\n\t                var node = head[index];\n\t                if (node.input) {\n\t                    // get node\n\t                    var input = node.input;\n\t\n\t                    // create identifier\n\t                    var job_input_id = identifier;\n\t                    if (identifier != '') {\n\t                        job_input_id += '|';\n\t                    }\n\t                    job_input_id += input.name;\n\t\n\t                    // process input type\n\t                    switch (input.type) {\n\t                        // handle repeats\n\t                        case 'repeat':\n\t                            // section identifier\n\t                            var section_label = 'section-';\n\t\n\t                            // collect repeat block identifiers\n\t                            var block_indices = [];\n\t                            var block_prefix = null;\n\t                            for (var block_label in node) {\n\t                                var pos = block_label.indexOf(section_label);\n\t                                if (pos != -1) {\n\t                                    pos += section_label.length;\n\t                                    block_indices.push(parseInt(block_label.substr(pos)));\n\t                                    if (!block_prefix) {\n\t                                        block_prefix = block_label.substr(0, pos);\n\t                                    }\n\t                                }\n\t                            }\n\t\n\t                            // sort repeat blocks\n\t                            block_indices.sort(function(a,b) { return a - b; });\n\t\n\t                            // add to response dictionary in created order\n\t                            var index = 0;\n\t                            for (var i in block_indices) {\n\t                                convert(job_input_id + '_' + index++, node[block_prefix + block_indices[i]]);\n\t                            }\n\t                            break;\n\t                        // handle conditionals\n\t                        case 'conditional':\n\t                            // get conditional value\n\t                            var value = self.app.field_list[input.id].value();\n\t                            \n\t                            // add conditional value\n\t                            add (job_input_id + '|' + input.test_param.name, input.id, value);\n\t\n\t                            // identify selected case\n\t                            var selectedCase = self.matchCase(input, value);\n\t                            if (selectedCase != -1) {\n\t                                convert(job_input_id, head[input.id + '-section-' + selectedCase]);\n\t                            }\n\t                            break;\n\t                        // handle sections\n\t                        case 'section':\n\t                            convert(!input.flat && job_input_id || '', node);\n\t                            break;\n\t                        default:\n\t                            // get field\n\t                            var field = self.app.field_list[input.id];\n\t                            if (field && field.value) {\n\t                                // validate field value\n\t                                var value = field.value();\n\t\n\t                                // ignore certain values\n\t                                if (input.ignore === undefined || input.ignore != value) {\n\t                                    // replace value by collapsible value\n\t                                    if (field.collapsed && input.collapsible_value) {\n\t                                        value = input.collapsible_value;\n\t                                    }\n\t\n\t                                    // add value to submission\n\t                                    add (job_input_id, input.id, value);\n\t\n\t                                    // add payload to submission\n\t                                    if (input.payload) {\n\t                                        for (var p_id in input.payload) {\n\t                                            add (p_id, input.id, input.payload[p_id]);\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        // start conversion\n\t        convert('', dict);\n\t        \n\t        // return result\n\t        return result_dict;\n\t    },\n\t\n\t    /** Match job definition identifier to input element identifier\n\t    */\n\t    match: function (job_input_id) {\n\t        return this.map_dict && this.map_dict[job_input_id];\n\t    },\n\t\n\t    /** Match conditional values to selected cases\n\t    */\n\t    matchCase: function(input, value) {\n\t        // format value for boolean inputs\n\t        if (input.test_param.type == 'boolean') {\n\t            if (value == 'true') {\n\t                value = input.test_param.truevalue || 'true';\n\t            } else {\n\t                value = input.test_param.falsevalue || 'false';\n\t            }\n\t        }\n\t\n\t        // find selected case\n\t        for (var i in input.cases) {\n\t            if (input.cases[i].value == value) {\n\t                return i;\n\t            }\n\t        }\n\t\n\t        // selected case not found\n\t        return -1;\n\t    },\n\t\n\t    /** Matches identifier from api model to input elements\n\t    */\n\t    matchModel: function(model, callback) {\n\t        // final result dictionary\n\t        var result = {};\n\t\n\t        // link this\n\t        var self = this;\n\t\n\t        // search throughout response\n\t        function search (id, head) {\n\t            for (var i in head) {\n\t                var node = head[i];\n\t                var index = node.name;\n\t                if (id != '') {\n\t                    index = id + '|' + index;\n\t                }\n\t                switch (node.type) {\n\t                    case 'repeat':\n\t                        for (var j in node.cache) {\n\t                            search (index + '_' + j, node.cache[j]);\n\t                        }\n\t                        break;\n\t                    case 'conditional':\n\t                        var value = node.test_param && node.test_param.value;\n\t                        var selectedCase = self.matchCase(node, value);\n\t                        if (selectedCase != -1) {\n\t                            search (index, node.cases[selectedCase].inputs);\n\t                        }\n\t                        break;\n\t                    case 'section':\n\t                        search (index, node.inputs);\n\t                        break;\n\t                    default:\n\t                        var input_id = self.map_dict[index];\n\t                        if (input_id) {\n\t                            callback(input_id, node);\n\t                        }\n\t                }\n\t            }\n\t        }\n\t\n\t        // match all ids and return messages\n\t        search('', model.inputs);\n\t\n\t        // return matched results\n\t        return result;\n\t    },\n\t\n\t    /** Matches identifier from api response to input elements\n\t    */\n\t    matchResponse: function(response) {\n\t        // final result dictionary\n\t        var result = {};\n\t\n\t        // link this\n\t        var self = this;\n\t\n\t        // search throughout response\n\t        function search (id, head) {\n\t            if (typeof head === 'string') {\n\t                var input_id = self.map_dict[id];\n\t                if (input_id) {\n\t                    result[input_id] = head;\n\t                }\n\t            } else {\n\t                for (var i in head) {\n\t                    var new_id = i;\n\t                    if (id !== '') {\n\t                        var separator = '|';\n\t                        if (head instanceof Array) {\n\t                            separator = '_';\n\t                        }\n\t                        new_id = id + separator + new_id;\n\t                    }\n\t                    search (new_id, head[i]);\n\t                }\n\t            }\n\t        }\n\t\n\t        // match all ids and return messages\n\t        search('', response);\n\t\n\t        // return matched results\n\t        return result;\n\t    },\n\t\n\t    /** Iterate through the form dom and map it to the dictionary.\n\t    */\n\t    _iterate: function(parent, dict) {\n\t        // get child nodes\n\t        var self = this;\n\t        var children = $(parent).children();\n\t        children.each(function() {\n\t            // get child element\n\t            var child = this;\n\t\n\t            // get id\n\t            var id = $(child).attr('id');\n\t\n\t            // create new branch\n\t            if ($(child).hasClass('section-row')) {\n\t                // create sub dictionary\n\t                dict[id] = {};\n\t\n\t                // add input element if it exists\n\t                var input = self.app.input_list[id];\n\t                if (input) {\n\t                    dict[id] = {\n\t                        input : input\n\t                    }\n\t                }\n\t\n\t                // fill sub dictionary\n\t                self._iterate(child, dict[id]);\n\t            } else {\n\t                self._iterate(child, dict);\n\t            }\n\t        });\n\t    }\n\t});\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {/**\n\t    This class creates a form input element wrapper\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return Backbone.View.extend({\n\t        initialize: function(app, options) {\n\t            // link app\n\t            this.app = app;\n\t\n\t            // set text labels and icons for optional button\n\t            this.text_enable    = app.options.text_enable || 'Enable';\n\t            this.text_disable   = app.options.text_disable || 'Disable';\n\t            this.cls_enable     = app.options.cls_enable || 'fa fa-caret-square-o-down';\n\t            this.cls_disable    = app.options.cls_disable || 'fa fa-caret-square-o-up';\n\t\n\t            // link field\n\t            this.field = options.field;\n\t            this.default_value = options.default_value;\n\t\n\t            // set element\n\t            this.setElement(this._template(options));\n\t\n\t            // link elements\n\t            this.$field = this.$el.find('.ui-table-form-field');\n\t            this.$optional = this.$el.find('.ui-table-form-optional');\n\t            this.$optional_icon = this.$el.find('.ui-table-form-optional').find('.icon');\n\t            this.$error_text = this.$el.find('.ui-table-form-error-text');\n\t            this.$error = this.$el.find('.ui-table-form-error');\n\t\n\t            // add field element\n\t            this.$field.prepend(this.field.$el);\n\t\n\t            // decide wether to expand or collapse optional fields\n\t            this.field.collapsed =  options.collapsible && options.value &&\n\t                                    JSON.stringify(options.value) == JSON.stringify(options.collapsible_value);\n\t\n\t            // refresh view\n\t            this._refresh();\n\t\n\t            // add optional hide/show\n\t            var self = this;\n\t            this.$optional.on('click', function() {\n\t                // flip flag\n\t                self.field.collapsed = !self.field.collapsed;\n\t\n\t                // refresh view\n\t                self._refresh();\n\t\n\t                // refresh state\n\t                self.app.trigger('change');\n\t            });\n\t        },\n\t\n\t        /** Set error text\n\t        */\n\t        error: function(text) {\n\t            this.$error_text.html(text);\n\t            this.$error.show();\n\t            this.$el.addClass('ui-error');\n\t        },\n\t\n\t        /** Reset this view\n\t        */\n\t        reset: function() {\n\t            this.$error.hide();\n\t            this.$el.removeClass('ui-error');\n\t        },\n\t\n\t        /** Refresh element\n\t        */\n\t        _refresh: function() {\n\t            // reset optional button\n\t            this.$optional_icon.removeClass().addClass('icon');\n\t\n\t            // identify state\n\t            if (!this.field.collapsed) {\n\t                // enable input field\n\t                this.$field.fadeIn('fast');\n\t                this._tooltip(this.text_disable, this.cls_disable);\n\t                this.app.trigger('change');\n\t            } else {\n\t                // disable input field\n\t                this.$field.hide();\n\t                this._tooltip(this.text_enable, this.cls_enable);\n\t                this.field.value && this.field.value(this.default_value);\n\t            }\n\t        },\n\t\n\t        /** Set tooltip text\n\t        */\n\t        _tooltip: function(title, cls) {\n\t            if (this.$optional.length) {\n\t                this.$optional_icon.addClass(cls)\n\t                                   .tooltip({ placement: 'bottom' })\n\t                                   .attr('data-original-title', title)\n\t                                   .tooltip('fixTitle').tooltip('hide');\n\t            }\n\t        },\n\t\n\t        /** Main Template\n\t        */\n\t        _template: function(options) {\n\t            var tmp =   '<div class=\"ui-table-form-element input-name-' + options.name + '\">' +\n\t                            '<div class=\"ui-table-form-error ui-error\">' +\n\t                                '<span class=\"fa fa-arrow-down\"/><span class=\"ui-table-form-error-text\"/>' +\n\t                            '</div>' +\n\t                            '<div class=\"ui-table-form-title\">';\n\t            if (options.collapsible) {\n\t                tmp +=          '<div class=\"ui-table-form-optional\">' +\n\t                                    '<i class=\"icon\"/>' + options.label +\n\t                                '</div>';\n\t            } else {\n\t                tmp += options.label;\n\t            }\n\t            tmp +=          '</div>' +\n\t                            '<div class=\"ui-table-form-field\">';\n\t            tmp +=              '<div class=\"ui-table-form-info\">';\n\t            if (options.help) {\n\t                tmp +=              options.help;\n\t                if (options.argument && options.help.indexOf('(' + options.argument + ')') == -1) {\n\t                    tmp += ' (' + options.argument + ')';\n\t                }\n\t            }\n\t            tmp +=              '</div>';\n\t            tmp +=          '</div>' +\n\t                        '</div>';\n\t            return tmp;\n\t        }\n\t    });\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/**\n\t    This class creates input elements. New input parameter types should be added to the types dictionary.\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4),\n\t        __webpack_require__(7),\n\t        __webpack_require__(91),\n\t        __webpack_require__(105),\n\t        __webpack_require__(104),\n\t        __webpack_require__(101)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Ui, SelectContent, SelectLibrary, SelectFtp, ColorPicker) {\n\t\n\t    // create form view\n\t    return Backbone.Model.extend({\n\t        /** Available parameter types */\n\t        types: {\n\t            'text'              : '_fieldText',\n\t            'select'            : '_fieldSelect',\n\t            'data_column'       : '_fieldSelect',\n\t            'genomebuild'       : '_fieldSelect',\n\t            'data'              : '_fieldData',\n\t            'data_collection'   : '_fieldData',\n\t            'integer'           : '_fieldSlider',\n\t            'float'             : '_fieldSlider',\n\t            'boolean'           : '_fieldBoolean',\n\t            'drill_down'        : '_fieldDrilldown',\n\t            'color'             : '_fieldColor',\n\t            'hidden'            : '_fieldHidden',\n\t            'hidden_data'       : '_fieldHidden',\n\t            'baseurl'           : '_fieldHidden',\n\t            'library_data'      : '_fieldLibrary',\n\t            'ftpfile'           : '_fieldFtp'\n\t        },\n\t\n\t        // initialize\n\t        initialize: function(app, options) {\n\t            this.app = app;\n\t        },\n\t\n\t        /** Returns an input field for a given field type\n\t        */\n\t        create: function(input_def) {\n\t            // add regular/default value if missing\n\t            if (input_def.value === undefined) {\n\t                input_def.value = null;\n\t            }\n\t            if (input_def.default_value === undefined) {\n\t                input_def.default_value = input_def.value;\n\t            }\n\t\n\t            // field wrapper\n\t            var field = null;\n\t\n\t            // get field class\n\t            var fieldClass = this.types[input_def.type];\n\t            if (fieldClass && typeof(this[fieldClass]) === 'function') {\n\t                field = this[fieldClass].call(this, input_def);\n\t            }\n\t\n\t            // identify field type\n\t            if (!field) {\n\t                // flag\n\t                this.app.incompatible = true;\n\t\n\t                // with or without options\n\t                if (input_def.options) {\n\t                    // assign select field\n\t                    field = this._fieldSelect(input_def);\n\t                } else {\n\t                    // assign text field\n\t                    field = this._fieldText(input_def);\n\t                }\n\t\n\t                // log\n\t                console.debug('tools-form::_addRow() : Auto matched field type (' + input_def.type + ').');\n\t            }\n\t\n\t            // set field value\n\t            if (input_def.value !== undefined) {\n\t                field.value(input_def.value);\n\t            }\n\t\n\t            // return field element\n\t            return field;\n\t        },\n\t\n\t        /** Data input field\n\t        */\n\t        _fieldData: function(input_def) {\n\t            if (this.app.options.is_workflow) {\n\t                input_def.info = 'Data input \\'' + input_def.name + '\\' (' + Utils.textify(input_def.extensions.toString()) + ')';\n\t                input_def.value = null;\n\t                return this._fieldHidden(input_def);\n\t            }\n\t            var self = this;\n\t            return new SelectContent.View(this.app, {\n\t                id          : 'field-' + input_def.id,\n\t                extensions  : input_def.extensions,\n\t                optional    : input_def.optional,\n\t                multiple    : input_def.multiple,\n\t                type        : input_def.type,\n\t                data        : input_def.options,\n\t                onchange    : function() {\n\t                    self.app.trigger('change');\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Select/Checkbox/Radio options field\n\t        */\n\t        _fieldSelect: function (input_def) {\n\t            // show text field in if dynamic fields are disabled e.g. in workflow editor\n\t            if (input_def.options.length == 0 && this.app.options.is_workflow) {\n\t                return this._fieldText(input_def);\n\t            }\n\t\n\t            // customize properties\n\t            if (input_def.type == 'data_column') {\n\t                input_def.error_text = 'Missing columns in referenced dataset.'\n\t            }\n\t\n\t            // configure options fields\n\t            var options = [];\n\t            for (var i in input_def.options) {\n\t                var option = input_def.options[i];\n\t                options.push({\n\t                    label: option[0],\n\t                    value: option[1]\n\t                });\n\t            }\n\t\n\t            // identify display type\n\t            var SelectClass = Ui.Select;\n\t            switch (input_def.display) {\n\t                case 'checkboxes':\n\t                    SelectClass = Ui.Checkbox;\n\t                    break;\n\t                case 'radio':\n\t                    SelectClass = Ui.Radio;\n\t                    break;\n\t            }\n\t\n\t            // select field\n\t            var self = this;\n\t            return new SelectClass.View({\n\t                id          : 'field-' + input_def.id,\n\t                data        : options,\n\t                error_text  : input_def.error_text || 'No options available',\n\t                optional    : input_def.optional && input_def.default_value === null,\n\t                multiple    : input_def.multiple,\n\t                optional    : input_def.optional,\n\t                searchable  : input_def.searchable,\n\t                onchange    : function() {\n\t                    self.app.trigger('change');\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Drill down options field\n\t        */\n\t        _fieldDrilldown: function (input_def) {\n\t            // show text field in if dynamic fields are disabled e.g. in workflow editor\n\t            if (input_def.options.length == 0 && this.app.options.is_workflow) {\n\t                return this._fieldText(input_def);\n\t            }\n\t\n\t            // create drill down field\n\t            var self = this;\n\t            return new Ui.Drilldown.View({\n\t                id          : 'field-' + input_def.id,\n\t                data        : input_def.options,\n\t                display     : input_def.display,\n\t                onchange    : function() {\n\t                    self.app.trigger('change');\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Text input field\n\t        */\n\t        _fieldText: function(input_def) {\n\t            // field replaces e.g. a select field\n\t            if (input_def.options) {\n\t                // show text area if selecting multiple entries is allowed\n\t                input_def.area = input_def.multiple;\n\t\n\t                // validate value\n\t                if (!Utils.validate(input_def.value)) {\n\t                    input_def.value = '';\n\t                } else {\n\t                    if ($.isArray(input_def.value)) {\n\t                        var str_value = '';\n\t                        for (var i in input_def.value) {\n\t                            str_value += String(input_def.value[i]);\n\t                            if (!input_def.multiple) {\n\t                                break;\n\t                            }\n\t                            str_value += '\\n';\n\t                        }\n\t                        input_def.value = str_value;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // create input element\n\t            var self = this;\n\t            return new Ui.Input({\n\t                id          : 'field-' + input_def.id,\n\t                area        : input_def.area,\n\t                onchange    : function() {\n\t                    self.app.trigger('change');\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Slider field\n\t        */\n\t        _fieldSlider: function(input_def) {\n\t            var self = this;\n\t            return new Ui.Slider.View({\n\t                id          : 'field-' + input_def.id,\n\t                precise     : input_def.type == 'float',\n\t                min         : input_def.min,\n\t                max         : input_def.max,\n\t                onchange    : function() {\n\t                    self.app.trigger('change');\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Hidden field\n\t        */\n\t        _fieldHidden: function(input_def) {\n\t            return new Ui.Hidden({\n\t                id          : 'field-' + input_def.id,\n\t                info        : input_def.info\n\t            });\n\t        },\n\t\n\t        /** Boolean field\n\t        */\n\t        _fieldBoolean: function(input_def) {\n\t            var self = this;\n\t            return new Ui.RadioButton.View({\n\t                id          : 'field-' + input_def.id,\n\t                data        : [ { label : 'Yes', value : 'true'  },\n\t                                { label : 'No',  value : 'false' }],\n\t                onchange    : function() {\n\t                    self.app.trigger('change');\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Color picker field\n\t        */\n\t        _fieldColor: function(input_def) {\n\t            var self = this;\n\t            return new ColorPicker({\n\t                id          : 'field-' + input_def.id,\n\t                onchange    : function() {\n\t                    self.app.trigger('change');\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Library dataset field\n\t        */\n\t        _fieldLibrary: function(input_def) {\n\t            var self = this;\n\t            return new SelectLibrary.View({\n\t                id          : 'field-' + input_def.id,\n\t                optional    : input_def.optional,\n\t                multiple    : input_def.multiple,\n\t                onchange    : function() {\n\t                    self.app.trigger('change');\n\t                }\n\t            });\n\t        },\n\t\n\t        /** FTP file field\n\t        */\n\t        _fieldFtp: function(input_def) {\n\t            var self = this;\n\t            return new SelectFtp.View({\n\t                id          : 'field-' + input_def.id,\n\t                optional    : input_def.optional,\n\t                multiple    : input_def.multiple,\n\t                onchange    : function() {\n\t                    self.app.trigger('change');\n\t                }\n\t            });\n\t        }\n\t    });\n\t\n\t    return {\n\t        View: View\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(32), __webpack_require__(11), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Table, Portlet, Ui) {\n\t\n\t/** This class creates a ui component which enables the dynamic creation of portlets\n\t*/\n\tvar View = Backbone.View.extend({\n\t    // default options\n\t    optionsDefault : {\n\t        title   : 'Section',\n\t        max     : null,\n\t        min     : null\n\t    },\n\t\n\t    /** Initialize\n\t    */\n\t    initialize : function(options) {\n\t        // configure options\n\t        this.options = Utils.merge(options, this.optionsDefault);\n\t\n\t        // create new element\n\t        this.setElement('<div/>');\n\t\n\t        // link this\n\t        var self = this;\n\t\n\t        // create button\n\t        this.button_new = new Ui.ButtonIcon({\n\t            icon    : 'fa-plus',\n\t            title   : 'Insert ' + options.title_new,\n\t            tooltip : 'Add new ' + options.title_new + ' block',\n\t            floating: 'clear',\n\t            onclick : function() {\n\t                if (options.onnew) {\n\t                    options.onnew();\n\t                }\n\t            }\n\t        });\n\t\n\t        // create table\n\t        this.table = new Table.View({\n\t            cls     : 'ui-table-plain',\n\t            content : ''\n\t        });\n\t\n\t        // append button\n\t        this.$el.append(this.table.$el);\n\t\n\t        // add button\n\t        this.$el.append($('<div/>').append(this.button_new.$el));\n\t\n\t        // clear list\n\t        this.list = {};\n\t\n\t        // number of available repeats\n\t        this.n = 0;\n\t    },\n\t\n\t    /** Number of repeat blocks\n\t    */\n\t    size: function() {\n\t        return this.n;\n\t    },\n\t\n\t    /** Add new repeat block\n\t    */\n\t    add: function(options) {\n\t        // repeat block already exists\n\t        if (!options.id || this.list[options.id]) {\n\t            console.debug('form-repeat::add - Duplicate repeat block id.');\n\t            return;\n\t        }\n\t\n\t        // increase repeat block counter\n\t        this.n++;\n\t\n\t        // delete button\n\t        var button_delete = new Ui.ButtonIcon({\n\t            icon    : 'fa-trash-o',\n\t            tooltip : 'Delete this repeat block',\n\t            cls     : 'ui-button-icon-plain',\n\t            onclick : function() {\n\t                if (options.ondel) {\n\t                    options.ondel();\n\t                }\n\t            }\n\t        });\n\t\n\t        // create portlet\n\t        var portlet = new Portlet.View({\n\t            id              : options.id,\n\t            title           : 'placeholder',\n\t            cls             : 'ui-portlet-repeat',\n\t            operations      : {\n\t                button_delete : button_delete\n\t            }\n\t        });\n\t\n\t        // append content\n\t        portlet.append(options.$el);\n\t\n\t        // tag as section row\n\t        portlet.$el.addClass('section-row');\n\t\n\t        // append to dom\n\t        this.list[options.id] = portlet;\n\t\n\t        // append to dom\n\t        this.table.add(portlet.$el);\n\t        this.table.append('row_' + options.id, true);\n\t\n\t        // validate maximum\n\t        if (this.options.max > 0 && this.n >= this.options.max) {\n\t            this.button_new.disable();\n\t        }\n\t\n\t        // refresh view\n\t        this._refresh();\n\t    },\n\t\n\t    /** Delete repeat block\n\t    */\n\t    del: function(id) {\n\t        // could not find element\n\t        if (!this.list[id]) {\n\t            console.debug('form-repeat::del - Invalid repeat block id.');\n\t            return;\n\t        }\n\t\n\t        // decrease repeat block counter\n\t        this.n--;\n\t\n\t        // delete table row\n\t        var table_row = this.table.get('row_' + id);\n\t        table_row.remove();\n\t\n\t        // remove from list\n\t        delete this.list[id];\n\t\n\t        // enable new button\n\t        this.button_new.enable();\n\t\n\t        // refresh delete button visibility\n\t        this._refresh();\n\t    },\n\t\n\t    /** Refresh view\n\t    */\n\t    _refresh: function() {\n\t        var index = 0;\n\t        for (var id in this.list) {\n\t            var portlet = this.list[id];\n\t            portlet.title(++index + ': ' + this.options.title);\n\t            if (this.n > this.options.min) {\n\t                portlet.showOperation('button_delete');\n\t            } else {\n\t                portlet.hideOperation('button_delete');\n\t            }\n\t        }\n\t    }\n\t});\n\t\n\treturn {\n\t    View : View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, jQuery, _, $) {/**\n\t    This class creates a form section and populates it with input elements. It also handles repeat blocks and conditionals by recursively creating new sub sections.\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4),\n\t        __webpack_require__(32),\n\t        __webpack_require__(7),\n\t        __webpack_require__(11),\n\t        __webpack_require__(89),\n\t        __webpack_require__(87),\n\t        __webpack_require__(88)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Table, Ui, Portlet, Repeat, InputElement, Parameters) {\n\t\n\t    // create form view\n\t    var View = Backbone.View.extend({\n\t        // initialize\n\t        initialize: function(app, options) {\n\t            // link app\n\t            this.app = app;\n\t\n\t            // link inputs\n\t            this.inputs = options.inputs;\n\t\n\t            // fix table style\n\t            options.cls = 'ui-table-plain';\n\t\n\t            // add table class for tr tag\n\t            // this assist in transforming the form into a json structure\n\t            options.cls_tr = 'section-row';\n\t\n\t            // create table\n\t            this.table = new Table.View(options);\n\t\n\t            // create parameter handler\n\t            this.parameters = new Parameters(app, options);\n\t\n\t            // configure portlet and form table\n\t            this.setElement(this.table.$el);\n\t\n\t            // render section\n\t            this.render();\n\t        },\n\t\n\t        /** Render section view\n\t        */\n\t        render: function() {\n\t            // reset table\n\t            this.table.delAll();\n\t\n\t            // load settings elements into table\n\t            for (var i in this.inputs) {\n\t                this.add(this.inputs[i]);\n\t            }\n\t        },\n\t\n\t        /** Add a new input element\n\t        */\n\t        add: function(input) {\n\t            // link this\n\t            var self = this;\n\t\n\t            // clone definition\n\t            var input_def = jQuery.extend(true, {}, input);\n\t\n\t            // create unique id\n\t            input_def.id = input.id = Utils.uid();\n\t\n\t            // add to sequential list of inputs\n\t            this.app.input_list[input_def.id] = input_def;\n\t\n\t            // identify field type\n\t            var type = input_def.type;\n\t            switch(type) {\n\t                // conditional field\n\t                case 'conditional':\n\t                    this._addConditional(input_def);\n\t                    break;\n\t                // repeat block\n\t                case 'repeat':\n\t                    this._addRepeat(input_def);\n\t                    break;\n\t                // customized section\n\t                case 'section':\n\t                    this._addSection(input_def);\n\t                    break;\n\t                // default single element row\n\t                default:\n\t                    this._addRow(input_def);\n\t            }\n\t        },\n\t\n\t        /** Add a conditional block\n\t        */\n\t        _addConditional: function(input_def) {\n\t            // link this\n\t            var self = this;\n\t\n\t            // copy identifier\n\t            input_def.test_param.id = input_def.id;\n\t\n\t            // build test parameter\n\t            var field = this._addRow(input_def.test_param);\n\t\n\t            // set onchange event for test parameter\n\t            field.options.onchange = function(value) {\n\t                // identify the selected case\n\t                var selectedCase = self.app.data.matchCase(input_def, value);\n\t\n\t                // check value in order to hide/show options\n\t                for (var i in input_def.cases) {\n\t                    // get case\n\t                    var case_def = input_def.cases[i];\n\t\n\t                    // identify subsection name\n\t                    var section_id = input_def.id + '-section-' + i;\n\t\n\t                    // identify row\n\t                    var section_row = self.table.get(section_id);\n\t\n\t                    // check if non-hidden elements exist\n\t                    var nonhidden = false;\n\t                    for (var j in case_def.inputs) {\n\t                        if (!case_def.inputs[j].hidden) {\n\t                            nonhidden = true;\n\t                            break;\n\t                        }\n\t                    }\n\t\n\t                    // show/hide sub form\n\t                    if (i == selectedCase && nonhidden) {\n\t                        section_row.fadeIn('fast');\n\t                    } else {\n\t                        section_row.hide();\n\t                    }\n\t                }\n\t\n\t                // refresh form inputs\n\t                self.app.trigger('change');\n\t            };\n\t\n\t            // add conditional sub sections\n\t            for (var i in input_def.cases) {\n\t                // create id tag\n\t                var sub_section_id = input_def.id + '-section-' + i;\n\t\n\t                // create sub section\n\t                var sub_section = new View(this.app, {\n\t                    inputs  : input_def.cases[i].inputs\n\t                });\n\t\n\t                // displays as grouped subsection\n\t                sub_section.$el.addClass('ui-table-section');\n\t\n\t                // create table row\n\t                this.table.add(sub_section.$el);\n\t\n\t                // append to table\n\t                this.table.append(sub_section_id);\n\t            }\n\t\n\t            // trigger refresh on conditional input field after all input elements have been created\n\t            field.trigger('change');\n\t        },\n\t\n\t        /** Add a repeat block\n\t        */\n\t        _addRepeat: function(input_def) {\n\t            // link this\n\t            var self = this;\n\t\n\t            // block index\n\t            var block_index = 0;\n\t\n\t            // create repeat block element\n\t            var repeat = new Repeat.View({\n\t                title           : input_def.title,\n\t                title_new       : input_def.title,\n\t                min             : input_def.min,\n\t                max             : input_def.max,\n\t                onnew           : function() {\n\t                    // create\n\t                    create(input_def.inputs);\n\t\n\t                    // trigger refresh\n\t                    self.app.trigger('change');\n\t                }\n\t            });\n\t\n\t            // helper function to create new repeat blocks\n\t            function create (inputs) {\n\t                // create id tag\n\t                var sub_section_id = input_def.id + '-section-' + (block_index++);\n\t\n\t                // create sub section\n\t                var sub_section = new View(self.app, {\n\t                    inputs  : inputs\n\t                });\n\t\n\t                // add tab\n\t                repeat.add({\n\t                    id      : sub_section_id,\n\t                    $el     : sub_section.$el,\n\t                    ondel   : function() {\n\t                        // delete repeat block\n\t                        repeat.del(sub_section_id);\n\t\n\t                        // trigger refresh\n\t                        self.app.trigger('change');\n\t                    }\n\t                });\n\t            }\n\t\n\t            //\n\t            // add parsed/minimum number of repeat blocks\n\t            //\n\t            var n_min   = input_def.min;\n\t            var n_cache = _.size(input_def.cache);\n\t            for (var i = 0; i < Math.max(n_cache, n_min); i++) {\n\t                var inputs = null;\n\t                if (i < n_cache) {\n\t                    inputs = input_def.cache[i];\n\t                } else {\n\t                    inputs = input_def.inputs;\n\t                }\n\t\n\t                // create repeat block\n\t                create(inputs);\n\t            }\n\t\n\t            // create input field wrapper\n\t            var input_element = new InputElement(this.app, {\n\t                label   : input_def.title,\n\t                help    : input_def.help,\n\t                field   : repeat\n\t            });\n\t\n\t            // create table row\n\t            this.table.add(input_element.$el);\n\t\n\t            // append row to table\n\t            this.table.append(input_def.id);\n\t        },\n\t\n\t        /** Add a customized section\n\t        */\n\t        _addSection: function(input_def) {\n\t            // link this\n\t            var self = this;\n\t\n\t            // create sub section\n\t            var sub_section = new View(self.app, {\n\t                inputs  : input_def.inputs\n\t            });\n\t\n\t            // delete button\n\t            var button_visible = new Ui.ButtonIcon({\n\t                icon    : 'fa-eye-slash',\n\t                tooltip : 'Show/hide section',\n\t                cls     : 'ui-button-icon-plain'\n\t            });\n\t\n\t            // create portlet for sub section\n\t            var portlet = new Portlet.View({\n\t                title       : input_def.title,\n\t                cls         : 'ui-portlet-section',\n\t                operations  : {\n\t                    button_visible: button_visible\n\t                }\n\t            });\n\t            portlet.append(sub_section.$el);\n\t            portlet.append($('<div/>').addClass('ui-table-form-info').html(input_def.help));\n\t\n\t            // add event handler visibility button\n\t            var visible = false;\n\t            portlet.$content.hide();\n\t            portlet.$header.css('cursor', 'pointer');\n\t            portlet.$header.on('click', function() {\n\t                if (visible) {\n\t                    visible = false;\n\t                    portlet.$content.hide();\n\t                    button_visible.setIcon('fa-eye-slash');\n\t                } else {\n\t                    visible = true;\n\t                    portlet.$content.fadeIn('fast');\n\t                    button_visible.setIcon('fa-eye');\n\t                }\n\t            });\n\t\n\t            // add expansion event handler\n\t            this.app.on('expand', function(input_id) {\n\t                (portlet.$el.find('#' + input_id).length > 0) && !visible && portlet.$header.trigger('click');\n\t            });\n\t\n\t            // show sub section if requested\n\t            if (input_def.expanded) {\n\t                portlet.$header.trigger('click');\n\t            }\n\t\n\t            // create table row\n\t            this.table.add(portlet.$el);\n\t\n\t            // append row to table\n\t            this.table.append(input_def.id);\n\t        },\n\t\n\t        /** Add a single input field element\n\t        */\n\t        _addRow: function(input_def) {\n\t            // get id\n\t            var id = input_def.id;\n\t\n\t            // create input field\n\t            var field = this.parameters.create(input_def);\n\t\n\t            // add to field list\n\t            this.app.field_list[id] = field;\n\t\n\t            // create input field wrapper\n\t            var input_element = new InputElement(this.app, {\n\t                name                : input_def.name,\n\t                label               : input_def.label || input_def.name,\n\t                value               : input_def.value,\n\t                default_value       : input_def.default_value,\n\t                collapsible         : input_def.collapsible,\n\t                collapsible_value   : input_def.collapsible_value,\n\t                help                : input_def.help,\n\t                argument            : input_def.argument,\n\t                field               : field\n\t            });\n\t\n\t            // add to element list\n\t            this.app.element_list[id] = input_element;\n\t\n\t            // create table row\n\t            this.table.add(input_element.$el);\n\t\n\t            // append to table\n\t            this.table.append(id);\n\t\n\t            // hide row if neccessary\n\t            if (input_def.hidden) {\n\t                this.table.get(id).hide();\n\t            }\n\t\n\t            // return created field\n\t            return field;\n\t        }\n\t    });\n\t\n\t    return {\n\t        View: View\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(7), __webpack_require__(57), __webpack_require__(29)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Ui, Tabs, ToolTemplate) {\n\t\n\t// hda/hdca content selector ui element\n\tvar View = Backbone.View.extend({\n\t    // initialize\n\t    initialize : function(app, options) {\n\t        // link app and options\n\t        this.app = app;\n\t        this.options = options;\n\t\n\t        // track current history elements\n\t        this.history = {};\n\t\n\t\n\t        // link this\n\t        var self = this;\n\t\n\t        // add element\n\t        this.setElement('<div class=\"ui-select-content\"/>');\n\t\n\t        // list of select fieldsFormSection\n\t        this.list = {};\n\t\n\t        // radio button options\n\t        var radio_buttons = [];\n\t\n\t        // identify selector type\n\t        if (options.type == 'data_collection') {\n\t            this.mode = 'collection';\n\t        } else {\n\t            if (options.multiple) {\n\t                this.mode = 'multiple';\n\t            } else {\n\t                this.mode = 'single';\n\t            }\n\t        }\n\t\n\t        // set initial state\n\t        this.current = this.mode;\n\t        this.list = {};\n\t\n\t        // error messages\n\t        var extensions = Utils.textify(options.extensions);\n\t        var hda_error = 'No dataset available.';\n\t        if (extensions) {\n\t            hda_error = 'No ' + extensions + ' dataset available.';\n\t        }\n\t        var hdca_error = 'No dataset list available.';\n\t        if (extensions) {\n\t            hdca_error = 'No ' + extensions + ' dataset collection available.';\n\t        }\n\t\n\t        // add single dataset selector\n\t        if (this.mode == 'single') {\n\t            radio_buttons.push({\n\t                icon    : 'fa-file-o',\n\t                value   : 'single',\n\t                tooltip : 'Single dataset'\n\t            });\n\t            this.select_single = new Ui.Select.View({\n\t                optional    : options.optional,\n\t                error_text  : hda_error,\n\t                onchange    : function() {\n\t                    self.trigger('change');\n\t                }\n\t            });\n\t            this.list['single'] = {\n\t                field: this.select_single,\n\t                type : 'hda'\n\t            };\n\t        }\n\t\n\t        // add multiple dataset selector\n\t        if (this.mode == 'single' || this.mode == 'multiple') {\n\t            radio_buttons.push({\n\t                icon    : 'fa-files-o',\n\t                value   : 'multiple',\n\t                tooltip : 'Multiple datasets'\n\t            });\n\t            this.select_multiple = new Ui.Select.View({\n\t                multiple    : true,\n\t                searchable  : false,\n\t                optional    : options.optional,\n\t                error_text  : hda_error,\n\t                onchange    : function() {\n\t                    self.trigger('change');\n\t                }\n\t            });\n\t            this.list['multiple'] = {\n\t                field: this.select_multiple,\n\t                type : 'hda'\n\t            };\n\t        }\n\t\n\t        // add collection selector\n\t        if (this.mode == 'single' || this.mode == 'multiple' || this.mode == 'collection') {\n\t            radio_buttons.push({\n\t                icon    : 'fa-folder-o',\n\t                value   : 'collection',\n\t                tooltip : 'Dataset collection'\n\t            });\n\t            this.select_collection = new Ui.Select.View({\n\t                error_text  : hdca_error,\n\t                optional    : options.optional,\n\t                onchange    : function() {\n\t                    self.trigger('change');\n\t                }\n\t            });\n\t            this.list['collection'] = {\n\t                field: this.select_collection,\n\t                type : 'hdca'\n\t            };\n\t        }\n\t\n\t        // create button\n\t        this.button_type = new Ui.RadioButton.View({\n\t            value   : this.current,\n\t            data    : radio_buttons,\n\t            onchange: function(value) {\n\t                self.current = value;\n\t                self.refresh();\n\t                self.trigger('change');\n\t            }\n\t        });\n\t\n\t        // add batch mode information\n\t        this.$batch = $(this.template_batch());\n\t\n\t        // number of radio buttons\n\t        var n_buttons = _.size(this.list);\n\t\n\t        // add button to dom\n\t        var button_width = 0;\n\t        if (n_buttons > 1) {\n\t            this.$el.append(this.button_type.$el);\n\t            button_width = Math.max(0, _.size(this.list) * 35) + 'px';\n\t        }\n\t\n\t        // append field elements\n\t        for (var i in this.list) {\n\t            this.$el.append(this.list[i].field.$el.css({\n\t                'margin-left': button_width\n\t            }));\n\t        }\n\t\n\t        // append batch message\n\t        this.$el.append(this.$batch.css({\n\t            'margin-left': button_width\n\t        }));\n\t\n\t        // update options\n\t        this.update(options.data);\n\t\n\t        // set initial value\n\t        if (this.options.value !== undefined) {\n\t            this.value(this.options.value);\n\t        }\n\t\n\t        // refresh view\n\t        this.refresh();\n\t\n\t        // add change event. fires on trigger\n\t        this.on('change', function() {\n\t            if (options.onchange) {\n\t                options.onchange(self.value());\n\t            }\n\t        });\n\t    },\n\t\n\t    /** Indicate that select fields are being updated */\n\t    wait: function() {\n\t        for (var i in this.list) {\n\t            this.list[i].field.wait();\n\t        }\n\t    },\n\t\n\t    /** Indicate that the options update has been completed */\n\t    unwait: function() {\n\t        for (var i in this.list) {\n\t            this.list[i].field.unwait();\n\t        }\n\t    },\n\t\n\t    /** Update content selector */\n\t    update: function(options) {\n\t        // update a particular select field\n\t        var self = this;\n\t        function _update(field, options) {\n\t            if (field) {\n\t                // identify available options\n\t                var select_options = [];\n\t                for (var i in options) {\n\t                    var item = options[i];\n\t                    select_options.push({\n\t                        label: item.hid + ': ' + item.name,\n\t                        value: item.id\n\t                    });\n\t                    // backup to local history\n\t                    self.history[item.id + '_' + item.src] = item;\n\t                }\n\t                // update field\n\t                field.update(select_options);\n\t            }\n\t        }\n\t\n\t        // update available options\n\t        _update(this.select_single, options.hda);\n\t        _update(this.select_multiple, options.hda);\n\t        _update(this.select_collection, options.hdca);\n\t    },\n\t\n\t    /** Return the currently selected dataset values */\n\t    value : function (new_value) {\n\t        // update current value\n\t        if (new_value !== undefined) {\n\t            if (new_value && new_value.values) {\n\t                try {\n\t                    // create list with values\n\t                    var list = [];\n\t                    for (var i in new_value.values) {\n\t                        list.push(new_value.values[i].id);\n\t                    }\n\t                    \n\t                    // identify suitable select field\n\t                    if (new_value && new_value.values.length > 0 && new_value.values[0].src == 'hdca') {\n\t                        this.current = 'collection';\n\t                        this.select_collection.value(list[0]);\n\t                    } else {\n\t                        if (this.mode == 'multiple') {\n\t                            this.current = 'multiple';\n\t                            this.select_multiple.value(list);\n\t                        } else {\n\t                            this.current = 'single';\n\t                            this.select_single.value(list[0]);\n\t                        }\n\t                    }\n\t                } catch (err) {\n\t                    console.debug('tools-select-content::value() - Skipped.');\n\t                }\n\t            } else {\n\t                for (var i in this.list) {\n\t                    this.list[i].field.value(null);\n\t                }\n\t            }\n\t        }\n\t\n\t        // refresh view\n\t        this.refresh();\n\t\n\t        // validate value\n\t        var id_list = this._select().value();\n\t        if (id_list === null) {\n\t            return null;\n\t        }\n\t\n\t        // transform into an array\n\t        if (!(id_list instanceof Array)) {\n\t            id_list = [id_list];\n\t        }\n\t\n\t        // check if value exists\n\t        if (id_list.length === 0) {\n\t            return null;\n\t        }\n\t\n\t        // prepare result dict\n\t        var result = {\n\t            batch   : this._batch(),\n\t            values  : []\n\t        }\n\t\n\t        // append to dataset ids\n\t        for (var i in id_list) {\n\t            var details = this.history[id_list[i] + '_' + this.list[this.current].type];\n\t            if (details) {\n\t                result.values.push(details);\n\t            } else {\n\t                return null;\n\t            }\n\t        }\n\t\n\t        // sort by history ids\n\t        result.values.sort(function(a, b){\n\t            return a.hid - b.hid;\n\t        });\n\t\n\t        // return\n\t        return result;\n\t    },\n\t\n\t    /** Refreshes data selection view */\n\t    refresh: function() {\n\t        this.button_type.value(this.current);\n\t        for (var i in this.list) {\n\t            var $el = this.list[i].field.$el;\n\t            if (this.current == i) {\n\t                $el.show();\n\t            } else {\n\t                $el.hide();\n\t            }\n\t        }\n\t        if (this._batch()) {\n\t            this.$batch.show();\n\t        } else {\n\t            this.$batch.hide();\n\t        }\n\t    },\n\t\n\t    /** Assists in selecting the current field */\n\t    _select: function() {\n\t        return this.list[this.current].field;\n\t    },\n\t\n\t    /** Assists in identifying the batch mode */\n\t    _batch: function() {\n\t        if (this.current == 'collection') {\n\t            var hdca = this.history[this._select().value() + '_hdca'];\n\t            if (hdca && hdca.map_over_type) {\n\t                return true;\n\t            }\n\t        }\n\t        if (this.current != 'single') {\n\t            if (this.mode == 'single') {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    },\n\t\n\t    /** Batch message template */\n\t    template_batch: function() {\n\t        return  '<div class=\"ui-table-form-info\">' +\n\t                    '<i class=\"fa fa-sitemap\" style=\"font-size: 1.2em; padding: 2px 5px;\"/>' +\n\t                    'This is a batch mode input field. A separate job will be triggered for each dataset.' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View: View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {/**\n\t    This is the main class of the form plugin. It is referenced as 'app' in all lower level modules.\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(11), __webpack_require__(7),\n\t        __webpack_require__(90), __webpack_require__(86)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Portlet, Ui, FormSection, FormData) {\n\t\n\t    // create form view\n\t    return Backbone.View.extend({\n\t        // initialize\n\t        initialize: function(options) {\n\t            // options\n\t            this.optionsDefault = {\n\t                // uses workflow editor mode i.e. text instead of select fields\n\t                is_workflow     : false,\n\t                // shows errors on start\n\t                initial_errors  : false,\n\t                // portlet style\n\t                cls             : 'ui-portlet-limited'\n\t            };\n\t\n\t            // configure options\n\t            this.options = Utils.merge(options, this.optionsDefault);\n\t\n\t            // log options\n\t            console.debug(this.options);\n\t\n\t            // link galaxy modal or create one\n\t            var galaxy = parent.Galaxy;\n\t            if (galaxy && galaxy.modal) {\n\t                this.modal = galaxy.modal;\n\t            } else {\n\t                this.modal = new Ui.Modal.View();\n\t            }\n\t\n\t            // set element\n\t            this.setElement('<div/>');\n\t\n\t            // build this form\n\t            this._build();\n\t        },\n\t\n\t        /** Update available options */\n\t        update: function(new_model){\n\t            var self = this;\n\t            this.data.matchModel(new_model, function(input_id, node) {\n\t                var input = self.input_list[input_id];\n\t                if (input && input.options) {\n\t                    if (!_.isEqual(input.options, node.options)) {\n\t                        // backup new options\n\t                        input.options = node.options;\n\t\n\t                        // get/update field\n\t                        var field = self.field_list[input_id];\n\t                        if (field.update) {\n\t                            var new_options = [];\n\t                            if ((['data', 'data_collection', 'drill_down']).indexOf(input.type) != -1) {\n\t                                new_options = input.options;\n\t                            } else {\n\t                                for (var i in node.options) {\n\t                                    var opt = node.options[i];\n\t                                    if (opt.length > 2) {\n\t                                        new_options.push({\n\t                                            'label': opt[0],\n\t                                            'value': opt[1]\n\t                                        });\n\t                                    }\n\t                                }\n\t                            }\n\t                            field.update(new_options);\n\t                            field.trigger('change');\n\t                            console.debug('Updating options for ' + input_id);\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Set form into wait mode */\n\t        wait: function(active) {\n\t            for (var i in this.input_list) {\n\t                var field = this.field_list[i];\n\t                var input = this.input_list[i];\n\t                if (input.is_dynamic && field.wait && field.unwait) {\n\t                    if (active) {\n\t                        field.wait();\n\t                    } else {\n\t                        field.unwait();\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        /** Highlight and scroll to input element (currently only used for error notifications)\n\t        */\n\t        highlight: function (input_id, message, silent) {\n\t            // get input field\n\t            var input_element = this.element_list[input_id];\n\t\n\t            // check input element\n\t            if (input_element) {\n\t                // mark error\n\t                input_element.error(message || 'Please verify this parameter.');\n\t\n\t                // trigger expand event for parent containers\n\t                this.trigger('expand', input_id);\n\t\n\t                // scroll to first input element\n\t                if (!silent) {\n\t                    if (self==top) {\n\t                        var $panel = this.$el.parents().filter(function() {\n\t                            return $(this).css('overflow') == 'auto';\n\t                        }).first();\n\t                        $panel.animate({ scrollTop : $panel.scrollTop() + input_element.$el.offset().top - 50 }, 500);\n\t                    } else {\n\t                        $('html, body').animate({ scrollTop : input_element.$el.offset().top - 20 }, 500);\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        /** Highlights errors\n\t        */\n\t        errors: function(options) {\n\t            // hide previous error statements\n\t            this.trigger('reset');\n\t\n\t            // highlight all errors\n\t            if (options && options.errors) {\n\t                var error_messages = this.data.matchResponse(options.errors);\n\t                for (var input_id in this.element_list) {\n\t                    var input = this.element_list[input_id];\n\t                    if (error_messages[input_id]) {\n\t                        this.highlight(input_id, error_messages[input_id], true);\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        /** Main tool form build function. This function is called once a new model is available.\n\t        */\n\t        _build: function() {\n\t            // link this\n\t            var self = this;\n\t\n\t            // reset events\n\t            this.off('change');\n\t            this.off('reset');\n\t\n\t            // reset field list, which contains the input field elements\n\t            this.field_list = {};\n\t\n\t            // reset sequential input definition list, which contains the input definitions as provided from the api\n\t            this.input_list = {};\n\t\n\t            // reset input element list, which contains the dom elements of each input element (includes also the input field)\n\t            this.element_list = {};\n\t\n\t            // creates a json data structure from the input form\n\t            this.data = new FormData(this);\n\t\n\t            // create ui elements\n\t            this._renderForm();\n\t\n\t            // refresh data\n\t            this.data.create();\n\t\n\t            // show errors on startup\n\t            if (this.options.initial_errors) {\n\t                this.errors(this.options);\n\t            }\n\t\n\t            // add listener which triggers on checksum change\n\t            var current_check = this.data.checksum();\n\t            this.on('change', function() {\n\t                var new_check = self.data.checksum();\n\t                if (new_check != current_check) {\n\t                    current_check = new_check;\n\t                    self.options.onchange && self.options.onchange();\n\t                }\n\t            });\n\t\n\t            // add reset listener\n\t            this.on('reset', function() {\n\t                for (var i in this.element_list) {\n\t                    this.element_list[i].reset();\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Renders the UI elements required for the form\n\t        */\n\t        _renderForm: function() {\n\t            // create message view\n\t            this.message = new Ui.Message();\n\t\n\t            // create tool form section\n\t            this.section = new FormSection.View(this, {\n\t                inputs : this.options.inputs\n\t            });\n\t\n\t            // remove tooltips\n\t            $( '.tooltip' ).remove();\n\t\n\t            // create portlet\n\t            this.portlet = new Portlet.View({\n\t                icon        : 'fa-wrench',\n\t                title       : this.options.title,\n\t                cls         : this.options.cls,\n\t                operations  : this.options.operations,\n\t                buttons     : this.options.buttons\n\t            });\n\t\n\t            // append message\n\t            this.portlet.append(this.message.$el.addClass('ui-margin-top'));\n\t\n\t            // append tool section\n\t            this.portlet.append(this.section.$el);\n\t\n\t            // start form\n\t            this.$el.empty();\n\t            this.$el.append(this.portlet.$el);\n\t\n\t            // show message if available in model\n\t            if (this.options.message) {\n\t                this.message.update({\n\t                    persistent  : true,\n\t                    status      : 'warning',\n\t                    message     : this.options.message\n\t                });\n\t            }\n\t\n\t            // log\n\t            console.debug('tools-form-base::initialize() - Completed.');\n\t        }\n\t    });\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(jQuery, _) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(44),\n\t    __webpack_require__(46),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( DATASET_LI_EDIT, HDA_LI, BASE_MVC, _l ){\n\t//==============================================================================\n\tvar _super = DATASET_LI_EDIT.DatasetListItemEdit;\n\t/** @class Editing view for HistoryDatasetAssociation.\n\t */\n\tvar HDAListItemEdit = _super.extend(\n\t/** @lends HDAListItemEdit.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    className   : _super.prototype.className + \" history-content\",\n\t\n\t    /** In this override, only get details if in the ready state, get rerunnable if in other states.\n\t     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n\t     */\n\t    _fetchModelDetails : function(){\n\t        var view = this;\n\t        if( view.model.inReadyState() && !view.model.hasDetails() ){\n\t            return view.model.fetch({ silent: true });\n\t\n\t        // special case the need for the rerunnable and creating_job attributes\n\t        // needed for rendering re-run button on queued, running datasets\n\t        } else if( !view.model.has( 'rerunnable' ) ){\n\t            return view.model.fetch({ silent: true, data: {\n\t                // only fetch rerunnable and creating_job to keep overhead down\n\t                keys: [ 'rerunnable', 'creating_job' ].join(',')\n\t            }});\n\t        }\n\t        return jQuery.when();\n\t    },\n\t\n\t    /** event map */\n\t    events : _.extend( _.clone( _super.prototype.events ), {\n\t        'click .unhide-link' : function( ev ){ this.model.unhide(); return false; }\n\t    }),\n\t\n\t    /** string rep */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'HDAListItemEdit(' + modelString + ')';\n\t    }\n\t});\n\t\n\t\n\t// ............................................................................ TEMPLATES\n\t/** underscore templates */\n\tHDAListItemEdit.prototype.templates = (function(){\n\t//TODO: move to require text! plugin\n\t\n\t    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n\t        hidden : BASE_MVC.wrapTemplate([\n\t            '<% if( !dataset.visible ){ %>',\n\t                // add a link to unhide a dataset\n\t                '<div class=\"hidden-msg warningmessagesmall\">',\n\t                    _l( 'This dataset has been hidden' ),\n\t                    '<br /><a class=\"unhide-link\" a href=\"javascript:void(0);\">', _l( 'Unhide it' ), '</a>',\n\t                '</div>',\n\t            '<% } %>'\n\t        ], 'dataset' )\n\t    });\n\t\n\t    return _.extend( {}, _super.prototype.templates, {\n\t        //NOTE: *steal* the HDAListItemView titleBar\n\t        titleBar : HDA_LI.HDAListItemView.prototype.templates.titleBar,\n\t        warnings : warnings\n\t    });\n\t}());\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        HDAListItemEdit  : HDAListItemEdit\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(48),\n\t    __webpack_require__(83),\n\t    __webpack_require__(13),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( HDCA_LI, DC_PANEL_EDIT, faIconButton, _l ){\n\t//==============================================================================\n\tvar _super = HDCA_LI.HDCAListItemView;\n\t/** @class Editing view for HistoryDatasetCollectionAssociation.\n\t */\n\tvar HDCAListItemEdit = _super.extend(\n\t/** @lends HDCAListItemEdit.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** Override to return editable versions of the collection panels */\n\t    _getFoldoutPanelClass : function(){\n\t        switch( this.model.get( 'collection_type' ) ){\n\t            case 'list':\n\t                return DC_PANEL_EDIT.ListCollectionPanelEdit;\n\t            case 'paired':\n\t                return DC_PANEL_EDIT.PairCollectionPanelEdit;\n\t            case 'list:paired':\n\t                return DC_PANEL_EDIT.ListOfPairsCollectionPanelEdit;\n\t        }\n\t        throw new TypeError( 'Uknown collection_type: ' + this.model.get( 'collection_type' ) );\n\t    },\n\t\n\t    // ......................................................................... delete\n\t    /** In this override, add the delete button. */\n\t    _renderPrimaryActions : function(){\n\t        this.log( this + '._renderPrimaryActions' );\n\t        // render the display, edit attr and delete icon-buttons\n\t        return _super.prototype._renderPrimaryActions.call( this )\n\t            .concat([\n\t                this._renderDeleteButton()\n\t            ]);\n\t    },\n\t\n\t    /** Render icon-button to delete this collection. */\n\t    _renderDeleteButton : function(){\n\t        var self = this,\n\t            deleted = this.model.get( 'deleted' );\n\t        return faIconButton({\n\t            title       : deleted? _l( 'Dataset collection is already deleted' ): _l( 'Delete' ),\n\t            classes     : 'delete-btn',\n\t            faIcon      : 'fa-times',\n\t            disabled    : deleted,\n\t            onclick     : function() {\n\t                // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n\t                self.$el.find( '.icon-btn.delete-btn' ).trigger( 'mouseout' );\n\t                self.model[ 'delete' ]();\n\t            }\n\t        });\n\t    },\n\t\n\t    // ......................................................................... misc\n\t    /** string rep */\n\t    toString : function(){\n\t        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n\t        return 'HDCAListItemEdit(' + modelString + ')';\n\t    }\n\t});\n\t\n\t//==============================================================================\n\t    return {\n\t        HDCAListItemEdit : HDCAListItemEdit\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_, jQuery, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(49),\n\t    __webpack_require__(96),\n\t    __webpack_require__(14),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( HISTORY_MODEL, HPANEL_EDIT, DC_PANEL, BASE_MVC, _l ){\n\t// ============================================================================\n\t/** session storage for history panel preferences (and to maintain state)\n\t */\n\tvar HistoryPanelPrefs = BASE_MVC.SessionStorageModel.extend(\n\t/** @lends HistoryPanelPrefs.prototype */{\n\t    defaults : {\n\t        /** should the tags editor be shown or hidden initially? */\n\t        tagsEditorShown : false,\n\t        /** should the annotation editor be shown or hidden initially? */\n\t        annotationEditorShown : false,\n\t        ///** what is the currently focused content (dataset or collection) in the current history?\n\t        // *      (the history panel will highlight and scroll to the focused content view)\n\t        // */\n\t        //focusedContentId : null\n\t        /** Current scroll position */\n\t        scrollPosition : 0\n\t    },\n\t    toString : function(){\n\t        return 'HistoryPanelPrefs(' + JSON.stringify( this.toJSON() ) + ')';\n\t    }\n\t});\n\t\n\t/** key string to store panel prefs (made accessible on class so you can access sessionStorage directly) */\n\tHistoryPanelPrefs.storageKey = function storageKey(){\n\t    return ( 'history-panel' );\n\t};\n\t\n\t/* =============================================================================\n\tTODO:\n\t\n\t============================================================================= */\n\tvar _super = HPANEL_EDIT.HistoryPanelEdit;\n\t// used in root/index.mako\n\t/** @class View/Controller for the user's current history model as used in the history\n\t *      panel (current right hand panel) of the analysis page.\n\t *\n\t *  The only history panel that:\n\t *      will poll for updates.\n\t *      displays datasets in reverse hid order.\n\t */\n\tvar CurrentHistoryPanel = _super.extend(\n\t/** @lends CurrentHistoryPanel.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    className           : _super.prototype.className + ' current-history-panel',\n\t\n\t    emptyMsg            : _l( \"This history is empty. Click 'Get Data' on the left tool menu to start\" ),\n\t    noneFoundMsg        : _l( \"No matching datasets found\" ),\n\t\n\t    /**  */\n\t    HDCAViewClass       : _super.prototype.HDCAViewClass.extend({\n\t        foldoutStyle : 'drilldown'\n\t    }),\n\t\n\t    // ......................................................................... SET UP\n\t    /** Set up the view, set up storage, bind listeners to HistoryContents events */\n\t    initialize : function( attributes ){\n\t        attributes = attributes || {};\n\t\n\t        // ---- persistent preferences\n\t        /** maintain state / preferences over page loads */\n\t        this.preferences = new HistoryPanelPrefs( _.extend({\n\t            id : HistoryPanelPrefs.storageKey()\n\t        }, _.pick( attributes, _.keys( HistoryPanelPrefs.prototype.defaults ) )));\n\t\n\t        _super.prototype.initialize.call( this, attributes );\n\t\n\t        /** sub-views that will overlay this panel (collections) */\n\t        this.panelStack = [];\n\t\n\t        /** id of currently focused content */\n\t        this.currentContentId = attributes.currentContentId || null;\n\t        //NOTE: purposely not sent to localstorage since panel recreation roughly lines up with a reset of this value\n\t    },\n\t\n\t    /** Override to cache the current scroll position with a listener */\n\t    _setUpListeners : function(){\n\t        _super.prototype._setUpListeners.call( this );\n\t\n\t        var panel = this;\n\t        // reset scroll position when there's a new history\n\t        this.on( 'new-model', function(){\n\t            panel.preferences.set( 'scrollPosition', 0 );\n\t        });\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ loading history/item models\n\t    /** (re-)loads the user's current history & contents w/ details */\n\t    loadCurrentHistory : function( attributes ){\n\t        this.debug( this + '.loadCurrentHistory' );\n\t        // implemented as a 'fresh start' or for when there is no model (intial panel render)\n\t        var panel = this;\n\t        return this.loadHistoryWithDetails( 'current', attributes )\n\t            .then(function( historyData, contentsData ){\n\t                panel.trigger( 'current-history', panel );\n\t            });\n\t    },\n\t\n\t    /** loads a history & contents w/ details and makes them the current history */\n\t    switchToHistory : function( historyId, attributes ){\n\t        //this.info( 'switchToHistory:', historyId, attributes );\n\t        var panel = this,\n\t            historyFn = function(){\n\t                // make this current and get history data with one call\n\t                return jQuery.getJSON( galaxy_config.root + 'history/set_as_current?id=' + historyId  );\n\t                //    method  : 'PUT'\n\t                //});\n\t            };\n\t        return this.loadHistoryWithDetails( historyId, attributes, historyFn )\n\t            .then( function( historyData, contentsData ){\n\t                panel.trigger( 'switched-history', panel );\n\t            });\n\t    },\n\t\n\t    /** creates a new history on the server and sets it as the user's current history */\n\t    createNewHistory : function( attributes ){\n\t        if( !Galaxy || !Galaxy.currUser || Galaxy.currUser.isAnonymous() ){\n\t            this.displayMessage( 'error', _l( 'You must be logged in to create histories' ) );\n\t            return $.when();\n\t        }\n\t        var panel = this,\n\t            historyFn = function(){\n\t                // create a new history and save: the server will return the proper JSON\n\t                return jQuery.getJSON( galaxy_config.root + 'history/create_new_current'  );\n\t            };\n\t\n\t        // id undefined bc there is no historyId yet - the server will provide\n\t        //  (no need for details - nothing expanded in new history)\n\t        return this.loadHistory( undefined, attributes, historyFn )\n\t            .then(function( historyData, contentsData ){\n\t                panel.trigger( 'new-history', panel );\n\t            });\n\t    },\n\t\n\t    /** release/free/shutdown old models and set up panel for new models */\n\t    setModel : function( model, attributes, render ){\n\t        _super.prototype.setModel.call( this, model, attributes, render );\n\t        if( this.model ){\n\t            this.log( 'checking for updates' );\n\t            this.model.checkForUpdates();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ history/content event listening\n\t    /** listening for collection events */\n\t    _setUpCollectionListeners : function(){\n\t        _super.prototype._setUpCollectionListeners.call( this );\n\t\n\t        //TODO:?? may not be needed? see history-panel-edit, 369\n\t        // if a hidden item is created (gen. by a workflow), moves thru the updater to the ready state,\n\t        //  then: remove it from the collection if the panel is set to NOT show hidden datasets\n\t        this.collection.on( 'state:ready', function( model, newState, oldState ){\n\t            if( ( !model.get( 'visible' ) )\n\t            &&  ( !this.storage.get( 'show_hidden' ) ) ){\n\t                this.removeItemView( model );\n\t            }\n\t        }, this );\n\t    },\n\t\n\t    /** listening for history events */\n\t    _setUpModelListeners : function(){\n\t        _super.prototype._setUpModelListeners.call( this );\n\t        // ---- history\n\t        // update the quota meter when current history changes size\n\t//TODO: global - have Galaxy listen to this instead\n\t        if( Galaxy && Galaxy.quotaMeter ){\n\t            this.listenTo( this.model, 'change:nice_size', function(){\n\t                //this.info( '!! model size changed:', this.model.get( 'nice_size' ) )\n\t                Galaxy.quotaMeter.update();\n\t            });\n\t        }\n\t\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ panel rendering\n\t    /** override to add a handler to capture the scroll position when the parent scrolls */\n\t    _setUpBehaviors : function( $where ){\n\t        $where = $where || this.$el;\n\t        // we need to call this in _setUpBehaviors which is called after render since the $el\n\t        // may not be attached to $el.parent and $scrollContainer() may not work\n\t        var panel = this;\n\t        _super.prototype._setUpBehaviors.call( panel, $where );\n\t\n\t        // cache the handler to remove and re-add so we don't pile up the handlers\n\t        if( !this._debouncedScrollCaptureHandler ){\n\t            this._debouncedScrollCaptureHandler = _.debounce( function scrollCapture(){\n\t                // cache the scroll position (only if visible)\n\t                if( panel.$el.is( ':visible' ) ){\n\t                    panel.preferences.set( 'scrollPosition', $( this ).scrollTop() );\n\t                }\n\t            }, 40 );\n\t        }\n\t\n\t        panel.$scrollContainer()\n\t            .off( 'scroll', this._debouncedScrollCaptureHandler )\n\t            .on( 'scroll', this._debouncedScrollCaptureHandler );\n\t        return panel;\n\t    },\n\t\n\t    /** In this override, handle null models and move the search input to the top */\n\t    _buildNewRender : function(){\n\t        if( !this.model ){ return $(); }\n\t        var $newRender = _super.prototype._buildNewRender.call( this );\n\t        //TODO: hacky\n\t        $newRender.find( '.search' ).prependTo( $newRender.find( '.controls' ) );\n\t        this._renderQuotaMessage( $newRender );\n\t        return $newRender;\n\t    },\n\t\n\t    /** render the message displayed when a user is over quota and can't run jobs */\n\t    _renderQuotaMessage : function( $whereTo ){\n\t        $whereTo = $whereTo || this.$el;\n\t        return $( this.templates.quotaMsg( {}, this ) ).prependTo( $whereTo.find( '.messages' ) );\n\t    },\n\t\n\t    /** In this override, add links to open data uploader or get data in the tools section */\n\t    _renderEmptyMessage : function( $whereTo ){\n\t        var panel = this,\n\t            $emptyMsg = panel.$emptyMessage( $whereTo ),\n\t            $toolMenu = $( '.toolMenuContainer' );\n\t\n\t        if( ( _.isEmpty( panel.views ) && !panel.searchFor )\n\t        &&  ( Galaxy && Galaxy.upload && $toolMenu.size() ) ){\n\t            $emptyMsg.empty();\n\t\n\t            $emptyMsg.html([\n\t                _l( 'This history is empty' ), '. ', _l( 'You can ' ),\n\t                '<a class=\"uploader-link\" href=\"javascript:void(0)\">',\n\t                    _l( 'load your own data' ),\n\t                '</a>',\n\t                _l( ' or ' ), '<a class=\"get-data-link\" href=\"javascript:void(0)\">',\n\t                    _l( 'get data from an external source' ),\n\t                '</a>'\n\t            ].join('') );\n\t            $emptyMsg.find( '.uploader-link' ).click( function( ev ){\n\t                Galaxy.upload.show( ev );\n\t            });\n\t            $emptyMsg.find( '.get-data-link' ).click( function( ev ){\n\t                $toolMenu.parent().scrollTop( 0 );\n\t                $toolMenu.find( 'span:contains(\"Get Data\")' )\n\t                    .click();\n\t                    //.fadeTo( 200, 0.1, function(){\n\t                    //    this.debug( this )\n\t                    //    $( this ).fadeTo( 200, 1.0 );\n\t                    //});\n\t            });\n\t            return $emptyMsg.show();\n\t        }\n\t        return _super.prototype._renderEmptyMessage.call( this, $whereTo );\n\t    },\n\t\n\t    /** In this override, get and set current panel preferences when editor is used */\n\t    _renderTags : function( $where ){\n\t        var panel = this;\n\t        // render tags and show/hide based on preferences\n\t        _super.prototype._renderTags.call( this, $where );\n\t        if( this.preferences.get( 'tagsEditorShown' ) ){\n\t            this.tagsEditor.toggle( true );\n\t        }\n\t        // store preference when shown or hidden\n\t        this.tagsEditor.on( 'hiddenUntilActivated:shown hiddenUntilActivated:hidden',\n\t            function( tagsEditor ){\n\t                panel.preferences.set( 'tagsEditorShown', tagsEditor.hidden );\n\t            });\n\t    },\n\t\n\t    /** In this override, get and set current panel preferences when editor is used */\n\t    _renderAnnotation : function( $where ){\n\t        var panel = this;\n\t        // render annotation and show/hide based on preferences\n\t        _super.prototype._renderAnnotation.call( this, $where );\n\t        if( this.preferences.get( 'annotationEditorShown' ) ){\n\t            this.annotationEditor.toggle( true );\n\t        }\n\t        // store preference when shown or hidden\n\t        this.annotationEditor.on( 'hiddenUntilActivated:shown hiddenUntilActivated:hidden',\n\t            function( annotationEditor ){\n\t                panel.preferences.set( 'annotationEditorShown', annotationEditor.hidden );\n\t            }\n\t        );\n\t    },\n\t\n\t    /** Override to scroll to cached position (in prefs) after swapping */\n\t    _swapNewRender : function( $newRender ){\n\t        _super.prototype._swapNewRender.call( this, $newRender );\n\t        var panel = this;\n\t        _.delay( function(){\n\t            var pos = panel.preferences.get( 'scrollPosition' );\n\t            if( pos ){\n\t                panel.scrollTo( pos, 0 );\n\t            }\n\t        }, 10 );\n\t        //TODO: is this enough of a delay on larger histories?\n\t\n\t        return this;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ sub-views\n\t    /** Override to add the current-content highlight class to currentContentId's view */\n\t    _attachItems : function( $whereTo ){\n\t        _super.prototype._attachItems.call( this, $whereTo );\n\t        var panel = this;\n\t        if( panel.currentContentId ){\n\t            panel._setCurrentContentById( panel.currentContentId );\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /** Override to remove any drill down panels */\n\t    addItemView : function( model, collection, options ){\n\t        var view = _super.prototype.addItemView.call( this, model, collection, options );\n\t        if( !view ){ return view; }\n\t        if( this.panelStack.length ){ return this._collapseDrilldownPanel(); }\n\t        return view;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ collection sub-views\n\t    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n\t    _setUpItemViewListeners : function( view ){\n\t        var panel = this;\n\t        _super.prototype._setUpItemViewListeners.call( panel, view );\n\t\n\t        // use pub-sub to: handle drilldown expansion and collapse\n\t        view.on( 'expanded:drilldown', function( v, drilldown ){\n\t            this._expandDrilldownPanel( drilldown );\n\t        }, this );\n\t        view.on( 'collapsed:drilldown', function( v, drilldown ){\n\t            this._collapseDrilldownPanel( drilldown );\n\t        }, this );\n\t\n\t        // when content is manipulated, make it the current-content\n\t        // view.on( 'visualize', function( v, ev ){\n\t        //     this.setCurrentContent( v );\n\t        // }, this );\n\t\n\t        return this;\n\t    },\n\t\n\t    /** display 'current content': add a visible highlight and store the id of a content item */\n\t    setCurrentContent : function( view ){\n\t        this.$( '.history-content.current-content' ).removeClass( 'current-content' );\n\t        if( view ){\n\t            view.$el.addClass( 'current-content' );\n\t            this.currentContentId = view.model.id;\n\t        } else {\n\t            this.currentContentId = null;\n\t        }\n\t    },\n\t\n\t    /** find the view with the id and then call setCurrentContent on it */\n\t    _setCurrentContentById : function( id ){\n\t        var view = this.viewFromModelId( id ) || null;\n\t        this.setCurrentContent( view );\n\t    },\n\t\n\t    /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n\t    _expandDrilldownPanel : function( drilldown ){\n\t        this.panelStack.push( drilldown );\n\t        // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n\t        this.$( '> .controls' ).add( this.$list() ).hide();\n\t        drilldown.parentName = this.model.get( 'name' );\n\t        this.$el.append( drilldown.render().$el );\n\t    },\n\t\n\t    /** Handle drilldown close by freeing the panel and re-rendering this panel */\n\t    _collapseDrilldownPanel : function( drilldown ){\n\t        this.panelStack.pop();\n\t//TODO: MEM: free the panel\n\t        this.render();\n\t    },\n\t\n\t    // ........................................................................ external objects/MVC\n\t    listenToGalaxy : function( galaxy ){\n\t        // TODO: MEM: questionable reference island / closure practice\n\t        galaxy.on( 'galaxy_main:load', function( data ){\n\t            var pathToMatch = data.fullpath,\n\t                useToURLRegexMap = {\n\t                    'display'       : /datasets\\/([a-f0-9]+)\\/display/,\n\t                    'edit'          : /datasets\\/([a-f0-9]+)\\/edit/,\n\t                    'report_error'  : /dataset\\/errors\\?id=([a-f0-9]+)/,\n\t                    'rerun'         : /tool_runner\\/rerun\\?id=([a-f0-9]+)/,\n\t                    'show_params'   : /datasets\\/([a-f0-9]+)\\/show_params/,\n\t                    // no great way to do this here? (leave it in the dataset event handlers above?)\n\t                    // 'visualization' : 'visualization',\n\t                },\n\t                hdaId = null,\n\t                hdaUse = null;\n\t            _.find( useToURLRegexMap, function( regex, use ){\n\t                var match = pathToMatch.match( regex );\n\t                if( match && match.length == 2 ){\n\t                    hdaId = match[1];\n\t                    hdaUse = use;\n\t                    return true;\n\t                }\n\t                return false;\n\t            });\n\t            // need to type mangle to go from web route to history contents\n\t            hdaId = 'dataset-' + hdaId;\n\t            this._setCurrentContentById( hdaId );\n\t        }, this );\n\t    },\n\t\n\t//TODO: remove quota meter from panel and remove this\n\t    /** add listeners to an external quota meter (mvc/user/user-quotameter.js) */\n\t    connectToQuotaMeter : function( quotaMeter ){\n\t        if( !quotaMeter ){\n\t            return this;\n\t        }\n\t        // show/hide the 'over quota message' in the history when the meter tells it to\n\t        this.listenTo( quotaMeter, 'quota:over',  this.showQuotaMessage );\n\t        this.listenTo( quotaMeter, 'quota:under', this.hideQuotaMessage );\n\t\n\t        // having to add this to handle re-render of hview while overquota (the above do not fire)\n\t        this.on( 'rendered rendered:initial', function(){\n\t            if( quotaMeter && quotaMeter.isOverQuota() ){\n\t                this.showQuotaMessage();\n\t            }\n\t        });\n\t        return this;\n\t    },\n\t\n\t//TODO: this seems more like a per user message than a history message; IOW, this doesn't belong here\n\t    /** Override to preserve the quota message */\n\t    clearMessages : function( ev ){\n\t        var $target = !_.isUndefined( ev )?\n\t            $( ev.currentTarget )\n\t            :this.$messages().children( '[class$=\"message\"]' );\n\t        $target = $target.not( '.quota-message' );\n\t        $target.fadeOut( this.fxSpeed, function(){\n\t            $( this ).remove();\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /** Show the over quota message (which happens to be in the history panel).\n\t     */\n\t    showQuotaMessage : function(){\n\t        var $msg = this.$( '.quota-message' );\n\t        if( $msg.is( ':hidden' ) ){ $msg.slideDown( this.fxSpeed ); }\n\t    },\n\t\n\t//TODO: this seems more like a per user message than a history message\n\t    /** Hide the over quota message (which happens to be in the history panel).\n\t     */\n\t    hideQuotaMessage : function(){\n\t        var $msg = this.$( '.quota-message' );\n\t        if( !$msg.is( ':hidden' ) ){ $msg.slideUp( this.fxSpeed ); }\n\t    },\n\t\n\t    /** Return a string rep of the history\n\t     */\n\t    toString    : function(){\n\t        return 'CurrentHistoryPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t//------------------------------------------------------------------------------ TEMPLATES\n\tCurrentHistoryPanel.prototype.templates = (function(){\n\t\n\t    var quotaMsgTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"quota-message errormessage\">',\n\t            _l( 'You are over your disk quota' ), '. ',\n\t            _l( 'Tool execution is on hold until your disk usage drops below your allocated quota' ), '.',\n\t        '</div>'\n\t    ], 'history' );\n\t    return _.extend( _.clone( _super.prototype.templates ), {\n\t        quotaMsg : quotaMsgTemplate\n\t    });\n\t\n\t}());\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        CurrentHistoryPanel        : CurrentHistoryPanel\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1), __webpack_require__(1)))\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_, $, jQuery) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(97),\n\t    __webpack_require__(26),\n\t    __webpack_require__(9),\n\t    __webpack_require__(47),\n\t    __webpack_require__(93),\n\t    __webpack_require__(94),\n\t    __webpack_require__(51),\n\t    __webpack_require__(42),\n\t    __webpack_require__(22),\n\t    __webpack_require__(85),\n\t    __webpack_require__(84),\n\t    __webpack_require__(13),\n\t    __webpack_require__(30),\n\t    __webpack_require__(5),\n\t    __webpack_require__(12),\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t    HPANEL,\n\t    HISTORY_CONTENTS,\n\t    STATES,\n\t    HDA_MODEL,\n\t    HDA_LI_EDIT,\n\t    HDCA_LI_EDIT,\n\t    TAGS,\n\t    ANNOTATIONS,\n\t    LIST_COLLECTION_CREATOR,\n\t    PAIR_COLLECTION_CREATOR,\n\t    LIST_OF_PAIRS_COLLECTION_CREATOR,\n\t    faIconButton,\n\t    PopupMenu,\n\t    _l\n\t){\n\t/* =============================================================================\n\tTODO:\n\t\n\t============================================================================= */\n\tvar _super = HPANEL.HistoryPanel;\n\t// base class for current-history-panel and used as-is in history/view.mako\n\t/** @class Editable View/Controller for the history model.\n\t *\n\t *  Allows:\n\t *      (everything HistoryPanel allows)\n\t *      changing the name\n\t *      displaying and editing tags and annotations\n\t *      multi-selection and operations on mulitple content items\n\t */\n\tvar HistoryPanelEdit = _super.extend(\n\t/** @lends HistoryPanelEdit.prototype */{\n\t\n\t    /** logger used to record this.log messages, commonly set to console */\n\t    //logger              : console,\n\t\n\t    /** class to use for constructing the HistoryDatasetAssociation views */\n\t    HDAViewClass    : HDA_LI_EDIT.HDAListItemEdit,\n\t    /** class to use for constructing the HistoryDatasetCollectionAssociation views */\n\t    HDCAViewClass   : HDCA_LI_EDIT.HDCAListItemEdit,\n\t\n\t    // ......................................................................... SET UP\n\t    /** Set up the view, set up storage, bind listeners to HistoryContents events\n\t     *  @param {Object} attributes\n\t     */\n\t    initialize : function( attributes ){\n\t        attributes = attributes || {};\n\t        _super.prototype.initialize.call( this, attributes );\n\t\n\t        // ---- set up instance vars\n\t        /** editor for tags - sub-view */\n\t        this.tagsEditor = null;\n\t        /** editor for annotations - sub-view */\n\t        this.annotationEditor = null;\n\t\n\t        /** allow user purge of dataset files? */\n\t        this.purgeAllowed = attributes.purgeAllowed || false;\n\t\n\t        // states/modes the panel can be in\n\t        /** is the panel currently showing the dataset selection controls? */\n\t        this.annotationEditorShown  = attributes.annotationEditorShown || false;\n\t        this.tagsEditorShown  = attributes.tagsEditorShown || false;\n\t    },\n\t\n\t    /** Override to handle history as drag-drop target */\n\t    _setUpListeners : function(){\n\t        var panel = this;\n\t        _super.prototype._setUpListeners.call( panel );\n\t\n\t        panel.on( 'drop', function( ev, data ){\n\t            panel.dataDropped( data );\n\t            // remove the drop target\n\t            panel.dropTargetOff();\n\t        });\n\t        panel.on( 'view:attached view:removed', function(){\n\t            panel._renderCounts();\n\t        }, panel );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ listeners\n\t    /** listening for collection events */\n\t    _setUpCollectionListeners : function(){\n\t        _super.prototype._setUpCollectionListeners.call( this );\n\t\n\t        this.collection.on( 'change:deleted', this._handleHdaDeletionChange, this );\n\t        this.collection.on( 'change:visible', this._handleHdaVisibleChange, this );\n\t        this.collection.on( 'change:purged', function( model ){\n\t            // hafta get the new nice-size w/o the purged model\n\t            this.model.fetch();\n\t        }, this );\n\t        return this;\n\t    },\n\t\n\t    /** listening for history and HDA events */\n\t    _setUpModelListeners : function(){\n\t        _super.prototype._setUpModelListeners.call( this );\n\t        this.model.on( 'change:size', this.updateHistoryDiskSize, this );\n\t        return this;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ panel rendering\n\t    /** In this override, add tag and annotation editors and a btn to toggle the selectors */\n\t    _buildNewRender : function(){\n\t        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n\t        var $newRender = _super.prototype._buildNewRender.call( this );\n\t        if( !this.model ){ return $newRender; }\n\t\n\t        if( Galaxy && Galaxy.currUser && Galaxy.currUser.id && Galaxy.currUser.id === this.model.get( 'user_id' ) ){\n\t            this._renderTags( $newRender );\n\t            this._renderAnnotation( $newRender );\n\t        }\n\t        return $newRender;\n\t    },\n\t\n\t    /** override to render counts when the items are rendered */\n\t    renderItems : function( $whereTo ){\n\t        var views = _super.prototype.renderItems.call( this, $whereTo );\n\t        this._renderCounts( $whereTo );\n\t        return views;\n\t    },\n\t\n\t    /** override to show counts, what's deleted/hidden, and links to toggle those */\n\t    _renderCounts : function( $whereTo ){\n\t//TODO: too complicated\n\t        function toggleLink( _class, text ){\n\t            return [ '<a class=\"', _class, '\" href=\"javascript:void(0);\">', text, '</a>' ].join( '' );\n\t        }\n\t        $whereTo = $whereTo || this.$el;\n\t        var deleted  = this.collection.where({ deleted: true }),\n\t            hidden   = this.collection.where({ visible: false }),\n\t            msgs = [];\n\t\n\t        if( this.views.length ){\n\t            msgs.push( [ this.views.length, _l( 'shown' ) ].join( ' ' ) );\n\t        }\n\t        if( deleted.length ){\n\t            msgs.push( ( !this.showDeleted )?\n\t                 ([ deleted.length, toggleLink( 'toggle-deleted-link', _l( 'deleted' ) ) ].join( ' ' ))\n\t                :( toggleLink( 'toggle-deleted-link', _l( 'hide deleted' ) ) )\n\t            );\n\t        }\n\t        if( hidden.length ){\n\t            msgs.push( ( !this.showHidden )?\n\t                 ([ hidden.length, toggleLink( 'toggle-hidden-link', _l( 'hidden' ) ) ].join( ' ' ))\n\t                :( toggleLink( 'toggle-hidden-link', _l( 'hide hidden' ) ) )\n\t            );\n\t        }\n\t        return $whereTo.find( '> .controls .subtitle' ).html( msgs.join( ', ' ) );\n\t    },\n\t\n\t    /** render the tags sub-view controller */\n\t    _renderTags : function( $where ){\n\t        var panel = this;\n\t        this.tagsEditor = new TAGS.TagsEditor({\n\t            model           : this.model,\n\t            el              : $where.find( '.controls .tags-display' ),\n\t            onshowFirstTime : function(){ this.render(); },\n\t            // show hide sub-view tag editors when this is shown/hidden\n\t            onshow          : function(){\n\t                panel.toggleHDATagEditors( true,  panel.fxSpeed );\n\t            },\n\t            onhide          : function(){\n\t                panel.toggleHDATagEditors( false, panel.fxSpeed );\n\t            },\n\t            $activator      : faIconButton({\n\t                title   : _l( 'Edit history tags' ),\n\t                classes : 'history-tag-btn',\n\t                faIcon  : 'fa-tags'\n\t            }).appendTo( $where.find( '.controls .actions' ) )\n\t        });\n\t    },\n\t    /** render the annotation sub-view controller */\n\t    _renderAnnotation : function( $where ){\n\t        var panel = this;\n\t        this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n\t            model           : this.model,\n\t            el              : $where.find( '.controls .annotation-display' ),\n\t            onshowFirstTime : function(){ this.render(); },\n\t            // show hide sub-view view annotation editors when this is shown/hidden\n\t            onshow          : function(){\n\t                panel.toggleHDAAnnotationEditors( true,  panel.fxSpeed );\n\t            },\n\t            onhide          : function(){\n\t                panel.toggleHDAAnnotationEditors( false, panel.fxSpeed );\n\t            },\n\t            $activator      : faIconButton({\n\t                title   : _l( 'Edit history annotation' ),\n\t                classes : 'history-annotate-btn',\n\t                faIcon  : 'fa-comment'\n\t            }).appendTo( $where.find( '.controls .actions' ) )\n\t        });\n\t    },\n\t\n\t    /** Set up HistoryPanelEdit js/widget behaviours\n\t     *  In this override, make the name editable\n\t     */\n\t    _setUpBehaviors : function( $where ){\n\t        $where = $where || this.$el;\n\t        _super.prototype._setUpBehaviors.call( this, $where );\n\t        if( !this.model ){ return; }\n\t\n\t        // anon users shouldn't have access to any of the following\n\t        if( ( !Galaxy.currUser || Galaxy.currUser.isAnonymous() )\n\t        ||  ( Galaxy.currUser.id !== this.model.get( 'user_id' ) ) ){\n\t            return;\n\t        }\n\t\n\t        var panel = this,\n\t            nameSelector = '> .controls .name';\n\t        $where.find( nameSelector )\n\t            .attr( 'title', _l( 'Click to rename history' ) )\n\t            .tooltip({ placement: 'bottom' })\n\t            .make_text_editable({\n\t                on_finish: function( newName ){\n\t                    var previousName = panel.model.get( 'name' );\n\t                    if( newName && newName !== previousName ){\n\t                        panel.$el.find( nameSelector ).text( newName );\n\t                        panel.model.save({ name: newName })\n\t                            .fail( function(){\n\t                                panel.$el.find( nameSelector ).text( panel.model.previous( 'name' ) );\n\t                            });\n\t                    } else {\n\t                        panel.$el.find( nameSelector ).text( previousName );\n\t                    }\n\t                }\n\t            });\n\t    },\n\t\n\t    /** return a new popup menu for choosing a multi selection action\n\t     *  ajax calls made for multiple datasets are queued\n\t     */\n\t    multiselectActions : function(){\n\t        var panel = this,\n\t            actions = [\n\t                {   html: _l( 'Hide datasets' ), func: function(){\n\t                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.hide;\n\t                        panel.getSelectedModels().ajaxQueue( action );\n\t                    }\n\t                },\n\t                {   html: _l( 'Unhide datasets' ), func: function(){\n\t                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.unhide;\n\t                        panel.getSelectedModels().ajaxQueue( action );\n\t                    }\n\t                },\n\t                {   html: _l( 'Delete datasets' ), func: function(){\n\t                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype['delete'];\n\t                        panel.getSelectedModels().ajaxQueue( action );\n\t                    }\n\t                },\n\t                {   html: _l( 'Undelete datasets' ), func: function(){\n\t                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.undelete;\n\t                        panel.getSelectedModels().ajaxQueue( action );\n\t                    }\n\t                }\n\t            ];\n\t        if( panel.purgeAllowed ){\n\t            actions.push({\n\t                html: _l( 'Permanently delete datasets' ), func: function(){\n\t                    if( confirm( _l( 'This will permanently remove the data in your datasets. Are you sure?' ) ) ){\n\t                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.purge;\n\t                        panel.getSelectedModels().ajaxQueue( action );\n\t                    }\n\t                }\n\t            });\n\t        }\n\t        actions = actions.concat( panel._collectionActions() );\n\t        return actions;\n\t    },\n\t\n\t    /**   */\n\t    _collectionActions : function(){\n\t        var panel = this;\n\t        return [\n\t            {   html: _l( 'Build Dataset List' ), func: function() {\n\t                    LIST_COLLECTION_CREATOR.createListCollection( panel.getSelectedModels() )\n\t                        .done( function(){ panel.model.refresh() });\n\t                }\n\t            },\n\t            // TODO: Only show quick pair if two things selected.\n\t            {   html: _l( 'Build Dataset Pair' ), func: function() {\n\t                    PAIR_COLLECTION_CREATOR.createPairCollection( panel.getSelectedModels() )\n\t                        .done( function(){ panel.model.refresh() });\n\t                }\n\t            },\n\t            {   html: _l( 'Build List of Dataset Pairs' ), func: function() {\n\t                    LIST_OF_PAIRS_COLLECTION_CREATOR.createListOfPairsCollection( panel.getSelectedModels() )\n\t                        .done( function(){ panel.model.refresh() });\n\t                }\n\t            },\n\t        ];\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ sub-views\n\t    // reverse HID order\n\t    /** Override to reverse order of views - newest contents on top */\n\t    _attachItems : function( $whereTo ){\n\t        this.$list( $whereTo ).append( this.views.reverse().map( function( view ){\n\t            return view.$el;\n\t        }));\n\t        return this;\n\t    },\n\t\n\t    /** Override to add new contents at the top */\n\t    _attachView : function( view ){\n\t        var panel = this;\n\t        // override to control where the view is added, how/whether it's rendered\n\t        panel.views.unshift( view );\n\t        panel.$list().prepend( view.render( 0 ).$el.hide() );\n\t        panel.trigger( 'view:attached', view );\n\t        view.$el.slideDown( panel.fxSpeed, function(){\n\t            panel.trigger( 'view:attached:rendered' );\n\t        });\n\t    },\n\t\n\t    /** In this override, add purgeAllowed and whether tags/annotation editors should be shown */\n\t    _getItemViewOptions : function( model ){\n\t        var options = _super.prototype._getItemViewOptions.call( this, model );\n\t        _.extend( options, {\n\t            purgeAllowed            : this.purgeAllowed,\n\t//TODO: not working\n\t            tagsEditorShown         : ( this.tagsEditor && !this.tagsEditor.hidden ),\n\t            annotationEditorShown   : ( this.annotationEditor && !this.annotationEditor.hidden )\n\t        });\n\t        return options;\n\t    },\n\t\n\t    ///** Override to alter data in drag based on multiselection */\n\t    //_setUpItemViewListeners : function( view ){\n\t    //    var panel = this;\n\t    //    _super.prototype._setUpItemViewListeners.call( panel, view );\n\t    //\n\t    //},\n\t\n\t    /** If this item is deleted and we're not showing deleted items, remove the view\n\t     *  @param {Model} the item model to check\n\t     */\n\t    _handleHdaDeletionChange : function( itemModel ){\n\t        if( itemModel.get( 'deleted' ) && !this.showDeleted ){\n\t            this.removeItemView( itemModel );\n\t        }\n\t        this._renderCounts();\n\t    },\n\t\n\t    /** If this item is hidden and we're not showing hidden items, remove the view\n\t     *  @param {Model} the item model to check\n\t     */\n\t    _handleHdaVisibleChange : function( itemModel ){\n\t        if( itemModel.hidden() && !this.showHidden ){\n\t            this.removeItemView( itemModel );\n\t        }\n\t        this._renderCounts();\n\t    },\n\t\n\t    /** toggle the visibility of each content's tagsEditor applying all the args sent to this function */\n\t    toggleHDATagEditors : function( showOrHide ){\n\t        var args = Array.prototype.slice.call( arguments, 1 );\n\t        _.each( this.views, function( view ){\n\t            if( view.tagsEditor ){\n\t                view.tagsEditor.toggle.apply( view.tagsEditor, args );\n\t            }\n\t        });\n\t    },\n\t\n\t    /** toggle the visibility of each content's annotationEditor applying all the args sent to this function */\n\t    toggleHDAAnnotationEditors : function( showOrHide ){\n\t        var args = Array.prototype.slice.call( arguments, 1 );\n\t        _.each( this.views, function( view ){\n\t            if( view.annotationEditor ){\n\t                view.annotationEditor.toggle.apply( view.annotationEditor, args );\n\t            }\n\t        });\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ panel events\n\t    /** event map */\n\t    events : _.extend( _.clone( _super.prototype.events ), {\n\t        'click .show-selectors-btn'                 : 'toggleSelectors',\n\t        'click .toggle-deleted-link'                : function( ev ){ this.toggleShowDeleted(); },\n\t        'click .toggle-hidden-link'                 : function( ev ){ this.toggleShowHidden(); }\n\t    }),\n\t\n\t    /** Update the history size display (curr. upper right of panel).\n\t     */\n\t    updateHistoryDiskSize : function(){\n\t        this.$el.find( '.history-size' ).text( this.model.get( 'nice_size' ) );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ as drop target\n\t    /**  */\n\t    dropTargetOn : function(){\n\t        if( this.dropTarget ){ return this; }\n\t        this.dropTarget = true;\n\t\n\t        //TODO: to init\n\t        var dropHandlers = {\n\t            'dragenter' : _.bind( this.dragenter, this ),\n\t            'dragover'  : _.bind( this.dragover,  this ),\n\t            'dragleave' : _.bind( this.dragleave, this ),\n\t            'drop'      : _.bind( this.drop, this )\n\t        };\n\t//TODO: scroll to top\n\t        var $dropTarget = this._renderDropTarget();\n\t        this.$list().before([ this._renderDropTargetHelp(), $dropTarget ]);\n\t        for( var evName in dropHandlers ){\n\t            if( dropHandlers.hasOwnProperty( evName ) ){\n\t                //console.debug( evName, dropHandlers[ evName ] );\n\t                $dropTarget.on( evName, dropHandlers[ evName ] );\n\t            }\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**  */\n\t    _renderDropTarget : function(){\n\t        this.$( '.history-drop-target' ).remove();\n\t        return $( '<div/>' ).addClass( 'history-drop-target' )\n\t            .css({\n\t                'height': '64px',\n\t                'margin': '0px 10px 10px 10px',\n\t                'border': '1px dashed black',\n\t                'border-radius' : '3px'\n\t            });\n\t    },\n\t\n\t    /**  */\n\t    _renderDropTargetHelp : function(){\n\t        this.$( '.history-drop-target-help' ).remove();\n\t        return $( '<div/>' ).addClass( 'history-drop-target-help' )\n\t            .css({\n\t                'margin'        : '10px 10px 4px 10px',\n\t                'color'         : 'grey',\n\t                'font-size'     : '80%',\n\t                'font-style'    : 'italic'\n\t            })\n\t            .text( _l( 'Drag datasets here to copy them to the current history' ) );\n\t    },\n\t\n\t    /**  */\n\t    dropTargetOff : function(){\n\t        if( !this.dropTarget ){ return this; }\n\t        //this.log( 'dropTargetOff' );\n\t        this.dropTarget = false;\n\t        var dropTarget = this.$( '.history-drop-target' ).get(0);\n\t        for( var evName in this._dropHandlers ){\n\t            if( this._dropHandlers.hasOwnProperty( evName ) ){\n\t                dropTarget.off( evName, this._dropHandlers[ evName ] );\n\t            }\n\t        }\n\t        this.$( '.history-drop-target' ).remove();\n\t        this.$( '.history-drop-target-help' ).remove();\n\t        return this;\n\t    },\n\t    /**  */\n\t    dropTargetToggle : function(){\n\t        if( this.dropTarget ){\n\t            this.dropTargetOff();\n\t        } else {\n\t            this.dropTargetOn();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**  */\n\t    dragenter : function( ev ){\n\t        //console.debug( 'dragenter:', this, ev );\n\t        ev.preventDefault();\n\t        ev.stopPropagation();\n\t        this.$( '.history-drop-target' ).css( 'border', '2px solid black' );\n\t    },\n\t    /**  */\n\t    dragover : function( ev ){\n\t        ev.preventDefault();\n\t        ev.stopPropagation();\n\t    },\n\t    /**  */\n\t    dragleave : function( ev ){\n\t        //console.debug( 'dragleave:', this, ev );\n\t        ev.preventDefault();\n\t        ev.stopPropagation();\n\t        this.$( '.history-drop-target' ).css( 'border', '1px dashed black' );\n\t    },\n\t    /**  */\n\t    drop : function( ev ){\n\t        //console.warn( 'dataTransfer:', ev.dataTransfer.getData( 'text' ) );\n\t        //console.warn( 'dataTransfer:', ev.originalEvent.dataTransfer.getData( 'text' ) );\n\t        ev.preventDefault();\n\t        //ev.stopPropagation();\n\t        ev.dataTransfer.dropEffect = 'move';\n\t\n\t        //console.debug( 'ev.dataTransfer:', ev.dataTransfer );\n\t\n\t        var panel = this,\n\t            data = ev.dataTransfer.getData( \"text\" );\n\t        try {\n\t            data = JSON.parse( data );\n\t\n\t        } catch( err ){\n\t            this.warn( 'error parsing JSON from drop:', data );\n\t        }\n\t        this.trigger( 'droptarget:drop', ev, data, panel );\n\t        return false;\n\t    },\n\t\n\t    /**  */\n\t    dataDropped : function( data ){\n\t        var panel = this;\n\t        // HDA: dropping will copy it to the history\n\t        if( _.isObject( data ) && data.model_class === 'HistoryDatasetAssociation' && data.id ){\n\t            return panel.model.contents.copy( data.id );\n\t        }\n\t        return jQuery.when();\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    /** Return a string rep of the history */\n\t    toString    : function(){\n\t        return 'HistoryPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t//==============================================================================\n\t    return {\n\t        HistoryPanelEdit : HistoryPanelEdit\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1), __webpack_require__(1)))\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(_, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(50),\n\t    __webpack_require__(49),\n\t    __webpack_require__(26),\n\t    __webpack_require__(46),\n\t    __webpack_require__(48),\n\t    __webpack_require__(14),\n\t    __webpack_require__(60),\n\t    __webpack_require__(13),\n\t    __webpack_require__(30),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5),\n\t    __webpack_require__(63)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t    LIST_PANEL,\n\t    HISTORY_MODEL,\n\t    HISTORY_CONTENTS,\n\t    HDA_LI,\n\t    HDCA_LI,\n\t    COLLECTION_PANEL,\n\t    USER,\n\t    faIconButton,\n\t    PopupMenu,\n\t    BASE_MVC,\n\t    _l\n\t){\n\t\n\tvar logNamespace = 'history';\n\t// ============================================================================\n\t/** session storage for individual history preferences */\n\tvar HistoryPrefs = BASE_MVC.SessionStorageModel.extend(\n\t/** @lends HistoryPrefs.prototype */{\n\t//TODO:?? possibly mark as current T/F - have History.currId() (a class method) return that value\n\t    defaults : {\n\t//TODO:?? expandedIds to array?\n\t        expandedIds : {},\n\t        //TODO:?? move to user?\n\t        show_deleted : false,\n\t        show_hidden  : false\n\t        //TODO: add scroll position?\n\t    },\n\t    /** add an hda id to the hash of expanded hdas */\n\t    addExpanded : function( model ){\n\t        var key = 'expandedIds';\n\t//TODO:?? is this right anymore?\n\t        this.save( key, _.extend( this.get( key ), _.object([ model.id ], [ model.get( 'id' ) ]) ) );\n\t    },\n\t    /** remove an hda id from the hash of expanded hdas */\n\t    removeExpanded : function( model ){\n\t        var key = 'expandedIds';\n\t        this.save( key, _.omit( this.get( key ), model.id ) );\n\t    },\n\t    toString : function(){\n\t        return 'HistoryPrefs(' + this.id + ')';\n\t    }\n\t});\n\t// class lvl for access w/o instantiation\n\tHistoryPrefs.storageKeyPrefix = 'history:';\n\t\n\t/** key string to store each histories settings under */\n\tHistoryPrefs.historyStorageKey = function historyStorageKey( historyId ){\n\t    if( !historyId ){\n\t        throw new Error( 'HistoryPrefs.historyStorageKey needs valid id: ' + historyId );\n\t    }\n\t    // single point of change\n\t    return ( HistoryPrefs.storageKeyPrefix + historyId );\n\t};\n\t/** return the existing storage for the history with the given id (or create one if it doesn't exist) */\n\tHistoryPrefs.get = function get( historyId ){\n\t    return new HistoryPrefs({ id: HistoryPrefs.historyStorageKey( historyId ) });\n\t};\n\t/** clear all history related items in sessionStorage */\n\tHistoryPrefs.clearAll = function clearAll( historyId ){\n\t    for( var key in sessionStorage ){\n\t        if( key.indexOf( HistoryPrefs.storageKeyPrefix ) === 0 ){\n\t            sessionStorage.removeItem( key );\n\t        }\n\t    }\n\t};\n\t\n\t\n\t/* =============================================================================\n\tTODO:\n\t\n\t============================================================================= */\n\t/** @class  non-editable, read-only View/Controller for a history model.\n\t *  Allows:\n\t *      changing the loaded history\n\t *      displaying data, info, and download\n\t *      tracking history attrs: size, tags, annotations, name, etc.\n\t *  Does not allow:\n\t *      changing the name\n\t */\n\tvar _super = LIST_PANEL.ModelListPanel;\n\tvar HistoryPanel = _super.extend(\n\t/** @lends HistoryPanel.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    /** class to use for constructing the HDA views */\n\t    HDAViewClass        : HDA_LI.HDAListItemView,\n\t    /** class to use for constructing the HDCA views */\n\t    HDCAViewClass       : HDCA_LI.HDCAListItemView,\n\t    /** class to used for constructing collection of sub-view models */\n\t    collectionClass     : HISTORY_CONTENTS.HistoryContents,\n\t    /** key of attribute in model to assign to this.collection */\n\t    modelCollectionKey  : 'contents',\n\t\n\t    tagName             : 'div',\n\t    className           : _super.prototype.className + ' history-panel',\n\t\n\t    /** string to display when the collection is empty */\n\t    emptyMsg            : _l( 'This history is empty' ),\n\t    /** displayed when no items match the search terms */\n\t    noneFoundMsg        : _l( 'No matching datasets found' ),\n\t    /** string used for search placeholder */\n\t    searchPlaceholder   : _l( 'search datasets' ),\n\t\n\t    // ......................................................................... SET UP\n\t    /** Set up the view, bind listeners.\n\t     *  @param {Object} attributes optional settings for the panel\n\t     */\n\t    initialize : function( attributes ){\n\t        _super.prototype.initialize.call( this, attributes );\n\t        // ---- instance vars\n\t        // control contents/behavior based on where (and in what context) the panel is being used\n\t        /** where should pages from links be displayed? (default to new tab/window) */\n\t        this.linkTarget = attributes.linkTarget || '_blank';\n\t    },\n\t\n\t    /** In this override, clear the update timer on the model */\n\t    freeModel : function(){\n\t        _super.prototype.freeModel.call( this );\n\t//TODO: move to History.free()\n\t        if( this.model ){\n\t            this.model.clearUpdateTimeout();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /** create any event listeners for the panel\n\t     *  @fires: rendered:initial    on the first render\n\t     *  @fires: empty-history       when switching to a history with no contents or creating a new history\n\t     */\n\t    _setUpListeners : function(){\n\t        _super.prototype._setUpListeners.call( this );\n\t        this.on({\n\t            error : function( model, xhr, options, msg, details ){\n\t                this.errorHandler( model, xhr, options, msg, details );\n\t            },\n\t            'loading-done' : function(){\n\t                //TODO:?? if( this.collection.length ){\n\t                if( !this.views.length ){\n\t                    this.trigger( 'empty-history', this );\n\t                }\n\t            },\n\t            'views:ready view:attached view:removed' : function( view ){\n\t                this._renderSelectButton();\n\t            }\n\t        });\n\t        // this.on( 'all', function(){ console.debug( arguments ); });\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ loading history/hda models\n\t    //NOTE: all the following fns replace the existing history model with a new model\n\t    // (in the following 'details' refers to the full set of contents api data (urls, display_apps, misc_info, etc.)\n\t    //  - contents w/o details will have summary data only (name, hid, deleted, visible, state, etc.))\n\t//TODO: too tangled...\n\t\n\t    /** loads a history & contents, getting details of any contents whose ids are stored in sessionStorage\n\t     *      (but does not make them the current history)\n\t     */\n\t    loadHistoryWithDetails : function( historyId, attributes, historyFn, contentsFn ){\n\t        this.info( 'loadHistoryWithDetails:', historyId, attributes, historyFn, contentsFn );\n\t        var detailIdsFn = function( historyData ){\n\t                // will be called to get content ids that need details from the api\n\t//TODO:! non-visible contents are getting details loaded... either stop loading them at all or filter ids thru isVisible\n\t                return _.values( HistoryPrefs.get( historyData.id ).get( 'expandedIds' ) );\n\t            };\n\t        return this.loadHistory( historyId, attributes, historyFn, contentsFn, detailIdsFn );\n\t    },\n\t\n\t    /** loads a history & contents (but does not make them the current history) */\n\t    loadHistory : function( historyId, attributes, historyFn, contentsFn, detailIdsFn ){\n\t        this.info( 'loadHistory:', historyId, attributes, historyFn, contentsFn, detailIdsFn );\n\t        var panel = this;\n\t        attributes = attributes || {};\n\t\n\t        panel.trigger( 'loading', panel );\n\t        //this.info( 'loadHistory:', historyId, attributes, historyFn, contentsFn, detailIdsFn );\n\t        var xhr = HISTORY_MODEL.History.getHistoryData( historyId, {\n\t                historyFn       : historyFn,\n\t                contentsFn      : contentsFn,\n\t                detailIdsFn     : attributes.initiallyExpanded || detailIdsFn\n\t            });\n\t\n\t        return panel._loadHistoryFromXHR( xhr, attributes )\n\t            .fail( function( xhr, where, history ){\n\t                // throw an error up for the error handler\n\t                panel.trigger( 'error', panel, xhr, attributes, _l( 'An error was encountered while ' + where ),\n\t                    { historyId: historyId, history: history || {} });\n\t            })\n\t            .always( function(){\n\t                // bc _hideLoadingIndicator relies on this firing\n\t                panel.trigger( 'loading-done', panel );\n\t            });\n\t    },\n\t\n\t    /** given an xhr that will provide both history and contents data, pass data to set model or handle xhr errors */\n\t    _loadHistoryFromXHR : function( xhr, attributes ){\n\t        var panel = this;\n\t        xhr.then( function( historyJSON, contentsJSON ){\n\t            panel.JSONToModel( historyJSON, contentsJSON, attributes );\n\t            panel.render();\n\t        });\n\t        xhr.fail( function( xhr, where ){\n\t            // render anyways - whether we get a model or not\n\t            panel.render();\n\t        });\n\t        return xhr;\n\t    },\n\t\n\t    /** convenience alias to the model. Updates the item list only (not the history) */\n\t    refreshContents : function( detailIds, options ){\n\t        if( this.model ){\n\t            return this.model.refresh( detailIds, options );\n\t        }\n\t        // may have callbacks - so return an empty promise\n\t        return $.when();\n\t    },\n\t\n\t//TODO:?? seems unneccesary\n\t//TODO: Maybe better in History?\n\t    /** create a new history model from JSON and call setModel on it */\n\t    JSONToModel : function( newHistoryJSON, newHdaJSON, attributes ){\n\t        this.log( 'JSONToModel:', newHistoryJSON, newHdaJSON, attributes );\n\t        attributes = attributes || {};\n\t        //this.log( 'JSONToModel:', newHistoryJSON, newHdaJSON.length, attributes );\n\t\n\t        var model = new HISTORY_MODEL.History( newHistoryJSON, newHdaJSON, attributes );\n\t//TODO:?? here?\n\t        this.setModel( model );\n\t        return model;\n\t    },\n\t\n\t    /** release/free/shutdown old models and set up panel for new models\n\t     *  @fires new-model with the panel as parameter\n\t     */\n\t    setModel : function( model, attributes ){\n\t        attributes = attributes || {};\n\t        _super.prototype.setModel.call( this, model, attributes );\n\t        if( this.model ){\n\t            this._setUpWebStorage( attributes.initiallyExpanded, attributes.show_deleted, attributes.show_hidden );\n\t        }\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ browser stored prefs\n\t    /** Set up client side storage. Currently PersistanStorage keyed under 'HistoryPanel.<id>'\n\t     *  @param {Object} initiallyExpanded\n\t     *  @param {Boolean} show_deleted whether to show deleted contents (overrides stored)\n\t     *  @param {Boolean} show_hidden\n\t     *  @see PersistentStorage\n\t     */\n\t    _setUpWebStorage : function( initiallyExpanded, show_deleted, show_hidden ){\n\t        //if( !this.model ){ return this; }\n\t        //this.log( '_setUpWebStorage', initiallyExpanded, show_deleted, show_hidden );\n\t        if( this.storage ){\n\t            this.stopListening( this.storage );\n\t        }\n\t\n\t        this.storage = new HistoryPrefs({\n\t            id: HistoryPrefs.historyStorageKey( this.model.get( 'id' ) )\n\t        });\n\t\n\t        // expandedIds is a map of content.ids -> a boolean repr'ing whether that item's body is already expanded\n\t        // store any pre-expanded ids passed in\n\t        if( _.isObject( initiallyExpanded ) ){\n\t            this.storage.set( 'expandedIds', initiallyExpanded );\n\t        }\n\t\n\t        // get the show_deleted/hidden settings giving priority to values passed in, using web storage otherwise\n\t        // if the page has specifically requested show_deleted/hidden, these will be either true or false\n\t        //  (as opposed to undefined, null) - and we give priority to that setting\n\t        if( _.isBoolean( show_deleted ) ){\n\t            this.storage.set( 'show_deleted', show_deleted );\n\t        }\n\t        if( _.isBoolean( show_hidden ) ){\n\t            this.storage.set( 'show_hidden', show_hidden );\n\t        }\n\t\n\t        this.trigger( 'new-storage', this.storage, this );\n\t        this.log( this + ' (init\\'d) storage:', this.storage.get() );\n\t\n\t        this.listenTo( this.storage, {\n\t            'change:show_deleted' : function( view, newVal ){\n\t                this.showDeleted = newVal;\n\t            },\n\t            'change:show_hidden' : function( view, newVal ){\n\t                this.showHidden = newVal;\n\t            }\n\t        }, this );\n\t        this.showDeleted = ( show_deleted !== undefined )? show_deleted : this.storage.get( 'show_deleted' );\n\t        this.showHidden  = ( show_hidden  !== undefined )? show_hidden  : this.storage.get( 'show_hidden' );\n\t\n\t        return this;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ panel rendering\n\t    /** In this override, add a btn to toggle the selectors */\n\t    _buildNewRender : function(){\n\t        var $newRender = _super.prototype._buildNewRender.call( this );\n\t        this._renderSelectButton( $newRender );\n\t        return $newRender;\n\t    },\n\t\n\t    /** button for starting select mode */\n\t    _renderSelectButton : function( $where ){\n\t        $where = $where || this.$el;\n\t        // do not render selector option if no actions\n\t        if( !this.multiselectActions().length ){\n\t            return null;\n\t        }\n\t        // do not render (and remove even) if nothing to select\n\t        if( !this.views.length ){\n\t            this.hideSelectors();\n\t            $where.find( '.controls .actions .show-selectors-btn' ).remove();\n\t            return null;\n\t        }\n\t        // don't bother rendering if there's one already\n\t        var $existing = $where.find( '.controls .actions .show-selectors-btn' );\n\t        if( $existing.size() ){\n\t            return $existing;\n\t        }\n\t\n\t        return faIconButton({\n\t            title   : _l( 'Operations on multiple datasets' ),\n\t            classes : 'show-selectors-btn',\n\t            faIcon  : 'fa-check-square-o'\n\t        }).prependTo( $where.find( '.controls .actions' ) );\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ sub-views\n\t    /** In this override, since history contents are mixed,\n\t     *      get the appropo view class based on history_content_type\n\t     */\n\t    _getItemViewClass : function( model ){\n\t        var contentType = model.get( \"history_content_type\" );\n\t        switch( contentType ){\n\t            case 'dataset':\n\t                return this.HDAViewClass;\n\t            case 'dataset_collection':\n\t                return this.HDCAViewClass;\n\t        }\n\t        throw new TypeError( 'Unknown history_content_type: ' + contentType );\n\t    },\n\t\n\t    /** in this override, check if the contents would also display based on show_deleted/hidden */\n\t    _filterItem : function( model ){\n\t        var panel = this;\n\t        return ( _super.prototype._filterItem.call( panel, model )\n\t            && ( !model.hidden() || panel.showHidden )\n\t            && ( !model.isDeletedOrPurged() || panel.showDeleted ) );\n\t    },\n\t\n\t    /** in this override, add a linktarget, and expand if id is in web storage */\n\t    _getItemViewOptions : function( model ){\n\t        var options = _super.prototype._getItemViewOptions.call( this, model );\n\t        return _.extend( options, {\n\t            linkTarget      : this.linkTarget,\n\t            expanded        : !!this.storage.get( 'expandedIds' )[ model.id ],\n\t            hasUser         : this.model.ownedByCurrUser()\n\t        });\n\t    },\n\t\n\t    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n\t    _setUpItemViewListeners : function( view ){\n\t        var panel = this;\n\t        _super.prototype._setUpItemViewListeners.call( panel, view );\n\t\n\t        //TODO:?? could use 'view:expanded' here?\n\t        // maintain a list of items whose bodies are expanded\n\t        view.on( 'expanded', function( v ){\n\t            panel.storage.addExpanded( v.model );\n\t        });\n\t        view.on( 'collapsed', function( v ){\n\t            panel.storage.removeExpanded( v.model );\n\t        });\n\t        return this;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ selection\n\t    /** Override to correctly set the historyId of the new collection */\n\t    getSelectedModels : function(){\n\t        var collection = _super.prototype.getSelectedModels.call( this );\n\t        collection.historyId = this.collection.historyId;\n\t        return collection;\n\t    },\n\t\n\t    // ------------------------------------------------------------------------ panel events\n\t    /** event map */\n\t    events : _.extend( _.clone( _super.prototype.events ), {\n\t        // toggle list item selectors\n\t        'click .show-selectors-btn'         : 'toggleSelectors',\n\t        // allow (error) messages to be clicked away\n\t        'click .messages [class$=message]'  : 'clearMessages'\n\t    }),\n\t\n\t    /** Handle the user toggling the deleted visibility by:\n\t     *      (1) storing the new value in the persistent storage\n\t     *      (2) re-rendering the history\n\t     * @returns {Boolean} new show_deleted setting\n\t     */\n\t    toggleShowDeleted : function( show, store ){\n\t        show = ( show !== undefined )?( show ):( !this.showDeleted );\n\t        store = ( store !== undefined )?( store ):( true );\n\t        this.showDeleted = show;\n\t        if( store ){\n\t            this.storage.set( 'show_deleted', show );\n\t        }\n\t        //TODO:?? to events on storage('change:show_deleted')\n\t        this.renderItems();\n\t        this.trigger( 'show-deleted', show );\n\t        return this.showDeleted;\n\t    },\n\t\n\t    /** Handle the user toggling the hidden visibility by:\n\t     *      (1) storing the new value in the persistent storage\n\t     *      (2) re-rendering the history\n\t     * @returns {Boolean} new show_hidden setting\n\t     */\n\t    toggleShowHidden : function( show, store ){\n\t        show = ( show !== undefined )?( show ):( !this.showHidden );\n\t        store = ( store !== undefined )?( store ):( true );\n\t        this.showHidden = show;\n\t        if( store ){\n\t            this.storage.set( 'show_hidden', show );\n\t        }\n\t        //TODO:?? to events on storage('change:show_deleted')\n\t        this.renderItems();\n\t        this.trigger( 'show-hidden', show );\n\t        return this.showHidden;\n\t    },\n\t\n\t    /** On the first search, if there are no details - load them, then search */\n\t    _firstSearch : function( searchFor ){\n\t        var panel = this,\n\t            inputSelector = '.history-search-input';\n\t        this.log( 'onFirstSearch', searchFor );\n\t\n\t        if( panel.model.contents.haveDetails() ){\n\t            panel.searchItems( searchFor );\n\t            return;\n\t        }\n\t\n\t        panel.$el.find( inputSelector ).searchInput( 'toggle-loading' );\n\t        panel.model.contents.fetchAllDetails({ silent: true })\n\t            .always( function(){\n\t                panel.$el.find( inputSelector ).searchInput( 'toggle-loading' );\n\t            })\n\t            .done( function(){\n\t                panel.searchItems( panel.searchFor );\n\t            });\n\t    },\n\t\n\t//TODO: break this out\n\t    // ........................................................................ error handling\n\t    /** Event handler for errors (from the panel, the history, or the history's contents)\n\t     *  @param {Model or View} model    the (Backbone) source of the error\n\t     *  @param {XMLHTTPRequest} xhr     any ajax obj. assoc. with the error\n\t     *  @param {Object} options         the options map commonly used with bbone ajax\n\t     *  @param {String} msg             optional message passed to ease error location\n\t     *  @param {Object} msg             optional object containing error details\n\t     */\n\t    errorHandler : function( model, xhr, options, msg, details ){\n\t        this.error( model, xhr, options, msg, details );\n\t\n\t        // interrupted ajax\n\t        if( xhr && xhr.status === 0 && xhr.readyState === 0 ){\n\t            //TODO: gmail style 'retrying in Ns'\n\t\n\t        // bad gateway\n\t        } else if( xhr && xhr.status === 502 ){\n\t            //TODO: gmail style 'retrying in Ns'\n\t\n\t        // otherwise, show an error message inside the panel\n\t        } else {\n\t            // if sentry is available, attempt to get the event id\n\t            var parsed = this._parseErrorMessage( model, xhr, options, msg, details );\n\t            // it's possible to have a triggered error before the message container is rendered - wait for it to show\n\t            if( !this.$messages().is( ':visible' ) ){\n\t                this.once( 'rendered', function(){\n\t                    this.displayMessage( 'error', parsed.message, parsed.details );\n\t                });\n\t            } else {\n\t                this.displayMessage( 'error', parsed.message, parsed.details );\n\t            }\n\t        }\n\t    },\n\t\n\t    /** Parse an error event into an Object usable by displayMessage based on the parameters\n\t     *      note: see errorHandler for more info on params\n\t     */\n\t    _parseErrorMessage : function( model, xhr, options, msg, details, sentryId ){\n\t        //if( xhr.responseText ){\n\t        //    xhr.responseText = _.escape( xhr.responseText );\n\t        //}\n\t        var user = Galaxy.currUser,\n\t            // add the args (w/ some extra info) into an obj\n\t            parsed = {\n\t                message : this._bePolite( msg ),\n\t                details : {\n\t                    message : msg,\n\t                    raven   : ( window.Raven && _.isFunction( Raven.lastEventId) )?\n\t                                    ( Raven.lastEventId() ):( undefined ),\n\t                    agent   : navigator.userAgent,\n\t                    // add ajax data from Galaxy object cache\n\t                    url     : ( window.Galaxy )?( Galaxy.lastAjax.url ):( undefined ),\n\t                    data    : ( window.Galaxy )?( Galaxy.lastAjax.data ):( undefined ),\n\t                    options : ( xhr )?( _.omit( options, 'xhr' ) ):( options ),\n\t                    xhr     : xhr,\n\t                    source  : ( _.isFunction( model.toJSON ) )?( model.toJSON() ):( model + '' ),\n\t                    user    : ( user instanceof USER.User )?( user.toJSON() ):( user + '' )\n\t                }\n\t            };\n\t\n\t        // add any extra details passed in\n\t        _.extend( parsed.details, details || {} );\n\t        // fancy xhr.header parsing (--> obj)\n\t        if( xhr &&  _.isFunction( xhr.getAllResponseHeaders ) ){\n\t            var responseHeaders = xhr.getAllResponseHeaders();\n\t            responseHeaders = _.compact( responseHeaders.split( '\\n' ) );\n\t            responseHeaders = _.map( responseHeaders, function( header ){\n\t                return header.split( ': ' );\n\t            });\n\t            parsed.details.xhr.responseHeaders = _.object( responseHeaders );\n\t        }\n\t        return parsed;\n\t    },\n\t\n\t    /** Modify an error message to be fancy and wear a monocle. */\n\t    _bePolite : function( msg ){\n\t        msg = msg || _l( 'An error occurred while getting updates from the server' );\n\t        return msg + '. ' + _l( 'Please contact a Galaxy administrator if the problem persists' ) + '.';\n\t    },\n\t\n\t    // ........................................................................ (error) messages\n\t    /** Display a message in the top of the panel.\n\t     *  @param {String} type    type of message ('done', 'error', 'warning')\n\t     *  @param {String} msg     the message to display\n\t     *  @param {Object or HTML} modal contents displayed when the user clicks 'details' in the message\n\t     */\n\t    displayMessage : function( type, msg, details ){\n\t        //precondition: msgContainer must have been rendered even if there's no model\n\t        var panel = this;\n\t        //this.log( 'displayMessage', type, msg, details );\n\t\n\t        this.scrollToTop();\n\t        var $msgContainer = this.$messages(),\n\t            $msg = $( '<div/>' ).addClass( type + 'message' ).html( msg );\n\t        //this.log( '  ', $msgContainer );\n\t\n\t        if( !_.isEmpty( details ) ){\n\t            var $detailsLink = $( '<a href=\"javascript:void(0)\">Details</a>' )\n\t                .click( function(){\n\t                    Galaxy.modal.show( panel._messageToModalOptions( type, msg, details ) );\n\t                    return false;\n\t                });\n\t            $msg.append( ' ', $detailsLink );\n\t        }\n\t        return $msgContainer.append( $msg );\n\t    },\n\t\n\t    /** convert msg and details into modal options usable by Galaxy.modal */\n\t    _messageToModalOptions : function( type, msg, details ){\n\t        // only error is fleshed out here\n\t        var panel = this,\n\t            options = { title: 'Details' };\n\t        if( _.isObject( details ) ){\n\t\n\t            details = _.omit( details, _.functions( details ) );\n\t            var text = JSON.stringify( details, null, '  ' ),\n\t                pre = $( '<pre/>' ).text( text );\n\t            options.body = $( '<div/>' ).append( pre );\n\t\n\t        } else {\n\t            options.body = $( '<div/>' ).html( details );\n\t        }\n\t\n\t        options.buttons = {\n\t            'Ok': function(){\n\t                Galaxy.modal.hide();\n\t                panel.clearMessages();\n\t            }\n\t            //TODO: if( type === 'error' ){ options.buttons[ 'Report this error' ] = function(){} }\n\t        };\n\t        return options;\n\t    },\n\t\n\t    /** Remove all messages from the panel. */\n\t    clearMessages : function( ev ){\n\t        var $target = !_.isUndefined( ev )?\n\t            $( ev.currentTarget )\n\t            :this.$messages().children( '[class$=\"message\"]' );\n\t        $target.fadeOut( this.fxSpeed, function(){\n\t            $( this ).remove();\n\t        });\n\t        return this;\n\t    },\n\t\n\t    // ........................................................................ scrolling\n\t    /** Scrolls the panel to show the content sub-view with the given hid.\n\t     *  @param {Integer} hid    the hid of item to scroll into view\n\t     *  @returns {HistoryPanel} the panel\n\t     */\n\t    scrollToHid : function( hid ){\n\t        return this.scrollToItem( _.first( this.viewsWhereModel({ hid: hid }) ) );\n\t    },\n\t\n\t    // ........................................................................ misc\n\t    /** Return a string rep of the history */\n\t    toString : function(){\n\t        return 'HistoryPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n\t    }\n\t});\n\t\n\t\n\t//------------------------------------------------------------------------------ TEMPLATES\n\tHistoryPanel.prototype.templates = (function(){\n\t\n\t    var controlsTemplate = BASE_MVC.wrapTemplate([\n\t        '<div class=\"controls\">',\n\t            '<div class=\"title\">',\n\t                '<div class=\"name\"><%= history.name %></div>',\n\t            '</div>',\n\t            '<div class=\"subtitle\"></div>',\n\t            '<div class=\"history-size\"><%= history.nice_size %></div>',\n\t\n\t            '<div class=\"actions\"></div>',\n\t\n\t            '<div class=\"messages\">',\n\t                '<% if( history.deleted && history.purged ){ %>',\n\t                    '<div class=\"deleted-msg warningmessagesmall\">',\n\t                        _l( 'This history has been purged and deleted' ),\n\t                    '</div>',\n\t                '<% } else if( history.deleted ){ %>',\n\t                    '<div class=\"deleted-msg warningmessagesmall\">',\n\t                        _l( 'This history has been deleted' ),\n\t                    '</div>',\n\t                '<% } else if( history.purged ){ %>',\n\t                    '<div class=\"deleted-msg warningmessagesmall\">',\n\t                        _l( 'This history has been purged' ),\n\t                    '</div>',\n\t                '<% } %>',\n\t\n\t                '<% if( history.message ){ %>',\n\t                    // should already be localized\n\t                    '<div class=\"<%= history.message.level || \"info\" %>messagesmall\">',\n\t                        '<%= history.message.text %>',\n\t                    '</div>',\n\t                '<% } %>',\n\t            '</div>',\n\t\n\t            // add tags and annotations\n\t            '<div class=\"tags-display\"></div>',\n\t            '<div class=\"annotation-display\"></div>',\n\t\n\t            '<div class=\"search\">',\n\t                '<div class=\"search-input\"></div>',\n\t            '</div>',\n\t\n\t            '<div class=\"list-actions\">',\n\t                '<div class=\"btn-group\">',\n\t                    '<button class=\"select-all btn btn-default\"',\n\t                            'data-mode=\"select\">', _l( 'All' ), '</button>',\n\t                    '<button class=\"deselect-all btn btn-default\"',\n\t                            'data-mode=\"select\">', _l( 'None' ), '</button>',\n\t                '</div>',\n\t                '<div class=\"list-action-menu btn-group\">',\n\t                '</div>',\n\t            '</div>',\n\t        '</div>'\n\t    ], 'history' );\n\t\n\t    return _.extend( _.clone( _super.prototype.templates ), {\n\t        controls : controlsTemplate\n\t    });\n\t}());\n\t\n\t\n\t//==============================================================================\n\t    return {\n\t        HistoryPanel: HistoryPanel\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(30),\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( PopupMenu, BASE_MVC, _l ){\n\t// ============================================================================\n\tvar menu = [\n\t    {\n\t        html    : _l( 'History Lists' ),\n\t        header  : true\n\t    },\n\t    {\n\t        html    : _l( 'Saved Histories' ),\n\t        href    : 'history/list'\n\t    },\n\t    {\n\t        html    : _l( 'Histories Shared with Me' ),\n\t        href    : 'history/list_shared'\n\t    },\n\t\n\t    {\n\t        html    : _l( 'Current History' ),\n\t        header  : true,\n\t        anon    : true\n\t    },\n\t    {\n\t        html    : _l( 'Create New' ),\n\t        func    : function() {\n\t            if( Galaxy && Galaxy.currHistoryPanel ){\n\t                Galaxy.currHistoryPanel.createNewHistory();\n\t            }\n\t        }\n\t    },\n\t    {\n\t        html    : _l( 'Copy History' ),\n\t        href    : 'history/copy'\n\t    },\n\t    {\n\t        html    : _l( 'Copy Datasets' ),\n\t        href    : 'dataset/copy_datasets'\n\t    },\n\t    {\n\t        html    : _l( 'Share or Publish' ),\n\t        href    : 'history/sharing'\n\t    },\n\t    {\n\t        html    : _l( 'Extract Workflow' ),\n\t        href    : 'workflow/build_from_current_history'\n\t    },\n\t    {\n\t        html    : _l( 'Dataset Security' ),\n\t        href    : 'root/history_set_default_permissions'\n\t    },\n\t    {\n\t        html    : _l( 'Resume Paused Jobs' ),\n\t        href    : 'history/resume_paused_jobs?current=True',\n\t        anon    : true\n\t    },\n\t    {\n\t        html    : _l( 'Collapse Expanded Datasets' ),\n\t        func    : function() {\n\t            if( Galaxy && Galaxy.currHistoryPanel ){\n\t                Galaxy.currHistoryPanel.collapseAll();\n\t            }\n\t        }\n\t    },\n\t    {\n\t        html    : _l( 'Unhide Hidden Datasets' ),\n\t        anon    : true,\n\t        func    : function() {\n\t            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really unhide all hidden datasets?' ) ) ){\n\t                var filtered = Galaxy.currHistoryPanel.model.contents.hidden();\n\t                //TODO: batch\n\t                filtered.ajaxQueue( Backbone.Model.prototype.save, { visible : true })\n\t                    .done( function(){\n\t                        Galaxy.currHistoryPanel.renderItems();\n\t                    })\n\t                    .fail( function(){\n\t                        alert( 'There was an error unhiding the datasets' );\n\t                        console.error( arguments );\n\t                    });\n\t            }\n\t        }\n\t    },\n\t    {\n\t        html    : _l( 'Delete Hidden Datasets' ),\n\t        anon    : true,\n\t        func    : function() {\n\t            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really delete all hidden datasets?' ) ) ){\n\t                var filtered = Galaxy.currHistoryPanel.model.contents.hidden();\n\t                //TODO: batch\n\t                // both delete *and* unhide them\n\t                filtered.ajaxQueue( Backbone.Model.prototype.save, { deleted : true, visible: true })\n\t                    .done( function(){\n\t                        Galaxy.currHistoryPanel.renderItems();\n\t                    })\n\t                    .fail( function(){\n\t                        alert( 'There was an error deleting the datasets' );\n\t                        console.error( arguments );\n\t                    });\n\t            }\n\t        }\n\t    },\n\t    {\n\t        html    : _l( 'Purge Deleted Datasets' ),\n\t        confirm : _l( 'Really delete all deleted datasets permanently? This cannot be undone.' ),\n\t        href    : 'history/purge_deleted_datasets',\n\t        purge   : true,\n\t        anon    : true\n\t    },\n\t    {\n\t        html    : _l( 'Show Structure' ),\n\t        href    : 'history/display_structured',\n\t        anon    : true\n\t    },\n\t    {\n\t        html    : _l( 'Export Citations' ),\n\t        href    : 'history/citations',\n\t        anon    : true\n\t    },\n\t    {\n\t        html    : _l( 'Export to File' ),\n\t        href    : 'history/export_archive?preview=True',\n\t        anon    : true\n\t    },\n\t    {\n\t        html    : _l( 'Delete' ),\n\t        confirm : _l( 'Really delete the current history?' ),\n\t        href    : 'history/delete_current'\n\t    },\n\t    {\n\t        html    : _l( 'Delete Permanently' ),\n\t        confirm : _l( 'Really delete the current history permanently? This cannot be undone.' ),\n\t        href    : 'history/delete_current?purge=True',\n\t        purge   : true,\n\t        anon    : true\n\t    },\n\t\n\t    {\n\t        html    : _l( 'Other Actions' ),\n\t        header  : true\n\t    },\n\t    {\n\t        html    : _l( 'Import from File' ),\n\t        href    : 'history/import_archive'\n\t    }\n\t];\n\t\n\tfunction buildMenu( isAnon, purgeAllowed, urlRoot ){\n\t    return _.clone( menu ).filter( function( menuOption ){\n\t        if( isAnon && !menuOption.anon ){\n\t            return false;\n\t        }\n\t        if( !purgeAllowed && menuOption.purge ){\n\t            return false;\n\t        }\n\t\n\t        //TODO:?? hard-coded galaxy_main\n\t        if( menuOption.href ){\n\t            menuOption.href = urlRoot + menuOption.href;\n\t            menuOption.target = 'galaxy_main';\n\t        }\n\t        if( menuOption.confirm ){\n\t            menuOption.func = function(){\n\t                if( confirm( menuOption.confirm ) ){\n\t                    galaxy_main.location = menuOption.href;\n\t                }\n\t            };\n\t        }\n\t        return true;\n\t    });\n\t}\n\t\n\tvar create = function( $button, options ){\n\t    options = options || {};\n\t    var isAnon = options.anonymous === undefined? true : options.anonymous,\n\t        purgeAllowed = options.purgeAllowed || false,\n\t        root = options.root || ( ( Galaxy && Galaxy.options )? Galaxy.options.root: '/' ),\n\t        menu = buildMenu( isAnon, purgeAllowed, root );\n\t    //console.debug( 'menu:', menu );\n\t    return new PopupMenu( $button, menu );\n\t};\n\t\n\t\n\t// ============================================================================\n\t    return create;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3)))\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/**\n\t    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(123), __webpack_require__(7), __webpack_require__(92),\n\t        __webpack_require__(29), __webpack_require__(43), __webpack_require__(81)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Deferred, Ui, Form, ToolTemplate, CitationModel, CitationView) {\n\t\n\t    // create form view\n\t    return Backbone.View.extend({\n\t        // initialize\n\t        initialize: function(options) {\n\t            this.options = Utils.merge(options, {});\n\t            this.setElement('<div/>');\n\t\n\t            // create deferred processing queue handler\n\t            // this handler reduces the number of requests to the api by filtering redundant requests\n\t            this.deferred = new Deferred();\n\t\n\t            // create form\n\t            if (options.inputs) {\n\t                this._buildForm(options);\n\t            } else {\n\t                var self = this;\n\t                this.deferred.execute(function(process) {\n\t                    self._buildModel(process, options, true);\n\t                });\n\t            }\n\t        },\n\t\n\t        /** Wait for deferred build processes before removal */\n\t        remove: function() {\n\t            var self = this;\n\t            this.$el.hide();\n\t            this.deferred.execute(function(){\n\t                Backbone.View.prototype.remove.call(self);\n\t                console.debug('tools-form-base::remove() - Destroy view.');\n\t            });\n\t        },\n\t\n\t        /** Build form */\n\t        _buildForm: function(options) {\n\t            // link this\n\t            var self = this;\n\t\n\t            // merge form options\n\t            this.options = Utils.merge(options, this.options);\n\t            this.options = Utils.merge({\n\t                icon            : 'fa-wrench',\n\t                title           : '<b>' + options.name + '</b> ' + options.description + ' (Galaxy Tool Version ' + options.version + ')',\n\t                operations      : this._operations(),\n\t                onchange        : function() {\n\t                    self.deferred.reset();\n\t                    self.deferred.execute(function(process) {\n\t                        self._updateModel(process);\n\t                    });\n\t                }\n\t            }, this.options);\n\t\n\t            // allow option customization\n\t            this.options.customize && this.options.customize( this.options );\n\t\n\t            // create form\n\t            this.form = new Form(this.options);\n\t\n\t            // create footer\n\t            this._footer();\n\t\n\t            // create element\n\t            this.$el.empty();\n\t            this.$el.append(this.form.$el);\n\t        },\n\t\n\t        /** Builds a new model through api call and recreates the entire form\n\t        */\n\t        _buildModel: function(process, options, hide_message) {\n\t            var self = this;\n\t            this.options.id = options.id;\n\t            this.options.version = options.version;\n\t\n\t            // build request url\n\t            var build_url = '';\n\t            var build_data = {};\n\t            if ( options.job_id ) {\n\t                build_url = Galaxy.root + 'api/jobs/' + options.job_id + '/build_for_rerun';\n\t            } else {\n\t                build_url = Galaxy.root + 'api/tools/' + options.id + '/build';\n\t                if ( Galaxy.params && Galaxy.params.tool_id == options.id ) {\n\t                    build_data = $.extend( {}, Galaxy.params );\n\t                    options.version && ( build_data[ 'tool_version' ] = options.version );\n\t                }\n\t            }\n\t\n\t            // get initial model\n\t            Utils.request({\n\t                type    : 'GET',\n\t                url     : build_url,\n\t                data    : build_data,\n\t                success : function(new_model) {\n\t                    self._buildForm(new_model['tool_model'] || new_model);\n\t                    !hide_message && self.form.message.update({\n\t                        status      : 'success',\n\t                        message     : 'Now you are using \\'' + self.options.name + '\\' version ' + self.options.version + '.',\n\t                        persistent  : false\n\t                    });\n\t                    console.debug('tools-form::initialize() - Initial tool model ready.');\n\t                    console.debug(new_model);\n\t                    process.resolve();\n\t\n\t                },\n\t                error   : function(response) {\n\t                    var error_message = ( response && response.err_msg ) || 'Uncaught error.';\n\t                    if ( self.$el.is(':empty') ) {\n\t                        self.$el.prepend((new Ui.Message({\n\t                            message     : error_message,\n\t                            status      : 'danger',\n\t                            persistent  : true,\n\t                            large       : true\n\t                        })).$el);\n\t                    } else {\n\t                        Galaxy.modal.show({\n\t                            title   : 'Tool request failed',\n\t                            body    : error_message,\n\t                            buttons : {\n\t                                'Close' : function() {\n\t                                    Galaxy.modal.hide();\n\t                                }\n\t                            }\n\t                        });\n\t                    }\n\t                    console.debug('tools-form::initialize() - Initial tool model request failed.');\n\t                    console.debug(response);\n\t                    process.reject();\n\t                }\n\t            });\n\t        },\n\t\n\t        /** Request a new model for an already created tool form and updates the form inputs\n\t        */\n\t        _updateModel: function(process) {\n\t            // model url for request\n\t            var model_url = this.options.update_url || Galaxy.root + 'api/tools/' + this.options.id + '/build';\n\t\n\t            // link this\n\t            var self = this;\n\t\n\t            // create the request dictionary\n\t            var form = this.form;\n\t\n\t            // create the request dictionary\n\t            var current_state = {\n\t                tool_id         : this.options.id,\n\t                tool_version    : this.options.version,\n\t                inputs          : $.extend(true, {}, self.form.data.create())\n\t            }\n\t\n\t            // set wait mode\n\t            form.wait(true);\n\t\n\t            // log tool state\n\t            console.debug('tools-form-base::_updateModel() - Sending current state (see below).');\n\t            console.debug(current_state);\n\t\n\t            // post job\n\t            Utils.request({\n\t                type    : 'POST',\n\t                url     : model_url,\n\t                data    : current_state,\n\t                success : function(new_model) {\n\t                    self.form.update(new_model['tool_model'] || new_model);\n\t                    self.options.update && self.options.update(new_model);\n\t                    form.wait(false);\n\t                    console.debug('tools-form-base::_updateModel() - Received new model (see below).');\n\t                    console.debug(new_model);\n\t                    process.resolve();\n\t                },\n\t                error   : function(response) {\n\t                    console.debug('tools-form-base::_updateModel() - Refresh request failed.');\n\t                    console.debug(response);\n\t                    process.reject();\n\t                }\n\t            });\n\t        },\n\t\n\t        // create tool operation menu\n\t        _operations: function() {\n\t            // link this\n\t            var self = this;\n\t            var options = this.options;\n\t\n\t            // button for version selection\n\t            var versions_button = new Ui.ButtonMenu({\n\t                icon    : 'fa-cubes',\n\t                title   : (!options.narrow && 'Versions') || null,\n\t                tooltip : 'Select another tool version'\n\t            });\n\t            if (!options.is_workflow && options.versions && options.versions.length > 1) {\n\t                for (var i in options.versions) {\n\t                    var version = options.versions[i];\n\t                    if (version != options.version) {\n\t                        versions_button.addMenu({\n\t                            title   : 'Switch to ' + version,\n\t                            version : version,\n\t                            icon    : 'fa-cube',\n\t                            onclick : function() {\n\t                                // here we update the tool version (some tools encode the version also in the id)\n\t                                var id = options.id.replace(options.version, this.version);\n\t                                var version = this.version;\n\t                                // queue model request\n\t                                self.deferred.reset();\n\t                                self.deferred.execute(function(process) {\n\t                                    self._buildModel(process, {id: id, version: version})\n\t                                });\n\t                            }\n\t                        });\n\t                    }\n\t                }\n\t            } else {\n\t                versions_button.$el.hide();\n\t            }\n\t\n\t            // button menu\n\t            var menu_button = new Ui.ButtonMenu({\n\t                icon    : 'fa-caret-down',\n\t                title   : (!options.narrow && 'Options') || null,\n\t                tooltip : 'View available options'\n\t            });\n\t\n\t            // configure button selection\n\t            if(options.biostar_url) {\n\t                // add question option\n\t                menu_button.addMenu({\n\t                    icon    : 'fa-question-circle',\n\t                    title   : 'Question?',\n\t                    tooltip : 'Ask a question about this tool (Biostar)',\n\t                    onclick : function() {\n\t                        window.open(options.biostar_url + '/p/new/post/');\n\t                    }\n\t                });\n\t\n\t                // create search button\n\t                menu_button.addMenu({\n\t                    icon    : 'fa-search',\n\t                    title   : 'Search',\n\t                    tooltip : 'Search help for this tool (Biostar)',\n\t                    onclick : function() {\n\t                        window.open(options.biostar_url + '/local/search/page/?q=' + options.name);\n\t                    }\n\t                });\n\t            };\n\t\n\t            // create share button\n\t            menu_button.addMenu({\n\t                icon    : 'fa-share',\n\t                title   : 'Share',\n\t                tooltip : 'Share this tool',\n\t                onclick : function() {\n\t                    prompt('Copy to clipboard: Ctrl+C, Enter', window.location.origin + Galaxy.root + 'root?tool_id=' + options.id);\n\t                }\n\t            });\n\t\n\t            // add admin operations\n\t            if (Galaxy.user && Galaxy.user.get('is_admin')) {\n\t                // create download button\n\t                menu_button.addMenu({\n\t                    icon    : 'fa-download',\n\t                    title   : 'Download',\n\t                    tooltip : 'Download this tool',\n\t                    onclick : function() {\n\t                        window.location.href = Galaxy.root + 'api/tools/' + options.id + '/download';\n\t                    }\n\t                });\n\t            }\n\t\n\t            // button for version selection\n\t            if (options.requirements && options.requirements.length > 0) {\n\t                menu_button.addMenu({\n\t                    icon    : 'fa-info-circle',\n\t                    title   : 'Requirements',\n\t                    tooltip : 'Display tool requirements',\n\t                    onclick : function() {\n\t                        if (!this.visible) {\n\t                            this.visible = true;\n\t                            self.form.message.update({\n\t                                persistent  : true,\n\t                                message     : ToolTemplate.requirements(options),\n\t                                status      : 'info'\n\t                            });\n\t                        } else {\n\t                            this.visible = false;\n\t                            self.form.message.update({\n\t                                message     : ''\n\t                            });\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t\n\t            // add toolshed url\n\t            if (options.sharable_url) {\n\t                menu_button.addMenu({\n\t                    icon    : 'fa-external-link',\n\t                    title   : 'See in Tool Shed',\n\t                    tooltip : 'Access the repository',\n\t                    onclick : function() {\n\t                        window.open(options.sharable_url);\n\t                    }\n\t                });\n\t            }\n\t\n\t            // return operations\n\t            return {\n\t                menu        : menu_button,\n\t                versions    : versions_button\n\t            }\n\t        },\n\t\n\t        // create footer\n\t        _footer: function() {\n\t            // link options\n\t            var options = this.options;\n\t\n\t            // append help\n\t            if (options.help != '') {\n\t                this.form.$el.append(ToolTemplate.help(options));\n\t            }\n\t\n\t            // create and append tool citations\n\t            if (options.citations) {\n\t                var $citations = $('<div/>');\n\t                var citations = new CitationModel.ToolCitationCollection();\n\t                citations.tool_id = options.id;\n\t                var citation_list_view = new CitationView.CitationListView({ el: $citations, collection: citations } );\n\t                citation_list_view.render();\n\t                citations.fetch();\n\t                this.form.$el.append($citations);\n\t            }\n\t        }\n\t    });\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t    This class handles job submissions and validations.\n\t*/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(29)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, ToolTemplate) {\n\treturn {\n\t    submit: function(form, options, callback) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // create job definition for submission to tools api\n\t        var job_def = {\n\t            tool_id         : options.id,\n\t            tool_version    : options.version,\n\t            inputs          : form.data.create()\n\t        }\n\t\n\t        // reset\n\t        form.trigger('reset');\n\t\n\t        // validate job definition\n\t        if (!this._validation(form, job_def)) {\n\t            console.debug('tools-jobs::submit - Submission canceled. Validation failed.');\n\t            callback && callback();\n\t            return;\n\t        }\n\t\n\t        // debug\n\t        console.debug(job_def);\n\t\n\t        // post job\n\t        Utils.request({\n\t            type    : 'POST',\n\t            url     : galaxy_config.root + 'api/tools',\n\t            data    : job_def,\n\t            success : function(response) {\n\t                callback && callback();\n\t                form.$el.replaceWith( ToolTemplate.success( response ) );\n\t                // begin checking the history for updates\n\t                self._refreshHdas();\n\t            },\n\t            error   : function(response) {\n\t                callback && callback();\n\t                console.debug(response);\n\t                if (response && response.err_data) {\n\t                    var error_messages = form.data.matchResponse(response.err_data);\n\t                    for (var input_id in error_messages) {\n\t                        form.highlight(input_id, error_messages[input_id]);\n\t                        break;\n\t                    }\n\t                } else {\n\t                    form.modal.show({\n\t                        title   : 'Job submission failed',\n\t                        body    : ( response && response.err_msg ) || ToolTemplate.error( job_def ),\n\t                        buttons : {\n\t                            'Close' : function() {\n\t                                form.modal.hide();\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        });\n\t    },\n\t\n\t    /** Validate job definition\n\t    */\n\t    _validation: function(form, job_def) {\n\t        // get input parameters\n\t        var job_inputs = job_def.inputs;\n\t\n\t        // counter for values declared in batch mode\n\t        var batch_n = -1;\n\t        var batch_src = null;\n\t\n\t        // validation\n\t        for (var job_input_id in job_inputs) {\n\t            // get current value\n\t            var input_value = job_inputs[job_input_id];\n\t\n\t            // collect input field properties\n\t            var input_id = form.data.match(job_input_id);\n\t            var input_field = form.field_list[input_id];\n\t            var input_def = form.input_list[input_id];\n\t\n\t            // check if objects where properly identified\n\t            if (!input_id || !input_def || !input_field) {\n\t                console.debug('tools-jobs::_validation - Retrieving input objects failed.');\n\t                continue;\n\t            }\n\t\n\t            // validate non-optional fields\n\t            if (!input_def.optional && input_value == null) {\n\t                form.highlight(input_id);\n\t                return false;\n\t            }\n\t\n\t            // check if input field is in batch mode\n\t            if (input_value && input_value.batch) {\n\t                // get values\n\t                var n = input_value.values.length;\n\t\n\t                // get source\n\t                var src = null;\n\t                if (n > 0) {\n\t                    src = input_value.values[0] && input_value.values[0].src;\n\t                }\n\t\n\t                // check source type\n\t                if (src) {\n\t                    if (batch_src === null) {\n\t                        batch_src = src;\n\t                    } else {\n\t                        if (batch_src !== src) {\n\t                            form.highlight(input_id, 'Please select either dataset or dataset list fields for all batch mode fields.');\n\t                            return false;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                // check number of inputs\n\t                if (batch_n === -1) {\n\t                    batch_n = n;\n\t                } else {\n\t                    if (batch_n !== n) {\n\t                        form.highlight(input_id, 'Please make sure that you select the same number of inputs for all batch mode fields. This field contains <b>' + n + '</b> selection(s) while a previous field contains <b>' + batch_n + '</b>.');\n\t                        return false;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        // return validation result\n\t        return true;\n\t    },\n\t\n\t    /** Refreshes the history panel\n\t    */\n\t    _refreshHdas: function(detailIds, options) {\n\t        if (parent.Galaxy && parent.Galaxy.currHistoryPanel) {\n\t            parent.Galaxy.currHistoryPanel.refreshContents(detailIds, options);\n\t        }\n\t    }\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/** Renders the color picker used e.g. in the tool form **/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function( Utils ) {\n\t    return Backbone.View.extend({\n\t        colors: {\n\t            standard: ['c00000','ff0000','ffc000','ffff00','92d050','00b050','00b0f0','0070c0','002060','7030a0'],\n\t            base    : ['ffffff','000000','eeece1','1f497d','4f81bd','c0504d','9bbb59','8064a2','4bacc6','f79646'],\n\t            theme   :[['f2f2f2','7f7f7f','ddd9c3','c6d9f0','dbe5f1','f2dcdb','ebf1dd','e5e0ec','dbeef3','fdeada'],\n\t                      ['d8d8d8','595959','c4bd97','8db3e2','b8cce4','e5b9b7','d7e3bc','ccc1d9','b7dde8','fbd5b5'],\n\t                      ['bfbfbf','3f3f3f','938953','548dd4','95b3d7','d99694','c3d69b','b2a2c7','92cddc','fac08f'],\n\t                      ['a5a5a5','262626','494429','17365d','366092','953734','76923c','5f497a','31859b','e36c09'],\n\t                      ['7f7f7e','0c0c0c','1d1b10','0f243e','244061','632423','4f6128','3f3151','205867','974806']]\n\t        },\n\t        initialize : function( options ) {\n\t            this.options = Utils.merge( options, {} );\n\t            this.setElement( this._template() );\n\t\n\t            // link components\n\t            this.$panel = this.$( '.ui-color-picker-panel' );\n\t            this.$view = this.$( '.ui-color-picker-view' );\n\t            this.$value = this.$( '.ui-color-picker-value' );\n\t            this.$header = this.$( '.ui-color-picker-header' );\n\t\n\t            // build panel\n\t            this._build();\n\t\n\t            // hide panel on start up\n\t            this.visible = false;\n\t\n\t            // set initial value\n\t            this.value( this.options.value );\n\t\n\t            // link boxes\n\t            this.$boxes = this.$( '.ui-color-picker-box' );\n\t\n\t            // add event handler\n\t            var self = this;\n\t            this.$boxes.on( 'click', function() {\n\t                self.value( $( this ).css( 'background-color' ) );\n\t                self.$header.trigger( 'click' );\n\t            } );\n\t            this.$header.on( 'click', function() {\n\t                self.visible = !self.visible;\n\t                if ( self.visible ) {\n\t                    self.$view.fadeIn( 'fast' );\n\t                } else {\n\t                    self.$view.fadeOut( 'fast' );\n\t                }\n\t            } );\n\t        },\n\t\n\t        // value\n\t        value : function ( new_val ) {\n\t            if ( new_val !== undefined && new_val !== null ) {\n\t                // update color value\n\t                this.$value.css( 'background-color', new_val );\n\t            \n\t                // check selected color in panel\n\t                this.$( '.ui-color-picker-box' ).empty();\n\t                this.$( this._getValue() ).html( this._templateCheck() );\n\t\n\t                // trigger custom event\n\t                this.options.onchange && this.options.onchange( new_val );\n\t            }\n\t\n\t            // return current value\n\t            return this._getValue();\n\t        },\n\t\n\t        // get value from dom\n\t        _getValue: function() {\n\t            var rgb = this.$value.css( 'background-color' );\n\t            rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n\t            if ( rgb ) {\n\t                function hex( x ) {\n\t                    return ( '0' + parseInt( x ).toString( 16 ) ).slice( -2 );\n\t                }\n\t                return '#' + hex( rgb[ 1] ) + hex( rgb[ 2 ] ) + hex( rgb[ 3 ] );\n\t            } else {\n\t                return null;\n\t            }\n\t        },\n\t\n\t        // build panel\n\t        _build: function() {\n\t            var $content = this._content({\n\t                label       : 'Theme Colors',\n\t                colors      : this.colors.base,\n\t                padding     : 10\n\t            });\n\t            for ( var i in this.colors.theme ) {\n\t                var line_def = {};\n\t                if ( i == 0 ) {\n\t                    line_def[ 'bottom' ] = true;\n\t                } else {\n\t                    if ( i != this.colors.theme.length - 1 ) {\n\t                        line_def[ 'top' ]     = true;\n\t                        line_def[ 'bottom' ]  = true;\n\t                    } else {\n\t                        line_def[ 'top' ]     = true;\n\t                        line_def[ 'padding' ] = 5;\n\t                    }\n\t                }\n\t                line_def[ 'colors' ] = this.colors.theme[ i ];\n\t                this._content( line_def );\n\t            }\n\t            this._content({\n\t                label       : 'Standard Colors',\n\t                colors      : this.colors.standard,\n\t                padding     : 5\n\t            });\n\t        },\n\t\n\t        // create content\n\t        _content: function( options ) {\n\t            // get parameters\n\t            var label       = options.label;\n\t            var colors      = options.colors;\n\t            var padding     = options.padding;\n\t            var top         = options.top;\n\t            var bottom      = options.bottom;\n\t\n\t            // create lines\n\t            var $content = $( this._templateContent() );\n\t\n\t            // set label\n\t            var $label = $content.find( '.label' );\n\t            if ( options.label ) {\n\t                $label.html( options.label );\n\t            } else {\n\t                $label.hide();\n\t            }\n\t\n\t            // build line\n\t            var $line = $content.find( '.line' );\n\t            this.$panel.append( $content );\n\t            for ( var i in colors ) {\n\t                var $box = $( this._templateBox( colors[ i ] ) );\n\t                if ( top ) {\n\t                    $box.css( 'border-top', 'none' );\n\t                    $box.css( 'border-top-left-radius', '0px' );\n\t                    $box.css( 'border-top-right-radius', '0px' );\n\t                }\n\t                if ( bottom ) {\n\t                    $box.css( 'border-bottom', 'none' );\n\t                    $box.css( 'border-bottom-left-radius', '0px' );\n\t                    $box.css( 'border-bottom-right-radius', '0px' );\n\t                }\n\t                $line.append( $box );\n\t            }\n\t            if (padding) {\n\t                $line.css( 'padding-bottom', padding );\n\t            }\n\t            return $content;\n\t        },\n\t\n\t        // check icon\n\t        _templateCheck: function() {\n\t            return  '<div class=\"ui-color-picker-check fa fa-check\"/>';\n\t        },\n\t\n\t        // content template\n\t        _templateContent: function() {\n\t            return  '<div class=\"ui-color-picker-content\">' +\n\t                        '<div class=\"label\"/>' +\n\t                        '<div class=\"line\"/>' +\n\t                    '</div>';\n\t        },\n\t\n\t        // box template\n\t        _templateBox: function( color ) {\n\t            return '<div id=\"' + color + '\" class=\"ui-color-picker-box\" style=\"background-color: #' + color + ';\"/>';\n\t        },\n\t\n\t        // template\n\t        _template: function() {\n\t            return  '<div class=\"ui-color-picker\">' +\n\t                        '<div class=\"ui-color-picker-header\">' +\n\t                            '<div class=\"ui-color-picker-value\"/>' +\n\t                            '<div class=\"ui-color-picker-label\">Select a color</div>' +\n\t                        '</div>' +\n\t                        '<div class=\"ui-color-picker-view ui-input\">' +\n\t                            '<div class=\"ui-color-picker-panel\"/>' +\n\t                        '</div>'\n\t                    '</div>';\n\t        }\n\t    });\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(56)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Options) {\n\t\n\t/**\n\t *  This class creates/wraps a drill down element.\n\t */\n\tvar View = Options.BaseIcons.extend({\n\t    // initialize\n\t    initialize: function(options) {\n\t        options.type     = options.display || 'checkbox';\n\t        options.multiple = (options.display == 'checkbox');\n\t        Options.BaseIcons.prototype.initialize.call(this, options);\n\t        this.initial = true;\n\t    },\n\t\n\t    // set expand states for initial value\n\t    value: function (new_val) {\n\t        var val = Options.BaseIcons.prototype.value.call(this, new_val);\n\t        if (this.initial && val !== null && this.header_index) {\n\t            this.initial = false;\n\t            var values = val;\n\t            if (!$.isArray(values)) {\n\t                values = [values];\n\t            }\n\t            for (var i in values) {\n\t                var list = this.header_index[values[i]];\n\t                for (var j in list) {\n\t                    this._setState(list[j], true);\n\t                }\n\t            }\n\t        }\n\t        return val;\n\t    },\n\t\n\t    /** Expand/collapse a sub group\n\t    */\n\t    _setState: function (header_id, is_expanded) {\n\t        var $button = this.$('.button-' + header_id);\n\t        var $subgroup = this.$('.subgroup-' + header_id);\n\t        $button.data('is_expanded', is_expanded);\n\t        if (is_expanded) {\n\t            $subgroup.fadeIn('fast')\n\t            $button.removeClass('toggle-expand');\n\t            $button.addClass('toggle');\n\t        } else {\n\t            $subgroup.hide();\n\t            $button.removeClass('toggle');\n\t            $button.addClass('toggle-expand');\n\t        }\n\t    },\n\t\n\t    /** Template to create options tree\n\t    */\n\t    _templateOptions: function(options) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // link data\n\t        this.header_index = {};\n\t        \n\t        // attach event handler\n\t        function attach($el, header_id) {\n\t            var $button = $el.find('.button-' + header_id);\n\t            $button.on('click', function() {\n\t                self._setState(header_id, !$button.data('is_expanded'));\n\t            });\n\t        }\n\t\n\t        // recursive function which iterates through options\n\t        function iterate ($tmpl, options, header) {\n\t            header = header || [];\n\t            for (i in options) {\n\t                // current option level in hierarchy\n\t                var level = options[i];\n\t\n\t                // check for options\n\t                var has_options = level.options.length > 0;\n\t\n\t                // copy current header list\n\t                var new_header = header.slice(0);\n\t\n\t                // keep track of header list\n\t                self.header_index[level.value] = new_header.slice(0);\n\t\n\t                // build template\n\t                var $group = $('<div/>');\n\t                if (has_options) {\n\t                    // create button and subgroup\n\t                    var header_id = Utils.uid();\n\t                    var $button = $('<span class=\"button-' + header_id + ' ui-drilldown-button form-toggle icon-button toggle-expand\"/>');\n\t                    var $subgroup = $('<div class=\"subgroup-' + header_id + '\" style=\"display: none; margin-left: 25px;\"/>');\n\t\n\t                    // keep track of button and subgroup\n\t                    new_header.push(header_id);\n\t\n\t                    // create expandable header section\n\t                    var $buttongroup = $('<div/>');\n\t                    $buttongroup.append($button);\n\t                    $buttongroup.append(self._templateOption({\n\t                        label: level.name,\n\t                        value: level.value\n\t                    }));\n\t                    $group.append($buttongroup);\n\t                    iterate($subgroup, level.options, new_header);\n\t                    $group.append($subgroup);\n\t\n\t                    // attach expand/collapse events\n\t                    attach($group, header_id);\n\t                } else {\n\t                    // append child options\n\t                    $group.append(self._templateOption({\n\t                        label: level.name,\n\t                        value: level.value\n\t                    }));\n\t                }\n\t                $tmpl.append($group);\n\t            }\n\t        }\n\t\n\t        // iterate through options and create dom\n\t        var $tmpl = $('<div/>');\n\t        iterate($tmpl, options);\n\t\n\t        // return template\n\t        return $tmpl;\n\t    },\n\t\n\t    /** Template for drill down view\n\t    */\n\t    _template: function(options) {\n\t        return '<div class=\"ui-options-list drilldown-container\" id=\"' + options.id + '\"/>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View: View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/**\n\t *  This class creates/wraps a default html select field as backbone class.\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(31)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Buttons) {\n\tvar View = Backbone.View.extend({\n\t    // options\n\t    optionsDefault: {\n\t        id          : Utils.uid(),\n\t        cls         : 'ui-select',\n\t        error_text  : 'No options available',\n\t        empty_text  : 'Nothing selected',\n\t        visible     : true,\n\t        wait        : false,\n\t        multiple    : false,\n\t        searchable  : true,\n\t        optional    : false\n\t    },\n\t\n\t    // initialize\n\t    initialize: function(options) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // configure options\n\t        this.options = Utils.merge(options, this.optionsDefault);\n\t\n\t        // create new element\n\t        this.setElement(this._template(this.options));\n\t\n\t        // link elements\n\t        this.$select = this.$el.find('.select');\n\t        this.$icon = this.$el.find('.icon');\n\t        this.$button = this.$el.find('.button');\n\t\n\t        // multiple select fields have an additional button and other custom properties\n\t        if (this.options.multiple) {\n\t            // create select all button\n\t            if (this.options.searchable) {\n\t                this.all_button = new Buttons.ButtonCheck({\n\t                    onclick: function() {\n\t                        var new_value = [];\n\t                        if (self.all_button.value() !== 0) {\n\t                            new_value = self._availableOptions();\n\t                        }\n\t                        self.value(new_value);\n\t                        self.trigger('change');\n\t                    }\n\t                });\n\t                this.$el.prepend(this.all_button.$el);\n\t            }\n\t            // customize style and content\n\t            this.$el.addClass('ui-select-multiple');\n\t            this.$select.prop('multiple', true);\n\t            this.$button.remove();\n\t        }\n\t\n\t        // update initial options\n\t        this.update(this.options.data);\n\t\n\t        // set initial value\n\t        if (this.options.value !== undefined) {\n\t            this.value(this.options.value);\n\t        }\n\t\n\t        // show/hide\n\t        if (!this.options.visible) {\n\t            this.hide();\n\t        }\n\t\n\t        // wait\n\t        if (this.options.wait) {\n\t            this.wait();\n\t        } else {\n\t            this.show();\n\t        }\n\t\n\t        // add change event. fires only on user activity\n\t        this.$select.on('change', function() {\n\t            self.trigger('change');\n\t        });\n\t\n\t        // add change event. fires on trigger\n\t        this.on('change', function() {\n\t            self.options.onchange && self.options.onchange(this.value());\n\t        });\n\t    },\n\t\n\t    /** Return/Set current selection\n\t    */\n\t    value: function (new_value) {\n\t        // set new value\n\t        if (new_value !== undefined) {\n\t            if (new_value === null) {\n\t                new_value = '__null__';\n\t            }\n\t            if (this.exists(new_value) || this.options.multiple) {\n\t                this.$select.val(new_value);\n\t                if (this.$select.select2) {\n\t                    this.$select.select2('val', new_value);\n\t                }\n\t            }\n\t        }\n\t        // get current value\n\t        var current = this._getValue();\n\t        if (this.all_button) {\n\t            this.all_button.value($.isArray(current) && current.length || 0, this._size());\n\t        }\n\t        return current;\n\t    },\n\t\n\t    /** Return the first select option\n\t    */\n\t    first: function() {\n\t        var options = this.$select.find('option').first();\n\t        if (options.length > 0) {\n\t            return options.val();\n\t        } else {\n\t            return null;\n\t        }\n\t    },\n\t\n\t    /** Return the label/text of the current selection\n\t    */\n\t    text: function () {\n\t        return this.$select.find('option:selected').text();\n\t    },\n\t\n\t    /** Show the select field\n\t    */\n\t    show: function() {\n\t        this.unwait();\n\t        this.$select.show();\n\t        this.$el.show();\n\t    },\n\t\n\t    /** Hide the select field\n\t    */\n\t    hide: function() {\n\t        this.$el.hide();\n\t    },\n\t\n\t    /** Show a spinner indicating that the select options are currently loaded\n\t    */\n\t    wait: function() {\n\t        this.$icon.removeClass();\n\t        this.$icon.addClass('fa fa-spinner fa-spin');\n\t    },\n\t\n\t    /** Hide spinner indicating that the request has been completed\n\t    */\n\t    unwait: function() {\n\t        this.$icon.removeClass();\n\t        this.$icon.addClass('fa fa-caret-down');\n\t    },\n\t\n\t    /** Returns true if the field is disabled\n\t    */\n\t    disabled: function() {\n\t        return this.$select.is(':disabled');\n\t    },\n\t\n\t    /** Enable the select field\n\t    */\n\t    enable: function() {\n\t        this.$select.prop('disabled', false);\n\t    },\n\t\n\t    /** Disable the select field\n\t    */\n\t    disable: function() {\n\t        this.$select.prop('disabled', true);\n\t    },\n\t\n\t    /** Update all available options at once\n\t    */\n\t    update: function(options) {\n\t        // backup current value\n\t        var current = this._getValue();\n\t\n\t        // remove all options\n\t        this.$select.find('option').remove();\n\t\n\t        // add optional field\n\t        if (!this.options.multiple && this.options.optional) {\n\t            this.$select.append(this._templateOption({value : '__null__', label : this.options.empty_text}));\n\t        }\n\t\n\t        // add new options\n\t        for (var key in options) {\n\t            this.$select.append(this._templateOption(options[key]));\n\t        }\n\t\n\t        // count remaining entries\n\t        if (this._size() == 0) {\n\t            // disable select field\n\t            this.disable();\n\t\n\t            // create placeholder\n\t            this.$select.append(this._templateOption({value : '__null__', label : this.options.error_text}));\n\t        } else {\n\t            // enable select field\n\t            this.enable();\n\t        }\n\t\n\t        // update to searchable field (in this case select2)\n\t        if (this.options.searchable) {\n\t            this.$select.select2('destroy');\n\t            this.$select.select2();\n\t            this.$( '.select2-container .select2-search input' ).off( 'blur' );\n\t        }\n\t\n\t        // set previous value\n\t        this.value(current);\n\t\n\t        // check if any value was set\n\t        if (this._getValue() === null && !(this.options.multiple && this.options.optional)) {\n\t            this.value(this.first());\n\t        }\n\t    },\n\t\n\t    /** Set the custom onchange callback function\n\t    */\n\t    setOnChange: function(callback) {\n\t        this.options.onchange = callback;\n\t    },\n\t\n\t    /** Check if a value is an existing option\n\t    */\n\t    exists: function(value) {\n\t        return this.$select.find('option[value=\"' + value + '\"]').length > 0;\n\t    },\n\t\n\t    /** Get current value from dom\n\t    */\n\t    _getValue: function() {\n\t        var val = this.$select.val();\n\t        if (!Utils.validate(val)) {\n\t            return null;\n\t        }\n\t        return val;\n\t    },\n\t\n\t    /** Returns all currently available options\n\t    */\n\t    _availableOptions: function() {\n\t        var available = [];\n\t        this.$select.find('option').each(function(i, e){\n\t            available.push($(e).attr('value'));\n\t        });\n\t        return available;\n\t    },\n\t\n\t    /** Number of available options\n\t    */\n\t    _size: function() {\n\t        return this.$select.find('option').length;\n\t    },\n\t\n\t    /** Template for select options\n\t    */\n\t    _templateOption: function(options) {\n\t        return '<option value=\"' + options.value + '\">' + options.label + '</option>';\n\t    },\n\t\n\t    /** Template for select view\n\t    */\n\t    _template: function(options) {\n\t        return  '<div id=\"' + options.id + '\" class=\"' + options.cls + '\">' +\n\t                    '<select id=\"' + options.id + '_select\" class=\"select\"/>' +\n\t                    '<div class=\"button\">' +\n\t                        '<i class=\"icon\"/>' +\n\t                    '</div>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View: View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(55)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, List) {\n\t\n\t/**\n\t * FTP file selector\n\t */\n\tvar View = Backbone.View.extend({\n\t    // initialize\n\t    initialize : function(options) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // create ui-list view to keep track of selected ftp files\n\t        this.ftpfile_list = new List.View({\n\t            name        : 'file',\n\t            optional    : options.optional,\n\t            multiple    : options.multiple,\n\t            onchange    : function() {\n\t                options.onchange && options.onchange(self.value());\n\t            }\n\t        });\n\t\n\t        // create elements\n\t        this.setElement(this.ftpfile_list.$el);\n\t\n\t        // initial fetch of ftps\n\t        Utils.get({\n\t            url     : galaxy_config.root + 'api/remote_files',\n\t            success : function(response) {\n\t                var data = [];\n\t                for (var i in response) {\n\t                    data.push({\n\t                        value   : response[i]['path'],\n\t                        label   : response[i]['path']\n\t                    });\n\t                }\n\t                self.ftpfile_list.update(data);\n\t            }\n\t        });\n\t    },\n\t\n\t    /** Return/Set currently selected ftp datasets */\n\t    value: function(val) {\n\t        return this.ftpfile_list.value(val);\n\t    }\n\t});\n\t\n\treturn {\n\t    View: View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(7), __webpack_require__(32), __webpack_require__(55)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Ui, Table, List) {\n\t\n\t// collection of libraries\n\tvar Libraries = Backbone.Collection.extend({\n\t    url: galaxy_config.root + 'api/libraries?deleted=false'\n\t});\n\t\n\t// collection of dataset\n\tvar LibraryDatasets = Backbone.Collection.extend({\n\t    initialize: function() {\n\t        var self = this;\n\t        this.config = new Backbone.Model({ library_id: null });\n\t        this.config.on('change', function() {\n\t            self.fetch({ reset: true });\n\t        });\n\t    },\n\t    url: function() {\n\t        return galaxy_config.root + 'api/libraries/' + this.config.get('library_id') + '/contents'\n\t    }\n\t});\n\t\n\t// hda/hdca content selector ui element\n\tvar View = Backbone.View.extend({\n\t    // initialize\n\t    initialize : function(options) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // collections\n\t        this.libraries  = new Libraries();\n\t        this.datasets   = new LibraryDatasets();\n\t\n\t        // link app and options\n\t        this.options = options;\n\t\n\t        // select field for the library\n\t        // TODO: Remove this once the library API supports searching for library datasets\n\t        this.library_select = new Ui.Select.View({\n\t            onchange    : function(value) {\n\t                self.datasets.config.set('library_id', value);\n\t            }\n\t        });\n\t\n\t        // create ui-list view to keep track of selected data libraries\n\t        this.dataset_list = new List.View({\n\t            name        : 'dataset',\n\t            optional    : options.optional,\n\t            multiple    : options.multiple,\n\t            onchange    : function() {\n\t                self.trigger('change');\n\t            }\n\t        });\n\t\n\t        // add reset handler for fetched libraries\n\t        this.libraries.on('reset', function() {\n\t            var data = [];\n\t            self.libraries.each(function(model) {\n\t                data.push({\n\t                    value   : model.id,\n\t                    label   : model.get('name')\n\t                });\n\t            });\n\t            self.library_select.update(data);\n\t        });\n\t\n\t        // add reset handler for fetched library datasets\n\t        this.datasets.on('reset', function() {\n\t            var data = [];\n\t            var library_current = self.library_select.text();\n\t            if (library_current !== null) {\n\t                self.datasets.each(function(model) {\n\t                    if (model.get('type') === 'file') {\n\t                        data.push({\n\t                            value   : model.id,\n\t                            label   : model.get('name')\n\t                        });\n\t                    }\n\t                });\n\t            }\n\t            self.dataset_list.update(data);\n\t        });\n\t\n\t        // add change event. fires on trigger\n\t        this.on('change', function() {\n\t            options.onchange && options.onchange(self.value());\n\t        });\n\t\n\t        // create elements\n\t        this.setElement(this._template());\n\t        this.$('.library-select').append(this.library_select.$el);\n\t        this.$el.append(this.dataset_list.$el);\n\t\n\t        // initial fetch of libraries\n\t        this.libraries.fetch({\n\t            reset: true,\n\t            success: function() {\n\t                self.library_select.trigger('change');\n\t                if (self.options.value !== undefined) {\n\t                    self.value(self.options.value);\n\t                }\n\t            }\n\t        });\n\t    },\n\t\n\t    /** Return/Set currently selected library datasets */\n\t    value: function(val) {\n\t        return this.dataset_list.value(val);\n\t    },\n\t\n\t    /** Template */\n\t    _template: function() {\n\t        return  '<div class=\"ui-select-library\">' +\n\t                    '<div class=\"library ui-margin-bottom\">' +\n\t                        '<span class=\"library-title\">Select Library</span>' +\n\t                        '<span class=\"library-select\"/>' +\n\t                    '</div>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View: View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils) {\n\t\n\t// plugin\n\tvar View = Backbone.View.extend({\n\t    // options\n\t    optionsDefault: {\n\t        id      : Utils.uid(),\n\t        min     : null,\n\t        max     : null,\n\t        step    : null,\n\t        precise : false,\n\t        split   : 10000\n\t    },\n\t\n\t    // initialize\n\t    initialize : function(options) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // configure options\n\t        this.options = Utils.merge(options, this.optionsDefault);\n\t\n\t        // create new element\n\t        this.setElement(this._template(this.options));\n\t\n\t        // determine wether to use the slider\n\t        this.useslider = this.options.max !== null && this.options.min !== null && this.options.max > this.options.min;\n\t\n\t        // set default step size\n\t        if (this.options.step === null) {\n\t            this.options.step = 1;\n\t            if (this.options.precise && this.useslider) {\n\t                this.options.step = (this.options.max - this.options.min) / this.options.split;\n\t            }\n\t        }\n\t\n\t        // create slider if min and max are defined properly\n\t        if (this.useslider) {\n\t            this.$slider = this.$el.find('#slider');\n\t            this.$slider.slider(this.options);\n\t            this.$slider.on('slide', function (event, ui) {\n\t                self.value(ui.value);\n\t            });\n\t        } else {\n\t            this.$el.find('.ui-form-slider-text').css('width', '100%');\n\t        }\n\t\n\t        // link text input field\n\t        this.$text = this.$el.find('#text');\n\t\n\t        // set initial value\n\t        if (this.options.value !== undefined) {\n\t            this.value(this.options.value);\n\t        }\n\t\n\t        // add text field event\n\t        this.$text.on('change', function () {\n\t            self.value($(this).val());\n\t        });\n\t\n\t        // add text field event\n\t        var pressed = [];\n\t        this.$text.on('keyup', function(e) {\n\t            pressed[e.which] = false;\n\t            self.options.onchange && self.options.onchange($(this).val());\n\t        });\n\t        this.$text.on('keydown', function (e) {\n\t            var v = e.which;\n\t            pressed[v] = true;\n\t            if (!(v == 8 || v == 9 || v == 13 || v == 37 || v == 39 || (v >= 48 && v <= 57) || (v >= 96 && v <= 105)\n\t                || ((v == 190 || v == 110) && $(this).val().indexOf('.') == -1 && self.options.precise)\n\t                || ((v == 189 || v == 109) && $(this).val().indexOf('-') == -1)\n\t                || pressed[91] || pressed[17])) {\n\t                event.preventDefault();\n\t            }\n\t        });\n\t    },\n\t\n\t    // value\n\t    value : function (new_val) {\n\t        if (new_val !== undefined) {\n\t            if (new_val !== null && new_val !== '') {\n\t                // check if its a number\n\t                if (isNaN(new_val)) {\n\t                    new_val = 0;\n\t                }\n\t\n\t                // apply limit\n\t                if (this.options.max !== null) {\n\t                    new_val = Math.min(new_val, this.options.max);\n\t                }\n\t                if (this.options.min !== null) {\n\t                    new_val = Math.max(new_val, this.options.min);\n\t                }\n\t            }\n\t\n\t            // set values\n\t            this.$slider && this.$slider.slider('value', new_val);\n\t            this.$text.val(new_val);\n\t\n\t            // trigger on change event\n\t            this.options.onchange && this.options.onchange(new_val);\n\t        }\n\t\n\t        // return current value\n\t        return this.$text.val();\n\t    },\n\t\n\t    // element\n\t    _template: function(options) {\n\t        return  '<div id=\"' + options.id + '\" class=\"ui-form-slider\">' +\n\t                    '<input id=\"text\" type=\"text\" class=\"ui-form-slider-text\"/>' +\n\t                    '<div id=\"slider\" class=\"ui-form-slider-element\"/>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View : View\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4),\n\t        __webpack_require__(59),\n\t        __webpack_require__(58),\n\t        __webpack_require__(16),\n\t        __webpack_require__(7),\n\t        __webpack_require__(17),\n\t        __webpack_require__(66)], __WEBPACK_AMD_DEFINE_RESULT__ = function(   Utils,\n\t                    UploadSettings,\n\t                    UploadFtp,\n\t                    Popover,\n\t                    Ui,\n\t                    Select\n\t                ) {\n\t\n\t// renders the composite upload row view\n\treturn Backbone.View.extend({\n\t    // states\n\t    status_classes : {\n\t        init    : 'upload-mode fa fa-exclamation text-primary',\n\t        ready   : 'upload-mode fa fa-check text-success',\n\t        running : 'upload-mode fa fa-spinner fa-spin',\n\t        success : 'upload-mode fa fa-check',\n\t        error   : 'upload-mode fa fa-exclamation-triangle'\n\t    },\n\t\n\t    // initialize\n\t    initialize: function(app, options) {\n\t        // link app\n\t        this.app = app;\n\t\n\t        // link this\n\t        var self = this;\n\t\n\t        // create model\n\t        this.model = options.model;\n\t\n\t        // add upload row\n\t        this.setElement(this._template(options.model));\n\t\n\t        // build upload functions\n\t        this.uploadinput = this.$el.uploadinput({\n\t            ondragover: function() {\n\t                if (self.model.get('enabled')) {\n\t                    self.$el.addClass('warning');\n\t                }\n\t            },\n\t            ondragleave: function() {\n\t                self.$el.removeClass('warning');\n\t            },\n\t            onchange: function(files) {\n\t                if (self.model.get('status') != 'running' && files && files.length > 0) {\n\t                    self.model.reset({\n\t                        'file_data': files[0],\n\t                        'file_name': files[0].name,\n\t                        'file_size': files[0].size,\n\t                        'file_mode': files[0].mode || 'local'\n\t                    });\n\t                    self._refreshReady();\n\t                }\n\t            }\n\t        });\n\t\n\t        // source selection popup\n\t        this.button_menu = new Ui.ButtonMenu({\n\t            icon        : 'fa-caret-down',\n\t            title       : 'Select',\n\t            pull        : 'left'\n\t        });\n\t        this.$('#source').append(this.button_menu.$el);\n\t        this.button_menu.addMenu({\n\t            icon        : 'fa-laptop',\n\t            title       : 'Choose local file',\n\t            onclick     : function() {\n\t                self.uploadinput.dialog();\n\t            }\n\t        });\n\t        if (this.app.ftp_upload_site) {\n\t            this.button_menu.addMenu({\n\t                icon        : 'fa-folder-open-o',\n\t                title       : 'Choose FTP file',\n\t                onclick     : function() {\n\t                    self._showFtp();\n\t                }\n\t            });\n\t        }\n\t        this.button_menu.addMenu({\n\t            icon        : 'fa-edit',\n\t            title       : 'Paste/Fetch data',\n\t            onclick     : function() {\n\t                self.model.reset({\n\t                    'file_mode': 'new',\n\t                    'file_name': 'New File'\n\t                });\n\t            }\n\t        });\n\t\n\t        // add ftp file viewer\n\t        this.ftp = new Popover.View({\n\t            title       : 'Choose FTP file:',\n\t            container   : this.$('#source').find('.ui-button-menu'),\n\t            placement   : 'right'\n\t        });\n\t\n\t        // append popup to settings icon\n\t        this.settings = new Popover.View({\n\t            title       : 'Upload configuration',\n\t            container   : this.$('#settings'),\n\t            placement   : 'bottom'\n\t        });\n\t\n\t        //\n\t        // ui events\n\t        //\n\t\n\t        // handle text editing event\n\t        this.$('#text-content').on('change input', function(e) {\n\t            self.model.set('url_paste', $(e.target).val());\n\t            self.model.set('file_size', $(e.target).val().length);\n\t            self._refreshReady();\n\t        });\n\t\n\t        // handle settings popover\n\t        this.$('#settings').on('click' , function(e) { self._showSettings(); })\n\t                           .on('mousedown', function(e) { e.preventDefault(); });\n\t\n\t        //\n\t        // model events\n\t        //\n\t        this.model.on('change:percentage', function() {\n\t            self._refreshPercentage();\n\t        });\n\t        this.model.on('change:status', function() {\n\t            self._refreshStatus();\n\t        });\n\t        this.model.on('change:info', function() {\n\t            self._refreshInfo();\n\t        });\n\t        this.model.on('change:file_name', function() {\n\t            self._refreshFileName();\n\t        });\n\t        this.model.on('change:file_mode', function() {\n\t            self._refreshMode();\n\t        });\n\t        this.model.on('change:file_size', function() {\n\t            self._refreshFileSize();\n\t        });\n\t        this.model.on('remove', function() {\n\t            self.remove();\n\t        });\n\t        this.app.collection.on('reset', function() {\n\t            self.remove();\n\t        });\n\t    },\n\t\n\t    // render\n\t    render: function() {\n\t        this.$('#file_name').html(this.model.get('file_name') || '-');\n\t        this.$('#file_desc').html(this.model.get('file_desc') || 'Unavailable');\n\t        this.$('#file_size').html(Utils.bytesToString (this.model.get('file_size')));\n\t        this.$('#status').removeClass().addClass(this.status_classes.init);\n\t    },\n\t\n\t    // remove\n\t    remove: function() {\n\t        // call the base class remove method\n\t        Backbone.View.prototype.remove.apply(this);\n\t    },\n\t\n\t    //\n\t    // handle model events\n\t    //\n\t\n\t    // refresh ready or not states\n\t    _refreshReady: function() {\n\t        this.app.collection.each(function(model) {\n\t            model.set('status', (model.get('file_size') > 0) && 'ready' || 'init');\n\t        });\n\t    },\n\t\n\t    // refresh mode and e.g. show/hide textarea field\n\t    _refreshMode: function() {\n\t        var file_mode = this.model.get('file_mode');\n\t        if (file_mode == 'new') {\n\t            this.height = this.$el.height();\n\t            this.$('#text').css({\n\t                'width' : this.$el.width() - 16 + 'px',\n\t                'top'   : this.$el.height() - 8 + 'px'\n\t            }).show();\n\t            this.$el.height(this.$el.height() - 8 + this.$('#text').height() + 16);\n\t            this.$('#text-content').val('').trigger('keyup');\n\t        } else {\n\t            this.$el.height(this.height);\n\t            this.$('#text').hide();\n\t        }\n\t    },\n\t\n\t    // information\n\t    _refreshInfo: function() {\n\t        var info = this.model.get('info');\n\t        if (info) {\n\t            this.$('#info-text').html('<strong>Failed: </strong>' + info).show();\n\t        } else {\n\t            this.$('#info-text').hide();\n\t        }\n\t    },\n\t\n\t    // percentage\n\t    _refreshPercentage : function() {\n\t        var percentage = parseInt(this.model.get('percentage'));\n\t        if (percentage != 0) {\n\t            this.$('.progress-bar').css({ width : percentage + '%' });\n\t        } else {\n\t            this.$('.progress-bar').addClass('no-transition');\n\t            this.$('.progress-bar').css({ width : '0%' });\n\t            this.$('.progress-bar')[0].offsetHeight;\n\t            this.$('.progress-bar').removeClass('no-transition');\n\t        }\n\t        if (percentage != 100) {\n\t            this.$('#percentage').html(percentage + '%');\n\t        } else {\n\t            this.$('#percentage').html('Adding to history...');\n\t        }\n\t    },\n\t\n\t    // status\n\t    _refreshStatus : function() {\n\t        // identify new status\n\t        var status = this.model.get('status');\n\t\n\t        // identify symbol and reset classes\n\t        this.$('#status').removeClass().addClass(this.status_classes[status]);\n\t\n\t        // enable/disable model flag\n\t        this.model.set('enabled', status != 'running');\n\t\n\t        // enable/disable row fields\n\t        this.$('#text-content').attr('disabled', !this.model.get('enabled'));\n\t\n\t        // remove status classes\n\t        this.$el.removeClass('success danger warning');\n\t\n\t        // set status classes\n\t        if (status == 'running' || status == 'ready') {\n\t            this.model.set('percentage', 0);\n\t        }\n\t        if (status == 'running') {\n\t            this.$('#source').find('.button').addClass('disabled');\n\t        } else {\n\t            this.$('#source').find('.button').removeClass('disabled');\n\t        }\n\t        if (status == 'success') {\n\t            this.$el.addClass('success');\n\t            this.model.set('percentage', 100);\n\t            this.$('#percentage').html('100%');\n\t        }\n\t        if (status == 'error') {\n\t            this.$el.addClass('danger');\n\t            this.model.set('percentage', 0);\n\t            this.$('#info-progress').hide();\n\t            this.$('#info-text').show();\n\t        } else {\n\t            this.$('#info-progress').show();\n\t            this.$('#info-text').hide();\n\t        }\n\t    },\n\t\n\t    // file name\n\t    _refreshFileName: function() {\n\t        this.$('#file_name').html(this.model.get('file_name') || '-');\n\t    },\n\t\n\t    // file size\n\t    _refreshFileSize: function() {\n\t        this.$('#file_size').html(Utils.bytesToString (this.model.get('file_size')));\n\t    },\n\t\n\t    // show/hide ftp popup\n\t    _showFtp: function() {\n\t        if (!this.ftp.visible) {\n\t            this.ftp.empty();\n\t            var self = this;\n\t            this.ftp.append((new UploadFtp({\n\t                ftp_upload_site: this.app.ftp_upload_site,\n\t                onchange: function(ftp_file) {\n\t                    self.ftp.hide();\n\t                    if (self.model.get('status') != 'running' && ftp_file) {\n\t                        self.model.reset({\n\t                            'file_mode': 'ftp',\n\t                            'file_name': ftp_file.path,\n\t                            'file_size': ftp_file.size,\n\t                            'file_path': ftp_file.path\n\t                        });\n\t                        self._refreshReady();\n\t                    }\n\t                }\n\t            })).$el);\n\t            this.ftp.show();\n\t        } else {\n\t            this.ftp.hide();\n\t        }\n\t    },\n\t\n\t    // show/hide settings popup\n\t    _showSettings : function() {\n\t        if (!this.settings.visible) {\n\t            this.settings.empty();\n\t            this.settings.append((new UploadSettings(this)).$el);\n\t            this.settings.show();\n\t        } else {\n\t            this.settings.hide();\n\t        }\n\t    },\n\t\n\t    // template\n\t    _template: function(options) {\n\t        return  '<tr id=\"upload-row-' + options.id + '\" class=\"upload-row\">' +\n\t                    '<td>' +\n\t                        '<div id=\"source\"/>' +\n\t                        '<div class=\"upload-text-column\">' +\n\t                            '<div id=\"text\" class=\"text\">' +\n\t                                '<div class=\"text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n\t                                '<textarea id=\"text-content\" class=\"text-content form-control\"/>' +\n\t                            '</div>' +\n\t                        '</div>' +\n\t                    '</td>' +\n\t                    '<td>' +\n\t                        '<div id=\"status\"/>' +\n\t                    '</td>' +\n\t                    '<td>' +\n\t                        '<div id=\"file_desc\" class=\"upload-title\"/>' +\n\t                    '</td>' +\n\t                    '<td>' +\n\t                        '<div id=\"file_name\" class=\"upload-title\"/>' +\n\t                    '</td>' +\n\t                    '<td>' +\n\t                        '<div id=\"file_size\" class=\"upload-size\"/>' +\n\t                    '</td>' +\n\t                    '<td><div id=\"settings\" class=\"upload-icon-button fa fa-gear\"/></td>' +\n\t                    '<td>' +\n\t                        '<div id=\"info\" class=\"upload-info\">' +\n\t                            '<div id=\"info-text\"/>' +\n\t                            '<div id=\"info-progress\" class=\"progress\">' +\n\t                                '<div class=\"progress-bar progress-bar-success\"/>' +\n\t                                '<div id=\"percentage\" class=\"percentage\">0%</div>' +\n\t                            '</div>' +\n\t                        '</div>' +\n\t                    '</td>' +\n\t                '</tr>';\n\t    }\n\t});\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {/** Renders contents of the composite uploader */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4),\n\t        __webpack_require__(33),\n\t        __webpack_require__(107),\n\t        __webpack_require__(16),\n\t        __webpack_require__(17),\n\t        __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function(   Utils,\n\t                    UploadModel,\n\t                    UploadRow,\n\t                    Popover,\n\t                    Select,\n\t                    Ui\n\t                ) {\n\t\n\treturn Backbone.View.extend({\n\t    // extension selector\n\t    select_extension: null,\n\t\n\t    // genome selector\n\t    select_genome: null,\n\t\n\t    // collection\n\t    collection: new UploadModel.Collection(),\n\t\n\t    // initialize\n\t    initialize: function(app) {\n\t        // link app\n\t        this.app                = app;\n\t        this.options            = app.options;\n\t        this.list_extensions    = app.list_extensions;\n\t        this.list_genomes       = app.list_genomes;\n\t        this.ftp_upload_site    = app.currentFtp();\n\t\n\t        // link this\n\t        var self = this;\n\t\n\t        // set element\n\t        this.setElement(this._template());\n\t\n\t        // create button section\n\t        this.btnStart = new Ui.Button({ title: 'Start', onclick: function() { self._eventStart(); } });\n\t        this.btnClose = new Ui.Button({ title: 'Close', onclick: function() { self.app.modal.hide(); } });\n\t\n\t        // append buttons to dom\n\t        var buttons = [ this.btnStart, this.btnClose ];\n\t        for (var i in buttons) {\n\t            this.$('#upload-buttons').prepend(buttons[i].$el);\n\t        }\n\t\n\t        // select extension\n\t        this.select_extension = new Select.View({\n\t            css         : 'footer-selection',\n\t            container   : this.$('#footer-extension'),\n\t            data        : _.filter(this.list_extensions, function(ext) { return ext.composite_files }),\n\t            onchange    : function(extension) {\n\t                self.collection.reset();\n\t                var details = _.findWhere(self.list_extensions, { id : extension });\n\t                if (details && details.composite_files) {\n\t                    for (var i in details.composite_files) {\n\t                        var item = details.composite_files[i];\n\t                        self.collection.add({\n\t                            id          : self.collection.size(),\n\t                            file_desc   : item['description'] || item['name']\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t        });\n\t\n\t        // handle extension info popover\n\t        this.$('#footer-extension-info').on('click', function(e) {\n\t            self._showExtensionInfo({\n\t                $el         : $(e.target),\n\t                title       : self.select_extension.text(),\n\t                extension   : self.select_extension.value(),\n\t                placement   : 'top'\n\t            });\n\t        }).on('mousedown', function(e) { e.preventDefault(); });\n\t\n\t        // genome extension\n\t        this.select_genome = new Select.View({\n\t            css         : 'footer-selection',\n\t            container   : this.$('#footer-genome'),\n\t            data        : this.list_genomes,\n\t            value       : this.options.default_genome\n\t        });\n\t\n\t        // listener for collection triggers on change in composite datatype\n\t        this.collection.on('add', function (model) {\n\t            self._eventAnnounce(model);\n\t        });\n\t        this.collection.on('change add', function() {\n\t            self._updateScreen();\n\t        }).trigger('change');\n\t\n\t        // trigger initial onchange event\n\t        this.select_extension.options.onchange(this.select_extension.value());\n\t    },\n\t\n\t    //\n\t    // upload events / process pipeline\n\t    //\n\t\n\t    // builds the basic ui with placeholder rows for each composite data type file\n\t    _eventAnnounce: function(model) {\n\t        // create view/model\n\t        var upload_row = new UploadRow(this, { model : model });\n\t\n\t        // add upload row element to table\n\t        this.$('#upload-table > tbody:first').append(upload_row.$el);\n\t\n\t        // render\n\t        upload_row.render();\n\t\n\t        // table visibility\n\t        if (this.collection.length > 0) {\n\t            this.$('#upload-table').show();\n\t        } else {\n\t            this.$('#upload-table').hide();\n\t        }\n\t    },\n\t\n\t    // start upload process\n\t    _eventStart: function() {\n\t        var self = this;\n\t        this.collection.each(function(model) {\n\t            model.set('genome', self.select_genome.value());\n\t            model.set('extension', self.select_extension.value());\n\t        });\n\t        $.uploadpost({\n\t            url      : this.app.options.nginx_upload_path,\n\t            data     : this.app.toData(this.collection.filter()),\n\t            success  : function(message) { self._eventSuccess(message); },\n\t            error    : function(message) { self._eventError(message); },\n\t            progress : function(percentage) { self._eventProgress(percentage); }\n\t        });\n\t    },\n\t\n\t    // progress\n\t    _eventProgress: function(percentage) {\n\t        this.collection.each(function(it) { it.set('percentage', percentage); });\n\t    },\n\t\n\t    // success\n\t    _eventSuccess: function(message) {\n\t        this.collection.each(function(it) {\n\t            it.set('status', 'success');\n\t        });\n\t        Galaxy.currHistoryPanel.refreshContents();\n\t    },\n\t\n\t    // error\n\t    _eventError: function(message) {\n\t        this.collection.each(function(it) {\n\t            it.set('status', 'error');\n\t            it.set('info', message);\n\t        });\n\t    },\n\t\n\t    // display extension info popup\n\t    _showExtensionInfo: function(options) {\n\t        // initialize\n\t        var self = this;\n\t        var $el = options.$el;\n\t        var extension = options.extension;\n\t        var title = options.title;\n\t        var description = _.findWhere(this.list_extensions, { id : extension });\n\t\n\t        // create popup\n\t        this.extension_popup && this.extension_popup.remove();\n\t        this.extension_popup = new Popover.View({\n\t            placement: options.placement || 'bottom',\n\t            container: $el,\n\t            destroy: true\n\t        });\n\t\n\t        // add content and show popup\n\t        this.extension_popup.title(title);\n\t        this.extension_popup.empty();\n\t        this.extension_popup.append(this._templateDescription(description));\n\t        this.extension_popup.show();\n\t    },\n\t\n\t    // set screen\n\t    _updateScreen: function () {\n\t        // show start button if components have been selected\n\t        var model = this.collection.first();\n\t        if (model && model.get('status') == 'running') {\n\t            this.select_genome.disable();\n\t            this.select_extension.disable();\n\t        } else {\n\t            this.select_genome.enable();\n\t            this.select_extension.enable();\n\t        }\n\t        if (this.collection.where({ status : 'ready' }).length == this.collection.length && this.collection.length > 0) {\n\t            this.btnStart.enable();\n\t            this.btnStart.$el.addClass('btn-primary');\n\t        } else {\n\t            this.btnStart.disable();\n\t            this.btnStart.$el.removeClass('btn-primary');\n\t        }\n\t\n\t        // table visibility\n\t        if (this.collection.length > 0) {\n\t            this.$('#upload-table').show();\n\t        } else {\n\t            this.$('#upload-table').hide();\n\t        }\n\t    },\n\t\n\t    // template for extensions description\n\t    _templateDescription: function(options) {\n\t        if (options.description) {\n\t            var tmpl = options.description;\n\t            if (options.description_url) {\n\t                tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n\t            }\n\t            return tmpl;\n\t        } else {\n\t            return 'There is no description available for this file extension.';\n\t        }\n\t    },\n\t\n\t    // load html template\n\t    _template: function() {\n\t        return  '<div class=\"upload-view-composite\">' +\n\t                    '<div id=\"upload-footer\" class=\"upload-footer\">' +\n\t                        '<span class=\"footer-title\">Composite Type:</span>' +\n\t                        '<span id=\"footer-extension\"/>' +\n\t                        '<span id=\"footer-extension-info\" class=\"upload-icon-button fa fa-search\"/> ' +\n\t                        '<span class=\"footer-title\">Genome/Build:</span>' +\n\t                        '<span id=\"footer-genome\"/>' +\n\t                    '</div>' +\n\t                    '<div id=\"upload-box\" class=\"upload-box\">' +\n\t                        '<table id=\"upload-table\" class=\"ui-table-striped\" style=\"display: none;\">' +\n\t                            '<thead>' +\n\t                                '<tr>' +\n\t                                    '<th/>' +\n\t                                    '<th/>' +\n\t                                    '<th>Description</th>' +\n\t                                    '<th>Name</th>' +\n\t                                    '<th>Size</th>' +\n\t                                    '<th>Settings</th>' +\n\t                                    '<th>Status</th>' +\n\t                                '</tr>' +\n\t                            '</thead>' +\n\t                            '<tbody></tbody>' +\n\t                        '</table>' +\n\t                    '</div>' +\n\t                    '<div id=\"upload-buttons\" class=\"upload-buttons\"/>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4),\n\t        __webpack_require__(33),\n\t        __webpack_require__(59),\n\t        __webpack_require__(16),\n\t        __webpack_require__(17)], __WEBPACK_AMD_DEFINE_RESULT__ = function(   Utils,\n\t                    UploadModel,\n\t                    UploadSettings,\n\t                    Popover,\n\t                    Select\n\t                ) {\n\t\n\t// row view\n\treturn Backbone.View.extend({\n\t    // states\n\t    status_classes : {\n\t        init    : 'upload-icon-button fa fa-trash-o',\n\t        queued  : 'upload-icon fa fa-spinner fa-spin',\n\t        running : 'upload-icon fa fa-spinner fa-spin',\n\t        success : 'upload-icon-button fa fa-check',\n\t        error   : 'upload-icon-button fa fa-exclamation-triangle'\n\t    },\n\t\n\t    // handle for settings popover\n\t    settings: null,\n\t\n\t    // genome selector\n\t    select_genome : null,\n\t\n\t    // extension selector\n\t    select_extension : null,\n\t\n\t    // render\n\t    initialize: function(app, options) {\n\t        // link app\n\t        this.app = app;\n\t\n\t        // link this\n\t        var self = this;\n\t\n\t        // create model\n\t        this.model = options.model;\n\t\n\t        // add upload row\n\t        this.setElement(this._template(options.model));\n\t\n\t        // append popup to settings icon\n\t        this.settings = new Popover.View({\n\t            title       : 'Upload configuration',\n\t            container   : this.$('#settings'),\n\t            placement   : 'bottom'\n\t        });\n\t\n\t        // initialize default genome through default select field\n\t        var default_genome = this.app.select_genome.value();\n\t        \n\t        // select genomes\n\t        this.select_genome = new Select.View({\n\t            css: 'upload-genome',\n\t            onchange : function(genome) {\n\t                self.model.set('genome', genome);\n\t                self.app.updateGenome(genome, true);\n\t            },\n\t            data: self.app.list_genomes,\n\t            container: this.$('#genome'),\n\t            value: default_genome\n\t        });\n\t\n\t        // initialize genome\n\t        this.model.set('genome', default_genome);\n\t\n\t        // initialize default extension through default select field\n\t        var default_extension = this.app.select_extension.value();\n\t        \n\t        // select extension\n\t        this.select_extension = new Select.View({\n\t            css: 'upload-extension',\n\t            onchange : function(extension) {\n\t                self.model.set('extension', extension);\n\t                self.app.updateExtension(extension, true);\n\t            },\n\t            data: self.app.list_extensions,\n\t            container: this.$('#extension'),\n\t            value: default_extension\n\t        });\n\t\n\t        // initialize extension\n\t        this.model.set('extension', default_extension);\n\t        \n\t        //\n\t        // ui events\n\t        //\n\t\n\t        // handle click event\n\t        this.$('#symbol').on('click', function() { self._removeRow(); });\n\t\n\t        // handle extension info popover\n\t        this.$('#extension-info').on('click' , function(e) {\n\t            self.app.showExtensionInfo({\n\t                $el         : $(e.target),\n\t                title       : self.select_extension.text(),\n\t                extension   : self.select_extension.value()\n\t            });\n\t        }).on('mousedown', function(e) { e.preventDefault(); });\n\t\n\t        // handle settings popover\n\t        this.$('#settings').on('click' , function(e) { self._showSettings(); })\n\t                            .on('mousedown', function(e) { e.preventDefault(); });\n\t\n\t        // handle text editing event\n\t        this.$('#text-content').on('change input', function(e) {\n\t            self.model.set('url_paste', $(e.target).val());\n\t            self.model.set('file_size', $(e.target).val().length);\n\t        });\n\t\n\t        //\n\t        // model events\n\t        //\n\t        this.model.on('change:percentage', function() {\n\t            self._refreshPercentage();\n\t        });\n\t        this.model.on('change:status', function() {\n\t            self._refreshStatus();\n\t        });\n\t        this.model.on('change:info', function() {\n\t            self._refreshInfo();\n\t        });\n\t        this.model.on('change:genome', function() {\n\t            self._refreshGenome();\n\t        });\n\t        this.model.on('change:extension', function() {\n\t            self._refreshExtension();\n\t        });\n\t        this.model.on('change:file_size', function() {\n\t            self._refreshFileSize();\n\t        });\n\t        this.model.on('remove', function() {\n\t            self.remove();\n\t        });\n\t        this.app.collection.on('reset', function() {\n\t            self.remove();\n\t        });\n\t    },\n\t\n\t    // render\n\t    render: function() {\n\t        // read model\n\t        var file_name   = this.model.get('file_name');\n\t        var file_size   = this.model.get('file_size');\n\t        var file_mode   = this.model.get('file_mode');\n\t\n\t        // update title\n\t        this.$('#title').html(file_name);\n\t\n\t        // update info\n\t        this.$('#size').html(Utils.bytesToString (file_size));\n\t\n\t        // remove mode class\n\t        this.$('#mode')\n\t            .removeClass()\n\t            .addClass('upload-mode')\n\t            .addClass('text-primary');\n\t\n\t        // activate text field if file is new\n\t        if (file_mode == 'new') {\n\t            this.$('#text').css({\n\t                'width' : this.$el.width() - 16 + 'px',\n\t                'top'   : this.$el.height() - 8 + 'px'\n\t            }).show();\n\t            this.$el.height(this.$el.height() - 8 + this.$('#text').height() + 16);\n\t            this.$('#mode').addClass('fa fa-edit');\n\t        }\n\t\n\t        // file from local disk\n\t        if (file_mode == 'local') {\n\t            this.$('#mode').addClass('fa fa-laptop');\n\t        }\n\t\n\t        // file from ftp\n\t        if (file_mode == 'ftp') {\n\t            this.$('#mode').addClass('fa fa-folder-open-o');\n\t        }\n\t    },\n\t\n\t    // remove\n\t    remove: function() {\n\t        // trigger remove event\n\t        this.select_genome.remove();\n\t        this.select_extension.remove();\n\t\n\t        // call the base class remove method\n\t        Backbone.View.prototype.remove.apply(this);\n\t    },\n\t\n\t    //\n\t    // handle model events\n\t    //\n\t\n\t    // update extension\n\t    _refreshExtension: function() {\n\t        this.select_extension.value(this.model.get('extension'));\n\t    },\n\t    \n\t    // update genome\n\t    _refreshGenome: function() {\n\t        this.select_genome.value(this.model.get('genome'));\n\t    },\n\t\n\t    // progress\n\t    _refreshInfo: function() {\n\t        // write error message\n\t        var info = this.model.get('info');\n\t        if (info) {\n\t            this.$('#info').html('<strong>Failed: </strong>' + info).show();\n\t        } else {\n\t            this.$('#info').hide();\n\t        }\n\t    },\n\t\n\t    // progress\n\t    _refreshPercentage : function() {\n\t        var percentage = parseInt(this.model.get('percentage'));\n\t        this.$('.progress-bar').css({ width : percentage + '%' });\n\t        if (percentage != 100)\n\t            this.$('#percentage').html(percentage + '%');\n\t        else\n\t            this.$('#percentage').html('Adding to history...');\n\t    },\n\t\n\t    // status\n\t    _refreshStatus : function() {\n\t        // identify new status\n\t        var status = this.model.get('status');\n\t\n\t        // identify symbol and reset classes\n\t        this.$('#symbol').removeClass().addClass(this.status_classes[status]);\n\t\n\t        // enable/disable model flag\n\t        this.model.set('enabled', status == 'init');\n\t\n\t        // enable/disable row fields\n\t        var enabled = this.model.get('enabled');\n\t        this.$('#text-content').attr('disabled', !enabled);\n\t        if (enabled) {\n\t            this.select_genome.enable();\n\t            this.select_extension.enable();\n\t        } else {\n\t            this.select_genome.disable();\n\t            this.select_extension.disable();\n\t        }\n\t\n\t        // success\n\t        if (status == 'success') {\n\t            this.$el.addClass('success');\n\t            this.$('#percentage').html('100%');\n\t        }\n\t\n\t        // error\n\t        if (status == 'error') {\n\t            this.$el.addClass('danger');\n\t            this.$('.progress').remove();\n\t        }\n\t    },\n\t\n\t    // refresh size\n\t    _refreshFileSize: function() {\n\t        var count = this.model.get('file_size');\n\t        this.$('#size').html(Utils.bytesToString (count));\n\t    },\n\t\n\t    //\n\t    // handle ui events\n\t    //\n\t\n\t    // remove row\n\t    _removeRow: function() {\n\t        // get current status\n\t        var status = this.model.get('status');\n\t\n\t        // only remove from queue if not in processing line\n\t        if (status == 'init' || status == 'success' || status == 'error') {\n\t            this.app.collection.remove(this.model);\n\t        }\n\t    },\n\t\n\t    // attach file info popup\n\t    _showSettings : function() {\n\t        // check if popover is visible\n\t        if (!this.settings.visible) {\n\t            // show popover\n\t            this.settings.empty();\n\t            this.settings.append((new UploadSettings(this)).$el);\n\t            this.settings.show();\n\t        } else {\n\t            // hide popover\n\t            this.settings.hide();\n\t        }\n\t    },\n\t\n\t    // template\n\t    _template: function(options) {\n\t        return  '<tr id=\"upload-row-' + options.id + '\" class=\"upload-row\">' +\n\t                    '<td>' +\n\t                        '<div class=\"upload-text-column\">' +\n\t                            '<div id=\"mode\"/>' +\n\t                            '<div id=\"title\" class=\"upload-title\"/>' +\n\t                            '<div id=\"text\" class=\"text\">' +\n\t                                '<div class=\"text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n\t                                '<textarea id=\"text-content\" class=\"text-content form-control\"/>' +\n\t                            '</div>' +\n\t                        '</div>' +\n\t                    '</td>' +\n\t                    '<td>' +\n\t                        '<div id=\"size\" class=\"upload-size\"/>' +\n\t                    '</td>' +\n\t                    '<td>' +\n\t                        '<div id=\"extension\" class=\"upload-extension\" style=\"float: left;\"/>&nbsp;&nbsp' +\n\t                        '<div id=\"extension-info\" class=\"upload-icon-button fa fa-search\"/>' +\n\t                    '</td>' +\n\t                    '<td>' +\n\t                        '<div id=\"genome\" class=\"upload-genome\"/>' +\n\t                    '</td>' +\n\t                    '<td><div id=\"settings\" class=\"upload-icon-button fa fa-gear\"/></td>' +\n\t                    '<td>' +\n\t                        '<div id=\"info\" class=\"upload-info\">' +\n\t                            '<div class=\"progress\">' +\n\t                                '<div class=\"progress-bar progress-bar-success\"/>' +\n\t                                '<div id=\"percentage\" class=\"percentage\">0%</div>' +\n\t                            '</div>' +\n\t                        '</div>' +\n\t                    '</td>' +\n\t                    '<td>' +\n\t                        '<div id=\"symbol\" class=\"' + this.status_classes.init + '\"/>' +\n\t                    '</td>' +\n\t                '</tr>';\n\t    }\n\t\n\t});\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {/** Renders contents of the default uploader */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4),\n\t        __webpack_require__(33),\n\t        __webpack_require__(109),\n\t        __webpack_require__(58),\n\t        __webpack_require__(16),\n\t        __webpack_require__(17),\n\t        __webpack_require__(7),\n\t        __webpack_require__(66)], __WEBPACK_AMD_DEFINE_RESULT__ = function(   Utils,\n\t                    UploadModel,\n\t                    UploadRow,\n\t                    UploadFtp,\n\t                    Popover,\n\t                    Select,\n\t                    Ui\n\t                ) {\n\t\n\treturn Backbone.View.extend({\n\t    // extension selector\n\t    select_extension : null,\n\t\n\t    // genome selector\n\t    select_genome: null,\n\t\n\t    // jquery uploadbox plugin\n\t    uploadbox: null,\n\t\n\t    // current upload size in bytes\n\t    upload_size: 0,\n\t\n\t    // contains upload row models\n\t    collection : new UploadModel.Collection(),\n\t\n\t    // ftp file viewer\n\t    ftp : null,\n\t\n\t    // keeps track of the current uploader state\n\t    counter : {\n\t        announce    : 0,\n\t        success     : 0,\n\t        error       : 0,\n\t        running     : 0,\n\t        reset : function() {\n\t            this.announce = this.success = this.error = this.running = 0;\n\t        }\n\t    },\n\t\n\t    // initialize\n\t    initialize : function(app) {\n\t        // link app\n\t        this.app                = app;\n\t        this.options            = app.options;\n\t        this.list_extensions    = app.list_extensions;\n\t        this.list_genomes       = app.list_genomes;\n\t        this.ui_button          = app.ui_button;\n\t        this.ftp_upload_site    = app.currentFtp();\n\t\n\t        // link this\n\t        var self = this;\n\t\n\t        // set element\n\t        this.setElement(this._template());\n\t\n\t        // create button section\n\t        this.btnLocal    = new Ui.Button({ id: 'btn-local', title: 'Choose local file',   onclick: function() { self.uploadbox.select(); }, icon: 'fa fa-laptop' });\n\t        this.btnFtp      = new Ui.Button({ id: 'btn-ftp',   title: 'Choose FTP file',     onclick: function() { self._eventFtp(); }, icon: 'fa fa-folder-open-o' });\n\t        this.btnCreate   = new Ui.Button({ id: 'btn-new',   title: 'Paste/Fetch data',    onclick: function() { self._eventCreate(); }, icon: 'fa fa-edit' });\n\t        this.btnStart    = new Ui.Button({ id: 'btn-start', title: 'Start',               onclick: function() { self._eventStart(); } });\n\t        this.btnStop     = new Ui.Button({ id: 'btn-stop',  title: 'Pause',               onclick: function() { self._eventStop(); } });\n\t        this.btnReset    = new Ui.Button({ id: 'btn-reset', title: 'Reset',               onclick: function() { self._eventReset(); } });\n\t        this.btnClose    = new Ui.Button({ id: 'btn-close', title: 'Close',               onclick: function() { self.app.modal.hide(); } });\n\t\n\t        // append buttons to dom\n\t        var buttons = [ this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnClose ];\n\t        for (var i in buttons) {\n\t            this.$('#upload-buttons').prepend(buttons[i].$el);\n\t        }\n\t\n\t        // file upload\n\t        var self = this;\n\t        this.uploadbox = this.$('#upload-box').uploadbox({\n\t            url             : this.app.options.nginx_upload_path,\n\t            announce        : function(index, file) { self._eventAnnounce(index, file) },\n\t            initialize      : function(index) { return self.app.toData([ self.collection.get(index) ], self.history_id) },\n\t            progress        : function(index, percentage) { self._eventProgress(index, percentage) },\n\t            success         : function(index, message) { self._eventSuccess(index, message) },\n\t            error           : function(index, message) { self._eventError(index, message) },\n\t            complete        : function() { self._eventComplete() },\n\t            ondragover      : function() { self.$('.upload-box').addClass('highlight'); },\n\t            ondragleave     : function() { self.$('.upload-box').removeClass('highlight'); }\n\t        });\n\t\n\t        // add ftp file viewer\n\t        this.ftp = new Popover.View({\n\t            title       : 'FTP files',\n\t            container   : this.btnFtp.$el\n\t        });\n\t\n\t        // select extension\n\t        this.select_extension = new Select.View({\n\t            css         : 'footer-selection',\n\t            container   : this.$('#footer-extension'),\n\t            data        : _.filter(this.list_extensions, function(ext) { return !ext.composite_files }),\n\t            value       : this.options.default_extension,\n\t            onchange    : function(extension) {\n\t                self.updateExtension(extension);\n\t            }\n\t        });\n\t\n\t        // handle extension info popover\n\t        self.$('#footer-extension-info').on('click', function(e) {\n\t            self.showExtensionInfo({\n\t                $el         : $(e.target),\n\t                title       : self.select_extension.text(),\n\t                extension   : self.select_extension.value(),\n\t                placement   : 'top'\n\t            });\n\t        }).on('mousedown', function(e) { e.preventDefault(); });\n\t\n\t        // genome extension\n\t        this.select_genome = new Select.View({\n\t            css         : 'footer-selection',\n\t            container   : this.$('#footer-genome'),\n\t            data        : this.list_genomes,\n\t            value       : this.options.default_genome,\n\t            onchange    : function(genome) {\n\t                self.updateGenome(genome);\n\t            }\n\t        });\n\t\n\t        // events\n\t        this.collection.on('remove', function(model) {\n\t            self._eventRemove(model);\n\t        });\n\t\n\t        // setup info\n\t        this._updateScreen();\n\t    },\n\t\n\t    //\n\t    // events triggered by the upload box plugin\n\t    //\n\t\n\t    // a new file has been dropped/selected through the uploadbox plugin\n\t    _eventAnnounce: function(index, file) {\n\t        // update counter\n\t        this.counter.announce++;\n\t\n\t        // create if model has not been created yet\n\t        var new_model = new UploadModel.Model({\n\t            id          : index,\n\t            file_name   : file.name,\n\t            file_size   : file.size,\n\t            file_mode   : file.mode || 'local',\n\t            file_path   : file.path,\n\t            file_data   : file\n\t        });\n\t\n\t        // add model to collection\n\t        this.collection.add(new_model);\n\t\n\t        // create view/model\n\t        var upload_row = new UploadRow(this, { model: new_model });\n\t\n\t        // add upload row element to table\n\t        this.$('#upload-table > tbody:first').append(upload_row.$el);\n\t\n\t        // show on screen info\n\t        this._updateScreen();\n\t\n\t        // render\n\t        upload_row.render();\n\t    },\n\t\n\t    // progress\n\t    _eventProgress: function(index, percentage) {\n\t        // set progress for row\n\t        var it = this.collection.get(index);\n\t        it.set('percentage', percentage);\n\t\n\t        // update ui button\n\t        this.ui_button.set('percentage', this._uploadPercentage(percentage, it.get('file_size')));\n\t    },\n\t\n\t    // success\n\t    _eventSuccess: function(index, message) {\n\t        // update status\n\t        var it = this.collection.get(index);\n\t        it.set('percentage', 100);\n\t        it.set('status', 'success');\n\t\n\t        // update ui button\n\t        this.ui_button.set('percentage', this._uploadPercentage(100, it.get('file_size')));\n\t\n\t        // update completed\n\t        this.upload_completed += it.get('file_size') * 100;\n\t\n\t        // update counter\n\t        this.counter.announce--;\n\t        this.counter.success++;\n\t\n\t        // update on screen info\n\t        this._updateScreen();\n\t\n\t        // update galaxy history\n\t        Galaxy.currHistoryPanel.refreshContents();\n\t    },\n\t\n\t    // error\n\t    _eventError: function(index, message) {\n\t        // get element\n\t        var it = this.collection.get(index);\n\t\n\t        // update status\n\t        it.set('percentage', 100);\n\t        it.set('status', 'error');\n\t        it.set('info', message);\n\t\n\t        // update ui button\n\t        this.ui_button.set('percentage', this._uploadPercentage(100, it.get('file_size')));\n\t        this.ui_button.set('status', 'danger');\n\t\n\t        // update completed\n\t        this.upload_completed += it.get('file_size') * 100;\n\t\n\t        // update counter\n\t        this.counter.announce--;\n\t        this.counter.error++;\n\t\n\t        // update on screen info\n\t        this._updateScreen();\n\t    },\n\t\n\t    // queue is done\n\t    _eventComplete: function() {\n\t        // reset queued upload to initial status\n\t        this.collection.each(function(model) {\n\t            if(model.get('status') == 'queued') {\n\t                model.set('status', 'init');\n\t            }\n\t        });\n\t\n\t        // update running\n\t        this.counter.running = 0;\n\t\n\t        // update on screen info\n\t        this._updateScreen();\n\t    },\n\t\n\t    //\n\t    // events triggered by collection\n\t    //\n\t\n\t    // remove model from upload list\n\t    _eventRemove: function(model) {\n\t        // update status\n\t        var status = model.get('status');\n\t\n\t        // reduce counter\n\t        if (status == 'success') {\n\t            this.counter.success--;\n\t        } else if (status == 'error') {\n\t            this.counter.error--;\n\t        } else {\n\t            this.counter.announce--;\n\t        }\n\t\n\t        // remove from queue\n\t        this.uploadbox.remove(model.id);\n\t\n\t        // show on screen info\n\t        this._updateScreen();\n\t    },\n\t\n\t    //\n\t    // events triggered by this view\n\t    //\n\t\n\t    // [public] display extension info popup\n\t    showExtensionInfo: function(options) {\n\t        // initialize\n\t        var self = this;\n\t        var $el = options.$el;\n\t        var extension = options.extension;\n\t        var title = options.title;\n\t        var description = _.findWhere(self.list_extensions, {'id': extension});\n\t\n\t        // create popup\n\t        this.extension_popup && this.extension_popup.remove();\n\t        this.extension_popup = new Popover.View({\n\t            placement: options.placement || 'bottom',\n\t            container: $el,\n\t            destroy: true\n\t        });\n\t\n\t        // add content and show popup\n\t        this.extension_popup.title(title);\n\t        this.extension_popup.empty();\n\t        this.extension_popup.append(this._templateDescription(description));\n\t        this.extension_popup.show();\n\t    },\n\t\n\t    // show/hide ftp popup\n\t    _eventFtp: function() {\n\t        if (!this.ftp.visible) {\n\t            this.ftp.empty();\n\t            var self = this;\n\t            this.ftp.append((new UploadFtp({\n\t                collection      : this.collection,\n\t                ftp_upload_site : this.ftp_upload_site,\n\t                onadd: function(ftp_file) {\n\t                    self.uploadbox.add([{\n\t                        mode: 'ftp',\n\t                        name: ftp_file.path,\n\t                        size: ftp_file.size,\n\t                        path: ftp_file.path\n\t                    }]);\n\t                },\n\t                onremove: function(model_index) {\n\t                    self.collection.remove(model_index);\n\t                }\n\t            })).$el);\n\t            this.ftp.show();\n\t        } else {\n\t            this.ftp.hide();\n\t        }\n\t    },\n\t\n\t    // create a new file\n\t    _eventCreate: function (){\n\t        this.uploadbox.add([{\n\t            name    : 'New File',\n\t            size    : 0,\n\t            mode    : 'new'\n\t        }]);\n\t    },\n\t\n\t    // start upload process\n\t    _eventStart: function() {\n\t        // check\n\t        if (this.counter.announce == 0 || this.counter.running > 0) {\n\t            return;\n\t        }\n\t\n\t        // reset current size\n\t        var self = this;\n\t        this.upload_size = 0;\n\t        this.upload_completed = 0;\n\t        // switch icons for new uploads\n\t        this.collection.each(function(model) {\n\t            if(model.get('status') == 'init') {\n\t                model.set('status', 'queued');\n\t                self.upload_size += model.get('file_size');\n\t            }\n\t        });\n\t\n\t        // reset progress\n\t        this.ui_button.set('percentage', 0);\n\t        this.ui_button.set('status', 'success');\n\t\n\t        // update running\n\t        this.counter.running = this.counter.announce;\n\t\n\t        // set current history id\n\t        this.history_id = this.app.currentHistory();\n\t\n\t        // initiate upload procedure in plugin\n\t        this.uploadbox.start();\n\t\n\t        // update on screen info\n\t        this._updateScreen();\n\t    },\n\t\n\t    // pause upload process\n\t    _eventStop: function() {\n\t        // check\n\t        if (this.counter.running > 0) {\n\t            // show upload has paused\n\t            this.ui_button.set('status', 'info');\n\t\n\t            // set html content\n\t            $('#upload-info').html('Queue will pause after completing the current file...');\n\t\n\t            // request pause\n\t            this.uploadbox.stop();\n\t        }\n\t    },\n\t\n\t    // remove all\n\t    _eventReset: function() {\n\t        // make sure queue is not running\n\t        if (this.counter.running == 0){\n\t            // reset collection\n\t            this.collection.reset();\n\t\n\t            // reset counter\n\t            this.counter.reset();\n\t\n\t            // remove from queue\n\t            this.uploadbox.reset();\n\t\n\t            // reset value for universal type drop-down\n\t            this.select_extension.value(this.options.default_extension);\n\t            this.select_genome.value(this.options.default_genome);\n\t\n\t            // reset button\n\t            this.ui_button.set('percentage', 0);\n\t\n\t            // show on screen info\n\t            this._updateScreen();\n\t        }\n\t    },\n\t\n\t    // update extension for all models\n\t    updateExtension: function(extension, defaults_only) {\n\t        var self = this;\n\t        this.collection.each(function(model) {\n\t            if (model.get('status') == 'init' && (model.get('extension') == self.options.default_extension || !defaults_only)) {\n\t                model.set('extension', extension);\n\t            }\n\t        });\n\t    },\n\t\n\t    // update genome for all models\n\t    updateGenome: function(genome, defaults_only) {\n\t        var self = this;\n\t        this.collection.each(function(model) {\n\t            if (model.get('status') == 'init' && (model.get('genome') == self.options.default_genome || !defaults_only)) {\n\t                model.set('genome', genome);\n\t            }\n\t        });\n\t    },\n\t\n\t    // set screen\n\t    _updateScreen: function () {\n\t        /*\n\t            update on screen info\n\t        */\n\t\n\t        // check default message\n\t        if(this.counter.announce == 0) {\n\t            if (this.uploadbox.compatible()) {\n\t                message = '&nbsp;';\n\t            } else {\n\t                message = 'Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.';\n\t            }\n\t        } else {\n\t            if (this.counter.running == 0) {\n\t                message = 'You added ' + this.counter.announce + ' file(s) to the queue. Add more files or click \\'Start\\' to proceed.';\n\t            } else {\n\t                message = 'Please wait...' + this.counter.announce + ' out of ' + this.counter.running + ' remaining.';\n\t            }\n\t        }\n\t\n\t        // set html content\n\t        this.$('#upload-info').html(message);\n\t\n\t        /*\n\t            update button status\n\t        */\n\t\n\t        // update reset button\n\t        if (this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0) {\n\t            this.btnReset.enable();\n\t        } else {\n\t            this.btnReset.disable();\n\t        }\n\t\n\t        // update upload button\n\t        if (this.counter.running == 0 && this.counter.announce > 0) {\n\t            this.btnStart.enable();\n\t            this.btnStart.$el.addClass('btn-primary');\n\t        } else {\n\t            this.btnStart.disable();\n\t            this.btnStart.$el.removeClass('btn-primary');\n\t        }\n\t\n\t        // pause upload button\n\t        if (this.counter.running > 0) {\n\t            this.btnStop.enable();\n\t        } else {\n\t            this.btnStop.disable();\n\t        }\n\t\n\t        // select upload button\n\t        if (this.counter.running == 0) {\n\t            this.btnLocal.enable();\n\t            this.btnFtp.enable();\n\t            this.btnCreate.enable();\n\t        } else {\n\t            this.btnLocal.disable();\n\t            this.btnFtp.disable();\n\t            this.btnCreate.disable();\n\t        }\n\t\n\t        // ftp button\n\t        if (this.ftp_upload_site) {\n\t            this.btnFtp.$el.show();\n\t        } else {\n\t            this.btnFtp.$el.hide();\n\t        }\n\t\n\t        // table visibility\n\t        if (this.counter.announce + this.counter.success + this.counter.error > 0) {\n\t            this.$('#upload-table').show();\n\t            this.$('.upload-helper').hide();\n\t        } else {\n\t            this.$('#upload-table').hide();\n\t            this.$('.upload-helper').show();\n\t        }\n\t    },\n\t\n\t    // calculate percentage of all queued uploads\n\t    _uploadPercentage: function(percentage, size) {\n\t        return (this.upload_completed + (percentage * size)) / this.upload_size;\n\t    },\n\t\n\t    // template for extensions description\n\t    _templateDescription: function(options) {\n\t        if (options.description) {\n\t            var tmpl = options.description;\n\t            if (options.description_url) {\n\t                tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n\t            }\n\t            return tmpl;\n\t        } else {\n\t            return 'There is no description available for this file extension.';\n\t        }\n\t    },\n\t\n\t    // load html template\n\t    _template: function() {\n\t        return  '<div class=\"upload-view-default\">' +\n\t                    '<div class=\"upload-top\">' +\n\t                        '<h6 id=\"upload-info\" class=\"upload-info\"/>' +\n\t                    '</div>' +\n\t                    '<div id=\"upload-box\" class=\"upload-box\">' +\n\t                        '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n\t                        '<table id=\"upload-table\" class=\"ui-table-striped\" style=\"display: none;\">' +\n\t                            '<thead>' +\n\t                                '<tr>' +\n\t                                    '<th>Name</th>' +\n\t                                    '<th>Size</th>' +\n\t                                    '<th>Type</th>' +\n\t                                    '<th>Genome</th>' +\n\t                                    '<th>Settings</th>' +\n\t                                    '<th>Status</th>' +\n\t                                    '<th/>' +\n\t                                '</tr>' +\n\t                            '</thead>' +\n\t                            '<tbody/>' +\n\t                        '</table>' +\n\t                    '</div>' +\n\t                    '<div id=\"upload-footer\" class=\"upload-footer\">' +\n\t                        '<span class=\"footer-title\">Type (set all):</span>' +\n\t                        '<span id=\"footer-extension\"/>' +\n\t                        '<span id=\"footer-extension-info\" class=\"upload-icon-button fa fa-search\"/> ' +\n\t                        '<span class=\"footer-title\">Genome (set all):</span>' +\n\t                        '<span id=\"footer-genome\"/>' +\n\t                    '</div>' +\n\t                    '<div id=\"upload-buttons\" class=\"upload-buttons\"/>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\t// model for upload/progress bar button\n\tvar Model = Backbone.Model.extend({\n\t    defaults: {\n\t        icon        : 'fa-upload',\n\t        tooltip     : 'Download from URL or upload files from disk',\n\t        label       : 'Load Data',\n\t        percentage  : 0,\n\t        status      : ''\n\t    }\n\t});\n\t\n\t// view for upload/progress bar button\n\tvar View = Backbone.View.extend({\n\t    // model\n\t    model : null,\n\t\n\t    // initialize\n\t    initialize : function( options ) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // create model\n\t        var model = options.model;\n\t\n\t        // create new element\n\t        this.setElement( this._template() );\n\t\n\t        // add event\n\t        this.$el.on( 'click', function( e ) { options.onclick( e ); });\n\t\n\t        // add tooltip\n\t        this.$el.tooltip( { title: model.get('tooltip'), placement: 'bottom' } );\n\t\n\t        // events\n\t        model.on( 'change:percentage', function() {\n\t            self._percentage( model.get( 'percentage' ) );\n\t        });\n\t        model.on( 'change:status', function() {\n\t            self._status( model.get( 'status' ) );\n\t        });\n\t\n\t        // unload event\n\t        var self = this;\n\t        $( window ).on( 'beforeunload', function() {\n\t            var text = \"\";\n\t            if ( options.onunload ) {\n\t                text = options.onunload();\n\t            }\n\t            if ( text != \"\" ) {\n\t                return text;\n\t            }\n\t        });\n\t    },\n\t\n\t    // set status\n\t    _status: function( value ) {\n\t        var $el = this.$el.find( '.progress-bar' );\n\t        $el.removeClass();\n\t        $el.addClass( 'progress-bar' );\n\t        $el.addClass( 'progress-bar-notransition' );\n\t        if ( value != '' ) {\n\t            $el.addClass( 'progress-bar-' + value );\n\t        }\n\t    },\n\t\n\t    // set percentage\n\t    _percentage: function( value ) {\n\t        var $el = this.$el.find( '.progress-bar' );\n\t        $el.css( { width : value + '%' } );\n\t    },\n\t\n\t    // template\n\t    _template: function() {\n\t        return  '<div class=\"upload-button\">' +\n\t                    '<div class=\"progress\">' +\n\t                        '<div class=\"progress-bar\"></div>' +\n\t                    '</div>' +\n\t                    '<div id=\"label\" class=\"label\">' +\n\t                        '<a class=\"panel-header-button\" href=\"javascript:void(0)\">' +\n\t                            '<span class=\"fa fa-upload\"></span>' +\n\t                        '</a>' +\n\t                    '</div>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\treturn {\n\t    Model   : Model,\n\t    View    : View\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone) {/** Upload app contains the upload progress button and upload modal, compiles model data for API request **/\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4),\n\t        __webpack_require__(10),\n\t        __webpack_require__(57),\n\t        __webpack_require__(111),\n\t        __webpack_require__(110),\n\t        __webpack_require__(108)], __WEBPACK_AMD_DEFINE_RESULT__ = function(   Utils,\n\t                    Modal,\n\t                    Tabs,\n\t                    UploadButton,\n\t                    UploadViewDefault,\n\t                    UploadViewComposite ) {\n\treturn Backbone.View.extend({\n\t    // default options\n\t    options : {\n\t        nginx_upload_path   : '',\n\t        ftp_upload_site     : 'n/a',\n\t        default_genome      : '?',\n\t        default_extension   : 'auto',\n\t        height              : 500,\n\t        width               : 900,\n\t        auto                : {\n\t            id          : 'auto',\n\t            text        : 'Auto-detect',\n\t            description : 'This system will try to detect the file type automatically. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be.  You can also upload compressed files, which will automatically be decompressed.'\n\t        }\n\t    },\n\t\n\t    // upload modal container\n\t    modal: null,\n\t\n\t    // progress button in panel\n\t    ui_button: null,\n\t\n\t    // current history identifier\n\t    current_history: null,\n\t\n\t    // contains all available dataset extensions/types\n\t    list_extensions: [],\n\t\n\t    // contains all available genomes\n\t    list_genomes: [],\n\t\n\t    // initialize\n\t    initialize: function( options ) {\n\t        // link this\n\t        var self = this;\n\t\n\t        // merge parsed options\n\t        this.options = Utils.merge( options, this.options );\n\t\n\t        // create model for upload/progress button\n\t        this.ui_button = new UploadButton.Model();\n\t\n\t        // create view for upload/progress button\n\t        this.ui_button_view = new UploadButton.View({\n\t            model       : this.ui_button,\n\t            onclick     : function(e) {\n\t                e.preventDefault();\n\t                self.show()\n\t            },\n\t            onunload    : function() {\n\t                var percentage = self.ui_button.get('percentage', 0);\n\t                if (percentage > 0 && percentage < 100) {\n\t                    return 'Several uploads are queued.';\n\t                }\n\t            }\n\t        });\n\t\n\t        // set element to button view\n\t        this.setElement( this.ui_button_view.$el );\n\t\n\t        // load extensions\n\t        var self = this;\n\t        Utils.get({\n\t            url     : galaxy_config.root + 'api/datatypes?extension_only=False',\n\t            success : function( datatypes ) {\n\t                for ( key in datatypes ) {\n\t                    self.list_extensions.push({\n\t                        id              : datatypes[ key ].extension,\n\t                        text            : datatypes[ key ].extension,\n\t                        description     : datatypes[ key ].description,\n\t                        description_url : datatypes[ key ].description_url,\n\t                        composite_files : datatypes[ key ].composite_files\n\t                    });\n\t                }\n\t                self.list_extensions.sort( function( a, b ) {\n\t                    var a_text = a.text && a.text.toLowerCase();\n\t                    var b_text = b.text && b.text.toLowerCase();\n\t                    return a_text > b_text ? 1 : a_text < b_text ? -1 : 0;\n\t                });\n\t                if ( !self.options.datatypes_disable_auto ) {\n\t                    self.list_extensions.unshift( self.options.auto );\n\t                }\n\t            }\n\t        });\n\t\n\t        // load genomes\n\t        Utils.get({\n\t            url     : galaxy_config.root + 'api/genomes',\n\t            success : function( genomes ) {\n\t                for ( key in genomes ) {\n\t                    self.list_genomes.push({\n\t                        id      : genomes[ key ][ 1 ],\n\t                        text    : genomes[ key ][ 0 ]\n\t                    });\n\t                }\n\t                self.list_genomes.sort( function( a, b ) {\n\t                    if ( a.id == self.options.default_genome ) { return -1; }\n\t                    if ( b.id == self.options.default_genome ) { return 1; }\n\t                    return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\n\t                });\n\t            }\n\t        });\n\t    },\n\t\n\t    //\n\t    // event triggered by upload button\n\t    //\n\t\n\t    // show/hide upload frame\n\t    show: function () {\n\t        // wait for galaxy history panel\n\t        var self = this;\n\t        if ( !Galaxy.currHistoryPanel || !Galaxy.currHistoryPanel.model ) {\n\t            window.setTimeout(function() { self.show() }, 500)\n\t            return;\n\t        }\n\t\n\t        // set current user\n\t        this.current_user = Galaxy.user.id;\n\t\n\t        // create modal\n\t        if ( !this.modal ) {\n\t            // build tabs\n\t            this.tabs = new Tabs.View();\n\t\n\t            // add tabs\n\t            this.default_view = new UploadViewDefault( this );\n\t            this.tabs.add({\n\t                id      : 'regular',\n\t                title   : 'Regular',\n\t                $el     : this.default_view.$el\n\t            });\n\t            this.composite_view = new UploadViewComposite( this );\n\t            this.tabs.add({\n\t                id      : 'composite',\n\t                title   : 'Composite',\n\t                $el     : this.composite_view.$el\n\t            });\n\t\n\t            // make modal\n\t            this.modal = new Modal.View({\n\t                title           : 'Download from web or upload from disk',\n\t                body            : this.tabs.$el,\n\t                height          : this.options.height,\n\t                width           : this.options.width,\n\t                closing_events  : true,\n\t                title_separator : false\n\t            });\n\t        }\n\t\n\t        // show modal\n\t        this.modal.show();\n\t    },\n\t\n\t    // refresh user and current history\n\t    currentHistory: function() {\n\t        return this.current_user && Galaxy.currHistoryPanel.model.get( 'id' );\n\t    },\n\t\n\t    // get ftp configuration\n\t    currentFtp: function() {\n\t        return this.current_user && this.options.ftp_upload_site;\n\t    },\n\t\n\t    /**\n\t      * Package API data from array of models\n\t      * @param{Array} items - Upload items/rows filtered from a collection\n\t    */\n\t    toData: function( items, history_id ) {\n\t        // create dictionary for data submission\n\t        var data = {\n\t            payload: {\n\t                'tool_id'       : 'upload1',\n\t                'history_id'    : history_id || this.currentHistory(),\n\t                'inputs'        : {}\n\t            },\n\t            files: [],\n\t            error_message: null\n\t        }\n\t        // add upload tools input data\n\t        if ( items && items.length > 0 ) {\n\t            var inputs = {};\n\t            inputs[ 'dbkey' ] = items[0].get( 'genome', null );\n\t            inputs[ 'file_type' ] = items[0].get( 'extension', null );\n\t            for ( var index in items ) {\n\t                var it = items[ index ];\n\t                it.set( 'status', 'running' );\n\t                if ( it.get( 'file_size' ) > 0 ) {\n\t                    var prefix = 'files_' + index + '|';\n\t                    inputs[ prefix + 'type' ] = 'upload_dataset';\n\t                    inputs[ prefix + 'space_to_tab' ] = it.get( 'space_to_tab' ) && 'Yes' || null;\n\t                    inputs[ prefix + 'to_posix_lines' ] = it.get( 'to_posix_lines' ) && 'Yes' || null;\n\t                    switch ( it.get( 'file_mode' ) ) {\n\t                        case 'new':\n\t                            inputs[ prefix + 'url_paste' ] = it.get( 'url_paste' );\n\t                            break;\n\t                        case 'ftp':\n\t                            inputs[ prefix + 'ftp_files' ] = it.get( 'file_path' );\n\t                            break;\n\t                        case 'local':\n\t                            data.files.push( { name: prefix + 'file_data', file: it.get( 'file_data' ) } );\n\t                    }\n\t                } else {\n\t                    data.error_message = 'Upload content incomplete.';\n\t                    it.set( 'status', 'error' );\n\t                    it.set( 'info', data.error_message );\n\t                    break;\n\t                }\n\t            }\n\t            data.payload.inputs = JSON.stringify( inputs );\n\t        }\n\t        return data;\n\t    }\n\t});\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( baseMVC, _l ){\n\t\n\tvar logNamespace = 'user';\n\t//==============================================================================\n\t/** @class View to display a user's disk/storage usage\n\t *      either as a progress bar representing the percentage of a quota used\n\t *      or a simple text element displaying the human readable size used.\n\t *  @name UserQuotaMeter\n\t *  @augments Backbone.View\n\t */\n\tvar UserQuotaMeter = Backbone.View.extend( baseMVC.LoggableMixin ).extend(\n\t/** @lends UserQuotaMeter.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    /** Defaults for optional settings passed to initialize */\n\t    options : {\n\t        warnAtPercent   : 85,\n\t        errorAtPercent  : 100\n\t    },\n\t\n\t    /** Set up, accept options, and bind events */\n\t    initialize : function( options ){\n\t        this.log( this + '.initialize:', options );\n\t        _.extend( this.options, options );\n\t\n\t        //this.bind( 'all', function( event, data ){ this.log( this + ' event:', event, data ); }, this );\n\t        this.model.bind( 'change:quota_percent change:total_disk_usage', this.render, this );\n\t    },\n\t\n\t    /** Re-load user model data from the api */\n\t    update : function( options ){\n\t        this.log( this + ' updating user data...', options );\n\t        this.model.loadFromApi( this.model.get( 'id' ), options );\n\t        return this;\n\t    },\n\t\n\t    /** Is the user over their quota (if there is one)?\n\t     * @returns {Boolean} true if over quota, false if no quota or under quota\n\t     */\n\t    isOverQuota : function(){\n\t        return ( this.model.get( 'quota_percent' ) !== null\n\t              && this.model.get( 'quota_percent' ) >= this.options.errorAtPercent );\n\t    },\n\t\n\t    /** Render the meter when they have an applicable quota. Will render as a progress bar\n\t     *      with their percentage of that quota in text over the bar.\n\t     *  @fires quota:over when user is over quota (>= this.errorAtPercent)\n\t     *  @fires quota:under when user is under quota\n\t     *  @fires quota:under:approaching when user is >= this.warnAtPercent of their quota\n\t     *  @fires quota:under:ok when user is below this.warnAtPercent\n\t     *  @returns {jQuery} the rendered meter\n\t     */\n\t    _render_quota : function(){\n\t        var modelJson = this.model.toJSON(),\n\t            //prevPercent = this.model.previous( 'quota_percent' ),\n\t            percent = modelJson.quota_percent,\n\t            //meter = $( UserQuotaMeter.templates.quota( modelJson ) );\n\t            $meter = $( this._templateQuotaMeter( modelJson ) ),\n\t            $bar = $meter.find( '.progress-bar' );\n\t        //this.log( this + '.rendering quota, percent:', percent, 'meter:', meter );\n\t\n\t        // OVER QUOTA: color the quota bar and show the quota error message\n\t        if( this.isOverQuota() ){\n\t            //this.log( '\\t over quota' );\n\t            $bar.attr( 'class', 'progress-bar progress-bar-danger' );\n\t            $meter.find( '.quota-meter-text' ).css( 'color', 'white' );\n\t            //TODO: only trigger event if state has changed\n\t            this.trigger( 'quota:over', modelJson );\n\t\n\t        // APPROACHING QUOTA: color the quota bar\n\t        } else if( percent >= this.options.warnAtPercent ){\n\t            //this.log( '\\t approaching quota' );\n\t            $bar.attr( 'class', 'progress-bar progress-bar-warning' );\n\t            //TODO: only trigger event if state has changed\n\t            this.trigger( 'quota:under quota:under:approaching', modelJson );\n\t\n\t        // otherwise, hide/don't use the msg box\n\t        } else {\n\t            $bar.attr( 'class', 'progress-bar progress-bar-success' );\n\t            //TODO: only trigger event if state has changed\n\t            this.trigger( 'quota:under quota:under:ok', modelJson );\n\t        }\n\t        return $meter;\n\t    },\n\t\n\t    /** Render the meter when the user has NO applicable quota. Will render as text\n\t     *      showing the human readable sum storage their data is using.\n\t     *  @returns {jQuery} the rendered text\n\t     */\n\t    _render_usage : function(){\n\t        //var usage = $( UserQuotaMeter.templates.usage( this.model.toJSON() ) );\n\t        var usage = $( this._templateUsage( this.model.toJSON() ) );\n\t        this.log( this + '.rendering usage:', usage );\n\t        return usage;\n\t    },\n\t\n\t    /** Render either the quota percentage meter or the human readable disk usage\n\t     *      depending on whether the user model has quota info (quota_percent === null -> no quota)\n\t     *  @returns {Object} this UserQuotaMeter\n\t     */\n\t    render : function(){\n\t        //this.log( this + '.rendering' );\n\t        var meterHtml = null;\n\t\n\t        // no quota on server ('quota_percent' === null (can be valid at 0)), show usage instead\n\t        this.log( this + '.model.quota_percent:', this.model.get( 'quota_percent' ) );\n\t        if( ( this.model.get( 'quota_percent' ) === null )\n\t        ||  ( this.model.get( 'quota_percent' ) === undefined ) ){\n\t            meterHtml = this._render_usage();\n\t\n\t        // otherwise, render percent of quota (and warning, error)\n\t        } else {\n\t            meterHtml = this._render_quota();\n\t            //TODO: add the original text for unregistered quotas\n\t            //tooltip = \"Your disk quota is %s.  You can increase your quota by registering a Galaxy account.\"\n\t        }\n\t\n\t        this.$el.html( meterHtml );\n\t        this.$el.find( '.quota-meter-text' ).tooltip();\n\t        return this;\n\t    },\n\t\n\t    _templateQuotaMeter : function( data ){\n\t        return [\n\t            '<div id=\"quota-meter\" class=\"quota-meter progress\">',\n\t                '<div class=\"progress-bar\" style=\"width: ', data.quota_percent, '%\"></div>',\n\t                '<div class=\"quota-meter-text\" style=\"top: 6px\"',\n\t                    (( data.nice_total_disk_usage )?( ' title=\"Using ' + data.nice_total_disk_usage + '\">' ):( '>' )),\n\t                    _l( 'Using' ), ' ', data.quota_percent, '%',\n\t                '</div>',\n\t            '</div>'\n\t        ].join( '' );\n\t    },\n\t\n\t    _templateUsage : function( data ){\n\t        return [\n\t            '<div id=\"quota-meter\" class=\"quota-meter\" style=\"background-color: transparent\">',\n\t                '<div class=\"quota-meter-text\" style=\"top: 6px; color: white\">',\n\t                    (( data.nice_total_disk_usage )?( _l( 'Using ' ) + data.nice_total_disk_usage ):( '' )),\n\t                '</div>',\n\t            '</div>'\n\t        ].join( '' );\n\t    },\n\t\n\t    toString : function(){\n\t        return 'UserQuotaMeter(' + this.model + ')';\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\treturn {\n\t    UserQuotaMeter : UserQuotaMeter\n\t};}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n/* 114 */,\n/* 115 */,\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Handlebars) {this[\"Handlebars\"] = this[\"Handlebars\"] || {};\n\tthis[\"Handlebars\"][\"templates\"] = this[\"Handlebars\"][\"templates\"] || {};\n\t\n\tthis[\"Handlebars\"][\"templates\"][\"panel_section\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n\t    var helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\t\n\t  return \"<div class=\\\"toolSectionTitle\\\" id=\\\"title_\"\n\t    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"\\\">\\n    <a href=\\\"javascript:void(0)\\\"><span>\"\n\t    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"name\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"</span></a>\\n</div>\\n<div id=\\\"\"\n\t    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"\\\" class=\\\"toolSectionBody\\\" style=\\\"display: none; \\\">\\n    <div class=\\\"toolSectionBg\\\"></div>\\n<div>\";\n\t},\"useData\":true});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Handlebars) {this[\"Handlebars\"] = this[\"Handlebars\"] || {};\n\tthis[\"Handlebars\"][\"templates\"] = this[\"Handlebars\"][\"templates\"] || {};\n\t\n\tthis[\"Handlebars\"][\"templates\"][\"tool_form\"] = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n\t    var stack1, helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\t\n\t  return \"        <div class=\\\"form-row\\\">\\n            <label for=\\\"\"\n\t    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"name\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"\\\">\"\n\t    + alias3(((helper = (helper = helpers.label || (depth0 != null ? depth0.label : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"label\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \":</label>\\n            <div class=\\\"form-row-input\\\">\\n                \"\n\t    + ((stack1 = ((helper = (helper = helpers.html || (depth0 != null ? depth0.html : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"html\",\"hash\":{},\"data\":data}) : helper))) != null ? stack1 : \"\")\n\t    + \"\\n            </div>\\n            <div class=\\\"toolParamHelp\\\" style=\\\"clear: both;\\\">\\n                \"\n\t    + alias3(((helper = (helper = helpers.help || (depth0 != null ? depth0.help : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"help\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"\\n            </div>\\n            <div style=\\\"clear: both;\\\"></div>\\n        </div>\\n\";\n\t},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n\t    var stack1, helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\t\n\t  return \"<div class=\\\"toolFormTitle\\\">\"\n\t    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"name\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \" (version \"\n\t    + alias3(((helper = (helper = helpers.version || (depth0 != null ? depth0.version : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"version\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \")</div>\\n    <div class=\\\"toolFormBody\\\">\\n\"\n\t    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.inputs : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n\t    + \"    </div>\\n    <div class=\\\"form-row form-actions\\\">\\n    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"runtool_btn\\\" value=\\\"Execute\\\">\\n</div>\\n<div class=\\\"toolHelp\\\">\\n    <div class=\\\"toolHelpBody\\\">\"\n\t    + alias3(((helper = (helper = helpers.help || (depth0 != null ? depth0.help : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"help\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"</div>\\n</div>\";\n\t},\"useData\":true});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Handlebars) {this[\"Handlebars\"] = this[\"Handlebars\"] || {};\n\tthis[\"Handlebars\"][\"templates\"] = this[\"Handlebars\"][\"templates\"] || {};\n\t\n\tthis[\"Handlebars\"][\"templates\"][\"tool_link\"] = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n\t    var alias1=this.lambda, alias2=this.escapeExpression;\n\t\n\t  return \"<span class=\\\"label label-default label-\"\n\t    + alias2(alias1(depth0, depth0))\n\t    + \"\\\">\"\n\t    + alias2(alias1(depth0, depth0))\n\t    + \"</span> \";\n\t},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n\t    var stack1, helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\t\n\t  return \"<span class=\\\"labels\\\">\"\n\t    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.labels : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n\t    + \"</span>\\n<a class=\\\"\"\n\t    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \" tool-link\\\" href=\\\"\"\n\t    + alias3(((helper = (helper = helpers.link || (depth0 != null ? depth0.link : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"link\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"\\\" target=\\\"\"\n\t    + alias3(((helper = (helper = helpers.target || (depth0 != null ? depth0.target : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"target\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"\\\" minsizehint=\\\"\"\n\t    + alias3(((helper = (helper = helpers.min_width || (depth0 != null ? depth0.min_width : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"min_width\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"\\\">\"\n\t    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"name\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"</a>\\n\"\n\t    + alias3(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"description\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"\\n\";\n\t},\"useData\":true});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Handlebars) {this[\"Handlebars\"] = this[\"Handlebars\"] || {};\n\tthis[\"Handlebars\"][\"templates\"] = this[\"Handlebars\"][\"templates\"] || {};\n\t\n\tthis[\"Handlebars\"][\"templates\"][\"tool_search\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n\t    var helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\t\n\t  return \"<input type=\\\"text\\\" name=\\\"query\\\" placeholder=\\\"\"\n\t    + alias3(((helper = (helper = helpers.search_hint_string || (depth0 != null ? depth0.search_hint_string : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"search_hint_string\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"\\\" id=\\\"tool-search-query\\\" autocomplete=\\\"off\\\" class=\\\"search-query parent-width\\\" />\\n<a id=\\\"search-clear-btn\\\" title=\\\"clear search (esc)\\\"> </a>\\n<img src=\\\"\"\n\t    + alias3(((helper = (helper = helpers.spinner_url || (depth0 != null ? depth0.spinner_url : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"spinner_url\",\"hash\":{},\"data\":data}) : helper)))\n\t    + \"\\\" id=\\\"search-spinner\\\" class=\\\"search-spinner\\\"/>\\n\";\n\t},\"useData\":true});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(jQuery, $) {(function (root, factory) {\n\t    if (true) {\n\t        // AMD. Register as an anonymous module.\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else {\n\t        // Browser globals\n\t        root.LoadingIndicator = factory();\n\t    }\n\t\n\t//============================================================================\n\t}(this, function () {\n\t    //TODO: too specific to history panel\n\t    function LoadingIndicator( $where, options ){\n\t\n\t        var self = this;\n\t        // defaults\n\t        options = jQuery.extend({\n\t            cover       : false\n\t        }, options || {} );\n\t\n\t        function render(){\n\t            var html = [\n\t                '<div class=\"loading-indicator\">',\n\t                    '<div class=\"loading-indicator-text\">',\n\t                        '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>',\n\t                        '<span class=\"loading-indicator-message\">loading...</span>',\n\t                    '</div>',\n\t                '</div>'\n\t            ].join( '\\n' );\n\t\n\t            var $indicator = $( html ).hide().css( options.css || {\n\t                    position    : 'fixed'\n\t                }),\n\t                $text = $indicator.children( '.loading-indicator-text' );\n\t\n\t            if( options.cover ){\n\t                $indicator.css({\n\t                    'z-index'   : 2,\n\t                    top         : $where.css( 'top' ),\n\t                    bottom      : $where.css( 'bottom' ),\n\t                    left        : $where.css( 'left' ),\n\t                    right       : $where.css( 'right' ),\n\t                    opacity     : 0.5,\n\t                    'background-color': 'white',\n\t                    'text-align': 'center'\n\t                });\n\t                $text = $indicator.children( '.loading-indicator-text' ).css({\n\t                    'margin-top'        : '20px'\n\t                });\n\t\n\t            } else {\n\t                $text = $indicator.children( '.loading-indicator-text' ).css({\n\t                    margin              : '12px 0px 0px 10px',\n\t                    opacity             : '0.85',\n\t                    color               : 'grey'\n\t                });\n\t                $text.children( '.loading-indicator-message' ).css({\n\t                    margin          : '0px 8px 0px 0px',\n\t                    'font-style'    : 'italic'\n\t                });\n\t            }\n\t            return $indicator;\n\t        }\n\t\n\t        self.show = function( msg, speed, callback ){\n\t            msg = msg || 'loading...';\n\t            speed = speed || 'fast';\n\t            // remove previous\n\t            $where.parent().find( '.loading-indicator' ).remove();\n\t            // since position is fixed - we insert as sibling\n\t            self.$indicator = render().insertBefore( $where );\n\t            self.message( msg );\n\t            self.$indicator.fadeIn( speed, callback );\n\t            return self;\n\t        };\n\t\n\t        self.message = function( msg ){\n\t            self.$indicator.find( 'i' ).text( msg );\n\t        };\n\t\n\t        self.hide = function( speed, callback ){\n\t            speed = speed || 'fast';\n\t            if( self.$indicator && self.$indicator.size() ){\n\t                self.$indicator.fadeOut( speed, function(){\n\t                    self.$indicator.remove();\n\t                    if( callback ){ callback(); }\n\t                });\n\t            } else {\n\t                if( callback ){ callback(); }\n\t            }\n\t            return self;\n\t        };\n\t        return self;\n\t    }\n\t\n\t//============================================================================\n\t    return LoadingIndicator;\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(1)))\n\n/***/ },\n/* 121 */,\n/* 122 */,\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {/**\n\t *  This class defines a queue to ensure that multiple deferred callbacks are executed sequentially.\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function( Utils ) {\n\treturn Backbone.Model.extend({\n\t    initialize: function(){\n\t        this.active = {};\n\t        this.last = null;\n\t    },\n\t\n\t    /** Adds a callback to the queue. Upon execution a deferred object is parsed to the callback i.e. callback( deferred ).\n\t     *  If the callback does not take any arguments, the deferred is resolved instantly.\n\t    */\n\t    execute: function( callback ) {\n\t        var self = this;\n\t        var id = Utils.uid();\n\t        var has_deferred = callback.length > 0;\n\t\n\t        // register process\n\t        this.active[ id ] = true;\n\t\n\t        // deferred process\n\t        var process = $.Deferred();\n\t        process.promise().always(function() {\n\t            delete self.active[ id ];\n\t            has_deferred && console.debug( 'Deferred::execute() - ' + this.state() + ' ' + id );\n\t        });\n\t\n\t        // deferred queue\n\t        $.when( this.last ).always(function() {\n\t            if ( self.active[ id ] ) {\n\t                has_deferred && console.debug( 'Deferred::execute() - running ' + id );\n\t                callback( process );\n\t                !has_deferred && process.resolve();\n\t            } else {\n\t                process.reject();\n\t            }\n\t        });\n\t        this.last = process.promise();\n\t    },\n\t\n\t    /** Resets the promise queue. All currently queued but unexecuted callbacks/promises will be rejected.\n\t    */\n\t    reset: function() {\n\t        console.debug('Deferred::execute() - reset');\n\t        for ( var i in this.active ) {\n\t            this.active[ i ] = false;\n\t        }\n\t    },\n\t\n\t    /** Returns true if all processes are done.\n\t    */\n\t    ready: function() {\n\t        return $.isEmptyObject( this.active );\n\t    }\n\t});\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function(){\n\t//=============================================================================\n\t/**\n\t(Imported for edit distance algorith. From: https://gist.github.com/andrei-m/982927)\n\tCopyright (c) 2011 Andrei Mackenzie\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n\tdocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\n\trights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\n\tpersons to whom the Software is furnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\n\tSoftware.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n\tWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n\tCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\tOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t*/\n\t// Compute the edit distance between the two given strings\n\t//exports.getEditDistance = function(a, b){\n\tfunction levenshteinDistance(a, b){\n\t  if(a.length === 0){ return b.length; }\n\t  if(b.length === 0){ return a.length; }\n\t\n\t  var matrix = [];\n\t\n\t  // increment along the first column of each row\n\t  var i;\n\t  for(i = 0; i <= b.length; i++){\n\t    matrix[i] = [i];\n\t  }\n\t\n\t  // increment each column in the first row\n\t  var j;\n\t  for(j = 0; j <= a.length; j++){\n\t    matrix[0][j] = j;\n\t  }\n\t\n\t  // Fill in the rest of the matrix\n\t  for(i = 1; i <= b.length; i++){\n\t    for(j = 1; j <= a.length; j++){\n\t      if(b.charAt(i-1) === a.charAt(j-1)){\n\t        matrix[i][j] = matrix[i-1][j-1];\n\t      } else {\n\t        matrix[i][j] = Math.min(matrix[i-1][j-1] + 1, // substitution\n\t                                Math.min(matrix[i][j-1] + 1, // insertion\n\t                                         matrix[i-1][j] + 1)); // deletion\n\t      }\n\t    }\n\t  }\n\t\n\t  //console.debug( '\\t\\t levenshteinDistance', a, b, matrix[b.length][a.length] );\n\t  return matrix[b.length][a.length];\n\t}\n\t\n\t//=============================================================================\n\t    return levenshteinDistance;\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** analysis.bundled.js\n **/","\nvar App = require( '../mvc/app/app-view' );\n\n//TODO: this doesn't address multiple apps per page\nwindow.app = function app( options, bootstrapped ){\n    $( function() {\n        var app = new App( options.config );\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/apps/analysis.js\n ** module id = 0\n ** module chunks = 2\n **/","/**\n * Galaxy utilities comprises small functions, which at this point\n * do not require their own classes/files\n*/\n\n// dependencies\ndefine([], function() {\n\n/** Traverse through json\n*/\nfunction deepeach(dict, callback) {\n    for (var i in dict) {\n        var d = dict[i];\n        if (d && typeof(d) == \"object\") {\n            callback(d);\n            deepeach(d, callback);\n        }\n    }\n}\n\n/**\n * Check if a string is a json string\n * @param{String}   text - Content to be validated\n */\nfunction isJSON(text) {\n    return /^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').\n        replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n        replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''));\n};\n\n/**\n * Sanitize/escape a string\n * @param{String}   content - Content to be sanitized\n */\nfunction sanitize(content) {\n    return $('<div/>').text(content).html();\n};\n\n/**\n * Validate atomic values or list of values\n * usually used for selectable options\n * @param{String}   value - Value or list to be validated\n */\nfunction validate (value) {\n    if (!(value instanceof Array)) {\n        value = [value];\n    }\n    if (value.length === 0) {\n        return false;\n    }\n    for (var i in value) {\n        if (['__null__', '__undefined__', null, undefined].indexOf(value[i]) > -1) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * Convert list to pretty string\n * @param{String}   lst - List of strings to be converted in human readable list sentence\n */\nfunction textify(lst) {\n    var lst = lst.toString();\n    if (lst) {\n        lst = lst.replace(/,/g, ', ');\n        var pos = lst.lastIndexOf(', ');\n        if (pos != -1) {\n            lst = lst.substr(0, pos) + ' or ' + lst.substr(pos+1);\n        }\n        return lst;\n    }\n    return '';\n};\n\n/**\n * Request handler for GET\n * @param{String}   url     - Url request is made to\n * @param{Function} success - Callback on success\n * @param{Function} error   - Callback on error\n * @param{Boolean}  cache   - Use cached data if available\n */\nfunction get (options) {\n    top.__utils__get__ = top.__utils__get__ || {};\n    if (options.cache && top.__utils__get__[options.url]) {\n        options.success && options.success(top.__utils__get__[options.url]);\n        console.debug('utils.js::get() - Fetching from cache [' + options.url + '].');\n    } else {\n        request({\n            url     : options.url,\n            data    : options.data,\n            success : function(response) {\n                top.__utils__get__[options.url] = response;\n                options.success && options.success(response);\n            },\n            error : function(response) {\n                options.error && options.error(response);\n            }\n        });\n    }\n};\n\n/**\n * Request handler\n * @param{String}   method  - Request method ['GET', 'POST', 'DELETE', 'PUT']\n * @param{String}   url     - Url request is made to\n * @param{Object}   data    - Data send to url\n * @param{Function} success - Callback on success\n * @param{Function} error   - Callback on error\n */\nfunction request (options) {\n    // prepare ajax\n    var ajaxConfig = {\n        contentType : 'application/json',\n        type        : options.type || 'GET',\n        data        : options.data || {},\n        url         : options.url\n    }\n\n    // encode data into url\n    if (ajaxConfig.type == 'GET' || ajaxConfig.type == 'DELETE') {\n        if (ajaxConfig.url.indexOf('?') == -1) {\n            ajaxConfig.url += '?';\n        } else {\n            ajaxConfig.url += '&';\n        }\n        ajaxConfig.url      = ajaxConfig.url + $.param(ajaxConfig.data, true);\n        ajaxConfig.data     = null;\n    } else {\n        ajaxConfig.dataType = 'json';\n        ajaxConfig.url      = ajaxConfig.url;\n        ajaxConfig.data     = JSON.stringify(ajaxConfig.data);\n    }\n\n    // make request\n    $.ajax(ajaxConfig)\n    .done(function(response) {\n        if (typeof response === 'string') {\n            try {\n                response = response.replace('Infinity,', '\"Infinity\",');\n                response = jQuery.parseJSON(response);\n            } catch (e) {\n                console.debug(e);\n            }\n        }\n        options.success && options.success(response);\n    })\n    .fail(function(response) {\n        var response_text = null;\n        try {\n            response_text = jQuery.parseJSON(response.responseText);\n        } catch (e) {\n            response_text = response.responseText;\n        }\n        options.error && options.error(response_text, response);\n    });\n};\n\n/**\n * Read a property value from CSS\n * @param{String}   classname   - CSS class\n * @param{String}   name        - CSS property\n */\nfunction cssGetAttribute (classname, name) {\n    var el = $('<div class=\"' + classname + '\"></div>');\n    el.appendTo(':eq(0)');\n    var value = el.css(name);\n    el.remove();\n    return value;\n};\n\n/**\n * Load a CSS file\n * @param{String}   url - Url of CSS file\n */\nfunction cssLoadFile (url) {\n    if (!$('link[href^=\"' + url + '\"]').length) {\n        $('<link href=\"' + galaxy_config.root + url + '\" rel=\"stylesheet\">').appendTo('head');\n    }\n};\n\n/**\n * Safely merge to dictionaries\n * @param{Object}   options         - Target dictionary\n * @param{Object}   optionsDefault  - Source dictionary\n */\nfunction merge (options, optionsDefault) {\n    if (options) {\n        return _.defaults(options, optionsDefault);\n    } else {\n        return optionsDefault;\n    }\n};\n\n\n/**\n * Round floaing point 'number' to 'numPlaces' number of decimal places.\n * @param{Object}   number      a floaing point number\n * @param{Object}   numPlaces   number of decimal places\n */\nfunction roundToDecimalPlaces( number, numPlaces ){\n    var placesMultiplier = 1;\n    for( var i=0; i<numPlaces; i++ ){\n        placesMultiplier *= 10;\n    }\n    return Math.round( number * placesMultiplier ) / placesMultiplier;\n}\n\n// calculate on import\nvar kb = 1024,\n    mb = kb * kb,\n    gb = mb * kb,\n    tb = gb * kb;\n/**\n * Format byte size to string with units\n * @param{Integer}   size           - Size in bytes\n * @param{Boolean}   normal_font    - Switches font between normal and bold\n */\nfunction bytesToString (size, normal_font, numberPlaces) {\n    numberPlaces = numberPlaces !== undefined? numberPlaces: 1;\n    // identify unit\n    var unit = \"\";\n    if (size >= tb){ size = size / tb; unit = 'TB'; } else\n    if (size >= gb){ size = size / gb; unit = 'GB'; } else\n    if (size >= mb){ size = size / mb; unit = 'MB'; } else\n    if (size >= kb){ size = size / kb; unit = 'KB'; } else\n    if (size >  0){ unit = 'b'; }\n    else { return normal_font? '0 b': '<strong>-</strong>'; }\n    // return formatted string\n    var rounded = unit == 'b'? size: roundToDecimalPlaces( size, numberPlaces );\n    if (normal_font) {\n       return  rounded + ' ' + unit;\n    } else {\n        return '<strong>' + rounded + '</strong> ' + unit;\n    }\n};\n\n/**\n * Create a unique id\n */\nfunction uid(){\n    top.__utils__uid__ = top.__utils__uid__ || 0;\n    return 'uid-' + top.__utils__uid__++;\n};\n\n/**\n * Create a time stamp\n */\nfunction time() {\n    var d = new Date();\n    var hours = (d.getHours() < 10 ? \"0\" : \"\") + d.getHours();\n    var minutes = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes()\n    return datetime = d.getDate() + \"/\"\n                + (d.getMonth() + 1)  + \"/\"\n                + d.getFullYear() + \", \"\n                + hours + \":\"\n                + minutes;\n};\n\nreturn {\n    cssLoadFile: cssLoadFile,\n    cssGetAttribute: cssGetAttribute,\n    get: get,\n    merge: merge,\n    bytesToString: bytesToString,\n    uid: uid,\n    time: time,\n    request: request,\n    sanitize: sanitize,\n    textify: textify,\n    validate: validate,\n    deepeach: deepeach,\n    isJSON: isJSON\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/utils/utils.js\n ** module id = 4\n ** module chunks = 2\n **/","/**\n *  This class contains backbone wrappers for basic ui elements such as Images, Labels, Buttons, Input fields etc.\n */\ndefine(['utils/utils',\n    'mvc/ui/ui-select-default',\n    'mvc/ui/ui-slider',\n    'mvc/ui/ui-options',\n    'mvc/ui/ui-drilldown',\n    'mvc/ui/ui-buttons',\n    'mvc/ui/ui-modal'],\n    function( Utils, Select, Slider, Options, Drilldown, Buttons, Modal ) {\n\n    /** Image wrapper */\n    var Image = Backbone.View.extend({\n        initialize : function(options) {\n            this.options = Utils.merge(options, {\n                url  : '',\n                cls  : ''\n            });\n            this.setElement(this._template(this.options));\n        },\n        _template: function(options) {\n            return '<img class=\"ui-image ' + options.cls + '\" src=\"' + options.url + '\"/>';\n        }\n    });\n\n    /** Label wrapper */\n    var Label = Backbone.View.extend({\n        initialize : function(options) {\n            this.options = Utils.merge(options, {\n                title  : '',\n                cls    : ''\n            });\n            this.setElement(this._template(this.options));\n        },\n        title: function(new_title) {\n            this.$el.html(new_title);\n        },\n        value: function() {\n            return options.title;\n        },\n        _template: function(options) {\n            return '<label class=\"ui-label ' + options.cls + '\">' + options.title + '</label>';\n        }\n    });\n\n    /** Displays an icon with title */\n    var Icon = Backbone.View.extend({\n        initialize : function(options) {\n            this.options = Utils.merge(options, {\n                floating    : 'right',\n                icon        : '',\n                tooltip     : '',\n                placement   : 'bottom',\n                title       : '',\n                cls         : ''\n            });\n            this.setElement(this._template(this.options));\n            $(this.el).tooltip({title: options.tooltip, placement: 'bottom'});\n        },\n        _template: function(options) {\n            return  '<div>' +\n                        '<span class=\"fa ' + options.icon + '\" class=\"ui-icon\"/>&nbsp;' +\n                        options.title +\n                    '</div>';\n        }\n    });\n\n    /** Renders an anchor element */\n    var Anchor = Backbone.View.extend({\n        initialize : function(options) {\n            this.options = Utils.merge(options, {\n                title  : '',\n                cls    : ''\n            });\n            this.setElement(this._template(this.options));\n            $(this.el).on('click', options.onclick);\n        },\n        _template: function(options) {\n            return '<div><a href=\"javascript:void(0)\" class=\"ui-anchor ' + options.cls + '\">' + options.title + '</a></div>';\n        }\n    });\n\n    /** Displays messages used e.g. in the tool form */\n    var Message = Backbone.View.extend({\n        initialize : function(options) {\n            this.options = Utils.merge(options, {\n                message     : null,\n                status      : 'info',\n                cls         : '',\n                persistent  : false\n            });\n            this.setElement('<div class=\"' + this.options.cls + '\"/>');\n            this.options.message && this.update(this.options);\n        },\n\n        // update\n        update: function(options) {\n            // get options\n            this.options = Utils.merge(options, this.options);\n\n            // show message\n            if (options.message != '') {\n                this.$el.html(this._template(this.options));\n                this.$el.fadeIn();\n\n                // clear previous timeouts\n                if (this.timeout) {\n                    window.clearTimeout(this.timeout);\n                }\n\n                // set timeout if message is not persistent\n                if (!options.persistent) {\n                    var self = this;\n                    this.timeout = window.setTimeout(function() {\n                        if (self.$el.is(':visible')) {\n                            self.$el.fadeOut();\n                        } else {\n                            self.$el.hide();\n                        }\n                    }, 3000);\n                }\n            } else {\n                this.$el.fadeOut();\n            }\n        },\n\n        // template\n        _template: function(options) {\n            var cls_status = 'ui-message alert alert-' + options.status;\n            if (options.large) {\n                cls_status = ( ( options.status == 'success' && 'done' ) ||\n                               ( options.status == 'danger' && 'error' ) ||\n                                 options.status ) + 'messagelarge';\n            }\n            return  '<div class=\"' + cls_status + '\" >' +\n                        options.message +\n                    '</div>';\n        }\n    });\n\n    /** Render a search box */\n    var Searchbox = Backbone.View.extend({\n        initialize : function(options) {\n            this.options = Utils.merge(options, {\n                onclick : null,\n                searchword : ''\n            });\n            this.setElement(this._template(this.options));\n            var self = this;\n            if (this.options.onclick) {\n                this.$el.on('submit', function(e) {\n                    var search_field = self.$el.find('#search');\n                    self.options.onclick(search_field.val());\n                });\n            }\n        },\n        _template: function(options) {\n            return  '<div class=\"ui-search\">' +\n                        '<form onsubmit=\"return false;\">' +\n                            '<input id=\"search\" class=\"form-control input-sm\" type=\"text\" name=\"search\" placeholder=\"Search...\" value=\"' + options.searchword + '\">' +\n                            '<button type=\"submit\" class=\"btn search-btn\">' +\n                                '<i class=\"fa fa-search\"></i>' +\n                            '</button>' +\n                        '</form>' +\n                    '</div>';\n        }\n    });\n\n    /** Renders an input element used e.g. in the tool form */\n    var Input = Backbone.View.extend({\n        initialize : function(options) {\n            // configure options\n            this.options = Utils.merge(options, {\n                type            : 'text',\n                placeholder     : '',\n                disabled        : false,\n                visible         : true,\n                cls             : '',\n                area            : false\n            });\n\n            // create new element\n            this.setElement(this._template(this.options));\n\n            // set initial value\n            if (this.options.value !== undefined) {\n                this.value(this.options.value);\n            }\n\n            // disable input field\n            if (this.options.disabled) {\n                this.$el.prop('disabled', true);\n            }\n\n            // hide input field\n            if (!this.options.visible) {\n                this.$el.hide();\n            }\n\n            // onchange event handler. fires on user activity.\n            var self = this;\n            this.$el.on('input', function() {\n                if (self.options.onchange) {\n                    self.options.onchange(self.$el.val());\n                }\n            });\n        },\n\n        // value\n        value : function (new_val) {\n            if (new_val !== undefined) {\n                this.$el.val(new_val);\n            }\n            return this.$el.val();\n        },\n\n        // template\n        _template: function(options) {\n            if (options.area) {\n                return '<textarea id=\"' + options.id + '\" class=\"ui-textarea ' + options.cls + '\"></textarea>';\n            } else {\n                return '<input id=\"' + options.id + '\" type=\"' + options.type + '\" value=\"' + options.value + '\" placeholder=\"' + options.placeholder + '\" class=\"ui-input ' + options.cls + '\">';\n            }\n        }\n    });\n\n    /** Creates a hidden element input field used e.g. in the tool form */\n    var Hidden = Backbone.View.extend({\n        initialize : function(options) {\n            this.options = options;\n            this.setElement(this._template(this.options));\n            if (this.options.value !== undefined) {\n                this.value(this.options.value);\n            }\n        },\n        value : function (new_val) {\n            if (new_val !== undefined) {\n                this.$('hidden').val(new_val);\n            }\n            return this.$('hidden').val();\n        },\n        _template: function(options) {\n            var tmpl =  '<div id=\"' + options.id + '\" >';\n            if (options.info) {\n                tmpl +=     '<div>' + options.info + '</div>';\n            }\n            tmpl +=         '<hidden value=\"' + options.value + '\"/>' +\n                        '</div>';\n            return tmpl;\n        }\n    });\n\n    return {\n        Anchor      : Anchor,\n        Button      : Buttons.ButtonDefault,\n        ButtonIcon  : Buttons.ButtonIcon,\n        ButtonCheck : Buttons.ButtonCheck,\n        ButtonMenu  : Buttons.ButtonMenu,\n        ButtonLink  : Buttons.ButtonLink,\n        Icon        : Icon,\n        Image       : Image,\n        Input       : Input,\n        Label       : Label,\n        Message     : Message,\n        Modal       : Modal,\n        RadioButton : Options.RadioButton,\n        Checkbox    : Options.Checkbox,\n        Radio       : Options.Radio,\n        Searchbox   : Searchbox,\n        Select      : Select,\n        Hidden      : Hidden,\n        Slider      : Slider,\n        Drilldown   : Drilldown\n    }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-misc.js\n ** module id = 7\n ** module chunks = 2\n **/","define([\n], function(){\n//==============================================================================\n/** Map of possible HDA/collection/job states to their string equivalents.\n *      A port of galaxy.model.Dataset.states.\n */\nvar STATES = {\n    // NOT ready states\n    /** is uploading and not ready */\n    UPLOAD              : 'upload',\n    /** the job that will produce the dataset queued in the runner */\n    QUEUED              : 'queued',\n    /** the job that will produce the dataset is running */\n    RUNNING             : 'running',\n    /** metadata for the dataset is being discovered/set */\n    SETTING_METADATA    : 'setting_metadata',\n\n    // ready states\n    /** was created without a tool */\n    NEW                 : 'new',\n    /** has no data */\n    EMPTY               : 'empty',\n    /** has successfully completed running */\n    OK                  : 'ok',\n\n    /** the job that will produce the dataset paused */\n    PAUSED              : 'paused',\n    /** metadata discovery/setting failed or errored (but otherwise ok) */\n    FAILED_METADATA     : 'failed_metadata',\n//TODO: not in trans.app.model.Dataset.states - is in database\n    /** not accessible to the current user (i.e. due to permissions) */\n    NOT_VIEWABLE        : 'noPermission',\n    /** deleted while uploading */\n    DISCARDED           : 'discarded',\n    /** the tool producing this dataset failed */\n    ERROR               : 'error'\n};\n\nSTATES.READY_STATES = [\n    STATES.OK,\n    STATES.EMPTY,\n    STATES.PAUSED,\n    STATES.FAILED_METADATA,\n    STATES.NOT_VIEWABLE,\n    STATES.DISCARDED,\n    STATES.ERROR\n];\n\nSTATES.NOT_READY_STATES = [\n    STATES.UPLOAD,\n    STATES.QUEUED,\n    STATES.RUNNING,\n    STATES.SETTING_METADATA,\n    STATES.NEW\n];\n\n\n//==============================================================================\n    return STATES;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/dataset/states.js\n ** module id = 9\n ** module chunks = 2\n **/","define([], function() {\n\nvar View = Backbone.View.extend({\n\n    // base element\n    elMain: 'body',\n    \n    // defaults options\n    optionsDefault: {\n        title            : 'ui-modal',\n        body             : '',\n        backdrop         : true,\n        height           : null,\n        width            : null,\n        closing_events   : false,\n        closing_callback : null,\n        title_separator  : true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize : function(options) {\n        if (options){\n            this._create(options);\n        }\n    },\n    \n    // adds and displays a new frame/window\n    show: function(options) {\n        // create\n        this.initialize(options);\n        \n        // fix height\n        if (this.options.height){\n            this.$body.css('height', this.options.height);\n            this.$body.css('overflow', 'hidden');\n        } else {\n            this.$body.css('max-height', $(window).height() / 2);\n        }\n\n        // fix width\n        if (this.options.width) {\n            this.$dialog.css('width', this.options.width);\n        }\n\n        // show\n        if (this.visible) {\n            this.$el.show();\n        } else {\n            this.$el.fadeIn('fast');\n        }\n\n        // set visible flag\n        this.visible = true;\n    },\n\n    // hide\n    hide: function() {\n        this.visible = false;\n        this.$el.fadeOut('fast');\n        if (this.options.closing_callback){\n            this.options.closing_callback();\n        }\n    },\n\n    // enable buttons\n    enableButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).prop('disabled', false);\n    },\n\n    // disable buttons\n    disableButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).prop('disabled', true);\n    },\n    \n    // show buttons\n    showButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).show();\n    },\n\n    // hide buttons\n    hideButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).hide();\n    },\n    \n    // get button\n    getButton: function(name) {\n        var button_id = this.buttonList[name];\n        return this.$buttons.find('#' + button_id);\n    },\n    \n    // returns scroll top for body element\n    scrollTop: function() {\n        return this.$body.scrollTop();\n    },\n\n    // create\n    _create: function(options) {\n        // link this\n        var self = this;\n        \n        // configure options\n        this.options = _.defaults(options, this.optionsDefault);\n        \n        // check for progress bar request\n        if (this.options.body == 'progress'){\n            this.options.body = $('<div class=\"progress progress-striped active\"><div class=\"progress-bar progress-bar-info\" style=\"width:100%\"></div></div>');\n        }\n            \n        // remove former element\n        if (this.$el) {\n            // remove element\n            this.$el.remove();\n            \n            // remove escape event\n            $(document).off('keyup.ui-modal');\n        }\n        \n        // create new element\n        this.setElement(this._template(this.options.title));\n        \n        // link elements\n        this.$dialog = (this.$el).find('.modal-dialog');\n        this.$body = (this.$el).find('.modal-body');\n        this.$footer  = (this.$el).find('.modal-footer');\n        this.$buttons = (this.$el).find('.buttons');\n        this.$backdrop = (this.$el).find('.modal-backdrop');\n        \n        // append body\n        this.$body.html(this.options.body);\n        \n        // configure background\n        if (!this.options.backdrop){\n            this.$backdrop.removeClass('in');\n        }\n                        \n        // append buttons\n        if (this.options.buttons) {\n            // reset button list\n            this.buttonList = {};\n            var counter = 0;\n            $.each(this.options.buttons, function(name, value) {\n                var button_id = 'button-' + counter++;\n                self.$buttons.append($('<button id=\"' + button_id + '\"></button>').text(name).click(value)).append(\" \");\n                self.buttonList[name] = button_id;\n            });\n        } else {\n            // hide footer\n            this.$footer.hide();\n        }\n        \n        // append to main element\n        $(this.elMain).append($(this.el));\n\n        // bind additional closing events\n        if (this.options.closing_events) {\n            // bind the ESC key to hide() function\n            $(document).on('keyup.ui-modal', function(e) {\n                if (e.keyCode == 27) {\n                    self.hide();\n                }\n            });\n            \n            // hide modal if background is clicked\n            this.$el.find('.modal-backdrop').on('click', function() { self.hide(); });\n        }\n\n        // removes the default separator line\n        if (!this.options.title_separator) {\n            this.$('.modal-header').css({ 'border': 'none', 'padding-bottom': '0px' });\n        }\n    },\n    \n    // fill regular modal template\n    _template: function(title) {\n        return  '<div class=\"ui-modal modal\">' +\n                    '<div class=\"modal-backdrop fade in\" style=\"z-index: -1;\"></div>' +\n                    '<div class=\"modal-dialog\">' +\n                        '<div class=\"modal-content\">' +\n                            '<div class=\"modal-header\">' +\n                                '<button type=\"button\" class=\"close\" style=\"display: none;\">&times;</button>' +\n                                '<h4 class=\"title\">' + title + '</h4>' +\n                            '</div>' +\n                            '<div class=\"modal-body\" style=\"position: static;\"></div>' +\n                            '<div class=\"modal-footer\">' +\n                                '<div class=\"buttons\" style=\"float: right;\"></div>' +\n                            '</div>' +\n                        '</div' +\n                    '</div>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View : View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-modal.js\n ** module id = 10\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils'], function(Utils) {\n\n// portlet view class\nvar View = Backbone.View.extend({\n    // visibility\n    visible: false,\n    \n    // defaults options\n    optionsDefault: {\n        id              : Utils.uid(),\n        title           : '',\n        icon            : '',\n        buttons         : null,\n        body            : null,\n        scrollable      : true,\n        nopadding       : false,\n        operations      : null,\n        placement       : 'bottom',\n        cls             : 'ui-portlet',\n        operations_flt  : 'right'\n    },\n    \n    // elements\n    $title : null,\n    $content : null,\n    $buttons : null,\n    $operations : null,\n    $header : null,\n    \n    // initialize\n    initialize : function(options) {\n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n        \n        // create new element\n        this.setElement(this._template(this.options));\n        \n        // link content\n        this.$content = this.$el.find('.content');\n        \n        // link title\n        this.$title = this.$el.find('.portlet-title-text');\n        \n        // link header\n        this.$header = this.$el.find('.portlet-header');\n        \n        // link portlet content (wraps 'content')\n        var $portlet_content = this.$el.find('.portlet-content');\n        \n        // set content padding\n        if (this.options.nopadding) {\n            $portlet_content.css('padding', '0px');\n            this.$content.css('padding', '0px');\n        }\n        \n        // append buttons\n        this.$buttons = $(this.el).find('.buttons');\n        if (this.options.buttons) {\n            // link functions\n            var self = this;\n            $.each(this.options.buttons, function(name, item) {\n                item.$el.prop('id', name);\n                self.$buttons.append(item.$el);\n            });\n        } else {\n            this.$buttons.remove();\n        }\n        \n        // append operations\n        this.$operations = $(this.el).find('.portlet-operations');\n        if (this.options.operations) {\n            // link functions\n            var self = this;\n            $.each(this.options.operations, function(name, item) {\n                item.$el.prop('id', name);\n                self.$operations.append(item.$el);\n            });\n        }\n        \n        // add body\n        if(this.options.body) {\n            this.append(this.options.body);\n        }\n    },\n    \n    // append\n    append: function($el) {\n        this.$content.append($el);\n    },\n\n    // remove all content\n    empty: function() {\n        this.$content.empty();\n    },\n\n    // content\n    content: function() {\n        return this.$content;\n    },\n    \n    // show\n    show: function(){\n        // fade in\n        this.$el.fadeIn('fast');\n        \n        // set flag\n        this.visible = true;\n    },\n    \n    // hide\n    hide: function(){\n        // fade out\n        this.$el.fadeOut('fast');\n        \n        // set flag\n        this.visible = false;\n    },\n\n    // enable buttons\n    enableButton: function(id) {\n        this.$buttons.find('#' + id).prop('disabled', false);\n    },\n\n    // disable buttons\n    disableButton: function(id) {\n        this.$buttons.find('#' + id).prop('disabled', true);\n    },\n    \n    // hide operation\n    hideOperation: function(id) {\n        this.$operations.find('#' + id).hide();\n    },\n\n    // show operation\n    showOperation: function(id) {\n        this.$operations.find('#' + id).show();\n    },\n    \n    // set operation\n    setOperation: function(id, callback) {\n        var $el = this.$operations.find('#' + id);\n        $el.off('click');\n        $el.on('click', callback);\n    },\n    \n    // title\n    title: function(new_title) {\n        var $el = this.$title;\n        if (new_title) {\n            $el.html(new_title);\n        }\n        return $el.html();\n    },\n\n    // disable content access\n    disable: function() {\n        this.$('.portlet-backdrop').show();\n    },\n\n    // enable content access\n    enable: function() {\n        this.$('.portlet-backdrop').hide();\n    },\n\n    // fill regular modal template\n    _template: function(options) {\n        var tmpl =  '<div id=\"' + options.id + '\" class=\"' + options.cls + '\">';\n        \n        if (options.title) {\n            tmpl +=     '<div class=\"portlet-header\">' +\n                            '<div class=\"portlet-operations\" style=\"float: ' + options.operations_flt + ';\"></div>' +\n                            '<div class=\"portlet-title\">';\n                            \n            if (options.icon)\n                tmpl +=         '<i class=\"icon fa ' + options.icon + '\">&nbsp;</i>';\n        \n            tmpl +=             '<span class=\"portlet-title-text\">' + options.title + '</span>' +\n                            '</div>' +\n                        '</div>';\n        }\n        tmpl +=         '<div class=\"portlet-content\">';\n        \n        if (options.placement == 'top') {\n            tmpl +=         '<div class=\"buttons\"></div>';\n        }\n        \n        tmpl +=             '<div class=\"content\"></div>';\n        \n        if (options.placement == 'bottom') {\n            tmpl +=         '<div class=\"buttons\"></div>';\n        }\n        \n        tmpl +=         '</div>' +\n                        '<div class=\"portlet-backdrop\"/>' +\n                    '</div>';\n        return tmpl;\n    }\n});\n\nreturn {\n    View : View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-portlet.js\n ** module id = 11\n ** module chunks = 2\n **/","// from: https://raw.githubusercontent.com/umdjs/umd/master/jqueryPlugin.js\n// Uses AMD or browser globals to create a jQuery plugin.\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        //TODO: So...this turns out to be an all or nothing thing. If I load jQuery in the define below, it will\n        //  (of course) wipe the old jquery *and all the plugins loaded into it*. So the define below *is still\n        //  relying on jquery being loaded globally* in order to preserve plugins.\n        define([ 'jquery' ], factory);\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n\n}(function ( jQuery ) {\n'use_strict';\n\nvar $ = jQuery;\n\n// ============================================================================\n/**\n * Make an element with text editable: (a) when user clicks on text, a textbox/area\n * is provided for editing; (b) when enter key pressed, element's text is set and on_finish\n * is called.\n */\n$.fn.make_text_editable = function(config_dict) {\n    // Get config options.\n    var num_cols = (\"num_cols\" in config_dict ? config_dict.num_cols : 30),\n        num_rows = (\"num_rows\" in config_dict ? config_dict.num_rows : 4),\n        use_textarea = (\"use_textarea\" in config_dict ? config_dict.use_textarea : false),\n        on_finish = (\"on_finish\" in config_dict ? config_dict.on_finish : null),\n        help_text = (\"help_text\" in config_dict ? config_dict.help_text : null);\n\n    // Add element behavior.\n    var container = $(this);\n    container.addClass(\"editable-text\").click(function(e) {\n        // If there's already an input element, editing is active, so do nothing.\n        if ($(this).children(\":input\").length > 0) {\n            return;\n        }\n\n        container.removeClass(\"editable-text\");\n\n        // Handler for setting element text.\n        var set_text = function(new_text) {\n            container.find(\":input\").remove();\n\n            if (new_text !== \"\") {\n                container.text(new_text);\n            } else {\n                // No text; need a line so that there is a click target.\n                container.html(\"<br>\");\n            }\n            container.addClass(\"editable-text\");\n\n            if (on_finish) {\n                on_finish(new_text);\n            }\n        };\n\n        // Create input element(s) for editing.\n        var cur_text = (\"cur_text\" in config_dict ? config_dict.cur_text : container.text() ),\n            input_elt, button_elt;\n\n        if (use_textarea) {\n            input_elt = $(\"<textarea/>\")\n                .attr({ rows: num_rows, cols: num_cols }).text($.trim(cur_text))\n                .keyup(function(e) {\n                    if (e.keyCode === 27) {\n                        // Escape key.\n                        set_text(cur_text);\n                    }\n                });\n            button_elt = $(\"<button/>\").text(\"Done\").click(function() {\n                set_text(input_elt.val());\n                // Return false so that click does not propogate to container.\n                return false;\n            });\n        }\n        else {\n            input_elt = $(\"<input type='text'/>\").attr({ value: $.trim(cur_text), size: num_cols })\n            .blur(function() {\n                set_text(cur_text);\n            }).keyup(function(e) {\n                if (e.keyCode === 27) {\n                    // Escape key.\n                    $(this).trigger(\"blur\");\n                } else if (e.keyCode === 13) {\n                    // Enter key.\n                    set_text($(this).val());\n                }\n\n                // Do not propogate event to avoid unwanted side effects.\n                e.stopPropagation();\n            });\n        }\n\n        // Replace text with input object(s) and focus & select.\n        container.text(\"\");\n        container.append(input_elt);\n        if (button_elt) {\n            container.append(button_elt);\n        }\n        input_elt.focus();\n        input_elt.select();\n\n        // Do not propogate to elements below b/c that blurs input and prevents it from being used.\n        e.stopPropagation();\n    });\n\n    // Add help text if there some.\n    if (help_text) {\n        container.attr(\"title\", help_text).tooltip();\n    }\n\n    return container;\n};\n\n// ============================================================================\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/ui/editable-text.js\n ** module id = 12\n ** module chunks = 2\n **/","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else {\n        root.faIconButton = factory();\n    }\n\n}(this, function () {\n//============================================================================\n    /** Returns a jQuery object containing a clickable font-awesome button.\n     *      options:\n     *          tooltipConfig   : option map for bootstrap tool tip\n     *          classes         : array of class names (will always be classed as icon-btn)\n     *          disabled        : T/F - add the 'disabled' class?\n     *          title           : tooltip/title string\n     *          target          : optional href target\n     *          href            : optional href\n     *          faIcon          : which font awesome icon to use\n     *          onclick         : function to call when the button is clicked\n     */\n    var faIconButton = function( options ){\n        options = options || {};\n        options.tooltipConfig = options.tooltipConfig || { placement: 'bottom' };\n\n        options.classes = [ 'icon-btn' ].concat( options.classes || [] );\n        if( options.disabled ){\n            options.classes.push( 'disabled' );\n        }\n\n        var html = [\n            '<a class=\"', options.classes.join( ' ' ), '\"',\n                    (( options.title )?( ' title=\"' + options.title + '\"' ):( '' )),\n                    (( !options.disabled && options.target )?  ( ' target=\"' + options.target + '\"' ):( '' )),\n                    ' href=\"', (( !options.disabled && options.href )?( options.href ):( 'javascript:void(0);' )), '\">',\n                // could go with something less specific here - like 'html'\n                '<span class=\"fa ', options.faIcon, '\"></span>',\n            '</a>'\n        ].join( '' );\n        var $button = $( html ).tooltip( options.tooltipConfig );\n        if( _.isFunction( options.onclick ) ){\n            $button.click( options.onclick );\n        }\n        return $button;\n    };\n\n//============================================================================\n    return faIconButton;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/ui/fa-icon-button.js\n ** module id = 13\n ** module chunks = 2\n **/","define([\n    \"mvc/list/list-panel\",\n    \"mvc/collection/collection-model\",\n    \"mvc/collection/collection-li\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( LIST_PANEL, DC_MODEL, DC_LI, BASE_MVC, _l ){\n\nvar logNamespace = 'collections';\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class non-editable, read-only View/Controller for a dataset collection.\n */\nvar _super = LIST_PANEL.ModelListPanel;\nvar CollectionPanel = _super.extend(\n/** @lends CollectionPanel.prototype */{\n    //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n    _logNamespace : logNamespace,\n\n    className           : _super.prototype.className + ' dataset-collection-panel',\n\n    /** sub view class used for datasets */\n    DatasetDCEViewClass : DC_LI.DatasetDCEListItemView,\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: DC_LI.NestedDCDCEListItemView,\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey  : 'elements',\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the panel\n     */\n    initialize : function( attributes ){\n        _super.prototype.initialize.call( this, attributes );\n        this.linkTarget = attributes.linkTarget || '_blank';\n\n        this.hasUser = attributes.hasUser;\n        /** A stack of panels that currently cover or hide this panel */\n        this.panelStack = [];\n        /** The text of the link to go back to the panel containing this one */\n        this.parentName = attributes.parentName;\n        /** foldout or drilldown */\n        this.foldoutStyle = attributes.foldoutStyle || 'foldout';\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** In this override, use model.getVisibleContents */\n    _filterCollection : function(){\n//TODO: should *not* be model.getVisibleContents - visibility is not model related\n        return this.model.getVisibleContents();\n    },\n\n    /** override to return proper view class based on element_type */\n    _getItemViewClass : function( model ){\n        //this.debug( this + '._getItemViewClass:', model );\n//TODO: subclasses use DCEViewClass - but are currently unused - decide\n        switch( model.get( 'element_type' ) ){\n            case 'hda':\n                return this.DatasetDCEViewClass;\n            case 'dataset_collection':\n                return this.NestedDCDCEViewClass;\n        }\n        throw new TypeError( 'Unknown element type:', model.get( 'element_type' ) );\n    },\n\n    /** override to add link target and anon */\n    _getItemViewOptions : function( model ){\n        var options = _super.prototype._getItemViewOptions.call( this, model );\n        return _.extend( options, {\n            linkTarget      : this.linkTarget,\n            hasUser         : this.hasUser,\n//TODO: could move to only nested: list:paired\n            foldoutStyle    : this.foldoutStyle\n        });\n    },\n\n    // ------------------------------------------------------------------------ collection sub-views\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners : function( view ){\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call( panel, view );\n\n        // use pub-sub to: handle drilldown expansion and collapse\n        view.on( 'expanded:drilldown', function( v, drilldown ){\n            this._expandDrilldownPanel( drilldown );\n        }, this );\n        view.on( 'collapsed:drilldown', function( v, drilldown ){\n            this._collapseDrilldownPanel( drilldown );\n        }, this );\n        return this;\n    },\n\n    /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n    _expandDrilldownPanel : function( drilldown ){\n        this.panelStack.push( drilldown );\n        // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n        this.$( '> .controls' ).add( this.$list() ).hide();\n        drilldown.parentName = this.model.get( 'name' );\n        this.$el.append( drilldown.render().$el );\n    },\n\n    /** Handle drilldown close by freeing the panel and re-rendering this panel */\n    _collapseDrilldownPanel : function( drilldown ){\n        this.panelStack.pop();\n        this.render();\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events : {\n        'click .navigation .back'       : 'close'\n    },\n\n    /** close/remove this collection panel */\n    close : function( event ){\n        this.$el.remove();\n        this.trigger( 'close' );\n    },\n\n    // ........................................................................ misc\n    /** string rep */\n    toString    : function(){\n        return 'CollectionPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n//------------------------------------------------------------------------------ TEMPLATES\nCollectionPanel.prototype.templates = (function(){\n\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n            '<div class=\"navigation\">',\n                '<a class=\"back\" href=\"javascript:void(0)\">',\n                    '<span class=\"fa fa-icon fa-angle-left\"></span>',\n                    _l( 'Back to ' ), '<%- view.parentName %>',\n                '</a>',\n            '</div>',\n\n            '<div class=\"title\">',\n                '<div class=\"name\"><%- collection.name || collection.element_identifier %></div>',\n                '<div class=\"subtitle\">',\n//TODO: remove logic from template\n                    '<% if( collection.collection_type === \"list\" ){ %>',\n                        _l( 'a list of datasets' ),\n                    '<% } else if( collection.collection_type === \"paired\" ){ %>',\n                        _l( 'a pair of datasets' ),\n                    '<% } else if( collection.collection_type === \"list:paired\" ){ %>',\n                        _l( 'a list of paired datasets' ),\n                    '<% } %>',\n                '</div>',\n            '</div>',\n        '</div>'\n    ], 'collection' );\n\n    return _.extend( _.clone( _super.prototype.templates ), {\n        controls : controlsTemplate\n    });\n}());\n\n\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionPanel = CollectionPanel.extend(\n/** @lends ListCollectionPanel.prototype */{\n\n    //TODO: not strictly needed - due to switch in CollectionPanel._getContentClass\n    /** sub view class used for datasets */\n    DatasetDCEViewClass : DC_LI.DatasetDCEListItemView,\n\n    // ........................................................................ misc\n    /** string rep */\n    toString    : function(){\n        return 'ListCollectionPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionPanel = ListCollectionPanel.extend(\n/** @lends PairCollectionPanel.prototype */{\n\n    // ........................................................................ misc\n    /** string rep */\n    toString    : function(){\n        return 'PairCollectionPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListOfPairsCollectionPanel = CollectionPanel.extend(\n/** @lends ListOfPairsCollectionPanel.prototype */{\n\n    //TODO: not strictly needed - due to switch in CollectionPanel._getContentClass\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass : DC_LI.NestedDCDCEListItemView.extend({\n        foldoutPanelClass : PairCollectionPanel\n    }),\n\n    // ........................................................................ misc\n    /** string rep */\n    toString    : function(){\n        return 'ListOfPairsCollectionPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n//==============================================================================\n    return {\n        CollectionPanel             : CollectionPanel,\n        ListCollectionPanel         : ListCollectionPanel,\n        PairCollectionPanel         : PairCollectionPanel,\n        ListOfPairsCollectionPanel  : ListOfPairsCollectionPanel\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/collection/collection-panel.js\n ** module id = 14\n ** module chunks = 2\n **/","// Additional dependencies: jQuery, underscore.\ndefine(['mvc/ui/ui-modal', 'mvc/ui/ui-frames', 'mvc/ui/icon-button'], function(Modal, Frames, mod_icon_btn) {\n\n/**\n * Dataset metedata.\n */\nvar DatasetMetadata = Backbone.Model.extend({});\n\n/**\n * A dataset. In Galaxy, datasets are associated with a history, so\n * this object is also known as a HistoryDatasetAssociation.\n */\nvar Dataset = Backbone.Model.extend({\n    defaults: {\n        id: '',\n        type: '',\n        name: '',\n        hda_ldda: 'hda',\n        metadata: null\n    },\n\n    initialize: function() {\n        // Metadata can be passed in as a model or a set of attributes; if it's\n        // already a model, there's no need to set metadata.\n        if (!this.get('metadata')) {\n            this._set_metadata();\n        }\n\n        // Update metadata on change.\n        this.on('change', this._set_metadata, this);\n    },\n\n    _set_metadata: function() {\n        var metadata = new DatasetMetadata();\n\n        // Move metadata from dataset attributes to metadata object.\n        _.each(_.keys(this.attributes), function(k) {\n            if (k.indexOf('metadata_') === 0) {\n                // Found metadata.\n                var new_key = k.split('metadata_')[1];\n                metadata.set(new_key, this.attributes[k]);\n                delete this.attributes[k];\n            }\n        }, this);\n\n        // Because this is an internal change, silence it.\n        this.set('metadata', metadata, { 'silent': true });\n    },\n\n    /**\n     * Returns dataset metadata for a given attribute.\n     */\n    get_metadata: function(attribute) {\n        return this.attributes.metadata.get(attribute);\n    },\n\n    urlRoot: galaxy_config.root + \"api/datasets\"\n});\n\n/**\n * A tabular dataset. This object extends dataset to provide incremental chunked data.\n */\nvar TabularDataset = Dataset.extend({\n    defaults: _.extend({}, Dataset.prototype.defaults, {\n        chunk_url: null,\n        first_data_chunk: null,\n        chunk_index: -1,\n        at_eof: false\n    }),\n\n    initialize: function(options) {\n        Dataset.prototype.initialize.call(this);\n\n        // If first data chunk is available, next chunk is 1.\n        this.attributes.chunk_index = (this.attributes.first_data_chunk ? 1 : 0);\n        this.attributes.chunk_url = galaxy_config.root + 'dataset/display?dataset_id=' + this.id;\n        this.attributes.url_viz = galaxy_config.root + 'visualization';\n    },\n\n    /**\n     * Returns a jQuery Deferred object that resolves to the next data chunk or null if at EOF.\n     */\n    get_next_chunk: function() {\n        // If already at end of file, do nothing.\n        if (this.attributes.at_eof) {\n            return null;\n        }\n\n        // Get next chunk.\n        var self = this,\n            next_chunk = $.Deferred();\n        $.getJSON(this.attributes.chunk_url, {\n            chunk: self.attributes.chunk_index++\n        }).success(function(chunk) {\n            var rval;\n            if (chunk.ck_data !== '') {\n                // Found chunk.\n                rval = chunk;\n            }\n            else {\n                // At EOF.\n                self.attributes.at_eof = true;\n                rval = null;\n            }\n            next_chunk.resolve(rval);\n        });\n\n        return next_chunk;\n    }\n});\n\nvar DatasetCollection = Backbone.Collection.extend({\n    model: Dataset\n});\n\n/**\n * Provides a base for table-based, dynamic view of a tabular dataset.\n * Do not instantiate directly; use either TopLevelTabularDatasetChunkedView\n * or EmbeddedTabularDatasetChunkedView.\n */\nvar TabularDatasetChunkedView = Backbone.View.extend({\n\n    /**\n     * Initialize view and, importantly, set a scroll element.\n     */\n    initialize: function(options) {\n        // Row count for rendering.\n        this.row_count = 0;\n        this.loading_chunk = false;\n\n        // load trackster button\n        new TabularButtonTracksterView({\n            model   : options.model,\n            $el     : this.$el\n        });\n    },\n\n    expand_to_container: function(){\n        if (this.$el.height() < this.scroll_elt.height()){\n            this.attempt_to_fetch();\n        }\n    },\n\n    attempt_to_fetch: function( func ){\n        var self = this;\n        if ( !this.loading_chunk && this.scrolled_to_bottom() ) {\n            this.loading_chunk = true;\n            this.loading_indicator.show();\n            $.when(self.model.get_next_chunk()).then(function(result) {\n                if (result) {\n                    self._renderChunk(result);\n                    self.loading_chunk = false;\n                }\n                self.loading_indicator.hide();\n                self.expand_to_container();\n            });\n        }\n    },\n\n    render: function() {\n        // Add loading indicator.\n        this.loading_indicator = $('<div/>').attr('id', 'loading_indicator');\n        this.$el.append(this.loading_indicator);\n\n        // Add data table and header.\n        var data_table = $('<table/>').attr({\n            id: 'content_table',\n            cellpadding: 0\n        });\n        this.$el.append(data_table);\n        var column_names = this.model.get_metadata('column_names'),\n            header_container = $('<thead/>').appendTo(data_table),\n            header_row = $('<tr/>').appendTo(header_container);\n        if (column_names) {\n            header_row.append('<th>' + column_names.join('</th><th>') + '</th>');\n        } else {\n            for (var j = 1; j <= this.model.get_metadata('columns'); j++) {\n                header_row.append('<th>' + j + '</th>');\n            }\n        }\n\n        // Render first chunk.\n        var self = this,\n            first_chunk = this.model.get('first_data_chunk');\n        if (first_chunk) {\n            // First chunk is bootstrapped, so render now.\n            this._renderChunk(first_chunk);\n        }\n        else {\n            // No bootstrapping, so get first chunk and then render.\n            $.when(self.model.get_next_chunk()).then(function(result) {\n                self._renderChunk(result);\n            });\n        }\n\n        // -- Show new chunks during scrolling. --\n\n        // Set up chunk loading when scrolling using the scrolling element.\n        this.scroll_elt.scroll(function(){\n            self.attempt_to_fetch();\n        });\n    },\n\n    /**\n     * Returns true if user has scrolled to the bottom of the view.\n     */\n    scrolled_to_bottom: function() {\n        return false;\n    },\n\n    // -- Helper functions. --\n\n    _renderCell: function(cell_contents, index, colspan) {\n        var $cell = $('<td>').text(cell_contents);\n        var column_types = this.model.get_metadata('column_types');\n        if (colspan !== undefined) {\n            $cell.attr('colspan', colspan).addClass('stringalign');\n        } else if (column_types) {\n            if (index < column_types.length) {\n                if (column_types[index] === 'str' || column_types[index] === 'list') {\n                    /* Left align all str columns, right align the rest */\n                    $cell.addClass('stringalign');\n                }\n            }\n        }\n        return $cell;\n    },\n\n    _renderRow: function(line) {\n        // Check length of cells to ensure this is a complete row.\n        var cells = line.split('\\t'),\n            row = $('<tr>'),\n            num_columns = this.model.get_metadata('columns');\n\n        if (this.row_count % 2 !== 0) {\n            row.addClass('dark_row');\n        }\n\n        if (cells.length === num_columns) {\n            _.each(cells, function(cell_contents, index) {\n                row.append(this._renderCell(cell_contents, index));\n            }, this);\n        }\n        else if (cells.length > num_columns) {\n            // SAM file or like format with optional metadata included.\n            _.each(cells.slice(0, num_columns - 1), function(cell_contents, index) {\n                row.append(this._renderCell(cell_contents, index));\n            }, this);\n            row.append(this._renderCell(cells.slice(num_columns - 1).join('\\t'), num_columns - 1));\n        }\n        else if (num_columns > 5 && cells.length === num_columns - 1 ) {\n            // SAM file or like format with optional metadata missing.\n            _.each(cells, function(cell_contents, index) {\n                row.append(this._renderCell(cell_contents, index));\n            }, this);\n            row.append($('<td>'));\n        }\n        else {\n            // Comment line, just return the one cell.\n            row.append(this._renderCell(line, 0, num_columns));\n        }\n\n        this.row_count++;\n        return row;\n    },\n\n    _renderChunk: function(chunk) {\n        var data_table = this.$el.find('table');\n        _.each(chunk.ck_data.split('\\n'), function(line, index) {\n            if (line !== ''){\n                data_table.append(this._renderRow(line));\n            }\n        }, this);\n    }\n});\n\n/**\n * Tabular view that is placed at the top level of page. Scrolling occurs\n * view top-level elements outside of view.\n */\nvar TopLevelTabularDatasetChunkedView = TabularDatasetChunkedView.extend({\n\n    initialize: function(options) {\n        TabularDatasetChunkedView.prototype.initialize.call(this, options);\n\n        // Scrolling happens in top-level elements.\n        scroll_elt = _.find(this.$el.parents(), function(p) {\n            return $(p).css('overflow') === 'auto';\n        });\n\n        // If no scrolling element found, use window.\n        if (!scroll_elt) { scroll_elt = window; }\n\n        // Wrap scrolling element for easy access.\n        this.scroll_elt = $(scroll_elt);\n    },\n\n    /**\n     * Returns true if user has scrolled to the bottom of the view.\n     */\n    scrolled_to_bottom: function() {\n        return (this.$el.height() - this.scroll_elt.scrollTop() - this.scroll_elt.height() <= 0);\n    }\n\n});\n\n/**\n * Tabular view tnat is embedded in a page. Scrolling occurs in view's el.\n */\nvar EmbeddedTabularDatasetChunkedView = TabularDatasetChunkedView.extend({\n\n    initialize: function(options) {\n        TabularDatasetChunkedView.prototype.initialize.call(this, options);\n\n        // Because view is embedded, set up div to do scrolling.\n        this.scroll_elt = this.$el.css({\n            position: 'relative',\n            overflow: 'scroll',\n            height: options.height || '500px'\n        });\n    },\n\n    /**\n     * Returns true if user has scrolled to the bottom of the view.\n     */\n    scrolled_to_bottom: function() {\n        return this.$el.scrollTop() + this.$el.innerHeight() >= this.el.scrollHeight;\n    }\n\n});\n\n// button for trackster visualization\nvar TabularButtonTracksterView = Backbone.View.extend({\n\n    // gene region columns\n    col: {\n        chrom   : null,\n        start   : null,\n        end     : null\n    },\n\n    // url for trackster\n    url_viz     : null,\n\n    // dataset id\n    dataset_id  : null,\n\n    // database key\n    genome_build: null,\n\n    // data type\n    file_ext   : null,\n\n    // backbone initialize\n    initialize: function (options) {\n        // check if environment is available\n        var Galaxy = parent.Galaxy;\n\n        // link galaxy modal or create one\n        if (Galaxy && Galaxy.modal) {\n            this.modal = Galaxy.modal;\n        }\n\n        // link galaxy frames\n        if (Galaxy && Galaxy.frame) {\n            this.frame = Galaxy.frame;\n        }\n\n        // check\n        if (!this.modal || !this.frame) {\n            return;\n        }\n\n        // model/metadata\n        var model       = options.model;\n        var metadata    = model.get('metadata');\n\n        // check for datatype\n        if (!model.get('file_ext')) {\n            return;\n        }\n\n        // get data type\n        this.file_ext = model.get('file_ext');\n\n        // check for bed-file format\n        if (this.file_ext == 'bed')\n        {\n            // verify that metadata exists\n            if (metadata.get('chromCol') && metadata.get('startCol') && metadata.get('endCol'))\n            {\n                // read in columns\n                this.col.chrom   = metadata.get('chromCol') - 1;\n                this.col.start   = metadata.get('startCol') - 1;\n                this.col.end     = metadata.get('endCol') - 1;\n            } else {\n                console.log('TabularButtonTrackster : Bed-file metadata incomplete.');\n                return;\n            }\n        }\n\n        // check for vcf-file format\n        if (this.file_ext == 'vcf')\n        {\n            // search array\n            function search (str, array) {\n                for (var j = 0; j < array.length; j++)\n                    if (array[j].match(str)) return j;\n                return -1;\n            };\n\n            // load\n            this.col.chrom = search('Chrom', metadata.get('column_names'));\n            this.col.start = search('Pos', metadata.get('column_names'));\n            this.col.end   = null;\n\n            // verify that metadata exists\n            if (this.col.chrom == -1 || this.col.start == -1) {\n                console.log('TabularButtonTrackster : VCF-file metadata incomplete.');\n                return;\n            }\n        }\n\n        // check\n        if(this.col.chrom === undefined) {\n            return;\n        }\n\n        // get dataset id\n        if (model.id) {\n            this.dataset_id = model.id;\n        } else {\n            console.log('TabularButtonTrackster : Dataset identification is missing.');\n            return;\n        }\n\n        // get url\n        if (model.get('url_viz')) {\n            this.url_viz = model.get('url_viz');\n        } else {\n            console.log('TabularButtonTrackster : Url for visualization controller is missing.');\n            return;\n        }\n\n        // get genome_build / database key\n        if (model.get('genome_build')) {\n            this.genome_build = model.get('genome_build');\n        }\n\n        // create the icon\n        var btn_viz = new mod_icon_btn.IconButtonView({\n            model : new mod_icon_btn.IconButton({\n                title       : 'Visualize',\n                icon_class  : 'chart_curve',\n                id          : 'btn_viz'\n            })\n        });\n\n        // set element\n        this.setElement(options.$el);\n\n        // add to element\n        this.$el.append(btn_viz.render().$el);\n\n        // hide the button\n        this.hide();\n    },\n\n    // backbone events\n    events:\n    {\n        'mouseover tr'  : 'show',\n        'mouseleave'    : 'hide'\n    },\n\n    // show button\n    show: function (e) {\n        // is numeric\n        function is_numeric(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        };\n\n        // check\n        if(this.col.chrom === null)\n            return;\n\n        // get selected data line\n        var row = $(e.target).parent();\n\n        // verify that location has been found\n        var chrom = row.children().eq(this.col.chrom).html();\n        var start = row.children().eq(this.col.start).html();\n\n        // end is optional\n        var end = this.col.end ? row.children().eq(this.col.end).html() : start;\n\n        // double check location\n        if (!chrom.match(\"^#\") && chrom !== \"\" && is_numeric(start)) {\n\n            // get target gene region\n            var btn_viz_pars = {\n                dataset_id  : this.dataset_id,\n                gene_region : chrom + \":\" + start + \"-\" + end\n            };\n\n            // get button position\n            var offset  = row.offset();\n            var left    = offset.left - 10;\n            var top     = offset.top - $(window).scrollTop() + 3;\n\n            // update css\n            $('#btn_viz').css({'position': 'fixed', 'top': top + 'px', 'left': left + 'px'});\n            $('#btn_viz').off('click');\n            $('#btn_viz').click(this.create_trackster_action(this.url_viz, btn_viz_pars, this.genome_build));\n\n            // show the button\n            $('#btn_viz').show();\n        } else {\n            // hide the button\n            $('#btn_viz').hide();\n        }\n    },\n\n    // hide button\n    hide: function () {\n        this.$el.find('#btn_viz').hide();\n    },\n\n    // create action\n    create_trackster_action : function (vis_url, dataset_params, dbkey) {\n        // link this\n        var self = this;\n\n        // create function\n        return function() {\n            var listTracksParams = {};\n            if (dbkey) {\n                listTracksParams[ 'f-dbkey' ] = dbkey;\n            }\n            $.ajax({\n                url: vis_url + '/list_tracks?' + $.param( listTracksParams ),\n                dataType: 'html',\n                error: function() {\n                    // show error message\n                    self.modal.show({\n                        title   : 'Something went wrong!',\n                        body    : 'Unfortunately we could not add this dataset to the track browser. Please try again or contact us.',\n                        buttons : {\n                            'Cancel': function(){\n                                self.modal.hide();\n                            }\n                        }\n                    });\n                },\n                success: function(table_html) {\n                    self.modal.show({\n                        title   : 'View Data in a New or Saved Visualization',\n                        buttons :{\n                            'Cancel': function(){\n                                self.modal.hide();\n                            },\n                            'View in saved visualization': function(){\n                                // show modal with saved visualizations\n                                self.modal.show(\n                                {\n                                    title   : 'Add Data to Saved Visualization',\n                                    body    : table_html,\n                                    buttons : {\n                                        'Cancel': function(){\n                                            self.modal.hide();\n                                        },\n                                        'Add to visualization': function(){\n                                            // hide\n                                            self.modal.hide();\n\n                                            // search selected fields\n                                            self.modal.$el.find('input[name=id]:checked').each(function(){\n                                                // get visualization id\n                                                var vis_id = $(this).val();\n                                                dataset_params.id = vis_id;\n\n                                                // add widget\n                                                self.frame.add({\n                                                    title    : 'Trackster',\n                                                    type     : 'url',\n                                                    content  : vis_url + '/trackster?' + $.param(dataset_params)\n                                                });\n                                            });\n                                        }\n                                    }\n                                });\n                            },\n                            'View in new visualization': function(){\n                                // hide\n                                self.modal.hide();\n\n                                // add widget\n                                self.frame.add({\n                                    title    : 'Trackster',\n                                    type     : 'url',\n                                    content  : vis_url + '/trackster?' + $.param(dataset_params)\n                                });\n                            }\n                        }\n                    });\n                }\n            });\n            return false;\n        };\n    }\n});\n\n// -- Utility functions. --\n\n/**\n * Create a model, attach it to a view, render view, and attach it to a parent element.\n */\nvar createModelAndView = function(model, view, model_config, parent_elt) {\n    // Create model, view.\n    var a_view = new view({\n        model: new model(model_config)\n    });\n\n    // Render view and add to parent element.\n    a_view.render();\n    if (parent_elt) {\n        parent_elt.append(a_view.$el);\n    }\n\n    return a_view;\n};\n\n/**\n * Create a tabular dataset chunked view (and requisite tabular dataset model)\n * and appends to parent_elt.\n */\nvar createTabularDatasetChunkedView = function(options) {\n    // If no model, create and set model from dataset config.\n    if (!options.model) {\n        options.model = new TabularDataset(options.dataset_config);\n    }\n\n    var parent_elt = options.parent_elt;\n    var embedded = options.embedded;\n\n    // Clean up options so that only needed options are passed to view.\n    delete options.embedded;\n    delete options.parent_elt;\n    delete options.dataset_config;\n\n    // Create and set up view.\n    var view = (embedded ? new EmbeddedTabularDatasetChunkedView(options) :\n                           new TopLevelTabularDatasetChunkedView(options));\n    view.render();\n\n    if (parent_elt) {\n        parent_elt.append(view.$el);\n        // If we're sticking this in another element, once it's appended check\n        // to make sure we've filled enough space.\n        // Without this, the scroll elements don't work.\n        view.expand_to_container();\n    }\n\n    return view;\n};\n\nreturn {\n    Dataset: Dataset,\n    TabularDataset: TabularDataset,\n    DatasetCollection: DatasetCollection,\n    TabularDatasetChunkedView: TabularDatasetChunkedView,\n    createTabularDatasetChunkedView: createTabularDatasetChunkedView\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/data.js\n ** module id = 15\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils'], function(Utils) {\n\nvar View = Backbone.View.extend({\n\n    // default options\n    optionsDefault: {\n        with_close  : true,\n        container   : 'body',\n        title       : null,\n        placement   : 'top'\n    },\n\n    // visibility flag\n    visible: false,\n\n    // initialize\n    initialize: function (options) {\n        // link this\n        var self = this;\n\n        // update options\n        this.options = _.defaults(options, this.optionsDefault);\n\n        // set element\n        this.setElement(this._template(this.options));\n\n        // attach popover to parent\n        this.options.container.parent().append(this.$el);\n\n        // attach close\n        if (this.options.with_close) {\n            this.$el.find('#close').on('click', function() { self.hide(); });\n        }\n\n        // generate unique id\n        this.uid = Utils.uid();\n\n        // add event to hide if click is outside of popup\n        var self = this;\n        $('body').on('mousedown.' + this.uid,  function(e) { self._hide(e) });\n    },\n\n    // title\n    title: function(val) {\n        if (val !== undefined) {\n            this.$el.find('.popover-title-label').html(val);\n        }\n    },\n\n    // show\n    show: function () {\n        // show popover\n        this.$el.show();\n        this.visible = true;\n\n        // calculate position\n        var position = this._get_placement(this.options.placement);\n\n        // set position\n        this.$el.css(position);\n    },\n\n    // hide\n    hide: function () {\n        this.$el.hide();\n        this.visible = false;\n    },\n\n    // append new doms to popover content\n    append: function($el) {\n        this.$el.find('.popover-content').append($el);\n    },\n\n    // empty popover content\n    empty: function($el) {\n        this.$el.find('.popover-content').empty();\n    },\n\n    // remove event handler and dom\n    remove: function() {\n        $('body').off('mousedown.' + this.uid);\n        this.$el.remove();\n    },\n\n    // calculate position and error\n    _get_placement: function(placement) {\n        // get popover dimensions\n        var width               = this._get_width(this.$el);\n        var height              = this.$el.height();\n\n        // get container details\n        var $container = this.options.container;\n        var container_width     = this._get_width($container);\n        var container_height    = this._get_height($container);\n        var container_position  = $container.position();\n\n        // initialize position\n        var top  = 0;\n        var left = 0;\n\n        // calculate position\n        if (['top', 'bottom'].indexOf(placement) != -1) {\n            left = container_position.left - width + (container_width + width) / 2;\n            switch (placement) {\n                case 'top':\n                    top = container_position.top - height - 5;\n                    break;\n                case 'bottom':\n                    top = container_position.top + container_height + 5;\n                    break;\n            }\n        } else {\n            top = container_position.top - height + (container_height + height) / 2;\n            switch (placement) {\n                case 'right':\n                    left = container_position.left + container_width;\n                    break;\n            }\n        }\n\n        // return\n        return {top: top, left: left};\n    },\n\n    // width\n    _get_width: function($el) {\n        return $el.width() + parseInt($el.css('padding-left')) + parseInt($el.css('padding-right'))\n    },\n\n    // height\n    _get_height: function($el) {\n        return $el.height() + parseInt($el.css('padding-top')) + parseInt($el.css('padding-bottom'))\n    },\n\n    // remove\n    _hide : function(e) {\n        // the 'is' for buttons that trigger popups\n        // the 'has' for icons within a button that triggers a popup\n        if (!$(this.options.container).is(e.target) &&\n            !$(this.el).is(e.target) &&\n            $(this.el).has(e.target).length === 0) {\n                this.hide();\n        }\n    },\n\n    // template\n    _template: function(options) {\n        var tmpl =  '<div class=\"ui-popover popover fade ' + options.placement + ' in\">' +\n                        '<div class=\"arrow\"/>' +\n                        '<div class=\"popover-title\">' +\n                            '<div class=\"popover-title-label\">' +\n                                options.title +\n                            '</div>';\n        if (options.with_close) {\n            tmpl +=         '<div id=\"close\" class=\"popover-close fa fa-times-circle\"/>';\n        }\n        tmpl +=         '</div>' +\n                        '<div class=\"popover-content\"/>' +\n                    '</div>';\n        return tmpl;\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-popover.js\n ** module id = 16\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils'], function(Utils) {\n\n/**\n * A plugin for initializing select2 input items.\n * Make sure the select2 library itself is loaded beforehand.\n * Also the element to which select2 will be appended has to \n * be created before select2 initialization (and passed as option).\n */\nvar View = Backbone.View.extend(\n{\n    // options\n    optionsDefault: {\n        css                 : '',\n        placeholder         : 'No data available',\n        data                : [],\n        value               : null,\n        multiple            : false,\n        minimumInputLength  : 0,\n        // example format of initial data: \"id:name,55:anotherrole@role.com,27:role@role.com\"\n        initialData         : ''\n    },\n    \n    // initialize\n    initialize : function(options) {\n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n        \n        // create new element\n        this.setElement(this._template(this.options));\n        \n        // check if container exists\n        if (!this.options.container) {\n            console.log('ui-select::initialize() : container not specified.');\n            return;\n        }\n        \n        // add to dom\n        this.options.container.append(this.$el);\n        \n        // link selection dictionary\n        this.select_data = this.options.data;\n        \n        // refresh\n        this._refresh();\n        \n        if (!this.options.multiple){\n            // initial value\n            if (this.options.value) {\n                this._setValue(this.options.value);\n            }\n            \n            // add change event\n            var self = this;\n            if (this.options.onchange) {\n                this.$el.on('change', function() {\n                    self.options.onchange(self.value());\n                });\n            }\n        }\n    },\n    \n    // value\n    value : function (new_value) {\n        // get current id/value\n        var before = this._getValue();\n        \n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this._setValue(new_value);\n        }\n        \n        // get current id/value\n        var after = this._getValue();\n        \n        // fire onchange\n        if ((after != before && this.options.onchange)) {\n            this.options.onchange(after);\n        }\n            \n        // return current value\n        return after;\n    },\n    \n    // label\n    text : function () {\n        return this.$el.select2('data').text;\n    },\n    \n    // disabled\n    disabled: function() {\n        return !this.$el.select2('enable');\n    },\n\n    // enable\n    enable: function() {\n        this.$el.select2('enable', true);\n    },\n        \n    // disable\n    disable: function() {\n        this.$el.select2('enable', false);\n    },\n    \n    // add\n    add: function(options) {\n        // add options\n        this.select_data.push({\n            id      : options.id,\n            text    : options.text\n        });\n        \n        // refresh\n        this._refresh();\n    },\n    \n    // remove\n    del: function(id) {\n        // search option\n        var index = this._getIndex(id);\n        \n        // check if found\n        if (index != -1) {\n            // remove options\n            this.select_data.splice(index, 1);\n        \n            // refresh\n            this._refresh();\n        }\n    },\n    \n    // remove\n    remove: function() {\n        this.$el.select2('destroy');\n    },\n    \n    // update\n    update: function(options) {\n        // copy options\n        this.select_data = [];\n        for (var key in options.data) {\n            this.select_data.push(options.data[key]);\n        }\n        \n        // refresh\n        this._refresh();\n    },\n    \n    // refresh\n    _refresh: function() {\n        // add select2 data based on type of input\n        if (!this.options.multiple){\n            var selected = this._getValue();\n            var select_opt = {\n                data                : this.select_data,\n                containerCssClass   : this.options.css,\n                placeholder         : this.options.placeholder,\n                dropdownAutoWidth   : true\n            };\n            this.$el.select2(select_opt);\n            // select previous value (if exists)\n            this._setValue(selected);\n        } else {\n            var select_opt = {\n                multiple            : this.options.multiple,\n                containerCssClass   : this.options.css,\n                placeholder         : this.options.placeholder,\n                minimumInputLength  : this.options.minimumInputLength,\n                ajax                : this.options.ajax,\n                dropdownCssClass    : this.options.dropdownCssClass,\n                escapeMarkup        : this.options.escapeMarkup,\n                formatResult        : this.options.formatResult,\n                formatSelection     : this.options.formatSelection,\n                initSelection       : this.options.initSelection,\n                initialData         : this.options.initialData\n            };\n            this.$el.select2(select_opt);\n        }\n    },\n    \n    // get index\n    _getIndex: function(value) {\n        // search index\n        for (var key in this.select_data) {\n            if (this.select_data[key].id == value) {\n                return key;\n            }\n        }\n        \n        // not found\n        return -1;\n    },\n    \n    // get value\n    _getValue: function() {\n        return this.$el.select2('val');\n    },\n    \n    // set value\n    _setValue: function(new_value) {\n        var index = this._getIndex(new_value);\n        if (index == -1) {\n            if (this.select_data.length > 0) {\n                new_value = this.select_data[0].id;\n            }\n        }\n        this.$el.select2('val', new_value);\n    },\n    \n    // element\n    _template: function(options) {\n            return '<input type=\"hidden\" value=\"' + this.options.initialData + '\"/>';\n    }\n});\n\nreturn {\n    View : View\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-select.js\n ** module id = 17\n ** module chunks = 2\n **/","define(function(){\n\n/**\n * Stringifies a number adding commas for digit grouping as per North America.\n */\nfunction commatize( number ) {\n    number += ''; // Convert to string\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(number)) {\n        number = number.replace(rgx, '$1' + ',' + '$2');\n    }\n    return number;\n}\n\n/**\n * Helper to determine if object is jQuery deferred.\n */\nvar is_deferred = function ( d ) {\n    return ('promise' in d);\n};\n\n/**\n * Implementation of a server-state based deferred. Server is repeatedly polled, and when\n * condition is met, deferred is resolved.\n */\nvar ServerStateDeferred = Backbone.Model.extend({\n    defaults: {\n        ajax_settings: {},\n        interval: 1000,\n        success_fn: function(result) { return true; }\n    },\n\n    /**\n     * Returns a deferred that resolves when success function returns true.\n     */\n    go: function() {\n        var deferred = $.Deferred(),\n            self = this,\n            ajax_settings = self.get('ajax_settings'),\n            success_fn = self.get('success_fn'),\n            interval = self.get('interval'),\n             _go = function() {\n                 $.ajax(ajax_settings).success(function(result) {\n                     if (success_fn(result)) {\n                         // Result is good, so resolve.\n                         deferred.resolve(result);\n                     }\n                     else {\n                         // Result not good, try again.\n                         setTimeout(_go, interval);\n                     }\n                 });\n             };\n         _go();\n         return deferred;\n    }\n});\n\n/**\n * Returns a random color in hexadecimal format that is sufficiently different from a single color\n * or set of colors.\n * @param colors a color or list of colors in the format '#RRGGBB'\n */\nvar get_random_color = function(colors) {\n    // Default for colors is white.\n    if (!colors) { colors = \"#ffffff\"; }\n\n    // If needed, create list of colors.\n    if ( typeof(colors) === \"string\" ) {\n        colors = [ colors ];\n    }\n\n    // Convert colors to numbers.\n    for (var i = 0; i < colors.length; i++) {\n        colors[i] = parseInt( colors[i].slice(1), 16 );\n    }\n\n    // -- Perceived brightness and difference formulas are from\n    // -- http://www.w3.org/WAI/ER/WD-AERT/#color-contrast\n\n    // Compute perceived color brightness (based on RGB-YIQ transformation):\n    var brightness = function(r, g, b) {\n        return ( (r * 299) + (g * 587) + (b * 114) ) / 1000;\n    };\n\n    // Compute color difference:\n    var difference = function(r1, g1, b1, r2, g2, b2) {\n        return ( Math.max(r1, r2) - Math.min(r1, r2) ) +\n               ( Math.max(g1, g2) - Math.min(g1, g2) ) +\n               ( Math.max(b1, b2) - Math.min(b1, b2) );\n    };\n\n    // Create new random color.\n    var new_color, nr, ng, nb,\n        other_color, or, og, ob,\n        n_brightness, o_brightness,\n        diff, ok = false,\n        num_tries = 0;\n    do {\n        // New color is never white b/c random in [0,1)\n        new_color = Math.round( Math.random() * 0xffffff );\n        nr = ( new_color & 0xff0000 ) >> 16;\n        ng = ( new_color & 0x00ff00 ) >> 8;\n        nb = new_color & 0x0000ff;\n        n_brightness = brightness(nr, ng, nb);\n        ok = true;\n        for (i = 0; i < colors.length; i++) {\n            other_color = colors[i];\n            or = ( other_color & 0xff0000 ) >> 16;\n            og = ( other_color & 0x00ff00 ) >> 8;\n            ob = other_color & 0x0000ff;\n            o_brightness = brightness(or, og, ob);\n            diff = difference(nr, ng, nb, or, og, ob);\n            // These thresholds may need to be adjusted. Brightness difference range is 125;\n            // color difference range is 500.\n            if ( ( Math.abs(n_brightness - o_brightness) < 40 ) ||\n                 ( diff < 200 ) ) {\n                ok = false;\n                break;\n            }\n        }\n\n        num_tries++\n;    } while (!ok && num_tries <= 10 );\n\n    // Add 0x1000000 to left pad number with 0s.\n    return '#' + ( 0x1000000 + new_color ).toString(16).substr(1,6);\n};\n\nreturn {\n    commatize: commatize,\n    is_deferred: is_deferred,\n    ServerStateDeferred : ServerStateDeferred,\n    get_random_color    : get_random_color\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/viz/trackster/util.js\n ** module id = 18\n ** module chunks = 2\n **/","// dependencies\ndefine([], function() {\n\n/** Masthead **/\nvar GalaxyMasthead = Backbone.View.extend({\n    // base element\n    el_masthead: '#everything',\n\n    // options\n    options : null,\n\n    // background\n    $background: null,\n\n    // list\n    list: [],\n\n    // initialize\n    initialize : function(options) {\n        // update options\n        this.options = options;\n\n        // HACK: due to body events defined in panel.js\n        $(\"body\").off();\n\n        // define this element\n        this.setElement($(this._template(options)));\n\n        // append to masthead\n        $(this.el_masthead).append($(this.el));\n\n        // assign background\n        this.$background = $(this.el).find('#masthead-background');\n\n        // loop through unload functions if the user attempts to unload the page\n        var self = this;\n        $(window).on('beforeunload', function() {\n            var text = \"\";\n            for (key in self.list) {\n                if (self.list[key].options.onunload) {\n                    var q = self.list[key].options.onunload();\n                    if (q) text += q + \" \";\n                }\n            }\n            if (text != \"\") {\n                return text;\n            }\n        });\n    },\n\n    // configure events\n    events: {\n        'click'     : '_click',\n        'mousedown' : function(e) { e.preventDefault() }\n    },\n\n    // adds a new item to the masthead\n    append : function(item) {\n        return this._add(item, true);\n    },\n\n    // adds a new item to the masthead\n    prepend : function(item) {\n        return this._add(item, false);\n    },\n\n    // activate\n    highlight: function(id) {\n        var current = $(this.el).find('#' + id + '> li');\n        if (current) {\n            current.addClass('active');\n        }\n    },\n\n    // adds a new item to the masthead\n    _add : function(item, append) {\n        var $loc = $(this.el).find('#' + item.location);\n        if ($loc){\n            // create frame for new item\n            var $current = $(item.el);\n\n            // configure class in order to mark new items\n            $current.addClass('masthead-item');\n\n            // append to masthead\n            if (append) {\n                $loc.append($current);\n            } else {\n                $loc.prepend($current);\n            }\n\n            // add to list\n            this.list.push(item);\n        }\n\n        // location not found\n        return null;\n    },\n\n    // handle click event\n    _click: function(e) {\n        // close all popups\n        var $all = $(this.el).find('.popup');\n        if ($all) {\n            $all.hide();\n        }\n\n        // open current item\n        var $current = $(e.target).closest('.masthead-item').find('.popup');\n        if ($(e.target).hasClass('head')) {\n            $current.show();\n            this.$background.show();\n        } else {\n            this.$background.hide();\n        }\n    },\n\n    /*\n        HTML TEMPLATES\n    */\n\n    // fill template\n    _template: function(options) {\n        var brand_text = options.brand ? (\"/ \" + options.brand) : \"\" ;\n        return  '<div><div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n                    '<div style=\"position: relative; right: -50%; float: left;\">' +\n                        '<div id=\"navbar\" style=\"display: block; position: relative; right: 50%;\"></div>' +\n                    '</div>' +\n                   '<div class=\"navbar-brand\">' +\n                        '<a href=\"' + options.logo_url + '\">' +\n                            '<img style=\"margin-left: 0.35em;\" border=\"0\" src=\"' + galaxy_config.root + 'static/images/galaxyIcon_noText.png\">' +\n                            '<span id=\"brand\"> Galaxy ' + brand_text + '</span>' +\n                        '</a>' +\n                    '</div>' +\n                    '<div class=\"quota-meter-container\"></div>' +\n                    '<div id=\"iconbar\" class=\"iconbar\"></div>' +\n                '</div>' +\n                '<div id=\"masthead-background\" style=\"display: none; position: absolute; top: 33px; width: 100%; height: 100%; z-index: 1010\"></div>' +\n                '</div>';\n    }\n});\n\n/** Masthead icon **/\nvar GalaxyMastheadIcon = Backbone.View.extend({\n    // icon options\n    options:{\n        id              : '',\n        icon            : 'fa-cog',\n        tooltip         : '',\n        with_number     : false,\n        onclick         : function() { alert ('clicked') },\n        onunload        : null,\n        visible         : true\n    },\n\n    // location identifier for masthead class\n    location: 'iconbar',\n\n    // initialize\n    initialize: function (options){\n        // read in defaults\n        if (options)\n            this.options = _.defaults(options, this.options);\n\n        // add template for icon\n        this.setElement($(this._template(this.options)));\n\n        // configure icon\n        var self = this;\n        $(this.el).find('.icon').tooltip({title: this.options.tooltip, placement: 'bottom'})\n                                .on('mouseup', self.options.onclick);\n\n        // visiblity\n        if (!this.options.visible)\n            this.hide();\n    },\n\n    // show\n    show: function(){\n        $(this.el).css({visibility : 'visible'});\n    },\n\n    // show\n    hide: function(){\n        $(this.el).css({visibility : 'hidden'});\n    },\n\n    // switch icon\n    icon: function (new_icon){\n        // update icon class\n        $(this.el).find('.icon').removeClass(this.options.icon)\n                                .addClass(new_icon);\n\n        // update icon\n        this.options.icon = new_icon;\n    },\n\n    // toggle\n    toggle: function(){\n        $(this.el).addClass('toggle');\n    },\n\n    // untoggle\n    untoggle: function(){\n        $(this.el).removeClass('toggle');\n    },\n\n    // set/get number\n    number: function(new_number){\n        $(this.el).find('.number').text(new_number);\n    },\n\n    // fill template icon\n    _template: function (options){\n        var tmpl =  '<div id=\"' + options.id + '\" class=\"symbol\">' +\n                        '<div class=\"icon fa fa-2x ' + options.icon + '\"></div>';\n        if (options.with_number)\n            tmpl+=      '<div class=\"number\"></div>';\n        tmpl +=     '</div>';\n\n        // return template\n        return tmpl;\n    }\n});\n\n/** Masthead tab **/\nvar GalaxyMastheadTab = Backbone.View.extend({\n    // main options\n    options:{\n        id              : '',\n        title           : '',\n        target          : '_parent',\n        content         : '',\n        type            : 'url',\n        scratchbook     : false,\n        onunload        : null,\n        visible         : true,\n        disabled        : false,\n        title_attribute : ''\n    },\n\n    // location\n    location: 'navbar',\n\n    // optional sub menu\n    $menu: null,\n\n    // events\n    events:{\n        'click .head' : '_head'\n    },\n\n    // initialize\n    initialize: function ( options ){\n        // read in defaults\n        if ( options ){\n            this.options = _.defaults( options, this.options );\n        }\n\n        // update url\n        if ( this.options.content !== undefined && this.options.content.indexOf( '//' ) === -1 ){\n            this.options.content = galaxy_config.root + this.options.content;\n        }\n\n        // add template for tab\n        this.setElement( $( this._template( this.options ) ) );\n\n        // disable menu items that are not available to anonymous user\n        // also show title to explain why they are disabled\n        if ( this.options.disabled ){\n            $( this.el ).find( '.root' ).addClass( 'disabled' );\n            this._attachPopover();\n        }\n\n        // visiblity\n        if ( !this.options.visible ){\n            this.hide();\n        }\n    },\n\n    // show\n    show: function(){\n        $(this.el).css({visibility : 'visible'});\n    },\n\n    // show\n    hide: function(){\n        $(this.el).css({visibility : 'hidden'});\n    },\n\n    // add menu item\n    add: function (options){\n        // menu option defaults\n        var menuOptions = {\n            title       : 'Title',\n            content     : '',\n            type        : 'url',\n            target      : '_parent',\n            scratchbook : false,\n            divider     : false\n        }\n\n        // read in defaults\n        if (options)\n            menuOptions = _.defaults(options, menuOptions);\n\n        // update url\n        if (menuOptions.content && menuOptions.content.indexOf('//') === -1)\n            menuOptions.content = galaxy_config.root + menuOptions.content;\n\n        // check if submenu element is available\n        if (!this.$menu){\n            // insert submenu element into root\n            $(this.el).find('.root').append(this._templateMenu());\n\n            // show caret\n            $(this.el).find('.symbol').addClass('caret');\n\n            // update element link\n            this.$menu = $(this.el).find('.popup');\n        }\n\n        // create\n        var $item = $(this._templateMenuItem(menuOptions));\n\n        // append menu\n        this.$menu.append($item);\n\n        // add events\n        var self = this;\n        $item.on('click', function(e){\n            // prevent default\n            e.preventDefault();\n\n            // no modifications if new tab is requested\n            if (self.options.target === '_blank')\n                return true;\n\n            // load into frame\n            Galaxy.frame.add(options);\n        });\n\n        // append divider\n        if (menuOptions.divider)\n            this.$menu.append($(this._templateDivider()));\n    },\n\n    // show menu on header click\n    _head: function(e){\n        // prevent default\n        e.preventDefault();\n\n        if (this.options.disabled){\n            return // prevent link following if menu item is disabled\n        }\n\n        // check for menu options\n        if (!this.$menu) {\n            Galaxy.frame.add(this.options);\n        }\n    },\n\n    _attachPopover : function(){\n        var $popover_element = $(this.el).find('.head');\n        $popover_element.popover({\n            html: true,\n            content: 'Please <a href=\"' + galaxy_config.root + 'user/login?use_panels=True\">log in</a> or <a href=\"' + galaxy_config.root + 'user/create?use_panels=True\">register</a> to use this feature.',\n            placement: 'bottom'\n        }).on('shown.bs.popover', function() { // hooking on bootstrap event to automatically hide popovers after delay\n            setTimeout(function() {\n                $popover_element.popover('hide');\n            }, 5000);\n        });\n     },\n\n    // fill template header\n    _templateMenuItem: function (options){\n        return '<li><a href=\"' + options.content + '\" target=\"' + options.target + '\">' + options.title + '</a></li>';\n    },\n\n    // fill template header\n    _templateMenu: function (){\n        return '<ul class=\"popup dropdown-menu\"></ul>';\n    },\n\n    _templateDivider: function(){\n        return '<li class=\"divider\"></li>';\n    },\n\n    // fill template\n    _template: function (options){\n        // start template\n        var tmpl =  '<ul id=\"' + options.id + '\" class=\"nav navbar-nav\" border=\"0\" cellspacing=\"0\">' +\n                        '<li class=\"root dropdown\" style=\"\">' +\n                            '<a class=\"head dropdown-toggle\" data-toggle=\"dropdown\" target=\"' + options.target + '\" href=\"' + options.content + '\" title=\"' + options.title_attribute + '\">' +\n                                options.title + '<b class=\"symbol\"></b>' +\n                            '</a>' +\n                        '</li>' +\n                    '</ul>';\n\n        // return template\n        return tmpl;\n    }\n});\n\n// return\nreturn {\n    GalaxyMasthead: GalaxyMasthead,\n    GalaxyMastheadTab: GalaxyMastheadTab,\n    GalaxyMastheadIcon: GalaxyMastheadIcon\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/galaxy.masthead.js\n ** module id = 19\n ** module chunks = 2\n **/","define([\n    \"mvc/list/list-item\",\n    \"mvc/dataset/dataset-li\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( LIST_ITEM, DATASET_LI, BASE_MVC, _l ){\n/* global Backbone */\n//==============================================================================\nvar FoldoutListItemView = LIST_ITEM.FoldoutListItemView,\n    ListItemView = LIST_ITEM.ListItemView;\n/** @class Read only view for DatasetCollection.\n */\nvar DCListItemView = FoldoutListItemView.extend(\n/** @lends DCListItemView.prototype */{\n//TODO: may not be needed\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    className   : FoldoutListItemView.prototype.className + \" dataset-collection\",\n    id          : function(){\n        return [ 'dataset_collection', this.model.get( 'id' ) ].join( '-' );\n    },\n\n    /** override to add linkTarget */\n    initialize : function( attributes ){\n        this.linkTarget = attributes.linkTarget || '_blank';\n        this.hasUser = attributes.hasUser;\n        FoldoutListItemView.prototype.initialize.call( this, attributes );\n    },\n\n    /** event listeners */\n    _setUpListeners : function(){\n        FoldoutListItemView.prototype._setUpListeners.call( this );\n        // re-rendering on deletion\n        this.model.on( 'change', function( model, options ){\n            if( _.isEqual( _.keys( model.changed ), [ 'deleted' ] ) ){\n                this.render();\n            }\n        }, this );\n    },\n\n    // ......................................................................... rendering\n    //TODO:?? possibly move to listItem\n    /** render a subtitle to show the user what sort of collection this is */\n    _renderSubtitle : function(){\n        var $subtitle = $( '<div class=\"subtitle\"></div>' );\n        //TODO: would be good to get this in the subtitle\n        //var len = this.model.elements.length;\n        switch( this.model.get( 'collection_type' ) ){\n            case 'list':\n                return $subtitle.text( _l( 'a list of datasets' ) );\n            case 'paired':\n                return $subtitle.text( _l( 'a pair of datasets' ) );\n            case 'list:paired':\n                return $subtitle.text( _l( 'a list of paired datasets' ) );\n        }\n        return $subtitle;\n    },\n\n    // ......................................................................... foldout\n    /** override to add linktarget to sub-panel */\n    _getFoldoutPanelOptions : function(){\n        var options = FoldoutListItemView.prototype._getFoldoutPanelOptions.call( this );\n        return _.extend( options, {\n            linkTarget  : this.linkTarget,\n            hasUser     : this.hasUser\n        });\n    },\n\n    /** override to not catch sub-panel selectors */\n    $selector : function(){\n        return this.$( '> .selector' );\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'DCListItemView(' + modelString + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCListItemView.prototype.templates = (function(){\n\n    var warnings = _.extend( {}, FoldoutListItemView.prototype.templates.warnings, {\n        error : BASE_MVC.wrapTemplate([\n            // error during index fetch - show error on dataset\n            '<% if( model.error ){ %>',\n                '<div class=\"errormessagesmall\">',\n                    _l( 'There was an error getting the data for this collection' ), ': <%- model.error %>',\n                '</div>',\n            '<% } %>'\n        ]),\n        purged : BASE_MVC.wrapTemplate([\n            '<% if( model.purged ){ %>',\n                '<div class=\"purged-msg warningmessagesmall\">',\n                    _l( 'This collection has been deleted and removed from disk' ),\n                '</div>',\n            '<% } %>'\n        ]),\n        deleted : BASE_MVC.wrapTemplate([\n            // deleted not purged\n            '<% if( model.deleted && !model.purged ){ %>',\n                '<div class=\"deleted-msg warningmessagesmall\">',\n                    _l( 'This collection has been deleted' ),\n                '</div>',\n            '<% } %>'\n        ])\n    });\n\n    // use element identifier\n    var titleBarTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<div class=\"title\">',\n                '<span class=\"name\"><%- collection.element_identifier || collection.name %></span>',\n            '</div>',\n            '<div class=\"subtitle\"></div>',\n        '</div>'\n    ], 'collection' );\n\n    return _.extend( {}, FoldoutListItemView.prototype.templates, {\n        warnings : warnings,\n        titleBar : titleBarTemplate\n    });\n}());\n\n\n//==============================================================================\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemView = ListItemView.extend(\n/** @lends DCEListItemView.prototype */{\n//TODO: this might be expendable - compacted with HDAListItemView\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** add the DCE class to the list item */\n    className   : ListItemView.prototype.className + \" dataset-collection-element\",\n\n    /** set up */\n    initialize  : function( attributes ){\n        if( attributes.logger ){ this.logger = this.model.logger = attributes.logger; }\n        this.log( 'DCEListItemView.initialize:', attributes );\n        ListItemView.prototype.initialize.call( this, attributes );\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'DCEListItemView(' + modelString + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDCEListItemView.prototype.templates = (function(){\n\n    // use the element identifier here - since that will persist and the user will need it\n    var titleBarTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<div class=\"title\">',\n                '<span class=\"name\"><%- element.element_identifier %></span>',\n            '</div>',\n            '<div class=\"subtitle\"></div>',\n        '</div>'\n    ], 'element' );\n\n    return _.extend( {}, ListItemView.prototype.templates, {\n        titleBar : titleBarTemplate\n    });\n}());\n\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemView = DATASET_LI.DatasetListItemView.extend(\n/** @lends DatasetDCEListItemView.prototype */{\n\n    className   : DATASET_LI.DatasetListItemView.prototype.className + \" dataset-collection-element\",\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** set up */\n    initialize  : function( attributes ){\n        if( attributes.logger ){ this.logger = this.model.logger = attributes.logger; }\n        this.log( 'DatasetDCEListItemView.initialize:', attributes );\n        DATASET_LI.DatasetListItemView.prototype.initialize.call( this, attributes );\n    },\n\n    /** In this override, only get details if in the ready state.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n    _fetchModelDetails : function(){\n        var view = this;\n        if( view.model.inReadyState() && !view.model.hasDetails() ){\n            return view.model.fetch({ silent: true });\n        }\n        return jQuery.when();\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'DatasetDCEListItemView(' + modelString + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemView.prototype.templates = (function(){\n\n    // use the element identifier here and not the dataset name\n    //TODO:?? can we steal the DCE titlebar?\n    var titleBarTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n                '<span class=\"name\"><%- element.element_identifier %></span>',\n            '</div>',\n        '</div>'\n    ], 'element' );\n\n    return _.extend( {}, DATASET_LI.DatasetListItemView.prototype.templates, {\n        titleBar : titleBarTemplate\n    });\n}());\n\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemView = DCListItemView.extend(\n/** @lends NestedDCDCEListItemView.prototype */{\n\n    className   : DCListItemView.prototype.className + \" dataset-collection-element\",\n\n    /** logger used to record this.log messages, commonly set to console */\n    // comment this out to suppress log output\n    //logger              : console,\n\n    /** In this override, add the state as a class for use with state-based CSS */\n    _swapNewRender : function( $newRender ){\n        DCListItemView.prototype._swapNewRender.call( this, $newRender );\n//TODO: model currently has no state\n        var state = this.model.get( 'state' ) || 'ok';\n        //if( this.model.has( 'state' ) ){\n        this.$el.addClass( 'state-' + state );\n        //}\n        return this.$el;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'NestedDCDCEListItemView(' + modelString + ')';\n    }\n});\n\n\n//==============================================================================\n    return {\n        DCListItemView          : DCListItemView,\n        DCEListItemView         : DCEListItemView,\n        DatasetDCEListItemView  : DatasetDCEListItemView,\n        NestedDCDCEListItemView : NestedDCDCEListItemView\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/collection/collection-li.js\n ** module id = 20\n ** module chunks = 2\n **/","define([\n    \"mvc/dataset/dataset-model\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( DATASET_MODEL, BASE_MVC, _l ){\n\nvar logNamespace = 'collections';\n//==============================================================================\n/*\nNotes:\n\nTerminology:\n    DatasetCollection/DC : a container of datasets or nested DatasetCollections\n    Element/DatasetCollectionElement/DCE : an item contained in a DatasetCollection\n    HistoryDatasetCollectionAssociation/HDCA: a DatasetCollection contained in a history\n\n\nThis all seems too complex unfortunately:\n\n- Terminology collision between DatasetCollections (DCs) and Backbone Collections.\n- In the DatasetCollections API JSON, DC Elements use a 'Has A' stucture to *contain*\n    either a dataset or a nested DC. This would make the hierarchy much taller. I've\n    decided to merge the contained JSON with the DC element json - making the 'has a'\n    relation into an 'is a' relation. This seems simpler to me and allowed a lot of\n    DRY in both models and views, but may make tracking or tracing within these models\n    more difficult (since DatasetCollectionElements are now *also* DatasetAssociations\n    or DatasetCollections (nested)). This also violates the rule of thumb about\n    favoring aggregation over inheritance.\n- Currently, there are three DatasetCollection subclasses: List, Pair, and ListPaired.\n    These each should a) be usable on their own, b) be usable in the context of\n    nesting within a collection model (at least in the case of ListPaired), and\n    c) be usable within the context of other container models (like History or\n    LibraryFolder, etc.). I've tried to separate/extract classes in order to\n    handle those three situations, but it's proven difficult to do in a simple,\n    readable manner.\n- Ideally, histories and libraries would inherit from the same server models as\n    dataset collections do since they are (in essence) dataset collections themselves -\n    making the whole nested structure simpler. This would be a large, error-prone\n    refactoring and migration.\n\nMany of the classes and heirarchy are meant as extension points so, while the\nrelations and flow may be difficult to understand initially, they'll allow us to\nhandle the growth or flux dataset collection in the future (w/o actually implementing\nany YAGNI).\n\n*/\n//_________________________________________________________________________________________________ ELEMENTS\n/** @class mixin for Dataset collection elements.\n *      When collection elements are passed from the API, the underlying element is\n *          in a sub-object 'object' (IOW, a DCE representing an HDA will have HDA json in element.object).\n *      This mixin uses the constructor and parse methods to merge that JSON with the DCE attribtues\n *          effectively changing a DCE from a container to a subclass (has a --> is a).\n */\nvar DatasetCollectionElementMixin = {\n\n    /** default attributes used by elements in a dataset collection */\n    defaults : {\n        model_class         : 'DatasetCollectionElement',\n        element_identifier  : null,\n        element_index       : null,\n        element_type        : null\n    },\n\n    /** merge the attributes of the sub-object 'object' into this model */\n    _mergeObject : function( attributes ){\n        // if we don't preserve and correct ids here, the element id becomes the object id\n        // and collision in backbone's _byId will occur and only\n        _.extend( attributes, attributes.object, { element_id: attributes.id });\n        delete attributes.object;\n        return attributes;\n    },\n\n    /** override to merge this.object into this */\n    constructor : function( attributes, options ){\n        // console.debug( '\\t DatasetCollectionElement.constructor:', attributes, options );\n        attributes = this._mergeObject( attributes );\n        this.idAttribute = 'element_id';\n        Backbone.Model.apply( this, arguments );\n    },\n\n    /** when the model is fetched, merge this.object into this */\n    parse : function( response, options ){\n        var attributes = response;\n        attributes = this._mergeObject( attributes );\n        return attributes;\n    }\n};\n\n//TODO: unused?\n/** @class Concrete class of Generic DatasetCollectionElement */\nvar DatasetCollectionElement = Backbone.Model\n    .extend( BASE_MVC.LoggableMixin )\n    .extend( DatasetCollectionElementMixin )\n    .extend({ _logNamespace : logNamespace });\n\n\n//==============================================================================\n/** @class Base/Abstract Backbone collection for Generic DCEs. */\nvar DCECollection = Backbone.Collection.extend( BASE_MVC.LoggableMixin ).extend(\n/** @lends DCECollection.prototype */{\n    _logNamespace : logNamespace,\n\n    model: DatasetCollectionElement,\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n//TODO: unused?\n    /** Set up.\n     *  @see Backbone.Collection#initialize\n     */\n    initialize : function( attributes, options ){\n        this.debug( this + '(DCECollection).initialize:', attributes, options );\n        options = options || {};\n        //this._setUpListeners();\n    },\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'DatasetCollectionElementCollection(', this.length, ')' ].join( '' ));\n    }\n});\n\n\n//==============================================================================\n/** @class Backbone model for a dataset collection element that is a dataset (HDA).\n */\nvar DatasetDCE = DATASET_MODEL.DatasetAssociation.extend( BASE_MVC.mixin( DatasetCollectionElementMixin,\n/** @lends DatasetDCE.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** url fn */\n    url : function(){\n        var galaxyRoot = (( window.galaxy_config && galaxy_config.root )?( galaxy_config.root ):( '/' ));\n        // won't always be an hda\n        if( !this.has( 'history_id' ) ){\n            console.warn( 'no endpoint for non-hdas within a collection yet' );\n            // (a little silly since this api endpoint *also* points at hdas)\n            return galaxyRoot + 'api/datasets';\n        }\n        return galaxyRoot + 'api/histories/' + this.get( 'history_id' ) + '/contents/' + this.get( 'id' );\n    },\n\n    defaults : _.extend( {},\n        DATASET_MODEL.DatasetAssociation.prototype.defaults,\n        DatasetCollectionElementMixin.defaults\n    ),\n\n    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n    //  - re-apply manually for now\n    /** call the mixin constructor */\n    constructor : function( attributes, options ){\n        this.debug( '\\t DatasetDCE.constructor:', attributes, options );\n        //DATASET_MODEL.DatasetAssociation.prototype.constructor.call( this, attributes, options );\n        DatasetCollectionElementMixin.constructor.call( this, attributes, options );\n    },\n\n//TODO: unused?\n    /** set up */\n    initialize : function( attributes, options ){\n        this.debug( this + '(DatasetDCE).initialize:', attributes, options );\n        DATASET_MODEL.DatasetAssociation.prototype.initialize.call( this, attributes, options );\n    },\n\n    /** Does this model already contain detailed data (as opposed to just summary level data)? */\n    hasDetails : function(){\n        // dataset collection api does return genome_build but doesn't return annotation\n        return _.has( this.attributes, 'annotation' );\n    },\n\n    /** String representation. */\n    toString : function(){\n        var objStr = this.get( 'element_identifier' );\n        return ([ 'DatasetDCE(', objStr, ')' ].join( '' ));\n    }\n}));\n\n\n//==============================================================================\n/** @class DCECollection of DatasetDCE's (a list of datasets, a pair of datasets).\n */\nvar DatasetDCECollection = DCECollection.extend(\n/** @lends DatasetDCECollection.prototype */{\n    model: DatasetDCE,\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n//TODO: unused?\n    /** set up */\n    initialize : function( attributes, options ){\n        this.debug( this + '(DatasetDCECollection).initialize:', attributes, options );\n        DCECollection.prototype.initialize.call( this, attributes, options );\n    },\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'DatasetDCECollection(', this.length, ')' ].join( '' ));\n    }\n});\n\n\n//_________________________________________________________________________________________________ COLLECTIONS\n/** @class Backbone model for Dataset Collections.\n *      The DC API returns an array of JSON objects under the attribute elements.\n *      This model:\n *          - removes that array/attribute ('elements') from the model,\n *          - creates a bbone collection (of the class defined in the 'collectionClass' attribute),\n *          - passes that json onto the bbone collection\n *          - caches the bbone collection in this.elements\n */\nvar DatasetCollection = Backbone.Model\n        .extend( BASE_MVC.LoggableMixin )\n        .extend( BASE_MVC.SearchableModelMixin )\n        .extend(/** @lends DatasetCollection.prototype */{\n    _logNamespace : logNamespace,\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** default attributes for a model */\n    defaults : {\n        /* 'list', 'paired', or 'list:paired' */\n        collection_type     : null,\n        //??\n        deleted             : false\n    },\n\n    /** Which class to use for elements */\n    collectionClass : DCECollection,\n\n    /** set up: create elements instance var and (on changes to elements) update them  */\n    initialize : function( model, options ){\n        this.debug( this + '(DatasetCollection).initialize:', model, options, this );\n        //historyContent.HistoryContent.prototype.initialize.call( this, attrs, options );\n        this.elements = this._createElementsModel();\n        this.on( 'change:elements', function(){\n            this.log( 'change:elements' );\n//TODO: prob. better to update the collection instead of re-creating it\n            this.elements = this._createElementsModel();\n        });\n    },\n\n    /** move elements model attribute to full collection */\n    _createElementsModel : function(){\n        this.debug( this + '._createElementsModel', this.collectionClass, this.get( 'elements' ), this.elements );\n//TODO: same patterns as DatasetCollectionElement _createObjectModel - refactor to BASE_MVC.hasSubModel?\n        var elements = this.get( 'elements' ) || [];\n        this.unset( 'elements', { silent: true });\n        this.elements = new this.collectionClass( elements );\n        //this.debug( 'collectionClass:', this.collectionClass + '', this.elements );\n        return this.elements;\n    },\n\n    // ........................................................................ common queries\n    /** pass the elements back within the model json when this is serialized */\n    toJSON : function(){\n        var json = Backbone.Model.prototype.toJSON.call( this );\n        if( this.elements ){\n            json.elements = this.elements.toJSON();\n        }\n        return json;\n    },\n\n    /** Is this collection in a 'ready' state no processing (for the collection) is left\n     *  to do on the server.\n     */\n    inReadyState : function(){\n        var populated = this.get( 'populated' );\n        return ( this.isDeletedOrPurged() || populated );\n    },\n\n    //TODO:?? the following are the same interface as DatasetAssociation - can we combine?\n    /** Does the DC contain any elements yet? Is a fetch() required? */\n    hasDetails : function(){\n//TODO: this is incorrect for (accidentally) empty collections\n        this.debug( 'hasDetails:', this.elements.length );\n        return this.elements.length !== 0;\n    },\n\n    /** Given the filters, what models in this.elements would be returned? */\n    getVisibleContents : function( filters ){\n        // filters unused for now\n        return this.elements;\n    },\n\n    // ........................................................................ ajax\n    /** save this dataset, _Mark_ing it as deleted (just a flag) */\n    'delete' : function( options ){\n        if( this.get( 'deleted' ) ){ return jQuery.when(); }\n        return this.save( { deleted: true }, options );\n    },\n    /** save this dataset, _Mark_ing it as undeleted */\n    undelete : function( options ){\n        if( !this.get( 'deleted' ) || this.get( 'purged' ) ){ return jQuery.when(); }\n        return this.save( { deleted: false }, options );\n    },\n\n    /** Is this collection deleted or purged? */\n    isDeletedOrPurged : function(){\n        return ( this.get( 'deleted' ) || this.get( 'purged' ) );\n    },\n\n    // ........................................................................ searchable\n    /** searchable attributes for collections */\n    searchAttributes : [\n        'name'\n    ],\n\n    // ........................................................................ misc\n    /** String representation */\n    toString : function(){\n        var idAndName = [ this.get( 'id' ), this.get( 'name' ) || this.get( 'element_identifier' ) ];\n        return 'DatasetCollection(' + ( idAndName.join(',') ) + ')';\n    }\n});\n\n\n//==============================================================================\n/** Model for a DatasetCollection containing datasets (non-nested).\n */\nvar ListDatasetCollection = DatasetCollection.extend(\n/** @lends ListDatasetCollection.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** override since we know the collection will only contain datasets */\n    collectionClass : DatasetDCECollection,\n\n//TODO: unused?\n    initialize : function( attrs, options ){\n        this.debug( this + '(ListDatasetCollection).initialize:', attrs, options );\n        DatasetCollection.prototype.initialize.call( this, attrs, options );\n    },\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'ListDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n    }\n});\n\n\n//==============================================================================\n/** Model for a DatasetCollection containing fwd/rev datasets (a list of 2).\n */\nvar PairDatasetCollection = ListDatasetCollection.extend(\n/** @lends PairDatasetCollection.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n//TODO: unused?\n    /**  */\n    initialize : function( attrs, options ){\n        this.debug( this + '(PairDatasetCollection).initialize:', attrs, options );\n        ListDatasetCollection.prototype.initialize.call( this, attrs, options );\n    },\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'PairDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n    }\n});\n\n\n//_________________________________________________________________________________________________ NESTED COLLECTIONS\n// this is where things get weird, man. Weird.\n//TODO: it might be possible to compact all the following...I think.\n//==============================================================================\n/** @class Backbone model for a Generic DatasetCollectionElement that is also a DatasetCollection\n *      (a nested collection). Currently only list:paired.\n */\nvar NestedDCDCE = DatasetCollection.extend( BASE_MVC.mixin( DatasetCollectionElementMixin,\n/** @lends NestedDCDCE.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n    //  - re-apply manually it now\n    /** call the mixin constructor */\n    constructor : function( attributes, options ){\n        this.debug( '\\t NestedDCDCE.constructor:', attributes, options );\n        DatasetCollectionElementMixin.constructor.call( this, attributes, options );\n    },\n\n    /** String representation. */\n    toString : function(){\n        var objStr = ( this.object )?( '' + this.object ):( this.get( 'element_identifier' ) );\n        return ([ 'NestedDCDCE(', objStr, ')' ].join( '' ));\n    }\n}));\n\n\n//==============================================================================\n/** @class Backbone collection containing Generic NestedDCDCE's (nested dataset collections).\n */\nvar NestedDCDCECollection = DCECollection.extend(\n/** @lends NestedDCDCECollection.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** This is a collection of nested collections */\n    model: NestedDCDCE,\n\n//TODO: unused?\n    /** set up */\n    initialize : function( attrs, options ){\n        this.debug( this + '(NestedDCDCECollection).initialize:', attrs, options );\n        DCECollection.prototype.initialize.call( this, attrs, options );\n    },\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'NestedDCDCECollection(', this.length, ')' ].join( '' ));\n    }\n});\n\n\n//==============================================================================\n/** @class Backbone model for a paired dataset collection within a list:paired dataset collection.\n */\nvar NestedPairDCDCE = PairDatasetCollection.extend( BASE_MVC.mixin( DatasetCollectionElementMixin,\n/** @lends NestedPairDCDCE.prototype */{\n//TODO:?? possibly rename to NestedDatasetCollection?\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n    //  - re-apply manually it now\n    /** This is both a collection and a collection element - call the constructor */\n    constructor : function( attributes, options ){\n        this.debug( '\\t NestedPairDCDCE.constructor:', attributes, options );\n        //DatasetCollection.constructor.call( this, attributes, options );\n        DatasetCollectionElementMixin.constructor.call( this, attributes, options );\n    },\n\n    /** String representation. */\n    toString : function(){\n        var objStr = ( this.object )?( '' + this.object ):( this.get( 'element_identifier' ) );\n        return ([ 'NestedPairDCDCE(', objStr, ')' ].join( '' ));\n    }\n}));\n\n\n//==============================================================================\n/** @class Backbone collection for a backbone collection containing paired dataset collections.\n */\nvar NestedPairDCDCECollection = NestedDCDCECollection.extend(\n/** @lends PairDCDCECollection.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** We know this collection is composed of only nested pair collections */\n    model: NestedPairDCDCE,\n\n//TODO: unused?\n    /** set up */\n    initialize : function( attrs, options ){\n        this.debug( this + '(NestedPairDCDCECollection).initialize:', attrs, options );\n        NestedDCDCECollection.prototype.initialize.call( this, attrs, options );\n    },\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'NestedPairDCDCECollection(', this.length, ')' ].join( '' ));\n    }\n});\n\n\n//==============================================================================\n/** @class Backbone Model for a DatasetCollection (list) that contains DatasetCollections (pairs).\n */\nvar ListPairedDatasetCollection = DatasetCollection.extend(\n/** @lends ListPairedDatasetCollection.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** list:paired is the only collection that itself contains collections */\n    collectionClass : NestedPairDCDCECollection,\n\n//TODO: unused?\n    /** set up */\n    initialize : function( attributes, options ){\n        this.debug( this + '(ListPairedDatasetCollection).initialize:', attributes, options );\n        DatasetCollection.prototype.initialize.call( this, attributes, options );\n    },\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'ListPairedDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n    }\n});\n\n\n//==============================================================================\n    return {\n        ListDatasetCollection               : ListDatasetCollection,\n        PairDatasetCollection               : PairDatasetCollection,\n        ListPairedDatasetCollection         : ListPairedDatasetCollection\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/collection/collection-model.js\n ** module id = 21\n ** module chunks = 2\n **/","\ndefine([\n    \"mvc/history/hdca-model\",\n    \"mvc/dataset/states\",\n    \"mvc/base-mvc\",\n    \"mvc/ui/ui-modal\",\n    \"utils/natural-sort\",\n    \"utils/localization\",\n    \"ui/hoverhighlight\"\n], function( HDCA, STATES, BASE_MVC, UI_MODAL, naturalSort, _l ){\n\nvar logNamespace = 'collections';\n/*==============================================================================\nTODO:\n    use proper Element model and not just json\n    straighten out createFn, collection.createHDCA\n    possibly stop using modals for this\n    It would be neat to do a drag and drop\n\n==============================================================================*/\n/** A view for both DatasetDCEs and NestedDCDCEs\n *  (things that implement collection-model:DatasetCollectionElementMixin)\n */\nvar DatasetCollectionElementView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n    _logNamespace : logNamespace,\n\n//TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n    tagName     : 'li',\n    className   : 'collection-element',\n\n    initialize : function( attributes ){\n        this.element = attributes.element || {};\n        this.selected = attributes.selected || false;\n    },\n\n    render : function(){\n        this.$el\n            .attr( 'data-element-id', this.element.id )\n            .attr( 'draggable', true )\n            .html( this.template({ element: this.element }) );\n        if( this.selected ){\n            this.$el.addClass( 'selected' );\n        }\n        return this;\n    },\n\n    //TODO: lots of unused space in the element - possibly load details and display them horiz.\n    template : _.template([\n        '<a class=\"name\" title=\"', _l( 'Click to rename' ), '\" href=\"javascript:void(0)\">',\n            '<%= element.name %>',\n        '</a>',\n        '<button class=\"discard btn btn-sm\" title=\"', _l( 'Remove this dataset from the list' ), '\">',\n            _l( 'Discard' ),\n        '</button>',\n    ].join('')),\n\n    /** select this element and pub */\n    select : function( toggle ){\n        this.$el.toggleClass( 'selected', toggle );\n        this.trigger( 'select', {\n            source   : this,\n            selected : this.$el.hasClass( 'selected' )\n        });\n    },\n\n    /** animate the removal of this element and pub */\n    discard : function(){\n        var view = this,\n            parentWidth = this.$el.parent().width();\n        this.$el.animate({ 'margin-right' : parentWidth }, 'fast', function(){\n            view.trigger( 'discard', {\n                source : view\n            });\n            view.destroy();\n        });\n    },\n\n    /** remove the DOM and any listeners */\n    destroy : function(){\n        this.off();\n        this.$el.remove();\n    },\n\n    events : {\n        'click'         : '_click',\n        'click .name'   : '_clickName',\n        'click .discard': '_clickDiscard',\n\n        'dragstart'     : '_dragstart',\n        'dragend'       : '_dragend',\n        'dragover'      : '_sendToParent',\n        'drop'          : '_sendToParent'\n    },\n\n    /** select when the li is clicked */\n    _click : function( ev ){\n        ev.stopPropagation();\n        this.select( ev );\n    },\n\n    /** rename a pair when the name is clicked */\n    _clickName : function( ev ){\n        ev.stopPropagation();\n        ev.preventDefault();\n        var promptString = [ _l( 'Enter a new name for the element' ), ':\\n(',\n                             _l( 'Note that changing the name here will not rename the dataset' ), ')' ].join( '' ),\n            response = prompt( _l( 'Enter a new name for the element' ) + ':', this.element.name );\n        if( response ){\n            this.element.name = response;\n            this.render();\n        }\n        //TODO: cancelling with ESC leads to closure of the creator...\n    },\n\n    /** discard when the discard button is clicked */\n    _clickDiscard : function( ev ){\n        ev.stopPropagation();\n        this.discard();\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragstart : function( ev ){\n        if( ev.originalEvent ){ ev = ev.originalEvent; }\n        ev.dataTransfer.effectAllowed = 'move';\n        ev.dataTransfer.setData( 'text/plain', JSON.stringify( this.element ) );\n\n        this.$el.addClass( 'dragging' );\n        this.$el.parent().trigger( 'collection-element.dragstart', [ this ] );\n    },\n\n    /** dragging for re-ordering */\n    _dragend : function( ev ){\n        this.$el.removeClass( 'dragging' );\n        this.$el.parent().trigger( 'collection-element.dragend', [ this ] );\n    },\n\n    /** manually bubble up an event to the parent/container */\n    _sendToParent : function( ev ){\n        this.$el.parent().trigger( ev );\n    },\n\n    /** string rep */\n    toString : function(){\n        return 'DatasetCollectionElementView()';\n    }\n});\n\n\n// ============================================================================\n/** An interface for building collections.\n */\nvar ListCollectionCreator = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n    _logNamespace : logNamespace,\n\n    /** the class used to display individual elements */\n    elementViewClass : DatasetCollectionElementView,\n    /** the class this creator will create and save */\n    collectionClass  : HDCA.HistoryListDatasetCollection,\n    className        : 'list-collection-creator collection-creator flex-row-container',\n\n    /** minimum number of valid elements to start with in order to build a collection of this type */\n    minElements      : 1,\n\n    defaultAttributes : {\n//TODO: remove - use new collectionClass().save()\n        /** takes elements and creates the proper collection - returns a promise */\n        creationFn : function(){ throw new TypeError( 'no creation fn for creator' ); },\n        /** fn to call when the collection is created (scoped to this) */\n        oncreate   : function(){},\n        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n        oncancel   : function(){},\n        /** distance from list edge to begin autoscrolling list */\n        autoscrollDist  : 24,\n        /** Color passed to hoverhighlight */\n        highlightClr    : 'rgba( 64, 255, 255, 1.0 )'\n    },\n\n    /** set up initial options, instance vars, behaviors */\n    initialize : function( attributes ){\n        this.metric( 'ListCollectionCreator.initialize', attributes );\n        var creator = this;\n        _.each( this.defaultAttributes, function( value, key ){\n            value = attributes[ key ] || value;\n            creator[ key ] = value;\n        });\n\n        /** unordered, original list - cache to allow reversal */\n        creator.initialElements = attributes.elements || [];\n\n        this._instanceSetUp();\n        this._elementsSetUp();\n        this._setUpBehaviors();\n    },\n\n    /** set up instance vars */\n    _instanceSetUp : function(){\n        /** Ids of elements that have been selected by the user - to preserve over renders */\n        this.selectedIds = {};\n        /** DOM elements currently being dragged */\n        this.$dragging = null;\n        /** Used for blocking UI events during ajax/operations (don't post twice) */\n        this.blocking = false;\n    },\n\n    // ------------------------------------------------------------------------ process raw list\n    /** set up main data */\n    _elementsSetUp : function(){\n        //this.debug( '-- _dataSetUp' );\n        /** a list of invalid elements and the reasons they aren't valid */\n        this.invalidElements = [];\n//TODO: handle fundamental problem of syncing DOM, views, and list here\n        /** data for list in progress */\n        this.workingElements = [];\n        /** views for workingElements */\n        this.elementViews = [];\n\n        // copy initial list, sort, add ids if needed\n        this.workingElements = this.initialElements.slice( 0 );\n        this._ensureElementIds();\n        this._validateElements();\n        this._mangleDuplicateNames();\n        this._sortElements();\n    },\n\n    /** add ids to dataset objs in initial list if none */\n    _ensureElementIds : function(){\n        this.workingElements.forEach( function( element ){\n            if( !element.hasOwnProperty( 'id' ) ){\n                element.id = _.uniqueId();\n            }\n        });\n        return this.workingElements;\n    },\n\n    /** separate working list into valid and invalid elements for this collection */\n    _validateElements : function(){\n        var creator = this,\n            existingNames = {};\n        creator.invalidElements = [];\n\n        this.workingElements = this.workingElements.filter( function( element ){\n            var problem = creator._isElementInvalid( element );\n            if( problem ){\n                creator.invalidElements.push({\n                    element : element,\n                    text    : problem\n                });\n            }\n            return !problem;\n        });\n        return this.workingElements;\n    },\n\n    /** describe what is wrong with a particular element if anything */\n    _isElementInvalid : function( element ){\n        if( element.history_content_type !== 'dataset' ){\n            return _l( \"is not a dataset\" );\n        }\n        if( element.state !== STATES.OK ){\n            if( _.contains( STATES.NOT_READY_STATES, element.state ) ){\n                return _l( \"hasn't finished running yet\" );\n            }\n            return _l( \"has errored, is paused, or is not accessible\" );\n        }\n        if( element.deleted || element.purged ){\n            return _l( \"has been deleted or purged\" );\n        }\n        return null;\n    },\n\n    /** mangle duplicate names using a mac-like '(counter)' addition to any duplicates */\n    _mangleDuplicateNames : function(){\n        var SAFETY = 900,\n            counter = 1,\n            existingNames = {};\n        this.workingElements.forEach( function( element ){\n            var currName = element.name;\n            while( existingNames.hasOwnProperty( currName ) ){\n                currName = element.name + ' (' + counter + ')';\n                counter += 1;\n                if( counter >= SAFETY ){\n                    throw new Error( 'Safety hit in while loop - thats impressive' );\n                }\n            }\n            element.name = currName;\n            existingNames[ element.name ] = true;\n        });\n    },\n\n    /** sort a list of elements */\n    _sortElements : function( list ){\n        // // currently only natural sort by name\n        // this.workingElements.sort( function( a, b ){ return naturalSort( a.name, b.name ); });\n        // return this.workingElements;\n    },\n\n    // ------------------------------------------------------------------------ rendering\n    // templates : ListCollectionCreator.templates,\n    /** render the entire interface */\n    render : function( speed, callback ){\n        //this.debug( '-- _render' );\n        if( this.workingElements.length < this.minElements ){\n            return this._renderInvalid( speed, callback );\n        }\n\n        this.$el.empty().html( this.templates.main() );\n        this._renderHeader( speed );\n        this._renderMiddle( speed );\n        this._renderFooter( speed );\n        this._addPluginComponents();\n        this.$( '.collection-name' ).focus();\n        this.trigger( 'rendered', this );\n        return this;\n    },\n\n\n    /** render a simplified interface aimed at telling the user why they can't move forward */\n    _renderInvalid : function( speed, callback ){\n        //this.debug( '-- _render' );\n        this.$el.empty().html( this.templates.invalidInitial({\n            problems: this.invalidElements,\n            elements: this.workingElements,\n        }));\n        if( typeof this.oncancel === 'function' ){\n            this.$( '.cancel-create.btn' ).show();\n        }\n        this.trigger( 'rendered', this );\n        return this;\n    },\n\n    /** render the header section */\n    _renderHeader : function( speed, callback ){\n        var $header = this.$( '.header' ).empty().html( this.templates.header() )\n            .find( '.help-content' ).prepend( $( this.templates.helpContent() ) );\n        //TODO: should only show once despite calling _renderHeader again\n        if( this.invalidElements.length ){\n            this._invalidElementsAlert();\n        }\n        return $header;\n    },\n\n    /** render the middle including the elements */\n    _renderMiddle : function( speed, callback ){\n        var $middle = this.$( '.middle' ).empty().html( this.templates.middle() );\n        this._renderList( speed );\n        return $middle;\n    },\n\n    /** render the footer, completion controls, and cancel controls */\n    _renderFooter : function( speed, callback ){\n        var $footer = this.$( '.footer' ).empty().html( this.templates.footer() );\n        if( typeof this.oncancel === 'function' ){\n            this.$( '.cancel-create.btn' ).show();\n        }\n        return $footer;\n    },\n\n    /** add any jQuery/bootstrap/custom plugins to elements rendered */\n    _addPluginComponents : function(){\n        this.$( '.help-content i' ).hoverhighlight( '.collection-creator', this.highlightClr );\n    },\n\n    /** build and show an alert describing any elements that could not be included due to problems */\n    _invalidElementsAlert : function(){\n        this._showAlert( this.templates.invalidElements({ problems: this.invalidElements }), 'alert-warning' );\n    },\n\n    /** add (or clear if clear is truthy) a validation warning to the DOM element described in what */\n    _validationWarning : function( what, clear ){\n        var VALIDATION_CLASS = 'validation-warning';\n        if( what === 'name' ){\n            what = this.$( '.collection-name' ).add( this.$( '.collection-name-prompt' ) );\n            this.$( '.collection-name' ).focus().select();\n        }\n        if( clear ){\n            what = what || this.$( '.' + VALIDATION_CLASS );\n            what.removeClass( VALIDATION_CLASS );\n        } else {\n            what.addClass( VALIDATION_CLASS );\n        }\n    },\n\n    _disableNameAndCreate : function( disable ){\n        disable = !_.isUndefined( disable )? disable : true;\n        if( disable ){\n            this.$( '.collection-name' ).prop( 'disabled', true );\n            this.$( '.create-collection' ).toggleClass( 'disabled', true );\n        // } else {\n        //     this.$( '.collection-name' ).prop( 'disabled', false );\n        //     this.$( '.create-collection' ).removeClass( 'disable' );\n        }\n    },\n\n    // ------------------------------------------------------------------------ rendering elements\n    /** conv. to the main list display DOM */\n    $list : function(){\n        return this.$( '.collection-elements' );\n    },\n\n    /** show or hide the clear selected control based on the num of selected elements */\n    _renderClearSelected : function(){\n        if( _.size( this.selectedIds ) ){\n            this.$( '.collection-elements-controls > .clear-selected' ).show();\n        } else {\n            this.$( '.collection-elements-controls > .clear-selected' ).hide();\n        }\n    },\n\n    /** render the elements in order (or a warning if no elements found) */\n    _renderList : function( speed, callback ){\n        //this.debug( '-- _renderList' );\n        var creator = this,\n            $tmp = jQuery( '<div/>' ),\n            $list = creator.$list();\n\n        _.each( this.elementViews, function( view ){\n            view.destroy();\n            creator.removeElementView( view );\n        });\n\n        // if( !this.workingElements.length ){\n        //     this._renderNoValidElements();\n        //     return;\n        // }\n\n        creator.workingElements.forEach( function( element ){\n            var elementView = creator._createElementView( element );\n            $tmp.append( elementView.$el );\n        });\n\n        creator._renderClearSelected();\n        $list.empty().append( $tmp.children() );\n        _.invoke( creator.elementViews, 'render' );\n\n        if( $list.height() > $list.css( 'max-height' ) ){\n            $list.css( 'border-width', '1px 0px 1px 0px' );\n        } else {\n            $list.css( 'border-width', '0px' );\n        }\n    },\n\n    /** create an element view, cache in elementViews, set up listeners, and return */\n    _createElementView : function( element ){\n        var elementView = new this.elementViewClass({\n//TODO: use non-generic class or not all\n            // model : COLLECTION.DatasetDCE( element )\n            element : element,\n            selected: _.has( this.selectedIds, element.id )\n        });\n        this.elementViews.push( elementView );\n        this._listenToElementView( elementView );\n        return elementView;\n    },\n\n    /** listen to any element events */\n    _listenToElementView : function( view ){\n        var creator = this;\n        creator.listenTo( view, {\n            select : function( data ){\n                var element = data.source.element;\n                if( data.selected ){\n                    creator.selectedIds[ element.id ] = true;\n                } else {\n                    delete creator.selectedIds[ element.id ];\n                }\n                creator.trigger( 'elements:select', data );\n            },\n            discard : function( data ){\n                creator.trigger( 'elements:discard', data );\n            }\n        });\n    },\n\n    /** add a new element view based on the json in element */\n    addElementView : function( element ){\n//TODO: workingElements is sorted, add element in appropo index\n        // add element, sort elements, find element index\n        // var view = this._createElementView( element );\n        // return view;\n    },\n\n    /** stop listening to view and remove from caches */\n    removeElementView : function( view ){\n        delete this.selectedIds[ view.element.id ];\n        this._renderClearSelected();\n\n        this.elementViews = _.without( this.elementViews, view );\n        this.stopListening( view );\n    },\n\n    /** render a message in the list that no elements remain to create a collection */\n    _renderNoElementsLeft : function(){\n        this._disableNameAndCreate( true );\n        this.$( '.collection-elements' ).append( this.templates.noElementsLeft() );\n    },\n\n    // /** render a message in the list that no valid elements were found to create a collection */\n    // _renderNoValidElements : function(){\n    //     this._disableNameAndCreate( true );\n    //     this.$( '.collection-elements' ).append( this.templates.noValidElements() );\n    // },\n\n    // ------------------------------------------------------------------------ API\n    /** convert element into JSON compatible with the collections API */\n    _elementToJSON : function( element ){\n        // return element.toJSON();\n        return element;\n    },\n\n    /** create the collection via the API\n     *  @returns {jQuery.xhr Object} the jquery ajax request\n     */\n    createList : function( name ){\n        if( !this.workingElements.length ){\n            var message = _l( 'No valid elements for final list' ) + '. ';\n            message += '<a class=\"cancel-create\" href=\"javascript:void(0);\">' + _l( 'Cancel' ) + '</a> ';\n            message += _l( 'or' );\n            message += ' <a class=\"reset\" href=\"javascript:void(0);\">' + _l( 'start over' ) + '</a>.';\n            this._showAlert( message );\n            return;\n        }\n\n        var creator = this,\n            elements = this.workingElements.map( function( element ){\n                return creator._elementToJSON( element );\n            });\n\n        creator.blocking = true;\n        return creator.creationFn( elements, name )\n            .always( function(){\n                creator.blocking = false;\n            })\n            .fail( function( xhr, status, message ){\n                creator.trigger( 'error', {\n                    xhr     : xhr,\n                    status  : status,\n                    message : _l( 'An error occurred while creating this collection' )\n                });\n            })\n            .done( function( response, message, xhr ){\n                creator.trigger( 'collection:created', response, message, xhr );\n                creator.metric( 'collection:created', response );\n                if( typeof creator.oncreate === 'function' ){\n                    creator.oncreate.call( this, response, message, xhr );\n                }\n            });\n    },\n\n    // ------------------------------------------------------------------------ events\n    /** set up event handlers on self */\n    _setUpBehaviors : function(){\n        this.on( 'error', this._errorHandler );\n\n        this.once( 'rendered', function(){\n            this.trigger( 'rendered:initial', this );\n        });\n\n        this.on( 'elements:select', function( data ){\n            this._renderClearSelected();\n        });\n\n        this.on( 'elements:discard', function( data ){\n            var element = data.source.element;\n            this.removeElementView( data.source );\n\n            this.workingElements = _.without( this.workingElements, element );\n            if( !this.workingElements.length ){\n                this._renderNoElementsLeft();\n            }\n        });\n\n        //this.on( 'all', function(){\n        //    this.info( arguments );\n        //});\n        return this;\n    },\n\n    /** handle errors with feedback and details to the user (if available) */\n    _errorHandler : function( data ){\n        this.error( data );\n\n        var creator = this;\n            content = data.message || _l( 'An error occurred' );\n        if( data.xhr ){\n            var xhr = data.xhr,\n                message = data.message;\n            if( xhr.readyState === 0 && xhr.status === 0 ){\n                content += ': ' + _l( 'Galaxy could not be reached and may be updating.' ) +\n                    _l( ' Try again in a few minutes.' );\n            } else if( xhr.responseJSON ){\n                content += ':<br /><pre>' + JSON.stringify( xhr.responseJSON ) + '</pre>';\n            } else {\n                content += ': ' + message;\n            }\n        }\n        creator._showAlert( content, 'alert-danger' );\n    },\n\n    events : {\n        // header\n        'click .more-help'              : '_clickMoreHelp',\n        'click .less-help'              : '_clickLessHelp',\n        'click .main-help'              : '_toggleHelp',\n        'click .header .alert button'   : '_hideAlert',\n\n        'click .reset'                  : 'reset',\n        'click .clear-selected'         : 'clearSelectedElements',\n\n        // elements - selection\n        'click .collection-elements'    : 'clearSelectedElements',\n\n        // elements - drop target\n        // 'dragenter .collection-elements': '_dragenterElements',\n        // 'dragleave .collection-elements': '_dragleaveElements',\n        'dragover .collection-elements' : '_dragoverElements',\n        'drop .collection-elements'     : '_dropElements',\n\n        // these bubble up from the elements as custom events\n        'collection-element.dragstart .collection-elements' : '_elementDragstart',\n        'collection-element.dragend   .collection-elements' : '_elementDragend',\n\n        // footer\n        'change .collection-name'       : '_changeName',\n        'keydown .collection-name'      : '_nameCheckForEnter',\n        'click .cancel-create'          : function( ev ){\n            if( typeof this.oncancel === 'function' ){\n                this.oncancel.call( this );\n            }\n        },\n        'click .create-collection'      : '_clickCreate'//,\n    },\n\n    // ........................................................................ header\n    /** expand help */\n    _clickMoreHelp : function( ev ){\n        ev.stopPropagation();\n        this.$( '.main-help' ).addClass( 'expanded' );\n        this.$( '.more-help' ).hide();\n    },\n    /** collapse help */\n    _clickLessHelp : function( ev ){\n        ev.stopPropagation();\n        this.$( '.main-help' ).removeClass( 'expanded' );\n        this.$( '.more-help' ).show();\n    },\n    /** toggle help */\n    _toggleHelp : function( ev ){\n        ev.stopPropagation();\n        this.$( '.main-help' ).toggleClass( 'expanded' );\n        this.$( '.more-help' ).toggle();\n    },\n\n    /** show an alert on the top of the interface containing message (alertClass is bootstrap's alert-*) */\n    _showAlert : function( message, alertClass ){\n        alertClass = alertClass || 'alert-danger';\n        this.$( '.main-help' ).hide();\n        this.$( '.header .alert' )\n            .attr( 'class', 'alert alert-dismissable' ).addClass( alertClass ).show()\n            .find( '.alert-message' ).html( message );\n    },\n    /** hide the alerts at the top */\n    _hideAlert : function( message ){\n        this.$( '.main-help' ).show();\n        this.$( '.header .alert' ).hide();\n    },\n\n    // ........................................................................ elements\n    /** reset all data to the initial state */\n    reset : function(){\n        this._instanceSetUp();\n        this._elementsSetUp();\n        this.render();\n    },\n\n    /** deselect all elements */\n    clearSelectedElements : function( ev ){\n        this.$( '.collection-elements .collection-element' ).removeClass( 'selected' );\n        this.$( '.collection-elements-controls > .clear-selected' ).hide();\n    },\n\n    //_dragenterElements : function( ev ){\n    //    //this.debug( '_dragenterElements:', ev );\n    //},\n//TODO: if selected are dragged out of the list area - remove the placeholder - cuz it won't work anyway\n    // _dragleaveElements : function( ev ){\n    //    //this.debug( '_dragleaveElements:', ev );\n    // },\n\n    /** track the mouse drag over the list adding a placeholder to show where the drop would occur */\n    _dragoverElements : function( ev ){\n        //this.debug( '_dragoverElements:', ev );\n        ev.preventDefault();\n\n        var $list = this.$list();\n        this._checkForAutoscroll( $list, ev.originalEvent.clientY );\n        var $nearest = this._getNearestElement( ev.originalEvent.clientY );\n\n        //TODO: no need to re-create - move instead\n        this.$( '.element-drop-placeholder' ).remove();\n        var $placeholder = $( '<div class=\"element-drop-placeholder\"></div>' );\n        if( !$nearest.size() ){\n            $list.append( $placeholder );\n        } else {\n            $nearest.before( $placeholder );\n        }\n    },\n\n    /** If the mouse is near enough to the list's top or bottom, scroll the list */\n    _checkForAutoscroll : function( $element, y ){\n        var AUTOSCROLL_SPEED = 2,\n            offset = $element.offset(),\n            scrollTop = $element.scrollTop(),\n            upperDist = y - offset.top,\n            lowerDist = ( offset.top + $element.outerHeight() ) - y;\n        if( upperDist >= 0 && upperDist < this.autoscrollDist ){\n            $element.scrollTop( scrollTop - AUTOSCROLL_SPEED );\n        } else if( lowerDist >= 0 && lowerDist < this.autoscrollDist ){\n            $element.scrollTop( scrollTop + AUTOSCROLL_SPEED );\n        }\n    },\n\n    /** get the nearest element based on the mouse's Y coordinate.\n     *  If the y is at the end of the list, return an empty jQuery object.\n     */\n    _getNearestElement : function( y ){\n        var WIGGLE = 4,\n            lis = this.$( '.collection-elements li.collection-element' ).toArray();\n        for( var i=0; i<lis.length; i++ ){\n            var $li = $( lis[i] ),\n                top = $li.offset().top,\n                halfHeight = Math.floor( $li.outerHeight() / 2 ) + WIGGLE;\n            if( top + halfHeight > y && top - halfHeight < y ){\n                return $li;\n            }\n        }\n        return $();\n    },\n\n    /** drop (dragged/selected elements) onto the list, re-ordering the internal list */\n    _dropElements : function( ev ){\n        if( ev.originalEvent ){ ev = ev.originalEvent; }\n        // both required for firefox\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = 'move';\n\n        // insert before the nearest element or after the last.\n        var $nearest = this._getNearestElement( ev.clientY );\n        if( $nearest.size() ){\n            this.$dragging.insertBefore( $nearest );\n        } else {\n            // no nearest before - insert after last element\n            this.$dragging.insertAfter( this.$( '.collection-elements .collection-element' ).last() );\n        }\n        // resync the creator's list based on the new DOM order\n        this._syncOrderToDom();\n        return false;\n    },\n\n    /** resync the creator's list of elements based on the DOM order */\n    _syncOrderToDom : function(){\n        var creator = this,\n            newElements = [];\n        //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n        this.$( '.collection-elements .collection-element' ).each( function(){\n            var id = $( this ).attr( 'data-element-id' ),\n                element = _.findWhere( creator.workingElements, { id: id });\n            if( element ){\n                newElements.push( element );\n            } else {\n                console.error( 'missing element: ', id );\n            }\n        });\n        this.workingElements = newElements;\n        this._renderList();\n    },\n\n    /** drag communication with element sub-views: dragstart */\n    _elementDragstart : function( ev, element ){\n        // auto select the element causing the event and move all selected\n        element.select( true );\n        this.$dragging = this.$( '.collection-elements .collection-element.selected' );\n    },\n\n    /** drag communication with element sub-views: dragend - remove the placeholder */\n    _elementDragend : function( ev, element ){\n        $( '.element-drop-placeholder' ).remove();\n        this.$dragging = null;\n    },\n\n    // ........................................................................ footer\n    /** handle a collection name change */\n    _changeName : function( ev ){\n        this._validationWarning( 'name', !!this._getName() );\n    },\n\n    /** check for enter key press when in the collection name and submit */\n    _nameCheckForEnter : function( ev ){\n        if( ev.keyCode === 13 && !this.blocking ){\n            this._clickCreate();\n        }\n    },\n\n    /** get the current collection name */\n    _getName : function(){\n        return _.escape( this.$( '.collection-name' ).val() );\n    },\n\n    /** attempt to create the current collection */\n    _clickCreate : function( ev ){\n        var name = this._getName();\n        if( !name ){\n            this._validationWarning( 'name' );\n        } else if( !this.blocking ){\n            this.createList( name );\n        }\n    },\n\n    // ------------------------------------------------------------------------ templates\n    //TODO: move to require text plugin and load these as text\n    //TODO: underscore currently unnecc. bc no vars are used\n    //TODO: better way of localizing text-nodes in long strings\n    /** underscore template fns attached to class */\n    templates : {\n        /** the skeleton */\n        main : _.template([\n            '<div class=\"header flex-row no-flex\"></div>',\n            '<div class=\"middle flex-row flex-row-container\"></div>',\n            '<div class=\"footer flex-row no-flex\"></div>'\n        ].join('')),\n\n        /** the header (not including help text) */\n        header : _.template([\n            '<div class=\"main-help well clear\">',\n                '<a class=\"more-help\" href=\"javascript:void(0);\">', _l( 'More help' ), '</a>',\n                '<div class=\"help-content\">',\n                    '<a class=\"less-help\" href=\"javascript:void(0);\">', _l( 'Less' ), '</a>',\n                '</div>',\n            '</div>',\n            '<div class=\"alert alert-dismissable\">',\n                '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" ',\n                    'title=\"', _l( 'Close and show more help' ), '\" aria-hidden=\"true\">&times;</button>',\n                '<span class=\"alert-message\"></span>',\n            '</div>',\n        ].join('')),\n\n        /** the middle: element list */\n        middle : _.template([\n            '<div class=\"collection-elements-controls\">',\n                '<a class=\"reset\" href=\"javascript:void(0);\" ',\n                    'title=\"', _l( 'Undo all reordering and discards' ), '\">',\n                    _l( 'Start over' ),\n                '</a>',\n                '<a class=\"clear-selected\" href=\"javascript:void(0);\" ',\n                    'title=\"', _l( 'De-select all selected datasets' ), '\">',\n                    _l( 'Clear selected' ),\n                '</a>',\n            '</div>',\n            '<div class=\"collection-elements scroll-container flex-row\">',\n            '</div>'\n        ].join('')),\n\n        /** creation and cancel controls */\n        footer : _.template([\n            '<div class=\"attributes clear\">',\n                '<div class=\"clear\">',\n                    '<input class=\"collection-name form-control pull-right\" ',\n                        'placeholder=\"', _l( 'Enter a name for your new collection' ), '\" />',\n                    '<div class=\"collection-name-prompt pull-right\">', _l( 'Name' ), ':</div>',\n                '</div>',\n            '</div>',\n\n            '<div class=\"actions clear vertically-spaced\">',\n                '<div class=\"other-options pull-left\">',\n                    '<button class=\"cancel-create btn\" tabindex=\"-1\">', _l( 'Cancel' ), '</button>',\n                    '<div class=\"create-other btn-group dropup\">',\n                        '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                              _l( 'Create a different kind of collection' ),\n                              ' <span class=\"caret\"></span>',\n                        '</button>',\n                        '<ul class=\"dropdown-menu\" role=\"menu\">',\n                              '<li><a href=\"#\">', _l( 'Create a <i>single</i> pair' ), '</a></li>',\n                              '<li><a href=\"#\">', _l( 'Create a list of <i>unpaired</i> datasets' ), '</a></li>',\n                        '</ul>',\n                    '</div>',\n                '</div>',\n\n                '<div class=\"main-options pull-right\">',\n                    '<button class=\"create-collection btn btn-primary\">', _l( 'Create list' ), '</button>',\n                '</div>',\n            '</div>'\n        ].join('')),\n\n        /** help content */\n        helpContent : _.template([\n            '<p>', _l([\n                'Collections of datasets are permanent, ordered lists of datasets that can be passed to tools and ',\n                'workflows in order to have analyses done on each member of the entire group. This interface allows ',\n                'you to create a collection and re-order the final collection.'\n            ].join( '' )), '</p>',\n            '<ul>',\n                '<li>', _l([\n                    'Rename elements in the list by clicking on ',\n                    '<i data-target=\".collection-element .name\">the existing name</i>.'\n                ].join( '' )), '</li>',\n                '<li>', _l([\n                    'Discard elements from the final created list by clicking on the ',\n                    '<i data-target=\".collection-element .discard\">\"Discard\"</i> button.'\n                ].join( '' )), '</li>',\n                '<li>', _l([\n                    'Reorder the list by clicking and dragging elements. Select multiple elements by clicking on ',\n                    '<i data-target=\".collection-element\">them</i> and you can then move those selected by dragging the ',\n                    'entire group. Deselect them by clicking them again or by clicking the ',\n                    'the <i data-target=\".clear-selected\">\"Clear selected\"</i> link.'\n                ].join( '' )), '</li>',\n                '<li>', _l([\n                    'Click the <i data-target=\".reset\">\"Start over\"</i> link to begin again as if you had just opened ',\n                    'the interface.'\n                ].join( '' )), '</li>',\n                '<li>', _l([\n                    'Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'\n                ].join( '' )), '</li>',\n            '</ul><br />',\n            '<p>', _l([\n                'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n                'click <i data-target=\".create-collection\">\"Create list\"</i>.'\n            ].join( '' )), '</p>'\n        ].join('')),\n\n        /** shown in list when all elements are discarded */\n        invalidElements : _.template([\n            _l( 'The following selections could not be included due to problems:' ),\n            '<ul><% _.each( problems, function( problem ){ %>',\n                '<li><b><%= problem.element.name %></b>: <%= problem.text %></li>',\n            '<% }); %></ul>'\n        ].join('')),\n\n        /** shown in list when all elements are discarded */\n        noElementsLeft : _.template([\n            '<li class=\"no-elements-left-message\">',\n                _l( 'No elements left! ' ),\n                _l( 'Would you like to ' ), '<a class=\"reset\" href=\"javascript:void(0)\">', _l( 'start over' ), '</a>?',\n            '</li>'\n        ].join('')),\n\n        /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n        invalidInitial : _.template([\n            '<div class=\"header flex-row no-flex\">',\n                '<div class=\"alert alert-warning\" style=\"display: block\">',\n                    '<span class=\"alert-message\">',\n                        '<% if( _.size( problems ) ){ %>',\n                            _l( 'The following selections could not be included due to problems' ), ':',\n                            '<ul><% _.each( problems, function( problem ){ %>',\n                                '<li><b><%= problem.element.name %></b>: <%= problem.text %></li>',\n                            '<% }); %></ul>',\n                        '<% } else if( _.size( elements ) < 1 ){ %>',\n                            _l( 'No datasets were selected' ), '.',\n                        '<% } %>',\n                        '<br />',\n                        _l( 'At least one element is needed for the collection' ), '. ',\n                        _l( 'You may need to ' ),\n                        '<a class=\"cancel-create\" href=\"javascript:void(0)\">', _l( 'cancel' ), '</a> ',\n                        _l( 'and reselect new elements' ), '.',\n                    '</span>',\n                '</div>',\n            '</div>',\n            '<div class=\"footer flex-row no-flex\">',\n                '<div class=\"actions clear vertically-spaced\">',\n                    '<div class=\"other-options pull-left\">',\n                        '<button class=\"cancel-create btn\" tabindex=\"-1\">', _l( 'Cancel' ), '</button>',\n                        // _l( 'Create a different kind of collection' ),\n                    '</div>',\n                '</div>',\n            '</div>'\n        ].join('')),\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** string rep */\n    toString : function(){ return 'ListCollectionCreator'; }\n});\n\n\n\n//=============================================================================\n/** Create a modal and load its body with the given CreatorClass creator type\n *  @returns {Deferred} resolved when creator has built a collection.\n */\nvar collectionCreatorModal = function _collectionCreatorModal( elements, options, CreatorClass ){\n\n    var deferred = jQuery.Deferred(),\n        modal = Galaxy.modal || ( new UI_MODAL.View() ),\n        creator;\n\n    options = _.defaults( options || {}, {\n        elements    : elements,\n        oncancel    : function(){\n            modal.hide();\n            deferred.reject( 'cancelled' );\n        },\n        oncreate    : function( creator, response ){\n            modal.hide();\n            deferred.resolve( response );\n        }\n    });\n\n    creator = new CreatorClass( options );\n    modal.show({\n        title   : options.title || _l( 'Create a collection' ),\n        body    : creator.$el,\n        width   : '80%',\n        height  : 'min-content',\n        closing_events: true\n    });\n    creator.render();\n    window._collectionCreator = creator;\n\n    //TODO: remove modal header\n    return deferred;\n};\n\n/** List collection flavor of collectionCreatorModal. */\nvar listCollectionCreatorModal = function _listCollectionCreatorModal( elements, options ){\n    options = options || {};\n    options.title = _l( 'Create a collection from a list of datasets' );\n    return collectionCreatorModal( elements, options, ListCollectionCreator );\n};\n\n\n//==============================================================================\n/** Use a modal to create a list collection, then add it to the given history contents.\n *  @returns {Deferred} resolved when the collection is added to the history.\n */\nfunction createListCollection( contents ){\n    var elements = contents.toJSON(),\n        promise = listCollectionCreatorModal( elements, {\n            creationFn : function( elements, name ){\n                elements = elements.map( function( element ){\n                    return {\n                        id      : element.id,\n                        name    : element.name,\n                        //TODO: this allows for list:list even if the filter above does not - reconcile\n                        src     : ( element.history_content_type === 'dataset'? 'hda' : 'hdca' )\n                    };\n                });\n                return contents.createHDCA( elements, 'list', name );\n            }\n        });\n    return promise;\n}\n\n//==============================================================================\n    return {\n        DatasetCollectionElementView: DatasetCollectionElementView,\n        ListCollectionCreator       : ListCollectionCreator,\n\n        collectionCreatorModal      : collectionCreatorModal,\n        listCollectionCreatorModal  : listCollectionCreatorModal,\n        createListCollection        : createListCollection\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/collection/list-collection-creator.js\n ** module id = 22\n ** module chunks = 2\n **/","define([\n    \"mvc/list/list-item\",\n    \"mvc/dataset/states\",\n    \"ui/fa-icon-button\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( LIST_ITEM, STATES, faIconButton, BASE_MVC, _l ){\n/* global Backbone */\n\nvar logNamespace = 'dataset';\n/*==============================================================================\nTODO:\n    straighten out state rendering and templates used\n    inaccessible/STATES.NOT_VIEWABLE is a special case\n    simplify button rendering\n\n==============================================================================*/\nvar _super = LIST_ITEM.ListItemView;\n/** @class Read only list view for either LDDAs, HDAs, or HDADCEs.\n *      Roughly, any DatasetInstance (and not a raw Dataset).\n */\nvar DatasetListItemView = _super.extend(\n/** @lends DatasetListItemView.prototype */{\n    _logNamespace : logNamespace,\n\n    className   : _super.prototype.className + \" dataset\",\n    //TODO:?? doesn't exactly match an hda's type_id\n    id          : function(){\n        return [ 'dataset', this.model.get( 'id' ) ].join( '-' );\n    },\n\n    /** Set up: instance vars, options, and event handlers */\n    initialize : function( attributes ){\n        if( attributes.logger ){ this.logger = this.model.logger = attributes.logger; }\n        this.log( this + '.initialize:', attributes );\n        _super.prototype.initialize.call( this, attributes );\n\n        /** where should pages from links be displayed? (default to new tab/window) */\n        this.linkTarget = attributes.linkTarget || '_blank';\n    },\n\n    /** event listeners */\n    _setUpListeners : function(){\n        _super.prototype._setUpListeners.call( this );\n\n        // re-rendering on any model changes\n        this.model.on( 'change', function( model, options ){\n            // if the model moved into the ready state and is expanded without details, fetch those details now\n            if( this.model.changedAttributes().state && this.model.inReadyState()\n            &&  this.expanded && !this.model.hasDetails() ){\n                // will render automatically (due to fetch -> change)\n                this.model.fetch();\n\n            } else {\n                this.render();\n            }\n        }, this );\n    },\n\n    // ......................................................................... expandable\n    /** In this override, only get details if in the ready state, get rerunnable if in other states.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n    _fetchModelDetails : function(){\n        var view = this;\n        if( view.model.inReadyState() && !view.model.hasDetails() ){\n            return view.model.fetch({ silent: true });\n        }\n        return jQuery.when();\n    },\n\n    // ......................................................................... removal\n    /** Remove this view's html from the DOM and remove all event listeners.\n     *  @param {Number or String} speed jq effect speed\n     *  @param {Function} callback      an optional function called when removal is done (scoped to this view)\n     */\n    remove : function( speed, callback ){\n        var view = this;\n        speed = speed || this.fxSpeed;\n        this.$el.fadeOut( speed, function(){\n            Backbone.View.prototype.remove.call( view );\n            if( callback ){ callback.call( view ); }\n        });\n    },\n\n    // ......................................................................... rendering\n    /* TODO:\n        dataset states are the issue primarily making dataset rendering complex\n            each state should have it's own way of displaying/set of details\n            often with different actions that can be applied\n        throw in deleted/purged/visible and things get complicated easily\n        I've considered (a couple of times) - creating a view for each state\n            - but recreating the view during an update...seems wrong\n    */\n    /** Render this HDA, set up ui.\n     *  @param {Number or String} speed jq fx speed\n     *  @returns {Object} this\n     */\n    render : function( speed ){\n        //HACK: hover exit doesn't seem to be called on prev. tooltips when RE-rendering - so: no tooltip hide\n        // handle that here by removing previous view's tooltips\n        //this.$el.find(\"[title]\").tooltip( \"destroy\" );\n        return _super.prototype.render.call( this, speed );\n    },\n\n    /** In this override, add the dataset state as a class for use with state-based CSS */\n    _swapNewRender : function( $newRender ){\n        _super.prototype._swapNewRender.call( this, $newRender );\n        if( this.model.has( 'state' ) ){\n            this.$el.addClass( 'state-' + this.model.get( 'state' ) );\n        }\n        return this.$el;\n    },\n\n    // ................................................................................ titlebar\n    /** In this override, add the dataset display button. */\n    _renderPrimaryActions : function(){\n        // render just the display for read-only\n        return [ this._renderDisplayButton() ];\n    },\n\n    /** Render icon-button to display dataset data */\n    _renderDisplayButton : function(){\n//TODO:?? too complex - possibly move into template\n        // don't show display if not viewable or not accessible\n        var state = this.model.get( 'state' );\n        if( ( state === STATES.NOT_VIEWABLE )\n        ||  ( state === STATES.DISCARDED )\n        ||  ( !this.model.get( 'accessible' ) ) ){\n            return null;\n        }\n\n        var displayBtnData = {\n            target      : this.linkTarget,\n            classes     : 'display-btn'\n        };\n\n        // show a disabled display if the data's been purged\n        if( this.model.get( 'purged' ) ){\n            displayBtnData.disabled = true;\n            displayBtnData.title = _l( 'Cannot display datasets removed from disk' );\n\n        // disable if still uploading\n        } else if( state === STATES.UPLOAD ){\n            displayBtnData.disabled = true;\n            displayBtnData.title = _l( 'This dataset must finish uploading before it can be viewed' );\n\n        // disable if still new\n        } else if( state === STATES.NEW ){\n            displayBtnData.disabled = true;\n            displayBtnData.title = _l( 'This dataset is not yet viewable' );\n\n        } else {\n            displayBtnData.title = _l( 'View data' );\n\n            // default link for dataset\n            displayBtnData.href  = this.model.urls.display;\n\n            // add frame manager option onclick event\n            var self = this;\n            displayBtnData.onclick = function( ev ){\n                if (Galaxy.frame && Galaxy.frame.active) {\n                    // Add dataset to frames.\n                    Galaxy.frame.add_dataset(self.model.get('id'));\n                    ev.preventDefault();\n                }\n            };\n        }\n        displayBtnData.faIcon = 'fa-eye';\n        return faIconButton( displayBtnData );\n    },\n\n    // ......................................................................... rendering details\n    /** Render the enclosing div of the hda body and, if expanded, the html in the body\n     *  @returns {jQuery} rendered DOM\n     */\n    _renderDetails : function(){\n        //TODO: generalize to be allow different details for each state\n\n        // no access - render nothing but a message\n        if( this.model.get( 'state' ) === STATES.NOT_VIEWABLE ){\n            return $( this.templates.noAccess( this.model.toJSON(), this ) );\n        }\n\n        var $details = _super.prototype._renderDetails.call( this );\n        $details.find( '.actions .left' ).empty().append( this._renderSecondaryActions() );\n        $details.find( '.summary' ).html( this._renderSummary() )\n            .prepend( this._renderDetailMessages() );\n        $details.find( '.display-applications' ).html( this._renderDisplayApplications() );\n\n//TODO: double tap\n        this._setUpBehaviors( $details );\n        return $details;\n    },\n\n    /** Defer to the appropo summary rendering fn based on state */\n    _renderSummary : function(){\n        var json = this.model.toJSON(),\n            summaryRenderFn = this.templates.summaries[ json.state ];\n        summaryRenderFn = summaryRenderFn || this.templates.summaries.unknown;\n        return summaryRenderFn( json, this );\n    },\n\n    /** Render messages to be displayed only when the details are shown */\n    _renderDetailMessages : function(){\n        var view = this,\n            $warnings = $( '<div class=\"detail-messages\"></div>' ),\n            json = view.model.toJSON();\n//TODO:! unordered (map)\n        _.each( view.templates.detailMessages, function( templateFn ){\n            $warnings.append( $( templateFn( json, view ) ) );\n        });\n        return $warnings;\n    },\n\n    /** Render the external display application links */\n    _renderDisplayApplications : function(){\n        if( this.model.isDeletedOrPurged() ){ return ''; }\n        // render both old and new display apps using the same template\n        return [\n            this.templates.displayApplications( this.model.get( 'display_apps' ), this ),\n            this.templates.displayApplications( this.model.get( 'display_types' ), this )\n        ].join( '' );\n    },\n\n    // ......................................................................... secondary/details actions\n    /** A series of links/buttons for less commonly used actions: re-run, info, etc. */\n    _renderSecondaryActions : function(){\n        this.debug( '_renderSecondaryActions' );\n        switch( this.model.get( 'state' ) ){\n            case STATES.NOT_VIEWABLE:\n                return [];\n            case STATES.OK:\n            case STATES.FAILED_METADATA:\n            case STATES.ERROR:\n                return [ this._renderDownloadButton(), this._renderShowParamsButton() ];\n        }\n        return [ this._renderShowParamsButton() ];\n    },\n\n    /** Render icon-button to show the input and output (stdout/err) for the job that created this.\n     *  @returns {jQuery} rendered DOM\n     */\n    _renderShowParamsButton : function(){\n        // gen. safe to show in all cases\n        return faIconButton({\n            title       : _l( 'View details' ),\n            classes     : 'params-btn',\n            href        : this.model.urls.show_params,\n            target      : this.linkTarget,\n            faIcon      : 'fa-info-circle'\n        });\n    },\n\n    /** Render icon-button/popupmenu to download the data (and/or the associated meta files (bai, etc.)) for this.\n     *  @returns {jQuery} rendered DOM\n     */\n    _renderDownloadButton : function(){\n//TODO: to (its own) template fn\n        // don't show anything if the data's been purged\n        if( this.model.get( 'purged' ) || !this.model.hasData() ){ return null; }\n\n        // return either: a popupmenu with links to download assoc. meta files (if there are meta files)\n        //  or a single download icon-button (if there are no meta files)\n        if( !_.isEmpty( this.model.get( 'meta_files' ) ) ){\n            return this._renderMetaFileDownloadButton();\n        }\n\n        return $([\n            '<a class=\"download-btn icon-btn\" href=\"', this.model.urls.download, '\" title=\"' + _l( 'Download' ) + '\">',\n                '<span class=\"fa fa-floppy-o\"></span>',\n            '</a>'\n        ].join( '' ));\n    },\n\n    /** Render the download button which opens a dropdown with links to download assoc. meta files (indeces, etc.) */\n    _renderMetaFileDownloadButton : function(){\n        var urls = this.model.urls;\n        return $([\n            '<div class=\"metafile-dropdown dropdown\">',\n                '<a class=\"download-btn icon-btn\" href=\"javascript:void(0)\" data-toggle=\"dropdown\"',\n                    ' title=\"' + _l( 'Download' ) + '\">',\n                    '<span class=\"fa fa-floppy-o\"></span>',\n                '</a>',\n                '<ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"dLabel\">',\n                    '<li><a href=\"' + urls.download + '\">', _l( 'Download dataset' ), '</a></li>',\n                    _.map( this.model.get( 'meta_files' ), function( meta_file ){\n                        return [\n                            '<li><a href=\"', urls.meta_download + meta_file.file_type, '\">',\n                                _l( 'Download' ), ' ', meta_file.file_type,\n                            '</a></li>'\n                        ].join( '' );\n                    }).join( '\\n' ),\n                '</ul>',\n            '</div>'\n        ].join( '\\n' ));\n    },\n\n    // ......................................................................... misc\n    events : _.extend( _.clone( _super.prototype.events ), {\n        'click .display-btn'    : function( ev ){ this.trigger( 'display', this, ev ); },\n        'click .params-btn'     : function( ev ){ this.trigger( 'params', this, ev ); },\n        'click .download-btn'   : function( ev ){ this.trigger( 'download', this, ev ); }\n    }),\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'DatasetListItemView(' + modelString + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemView.prototype.templates = (function(){\n//TODO: move to require text! plugin\n\n    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n        failed_metadata : BASE_MVC.wrapTemplate([\n            // failed metadata is rendered as a warning on an otherwise ok dataset view\n            '<% if( model.state === \"failed_metadata\" ){ %>',\n                '<div class=\"warningmessagesmall\">',\n                    _l( 'An error occurred setting the metadata for this dataset' ),\n                '</div>',\n            '<% } %>'\n        ]),\n        error : BASE_MVC.wrapTemplate([\n            // error during index fetch - show error on dataset\n            '<% if( model.error ){ %>',\n                '<div class=\"errormessagesmall\">',\n                    _l( 'There was an error getting the data for this dataset' ), ': <%- model.error %>',\n                '</div>',\n            '<% } %>'\n        ]),\n        purged : BASE_MVC.wrapTemplate([\n            '<% if( model.purged ){ %>',\n                '<div class=\"purged-msg warningmessagesmall\">',\n                    _l( 'This dataset has been deleted and removed from disk' ),\n                '</div>',\n            '<% } %>'\n        ]),\n        deleted : BASE_MVC.wrapTemplate([\n            // deleted not purged\n            '<% if( model.deleted && !model.purged ){ %>',\n                '<div class=\"deleted-msg warningmessagesmall\">',\n                    _l( 'This dataset has been deleted' ),\n                '</div>',\n            '<% } %>'\n        ])\n\n        //NOTE: hidden warning is only needed for HDAs\n    });\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"details\">',\n            '<div class=\"summary\"></div>',\n\n            '<div class=\"actions clear\">',\n                '<div class=\"left\"></div>',\n                '<div class=\"right\"></div>',\n            '</div>',\n\n            // do not display tags, annotation, display apps, or peek when deleted\n            '<% if( !dataset.deleted && !dataset.purged ){ %>',\n                '<div class=\"tags-display\"></div>',\n                '<div class=\"annotation-display\"></div>',\n\n                '<div class=\"display-applications\"></div>',\n\n                '<% if( dataset.peek ){ %>',\n                    '<pre class=\"dataset-peek\"><%= dataset.peek %></pre>',\n                '<% } %>',\n            '<% } %>',\n        '</div>'\n    ], 'dataset' );\n\n    var noAccessTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"details\">',\n            '<div class=\"summary\">',\n                _l( 'You do not have permission to view this dataset' ),\n            '</div>',\n        '</div>'\n    ], 'dataset' );\n\n//TODO: still toooooooooooooo complex - rework\n    var summaryTemplates = {};\n    summaryTemplates[ STATES.OK ] = summaryTemplates[ STATES.FAILED_METADATA ] = BASE_MVC.wrapTemplate([\n        '<% if( dataset.misc_blurb ){ %>',\n            '<div class=\"blurb\">',\n                '<span class=\"value\"><%- dataset.misc_blurb %></span>',\n            '</div>',\n        '<% } %>',\n\n        '<% if( dataset.file_ext ){ %>',\n            '<div class=\"datatype\">',\n                '<label class=\"prompt\">', _l( 'format' ), '</label>',\n                '<span class=\"value\"><%- dataset.file_ext %></span>',\n            '</div>',\n        '<% } %>',\n\n        '<% if( dataset.metadata_dbkey ){ %>',\n            '<div class=\"dbkey\">',\n                '<label class=\"prompt\">', _l( 'database' ), '</label>',\n                '<span class=\"value\">',\n                    '<%- dataset.metadata_dbkey %>',\n                '</span>',\n            '</div>',\n        '<% } %>',\n\n        '<% if( dataset.misc_info ){ %>',\n            '<div class=\"info\">',\n                '<span class=\"value\"><%- dataset.misc_info %></span>',\n            '</div>',\n        '<% } %>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.NEW ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'This is a new dataset and not all of its data are available yet' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.NOT_VIEWABLE ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'You do not have permission to view this dataset' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.DISCARDED ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'The job creating this dataset was cancelled before completion' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.QUEUED ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'This job is waiting to run' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.RUNNING ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'This job is currently running' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.UPLOAD ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'This dataset is currently uploading' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.SETTING_METADATA ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'Metadata is being auto-detected' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.PAUSED ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'This job is paused. Use the \"Resume Paused Jobs\" in the history menu to resume' ), '</div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.ERROR ] = BASE_MVC.wrapTemplate([\n        '<% if( !dataset.purged ){ %>',\n            '<div><%- dataset.misc_blurb %></div>',\n        '<% } %>',\n        '<span class=\"help-text\">', _l( 'An error occurred with this dataset' ), ':</span>',\n        '<div class=\"job-error-text\"><%- dataset.misc_info %></div>'\n    ], 'dataset' );\n    summaryTemplates[ STATES.EMPTY ] = BASE_MVC.wrapTemplate([\n        '<div>', _l( 'No data' ), ': <i><%- dataset.misc_blurb %></i></div>'\n    ], 'dataset' );\n    summaryTemplates.unknown = BASE_MVC.wrapTemplate([\n        '<div>Error: unknown dataset state: \"<%- dataset.state %>\"</div>'\n    ], 'dataset' );\n\n    // messages to be displayed only within the details section ('below the fold')\n    var detailMessageTemplates = {\n        resubmitted : BASE_MVC.wrapTemplate([\n            // deleted not purged\n            '<% if( model.resubmitted ){ %>',\n                '<div class=\"resubmitted-msg infomessagesmall\">',\n                    _l( 'The job creating this dataset has been resubmitted' ),\n                '</div>',\n            '<% } %>'\n        ])\n    };\n\n    // this is applied to both old and new style display apps\n    var displayApplicationsTemplate = BASE_MVC.wrapTemplate([\n        '<% _.each( apps, function( app ){ %>',\n            '<div class=\"display-application\">',\n                '<span class=\"display-application-location\"><%- app.label %></span> ',\n                '<span class=\"display-application-links\">',\n                    '<% _.each( app.links, function( link ){ %>',\n                        '<a target=\"<%= link.target %>\" href=\"<%= link.href %>\">',\n                            '<% print( _l( link.text ) ); %>',\n                        '</a> ',\n                    '<% }); %>',\n                '</span>',\n            '</div>',\n        '<% }); %>'\n    ], 'apps' );\n\n    return _.extend( {}, _super.prototype.templates, {\n        warnings    : warnings,\n        details     : detailsTemplate,\n        noAccess    : noAccessTemplate,\n        summaries   : summaryTemplates,\n        detailMessages      : detailMessageTemplates,\n        displayApplications : displayApplicationsTemplate\n    });\n}());\n\n\n// ============================================================================\n    return {\n        DatasetListItemView : DatasetListItemView\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/dataset/dataset-li.js\n ** module id = 23\n ** module chunks = 2\n **/","define([\n    \"mvc/collection/collection-model\",\n    \"mvc/history/history-content-model\",\n    \"utils/localization\"\n], function( DC_MODEL, HISTORY_CONTENT, _l ){\n/*==============================================================================\n\nModels for DatasetCollections contained within a history.\n\nTODO:\n    these might be compactable to one class if some duplication with\n    collection-model is used.\n\n==============================================================================*/\nvar hcontentMixin = HISTORY_CONTENT.HistoryContentMixin,\n    ListDC = DC_MODEL.ListDatasetCollection,\n    PairDC = DC_MODEL.PairDatasetCollection,\n    ListPairedDC = DC_MODEL.ListPairedDatasetCollection;\n\n//==============================================================================\n/** Override to post to contents route w/o id. */\nfunction buildHDCASave( _super ){\n    return function _save( attributes, options ){\n        if( this.isNew() ){\n            options = options || {};\n            options.url = this.urlRoot + this.get( 'history_id' ) + '/contents';\n            attributes = attributes || {};\n            attributes.type = 'dataset_collection';\n        }\n        return _super.call( this, attributes, options );\n    };\n}\n\n\n//==============================================================================\n/** @class Backbone model for List Dataset Collection within a History.\n */\nvar HistoryListDatasetCollection = ListDC.extend( hcontentMixin ).extend(\n/** @lends HistoryListDatasetCollection.prototype */{\n\n    defaults : _.extend( _.clone( ListDC.prototype.defaults ), {\n        history_content_type: 'dataset_collection',\n        collection_type     : 'list',\n        model_class         : 'HistoryDatasetCollectionAssociation'\n    }),\n\n    initialize : function( model, options ){\n        ListDC.prototype.initialize.call( this, model, options );\n        hcontentMixin.initialize.call( this, model, options );\n    },\n\n    /** Override to post to contents route w/o id. */\n    save : buildHDCASave( ListDC.prototype.save ),\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'HistoryListDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n    }\n});\n\n\n//==============================================================================\n/** @class Backbone model for Pair Dataset Collection within a History.\n *  @constructs\n */\nvar HistoryPairDatasetCollection = PairDC.extend( hcontentMixin ).extend(\n/** @lends HistoryPairDatasetCollection.prototype */{\n\n    defaults : _.extend( _.clone( PairDC.prototype.defaults ), {\n        history_content_type: 'dataset_collection',\n        collection_type     : 'paired',\n        model_class         : 'HistoryDatasetCollectionAssociation'\n    }),\n\n    initialize : function( model, options ){\n        PairDC.prototype.initialize.call( this, model, options );\n        hcontentMixin.initialize.call( this, model, options );\n    },\n\n    /** Override to post to contents route w/o id. */\n    save : buildHDCASave( PairDC.prototype.save ),\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'HistoryPairDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n    }\n});\n\n\n//==============================================================================\n/** @class Backbone model for List of Pairs Dataset Collection within a History.\n *  @constructs\n */\nvar HistoryListPairedDatasetCollection = ListPairedDC.extend( hcontentMixin ).extend(\n/** @lends HistoryListPairedDatasetCollection.prototype */{\n\n    defaults : _.extend( _.clone( ListPairedDC.prototype.defaults ), {\n        history_content_type: 'dataset_collection',\n        collection_type     : 'list:paired',\n        model_class         : 'HistoryDatasetCollectionAssociation'\n    }),\n\n    initialize : function( model, options ){\n        ListPairedDC.prototype.initialize.call( this, model, options );\n        hcontentMixin.initialize.call( this, model, options );\n    },\n\n    /** Override to post to contents route w/o id. */\n    save : buildHDCASave( ListPairedDC.prototype.save ),\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'HistoryListPairedDatasetCollection(', this.get( 'name' ), ')' ].join( '' ));\n    }\n});\n\n\n//==============================================================================\n    return {\n        HistoryListDatasetCollection        : HistoryListDatasetCollection,\n        HistoryPairDatasetCollection        : HistoryPairDatasetCollection,\n        HistoryListPairedDatasetCollection  : HistoryListPairedDatasetCollection\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/hdca-model.js\n ** module id = 24\n ** module chunks = 2\n **/","define([\n    \"mvc/dataset/states\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( STATES, BASE_MVC, _l ){\n\nvar logNamespace = 'history';\n//==============================================================================\n/** How the type_id attribute is built for the history's mixed contents collection */\nvar typeIdStr = function _typeIdStr( type, id ){\n    return [ type, id ].join( '-' );\n};\n\n//==============================================================================\n/** @class Mixin for HistoryContents content (HDAs, HDCAs).\n */\nvar HistoryContentMixin = {\n//TODO:?? into true Backbone.Model?\n\n    /** default attributes for a model */\n    defaults : {\n        /** parent (containing) history */\n        history_id          : null,\n        /** some content_type (HistoryContents can contain mixed model classes) */\n        history_content_type: null,\n        /** indicating when/what order the content was generated in the context of the history */\n        hid                 : null,\n        /** whether the user wants the content shown (visible) */\n        visible             : true\n    },\n\n    // ........................................................................ mixed content element\n//TODO: there's got to be a way to move this into HistoryContents - if we can do that, this class might not be needed\n    // In order to be part of a MIXED bbone collection, we can't rely on the id\n    //  (which may collide btwn models of different classes)\n    // Build a new id (type_id) that prefixes the history_content_type so the bbone collection can differentiate\n    idAttribute : 'type_id',\n\n    /** override constructor to build type_id and insert into original attributes */\n    constructor : function( attrs, options ){\n        attrs.type_id = typeIdStr( attrs.history_content_type, attrs.id );\n        this.debug( 'HistoryContentMixin.constructor:', attrs.type_id );\n        Backbone.Model.apply( this, arguments );\n    },\n\n    /** object level fn for building the type_id string */\n    _typeIdStr : function(){\n        return typeIdStr( this.get( 'history_content_type' ), this.get( 'id' ) );\n    },\n\n    /** add listener to re-create type_id when the id changes */\n    initialize : function( attrs, options ){\n        this.on( 'change:id', this._createTypeId );\n    },\n\n    /** set the type_id in the model attributes */\n    _createTypeId : function(){\n        this.set( 'type_id', this._typeIdStr() );\n    },\n\n    /** override because backbone tests boolean( idAttribute ), but it's not an empty string even for new models\n     *  due to our use of type_id.\n     */\n    isNew : function(){\n        return !this.get( 'id' );\n    },\n\n    // ........................................................................ common queries\n    /** the more common alias of visible */\n    hidden : function(){\n        return !this.get( 'visible' );\n    },\n\n    /** based on show_deleted, show_hidden (gen. from the container control),\n     *      would this ds show in the list of ds's?\n     *  @param {Boolean} show_deleted are we showing deleted hdas?\n     *  @param {Boolean} show_hidden are we showing hidden hdas?\n     */\n    isVisible : function( show_deleted, show_hidden ){\n//TODO:?? Another unfortunate name collision\n        var isVisible = true;\n        if( ( !show_deleted )\n        &&  ( this.get( 'deleted' ) || this.get( 'purged' ) ) ){\n            isVisible = false;\n        }\n        if( ( !show_hidden )\n        &&  ( !this.get( 'visible' ) ) ){\n            isVisible = false;\n        }\n        return isVisible;\n    },\n\n    // ........................................................................ ajax\n//TODO: global\n//TODO: these are probably better done on the leaf classes\n    /** history content goes through the 'api/histories' API */\n    urlRoot: ( window.Galaxy? Galaxy.options.root : '/' ) + 'api/histories/',\n\n    /** full url spec. for this content */\n    url : function(){\n        var url = this.urlRoot + this.get( 'history_id' ) + '/contents/'\n             + this.get('history_content_type') + 's/' + this.get( 'id' );\n        return url;\n    },\n\n    /** save this content as not visible */\n    hide : function( options ){\n        if( !this.get( 'visible' ) ){ return jQuery.when(); }\n        return this.save( { visible: false }, options );\n    },\n    /** save this content as visible */\n    unhide : function( options ){\n        if( this.get( 'visible' ) ){ return jQuery.when(); }\n        return this.save( { visible: true }, options );\n    },\n\n    // ........................................................................ misc\n    /** String representation */\n    toString : function(){\n        var nameAndId = this.get( 'id' ) || '';\n        if( this.get( 'name' ) ){\n            nameAndId = this.get( 'hid' ) + ' :\"' + this.get( 'name' ) + '\",' + nameAndId;\n        }\n        return 'HistoryContent(' + nameAndId + ')';\n    }\n};\n\n\n//==============================================================================\n//TODO: needed?\n/** @class (Concrete/non-mixin) base model for content items.\n */\nvar HistoryContent = Backbone.Model\n        .extend( BASE_MVC.LoggableMixin )\n        .extend( HistoryContentMixin )\n        .extend({ _logNamespace : logNamespace });\n\n\n//==============================================================================\n    return {\n        typeIdStr           : typeIdStr,\n        HistoryContentMixin : HistoryContentMixin,\n        HistoryContent      : HistoryContent\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/history-content-model.js\n ** module id = 25\n ** module chunks = 2\n **/","define([\n    \"mvc/history/history-content-model\",\n    \"mvc/history/hda-model\",\n    \"mvc/history/hdca-model\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( HISTORY_CONTENT, HDA_MODEL, HDCA_MODEL, BASE_MVC, _l ){\n\nvar logNamespace = 'history';\n//==============================================================================\n/** @class Backbone collection for history content.\n *      NOTE: history content seems like a dataset collection, but differs in that it is mixed:\n *          each element can be either an HDA (dataset) or a DatasetCollection and co-exist on\n *          the same level.\n *      Dataset collections on the other hand are not mixed and (so far) can only contain either\n *          HDAs or child dataset collections on one level.\n *      This is why this does not inherit from any of the DatasetCollections (currently).\n */\nvar HistoryContents = Backbone.Collection\n        .extend( BASE_MVC.LoggableMixin )\n        .extend(/** @lends HistoryContents.prototype */{\n//TODO:?? may want to inherit from some MixedModelCollection\n//TODO:?? also consider inheriting from a 'DatasetList'\n//TODO: can we decorate the mixed models using the model fn below (instead of having them build their own type_id)?\n\n    _logNamespace : logNamespace,\n\n    /** since history content is a mix, override model fn into a factory, creating based on history_content_type */\n    model : function( attrs, options ) {\n//TODO: can we move the type_id stuff here?\n        //attrs.type_id = typeIdStr( attrs );\n\n        if( attrs.history_content_type === \"dataset\" ) {\n            return new HDA_MODEL.HistoryDatasetAssociation( attrs, options );\n\n        } else if( attrs.history_content_type === \"dataset_collection\" ) {\n            switch( attrs.collection_type ){\n                case 'list':\n                    return new HDCA_MODEL.HistoryListDatasetCollection( attrs, options );\n                case 'paired':\n                    return new HDCA_MODEL.HistoryPairDatasetCollection( attrs, options );\n                case 'list:paired':\n                    return new HDCA_MODEL.HistoryListPairedDatasetCollection( attrs, options );\n            }\n            // This is a hack inside a hack:\n            // Raise a plain object with validationError to fake a model.validationError\n            // (since we don't have a model to use validate with)\n            // (the outer hack being the mixed content/model function in this collection)\n            return { validationError : 'Unknown collection_type: ' + attrs.history_content_type };\n        }\n        return { validationError : 'Unknown history_content_type: ' + attrs.history_content_type };\n    },\n\n    /** Set up.\n     *  @see Backbone.Collection#initialize\n     */\n    initialize : function( models, options ){\n        options = options || {};\n//TODO: could probably use the contents.history_id instead\n        this.historyId = options.historyId;\n        //this._setUpListeners();\n\n        // backbonejs uses collection.model.prototype.idAttribute to determine if a model is *already* in a collection\n        //  and either merged or replaced. In this case, our 'model' is a function so we need to add idAttribute\n        //  manually here - if we don't, contents will not merge but be replaced/swapped.\n        this.model.prototype.idAttribute = 'type_id';\n\n        this.on( 'all', function(){\n            this.debug( this + '.event:', arguments );\n        });\n    },\n\n    /** root api url */\n    urlRoot : galaxy_config.root + 'api/histories',\n    /** complete api url */\n    url : function(){\n        return this.urlRoot + '/' + this.historyId + '/contents';\n    },\n\n    // ........................................................................ common queries\n    /** Get the ids of every item in this collection\n     *  @returns array of encoded ids\n     */\n    ids : function(){\n//TODO: is this still useful since type_id\n        return this.map( function( item ){ return item.get('id'); });\n    },\n\n    /** Get contents that are not ready\n     *  @returns array of content models\n     */\n    notReady : function(){\n        return this.filter( function( content ){\n            return !content.inReadyState();\n        });\n    },\n\n    /** Get the id of every model in this collection not in a 'ready' state (running).\n     *  @returns an array of model ids\n     *  @see HistoryDatasetAssociation#inReadyState\n     */\n    running : function(){\n        var idList = [];\n        this.each( function( item ){\n            var isRunning = !item.inReadyState();\n            if( isRunning ){\n//TODO: is this still correct since type_id\n                idList.push( item.get( 'id' ) );\n            }\n        });\n        return idList;\n    },\n\n    /** Get the model with the given hid\n     *  @param {Int} hid the hid to search for\n     *  @returns {HistoryDatasetAssociation} the model with the given hid or undefined if not found\n     */\n    getByHid : function( hid ){\n        return _.first( this.filter( function( content ){ return content.get( 'hid' ) === hid; }) );\n    },\n\n    //TODO:?? this may belong in the containing view\n    /** Get every 'shown' model in this collection based on show_deleted/hidden\n     *  @param {Boolean} show_deleted are we showing deleted content?\n     *  @param {Boolean} show_hidden are we showing hidden content?\n     *  @returns array of content models\n     *  @see HistoryDatasetAssociation#isVisible\n     */\n    getVisible : function( show_deleted, show_hidden, filters ){\n        filters = filters || [];\n        //this.debug( 'filters:', filters );\n        // always filter by show deleted/hidden first\n        this.debug( 'checking isVisible' );\n        var filteredHdas = new HistoryContents( this.filter( function( item ){\n            return item.isVisible( show_deleted, show_hidden );\n        }));\n\n        _.each( filters, function( filterFn ){\n            if( !_.isFunction( filterFn ) ){ return; }\n            filteredHdas = new HistoryContents( filteredHdas.filter( filterFn ) );\n        });\n        return filteredHdas;\n    },\n\n    /** return a new contents collection of only hidden items */\n    hidden : function(){\n        function filterFn( c ){ return c.hidden(); }\n        return new HistoryContents( this.filter( filterFn ) );\n    },\n\n    /** return a new contents collection of only hidden items */\n    deleted : function(){\n        function filterFn( c ){ return c.get( 'deleted' ); }\n        return new HistoryContents( this.filter( filterFn ) );\n    },\n\n    /** return true if any contents don't have details */\n    haveDetails : function(){\n        return this.all( function( content ){ return content.hasDetails(); });\n    },\n\n    // ........................................................................ ajax\n    /** fetch detailed model data for all contents in this collection */\n    fetchAllDetails : function( options ){\n        options = options || {};\n        var detailsFlag = { details: 'all' };\n        options.data = ( options.data )?( _.extend( options.data, detailsFlag ) ):( detailsFlag );\n        return this.fetch( options );\n    },\n\n    /** using a queue, perform ajaxFn on each of the models in this collection */\n    ajaxQueue : function( ajaxFn, options ){\n        var deferred = jQuery.Deferred(),\n            startingLength = this.length,\n            responses = [];\n\n        if( !startingLength ){\n            deferred.resolve([]);\n            return deferred;\n        }\n\n        // use reverse order (stylistic choice)\n        var ajaxFns = this.chain().reverse().map( function( content, i ){\n            return function(){\n                var xhr = ajaxFn.call( content, options );\n                // if successful, notify using the deferred to allow tracking progress\n                xhr.done( function( response ){\n                    deferred.notify({ curr: i, total: startingLength, response: response, model: content });\n                });\n                // (regardless of previous error or success) if not last ajax call, shift and call the next\n                //  if last fn, resolve deferred\n                xhr.always( function( response ){\n                    responses.push( response );\n                    if( ajaxFns.length ){\n                        ajaxFns.shift()();\n                    } else {\n                        deferred.resolve( responses );\n                    }\n                });\n            };\n        }).value();\n        // start the queue\n        ajaxFns.shift()();\n\n        return deferred;\n    },\n\n    isCopyable : function( contentsJSON ){\n        var copyableModelClasses = [\n            'HistoryDatasetAssociation',\n            'HistoryDatasetCollectionAssociation'\n        ];\n        return ( ( _.isObject( contentsJSON ) && contentsJSON.id )\n              && ( _.contains( copyableModelClasses, contentsJSON.model_class ) ) );\n    },\n\n    /** copy an existing, accessible hda into this collection */\n    copy : function( json ){\n        var id, type, contentType;\n        if( _.isString( json ) ){\n            id = json;\n            contentType = 'hda';\n            type = 'dataset';\n        } else {\n            id = json.id;\n            contentType = ({\n                'HistoryDatasetAssociation' : 'hda',\n                'LibraryDatasetDatasetAssociation' : 'ldda',\n                'HistoryDatasetCollectionAssociation' : 'hdca'\n            })[ json.model_class ] || 'hda';\n            type = ( contentType === 'hdca'? 'dataset_collection' : 'dataset' );\n        }\n        var collection = this,\n            xhr = jQuery.post( this.url(), {\n                content : id,\n                source  : contentType,\n                type    : type\n            })\n            .done( function( response ){\n                collection.add([ response ]);\n            })\n            .fail( function( error, status, message ){\n                collection.trigger( 'error', collection, xhr, {},\n                    'Error copying contents', { type: type, id: id, source: contentType });\n            });\n        return xhr;\n    },\n\n    // ........................................................................ sorting/filtering\n    /** return a new collection of contents whose attributes contain the substring matchesWhat */\n    matches : function( matchesWhat ){\n        return this.filter( function( content ){\n            return content.matches( matchesWhat );\n        });\n    },\n\n    // ........................................................................ misc\n    /** override to ensure type id is set */\n    set : function( models, options ){\n        models = _.isArray( models )? models : [ models ];\n        _.each( models, function( model ){\n            if( !model.type_id || !model.get || !model.get( 'type_id' ) ){\n                model.type_id = HISTORY_CONTENT.typeIdStr( model.history_content_type, model.id );\n            }\n        });\n        Backbone.Collection.prototype.set.call( this, models, options );\n    },\n\n    /** */\n    createHDCA : function( elementIdentifiers, collectionType, name, options ){\n        //precondition: elementIdentifiers is an array of plain js objects\n        //  in the proper form to create the collectionType\n        var contents = this,\n            typeToModel = {\n                list    : HDCA_MODEL.HistoryListDatasetCollection,\n                paired  : HDCA_MODEL.HistoryPairDatasetCollection\n            },\n            hdca = new (typeToModel[ collectionType ])({\n                history_id          : this.historyId,\n                name                : name,\n                // should probably be able to just send in a bunch of json here and restruct per class\n                element_identifiers : elementIdentifiers\n            });\n        // do I even need to use new above, can I just pass the attrs here\n        return hdca.save()\n            .done( function( response ){\n                contents.add( hdca );\n            })\n            .fail( function( xhr, status, message ){\n                contents.trigger( 'error', xhr, status, message );\n            });\n    },\n\n\n    /** In this override, copy the historyId to the clone */\n    clone : function(){\n        var clone = Backbone.Collection.prototype.clone.call( this );\n        clone.historyId = this.historyId;\n        return clone;\n    },\n\n    /** debugging */\n    print : function(){\n        var contents = this;\n        contents.each( function( c ){\n            contents.debug( c );\n            if( c.elements ){\n                contents.debug( '\\t elements:', c.elements );\n            }\n        });\n    },\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'HistoryContents(', [ this.historyId, this.length ].join(), ')' ].join( '' ));\n    }\n});\n\n\n//==============================================================================\n    return {\n        HistoryContents : HistoryContents\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/history-contents.js\n ** module id = 26\n ** module chunks = 2\n **/","define([\n    'mvc/base-mvc',\n    'utils/localization'\n], function( BASE_MVC, _l ){\n\nvar logNamespace = 'list';\n//==============================================================================\n/** A view which, when first rendered, shows only summary data/attributes, but\n *      can be expanded to show further details (and optionally fetch those\n *      details from the server).\n */\nvar ExpandableView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n    _logNamespace : logNamespace,\n\n//TODO: Although the reasoning behind them is different, this shares a lot with HiddenUntilActivated above: combine them\n    //PRECONDITION: model must have method hasDetails\n    //PRECONDITION: subclasses must have templates.el and templates.details\n\n    initialize : function( attributes ){\n        /** are the details of this view expanded/shown or not? */\n        this.expanded   = attributes.expanded || false;\n        this.log( '\\t expanded:', this.expanded );\n        this.fxSpeed = attributes.fxSpeed !== undefined? attributes.fxSpeed : this.fxSpeed;\n    },\n\n    // ........................................................................ render main\n    /** jq fx speed */\n    fxSpeed : 'fast',\n\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render : function( speed ){\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors( $newRender );\n        this._queueNewRender( $newRender, speed );\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     *      If the view is already expanded, build the details as well.\n     */\n    _buildNewRender : function(){\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = $( this.templates.el( this.model.toJSON(), this ) );\n        if( this.expanded ){\n            this.$details( $newRender ).replaceWith( this._renderDetails().show() );\n        }\n        return $newRender;\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender : function( $newRender, speed ) {\n        speed = ( speed === undefined )?( this.fxSpeed ):( speed );\n        var view = this;\n\n        $( view ).queue( 'fx', [\n            function( next ){ this.$el.fadeOut( speed, next ); },\n            function( next ){\n                view._swapNewRender( $newRender );\n                next();\n            },\n            function( next ){ this.$el.fadeIn( speed, next ); },\n            function( next ){\n                this.trigger( 'rendered', view );\n                next();\n            }\n        ]);\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender : function( $newRender ){\n        return this.$el.empty()\n            .attr( 'class', _.isFunction( this.className )? this.className(): this.className )\n            .append( $newRender.children() );\n    },\n\n    /** set up js behaviors, event handlers for elements within the given container\n     *  @param {jQuery} $container jq object that contains the elements to process (defaults to this.$el)\n     */\n    _setUpBehaviors : function( $where ){\n        $where = $where || this.$el;\n        // set up canned behavior on children (bootstrap, popupmenus, editable_text, etc.)\n        //make_popup_menus( $where );\n        $where.find( '[title]' ).tooltip({ placement : 'bottom' });\n    },\n\n    // ......................................................................... details\n    /** shortcut to details DOM (as jQ) */\n    $details : function( $where ){\n        $where = $where || this.$el;\n        return $where.find( '> .details' );\n    },\n\n    /** build the DOM for the details and set up behaviors on it */\n    _renderDetails : function(){\n        var $newDetails = $( this.templates.details( this.model.toJSON(), this ) );\n        this._setUpBehaviors( $newDetails );\n        return $newDetails;\n    },\n\n    // ......................................................................... expansion/details\n    /** Show or hide the details\n     *  @param {Boolean} expand if true, expand; if false, collapse\n     */\n    toggleExpanded : function( expand ){\n        expand = ( expand === undefined )?( !this.expanded ):( expand );\n        if( expand ){\n            this.expand();\n        } else {\n            this.collapse();\n        }\n        return this;\n    },\n\n    /** Render and show the full, detailed body of this view including extra data and controls.\n     *      note: if the model does not have detailed data, fetch that data before showing the body\n     *  @fires expanded when a body has been expanded\n     */\n    expand : function(){\n        var view = this;\n        return view._fetchModelDetails().always( function(){\n                view._expand();\n            });\n    },\n\n    /** Check for model details and, if none, fetch them.\n     *  @returns {jQuery.promise} the model.fetch.xhr if details are being fetched, an empty promise if not\n     */\n    _fetchModelDetails : function(){\n        if( !this.model.hasDetails() ){\n            return this.model.fetch();\n        }\n        return jQuery.when();\n    },\n\n    /** Inner fn called when expand (public) has fetched the details */\n    _expand : function(){\n        var view = this,\n            $newDetails = view._renderDetails();\n        view.$details().replaceWith( $newDetails );\n        // needs to be set after the above or the slide will not show\n        view.expanded = true;\n        view.$details().slideDown({\n            duration : view.fxSpeed,\n            step: function(){\n                view.trigger( 'expanding', view );\n            },\n            complete: function(){\n                view.trigger( 'expanded', view );\n            }\n        });\n    },\n\n    /** Hide the body/details of an HDA.\n     *  @fires collapsed when a body has been collapsed\n     */\n    collapse : function(){\n        this.debug( this + '(ExpandableView).collapse' );\n        var view = this;\n        view.expanded = false;\n        this.$details().slideUp({\n            duration : view.fxSpeed,\n            step: function(){\n                view.trigger( 'collapsing', view );\n            },\n            complete: function(){\n                view.trigger( 'collapsed', view );\n            }\n        });\n    }\n\n});\n\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *      Inherits from Expandable, Selectable, Draggable.\n *  The DOM contains warnings, a title bar, and a series of primary action controls.\n *      Primary actions are meant to be easily accessible item functions (such as delete)\n *      that are rendered in the title bar.\n *\n *  Details are rendered when the user clicks the title bar or presses enter/space when\n *      the title bar is in focus.\n *\n *  Designed as a base class for history panel contents - but usable elsewhere (I hope).\n */\nvar ListItemView = ExpandableView.extend(\n        BASE_MVC.mixin( BASE_MVC.SelectableViewMixin, BASE_MVC.DraggableViewMixin, {\n\n//TODO: that's a little contradictory\n    tagName     : 'div',\n    className   : 'list-item',\n\n    /** Set up the base class and all mixins */\n    initialize : function( attributes ){\n        ExpandableView.prototype.initialize.call( this, attributes );\n        BASE_MVC.SelectableViewMixin.initialize.call( this, attributes );\n        BASE_MVC.DraggableViewMixin.initialize.call( this, attributes );\n        this._setUpListeners();\n    },\n\n    /** event listeners */\n    _setUpListeners : function(){\n        // hide the primary actions in the title bar when selectable and narrow\n        this.on( 'selectable', function( isSelectable ){\n            if( isSelectable ){\n                this.$( '.primary-actions' ).hide();\n            } else {\n                this.$( '.primary-actions' ).show();\n            }\n        }, this );\n        //this.on( 'all', function( event ){\n        //    this.log( event );\n        //}, this );\n        return this;\n    },\n\n    // ........................................................................ rendering\n    /** In this override, call methods to build warnings, titlebar and primary actions */\n    _buildNewRender : function(){\n        var $newRender = ExpandableView.prototype._buildNewRender.call( this );\n        $newRender.children( '.warnings' ).replaceWith( this._renderWarnings() );\n        $newRender.children( '.title-bar' ).replaceWith( this._renderTitleBar() );\n        $newRender.children( '.primary-actions' ).append( this._renderPrimaryActions() );\n        $newRender.find( '> .title-bar .subtitle' ).replaceWith( this._renderSubtitle() );\n        return $newRender;\n    },\n\n    /** In this override, render the selector controls and set up dragging before the swap */\n    _swapNewRender : function( $newRender ){\n        ExpandableView.prototype._swapNewRender.call( this, $newRender );\n        if( this.selectable ){ this.showSelector( 0 ); }\n        if( this.draggable ){ this.draggableOn(); }\n        return this.$el;\n    },\n\n    /** Render any warnings the item may need to show (e.g. \"I'm deleted\") */\n    _renderWarnings : function(){\n        var view = this,\n            $warnings = $( '<div class=\"warnings\"></div>' ),\n            json = view.model.toJSON();\n//TODO:! unordered (map)\n        _.each( view.templates.warnings, function( templateFn ){\n            $warnings.append( $( templateFn( json, view ) ) );\n        });\n        return $warnings;\n    },\n\n    /** Render the title bar (the main/exposed SUMMARY dom element) */\n    _renderTitleBar : function(){\n        return $( this.templates.titleBar( this.model.toJSON(), this ) );\n    },\n\n    /** Return an array of jQ objects containing common/easily-accessible item controls */\n    _renderPrimaryActions : function(){\n        // override this\n        return [];\n    },\n\n    /** Render the title bar (the main/exposed SUMMARY dom element) */\n    _renderSubtitle : function(){\n        return $( this.templates.subtitle( this.model.toJSON(), this ) );\n    },\n\n    // ......................................................................... events\n    /** event map */\n    events : {\n        // expand the body when the title is clicked or when in focus and space or enter is pressed\n        'click .title-bar'      : '_clickTitleBar',\n        'keydown .title-bar'    : '_keyDownTitleBar',\n\n        // dragging - don't work, originalEvent === null\n        //'dragstart .dataset-title-bar'  : 'dragStartHandler',\n        //'dragend .dataset-title-bar'    : 'dragEndHandler'\n\n        'click .selector'       : 'toggleSelect'\n    },\n\n    /** expand when the title bar is clicked */\n    _clickTitleBar : function( event ){\n        event.stopPropagation();\n        if( event.altKey ){\n            this.toggleSelect( event );\n            if( !this.selectable ){\n                this.showSelector();\n            }\n        } else {\n            this.toggleExpanded();\n        }\n    },\n\n    /** expand when the title bar is in focus and enter or space is pressed */\n    _keyDownTitleBar : function( event ){\n        // bail (with propagation) if keydown and not space or enter\n        var KEYCODE_SPACE = 32, KEYCODE_RETURN = 13;\n        if( event && ( event.type === 'keydown' )\n        &&( event.keyCode === KEYCODE_SPACE || event.keyCode === KEYCODE_RETURN ) ){\n            this.toggleExpanded();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'ListItemView(' + modelString + ')';\n    }\n}));\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListItemView.prototype.templates = (function(){\n//TODO: move to require text! plugin\n\n    var elTemplato = BASE_MVC.wrapTemplate([\n        '<div class=\"list-element\">',\n            // errors, messages, etc.\n            '<div class=\"warnings\"></div>',\n\n            // multi-select checkbox\n            '<div class=\"selector\">',\n                '<span class=\"fa fa-2x fa-square-o\"></span>',\n            '</div>',\n            // space for title bar buttons - gen. floated to the right\n            '<div class=\"primary-actions\"></div>',\n            '<div class=\"title-bar\"></div>',\n\n            // expandable area for more details\n            '<div class=\"details\"></div>',\n        '</div>'\n    ]);\n\n    var warnings = {};\n\n    var titleBarTemplate = BASE_MVC.wrapTemplate([\n        // adding a tabindex here allows focusing the title bar and the use of keydown to expand the dataset display\n        '<div class=\"title-bar clear\" tabindex=\"0\">',\n//TODO: prob. belongs in dataset-list-item\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n                '<span class=\"name\"><%- element.name %></span>',\n            '</div>',\n            '<div class=\"subtitle\"></div>',\n        '</div>'\n    ], 'element' );\n\n    var subtitleTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"subtitle\"></div>'\n    ]);\n\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        // override this\n        '<div class=\"details\"></div>'\n    ]);\n\n    return {\n        el          : elTemplato,\n        warnings    : warnings,\n        titleBar    : titleBarTemplate,\n        subtitle    : subtitleTemplate,\n        details     : detailsTemplate\n    };\n}());\n\n\n//==============================================================================\n/** A view that is displayed in some larger list/grid/collection.\n *  *AND* can display some sub-list of it's own when expanded (e.g. dataset collections).\n *  This list will 'foldout' when the item is expanded depending on this.foldoutStyle:\n *      If 'foldout': will expand vertically to show the nested list\n *      If 'drilldown': will overlay the parent list\n *\n *  Inherits from ListItemView.\n *\n *  _renderDetails does the work of creating this.details: a sub-view that shows the nested list\n */\nvar FoldoutListItemView = ListItemView.extend({\n\n    /** If 'foldout': show the sub-panel inside the expanded item\n     *  If 'drilldown': only fire events and handle by pub-sub\n     *      (allow the panel containing this item to attach it, hide itself, etc.)\n     */\n    foldoutStyle        : 'foldout',\n    /** Panel view class to instantiate for the sub-panel */\n    foldoutPanelClass   : null,\n\n    /** override to:\n     *      add attributes foldoutStyle and foldoutPanelClass for config poly\n     *      disrespect attributes.expanded if drilldown\n     */\n    initialize : function( attributes ){\n//TODO: hackish\n        if( this.foldoutStyle === 'drilldown' ){ this.expanded = false; }\n        this.foldoutStyle = attributes.foldoutStyle || this.foldoutStyle;\n        this.foldoutPanelClass = attributes.foldoutPanelClass || this.foldoutPanelClass;\n\n        ListItemView.prototype.initialize.call( this, attributes );\n        this.foldout = this._createFoldoutPanel();\n    },\n\n//TODO:?? override to exclude foldout scope?\n    //$ : function( selector ){\n    //    var $found = ListItemView.prototype.$.call( this, selector );\n    //    return $found;\n    //},\n\n    /** in this override, attach the foldout panel when rendering details */\n    _renderDetails : function(){\n//TODO: hackish\n        if( this.foldoutStyle === 'drilldown' ){ return $(); }\n        var $newDetails = ListItemView.prototype._renderDetails.call( this );\n        return this._attachFoldout( this.foldout, $newDetails );\n    },\n\n    /** In this override, handle collection expansion. */\n    _createFoldoutPanel : function(){\n        var model = this.model;\n        var FoldoutClass = this._getFoldoutPanelClass( model ),\n            options = this._getFoldoutPanelOptions( model ),\n            foldout = new FoldoutClass( _.extend( options, {\n                model           : model\n            }));\n        return foldout;\n    },\n\n    /** Stub to return proper foldout panel class */\n    _getFoldoutPanelClass : function(){\n        // override\n        return this.foldoutPanelClass;\n    },\n\n    /** Stub to return proper foldout panel options */\n    _getFoldoutPanelOptions : function(){\n        return {\n            // propagate foldout style down\n            foldoutStyle : this.foldoutStyle,\n            fxSpeed      : this.fxSpeed\n        };\n    },\n\n    /** Render the foldout panel inside the view, hiding controls */\n    _attachFoldout : function( foldout, $whereTo ){\n        $whereTo = $whereTo || this.$( '> .details' );\n        this.foldout = foldout.render( 0 );\n//TODO: hack\n        foldout.$( '> .controls' ).hide();\n        return $whereTo.append( foldout.$el );\n    },\n\n    /** In this override, branch on foldoutStyle to show expanded */\n    expand : function(){\n        var view = this;\n        return view._fetchModelDetails()\n            .always(function(){\n                if( view.foldoutStyle === 'foldout' ){\n                    view._expand();\n                } else if( view.foldoutStyle === 'drilldown' ){\n                    view._expandByDrilldown();\n                }\n            });\n    },\n\n    /** For drilldown, set up close handler and fire expanded:drilldown\n     *      containing views can listen to this and handle other things\n     *      (like hiding themselves) by listening for expanded/collapsed:drilldown\n     */\n    _expandByDrilldown : function(){\n        var view = this;\n        // attachment and rendering done by listener\n        view.foldout.on( 'close', function(){\n            view.trigger( 'collapsed:drilldown', view, view.foldout );\n        });\n        view.trigger( 'expanded:drilldown', view, view.foldout );\n    }\n\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nFoldoutListItemView.prototype.templates = (function(){\n\n//TODO:?? unnecessary?\n    // use element identifier\n    var detailsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"details\">',\n            // override with more info (that goes above the panel)\n        '</div>'\n    ], 'collection' );\n\n    return _.extend( {}, ListItemView.prototype.templates, {\n        details : detailsTemplate\n    });\n}());\n\n\n//==============================================================================\n    return {\n        ExpandableView                  : ExpandableView,\n        ListItemView                    : ListItemView,\n        FoldoutListItemView             : FoldoutListItemView\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/list/list-item.js\n ** module id = 27\n ** module chunks = 2\n **/","/**\n    This is the regular tool form.\n*/\ndefine(['utils/utils', 'mvc/ui/ui-misc', 'mvc/tools/tools-form-base', 'mvc/tools/tools-jobs'],\n    function( Utils, Ui, ToolFormBase, ToolJobs ) {\n    var View = ToolFormBase.extend({\n        initialize: function( options ) {\n            var self = this;\n            ToolFormBase.prototype.initialize.call( this, Utils.merge({\n                customize       : function( options ) {\n                    // build execute button\n                    options.buttons = {\n                        execute : execute_btn = new Ui.Button({\n                            icon     : 'fa-check',\n                            tooltip  : 'Execute: ' + options.name + ' (' + options.version + ')',\n                            title    : 'Execute',\n                            cls      : 'btn btn-primary',\n                            floating : 'clear',\n                            onclick  : function() {\n                                execute_btn.wait();\n                                self.form.portlet.disable();\n                                ToolJobs.submit( self.form, options, function() {\n                                    execute_btn.unwait();\n                                    self.form.portlet.enable();\n                                } );\n                            }\n                        })\n                    };\n\n                    // remap feature\n                    if ( options.job_id && options.job_remap ) {\n                        options.inputs[ 'rerun_remap_job_id' ] = {\n                            label       : 'Resume dependencies from this job',\n                            name        : 'rerun_remap_job_id',\n                            type        : 'select',\n                            display     : 'radio',\n                            ignore      : '__ignore__',\n                            value       : '__ignore__',\n                            options     : [ [ 'Yes', options.job_id ], [ 'No', '__ignore__' ] ],\n                            help        : 'The previous run of this tool failed and other tools were waiting for it to finish successfully. Use this option to resume those tools using the new output(s) of this tool run.'\n                        }\n                    }\n                }\n            }, options ) );\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/tools/tools-form.js\n ** module id = 28\n ** module chunks = 2\n **/","// dependencies\ndefine([], function() {\n\n// tool form templates\nreturn {\n    help: function(options) {\n        var $tmpl = $('<div class=\"toolHelp\" style=\"overflow: auto;\"/>')\n                        .append( $('<div class=\"toolHelpBody\"/>').append(options.help) );\n        $tmpl.find('a').attr('target', '_blank');\n        return $tmpl;\n    },\n\n    success: function(response) {\n        // check\n        if (!response.jobs || !response.jobs.length) {\n            return this.error(response);\n        }\n\n        // number of jobs\n        var njobs = response.jobs.length;\n\n        // job count info text\n        var njobs_text = '';\n        if (njobs == 1) {\n            njobs_text = '1 job has';\n        } else {\n            njobs_text = njobs + ' jobs have';\n        }\n\n        // create template string\n        var tmpl =  '<div class=\"donemessagelarge\">' +\n                        '<p>' + njobs_text + ' been successfully added to the queue - resulting in the following datasets:</p>';\n        for (var i in response.outputs) {\n            tmpl +=     '<p style=\"padding: 10px 20px;\"><b>' + response.outputs[i].hid + ': ' + response.outputs[i].name + '</b></p>';\n        }\n        tmpl +=         '<p>You can check the status of queued jobs and view the resulting data by refreshing the History pane. When the job has been run the status will change from \\'running\\' to \\'finished\\' if completed successfully or \\'error\\' if problems were encountered.</p>' +\n                    '</div>';\n\n        // return success message element\n        return tmpl;\n    },\n\n    error: function(response) {\n        return  '<div>' +\n                    '<p>' +\n                        'The server could not complete the request. Please contact the Galaxy Team if this error persists.' +\n                    '</p>' +\n                    '<textarea class=\"ui-textarea\" disabled style=\"color: black; height: 300px !important;\">' +\n                        JSON.stringify(response, undefined, 4) +\n                    '</textarea>' +\n                '</div>';\n    },\n\n    requirements: function(options) {\n        var requirements_message = 'This tool requires ';\n        for (var i in options.requirements) {\n            var req = options.requirements[i];\n            requirements_message += req.name;\n            if (req.version) {\n                requirements_message += ' (Version ' + req.version + ')';\n            }\n            if (i < options.requirements.length - 2) {\n                requirements_message += ', ';\n            }\n            if (i == options.requirements.length - 2) {\n                requirements_message += ' and ';\n            }\n        }\n        return requirements_message + '. Click <a target=\"_blank\" href=\"https://wiki.galaxyproject.org/Tools/Requirements\">here</a> for more information.';\n    }\n};\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/tools/tools-template.js\n ** module id = 29\n ** module chunks = 2\n **/","define([\n    //jquery\n    //backbone\n], function(){\n// =============================================================================\n/**\n * view for a popup menu\n */\nvar PopupMenu = Backbone.View.extend({\n//TODO: maybe better as singleton off the Galaxy obj\n    /** Cache the desired button element and options, set up the button click handler\n     *  NOTE: attaches this view as HTML/jQ data on the button for later use.\n     */\n    initialize: function( $button, options ){\n        // default settings\n        this.$button = $button;\n        if( !this.$button.size() ){\n            this.$button = $( '<div/>' );\n        }\n        this.options = options || [];\n\n        // set up button click -> open menu behavior\n        var menu = this;\n        this.$button.click( function( event ){\n            // if there's already a menu open, remove it\n            $( '.popmenu-wrapper' ).remove();\n            menu._renderAndShow( event );\n            return false;\n        });\n    },\n\n    // render the menu, append to the page body at the click position, and set up the 'click-away' handlers, show\n    _renderAndShow: function( clickEvent ){\n        this.render();\n        this.$el.appendTo( 'body' ).css( this._getShownPosition( clickEvent )).show();\n        this._setUpCloseBehavior();\n    },\n\n    // render the menu\n    // this menu doesn't attach itself to the DOM ( see _renderAndShow )\n    render: function(){\n        // render the menu body absolute and hidden, fill with template\n        this.$el.addClass( 'popmenu-wrapper' ).hide()\n            .css({ position : 'absolute' })\n            .html( this.template( this.$button.attr( 'id' ), this.options ));\n\n        // set up behavior on each link/anchor elem\n        if( this.options.length ){\n            var menu = this;\n            //precondition: there should be one option per li\n            this.$el.find( 'li' ).each( function( i, li ){\n                var option = menu.options[i];\n\n                // if the option has 'func', call that function when the anchor is clicked\n                if( option.func ){\n                    $( this ).children( 'a.popupmenu-option' ).click( function( event ){\n                        option.func.call( menu, event, option );\n                        // We must preventDefault otherwise clicking \"cancel\"\n                        // on a purge or something still navigates and causes\n                        // the action.\n                        event.preventDefault();\n                        // bubble up so that an option click will call the close behavior\n                    });\n                }\n            });\n        }\n        return this;\n    },\n\n    template : function( id, options ){\n        return [\n            '<ul id=\"', id, '-menu\" class=\"dropdown-menu\">', this._templateOptions( options ), '</ul>'\n        ].join( '' );\n    },\n\n    _templateOptions : function( options ){\n        if( !options.length ){\n            return '<li>(no options)</li>';\n        }\n        return _.map( options, function( option ){\n            if( option.divider ){\n                return '<li class=\"divider\"></li>';\n            } else if( option.header ){\n                return [ '<li class=\"head\"><a href=\"javascript:void(0);\">', option.html, '</a></li>' ].join( '' );\n            }\n            var href   = option.href || 'javascript:void(0);',\n                target = ( option.target  )?( ' target=\"' + option.target + '\"' ):( '' ),\n                check  = ( option.checked )?( '<span class=\"fa fa-check\"></span>' ):( '' );\n            return [\n                '<li><a class=\"popupmenu-option\" href=\"', href, '\"', target, '>',\n                    check, option.html,\n                '</a></li>'\n            ].join( '' );\n        }).join( '' );\n    },\n\n    // get the absolute position/offset for the menu\n    _getShownPosition : function( clickEvent ){\n\n        // display menu horiz. centered on click...\n        var menuWidth = this.$el.width();\n        var x = clickEvent.pageX - menuWidth / 2 ;\n\n        // adjust to handle horiz. scroll and window dimensions ( draw entirely on visible screen area )\n        x = Math.min( x, $( document ).scrollLeft() + $( window ).width() - menuWidth - 5 );\n        x = Math.max( x, $( document ).scrollLeft() + 5 );\n        return {\n            top: clickEvent.pageY,\n            left: x\n        };\n    },\n\n    // bind an event handler to all available frames so that when anything is clicked\n    // the menu is removed from the DOM and the event handler unbinds itself\n    _setUpCloseBehavior: function(){\n        var menu = this;\n//TODO: alternately: focus hack, blocking overlay, jquery.blockui\n\n        // function to close popup and unbind itself\n        function closePopup( event ){\n            $( document ).off( 'click.close_popup' );\n            if( window.parent !== window ){\n                try {\n                    $( window.parent.document ).off( \"click.close_popup\" );\n                } catch( err ){}\n            } else {\n                try {\n                    $( 'iframe#galaxy_main' ).contents().off( \"click.close_popup\" );\n                } catch( err ){}\n            }\n            menu.remove();\n        }\n\n        $( 'html' ).one( \"click.close_popup\", closePopup );\n        if( window.parent !== window ){\n            try {\n                $( window.parent.document ).find( 'html' ).one( \"click.close_popup\", closePopup );\n            } catch( err ){}\n        } else {\n            try {\n                $( 'iframe#galaxy_main' ).contents().one( \"click.close_popup\", closePopup );\n            } catch( err ){}\n        }\n    },\n\n    // add a menu option/item at the given index\n    addItem: function( item, index ){\n        // append to end if no index\n        index = ( index >= 0 ) ? index : this.options.length;\n        this.options.splice( index, 0, item );\n        return this;\n    },\n\n    // remove a menu option/item at the given index\n    removeItem: function( index ){\n        if( index >=0 ){\n            this.options.splice( index, 1 );\n        }\n        return this;\n    },\n\n    // search for a menu option by its html\n    findIndexByHtml: function( html ){\n        for( var i = 0; i < this.options.length; i++ ){\n            if( _.has( this.options[i], 'html' ) && ( this.options[i].html === html )){\n                return i;\n            }\n        }\n        return null;\n    },\n\n    // search for a menu option by its html\n    findItemByHtml: function( html ){\n        return this.options[( this.findIndexByHtml( html ))];\n    },\n\n    // string representation\n    toString: function(){\n        return 'PopupMenu';\n    }\n});\n/** shortcut to new for when you don't need to preserve the ref */\nPopupMenu.create = function _create( $button, options ){\n    return new PopupMenu( $button, options );\n};\n\n// -----------------------------------------------------------------------------\n// the following class functions are bridges from the original make_popupmenu and make_popup_menus\n// to the newer backbone.js PopupMenu\n\n/** Create a PopupMenu from simple map initial_options activated by clicking button_element.\n *      Converts initial_options to object array used by PopupMenu.\n *  @param {jQuery|DOMElement} button_element element which, when clicked, activates menu\n *  @param {Object} initial_options map of key -> values, where\n *      key is option text, value is fn to call when option is clicked\n *  @returns {PopupMenu} the PopupMenu created\n */\nPopupMenu.make_popupmenu = function( button_element, initial_options ){\n    var convertedOptions = [];\n    _.each( initial_options, function( optionVal, optionKey ){\n        var newOption = { html: optionKey };\n\n        // keys with null values indicate: header\n        if( optionVal === null ){ // !optionVal? (null only?)\n            newOption.header = true;\n\n        // keys with function values indicate: a menu option\n        } else if( jQuery.type( optionVal ) === 'function' ){\n            newOption.func = optionVal;\n        }\n        //TODO:?? any other special optionVals?\n        // there was no divider option originally\n        convertedOptions.push( newOption );\n    });\n    return new PopupMenu( $( button_element ), convertedOptions );\n};\n\n/** Find all anchors in $parent (using selector) and covert anchors into a PopupMenu options map.\n *  @param {jQuery} $parent the element that contains the links to convert to options\n *  @param {String} selector jq selector string to find links\n *  @returns {Object[]} the options array to initialize a PopupMenu\n */\n//TODO: lose parent and selector, pass in array of links, use map to return options\nPopupMenu.convertLinksToOptions = function( $parent, selector ){\n    $parent = $( $parent );\n    selector = selector || 'a';\n    var options = [];\n    $parent.find( selector ).each( function( elem, i ){\n        var option = {}, $link = $( elem );\n\n        // convert link text to the option text (html) and the href into the option func\n        option.html = $link.text();\n        if( $link.attr( 'href' ) ){\n            var linkHref    = $link.attr( 'href' ),\n                linkTarget  = $link.attr( 'target' ),\n                confirmText = $link.attr( 'confirm' );\n\n            option.func = function(){\n                // if there's a \"confirm\" attribute, throw up a confirmation dialog, and\n                //  if the user cancels - do nothing\n                if( ( confirmText ) && ( !confirm( confirmText ) ) ){ return; }\n\n                // if there's no confirm attribute, or the user accepted the confirm dialog:\n                switch( linkTarget ){\n                    // relocate the center panel\n                    case '_parent':\n                        window.parent.location = linkHref;\n                        break;\n\n                    // relocate the entire window\n                    case '_top':\n                        window.top.location = linkHref;\n                        break;\n\n                    // relocate this panel\n                    default:\n                        window.location = linkHref;\n                }\n            };\n        }\n        options.push( option );\n    });\n    return options;\n};\n\n/** Create a single popupmenu from existing DOM button and anchor elements\n *  @param {jQuery} $buttonElement the element that when clicked will open the menu\n *  @param {jQuery} $menuElement the element that contains the anchors to convert into a menu\n *  @param {String} menuElementLinkSelector jq selector string used to find anchors to be made into menu options\n *  @returns {PopupMenu} the PopupMenu (Backbone View) that can render, control the menu\n */\nPopupMenu.fromExistingDom = function( $buttonElement, $menuElement, menuElementLinkSelector ){\n    $buttonElement = $( $buttonElement );\n    $menuElement = $( $menuElement );\n    var options = PopupMenu.convertLinksToOptions( $menuElement, menuElementLinkSelector );\n    // we're done with the menu (having converted it to an options map)\n    $menuElement.remove();\n    return new PopupMenu( $buttonElement, options );\n};\n\n/** Create all popupmenus within a document or a more specific element\n *  @param {DOMElement} parent the DOM element in which to search for popupmenus to build (defaults to document)\n *  @param {String} menuSelector jq selector string to find popupmenu menu elements (defaults to \"div[popupmenu]\")\n *  @param {Function} buttonSelectorBuildFn the function to build the jq button selector.\n *      Will be passed $menuElement, parent.\n *      (Defaults to return '#' + $menuElement.attr( 'popupmenu' ); )\n *  @returns {PopupMenu[]} array of popupmenus created\n */\nPopupMenu.make_popup_menus = function( parent, menuSelector, buttonSelectorBuildFn ){\n    parent = parent || document;\n    // orig. Glx popupmenu menus have a (non-std) attribute 'popupmenu'\n    //  which contains the id of the button that activates the menu\n    menuSelector = menuSelector || 'div[popupmenu]';\n    // default to (orig. Glx) matching button to menu by using the popupmenu attr of the menu as the id of the button\n    buttonSelectorBuildFn = buttonSelectorBuildFn || function( $menuElement, parent ){\n        return '#' + $menuElement.attr( 'popupmenu' );\n    };\n\n    // aggregate and return all PopupMenus\n    var popupMenusCreated = [];\n    $( parent ).find( menuSelector ).each( function(){\n        var $menuElement    = $( this ),\n            $buttonElement  = $( parent ).find( buttonSelectorBuildFn( $menuElement, parent ) );\n        popupMenusCreated.push( PopupMenu.fromDom( $buttonElement, $menuElement ) );\n        $buttonElement.addClass( 'popup' );\n    });\n    return popupMenusCreated;\n};\n\n\n// =============================================================================\n    return PopupMenu;\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/popup-menu.js\n ** module id = 30\n ** module chunks = 2\n **/","/** This class contains all button views.\n*/\ndefine(['utils/utils'], function( Utils ) {\n    /** This renders the default button which is used e.g. at the bottom of the upload modal.\n    */\n    var ButtonBase = Backbone.View.extend({\n        initialize: function( options ) {\n            this.options = Utils.merge( options, {\n                id          : Utils.uid(),\n                title       : '',\n                floating    : 'right',\n                icon        : '',\n                cls         : 'ui-button btn btn-default',\n                cls_wait    : 'btn btn-info'\n            } );\n            this.setElement( this._template( this.options ) );\n            var self = this;\n            $( this.el ).on( 'click' , function() {\n                $( '.tooltip' ).hide();\n                if ( options.onclick && !self.disabled ) {\n                    options.onclick();\n                }\n            } );\n            $( this.el ).tooltip( { title: options.tooltip, placement: 'bottom' } );\n        },\n\n        // disable\n        disable: function() {\n            this.$el.addClass( 'disabled' );\n            this.disabled = true;\n        },\n\n        // enable\n        enable: function() {\n            this.$el.removeClass( 'disabled' );\n            this.disabled = false;\n        },\n\n        // show spinner\n        wait: function() {\n            this.$el.removeClass( this.options.cls ).addClass( this.options.cls_wait ).prop( 'disabled', true );\n            this.$( '.icon' ).removeClass( this.options.icon ).addClass( 'fa-spinner fa-spin' );\n            this.$( '.title' ).html( 'Sending...' );\n        },\n\n        // hide spinner\n        unwait: function() {\n            this.$el.removeClass( this.options.cls_wait ).addClass( this.options.cls ).prop( 'disabled', false );\n            this.$( '.icon' ).removeClass( 'fa-spinner fa-spin' ).addClass( this.options.icon );\n            this.$( '.title' ).html( this.options.title );\n        },\n\n        // template\n        _template: function( options ) {\n            var str =   '<button id=\"' + options.id + '\" type=\"submit\" style=\"float: ' + options.floating + ';\" type=\"button\" class=\"' + options.cls + '\">';\n            if (options.icon) {\n                str +=      '<i class=\"icon fa ' + options.icon + '\"/>&nbsp;';\n            }\n            str +=          '<span class=\"title\">' + options.title + '</span>' +\n                        '</button>';\n            return str;\n        }\n    });\n\n    /** This button allows the right-click/open-in-new-tab feature, its used e.g. for panel buttons.\n    */\n    var ButtonLink = ButtonBase.extend({\n        initialize: function( options ) {\n            ButtonBase.prototype.initialize.call( this, options );\n        },\n        _template: function( options ) {\n            return  '<a id=\"' + options.id + '\" class=\"' + options.cls + '\" href=\"' + ( options.href || 'javascript:void(0)' ) + '\"' +\n                        ' title=\"' + options.title + '\" target=\"' + ( options.target || '_top' ) + '\">' + '<span class=\"' + options.icon + '\"/>' +\n                    '</a>';\n        }\n    });\n\n    /** The check button is used in the tool form and allows to distinguish between multiple states e.g. all, partially and nothing selected.\n    */\n    var ButtonCheck = Backbone.View.extend({\n        initialize: function( options ) {\n            // configure options\n            this.options = Utils.merge(options, {\n                title : 'Select/Unselect all',\n                icons : ['fa fa-square-o', 'fa fa-minus-square-o', 'fa fa-check-square-o'],\n                value : 0\n            });\n\n            // create new element\n            this.setElement( this._template() );\n            this.$title = this.$( '.title' );\n            this.$icon  = this.$( '.icon' );\n\n            // set initial value\n            this.value( this.options.value );\n\n            // set title\n            this.$title.html( this.options.title );\n\n            // add event handler\n            var self = this;\n            this.$el.on('click', function() {\n                self.current = ( self.current === 0 && 2 ) || 0;\n                self.value( self.current );\n                self.options.onclick && self.options.onclick();\n            });\n        },\n\n        /* Sets a new value and/or returns the current value.\n        * @param{Integer}   new_val - Set a new value 0=unchecked, 1=partial and 2=checked.\n        * OR:\n        * @param{Integer}   new_val - Number of selected options.\n        * @param{Integer}   total   - Total number of available options.\n        */\n        value: function ( new_val, total ) {\n            if ( new_val !== undefined ) {\n                if ( total ) {\n                    if ( new_val !== 0 ) {\n                        new_val = ( new_val !== total ) && 1 || 2;\n                    }\n                }\n                this.current = new_val;\n                this.$icon.removeClass()\n                          .addClass( 'icon' )\n                          .addClass( this.options.icons[ new_val ] );\n                this.options.onchange && this.options.onchange( new_val );\n            }\n            return this.current;\n        },\n\n        /** Template containing the check button and the title\n        */\n        _template: function() {\n            return  '<div class=\"ui-button-check\" >' +\n                        '<span class=\"icon\"/>' +\n                        '<span class=\"title\"/>' +\n                    '</div>';\n        }\n    });\n\n    /** This renders a differently styled, more compact button version.\n        TODO: Consolidate with icon-button.js and/or button-default.js.\n    */\n    var ButtonIcon = Backbone.View.extend({\n        initialize : function( options ) {\n            // get options\n            this.options = Utils.merge( options, {\n                id          : Utils.uid(),\n                title       : '',\n                floating    : 'right',\n                cls         : 'ui-button-icon',\n                icon        : '',\n                tooltip     : '',\n                onclick     : null\n            });\n\n            // create new element\n            this.setElement( this._template( this.options ) );\n\n            // link button element\n            this.$button = this.$el.find( '.button' );\n\n            // add event\n            var self = this;\n            $(this.el).on('click', function() {\n                // hide all tooltips\n                $( '.tooltip' ).hide();\n\n                // execute onclick callback\n                if ( options.onclick && !self.disabled ) {\n                    options.onclick();\n                }\n            });\n\n            // add tooltip\n            this.$button.tooltip( { title: options.tooltip, placement: 'bottom' } );\n        },\n\n        // disable\n        disable: function() {\n            this.$button.addClass( 'disabled' );\n            this.disabled = true;\n        },\n\n        // enable\n        enable: function() {\n            this.$button.removeClass( 'disabled' );\n            this.disabled = false;\n        },\n\n        // change icon\n        setIcon: function(icon_cls) {\n            this.$('i').removeClass( this.options.icon ).addClass( icon_cls );\n            this.options.icon = icon_cls;\n        },\n\n        // template\n        _template: function( options ) {\n            // width\n            var width = '';\n            if ( options.title ) {\n                width = 'width: auto;';\n            }\n\n            // string\n            var str =   '<div id=\"' + options.id + '\" style=\"float: ' + options.floating + '; ' + width + '\" class=\"' + options.cls + '\">' +\n                            '<div class=\"button\">';\n            if (options.title) {\n                str +=          '<i class=\"icon fa ' + options.icon + '\"/>&nbsp;' +\n                                '<span class=\"title\">' + options.title + '</span>';\n            } else {\n                str +=          '<i class=\"icon fa ' + options.icon + '\"/>';\n            }\n            str +=          '</div>' +\n                        '</div>';\n            return str;\n        }\n    });\n\n    /** This class creates a button with dropdown menu. It extends the functionality of the Ui.ButtonIcon class.\n        TODO: Consolidate class, use common base class\n    */\n    var ButtonMenu = Backbone.View.extend({\n        // optional sub menu\n        $menu: null,\n\n        // initialize\n        initialize: function ( options ) {\n            // get options\n            this.options = Utils.merge( options, {\n                // same as Ui.ButtonIcon\n                id              : '',\n                title           : '',\n                floating        : 'right',\n                pull            : 'right',\n                icon            : null,\n                onclick         : null,\n                cls             : 'ui-button-icon ui-button-menu',\n                tooltip         : '',\n                \n                // additional options\n                target          : '',\n                href            : '',\n                onunload        : null,\n                visible         : true,\n                tag             : ''\n            } );\n\n            // add template for tab\n            this.setElement( $( this._template( this.options ) ) );\n\n            // find root\n            var $root = $( this.el ).find( '.root' );\n\n            // link head\n            var self = this;\n            $root.on( 'click', function( e ) {\n                // hide all tooltips\n                $( '.tooltip' ).hide();\n\n                // prevent default\n                e.preventDefault();\n\n                // add click event\n                if( self.options.onclick ) {\n                    self.options.onclick();\n                }\n            });\n\n            // visiblity\n            if ( !this.options.visible )\n                this.hide();\n\n            // add tooltip\n            $root.tooltip( { title: options.tooltip, placement: 'bottom' } );\n        },\n\n        // show\n        show: function() {\n            $( this.el ).show();\n        },\n\n        // hide\n        hide: function() {\n            $( this.el ).hide();\n        },\n\n        // add menu item\n        addMenu: function ( options ) {\n            // menu option defaults\n            var menuOptions = {\n                title       : '',\n                target      : '',\n                href        : '',\n                onclick     : null,\n                divider     : false,\n                icon        : null,\n                cls         : 'button-menu btn-group'\n            }\n\n            // get options\n            menuOptions = Utils.merge( options, menuOptions );\n\n            // check if submenu element is available\n            if ( !this.$menu ) {\n                // insert submenu element into root\n                $( this.el ).append( this._templateMenu() );\n\n                // update element link\n                this.$menu = $( this.el ).find( '.menu' );\n            }\n\n            // create\n            var $item = $( this._templateMenuItem( menuOptions ) );\n\n            // add events\n            $item.on( 'click', function( e ) {\n                // prevent default\n                e.preventDefault();\n\n                // add click event\n                if( menuOptions.onclick ) {\n                    menuOptions.onclick ();\n                }\n            });\n\n            // append menu\n            this.$menu.append( $item );\n\n            // append divider\n            if ( menuOptions.divider ) {\n                this.$menu.append( $( this._templateDivider() ) );\n            }\n        },\n\n        // fill template header\n        _templateMenuItem: function ( options ) {\n            var tmpl =  '<li>' +\n                            '<a class=\"dropdown-item\" href=\"' + options.href + '\" target=\"' + options.target + '\">';\n            if ( options.icon ) {\n                tmpl +=         '<i class=\"fa ' + options.icon + '\"/>';\n            }\n            tmpl +=             ' ' + options.title +\n                            '</a>' +\n                        '</li>';\n            return tmpl;\n        },\n\n        // fill template header\n        _templateMenu: function () {\n            return '<ul class=\"menu dropdown-menu pull-' + this.options.pull + '\" role=\"menu\"/>';\n        },\n\n        _templateDivider: function() {\n            return '<li class=\"divider\"/>';\n        },\n\n        // element\n        _template: function(options) {\n            // TODO: width/margin should be set in css\n            var width = '';\n            var margin = '';\n            if ( options.title ) {\n                width = 'width: auto;';\n            } else {\n                margin = 'margin: 0px;';\n            }\n            var str =   '<div id=\"' + options.id + '\" style=\"float: ' + options.floating + '; ' + width + '\" class=\"dropdown ' + options.cls + '\">' +\n                            '<div class=\"root button dropdown-toggle\" data-toggle=\"dropdown\" style=\"' + margin + '\">' +\n                                '<i class=\"icon fa ' + options.icon + '\"/>';\n            if ( options.title ) {\n                str +=          '&nbsp;<span class=\"title\">' + options.title + '</span>';\n            }\n            str +=          '</div>' +\n                        '</div>';\n            return str;\n        }\n    });\n\n    return {\n        ButtonDefault   : ButtonBase,\n        ButtonLink      : ButtonLink,\n        ButtonIcon      : ButtonIcon,\n        ButtonCheck     : ButtonCheck,\n        ButtonMenu      : ButtonMenu\n    }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-buttons.js\n ** module id = 31\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils'], function(Utils) {\n\n/**\n *  This class creates a ui table element.\n */\nvar View = Backbone.View.extend({\n    // current row\n    row: null,\n    \n    // count rows\n    row_count: 0,\n    \n    // defaults options\n    optionsDefault: {\n        content     : 'No content available.',\n        onchange    : null,\n        ondblclick  : null,\n        onconfirm   : null,\n        cls         : 'ui-table',\n        cls_tr      : ''\n    },\n    \n    // events\n    events : {\n        'click'     : '_onclick',\n        'dblclick'  : '_ondblclick'\n    },\n    \n    // initialize\n    initialize : function(options) {\n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n        \n        // create new element\n        var $el = $(this._template(this.options));\n        \n        // link sub-elements\n        this.$thead = $el.find('thead');\n        this.$tbody = $el.find('tbody');\n        this.$tmessage = $el.find('tmessage');\n        \n        // set element\n        this.setElement($el);\n                \n        // initialize row\n        this.row = this._row();\n    },\n    \n    // add header cell\n    addHeader: function($el) {\n        var wrapper = $('<th></th>');\n        wrapper.append($el);\n        this.row.append(wrapper);\n    },\n    \n    // header\n    appendHeader: function() {\n        // append header row\n        this.$thead.append(this.row);\n\n        // row\n        this.row = $('<tr></tr>');\n    },\n    \n    // add row cell\n    add: function($el, width, align) {\n        var wrapper = $('<td></td>');\n        if (width) {\n            wrapper.css('width', width);\n        }\n        if (align) {\n            wrapper.css('text-align', align);\n        }\n        wrapper.append($el);\n        this.row.append(wrapper);\n    },\n    \n    // append\n    append: function(id, fade) {\n        this._commit(id, fade, false);\n    },\n    \n    // prepend\n    prepend: function(id, fade) {\n        this._commit(id, fade, true);\n    },\n    \n    // get element\n    get: function(id) {\n        return this.$el.find('#' + id);\n    },\n    \n    // delete\n    del: function(id) {\n        var item = this.$tbody.find('#' + id);\n        if (item.length > 0) {\n            item.remove();\n            this.row_count--;\n            this._refresh();\n        }\n    },\n\n    // delete all\n    delAll: function() {\n        this.$tbody.empty();\n        this.row_count = 0;\n        this._refresh();\n    },\n        \n    // value\n    value: function(new_value) {\n        // get current id/value\n        this.before = this.$tbody.find('.current').attr('id');\n        \n        // check if new_value is defined\n        if (new_value !== undefined) {\n            this.$tbody.find('tr').removeClass('current');\n            if (new_value) {\n                this.$tbody.find('#' + new_value).addClass('current');\n            }\n        }\n        \n        // get current id/value\n        var after = this.$tbody.find('.current').attr('id');\n        if(after === undefined) {\n            return null;\n        } else {\n            // fire onchange\n            if (after != this.before && this.options.onchange) {\n                this.options.onchange(new_value);\n            }\n            \n            // return current value\n            return after;\n        }\n    },\n    \n    // size\n    size: function() {\n        return this.$tbody.find('tr').length;\n    },\n    \n    // commit\n    _commit: function(id, fade, prepend) {\n        // remove previous item with same id\n        this.del(id);\n        \n        // add\n        this.row.attr('id', id);\n        \n        // add row\n        if (prepend) {\n            this.$tbody.prepend(this.row);\n        } else {\n            this.$tbody.append(this.row);\n        }\n        \n        // fade mode\n        if (fade) {\n            this.row.hide();\n            this.row.fadeIn();\n        }\n        \n        // row\n        this.row = this._row();\n        \n        // row count\n        this.row_count++;\n        this._refresh();\n    },\n    \n    // create new row\n    _row: function() {\n        return $('<tr class=\"' + this.options.cls_tr + '\"></tr>');\n    },\n    \n    // onclick\n    _onclick: function(e) {\n        // get values\n        var old_value = this.value();\n        var new_value = $(e.target).closest('tr').attr('id');\n        if (new_value != ''){\n            // check equality\n            if (new_value && old_value != new_value) {\n                if (this.options.onconfirm) {\n                    this.options.onconfirm(new_value);\n                } else {\n                    this.value(new_value);\n                }\n            }\n        }\n    },\n\n    // ondblclick\n    _ondblclick: function(e) {\n        var value = this.value();\n        if (value && this.options.ondblclick) {\n            this.options.ondblclick(value);\n        }\n    },\n        \n    // refresh\n    _refresh: function() {\n        if (this.row_count == 0) {\n            this.$tmessage.show();\n        } else {\n            this.$tmessage.hide();\n        }\n    },\n        \n    // load html template\n    _template: function(options) {\n        return  '<div>' +\n                    '<table class=\"' + options.cls + '\">' +\n                        '<thead></thead>' +\n                        '<tbody></tbody>' +\n                    '</table>' +\n                    '<tmessage>' + options.content + '</tmessage>' +\n                '<div>';\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-table.js\n ** module id = 32\n ** module chunks = 2\n **/","// dependencies\ndefine([], function() {\n\n// model\nvar Model = Backbone.Model.extend({\n    defaults: {\n        extension       : 'auto',\n        genome          : '?',\n        url_paste       : '',\n        status          : 'init',\n        info            : null,\n        file_name       : '',\n        file_mode       : '',\n        file_size       : 0,\n        file_type       : null,\n        file_path       : '',\n        file_data       : null,\n        percentage      : 0,\n        space_to_tab    : false,\n        to_posix_lines  : true,\n        enabled         : true\n    },\n    reset: function(attr) {\n        this.clear().set(this.defaults).set(attr);\n    }\n});\n\n// collection\nvar Collection = Backbone.Collection.extend({\n    model: Model\n});\n\n// return\nreturn {\n    Model: Model,\n    Collection : Collection\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/upload/upload-model.js\n ** module id = 33\n ** module chunks = 2\n **/","define([\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"ui/editable-text\",\n], function( baseMVC, _l ){\n// =============================================================================\n/** A view on any model that has a 'annotation' attribute\n */\nvar AnnotationEditor = Backbone.View\n        .extend( baseMVC.LoggableMixin )\n        .extend( baseMVC.HiddenUntilActivatedViewMixin ).extend({\n\n    tagName     : 'div',\n    className   : 'annotation-display',\n\n    /** Set up listeners, parse options */\n    initialize : function( options ){\n        options = options || {};\n        this.tooltipConfig = options.tooltipConfig || { placement: 'bottom' };\n        //console.debug( this, options );\n        // only listen to the model only for changes to annotations\n        this.listenTo( this.model, 'change:annotation', function(){\n            this.render();\n        });\n        this.hiddenUntilActivated( options.$activator, options );\n    },\n\n    /** Build the DOM elements, call select to on the created input, and set up behaviors */\n    render : function(){\n        var view = this;\n        this.$el.html( this._template() );\n        this.$el.find( \"[title]\" ).tooltip( this.tooltipConfig );\n\n        //TODO: handle empties better\n        this.$annotation().make_text_editable({\n            use_textarea: true,\n            on_finish: function( newAnnotation ){\n                view.$annotation().text( newAnnotation );\n                view.model.save({ annotation: newAnnotation }, { silent: true })\n                    .fail( function(){\n                        view.$annotation().text( view.model.previous( 'annotation' ) );\n                    });\n            }\n        });\n        return this;\n    },\n\n    /** @returns {String} the html text used to build the view's DOM */\n    _template : function(){\n        var annotation = this.model.get( 'annotation' );\n        //if( !annotation ){\n        //    //annotation = [ '<em class=\"annotation-empty\">', _l( 'Click to add an annotation' ), '</em>' ].join( '' );\n        //    annotation = [ '<em class=\"annotation-empty\"></em>' ].join( '' );\n        //}\n        return [\n            //TODO: make prompt optional\n            '<label class=\"prompt\">', _l( 'Annotation' ), '</label>',\n            // set up initial tags by adding as CSV to input vals (necc. to init select2)\n            '<div class=\"annotation\" title=\"', _l( 'Edit annotation' ), '\">',\n                _.escape( annotation ),\n            '</div>'\n        ].join( '' );\n    },\n\n    /** @returns {jQuery} the main element for this view */\n    $annotation : function(){\n        return this.$el.find( '.annotation' );\n    },\n\n    /** shut down event listeners and remove this view's DOM */\n    remove : function(){\n        this.$annotation.off();\n        this.stopListening( this.model );\n        Backbone.View.prototype.remove.call( this );\n    },\n\n    /** string rep */\n    toString : function(){ return [ 'AnnotationEditor(', this.model + '', ')' ].join(''); }\n});\n// =============================================================================\nreturn {\n    AnnotationEditor : AnnotationEditor\n};\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/annotations.js\n ** module id = 42\n ** module chunks = 2\n **/","define([\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( baseMVC, _l ){\n/* global Backbone */\n\nvar logNamespace = 'citation';\n//==============================================================================\n/** @class model for tool citations.\n *  @name Citation\n *  @augments Backbone.Model\n */\nvar Citation = Backbone.Model.extend( baseMVC.LoggableMixin ).extend( {\n    _logNamespace : logNamespace,\n\n    initialize: function( ) {\n        var bibtex = this.attributes.content;\n        var entry = new BibtexParser(bibtex).entries[0];\n        this.entry = entry;\n        this._fields = {};\n        var rawFields = entry.Fields;\n        for(key in rawFields) {\n            var value = rawFields[ key ];\n            var lowerKey = key.toLowerCase();\n            this._fields[ lowerKey ] = value;\n        }\n    },\n    entryType: function() {\n        return this.entry.EntryType;\n    },\n    fields: function() {\n        return this._fields;\n    }\n} );\n\n//==============================================================================\n/** @class Backbone collection of citations.\n */\nvar BaseCitationCollection = Backbone.Collection.extend( baseMVC.LoggableMixin ).extend( {\n    _logNamespace : logNamespace,\n\n    /** root api url */\n    urlRoot : galaxy_config.root + 'api',\n    partial : true, // Assume some tools in history/workflow may not be properly annotated yet.\n    model : Citation,\n} );\n\nvar HistoryCitationCollection = BaseCitationCollection.extend( {\n    /** complete api url */\n    url : function() {\n        return this.urlRoot + '/histories/' + this.history_id + '/citations';\n    }\n} );\n\nvar ToolCitationCollection = BaseCitationCollection.extend( {\n    /** complete api url */\n    url : function() {\n        return this.urlRoot + '/tools/' + this.tool_id + '/citations';\n    },\n    partial : false, // If a tool has citations, assume they are complete.\n} );\n\n//==============================================================================\nreturn {\n    Citation : Citation,\n    HistoryCitationCollection  : HistoryCitationCollection,\n    ToolCitationCollection: ToolCitationCollection\n};\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/citation/citation-model.js\n ** module id = 43\n ** module chunks = 2\n **/","define([\n    \"mvc/dataset/states\",\n    \"mvc/dataset/dataset-li\",\n    \"mvc/tags\",\n    \"mvc/annotations\",\n    \"ui/fa-icon-button\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( STATES, DATASET_LI, TAGS, ANNOTATIONS, faIconButton, BASE_MVC, _l ){\n//==============================================================================\nvar _super = DATASET_LI.DatasetListItemView;\n/** @class Editing view for DatasetAssociation.\n */\nvar DatasetListItemEdit = _super.extend(\n/** @lends DatasetListItemEdit.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** set up: options */\n    initialize  : function( attributes ){\n        _super.prototype.initialize.call( this, attributes );\n//TODO: shouldn't this err if false?\n        this.hasUser = attributes.hasUser;\n\n        /** allow user purge of dataset files? */\n        this.purgeAllowed = attributes.purgeAllowed || false;\n\n        //TODO: move to HiddenUntilActivatedViewMixin\n        /** should the tags editor be shown or hidden initially? */\n        this.tagsEditorShown        = attributes.tagsEditorShown || false;\n        /** should the tags editor be shown or hidden initially? */\n        this.annotationEditorShown  = attributes.annotationEditorShown || false;\n    },\n\n    // ......................................................................... titlebar actions\n    /** In this override, add the other two primary actions: edit and delete */\n    _renderPrimaryActions : function(){\n        var actions = _super.prototype._renderPrimaryActions.call( this );\n        if( this.model.get( 'state' ) === STATES.NOT_VIEWABLE ){\n            return actions;\n        }\n        // render the display, edit attr and delete icon-buttons\n        return _super.prototype._renderPrimaryActions.call( this ).concat([\n            this._renderEditButton(),\n            this._renderDeleteButton()\n        ]);\n    },\n\n//TODO: move titleButtons into state renderers, remove state checks in the buttons\n\n    /** Render icon-button to edit the attributes (format, permissions, etc.) this dataset. */\n    _renderEditButton : function(){\n        // don't show edit while uploading, in-accessible\n        // DO show if in error (ala previous history panel)\n        if( ( this.model.get( 'state' ) === STATES.DISCARDED )\n        ||  ( !this.model.get( 'accessible' ) ) ){\n            return null;\n        }\n\n        var purged = this.model.get( 'purged' ),\n            deleted = this.model.get( 'deleted' ),\n            editBtnData = {\n                title       : _l( 'Edit attributes' ),\n                href        : this.model.urls.edit,\n                target      : this.linkTarget,\n                faIcon      : 'fa-pencil',\n                classes     : 'edit-btn'\n            };\n\n        // disable if purged or deleted and explain why in the tooltip\n        if( deleted || purged ){\n            editBtnData.disabled = true;\n            if( purged ){\n                editBtnData.title = _l( 'Cannot edit attributes of datasets removed from disk' );\n            } else if( deleted ){\n                editBtnData.title = _l( 'Undelete dataset to edit attributes' );\n            }\n\n        // disable if still uploading or new\n        } else if( _.contains( [ STATES.UPLOAD, STATES.NEW ], this.model.get( 'state' ) ) ){\n            editBtnData.disabled = true;\n            editBtnData.title = _l( 'This dataset is not yet editable' );\n        }\n        return faIconButton( editBtnData );\n    },\n\n    /** Render icon-button to delete this hda. */\n    _renderDeleteButton : function(){\n        // don't show delete if...\n        if( ( !this.model.get( 'accessible' ) ) ){\n            return null;\n        }\n\n        var self = this,\n            deletedAlready = this.model.isDeletedOrPurged();\n        return faIconButton({\n                title       : !deletedAlready? _l( 'Delete' ) : _l( 'Dataset is already deleted' ),\n                disabled    : deletedAlready,\n                faIcon      : 'fa-times',\n                classes     : 'delete-btn',\n                onclick     : function() {\n                    // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                    self.$el.find( '.icon-btn.delete-btn' ).trigger( 'mouseout' );\n                    self.model[ 'delete' ]();\n                }\n        });\n    },\n\n    // ......................................................................... details\n    /** In this override, add tags and annotations controls, make the ? dbkey a link to editing page */\n    _renderDetails : function(){\n        //TODO: generalize to be allow different details for each state\n        var $details = _super.prototype._renderDetails.call( this ),\n            state = this.model.get( 'state' );\n\n        if( !this.model.isDeletedOrPurged() && _.contains([ STATES.OK, STATES.FAILED_METADATA ], state ) ){\n            this._renderTags( $details );\n            this._renderAnnotation( $details );\n            this._makeDbkeyEditLink( $details );\n        }\n\n//TODO: TRIPLE tap, ugh.\n        this._setUpBehaviors( $details );\n        return $details;\n    },\n\n    /** Add less commonly used actions in the details section based on state */\n    _renderSecondaryActions : function(){\n        var actions = _super.prototype._renderSecondaryActions.call( this );\n        switch( this.model.get( 'state' ) ){\n            case STATES.UPLOAD:\n            case STATES.NEW:\n            case STATES.NOT_VIEWABLE:\n                return actions;\n            case STATES.ERROR:\n                // error button comes first\n                actions.unshift( this._renderErrButton() );\n                return actions.concat([ this._renderRerunButton() ]);\n            case STATES.OK:\n            case STATES.FAILED_METADATA:\n                return actions.concat([ this._renderRerunButton(), this._renderVisualizationsButton() ]);\n        }\n        return actions.concat([ this._renderRerunButton() ]);\n    },\n\n    /** Render icon-button to report an error on this dataset to the galaxy admin. */\n    _renderErrButton : function(){\n        return faIconButton({\n            title       : _l( 'View or report this error' ),\n            href        : this.model.urls.report_error,\n            classes     : 'report-error-btn',\n            target      : this.linkTarget,\n            faIcon      : 'fa-bug'\n        });\n    },\n\n    /** Render icon-button to re-run the job that created this dataset. */\n    _renderRerunButton : function(){\n        var creating_job = this.model.get( 'creating_job' );\n        if( this.model.get( 'rerunnable' ) ){\n            return faIconButton({\n                title       : _l( 'Run this job again' ),\n                href        : this.model.urls.rerun,\n                classes     : 'rerun-btn',\n                target      : this.linkTarget,\n                faIcon      : 'fa-refresh',\n                onclick     : function( ev ) {\n                    ev.preventDefault();\n                    // create webpack split point in order to load the tool form async\n                    // TODO: split not working (tool loads fine)\n                    require([ 'mvc/tools/tools-form' ], function( ToolsForm ){\n                        var form = new ToolsForm.View({ 'job_id' : creating_job });\n                        form.deferred.execute( function(){\n                            Galaxy.app.display( form );\n                        });\n                    });\n                }\n            });\n        }\n    },\n\n    /** Render an icon-button or popupmenu of links based on the applicable visualizations */\n    _renderVisualizationsButton : function(){\n        //TODO: someday - lazyload visualizations\n        var visualizations = this.model.get( 'visualizations' );\n        if( ( this.model.isDeletedOrPurged() )\n        ||  ( !this.hasUser )\n        ||  ( !this.model.hasData() )\n        ||  ( _.isEmpty( visualizations ) ) ){\n            return null;\n        }\n        if( !_.isObject( visualizations[0] ) ){\n            this.warn( 'Visualizations have been switched off' );\n            return null;\n        }\n\n        var $visualizations = $( this.templates.visualizations( visualizations, this ) );\n        //HACK: need to re-write those directed at galaxy_main with linkTarget\n        $visualizations.find( '[target=\"galaxy_main\"]').attr( 'target', this.linkTarget );\n        // use addBack here to include the root $visualizations elem (for the case of 1 visualization)\n        this._addScratchBookFn( $visualizations.find( '.visualization-link' ).addBack( '.visualization-link' ) );\n        return $visualizations;\n    },\n\n    /** add scratchbook functionality to visualization links */\n    _addScratchBookFn : function( $links ){\n        var li = this;\n        $links.click( function( ev ){\n            if( Galaxy.frame && Galaxy.frame.active ){\n                Galaxy.frame.add({\n                    title       : \"Visualization\",\n                    type        : \"url\",\n                    content     : $( this ).attr( 'href' )\n                });\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n        });\n    },\n\n//TODO: if possible move these to readonly view - but display the owner's tags/annotation (no edit)\n    /** Render the tags list/control */\n    _renderTags : function( $where ){\n        if( !this.hasUser ){ return; }\n        var view = this;\n        this.tagsEditor = new TAGS.TagsEditor({\n            model           : this.model,\n            el              : $where.find( '.tags-display' ),\n            onshowFirstTime : function(){ this.render(); },\n            // persist state on the hda view (and not the editor) since these are currently re-created each time\n            onshow          : function(){ view.tagsEditorShown = true; },\n            onhide          : function(){ view.tagsEditorShown = false; },\n            $activator      : faIconButton({\n                title   : _l( 'Edit dataset tags' ),\n                classes : 'tag-btn',\n                faIcon  : 'fa-tags'\n            }).appendTo( $where.find( '.actions .right' ) )\n        });\n        if( this.tagsEditorShown ){ this.tagsEditor.toggle( true ); }\n    },\n\n    /** Render the annotation display/control */\n    _renderAnnotation : function( $where ){\n        if( !this.hasUser ){ return; }\n        var view = this;\n        this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n            model           : this.model,\n            el              : $where.find( '.annotation-display' ),\n            onshowFirstTime : function(){ this.render(); },\n            // persist state on the hda view (and not the editor) since these are currently re-created each time\n            onshow          : function(){ view.annotationEditorShown = true; },\n            onhide          : function(){ view.annotationEditorShown = false; },\n            $activator      : faIconButton({\n                title   : _l( 'Edit dataset annotation' ),\n                classes : 'annotate-btn',\n                faIcon  : 'fa-comment'\n            }).appendTo( $where.find( '.actions .right' ) )\n        });\n        if( this.annotationEditorShown ){ this.annotationEditor.toggle( true ); }\n    },\n\n    /** If the format/dbkey/genome_build isn't set, make the display a link to the edit page */\n    _makeDbkeyEditLink : function( $details ){\n        // make the dbkey a link to editing\n        if( this.model.get( 'metadata_dbkey' ) === '?'\n        &&  !this.model.isDeletedOrPurged() ){\n            var editableDbkey = $( '<a class=\"value\">?</a>' )\n                .attr( 'href', this.model.urls.edit )\n                .attr( 'target', this.linkTarget );\n            $details.find( '.dbkey .value' ).replaceWith( editableDbkey );\n        }\n    },\n\n    // ......................................................................... events\n    /** event map */\n    events : _.extend( _.clone( _super.prototype.events ), {\n        'click .undelete-link'  : '_clickUndeleteLink',\n        'click .purge-link'     : '_clickPurgeLink',\n\n        'click .edit-btn'       : function( ev ){ this.trigger( 'edit', this, ev ); },\n        'click .delete-btn'     : function( ev ){ this.trigger( 'delete', this, ev ); },\n        'click .rerun-btn'      : function( ev ){ this.trigger( 'rerun', this, ev ); },\n        'click .report-err-btn' : function( ev ){ this.trigger( 'report-err', this, ev ); },\n        'click .visualization-btn' : function( ev ){ this.trigger( 'visualize', this, ev ); },\n        'click .dbkey a'        : function( ev ){ this.trigger( 'edit', this, ev ); }\n    }),\n\n\n    /** listener for item undelete (in the messages section) */\n    _clickUndeleteLink : function( ev ){\n        this.model.undelete();\n        return false;\n    },\n\n    /** listener for item purge (in the messages section) */\n    _clickPurgeLink : function( ev ){\n//TODO: confirm dialog\n        this.model.purge();\n        return false;\n    },\n\n    // ......................................................................... misc\n    /** string rep */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'HDAEditView(' + modelString + ')';\n    }\n});\n\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetListItemEdit.prototype.templates = (function(){\n//TODO: move to require text! plugin\n\n    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n        failed_metadata : BASE_MVC.wrapTemplate([\n            // in this override, provide a link to the edit page\n            '<% if( dataset.state === \"failed_metadata\" ){ %>',\n                '<div class=\"failed_metadata-warning warningmessagesmall\">',\n                    _l( 'An error occurred setting the metadata for this dataset' ),\n                    '<br /><a href=\"<%= dataset.urls.edit %>\" target=\"<%= view.linkTarget %>\">',\n                        _l( 'Set it manually or retry auto-detection' ),\n                    '</a>',\n                '</div>',\n            '<% } %>'\n        ], 'dataset' ),\n\n        deleted : BASE_MVC.wrapTemplate([\n            // in this override, provide links to undelete or purge the dataset\n            '<% if( dataset.deleted && !dataset.purged ){ %>',\n                // deleted not purged\n                '<div class=\"deleted-msg warningmessagesmall\">',\n                    _l( 'This dataset has been deleted' ),\n                    '<br /><a class=\"undelete-link\" href=\"javascript:void(0);\">', _l( 'Undelete it' ), '</a>',\n                    '<% if( view.purgeAllowed ){ %>',\n                        '<br /><a class=\"purge-link\" href=\"javascript:void(0);\">',\n                            _l( 'Permanently remove it from disk' ),\n                        '</a>',\n                    '<% } %>',\n                '</div>',\n            '<% } %>'\n        ], 'dataset' )\n    });\n\n    var visualizationsTemplate = BASE_MVC.wrapTemplate([\n        '<% if( visualizations.length === 1 ){ %>',\n            '<a class=\"visualization-btn visualization-link icon-btn\" href=\"<%= visualizations[0].href %>\"',\n                    ' target=\"<%= visualizations[0].target %>\" title=\"', _l( 'Visualize in' ),\n                    ' <%= visualizations[0].html %>\">',\n                '<span class=\"fa fa-bar-chart-o\"></span>',\n            '</a>',\n\n        '<% } else { %>',\n            '<div class=\"visualizations-dropdown dropdown\">',\n                '<a class=\"visualization-btn icon-btn\" data-toggle=\"dropdown\" title=\"', _l( 'Visualize' ), '\">',\n                    '<span class=\"fa fa-bar-chart-o\"></span>',\n                '</a>',\n                '<ul class=\"dropdown-menu\" role=\"menu\">',\n                    '<% _.each( visualizations, function( visualization ){ %>',\n                        '<li><a class=\"visualization-link\" href=\"<%= visualization.href %>\"',\n                                ' target=\"<%= visualization.target %>\">',\n                            '<%= visualization.html %>',\n                        '</a></li>',\n                    '<% }); %>',\n                '</ul>',\n            '</div>',\n        '<% } %>'\n    ], 'visualizations' );\n\n    return _.extend( {}, _super.prototype.templates, {\n        warnings : warnings,\n        visualizations : visualizationsTemplate\n    });\n}());\n\n\n//==============================================================================\n    return {\n        DatasetListItemEdit : DatasetListItemEdit\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/dataset/dataset-li-edit.js\n ** module id = 44\n ** module chunks = 2\n **/","define([\n    \"mvc/dataset/states\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( STATES, BASE_MVC, _l ){\n\nvar logNamespace = 'dataset';\n//==============================================================================\nvar searchableMixin = BASE_MVC.SearchableModelMixin;\n/** @class base model for any DatasetAssociation (HDAs, LDDAs, DatasetCollectionDAs).\n *      No knowledge of what type (HDA/LDDA/DCDA) should be needed here.\n *  The DA's are made searchable (by attribute) by mixing in SearchableModelMixin.\n */\nvar DatasetAssociation = Backbone.Model\n        .extend( BASE_MVC.LoggableMixin )\n        .extend( BASE_MVC.mixin( searchableMixin, /** @lends DatasetAssociation.prototype */{\n    _logNamespace : logNamespace,\n\n    /** default attributes for a model */\n    defaults : {\n        state               : STATES.NEW,\n        deleted             : false,\n        purged              : false,\n\n        // unreliable attribute\n        name                : '(unnamed dataset)',\n\n//TODO: update to false when this is correctly passed from the API (when we have a security model for this)\n        accessible          : true,\n\n        // sniffed datatype (sam, tabular, bed, etc.)\n        data_type           : '',\n        file_ext            : '',\n\n        // size in bytes\n        file_size           : 0,\n\n        // array of associated file types (eg. [ 'bam_index', ... ])\n        meta_files          : [],\n\n        misc_blurb          : '',\n        misc_info           : '',\n\n        tags                : []\n        // do NOT default on annotation, as this default is valid and will be passed on 'save'\n        //  which is incorrect behavior when the model is only partially fetched (annos are not passed in summary data)\n        //annotation          : ''\n    },\n\n    /** instance vars and listeners */\n    initialize : function( attributes, options ){\n        this.debug( this + '(Dataset).initialize', attributes, options );\n\n        //!! this state is not in trans.app.model.Dataset.states - set it here -\n        if( !this.get( 'accessible' ) ){\n            this.set( 'state', STATES.NOT_VIEWABLE );\n        }\n\n        /** Datasets rely/use some web controllers - have the model generate those URLs on startup */\n        this.urls = this._generateUrls();\n\n        this._setUpListeners();\n    },\n\n    /** returns misc. web urls for rendering things like re-run, display, etc. */\n    _generateUrls : function(){\n//TODO: would be nice if the API did this\n        var id = this.get( 'id' );\n        if( !id ){ return {}; }\n        var urls = {\n            'purge'         : 'datasets/' + id + '/purge_async',\n            'display'       : 'datasets/' + id + '/display/?preview=True',\n            'edit'          : 'datasets/' + id + '/edit',\n            'download'      : 'datasets/' + id + '/display?to_ext=' + this.get( 'file_ext' ),\n            'report_error'  : 'dataset/errors?id=' + id,\n            'rerun'         : 'tool_runner/rerun?id=' + id,\n            'show_params'   : 'datasets/' + id + '/show_params',\n            'visualization' : 'visualization',\n            'meta_download' : 'dataset/get_metadata_file?hda_id=' + id + '&metadata_name='\n        };\n//TODO: global\n        var root = ( window.galaxy_config && galaxy_config.root )?( galaxy_config.root ):( '/' );\n        _.each( urls, function( value, key ){\n            urls[ key ] = root + value;\n        });\n        this.urls = urls;\n        return urls;\n    },\n\n    /** set up any event listeners\n     *  event: state:ready  fired when this DA moves into/is already in a ready state\n     */\n    _setUpListeners : function(){\n        // if the state has changed and the new state is a ready state, fire an event\n        this.on( 'change:state', function( currModel, newState ){\n            this.log( this + ' has changed state:', currModel, newState );\n            if( this.inReadyState() ){\n                this.trigger( 'state:ready', currModel, newState, this.previous( 'state' ) );\n            }\n        });\n        // the download url (currently) relies on having a correct file extension\n        this.on( 'change:id change:file_ext', function( currModel ){\n            this._generateUrls();\n        });\n    },\n\n    // ........................................................................ common queries\n    /** override to add urls */\n    toJSON : function(){\n        var json = Backbone.Model.prototype.toJSON.call( this );\n        //console.warn( 'returning json?' );\n        //return json;\n        return _.extend( json, {\n            urls : this.urls\n        });\n    },\n\n    /** Is this dataset deleted or purged? */\n    isDeletedOrPurged : function(){\n        return ( this.get( 'deleted' ) || this.get( 'purged' ) );\n    },\n\n    /** Is this dataset in a 'ready' state; where 'Ready' states are states where no\n     *      processing (for the ds) is left to do on the server.\n     */\n    inReadyState : function(){\n        var ready = _.contains( STATES.READY_STATES, this.get( 'state' ) );\n        return ( this.isDeletedOrPurged() || ready );\n    },\n\n    /** Does this model already contain detailed data (as opposed to just summary level data)? */\n    hasDetails : function(){\n        //?? this may not be reliable\n        return _.has( this.attributes, 'genome_build' );\n    },\n\n    /** Convenience function to match dataset.has_data. */\n    hasData : function(){\n        return ( this.get( 'file_size' ) > 0 );\n    },\n\n    // ........................................................................ ajax\n    fetch : function( options ){\n        var dataset = this;\n        return Backbone.Model.prototype.fetch.call( this, options )\n            .always( function(){\n                dataset._generateUrls();\n            });\n    },\n\n    //NOTE: subclasses of DA's will need to implement url and urlRoot in order to have these work properly\n    /** save this dataset, _Mark_ing it as deleted (just a flag) */\n    'delete' : function( options ){\n        if( this.get( 'deleted' ) ){ return jQuery.when(); }\n        return this.save( { deleted: true }, options );\n    },\n    /** save this dataset, _Mark_ing it as undeleted */\n    undelete : function( options ){\n        if( !this.get( 'deleted' ) || this.get( 'purged' ) ){ return jQuery.when(); }\n        return this.save( { deleted: false }, options );\n    },\n\n    /** remove the file behind this dataset from the filesystem (if permitted) */\n    purge : function _purge( options ){\n//TODO: use, override model.destroy, HDA.delete({ purge: true })\n        if( this.get( 'purged' ) ){ return jQuery.when(); }\n        options = options || {};\n        //var hda = this,\n        //    //xhr = jQuery.ajax( this.url() + '?' + jQuery.param({ purge: true }), _.extend({\n        //    xhr = jQuery.ajax( this.url(), _.extend({\n        //        type : 'DELETE',\n        //        data : {\n        //            purge : true\n        //        }\n        //    }, options ));\n        //\n        //xhr.done( function( response ){\n        //    hda.debug( 'response', response );\n        //    //hda.set({ deleted: true, purged: true });\n        //    hda.set( response );\n        //});\n        //return xhr;\n\n        options.url = this.urls.purge;\n\n        //TODO: ideally this would be a DELETE call to the api\n        //  using purge async for now\n        var hda = this,\n            xhr = jQuery.ajax( options );\n        xhr.done( function( message, status, responseObj ){\n            hda.set({ deleted: true, purged: true });\n        });\n        xhr.fail( function( xhr, status, message ){\n            // Exception messages are hidden within error page including:  '...not allowed in this Galaxy instance.'\n            // unbury and re-add to xhr\n            var error = _l( \"Unable to purge dataset\" );\n            var messageBuriedInUnfortunatelyFormattedError = ( 'Removal of datasets by users '\n                + 'is not allowed in this Galaxy instance' );\n            if( xhr.responseJSON && xhr.responseJSON.error ){\n                error = xhr.responseJSON.error;\n            } else if( xhr.responseText.indexOf( messageBuriedInUnfortunatelyFormattedError ) !== -1 ){\n                error = messageBuriedInUnfortunatelyFormattedError;\n            }\n            xhr.responseText = error;\n            hda.trigger( 'error', hda, xhr, options, _l( error ), { error: error } );\n        });\n        return xhr;\n    },\n\n    // ........................................................................ searching\n    // see base-mvc, SearchableModelMixin\n\n    /** what attributes of an HDA will be used in a text search */\n    searchAttributes : [\n        'name', 'file_ext', 'genome_build', 'misc_blurb', 'misc_info', 'annotation', 'tags'\n    ],\n\n    /** our attr keys don't often match the labels we display to the user - so, when using\n     *      attribute specifiers ('name=\"bler\"') in a term, allow passing in aliases for the\n     *      following attr keys.\n     */\n    searchAliases : {\n        title       : 'name',\n        format      : 'file_ext',\n        database    : 'genome_build',\n        blurb       : 'misc_blurb',\n        description : 'misc_blurb',\n        info        : 'misc_info',\n        tag         : 'tags'\n    },\n\n    // ........................................................................ misc\n    /** String representation */\n    toString : function(){\n        var nameAndId = this.get( 'id' ) || '';\n        if( this.get( 'name' ) ){\n            nameAndId = '\"' + this.get( 'name' ) + '\",' + nameAndId;\n        }\n        return 'Dataset(' + nameAndId + ')';\n    }\n}));\n\n\n//==============================================================================\n/** @class Backbone collection for dataset associations.\n */\nvar DatasetAssociationCollection = Backbone.Collection.extend( BASE_MVC.LoggableMixin ).extend(\n/** @lends HistoryContents.prototype */{\n    _logNamespace : logNamespace,\n\n    model : DatasetAssociation,\n\n    /** root api url */\n    urlRoot : (( window.galaxy_config && galaxy_config.root )?( galaxy_config.root ):( '/' ))\n        + 'api/datasets',\n\n    /** url fn */\n    url : function(){\n        return this.urlRoot\n    },\n\n    // ........................................................................ common queries\n    /** Get the ids of every item in this collection\n     *  @returns array of encoded ids\n     */\n    ids : function(){\n        return this.map( function( item ){ return item.get('id'); });\n    },\n\n    /** Get contents that are not ready\n     *  @returns array of content models\n     */\n    notReady : function(){\n        return this.filter( function( content ){\n            return !content.inReadyState();\n        });\n    },\n\n    /** return true if any datasets don't have details */\n    haveDetails : function(){\n        return this.all( function( dataset ){ return dataset.hasDetails(); });\n    },\n\n    // ........................................................................ ajax\n    /** using a queue, perform ajaxFn on each of the models in this collection */\n    ajaxQueue : function( ajaxFn, options ){\n        var deferred = jQuery.Deferred(),\n            startingLength = this.length,\n            responses = [];\n\n        if( !startingLength ){\n            deferred.resolve([]);\n            return deferred;\n        }\n\n        // use reverse order (stylistic choice)\n        var ajaxFns = this.chain().reverse().map( function( dataset, i ){\n            return function(){\n                var xhr = ajaxFn.call( dataset, options );\n                // if successful, notify using the deferred to allow tracking progress\n                xhr.done( function( response ){\n                    deferred.notify({ curr: i, total: startingLength, response: response, model: dataset });\n                });\n                // (regardless of previous error or success) if not last ajax call, shift and call the next\n                //  if last fn, resolve deferred\n                xhr.always( function( response ){\n                    responses.push( response );\n                    if( ajaxFns.length ){\n                        ajaxFns.shift()();\n                    } else {\n                        deferred.resolve( responses );\n                    }\n                });\n            };\n        }).value();\n        // start the queue\n        ajaxFns.shift()();\n\n        return deferred;\n    },\n\n    // ........................................................................ sorting/filtering\n    /** return a new collection of datasets whose attributes contain the substring matchesWhat */\n    matches : function( matchesWhat ){\n        return this.filter( function( dataset ){\n            return dataset.matches( matchesWhat );\n        });\n    },\n\n    // ........................................................................ misc\n    ///** Convert this ad-hoc collection of hdas to a formal collection tracked\n    //    by the server.\n    //**/\n    //promoteToHistoryDatasetCollection : function _promote( history, collection_type, options ){\n    //},\n\n    /** String representation. */\n    toString : function(){\n         return ([ 'DatasetAssociationCollection(', this.length, ')' ].join( '' ));\n    }\n});\n\n\n//==============================================================================\n    return {\n        DatasetAssociation              : DatasetAssociation,\n        DatasetAssociationCollection    : DatasetAssociationCollection\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/dataset/dataset-model.js\n ** module id = 45\n ** module chunks = 2\n **/","define([\n    \"mvc/dataset/dataset-li\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( DATASET_LI, BASE_MVC, _l ){\n/* global Backbone */\n//==============================================================================\nvar _super = DATASET_LI.DatasetListItemView;\n/** @class Read only view for HistoryDatasetAssociation.\n *      Since there are no controls on the HDAView to hide the dataset,\n *      the primary thing this class does (currently) is override templates\n *      to render the HID.\n */\nvar HDAListItemView = _super.extend(\n/** @lends HDAListItemView.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    className   : _super.prototype.className + \" history-content\",\n\n    initialize : function( attributes, options ){\n        _super.prototype.initialize.call( this, attributes, options );\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'HDAListItemView(' + modelString + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemView.prototype.templates = (function(){\n//TODO: move to require text! plugin\n\n    var titleBarTemplate = BASE_MVC.wrapTemplate([\n        // adding the hid display to the title\n        '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n                //TODO: remove whitespace and use margin-right\n                '<span class=\"hid\"><%- dataset.hid %></span> ',\n                '<span class=\"name\"><%- dataset.name %></span>',\n            '</div>',\n        '</div>'\n    ], 'dataset' );\n\n    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n        hidden : BASE_MVC.wrapTemplate([\n            // add a warning when hidden\n            '<% if( !dataset.visible ){ %>',\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                    _l( 'This dataset has been hidden' ),\n                '</div>',\n            '<% } %>'\n        ], 'dataset' )\n    });\n\n    return _.extend( {}, _super.prototype.templates, {\n        titleBar : titleBarTemplate,\n        warnings : warnings\n    });\n}());\n\n\n\n//==============================================================================\n    return {\n        HDAListItemView  : HDAListItemView\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/hda-li.js\n ** module id = 46\n ** module chunks = 2\n **/","define([\n    \"mvc/dataset/dataset-model\",\n    \"mvc/history/history-content-model\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( DATASET, HISTORY_CONTENT, BASE_MVC, _l ){\n//==============================================================================\nvar _super = DATASET.DatasetAssociation,\n    hcontentMixin = HISTORY_CONTENT.HistoryContentMixin;\n/** @class (HDA) model for a Galaxy dataset contained in and related to a history.\n */\nvar HistoryDatasetAssociation = _super.extend( BASE_MVC.mixin( hcontentMixin,\n/** @lends HistoryDatasetAssociation.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    // because all objects have constructors (as this hashmap would even if this next line wasn't present)\n    //  the constructor in hcontentMixin won't be attached by BASE_MVC.mixin to this model\n    //  - re-apply manually it now\n    /** call the mixin constructor */\n    constructor : function( attrs, options ){\n        hcontentMixin.constructor.call( this, attrs, options );\n    },\n    \n    /** default attributes for a model */\n    defaults : _.extend( {}, _super.prototype.defaults, hcontentMixin.defaults, {\n        model_class         : 'HistoryDatasetAssociation'\n    }),\n\n    /** Set up the model, determine if accessible, bind listeners\n     */\n    initialize : function( attributes, options ){\n        _super.prototype.initialize.call( this, attributes, options );\n        hcontentMixin.initialize.call( this, attributes, options );\n    },\n\n    // ........................................................................ misc\n    /** String representation */\n    toString : function(){\n        var nameAndId = this.get( 'id' ) || '';\n        if( this.get( 'name' ) ){\n            nameAndId = this.get( 'hid' ) + ' :\"' + this.get( 'name' ) + '\",' + nameAndId;\n        }\n        return 'HDA(' + nameAndId + ')';\n    }\n}));\n\n//==============================================================================\n    return {\n        HistoryDatasetAssociation   : HistoryDatasetAssociation\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/hda-model.js\n ** module id = 47\n ** module chunks = 2\n **/","define([\n    \"mvc/dataset/states\",\n    \"mvc/collection/collection-li\",\n    \"mvc/collection/collection-panel\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( STATES, DC_LI, DC_PANEL, BASE_MVC, _l ){\n/* global Backbone */\n//==============================================================================\nvar _super = DC_LI.DCListItemView;\n/** @class Read only view for HistoryDatasetCollectionAssociation (a dataset collection inside a history).\n */\nvar HDCAListItemView = _super.extend(\n/** @lends HDCAListItemView.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    className   : _super.prototype.className + \" history-content\",\n\n    /** event listeners */\n    _setUpListeners : function(){\n        _super.prototype._setUpListeners.call( this );\n\n        this.model.on({\n            'change:populated change:visible' : function( model, options ){ this.render(); },\n        }, this );\n    },\n\n    /** Override to provide the proper collections panels as the foldout */\n    _getFoldoutPanelClass : function(){\n        switch( this.model.get( 'collection_type' ) ){\n            case 'list':\n                return DC_PANEL.ListCollectionPanel;\n            case 'paired':\n                return DC_PANEL.PairCollectionPanel;\n            case 'list:paired':\n                return DC_PANEL.ListOfPairsCollectionPanel;\n        }\n        throw new TypeError( 'Uknown collection_type: ' + this.model.get( 'collection_type' ) );\n    },\n\n    /** In this override, add the state as a class for use with state-based CSS */\n    _swapNewRender : function( $newRender ){\n        _super.prototype._swapNewRender.call( this, $newRender );\n//TODO: model currently has no state\n        var state = !this.model.get( 'populated' ) ? STATES.RUNNING : STATES.OK;\n        //if( this.model.has( 'state' ) ){\n        this.$el.addClass( 'state-' + state );\n        //}\n        return this.$el;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'HDCAListItemView(' + modelString + ')';\n    }\n});\n\n/** underscore templates */\nHDCAListItemView.prototype.templates = (function(){\n\n    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n        hidden : BASE_MVC.wrapTemplate([\n            // add a warning when hidden\n            '<% if( !collection.visible ){ %>',\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                    _l( 'This collection has been hidden' ),\n                '</div>',\n            '<% } %>'\n        ], 'collection' )\n    });\n\n// could steal this from hda-base (or use mixed content)\n    var titleBarTemplate = BASE_MVC.wrapTemplate([\n        // adding the hid display to the title\n        '<div class=\"title-bar clear\" tabindex=\"0\">',\n            '<span class=\"state-icon\"></span>',\n            '<div class=\"title\">',\n                //TODO: remove whitespace and use margin-right\n                '<span class=\"hid\"><%- collection.hid %></span> ',\n                '<span class=\"name\"><%- collection.name %></span>',\n            '</div>',\n            '<div class=\"subtitle\"></div>',\n        '</div>'\n    ], 'collection' );\n\n    return _.extend( {}, _super.prototype.templates, {\n        warnings : warnings,\n        titleBar : titleBarTemplate\n    });\n}());\n\n\n//==============================================================================\n    return {\n        HDCAListItemView : HDCAListItemView\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/hdca-li.js\n ** module id = 48\n ** module chunks = 2\n **/","\ndefine([\n    \"mvc/history/history-contents\",\n    \"utils/utils\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( HISTORY_CONTENTS, UTILS, BASE_MVC, _l ){\n\nvar logNamespace = 'history';\n//==============================================================================\n/** @class Model for a Galaxy history resource - both a record of user\n *      tool use and a collection of the datasets those tools produced.\n *  @name History\n *  @augments Backbone.Model\n */\nvar History = Backbone.Model\n        .extend( BASE_MVC.LoggableMixin )\n        .extend( BASE_MVC.mixin( BASE_MVC.SearchableModelMixin, /** @lends History.prototype */{\n    _logNamespace : logNamespace,\n\n    // values from api (may need more)\n    defaults : {\n        model_class     : 'History',\n        id              : null,\n        name            : 'Unnamed History',\n        state           : 'new',\n\n        diskSize        : 0,\n        deleted         : false\n    },\n\n    // ........................................................................ urls\n    urlRoot: galaxy_config.root + 'api/histories',\n\n    // ........................................................................ set up/tear down\n    /** Set up the model\n     *  @param {Object} historyJSON model data for this History\n     *  @param {Object[]} contentsJSON   array of model data for this History's contents (hdas or collections)\n     *  @param {Object} options     any extra settings including logger\n     */\n    initialize : function( historyJSON, contentsJSON, options ){\n        options = options || {};\n        this.logger = options.logger || null;\n        this.log( this + \".initialize:\", historyJSON, contentsJSON, options );\n\n        /** HistoryContents collection of the HDAs contained in this history. */\n        this.log( 'creating history contents:', contentsJSON );\n        this.contents = new HISTORY_CONTENTS.HistoryContents( contentsJSON || [], { historyId: this.get( 'id' )});\n        //// if we've got hdas passed in the constructor, load them\n        //if( contentsJSON && _.isArray( contentsJSON ) ){\n        //    this.log( 'resetting history contents:', contentsJSON );\n        //    this.contents.reset( contentsJSON );\n        //}\n\n        this._setUpListeners();\n\n        /** cached timeout id for the dataset updater */\n        this.updateTimeoutId = null;\n        // set up update timeout if needed\n        //this.checkForUpdates();\n    },\n\n    /** set up any event listeners for this history including those to the contained HDAs\n     *  events: error:contents  if an error occurred with the contents collection\n     */\n    _setUpListeners : function(){\n        this.on( 'error', function( model, xhr, options, msg, details ){\n            this.errorHandler( model, xhr, options, msg, details );\n        });\n\n        // hda collection listening\n        if( this.contents ){\n            this.listenTo( this.contents, 'error', function(){\n                this.trigger.apply( this, [ 'error:contents' ].concat( jQuery.makeArray( arguments ) ) );\n            });\n        }\n        // if the model's id changes ('current' or null -> an actual id), update the contents history_id\n        this.on( 'change:id', function( model, newId ){\n            if( this.contents ){\n                this.contents.historyId = newId;\n            }\n        }, this );\n    },\n\n    //TODO: see base-mvc\n    //onFree : function(){\n    //    if( this.contents ){\n    //        this.contents.free();\n    //    }\n    //},\n\n    /** event listener for errors. Generally errors are handled outside this model */\n    errorHandler : function( model, xhr, options, msg, details ){\n        // clear update timeout on model err\n        this.clearUpdateTimeout();\n    },\n\n    /** convert size in bytes to a more human readable version */\n    nice_size : function(){\n        return UTILS.bytesToString( this.get( 'size' ), true, 2 );\n    },\n\n    /** override to add nice_size */\n    toJSON : function(){\n        return _.extend( Backbone.Model.prototype.toJSON.call( this ), {\n            nice_size : this.nice_size()\n        });\n    },\n\n    /** override to allow getting nice_size */\n    get : function( key ){\n        if( key === 'nice_size' ){\n            return this.nice_size();\n        }\n        return Backbone.Model.prototype.get.apply( this, arguments );\n    },\n\n    // ........................................................................ common queries\n    /** T/F is this history owned by the current user (Galaxy.currUser)\n     *      Note: that this will return false for an anon user even if the history is theirs.\n     */\n    ownedByCurrUser : function(){\n        // no currUser\n        if( !Galaxy || !Galaxy.currUser ){\n            return false;\n        }\n        // user is anon or history isn't owned\n        if( Galaxy.currUser.isAnonymous() || Galaxy.currUser.id !== this.get( 'user_id' ) ){\n            return false;\n        }\n        return true;\n    },\n\n    /**  */\n    contentsCount : function(){\n        return _.reduce( _.values( this.get( 'state_details' ) ), function( memo, num ){ return memo + num; }, 0 );\n    },\n\n    // ........................................................................ search\n    /** What model fields to search with */\n    searchAttributes : [\n        'name', 'annotation', 'tags'\n    ],\n\n    /** Adding title and singular tag */\n    searchAliases : {\n        title       : 'name',\n        tag         : 'tags'\n    },\n\n    // ........................................................................ updates\n    /** does the contents collection indicate they're still running and need to be updated later?\n     *      delay + update if needed\n     *  @param {Function} onReadyCallback   function to run when all contents are in the ready state\n     *  events: ready\n     */\n    checkForUpdates : function( onReadyCallback ){\n        //this.info( 'checkForUpdates' )\n\n        // get overall History state from collection, run updater if History has running/queued contents\n        //  boiling it down on the client to running/not\n        if( this.contents.running().length ){\n            this.setUpdateTimeout();\n\n        } else {\n            this.trigger( 'ready' );\n            if( _.isFunction( onReadyCallback ) ){\n                onReadyCallback.call( this );\n            }\n        }\n        return this;\n    },\n\n    /** create a timeout (after UPDATE_DELAY or delay ms) to refetch the contents. Clear any prev. timeout */\n    setUpdateTimeout : function( delay ){\n        delay = delay || History.UPDATE_DELAY;\n        var history = this;\n\n        // prevent buildup of updater timeouts by clearing previous if any, then set new and cache id\n        this.clearUpdateTimeout();\n        this.updateTimeoutId = setTimeout( function(){\n            history.refresh();\n        }, delay );\n        return this.updateTimeoutId;\n    },\n\n    /** clear the timeout and the cached timeout id */\n    clearUpdateTimeout : function(){\n        if( this.updateTimeoutId ){\n            clearTimeout( this.updateTimeoutId );\n            this.updateTimeoutId = null;\n        }\n    },\n\n    /* update the contents, getting full detailed model data for any whose id is in detailIds\n     *  set up to run this again in some interval of time\n     *  @param {String[]} detailIds list of content ids to get detailed model data for\n     *  @param {Object} options     std. backbone fetch options map\n     */\n    refresh : function( detailIds, options ){\n        //this.info( 'refresh:', detailIds, this.contents );\n        detailIds = detailIds || [];\n        options = options || {};\n        var history = this;\n\n        // add detailIds to options as CSV string\n        options.data = options.data || {};\n        if( detailIds.length ){\n            options.data.details = detailIds.join( ',' );\n        }\n        var xhr = this.contents.fetch( options );\n        xhr.done( function( models ){\n            history.checkForUpdates( function(){\n                // fetch the history inside onReadyCallback in order to recalc history size\n                this.fetch();\n            });\n        });\n        return xhr;\n    },\n\n    // ........................................................................ ajax\n    /** save this history, _Mark_ing it as deleted (just a flag) */\n    _delete : function( options ){\n        if( this.get( 'deleted' ) ){ return jQuery.when(); }\n        return this.save( { deleted: true }, options );\n    },\n    /** purge this history, _Mark_ing it as purged and removing all dataset data from the server */\n    purge : function( options ){\n        if( this.get( 'purged' ) ){ return jQuery.when(); }\n        return this.save( { deleted: true, purged: true }, options );\n    },\n    /** save this history, _Mark_ing it as undeleted */\n    undelete : function( options ){\n        if( !this.get( 'deleted' ) ){ return jQuery.when(); }\n        return this.save( { deleted: false }, options );\n    },\n\n    /** Make a copy of this history on the server\n     *  @param {Boolean} current    if true, set the copy as the new current history (default: true)\n     *  @param {String} name        name of new history (default: none - server sets to: Copy of <current name>)\n     *  @fires copied               passed this history and the response JSON from the copy\n     *  @returns {xhr}\n     */\n    copy : function( current, name, allDatasets ){\n        current = ( current !== undefined )?( current ):( true );\n        if( !this.id ){\n            throw new Error( 'You must set the history ID before copying it.' );\n        }\n\n        var postData = { history_id  : this.id };\n        if( current ){\n            postData.current = true;\n        }\n        if( name ){\n            postData.name = name;\n        }\n        if( !allDatasets ){\n            postData.all_datasets = false;\n        }\n\n        var history = this,\n            copy = jQuery.post( this.urlRoot, postData );\n        // if current - queue to setAsCurrent before firing 'copied'\n        if( current ){\n            return copy.then( function( response ){\n                var newHistory = new History( response );\n                return newHistory.setAsCurrent()\n                    .done( function(){\n                        history.trigger( 'copied', history, response );\n                    });\n            });\n        }\n        return copy.done( function( response ){\n            history.trigger( 'copied', history, response );\n        });\n    },\n\n    setAsCurrent : function(){\n        var history = this,\n            xhr = jQuery.getJSON( galaxy_config.root + 'history/set_as_current?id=' + this.id );\n\n        xhr.done( function(){\n            history.trigger( 'set-as-current', history );\n        });\n        return xhr;\n    },\n\n    // ........................................................................ misc\n    toString : function(){\n        return 'History(' + this.get( 'id' ) + ',' + this.get( 'name' ) + ')';\n    }\n}));\n\n//------------------------------------------------------------------------------ CLASS VARS\n/** When the history has running hdas,\n *  this is the amount of time between update checks from the server\n */\nHistory.UPDATE_DELAY = 4000;\n\n/** Get data for a history then its hdas using a sequential ajax call, return a deferred to receive both */\nHistory.getHistoryData = function getHistoryData( historyId, options ){\n    options = options || {};\n    var detailIdsFn = options.detailIdsFn || [];\n    var hdcaDetailIds = options.hdcaDetailIds || [];\n    //console.debug( 'getHistoryData:', historyId, options );\n\n    var df = jQuery.Deferred(),\n        historyJSON = null;\n\n    function getHistory( id ){\n        // get the history data\n        if( historyId === 'current' ){\n            return jQuery.getJSON( galaxy_config.root + 'history/current_history_json' );\n        }\n        return jQuery.ajax( galaxy_config.root + 'api/histories/' + historyId );\n    }\n    function isEmpty( historyData ){\n        // get the number of hdas accrd. to the history\n        return historyData && historyData.empty;\n    }\n    function getContents( historyData ){\n        // get the hda data\n        // if no hdas accrd. to history: return empty immed.\n        if( isEmpty( historyData ) ){ return []; }\n        // if there are hdas accrd. to history: get those as well\n        if( _.isFunction( detailIdsFn ) ){\n            detailIdsFn = detailIdsFn( historyData );\n        }\n        if( _.isFunction( hdcaDetailIds ) ){\n            hdcaDetailIds = hdcaDetailIds( historyData );\n        }\n        var data = {};\n        if( detailIdsFn.length ) {\n            data.dataset_details = detailIdsFn.join( ',' );\n        }\n        if( hdcaDetailIds.length ) {\n            // for symmetry, not actually used by backend of consumed\n            // by frontend.\n            data.dataset_collection_details = hdcaDetailIds.join( ',' );\n        }\n        return jQuery.ajax( galaxy_config.root + 'api/histories/' + historyData.id + '/contents', { data: data });\n    }\n\n    // getting these concurrently is 400% slower (sqlite, local, vanilla) - so:\n    //  chain the api calls - getting history first then contents\n\n    var historyFn = options.historyFn || getHistory,\n        contentsFn = options.contentsFn || getContents;\n\n    // chain ajax calls: get history first, then hdas\n    var historyXHR = historyFn( historyId );\n    historyXHR.done( function( json ){\n        // set outer scope var here for use below\n        historyJSON = json;\n        df.notify({ status: 'history data retrieved', historyJSON: historyJSON });\n    });\n    historyXHR.fail( function( xhr, status, message ){\n        // call reject on the outer deferred to allow its fail callback to run\n        df.reject( xhr, 'loading the history' );\n    });\n\n    var contentsXHR = historyXHR.then( contentsFn );\n    contentsXHR.then( function( contentsJSON ){\n        df.notify({ status: 'contents data retrieved', historyJSON: historyJSON, contentsJSON: contentsJSON });\n        // we've got both: resolve the outer scope deferred\n        df.resolve( historyJSON, contentsJSON );\n    });\n    contentsXHR.fail( function( xhr, status, message ){\n        // call reject on the outer deferred to allow its fail callback to run\n        df.reject( xhr, 'loading the contents', { history: historyJSON } );\n    });\n\n    return df;\n};\n\n\n//==============================================================================\nvar ControlledFetchMixin = {\n\n    /** Override to convert certain options keys into API index parameters */\n    fetch : function( options ){\n        options = options || {};\n        options.data = options.data || this._buildFetchData( options );\n        // use repeated params for arrays, e.g. q=1&qv=1&q=2&qv=2\n        options.traditional = true;\n        return Backbone.Collection.prototype.fetch.call( this, options );\n    },\n\n    /** These attribute keys are valid params to fetch/API-index */\n    _fetchOptions : [\n        /** model dependent string to control the order of models returned */\n        'order',\n        /** limit the number of models returned from a fetch */\n        'limit',\n        /** skip this number of models when fetching */\n        'offset',\n        /** what series of attributes to return (model dependent) */\n        'view',\n        /** individual keys to return for the models (see api/histories.index) */\n        'keys'\n    ],\n\n    /** Build the data dictionary to send to fetch's XHR as data */\n    _buildFetchData : function( options ){\n        var data = {},\n            fetchDefaults = this._fetchDefaults();\n        options = _.defaults( options || {}, fetchDefaults );\n        data = _.pick( options, this._fetchOptions );\n\n        var filters = _.has( options, 'filters' )? options.filters : ( fetchDefaults.filters || {} );\n        if( !_.isEmpty( filters ) ){\n            _.extend( data, this._buildFetchFilters( filters ) );\n        }\n        return data;\n    },\n\n    /** Override to have defaults for fetch options and filters */\n    _fetchDefaults : function(){\n        // to be overridden\n        return {};\n    },\n\n    /** Convert dictionary filters to qqv style arrays */\n    _buildFetchFilters : function( filters ){\n        var filterMap = {\n            q  : [],\n            qv : []\n        };\n        _.each( filters, function( v, k ){\n            if( v === true ){ v = 'True'; }\n            if( v === false ){ v = 'False'; }\n            filterMap.q.push( k );\n            filterMap.qv.push( v );\n        });\n        return filterMap;\n    },\n};\n\n//==============================================================================\n/** @class A collection of histories (per user).\n *      (stub) currently unused.\n */\nvar HistoryCollection = Backbone.Collection\n        .extend( BASE_MVC.LoggableMixin )\n        .extend( ControlledFetchMixin )\n        .extend(/** @lends HistoryCollection.prototype */{\n    _logNamespace : logNamespace,\n\n    model   : History,\n\n    /** @type {String} the default sortOrders key for sorting */\n    DEFAULT_ORDER : 'update_time',\n\n    /** @type {Object} map of collection sorting orders generally containing a getter to return the attribute\n     *      sorted by and asc T/F if it is an ascending sort.\n     */\n    sortOrders : {\n        'update_time' : {\n            getter : function( h ){ return new Date( h.get( 'update_time' ) ); },\n            asc : false\n        },\n        'update_time-asc' : {\n            getter : function( h ){ return new Date( h.get( 'update_time' ) ); },\n            asc : true\n        },\n        'name' : {\n            getter : function( h ){ return h.get( 'name' ); },\n            asc : true\n        },\n        'name-dsc' : {\n            getter : function( h ){ return h.get( 'name' ); },\n            asc : false\n        },\n        'size' : {\n            getter : function( h ){ return h.get( 'size' ); },\n            asc : false\n        },\n        'size-asc' : {\n            getter : function( h ){ return h.get( 'size' ); },\n            asc : true\n        }\n    },\n\n    initialize : function( models, options ){\n        options = options || {};\n        this.log( 'HistoryCollection.initialize', arguments );\n\n        // instance vars\n        /** @type {boolean} should deleted histories be included */\n        this.includeDeleted = options.includeDeleted || false;\n        // set the sort order\n        this.setOrder( options.order || this.DEFAULT_ORDER );\n        /** @type {String} encoded id of the history that's current */\n        this.currentHistoryId = options.currentHistoryId;\n        /** @type {boolean} have all histories been fetched and in the collection? */\n        this.allFetched = options.allFetched || false;\n\n        // this.on( 'all', function(){\n        //    console.info( 'event:', arguments );\n        // });\n        this.setUpListeners();\n    },\n\n    urlRoot : ( window.galaxy_config? galaxy_config.root : '/' ) + 'api/histories',\n    url     : function(){ return this.urlRoot; },\n\n    /** returns map of default filters and settings for fetching from the API */\n    _fetchDefaults : function(){\n        // to be overridden\n        var defaults = {\n            order   : this.order,\n            view    : 'detailed'\n        };\n        if( !this.includeDeleted ){\n            defaults.filters = {\n                deleted : false,\n                purged  : false,\n            };\n        }\n        return defaults;\n    },\n\n    /** set up reflexive event handlers */\n    setUpListeners : function setUpListeners(){\n        this.on({\n            // when a history is deleted, remove it from the collection (if optionally set to do so)\n            'change:deleted' : function( history ){\n                // TODO: this becomes complicated when more filters are used\n                this.debug( 'change:deleted', this.includeDeleted, history.get( 'deleted' ) );\n                if( !this.includeDeleted && history.get( 'deleted' ) ){\n                    this.remove( history );\n                }\n            },\n            // listen for a history copy, setting it to current\n            'copied' : function( original, newData ){\n                this.setCurrent( new History( newData, [] ) );\n            },\n            // when a history is made current, track the id in the collection\n            'set-as-current' : function( history ){\n                var oldCurrentId = this.currentHistoryId;\n                this.trigger( 'no-longer-current', oldCurrentId );\n                this.currentHistoryId = history.id;\n            }\n        }, this );\n    },\n\n    /** override to allow passing options.order and setting the sort order to one of sortOrders */\n    sort : function( options ){\n        options = options || {};\n        this.setOrder( options.order );\n        return Backbone.Collection.prototype.sort.call( this, options );\n    },\n\n    /** build the comparator used to sort this collection using the sortOrder map and the given order key\n     *  @event 'changed-order' passed the new order and the collection\n     */\n    setOrder : function( order ){\n        var collection = this,\n            sortOrder = this.sortOrders[ order ];\n        if( _.isUndefined( sortOrder ) ){ return; }\n\n        collection.order = order;\n        collection.comparator = function comparator( a, b ){\n            var currentHistoryId = collection.currentHistoryId;\n            // current always first\n            if( a.id === currentHistoryId ){ return -1; }\n            if( b.id === currentHistoryId ){ return 1; }\n            // then compare by an attribute\n            a = sortOrder.getter( a );\n            b = sortOrder.getter( b );\n            return sortOrder.asc?\n                ( ( a === b )?( 0 ):( a > b ?  1 : -1 ) ):\n                ( ( a === b )?( 0 ):( a > b ? -1 :  1 ) );\n        };\n        collection.trigger( 'changed-order', collection.order, collection );\n        return collection;\n    },\n\n    /** override to provide order and offsets based on instance vars, set limit if passed,\n     *  and set allFetched/fire 'all-fetched' when xhr returns\n     */\n    fetch : function( options ){\n        options = options || {};\n        if( this.allFetched ){ return jQuery.when({}); }\n        var collection = this,\n            fetchOptions = _.defaults( options, {\n                remove : false,\n                offset : collection.length >= 1? ( collection.length - 1 ) : 0,\n                order  : collection.order\n            }),\n            limit = options.limit;\n        if( !_.isUndefined( limit ) ){\n            fetchOptions.limit = limit;\n        }\n\n        return ControlledFetchMixin.fetch.call( this, fetchOptions )\n            .done( function _postFetchMore( fetchData ){\n                var numFetched = _.isArray( fetchData )? fetchData.length : 0;\n                // anything less than a full page means we got all there is to get\n                if( !limit || numFetched < limit ){\n                    collection.allFetched = true;\n                    collection.trigger( 'all-fetched', collection );\n                }\n            }\n        );\n    },\n\n    /** create a new history and by default set it to be the current history */\n    create : function create( data, hdas, historyOptions, xhrOptions ){\n        //TODO: .create is actually a collection function that's overridden here\n        var collection = this,\n            xhr = jQuery.getJSON( galaxy_config.root + 'history/create_new_current'  );\n        return xhr.done( function( newData ){\n            collection.setCurrent( new History( newData, [], historyOptions || {} ) );\n        });\n    },\n\n    /** set the current history to the given history, placing it first in the collection.\n     *  Pass standard bbone options for use in unshift.\n     *  @triggers new-current passed history and this collection\n     */\n    setCurrent : function( history, options ){\n        options = options || {};\n        // new histories go in the front\n        this.unshift( history, options );\n        this.currentHistoryId = history.get( 'id' );\n        if( !options.silent ){\n            this.trigger( 'new-current', history, this );\n        }\n        return this;\n    },\n\n    /** override to reset allFetched flag to false */\n    reset : function( models, options ){\n        this.allFetched = false;\n        return Backbone.Collection.prototype.reset.call( this, models, options );\n    },\n\n    toString: function toString(){\n        return 'HistoryCollection(' + this.length + ')';\n    }\n});\n\n//==============================================================================\nreturn {\n    History           : History,\n    HistoryCollection : HistoryCollection\n};});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/history-model.js\n ** module id = 49\n ** module chunks = 2\n **/","define([\n    \"mvc/list/list-item\",\n    \"ui/loading-indicator\",\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"ui/search-input\"\n], function( LIST_ITEM, LoadingIndicator, BASE_MVC, _l ){\n\nvar logNamespace = 'list';\n/* ============================================================================\nTODO:\n\n============================================================================ */\n/** @class View for a list/collection of models and the sub-views of those models.\n *      Sub-views must (at least have the interface if not) inherit from ListItemView.\n *      (For a list panel that also includes some 'container' model (History->HistoryContents)\n *      use ModelWithListPanel)\n *\n *  Allows for:\n *      searching collection/sub-views\n *      selecting/multi-selecting sub-views\n *\n *  Currently used:\n *      for dataset/dataset-choice\n *      as superclass of ModelListPanel\n */\nvar ListPanel = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend(/** @lends ReadOnlyHistoryPanel.prototype */{\n    _logNamespace : logNamespace,\n\n    /** class to use for constructing the sub-views */\n    viewClass           : LIST_ITEM.ListItemView,\n    /** class to used for constructing collection of sub-view models */\n    collectionClass     : Backbone.Collection,\n\n    tagName             : 'div',\n    className           : 'list-panel',\n\n    /** (in ms) that jquery effects will use */\n    fxSpeed             : 'fast',\n\n    /** string to display when the collection has no contents */\n    emptyMsg            : _l( 'This list is empty' ),\n    /** displayed when no items match the search terms */\n    noneFoundMsg        : _l( 'No matching items found' ),\n    /** string used for search placeholder */\n    searchPlaceholder   : _l( 'search' ),\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the list\n     */\n    initialize : function( attributes, options ){\n        attributes = attributes || {};\n        // set the logger if requested\n        if( attributes.logger ){\n            this.logger = attributes.logger;\n        }\n        this.log( this + '.initialize:', attributes );\n\n        // ---- instance vars\n        /** how quickly should jquery fx run? */\n        this.fxSpeed = _.has( attributes, 'fxSpeed' )?( attributes.fxSpeed ):( this.fxSpeed );\n\n        /** filters for displaying subviews */\n        this.filters = [];\n        /** current search terms */\n        this.searchFor = attributes.searchFor || '';\n\n        /** loading indicator */\n        this.indicator = new LoadingIndicator( this.$el );\n\n        /** currently showing selectors on items? */\n        this.selecting = ( attributes.selecting !== undefined )? attributes.selecting : true;\n        //this.selecting = false;\n\n        /** cached selected item.model.ids to persist btwn renders */\n        this.selected = attributes.selected || [];\n        /** the last selected item.model.id */\n        this.lastSelected = null;\n\n        /** are sub-views draggable */\n        this.dragItems = attributes.dragItems || false;\n\n        /** list item view class (when passed models) */\n        this.viewClass = attributes.viewClass || this.viewClass;\n\n        /** list item views */\n        this.views = [];\n        /** list item models */\n        this.collection = attributes.collection || ( new this.collectionClass([]) );\n\n        /** filter fns run over collection items to see if they should show in the list */\n        this.filters = attributes.filters || [];\n\n        /** override $scrollContainer fn via attributes - fn should return jq for elem to call scrollTo on */\n        this.$scrollContainer = attributes.$scrollContainer || this.$scrollContainer;\n\n//TODO: remove\n        this.title = attributes.title || '';\n        this.subtitle = attributes.subtitle || '';\n\n        this._setUpListeners();\n    },\n\n    /** free any sub-views the list has */\n    freeViews : function(){\n//TODO: stopListening? remove?\n        _.each( this.views, function( view ){\n            view.off();\n        });\n        this.views = [];\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ listeners\n    /** create any event listeners for the list\n     */\n    _setUpListeners : function(){\n        this.off();\n\n        //TODO: move errorHandler down into list-panel from history-panel or\n        //  pass to global error handler (Galaxy)\n        this.on( 'error', function( model, xhr, options, msg, details ){\n            //this.errorHandler( model, xhr, options, msg, details );\n            console.error( model, xhr, options, msg, details );\n        }, this );\n\n        // show hide the loading indicator\n        this.on( 'loading', function(){\n            this._showLoadingIndicator( 'loading...', 40 );\n        }, this );\n        this.on( 'loading-done', function(){\n            this._hideLoadingIndicator( 40 );\n        }, this );\n\n        // throw the first render up as a diff namespace using once (for outside consumption)\n        this.once( 'rendered', function(){\n            this.trigger( 'rendered:initial', this );\n        }, this );\n\n        // debugging\n        if( this.logger ){\n            this.on( 'all', function( event ){\n                this.log( this + '', arguments );\n            }, this );\n        }\n\n        this._setUpCollectionListeners();\n        this._setUpViewListeners();\n        return this;\n    },\n\n    /** listening for collection events */\n    _setUpCollectionListeners : function(){\n        this.log( this + '._setUpCollectionListeners', this.collection );\n        this.collection.off();\n\n        // bubble up error events\n        this.collection.on( 'error', function( model, xhr, options, msg, details ){\n            this.trigger( 'error', model, xhr, options, msg, details );\n        }, this );\n\n        this.collection.on( 'reset', function(){\n            this.renderItems();\n        }, this );\n        this.collection.on( 'add', this.addItemView, this );\n        this.collection.on( 'remove', this.removeItemView, this );\n\n        // debugging\n        if( this.logger ){\n            this.collection.on( 'all', function( event ){\n                this.info( this + '(collection)', arguments );\n            }, this );\n        }\n        return this;\n    },\n\n    /** listening for sub-view events that bubble up with the 'view:' prefix */\n    _setUpViewListeners : function(){\n        this.log( this + '._setUpViewListeners' );\n\n        // shift to select a range\n        this.on( 'view:selected', function( view, ev ){\n            if( ev && ev.shiftKey && this.lastSelected ){\n                var lastSelectedView = this.viewFromModelId( this.lastSelected );\n                if( lastSelectedView ){\n                    this.selectRange( view, lastSelectedView );\n                }\n            } else if( ev && ev.altKey && !this.selecting ){\n                this.showSelectors();\n            }\n            this.selected.push( view.model.id );\n            this.lastSelected = view.model.id;\n        }, this );\n\n        this.on( 'view:de-selected', function( view, ev ){\n            this.selected = _.without( this.selected, view.model.id );\n            //this.lastSelected = view.model.id;\n        }, this );\n    },\n\n    // ------------------------------------------------------------------------ rendering\n    /** Render this content, set up ui.\n     *  @param {Number or String} speed   the speed of the render\n     */\n    render : function( speed ){\n        this.log( this + '.render', speed );\n        var $newRender = this._buildNewRender();\n        this._setUpBehaviors( $newRender );\n        this._queueNewRender( $newRender, speed );\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     */\n    _buildNewRender : function(){\n        this.debug( this + '(ListPanel)._buildNewRender' );\n        var $newRender = $( this.templates.el( {}, this ) );\n        this._renderControls( $newRender );\n        this._renderTitle( $newRender );\n        this._renderSubtitle( $newRender );\n        this._renderSearch( $newRender );\n        this.renderItems( $newRender );\n        return $newRender;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     */\n    _renderControls : function( $newRender ){\n        this.debug( this + '(ListPanel)._renderControls' );\n        var $controls = $( this.templates.controls( {}, this ) );\n        $newRender.find( '.controls' ).replaceWith( $controls );\n        return $controls;\n    },\n\n    /**\n     */\n    _renderTitle : function( $where ){\n        //$where = $where || this.$el;\n        //$where.find( '.title' ).replaceWith( ... )\n    },\n\n    /**\n     */\n    _renderSubtitle : function( $where ){\n        //$where = $where || this.$el;\n        //$where.find( '.title' ).replaceWith( ... )\n    },\n\n    /** Fade out the old el, swap in the new contents, then fade in.\n     *  @param {Number or String} speed   jq speed to use for rendering effects\n     *  @fires rendered when rendered\n     */\n    _queueNewRender : function( $newRender, speed ) {\n        speed = ( speed === undefined )?( this.fxSpeed ):( speed );\n        var panel = this;\n        panel.log( '_queueNewRender:', $newRender, speed );\n\n        $( panel ).queue( 'fx', [\n            function( next ){ this.$el.fadeOut( speed, next ); },\n            function( next ){\n                panel._swapNewRender( $newRender );\n                next();\n            },\n            function( next ){ this.$el.fadeIn( speed, next ); },\n            function( next ){\n                panel.trigger( 'rendered', panel );\n                next();\n            }\n        ]);\n    },\n\n    /** empty out the current el, move the $newRender's children in */\n    _swapNewRender : function( $newRender ){\n        this.$el.empty().attr( 'class', this.className ).append( $newRender.children() );\n        if( this.selecting ){ this.showSelectors( 0 ); }\n        return this;\n    },\n\n    /**  */\n    _setUpBehaviors : function( $where ){\n        $where = $where || this.$el;\n        $where.find( '.controls [title]' ).tooltip({ placement: 'bottom' });\n        // set up the pupup for actions available when multi selecting\n        this._renderMultiselectActionMenu( $where );\n        return this;\n    },\n\n    /** render a menu containing the actions available to sets of selected items */\n    _renderMultiselectActionMenu : function( $where ){\n        $where = $where || this.$el;\n        var $menu = $where.find( '.list-action-menu' ),\n            actions = this.multiselectActions();\n        if( !actions.length ){\n            return $menu.empty();\n        }\n\n        var $newMenu = $([\n            '<div class=\"list-action-menu btn-group\">',\n                '<button class=\"list-action-menu-btn btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                    _l( 'For all selected' ), '...',\n                '</button>',\n                '<ul class=\"dropdown-menu pull-right\" role=\"menu\">', '</ul>',\n            '</div>'\n        ].join(''));\n        var $actions = actions.map( function( action ){\n            var html = [ '<li><a href=\"javascript:void(0);\">', action.html, '</a></li>' ].join( '' );\n            return $( html ).click( function( ev ){\n                ev.preventDefault();\n                return action.func( ev );\n            });\n        });\n        $newMenu.find( 'ul' ).append( $actions );\n        $menu.replaceWith( $newMenu );\n        return $newMenu;\n    },\n\n    /** return a list of plain objects used to render multiselect actions menu. Each object should have:\n     *      html: an html string used as the anchor contents\n     *      func: a function called when the anchor is clicked (passed the click event)\n     */\n    multiselectActions : function(){\n        return [];\n    },\n\n    // ------------------------------------------------------------------------ sub-$element shortcuts\n    /** the scroll container for this panel - can be $el, $el.parent(), or grandparent depending on context */\n    $scrollContainer : function(){\n        // override or set via attributes.$scrollContainer\n        return this.$el.parent().parent();\n    },\n    /**  */\n    $list : function( $where ){\n        return ( $where || this.$el ).find( '> .list-items' );\n    },\n    /** container where list messages are attached */\n    $messages : function( $where ){\n        return ( $where || this.$el ).find( '> .controls .messages' );\n    },\n    /** the message displayed when no views can be shown (no views, none matching search) */\n    $emptyMessage : function( $where ){\n        return ( $where || this.$el ).find( '> .empty-message' );\n    },\n\n    // ------------------------------------------------------------------------ hda sub-views\n    /**\n     *  @param {jQuery} $whereTo what dom element to prepend the sub-views to\n     *  @returns the visible item views\n     */\n    renderItems : function( $whereTo ){\n        $whereTo = $whereTo || this.$el;\n        var panel = this;\n        panel.log( this + '.renderItems', $whereTo );\n\n        var $list = panel.$list( $whereTo );\n//TODO: free prev. views?\n        panel.views = panel._filterCollection().map( function( itemModel ){\n//TODO: creates views each time - not neccessarily good\n//TODO: pass speed here\n                return panel._createItemView( itemModel ).render( 0 );\n            });\n        //panel.debug( item$els );\n        //panel.debug( newViews );\n\n        $list.empty();\n        if( panel.views.length ){\n            panel._attachItems( $whereTo );\n            panel.$emptyMessage( $whereTo ).hide();\n\n        } else {\n            panel._renderEmptyMessage( $whereTo ).show();\n        }\n        panel.trigger( 'views:ready', panel.views );\n\n        return panel.views;\n    },\n\n    /** Filter the collection to only those models that should be currently viewed */\n    _filterCollection : function(){\n        // override this\n        var panel = this;\n        return panel.collection.filter( _.bind( panel._filterItem, panel ) );\n    },\n\n    /** Should the model be viewable in the current state?\n     *     Checks against this.filters and this.searchFor\n     */\n    _filterItem : function( model ){\n        // override this\n        var panel = this;\n        return ( _.every( panel.filters.map( function( fn ){ return fn.call( model ); }) ) )\n            && ( !panel.searchFor || model.matchesAll( panel.searchFor ) );\n    },\n\n    /** Create a view for a model and set up it's listeners */\n    _createItemView : function( model ){\n        var ViewClass = this._getItemViewClass( model ),\n            options = _.extend( this._getItemViewOptions( model ), {\n                    model : model\n                }),\n            view = new ViewClass( options );\n        this._setUpItemViewListeners( view );\n        return view;\n    },\n\n    /** Get the bbone view class based on the model */\n    _getItemViewClass : function( model ){\n        // override this\n        return this.viewClass;\n    },\n\n    /** Get the options passed to the new view based on the model */\n    _getItemViewOptions : function( model ){\n        // override this\n        return {\n            //logger      : this.logger,\n            fxSpeed     : this.fxSpeed,\n            expanded    : false,\n            selectable  : this.selecting,\n            selected    : _.contains( this.selected, model.id ),\n            draggable   : this.dragItems\n        };\n    },\n\n    /** Set up listeners for new models */\n    _setUpItemViewListeners : function( view ){\n        var panel = this;\n        // send all events to the panel, re-namspaceing them with the view prefix\n        view.on( 'all', function(){\n            var args = Array.prototype.slice.call( arguments, 0 );\n            args[0] = 'view:' + args[0];\n            panel.trigger.apply( panel, args );\n        });\n\n        // drag multiple - hijack ev.setData to add all selected items\n        view.on( 'draggable:dragstart', function( ev, v ){\n            //TODO: set multiple drag data here\n            var json = {},\n                selected = this.getSelectedModels();\n            if( selected.length ){\n                json = selected.toJSON();\n            } else {\n                json = [ v.model.toJSON() ];\n            }\n            ev.dataTransfer.setData( 'text', JSON.stringify( json ) );\n            //ev.dataTransfer.setDragImage( v.el, 60, 60 );\n        }, this );\n\n        // debugging\n        //if( this.logger ){\n        //    view.on( 'all', function( event ){\n        //        this.log( this + '(view)', arguments );\n        //    }, this );\n        //}\n        return panel;\n    },\n\n    /** Attach views in this.views to the model based on $whereTo */\n    _attachItems : function( $whereTo ){\n        //ASSUMES: $list has been emptied\n        this.$list( $whereTo ).append( this.views.map( function( view ){\n            return view.$el;\n        }));\n        return this;\n    },\n\n    /** render the empty/none-found message */\n    _renderEmptyMessage : function( $whereTo ){\n        this.debug( '_renderEmptyMessage', $whereTo, this.searchFor );\n        var text = this.searchFor? this.noneFoundMsg : this.emptyMsg;\n        return this.$emptyMessage( $whereTo ).text( text );\n    },\n\n    /** collapse all item views */\n    expandAll : function(){\n        _.each( this.views, function( view ){\n            view.expand();\n        });\n    },\n\n    /** collapse all item views */\n    collapseAll : function(){\n        _.each( this.views, function( view ){\n            view.collapse();\n        });\n    },\n\n    // ------------------------------------------------------------------------ collection/views syncing\n    /** Add a view (if the model should be viewable) to the panel */\n    addItemView : function( model, collection, options ){\n        this.log( this + '.addItemView:', model );\n        var panel = this;\n        if( !panel._filterItem( model ) ){ return undefined; }\n\n        var view = panel._createItemView( model );\n        // hide the empty message if only view\n        $( view ).queue( 'fx', [\n            //TODO:? could poss. pubsub this\n            function( next ){ panel.$emptyMessage().fadeOut( panel.fxSpeed, next ); },\n            function( next ){\n                panel._attachView( view );\n                next();\n            }\n        ]);\n        return view;\n    },\n\n    /** internal fn to add view (to both panel.views and panel.$list) */\n    _attachView : function( view ){\n        var panel = this;\n        // override to control where the view is added, how/whether it's rendered\n        panel.views.push( view );\n        panel.$list().append( view.render( 0 ).$el.hide() );\n        panel.trigger( 'view:attached', view );\n        view.$el.slideDown( panel.fxSpeed, function(){\n            panel.trigger( 'view:attached:rendered' );\n        });\n    },\n\n    /** Remove a view from the panel (if found) */\n    removeItemView : function( model, collection, options ){\n        this.log( this + '.removeItemView:', model );\n        var panel = this,\n            view = panel.viewFromModel( model );\n        if( !view ){ return undefined; }\n        panel.views = _.without( panel.views, view );\n        panel.trigger( 'view:removed', view );\n\n        // potentially show the empty message if no views left\n        // use anonymous queue here - since remove can happen multiple times\n        $({}).queue( 'fx', [\n            function( next ){ view.$el.fadeOut( panel.fxSpeed, next ); },\n            function( next ){\n                view.remove();\n                panel.trigger( 'view:removed:rendered' );\n                if( !panel.views.length ){\n                    panel._renderEmptyMessage().fadeIn( panel.fxSpeed, next );\n                } else {\n                    next();\n                }\n            }\n        ]);\n        return view;\n    },\n\n    /** get views based on model.id */\n    viewFromModelId : function( id ){\n        for( var i = 0; i < this.views.length; i++ ){\n            if( this.views[i].model.id === id ){\n                return this.views[i];\n            }\n        }\n        return undefined;\n    },\n\n    /** get views based on model */\n    viewFromModel : function( model ){\n        if( !model ){ return undefined; }\n        return this.viewFromModelId( model.id );\n    },\n\n    /** get views based on model properties */\n    viewsWhereModel : function( properties ){\n        return this.views.filter( function( view ){\n            //return view.model.matches( properties );\n//TODO: replace with _.matches (underscore 1.6.0)\n            var json = view.model.toJSON();\n            for( var key in properties ){\n                if( properties.hasOwnProperty( key ) ){\n                    if( json[ key ] !== view.model.get( key ) ){\n                        return false;\n                    }\n                }\n            }\n            return true;\n        });\n    },\n\n    /** A range of views between (and including) viewA and viewB */\n    viewRange : function( viewA, viewB ){\n        if( viewA === viewB ){ return ( viewA )?( [ viewA ] ):( [] ); }\n\n        var indexA = this.views.indexOf( viewA ),\n            indexB = this.views.indexOf( viewB );\n\n        // handle not found\n        if( indexA === -1 || indexB === -1 ){\n            if( indexA === indexB ){ return []; }\n            return ( indexA === -1 )?( [ viewB ] ):( [ viewA ] );\n        }\n        // reverse if indeces are\n        //note: end inclusive\n        return ( indexA < indexB )?\n            this.views.slice( indexA, indexB + 1 ) :\n            this.views.slice( indexB, indexA + 1 );\n    },\n\n    // ------------------------------------------------------------------------ searching\n    /** render a search input for filtering datasets shown\n     *      (see SearchableMixin in base-mvc for implementation of the actual searching)\n     *      return will start the search\n     *      esc will clear the search\n     *      clicking the clear button will clear the search\n     *      uses searchInput in ui.js\n     */\n    _renderSearch : function( $where ){\n        $where.find( '.controls .search-input' ).searchInput({\n            placeholder     : this.searchPlaceholder,\n            initialVal      : this.searchFor,\n            onfirstsearch   : _.bind( this._firstSearch, this ),\n            onsearch        : _.bind( this.searchItems, this ),\n            onclear         : _.bind( this.clearSearch, this )\n        });\n        return $where;\n    },\n\n    /** What to do on the first search entered */\n    _firstSearch : function( searchFor ){\n        // override to load model details if necc.\n        this.log( 'onFirstSearch', searchFor );\n        return this.searchItems( searchFor );\n    },\n\n    /** filter view list to those that contain the searchFor terms */\n    searchItems : function( searchFor ){\n        this.searchFor = searchFor;\n        this.trigger( 'search:searching', searchFor, this );\n        this.renderItems();\n        this.$( '> .controls .search-query' ).val( searchFor );\n        return this;\n    },\n\n    /** clear the search filters and show all views that are normally shown */\n    clearSearch : function( searchFor ){\n        //this.log( 'onSearchClear', this );\n        this.searchFor = '';\n        this.trigger( 'search:clear', this );\n        this.$( '> .controls .search-query' ).val( '' );\n        this.renderItems();\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ selection\n    /** show selectors on all visible itemViews and associated controls */\n    showSelectors : function( speed ){\n        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n        this.selecting = true;\n        this.$( '.list-actions' ).slideDown( speed );\n        _.each( this.views, function( view ){\n            view.showSelector( speed );\n        });\n        //this.selected = [];\n        //this.lastSelected = null;\n    },\n\n    /** hide selectors on all visible itemViews and associated controls */\n    hideSelectors : function( speed ){\n        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n        this.selecting = false;\n        this.$( '.list-actions' ).slideUp( speed );\n        _.each( this.views, function( view ){\n            view.hideSelector( speed );\n        });\n        this.selected = [];\n        this.lastSelected = null;\n    },\n\n    /** show or hide selectors on all visible itemViews and associated controls */\n    toggleSelectors : function(){\n        if( !this.selecting ){\n            this.showSelectors();\n        } else {\n            this.hideSelectors();\n        }\n    },\n\n    /** select all visible items */\n    selectAll : function( event ){\n        _.each( this.views, function( view ){\n            view.select( event );\n        });\n    },\n\n    /** deselect all visible items */\n    deselectAll : function( event ){\n        this.lastSelected = null;\n        _.each( this.views, function( view ){\n            view.deselect( event );\n        });\n    },\n\n    /** select a range of datasets between A and B */\n    selectRange : function( viewA, viewB ){\n        var range = this.viewRange( viewA, viewB );\n        _.each( range, function( view ){\n            view.select();\n        });\n        return range;\n    },\n\n    /** return an array of all currently selected itemViews */\n    getSelectedViews : function(){\n        return _.filter( this.views, function( v ){\n            return v.selected;\n        });\n    },\n\n    /** return a collection of the models of all currenly selected items */\n    getSelectedModels : function(){\n        return new this.collection.constructor( _.map( this.getSelectedViews(), function( view ){\n            return view.model;\n        }));\n    },\n\n    // ------------------------------------------------------------------------ loading indicator\n//TODO: questionable\n    /** hide the $el and display a loading indicator (in the $el's parent) when loading new data */\n    _showLoadingIndicator : function( msg, speed, callback ){\n        this.debug( '_showLoadingIndicator', this.indicator, msg, speed, callback );\n        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n        if( !this.indicator ){\n            this.indicator = new LoadingIndicator( this.$el, this.$el.parent() );\n            this.debug( '\\t created', this.indicator );\n        }\n        if( !this.$el.is( ':visible' ) ){\n            this.indicator.show( 0, callback );\n        } else {\n            this.$el.fadeOut( speed );\n            this.indicator.show( msg, speed, callback );\n        }\n    },\n\n    /** hide the loading indicator */\n    _hideLoadingIndicator : function( speed, callback ){\n        this.debug( '_hideLoadingIndicator', this.indicator, speed, callback );\n        speed = ( speed !== undefined )?( speed ):( this.fxSpeed );\n        if( this.indicator ){\n            this.indicator.hide( speed, callback );\n        }\n    },\n\n    // ------------------------------------------------------------------------ scrolling\n    /** get the current scroll position of the panel in its parent */\n    scrollPosition : function(){\n        return this.$scrollContainer().scrollTop();\n    },\n\n    /** set the current scroll position of the panel in its parent */\n    scrollTo : function( pos, speed ){\n        speed = speed || 0;\n        this.$scrollContainer().animate({ scrollTop: pos }, speed );\n        return this;\n    },\n\n    /** Scrolls the panel to the top. */\n    scrollToTop : function( speed ){\n        return this.scrollTo( 0, speed );\n    },\n\n    /**  */\n    scrollToItem : function( view, speed ){\n        if( !view ){ return this; }\n        //var itemTop = view.$el.offset().top;\n        var itemTop = view.$el.position().top;\n        return this.scrollTo( itemTop, speed );\n    },\n\n    /** Scrolls the panel to show the content with the given id. */\n    scrollToId : function( id, speed ){\n        return this.scrollToItem( this.viewFromModelId( id ), speed );\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events : {\n        'click .select-all'     : 'selectAll',\n        'click .deselect-all'   : 'deselectAll'\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString : function(){\n        return 'ListPanel(' + this.collection + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nListPanel.prototype.templates = (function(){\n//TODO: move to require text! plugin\n\n    var elTemplate = BASE_MVC.wrapTemplate([\n        // temp container\n        '<div>',\n            '<div class=\"controls\"></div>',\n            '<div class=\"list-items\"></div>',\n            '<div class=\"empty-message infomessagesmall\"></div>',\n        '</div>'\n    ]);\n\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n            '<div class=\"title\">',\n                '<div class=\"name\"><%= view.title %></div>',\n            '</div>',\n            '<div class=\"subtitle\"><%= view.subtitle %></div>',\n            // buttons, controls go here\n            '<div class=\"actions\"></div>',\n            // deleted msg, etc.\n            '<div class=\"messages\"></div>',\n\n            '<div class=\"search\">',\n                '<div class=\"search-input\"></div>',\n            '</div>',\n\n            // show when selectors are shown\n            '<div class=\"list-actions\">',\n                '<div class=\"btn-group\">',\n                    '<button class=\"select-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'All' ), '</button>',\n                    '<button class=\"deselect-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'None' ), '</button>',\n                '</div>',\n                '<div class=\"list-action-menu btn-group\">',\n                '</div>',\n            '</div>',\n        '</div>'\n    ]);\n\n    return {\n        el          : elTemplate,\n        controls    : controlsTemplate\n    };\n}());\n\n\n//=============================================================================\n/** View for a model that has a sub-collection (e.g. History, DatasetCollection)\n *  Allows:\n *      the model to be reset\n *      auto assign panel.collection to panel.model[ panel.modelCollectionKey ]\n *\n */\nvar ModelListPanel = ListPanel.extend({\n\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey : 'contents',\n\n    initialize : function( attributes ){\n        ListPanel.prototype.initialize.call( this, attributes );\n        this.selecting = ( attributes.selecting !== undefined )? attributes.selecting : false;\n\n        this.setModel( this.model, attributes );\n    },\n\n    /** release/free/shutdown old models and set up panel for new models\n     *  @fires new-model with the panel as parameter\n     */\n    setModel : function( model, attributes ){\n        attributes = attributes || {};\n        this.debug( this + '.setModel:', model, attributes );\n\n        this.freeModel();\n        this.freeViews();\n\n        if( model ){\n            var oldModelId = this.model? this.model.get( 'id' ): null;\n\n            // set up the new model with user, logger, storage, events\n            this.model = model;\n            if( this.logger ){\n                this.model.logger = this.logger;\n            }\n            this._setUpModelListeners();\n\n//TODO: relation btwn model, collection becoming tangled here\n            // free the collection, and assign the new collection to either\n            //  the model[ modelCollectionKey ], attributes.collection, or an empty vanilla collection\n            this.collection.off();\n            this.collection = ( this.model[ this.modelCollectionKey ] )?\n                this.model[ this.modelCollectionKey ]:\n                ( attributes.collection || ( new this.collectionClass([]) ) );\n            this._setUpCollectionListeners();\n\n            if( oldModelId && model.get( 'id' ) !== oldModelId  ){\n                this.trigger( 'new-model', this );\n            }\n        }\n        return this;\n    },\n\n    /** free the current model and all listeners for it, free any views for the model */\n    freeModel : function(){\n        // stop/release the previous model, and clear cache to sub-views\n        if( this.model ){\n            this.stopListening( this.model );\n            //TODO: see base-mvc\n            //this.model.free();\n            //this.model = null;\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ listening\n    /** listening for model events */\n    _setUpModelListeners : function(){\n        // override\n        this.log( this + '._setUpModelListeners', this.model );\n        // bounce model errors up to the panel\n        this.model.on( 'error', function(){\n            var args = Array.prototype.slice.call( arguments, 0 );\n            //args.unshift( 'model:error' );\n            args.unshift( 'error' );\n            this.trigger.apply( this, args );\n        }, this );\n        return this;\n    },\n\n    /** Build a temp div containing the new children for the view's $el.\n     */\n    _renderControls : function( $newRender ){\n        this.debug( this + '(ListPanel)._renderControls' );\n        var json = this.model? this.model.toJSON() : {},\n            $controls = $( this.templates.controls( json, this ) );\n        $newRender.find( '.controls' ).replaceWith( $controls );\n        return $controls;\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** Return a string rep of the panel */\n    toString : function(){\n        return 'ModelListPanel(' + this.model + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nModelListPanel.prototype.templates = (function(){\n//TODO: move to require text! plugin\n\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n            '<div class=\"title\">',\n//TODO: this is really the only difference - consider factoring titlebar out\n                '<div class=\"name\"><%= model.name %></div>',\n            '</div>',\n            '<div class=\"subtitle\"><%= view.subtitle %></div>',\n            '<div class=\"actions\"></div>',\n            '<div class=\"messages\"></div>',\n\n            '<div class=\"search\">',\n                '<div class=\"search-input\"></div>',\n            '</div>',\n\n            '<div class=\"list-actions\">',\n                '<div class=\"btn-group\">',\n                    '<button class=\"select-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'All' ), '</button>',\n                    '<button class=\"deselect-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'None' ), '</button>',\n                '</div>',\n                '<div class=\"list-action-menu btn-group\">',\n                '</div>',\n            '</div>',\n        '</div>'\n    ]);\n\n    return _.extend( _.clone( ListPanel.prototype.templates ), {\n        controls : controlsTemplate\n    });\n}());\n\n\n//=============================================================================\n    return {\n        ListPanel      : ListPanel,\n        ModelListPanel : ModelListPanel\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/list/list-panel.js\n ** module id = 50\n ** module chunks = 2\n **/","define([\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( baseMVC, _l ){\n// =============================================================================\n/** A view on any model that has a 'tags' attribute (a list of tag strings)\n *      Incorporates the select2 jQuery plugin for tags display/editing:\n *      http://ivaynberg.github.io/select2/\n */\nvar TagsEditor = Backbone.View\n        .extend( baseMVC.LoggableMixin )\n        .extend( baseMVC.HiddenUntilActivatedViewMixin ).extend({\n\n    tagName     : 'div',\n    className   : 'tags-display',\n\n    /** Set up listeners, parse options */\n    initialize : function( options ){\n        //console.debug( this, options );\n        // only listen to the model only for changes to tags - re-render\n        this.listenTo( this.model, 'change:tags', function(){\n            this.render();\n        });\n        this.hiddenUntilActivated( options.$activator, options );\n    },\n\n    /** Build the DOM elements, call select to on the created input, and set up behaviors */\n    render : function(){\n        var view = this;\n        this.$el.html( this._template() );\n\n        this.$input().select2({\n            placeholder : 'Add tags',\n            width       : '100%',\n            tags : function(){\n                // initialize possible tags in the dropdown based on all the tags the user has used so far\n                return view._getTagsUsed();\n            }\n        });\n\n        this._setUpBehaviors();\n        return this;\n    },\n\n    /** @returns {String} the html text used to build the view's DOM */\n    _template : function(){\n        return [\n            //TODO: make prompt optional\n            '<label class=\"prompt\">', _l( 'Tags' ), '</label>',\n            // set up initial tags by adding as CSV to input vals (necc. to init select2)\n            '<input class=\"tags-input\" value=\"', this.tagsToCSV(), '\" />'\n        ].join( '' );\n    },\n\n    /** @returns {String} the sorted, comma-separated tags from the model */\n    tagsToCSV : function(){\n        var tagsArray = this.model.get( 'tags' );\n        if( !_.isArray( tagsArray ) || _.isEmpty( tagsArray ) ){\n            return '';\n        }\n        return tagsArray.map( function( tag ){\n            return _.escape( tag );\n        }).sort().join( ',' );\n    },\n\n    /** @returns {jQuery} the input for this view */\n    $input : function(){\n        return this.$el.find( 'input.tags-input' );\n    },\n\n    /** @returns {String[]} all tags used by the current user */\n    _getTagsUsed : function(){\n//TODO: global\n        return Galaxy.currUser.get( 'tags_used' );\n    },\n\n    /** set up any event listeners on the view's DOM (mostly handled by select2) */\n    _setUpBehaviors : function(){\n        var view = this;\n        this.$input().on( 'change', function( event ){\n            // save the model's tags in either remove or added event\n            view.model.save({ tags: event.val }, { silent: true });\n            // if it's new, add the tag to the users tags\n            if( event.added ){\n                //??: solve weird behavior in FF on test.galaxyproject.org where\n                //  event.added.text is string object: 'String{ 0=\"o\", 1=\"n\", 2=\"e\" }'\n                view._addNewTagToTagsUsed( event.added.text + '' );\n            }\n        });\n    },\n\n    /** add a new tag (if not already there) to the list of all tags used by the user\n     *  @param {String} newTag  the tag to add to the list of used\n     */\n    _addNewTagToTagsUsed : function( newTag ){\n//TODO: global\n        var tagsUsed = Galaxy.currUser.get( 'tags_used' );\n        if( !_.contains( tagsUsed, newTag ) ){\n            tagsUsed.push( newTag );\n            tagsUsed.sort();\n            Galaxy.currUser.set( 'tags_used', tagsUsed );\n        }\n    },\n\n    /** shut down event listeners and remove this view's DOM */\n    remove : function(){\n        this.$input.off();\n        this.stopListening( this.model );\n        Backbone.View.prototype.remove.call( this );\n    },\n\n    /** string rep */\n    toString : function(){ return [ 'TagsEditor(', this.model + '', ')' ].join(''); }\n});\n\n// =============================================================================\nreturn {\n    TagsEditor : TagsEditor\n};\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/tags.js\n ** module id = 51\n ** module chunks = 2\n **/","/**\n * Model, view, and controller objects for Galaxy tools and tool panel.\n */\n\n define([\n    \"libs/underscore\",\n    \"viz/trackster/util\",\n    \"mvc/data\",\n    \"mvc/tools/tools-form\",\n    \"templates/compiled/tool_form\",\n    \"templates/compiled/tool_link\",\n    \"templates/compiled/panel_section\",\n    \"templates/compiled/tool_search\",\n], function(_, util, data, ToolsForm, tool_form, tool_link, panel_section, tool_search) {\nconsole.debug( tool_form, tool_link, panel_section, tool_search );\n\n// TODO: certainly not the way to do this\nvar _templates = {\n    tool_form       : tool_form? tool_form.Handlebars.templates.tool_form : Handlebars.templates.tool_form,\n    tool_link       : tool_link? tool_link.Handlebars.templates.tool_link : Handlebars.templates.tool_link,\n    panel_section   : panel_section? panel_section.Handlebars.templates.panel_section : Handlebars.templates.panel_section,\n    tool_search     : tool_search? tool_search.Handlebars.templates.tool_search : Handlebars.templates.tool_search\n};\n\n/**\n * Mixin for tracking model visibility.\n */\nvar VisibilityMixin = {\n    hidden: false,\n\n    show: function() {\n        this.set(\"hidden\", false);\n    },\n\n    hide: function() {\n        this.set(\"hidden\", true);\n    },\n\n    toggle: function() {\n        this.set(\"hidden\", !this.get(\"hidden\"));\n    },\n\n    is_visible: function() {\n        return !this.attributes.hidden;\n    }\n\n};\n\n/**\n * A tool parameter.\n */\nvar ToolParameter = Backbone.Model.extend({\n    defaults: {\n        name: null,\n        label: null,\n        type: null,\n        value: null,\n        html: null,\n        num_samples: 5\n    },\n\n    initialize: function(options) {\n        this.attributes.html = unescape(this.attributes.html);\n    },\n\n    copy: function() {\n        return new ToolParameter(this.toJSON());\n    },\n\n    set_value: function(value) {\n        this.set('value', value || '');\n    }\n});\n\nvar ToolParameterCollection = Backbone.Collection.extend({\n    model: ToolParameter\n});\n\n/**\n * A data tool parameter.\n */\nvar DataToolParameter = ToolParameter.extend({});\n\n/**\n * An integer tool parameter.\n */\nvar IntegerToolParameter = ToolParameter.extend({\n    set_value: function(value) {\n        this.set('value', parseInt(value, 10));\n    },\n\n    /**\n     * Returns samples from a tool input.\n     */\n    get_samples: function() {\n        return d3.scale.linear()\n                        .domain([this.get('min'), this.get('max')])\n                        .ticks(this.get('num_samples'));\n    }\n});\n\nvar FloatToolParameter = IntegerToolParameter.extend({\n    set_value: function(value) {\n        this.set('value', parseFloat(value));\n    }\n});\n\n/**\n * A select tool parameter.\n */\nvar SelectToolParameter = ToolParameter.extend({\n    /**\n     * Returns tool options.\n     */\n    get_samples: function() {\n        return _.map(this.get('options'), function(option) {\n            return option[0];\n        });\n    }\n});\n\n// Set up dictionary of parameter types.\nToolParameter.subModelTypes = {\n    'integer': IntegerToolParameter,\n    'float': FloatToolParameter,\n    'data': DataToolParameter,\n    'select': SelectToolParameter\n};\n\n/**\n * A Galaxy tool.\n */\nvar Tool = Backbone.Model.extend({\n    // Default attributes.\n    defaults: {\n        id: null,\n        name: null,\n        description: null,\n        target: null,\n        inputs: [],\n        outputs: []\n    },\n\n    urlRoot: galaxy_config.root + 'api/tools',\n\n    initialize: function(options) {\n\n        // Set parameters.\n        this.set('inputs', new ToolParameterCollection(_.map(options.inputs, function(p) {\n            var p_class = ToolParameter.subModelTypes[p.type] || ToolParameter;\n            return new p_class(p);\n        })));\n    },\n\n    /**\n     *\n     */\n    toJSON: function() {\n        var rval = Backbone.Model.prototype.toJSON.call(this);\n\n        // Convert inputs to JSON manually.\n        rval.inputs = this.get('inputs').map(function(i) { return i.toJSON(); });\n        return rval;\n    },\n\n    /**\n     * Removes inputs of a particular type; this is useful because not all inputs can be handled by\n     * client and server yet.\n     */\n    remove_inputs: function(types) {\n        var tool = this,\n            incompatible_inputs = tool.get('inputs').filter( function(input) {\n                return ( types.indexOf( input.get('type') ) !== -1);\n            });\n        tool.get('inputs').remove(incompatible_inputs);\n    },\n\n    /**\n     * Returns object copy, optionally including only inputs that can be sampled.\n     */\n    copy: function(only_samplable_inputs) {\n        var copy = new Tool(this.toJSON());\n\n        // Return only samplable inputs if flag is set.\n        if (only_samplable_inputs) {\n            var valid_inputs = new Backbone.Collection();\n            copy.get('inputs').each(function(input) {\n                if (input.get_samples()) {\n                    valid_inputs.push(input);\n                }\n            });\n            copy.set('inputs', valid_inputs);\n        }\n\n        return copy;\n    },\n\n    apply_search_results: function(results) {\n        ( _.indexOf(results, this.attributes.id) !== -1 ? this.show() : this.hide() );\n        return this.is_visible();\n    },\n\n    /**\n     * Set a tool input's value.\n     */\n    set_input_value: function(name, value) {\n        this.get('inputs').find(function(input) {\n            return input.get('name') === name;\n        }).set('value', value);\n    },\n\n    /**\n     * Set many input values at once.\n     */\n    set_input_values: function(inputs_dict) {\n        var self = this;\n        _.each(_.keys(inputs_dict), function(input_name) {\n            self.set_input_value(input_name, inputs_dict[input_name]);\n        });\n    },\n\n    /**\n     * Run tool; returns a Deferred that resolves to the tool's output(s).\n     */\n    run: function() {\n        return this._run();\n    },\n\n    /**\n     * Rerun tool using regions and a target dataset.\n     */\n    rerun: function(target_dataset, regions) {\n        return this._run({\n            action: 'rerun',\n            target_dataset_id: target_dataset.id,\n            regions: regions\n        });\n    },\n\n    /**\n     * Returns input dict for tool's inputs.\n     */\n    get_inputs_dict: function() {\n        var input_dict = {};\n        this.get('inputs').each(function(input) {\n            input_dict[input.get('name')] = input.get('value');\n        });\n        return input_dict;\n    },\n\n    /**\n     * Run tool; returns a Deferred that resolves to the tool's output(s).\n     * NOTE: this method is a helper method and should not be called directly.\n     */\n    _run: function(additional_params) {\n        // Create payload.\n        var payload = _.extend({\n                tool_id: this.id,\n                inputs: this.get_inputs_dict()\n            }, additional_params);\n\n        // Because job may require indexing datasets, use server-side\n        // deferred to ensure that job is run. Also use deferred that\n        // resolves to outputs from tool.\n        var run_deferred = $.Deferred(),\n            ss_deferred = new util.ServerStateDeferred({\n            ajax_settings: {\n                url: this.urlRoot,\n                data: JSON.stringify(payload),\n                dataType: \"json\",\n                contentType: 'application/json',\n                type: \"POST\"\n            },\n            interval: 2000,\n            success_fn: function(response) {\n                return response !== \"pending\";\n            }\n        });\n\n        // Run job and resolve run_deferred to tool outputs.\n        $.when(ss_deferred.go()).then(function(result) {\n            run_deferred.resolve(new data.DatasetCollection(result));\n        });\n        return run_deferred;\n    }\n});\n_.extend(Tool.prototype, VisibilityMixin);\n\n/**\n * Tool view.\n */\nvar ToolView = Backbone.View.extend({\n\n});\n\n/**\n * Wrap collection of tools for fast access/manipulation.\n */\nvar ToolCollection = Backbone.Collection.extend({\n    model: Tool\n});\n\n/**\n * Label or section header in tool panel.\n */\nvar ToolSectionLabel = Backbone.Model.extend(VisibilityMixin);\n\n/**\n * Section of tool panel with elements (labels and tools).\n */\nvar ToolSection = Backbone.Model.extend({\n    defaults: {\n        elems: [],\n        open: false\n    },\n\n    clear_search_results: function() {\n        _.each(this.attributes.elems, function(elt) {\n            elt.show();\n        });\n\n        this.show();\n        this.set(\"open\", false);\n    },\n\n    apply_search_results: function(results) {\n        var all_hidden = true,\n            cur_label;\n        _.each(this.attributes.elems, function(elt) {\n            if (elt instanceof ToolSectionLabel) {\n                cur_label = elt;\n                cur_label.hide();\n            }\n            else if (elt instanceof Tool) {\n                if (elt.apply_search_results(results)) {\n                    all_hidden = false;\n                    if (cur_label) {\n                        cur_label.show();\n                    }\n                }\n            }\n        });\n\n        if (all_hidden) {\n            this.hide();\n        }\n        else {\n            this.show();\n            this.set(\"open\", true);\n        }\n    }\n});\n_.extend(ToolSection.prototype, VisibilityMixin);\n\n/**\n * Tool search that updates results when query is changed. Result value of null\n * indicates that query was not run; if not null, results are from search using\n * query.\n */\nvar ToolSearch = Backbone.Model.extend({\n    defaults: {\n        search_hint_string: \"search tools\",\n        min_chars_for_search: 3,\n        spinner_url: \"\",\n        clear_btn_url: \"\",\n        search_url: \"\",\n        visible: true,\n        query: \"\",\n        results: null,\n        // ESC (27) will clear the input field and tool search filters\n        clear_key: 27\n    },\n\n    urlRoot: galaxy_config.root + 'api/tools',\n\n    initialize: function() {\n        this.on(\"change:query\", this.do_search);\n    },\n\n    /**\n     * Do the search and update the results.\n     */\n    do_search: function() {\n        var query = this.attributes.query;\n\n        // If query is too short, do not search.\n        if (query.length < this.attributes.min_chars_for_search) {\n            this.set(\"results\", null);\n            return;\n        }\n\n        // Do search via AJAX.\n        var q = query;\n        // Stop previous ajax-request\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        // Start a new ajax-request in X ms\n        $(\"#search-clear-btn\").hide();\n        $(\"#search-spinner\").show();\n        var self = this;\n        this.timer = setTimeout(function () {\n            // log the search to analytics if present\n            if ( typeof ga !== 'undefined' ) {\n                ga( 'send', 'pageview', galaxy_config.root + '?q=' + q );\n            }\n            $.get( self.urlRoot, { q: q }, function (data) {\n                self.set(\"results\", data);\n                $(\"#search-spinner\").hide();\n                $(\"#search-clear-btn\").show();\n            }, \"json\" );\n        }, 400 );\n    },\n\n    clear_search: function() {\n        this.set(\"query\", \"\");\n        this.set(\"results\", null);\n    }\n\n});\n_.extend(ToolSearch.prototype, VisibilityMixin);\n\n/**\n * Tool Panel.\n */\nvar ToolPanel = Backbone.Model.extend({\n\n    initialize: function(options) {\n        this.attributes.tool_search = options.tool_search;\n        this.attributes.tool_search.on(\"change:results\", this.apply_search_results, this);\n        this.attributes.tools = options.tools;\n        this.attributes.layout = new Backbone.Collection( this.parse(options.layout) );\n    },\n\n    /**\n     * Parse tool panel dictionary and return collection of tool panel elements.\n     */\n    parse: function(response) {\n        // Recursive function to parse tool panel elements.\n        var self = this,\n            // Helper to recursively parse tool panel.\n            parse_elt = function(elt_dict) {\n                var type = elt_dict.model_class;\n                // There are many types of tools; for now, anything that ends in 'Tool'\n                // is treated as a generic tool.\n                if ( type.indexOf('Tool') === type.length - 4 ) {\n                    return self.attributes.tools.get(elt_dict.id);\n                }\n                else if (type === 'ToolSection') {\n                    // Parse elements.\n                    var elems = _.map(elt_dict.elems, parse_elt);\n                    elt_dict.elems = elems;\n                    return new ToolSection(elt_dict);\n                }\n                else if (type === 'ToolSectionLabel') {\n                    return new ToolSectionLabel(elt_dict);\n                }\n            };\n\n        return _.map(response, parse_elt);\n    },\n\n    clear_search_results: function() {\n        this.get('layout').each(function(panel_elt) {\n            if (panel_elt instanceof ToolSection) {\n                panel_elt.clear_search_results();\n            }\n            else {\n                // Label or tool, so just show.\n                panel_elt.show();\n            }\n        });\n    },\n\n    apply_search_results: function() {\n        var results = this.get('tool_search').get('results');\n        if (results === null) {\n            this.clear_search_results();\n            return;\n        }\n\n        var cur_label = null;\n        this.get('layout').each(function(panel_elt) {\n            if (panel_elt instanceof ToolSectionLabel) {\n                cur_label = panel_elt;\n                cur_label.hide();\n            }\n            else if (panel_elt instanceof Tool) {\n                if (panel_elt.apply_search_results(results)) {\n                    if (cur_label) {\n                        cur_label.show();\n                    }\n                }\n            }\n            else {\n                // Starting new section, so clear current label.\n                cur_label = null;\n                panel_elt.apply_search_results(results);\n            }\n        });\n    }\n});\n\n/**\n * View classes for Galaxy tools and tool panel.\n *\n * Views use precompiled Handlebars templates for rendering. Views update as needed\n * based on (a) model/collection events and (b) user interactions; in this sense,\n * they are controllers are well and the HTML is the real view in the MVC architecture.\n */\n\n/**\n * Base view that handles visibility based on model's hidden attribute.\n */\nvar BaseView = Backbone.View.extend({\n    initialize: function() {\n        this.model.on(\"change:hidden\", this.update_visible, this);\n        this.update_visible();\n    },\n    update_visible: function() {\n        ( this.model.attributes.hidden ? this.$el.hide() : this.$el.show() );\n    }\n});\n\n/**\n * Link to a tool.\n */\nvar ToolLinkView = BaseView.extend({\n    tagName: 'div',\n\n    render: function() {\n        // create element\n        var $link = $('<div/>');\n        $link.append(_templates.tool_link(this.model.toJSON()));\n\n        // open upload dialog for upload tool\n        if (this.model.id === 'upload1') {\n            $link.find('a').on('click', function(e) {\n                e.preventDefault();\n                Galaxy.upload.show();\n            });\n        }\n\n        // regular tools\n        if ( this.model.id !== 'upload1' && this.model.get( 'model_class' ) === 'Tool' ) {\n            var self = this;\n            $link.find('a').on('click', function(e) {\n                e.preventDefault();\n                var form = new ToolsForm.View( { id : self.model.id, version : self.model.get('version') } );\n                form.deferred.execute(function() {\n                    Galaxy.app.display( form );\n                });\n            });\n        }\n\n        // add element\n        this.$el.append($link);\n        return this;\n    }\n});\n\n/**\n * Panel label/section header.\n */\nvar ToolSectionLabelView = BaseView.extend({\n    tagName: 'div',\n    className: 'toolPanelLabel',\n\n    render: function() {\n        this.$el.append( $(\"<span/>\").text(this.model.attributes.text) );\n        return this;\n    }\n});\n\n/**\n * Panel section.\n */\nvar ToolSectionView = BaseView.extend({\n    tagName: 'div',\n    className: 'toolSectionWrapper',\n\n    initialize: function() {\n        BaseView.prototype.initialize.call(this);\n        this.model.on(\"change:open\", this.update_open, this);\n    },\n\n    render: function() {\n        // Build using template.\n        this.$el.append( _templates.panel_section(this.model.toJSON()) );\n\n        // Add tools to section.\n        var section_body = this.$el.find(\".toolSectionBody\");\n        _.each(this.model.attributes.elems, function(elt) {\n            if (elt instanceof Tool) {\n                var tool_view = new ToolLinkView({model: elt, className: \"toolTitle\"});\n                tool_view.render();\n                section_body.append(tool_view.$el);\n            }\n            else if (elt instanceof ToolSectionLabel) {\n                var label_view = new ToolSectionLabelView({model: elt});\n                label_view.render();\n                section_body.append(label_view.$el);\n            }\n            else {\n                // TODO: handle nested section bodies?\n            }\n        });\n        return this;\n    },\n\n    events: {\n        'click .toolSectionTitle > a': 'toggle'\n    },\n\n    /**\n     * Toggle visibility of tool section.\n     */\n    toggle: function() {\n        this.model.set(\"open\", !this.model.attributes.open);\n    },\n\n    /**\n     * Update whether section is open or close.\n     */\n    update_open: function() {\n        (this.model.attributes.open ?\n            this.$el.children(\".toolSectionBody\").slideDown(\"fast\") :\n            this.$el.children(\".toolSectionBody\").slideUp(\"fast\")\n        );\n    }\n});\n\nvar ToolSearchView = Backbone.View.extend({\n    tagName: 'div',\n    id: 'tool-search',\n    className: 'bar',\n\n    events: {\n        'click': 'focus_and_select',\n        'keyup :input': 'query_changed',\n        'click #search-clear-btn': 'clear'\n    },\n\n    render: function() {\n        this.$el.append( _templates.tool_search(this.model.toJSON()) );\n        if (!this.model.is_visible()) {\n            this.$el.hide();\n        }\n        this.$el.find('[title]').tooltip();\n        return this;\n    },\n\n    focus_and_select: function() {\n        this.$el.find(\":input\").focus().select();\n    },\n\n    clear: function() {\n        this.model.clear_search();\n        this.$el.find(\":input\").val('');\n        this.focus_and_select();\n        return false;\n    },\n\n    query_changed: function( evData ) {\n        // check for the 'clear key' (ESC) first\n        if( ( this.model.attributes.clear_key ) &&\n            ( this.model.attributes.clear_key === evData.which ) ){\n            this.clear();\n            return false;\n        }\n        this.model.set(\"query\", this.$el.find(\":input\").val());\n    }\n});\n\n/**\n * Tool panel view. Events triggered include:\n * tool_link_click(click event, tool_model)\n */\nvar ToolPanelView = Backbone.View.extend({\n    tagName: 'div',\n    className: 'toolMenu',\n\n    /**\n     * Set up view.\n     */\n    initialize: function() {\n        this.model.get('tool_search').on(\"change:results\", this.handle_search_results, this);\n    },\n\n    render: function() {\n        var self = this;\n\n        // Render search.\n        var search_view = new ToolSearchView( { model: this.model.get('tool_search') } );\n        search_view.render();\n        self.$el.append(search_view.$el);\n\n        // Render panel.\n        this.model.get('layout').each(function(panel_elt) {\n            if (panel_elt instanceof ToolSection) {\n                var section_title_view = new ToolSectionView({model: panel_elt});\n                section_title_view.render();\n                self.$el.append(section_title_view.$el);\n            }\n            else if (panel_elt instanceof Tool) {\n                var tool_view = new ToolLinkView({model: panel_elt, className: \"toolTitleNoSection\"});\n                tool_view.render();\n                self.$el.append(tool_view.$el);\n            }\n            else if (panel_elt instanceof ToolSectionLabel) {\n                var label_view = new ToolSectionLabelView({model: panel_elt});\n                label_view.render();\n                self.$el.append(label_view.$el);\n            }\n        });\n\n        // Setup tool link click eventing.\n        self.$el.find(\"a.tool-link\").click(function(e) {\n            // Tool id is always the first class.\n            var\n                tool_id = $(this).attr('class').split(/\\s+/)[0],\n                tool = self.model.get('tools').get(tool_id);\n\n            self.trigger(\"tool_link_click\", e, tool);\n        });\n\n        return this;\n    },\n\n    handle_search_results: function() {\n        var results = this.model.get('tool_search').get('results');\n        if (results && results.length === 0) {\n            $(\"#search-no-results\").show();\n        }\n        else {\n            $(\"#search-no-results\").hide();\n        }\n    }\n});\n\n/**\n * View for working with a tool: setting parameters and inputs and executing the tool.\n */\nvar ToolFormView = Backbone.View.extend({\n    className: 'toolForm',\n\n    render: function() {\n        this.$el.children().remove();\n        this.$el.append( _templates.tool_form(this.model.toJSON()) );\n    }\n});\n\n/**\n * Integrated tool menu + tool execution.\n */\nvar IntegratedToolMenuAndView = Backbone.View.extend({\n    className: 'toolMenuAndView',\n\n    initialize: function() {\n        this.tool_panel_view = new ToolPanelView({collection: this.collection});\n        this.tool_form_view = new ToolFormView();\n    },\n\n    render: function() {\n        // Render and append tool panel.\n        this.tool_panel_view.render();\n        this.tool_panel_view.$el.css(\"float\", \"left\");\n        this.$el.append(this.tool_panel_view.$el);\n\n        // Append tool form view.\n        this.tool_form_view.$el.hide();\n        this.$el.append(this.tool_form_view.$el);\n\n        // On tool link click, show tool.\n        var self = this;\n        this.tool_panel_view.on(\"tool_link_click\", function(e, tool) {\n            // Prevents click from activating link:\n            e.preventDefault();\n            // Show tool that was clicked on:\n            self.show_tool(tool);\n        });\n    },\n\n    /**\n     * Fetch and display tool.\n     */\n    show_tool: function(tool) {\n        var self = this;\n        tool.fetch().done( function() {\n            self.tool_form_view.model = tool;\n            self.tool_form_view.render();\n            self.tool_form_view.$el.show();\n            $('#left').width(\"650px\");\n        });\n    }\n});\n\n// Exports\nreturn {\n    ToolParameter: ToolParameter,\n    IntegerToolParameter: IntegerToolParameter,\n    SelectToolParameter: SelectToolParameter,\n    Tool: Tool,\n    ToolCollection: ToolCollection,\n    ToolSearch: ToolSearch,\n    ToolPanel: ToolPanel,\n    ToolPanelView: ToolPanelView,\n    ToolFormView: ToolFormView\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/tools.js\n ** module id = 52\n ** module chunks = 2\n **/","define([\n    //jquery\n    //backbone\n], function(){\n//=============================================================================\n/**\n * backbone model for icon buttons\n */\nvar IconButton = Backbone.Model.extend({\n    defaults: {\n        title           : \"\",\n        icon_class      : \"\",\n        on_click        : null,\n        menu_options    : null,\n        is_menu_button  : true,\n        id              : null,\n        href            : null,\n        target          : null,\n        enabled         : true,\n        visible         : true,\n        tooltip_config  : {}\n    }\n});\n\n/**\n *  backbone view for icon buttons\n */\nvar IconButtonView = Backbone.View.extend({\n\n    initialize : function(){\n        // better rendering this way\n        this.model.attributes.tooltip_config = { placement : 'bottom' };\n        this.model.bind( 'change', this.render, this );\n    },\n\n    render : function( ){\n        // hide tooltip\n        this.$el.tooltip( 'hide' );\n\n        var new_elem = this.template( this.model.toJSON() );\n        // configure tooltip\n        new_elem.tooltip( this.model.get( 'tooltip_config' ));\n        this.$el.replaceWith( new_elem );\n        this.setElement( new_elem );\n        return this;\n    },\n\n    events : {\n        'click' : 'click'\n    },\n\n    click : function( event ){\n        // if on_click pass to that function\n        if( _.isFunction( this.model.get( 'on_click' ) ) ){\n            this.model.get( 'on_click' )( event );\n            return false;\n        }\n        // otherwise, bubble up ( to href or whatever )\n        return true;\n    },\n\n    // generate html element\n    template: function( options ){\n        var buffer = 'title=\"' + options.title + '\" class=\"icon-button';\n\n        if( options.is_menu_button ){\n            buffer += ' menu-button';\n        }\n\n        buffer += ' ' + options.icon_class;\n\n        if( !options.enabled ){\n            buffer += '_disabled';\n        }\n\n        // close class tag\n        buffer += '\"';\n\n        if( options.id ){\n            buffer += ' id=\"' + options.id + '\"';\n        }\n\n        buffer += ' href=\"' + options.href + '\"';\n        // add target for href\n        if( options.target ){\n            buffer += ' target=\"' + options.target + '\"';\n        }\n        // set visibility\n        if( !options.visible ){\n            buffer += ' style=\"display: none;\"';\n        }\n\n        // enabled/disabled\n        if ( options.enabled ){\n            buffer = '<a ' + buffer + '/>';\n        } else {\n            buffer = '<span ' + buffer + '/>';\n        }\n\n        // return element\n        return $( buffer );\n    }\n} );\n\n// define collection\nvar IconButtonCollection = Backbone.Collection.extend({\n    model: IconButton\n});\n\n/**\n * menu with multiple icon buttons\n * views are not needed nor used for individual buttons\n */\nvar IconButtonMenuView = Backbone.View.extend({\n\n    tagName: 'div',\n\n    initialize: function(){\n        this.render();\n    },\n\n    render: function(){\n        // initialize icon buttons\n        var self = this;\n        this.collection.each(function(button){\n            // create and add icon button to menu\n            var elt = $('<a/>')\n                .attr('href', 'javascript:void(0)')\n                .attr('title', button.attributes.title)\n                .addClass('icon-button menu-button')\n                .addClass(button.attributes.icon_class)\n                .appendTo(self.$el)\n                .click(button.attributes.on_click);\n\n            // configure tooltip\n            if (button.attributes.tooltip_config){\n                elt.tooltip(button.attributes.tooltip_config);\n            }\n\n            // add popup menu to icon\n            var menu_options = button.get('options');\n            if (menu_options){\n                make_popupmenu(elt, menu_options);\n            }\n        });\n\n        // return\n        return this;\n    }\n});\n\n/**\n * Returns an IconButtonMenuView for the provided configuration.\n * Configuration is a list of dictionaries where each dictionary\n * defines an icon button. Each dictionary must have the following\n * elements: icon_class, title, and on_click.\n */\nvar create_icon_buttons_menu = function(config, global_config)\n{\n    // initialize global configuration\n    if (!global_config) global_config = {};\n\n    // create and initialize menu\n    var buttons = new IconButtonCollection(\n        _.map(config, function(button_config){\n            return new IconButton(_.extend(button_config, global_config));\n        })\n    );\n\n    // return menu\n    return new IconButtonMenuView( {collection: buttons} );\n};\n\n\n//=============================================================================\n    return {\n        IconButton              : IconButton,\n        IconButtonView          : IconButtonView,\n        IconButtonCollection    : IconButtonCollection,\n        IconButtonMenuView      : IconButtonMenuView,\n        create_icon_buttons_menu: create_icon_buttons_menu\n    };\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/icon-button.js\n ** module id = 53\n ** module chunks = 2\n **/","// dependencies\ndefine([], function() {\n\n// frame manager\nvar View = Backbone.View.extend({\n    // defaults inputs\n    options: {\n        // default frame size\n        frame: {\n            cols : 6,\n            rows : 3\n        },\n\n        // maximum number of rows\n        rows: 1000,\n\n        // cell size in px\n        cell: 130,\n\n        // margin\n        margin: 5,\n\n        // scroll speed\n        scroll: 5,\n\n        // minimum top\n        top_min: 40,\n\n        // maximum number of frames\n        frame_max: 9,\n\n        // visible\n        visible: true,\n\n        // onchange\n        onchange: null\n    },\n\n    // number of columns\n    cols: 0,\n\n    // scroll/element top\n    top: 0,\n\n    // viewport scrolling state\n    top_max: 0,\n\n    // frame z-index\n    frame_z : 0,\n\n    // frame counter\n    frame_counter: 0,\n\n    // frame counter\n    frame_counter_id: 0,\n\n    // frame list\n    frame_list: [],\n\n    // frame shadow\n    frame_shadow: null,\n\n    // frame panel visible\n    visible: null,\n\n    // initialize\n    initialize : function(options) {\n        // add to masthead menu\n        var self = this;\n\n        // read in defaults\n        if (options) {\n            this.options = _.defaults(options, this.options);\n        }\n\n        // set visibility\n        this.visible = this.options.visible;\n\n        // initialize top\n        this.top = this.top_max = this.options.top_min;\n\n        // create\n        this.setElement(this._template());\n\n        // load background\n        $(this.el).append(this._templateBackground());\n\n        // load menu buttons\n        $(this.el).append(this._templateMenu());\n\n        // load to main frame\n        $(this.el_main).append($(this.el));\n\n        //\n        // define shadow frame\n        //\n        var id_shadow = '#frame-shadow';\n\n        // add shadow template\n        $(this.el).append(this._templateShadow(id_shadow.substring(1)));\n\n        // initialize frame\n        this.frame_shadow = {\n            id              : id_shadow,\n            screen_location : {},\n            grid_location   : {},\n            grid_rank       : null,\n            grid_lock       : false\n        };\n\n        // initialize size\n        this._frameResize(this.frame_shadow, {width: 0, height: 0});\n\n        // add shadow to frame list\n        this.frame_list[id_shadow] = this.frame_shadow;\n\n        // initialize panel\n        this._panelRefresh();\n\n        // apply visibility\n        if (!this.visible) {\n            this.hide();\n        } else {\n            this.show();\n        }\n\n        // catch window resize event\n        var self = this;\n        $(window).resize(function () {\n            if (self.visible)\n                self._panelRefresh();\n        });\n    },\n\n    /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  type: 'url' or 'other' ; if 'url', 'content' is treated as a URL and loaded into an iframe; \n     *        if 'other', content is treated as a function or raw HTML. content function is passed a single \n     *        argument that is the frame's content DOM element\n     *  content: the content to be loaded into the frame.\n     */\n    add: function(options) {\n        // frame default options\n        var frameOptions = {\n            title: '',\n            content: null,\n            target: '',\n            type: null\n        };\n\n        // read in defaults\n        if (options) {\n            options = _.defaults(options, frameOptions);\n        } else {\n            options = frameOptions;\n        }\n\n        // check for content\n        if(!options.content) {\n            return;\n        }\n\n        // check for number of frames\n        if (this.frame_counter >= this.options.frame_max) {\n            alert(\"You have reached the maximum number of allowed frames (\" + this.options.frame_max + \").\");   \n            return;\n        }\n\n        // generate frame identifier\n        var frame_id = '#frame-' + (this.frame_counter_id++);\n\n        // check if frame exists\n        if ($(frame_id).length !== 0) {\n            alert(\"This frame already exists. This page might contain multiple frame managers.\");\n            return;\n        }\n\n        // reset top\n        this.top = this.options.top_min;\n\n        // append\n        var $frame_el = null;\n        if (options.type === 'url') {\n            $frame_el = $(this._templateFrameUrl(frame_id.substring(1), options.title, options.content));\n        } else if (options.type === 'other') {\n            $frame_el = $(this._templateFrame(frame_id.substring(1), options.title));\n\n            // Load content into frame.\n            var content_elt = $frame_el.find('.f-content');\n            if (_.isFunction(options.content)) {\n                options.content(content_elt);\n            }\n            else {\n                content_elt.append(options.content);\n            }\n        }\n        $(this.el).append($frame_el);\n\n        // construct a new frame\n        var frame = {\n            id              : frame_id,\n            screen_location : {},\n            grid_location   : {},\n            grid_rank       : null,\n            grid_lock       : false\n        };\n\n        // set dimensions\n        options.width   = this._toPixelCoord('width', this.options.frame.cols);\n        options.height  = this._toPixelCoord('height', this.options.frame.rows);\n\n        // default z-index\n        this.frame_z = parseInt($(frame.id).css('z-index'));\n\n        // add to frame list\n        this.frame_list[frame_id] = frame;\n\n        // increase frame counter\n        this.frame_counter++;\n\n        // resize\n        this._frameResize(frame, {width: options.width, height: options.height});\n\n        // place frame\n        this._frameInsert(frame, {top: 0, left: 0}, true);\n\n        // show frames if hidden\n        if (!this.visible) {\n            this.show();\n        }\n    },\n\n    // show panel\n    show: function() {\n        // show\n        this.visible = true;\n\n        // show\n        this.$el.find(\".frame\").fadeIn('fast');\n\n        // hide shadow\n        this.$el.find(this.frame_shadow.id).hide();\n\n        // show background\n        this.$el.find(\".frame-background\").show();\n\n        // show panel\n        this._panelRefresh();\n\n        // refresh\n        this._menuRefresh();\n    },\n\n    // hide panel\n    hide: function() {\n        // make sure that no event is currently processing\n        if (this.event.type !== null)\n            return;\n\n        // hide\n        this.visible = false;\n\n        // hide \n        this.$el.find(\".frame\").fadeOut('fast');\n\n        // hide background\n        this.$el.find(\".frame-background\").hide();\n\n        // hide menu\n        this.$el.find(\".frame-menu\").hide();\n\n        // refresh\n        this._menuRefresh();\n    },\n\n    // length\n    length: function() {\n        return this.frame_counter;\n    },\n\n    // set onchange event\n    setOnChange: function(callback) {\n        this.options.onchange = callback;\n    },\n\n    /*\n        EVENT HANDLING\n    */\n\n    // event\n    event: {\n        type    : null,\n        target  : null,\n        xy      : null\n    },\n\n    // events\n    events: {\n        // global frame events\n        'mousemove'                         : '_eventFrameMouseMove',\n        'mouseup'                           : '_eventFrameMouseUp',\n        'mouseleave'                        : '_eventFrameMouseUp',\n        'mousewheel'                        : '_eventPanelScroll',\n        'DOMMouseScroll'                    : '_eventPanelScroll',\n\n        // events fixed to elements\n        'mousedown .frame'                  : '_eventFrameMouseDown',\n        'mousedown .frame-background'       : '_eventHide',\n        'mousedown .frame-scroll-up'        : '_eventPanelScroll_up',\n        'mousedown .frame-scroll-down'      : '_eventPanelScroll_down',\n        'mousedown .f-close'                : '_eventFrameClose',\n        'mousedown .f-pin'                  : '_eventFrameLock'\n    },\n\n    // drag start\n    _eventFrameMouseDown: function (e) {\n        // skip if event is already active\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // check for drag event\n        if ($(e.target).hasClass('f-header') || $(e.target).hasClass('f-title')) {\n            this.event.type = 'drag';\n        }\n\n        // check for resize event\n        if ($(e.target).hasClass('f-resize')) {\n            this.event.type = 'resize';\n        }\n\n        // skip if no event has to be handled\n        if (this.event.type === null) {\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // identify frame\n        this.event.target = this._frameIdentify(e.target);\n\n        // check if frame is locked\n        if (this.event.target.grid_lock) {\n            this.event.type = null;\n            return;\n        }\n\n        // backup event details\n        this.event.xy = {\n            x: e.originalEvent.pageX,\n            y: e.originalEvent.pageY\n        };\n\n        // prepare drag/resize\n        this._frameDragStart(this.event.target);\n    },\n\n    // mouse move event\n    _eventFrameMouseMove: function (e) {\n        // check\n        if (this.event.type != 'drag' && this.event.type != 'resize') {\n            return;\n        }\n\n        // current position\n        var event_xy_new = {\n            x : e.originalEvent.pageX,\n            y : e.originalEvent.pageY\n        };\n\n        // position delta\n        var event_xy_delta = {\n            x : event_xy_new.x - this.event.xy.x,\n            y : event_xy_new.y - this.event.xy.y\n        };\n\n        // update\n        this.event.xy = event_xy_new;\n\n        // object position / size\n        var p = this._frameScreen (this.event.target);\n\n        // resize event\n        if (this.event.type == 'resize') {\n            // update\n            p.width  += event_xy_delta.x;\n            p.height += event_xy_delta.y;\n\n            // check size\n            var min_dim = this.options.cell - this.options.margin - 1;\n            p.width = Math.max(p.width, min_dim);\n            p.height = Math.max(p.height, min_dim);\n\n            // apply resize to frame\n            this._frameResize(this.event.target, p);\n\n            // break down to grid coordinates\n            p.width = this._toGridCoord('width', p.width) + 1;\n            p.height = this._toGridCoord('height', p.height) + 1;\n\n            // transfer back to pixels\n            p.width = this._toPixelCoord('width', p.width);\n            p.height = this._toPixelCoord('height', p.height);\n\n            // apply\n            this._frameResize(this.frame_shadow, p);\n\n            // fix position\n            this._frameInsert(this.frame_shadow, {\n                top     : this._toGridCoord('top', p.top),\n                left    : this._toGridCoord('left', p.left)\n            });\n        }\n\n        // drag event\n        if (this.event.type == 'drag') {\n            // update\n            p.left  += event_xy_delta.x;\n            p.top   += event_xy_delta.y;\n\n            // apply\n            this._frameOffset(this.event.target, p);\n\n            // get location of shadow\n            var l = {\n                top     : this._toGridCoord('top', p.top),\n                left    : this._toGridCoord('left', p.left)\n            };\n\n            // increase priority of current frame\n            if (l.left !== 0) {\n                l.left++;\n            }\n\n            // fix position\n            this._frameInsert(this.frame_shadow, l);\n        }\n    },\n\n    // mouse up\n    _eventFrameMouseUp: function (e) {\n        // check\n        if (this.event.type != 'drag' && this.event.type != 'resize') {\n            return;\n        }\n\n        // stop\n        this._frameDragStop(this.event.target);\n\n        // reset event\n        this.event.type = null;\n    },\n\n    // drag start\n    _eventFrameClose: function (e) {\n        // check\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // get frame\n        var frame = this._frameIdentify(e.target);\n        var self  = this;\n\n        // fade out\n        $(frame.id).fadeOut('fast', function() {\n            // remove element\n            $(frame.id).remove();\n\n            // remove from dictionary\n            delete self.frame_list[frame.id];\n\n            // reduce frame counter\n            self.frame_counter--;\n\n            // reload\n            self._panelRefresh(true);\n\n            // refresh scroll state once all animations completed\n            self._panelAnimationComplete();\n\n            // hide if no frames left\n            if (self.visible && self.frame_counter == 0)\n                self.hide();\n        });\n    },\n\n    // drag start\n    _eventFrameLock: function (e) {\n        // check\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // get frame\n        var frame = this._frameIdentify(e.target);\n\n        // check\n        if (frame.grid_lock) {\n            // unlock\n            frame.grid_lock = false;\n\n            // remove class\n            $(frame.id).find('.f-pin').removeClass('toggle');\n            $(frame.id).find('.f-header').removeClass('f-not-allowed');\n            $(frame.id).find('.f-title').removeClass('f-not-allowed');\n            $(frame.id).find('.f-resize').show();\n            $(frame.id).find('.f-close').show();\n        } else {\n            // lock\n            frame.grid_lock = true;\n\n            // add class\n            $(frame.id).find('.f-pin').addClass('toggle');\n            $(frame.id).find('.f-header').addClass('f-not-allowed');\n            $(frame.id).find('.f-title').addClass('f-not-allowed');\n            $(frame.id).find('.f-resize').hide();\n            $(frame.id).find('.f-close').hide();\n        }\n    },\n\n    // show/hide panel\n    _eventHide: function (e) {\n        // check\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // hide panel\n        this.hide();\n    },\n\n    /**\n     * Fired when scrolling occurs on panel.\n     */\n    _eventPanelScroll: function(e) {\n        // check\n        if (this.event.type !== null || !this.visible) {\n            return;\n        }\n\n        // Stop propagation if scrolling is happening inside a frame.\n        // TODO: could propagate scrolling if at top/bottom of frame.\n        var frames = $(e.srcElement).parents('.frame')\n        if (frames.length !== 0) {\n            e.stopPropagation();\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // get wheel delta\n        var delta = e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3;\n\n        // refresh panel\n        this._panelScroll(delta);\n    },\n\n    // scroll up\n    _eventPanelScroll_up: function(e) {\n        // check\n        if (this.event.type !== null)\n            return;\n  \n        // prevent\n        e.preventDefault();\n\n        // scroll up\n        this._panelScroll(-this.options.scroll);\n    },\n\n    // scroll down\n    _eventPanelScroll_down: function(e) {\n        // check\n        if (this.event.type !== null)\n            return;\n\n        // prevent\n        e.preventDefault();\n\n        // scroll down\n        this._panelScroll(this.options.scroll);\n    },\n\n    /*\n        FRAME EVENTS SUPPORT\n    */\n\n    // identify\n    _frameIdentify: function(target) {\n        return this.frame_list['#' + $(target).closest('.frame').attr('id')];\n    },\n\n    // drag start\n    _frameDragStart : function (frame) {\n        // set focus\n        this._frameFocus(frame, true);\n\n        // get current dimensions\n        var p = this._frameScreen (frame);\n\n        // initialize shadow\n        this._frameResize(this.frame_shadow, p);\n        this._frameGrid(this.frame_shadow, frame.grid_location);\n\n        // reset location\n        frame.grid_location = null;\n\n        // show shadow\n        $(this.frame_shadow.id).show();\n\n        // load frame cover\n        $('.f-cover').show();\n    },\n\n    // drag stop\n    _frameDragStop : function (frame) {\n        // remove focus\n        this._frameFocus(frame, false);\n\n        // get new dimensions\n        var p = this._frameScreen(this.frame_shadow);\n\n        // update frame\n        this._frameResize(frame, p);\n        this._frameGrid(frame, this.frame_shadow.grid_location, true);\n\n        // reset location of shadow\n        this.frame_shadow.grid_location = null;\n\n        // hide shadow\n        $(this.frame_shadow.id).hide();\n\n        // hide frame cover\n        $('.f-cover').hide();\n\n        // refresh scroll state once all animations completed\n        this._panelAnimationComplete();\n    },\n\n    /*\n        GRID/PIXEL CONVERTER\n    */\n\n    // converts a pixel coordinate to grids\n    _toGridCoord: function (type, px) {\n        var sign = (type == 'width' || type == 'height') ? 1 : -1;\n        if (type == 'top') px -= this.top;\n        return parseInt((px + sign * this.options.margin) / this.options.cell, 10);\n    },\n    \n    // converts a grid coordinate to pixels\n    _toPixelCoord: function (type, g) {\n        var sign = (type == 'width' || type == 'height') ? 1 : -1;\n        var px = (g * this.options.cell) - sign * this.options.margin;\n        if (type == 'top') px += this.top;\n        return px;\n    },\n\n    // get grid coordinates\n    _toGrid: function (px) {\n        return {\n            top     : this._toGridCoord('top', px.top),\n            left    : this._toGridCoord('left', px.left),\n            width   : this._toGridCoord('width', px.width),\n            height  : this._toGridCoord('height', px.height)\n        };\n    },\n\n    // get pixel coordinates\n    _toPixel: function(g) {\n        return {\n            top     : this._toPixelCoord('top', g.top),\n            left    : this._toPixelCoord('left', g.left),\n            width   : this._toPixelCoord('width', g.width),\n            height  : this._toPixelCoord('height', g.height)\n        };\n    },\n\n    /* \n        COLLISION DETECTION\n    */\n\n    // check collision\n    _isCollision: function(g) {\n        // is collision pair\n        function is_collision_pair (a, b) {\n            return !(a.left > b.left + b.width - 1 || a.left + a.width - 1 < b.left ||\n                     a.top > b.top + b.height  - 1 || a.top + a.height - 1 < b.top);\n        }\n\n        // search\n        for (var i in this.frame_list) {\n            // get frame\n            var frame = this.frame_list[i];\n\n            // skip\n            if (frame.grid_location === null)\n                continue;\n\n            // check if g collides with frame\n            if (is_collision_pair (g, frame.grid_location))\n                return true;\n        }\n\n        // return\n        return false;\n    },\n\n    // location/grid rank\n    _locationRank: function(loc) {\n        return (loc.top * this.cols) + loc.left;\n    },\n\n    /*\n        ONSCREEN MENU\n    */\n\n    // update frame counter\n    _menuRefresh: function() {\n        // scroll up possible?\n        if (this.visible) {\n            if (this.top == this.options.top_min)\n                $(\".frame-scroll-up\").hide();\n            else\n                $(\".frame-scroll-up\").show();\n\n            // scroll down possible?\n            if (this.top == this.top_max)\n                $(\".frame-scroll-down\").hide();\n            else\n                $(\".frame-scroll-down\").show();\n        }\n\n        // trigger onchange\n        if (this.options.onchange) {\n            this.options.onchange();\n        }\n    },\n\n    /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n    // panel on animation complete / frames not moving\n    _panelAnimationComplete: function() {\n        var self = this;\n        $(\".frame\").promise().done(function() {self._panelScroll(0, true)});\n    },\n\n    // refresh panel\n    _panelRefresh: function(animate) {\n        // get current size\n        this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n\n        // recalculate frame positions\n        this._frameInsert(null, null, animate);\n    },\n\n    // update scroll\n    _panelScroll: function(delta, animate) {\n        // new top value\n        var top_new = this.top - this.options.scroll * delta;\n\n        // update top\n        top_new = Math.max(top_new, this.top_max);\n        top_new = Math.min(top_new, this.options.top_min);\n\n        // update screen if necessary\n        if (this.top != top_new) {\n            // update screen\n            for (var i in this.frame_list) {\n                // get frame\n                var frame = this.frame_list[i];\n\n                // skip\n                if (frame.grid_location !== null) {\n                    var screen_location = {\n                        top  : frame.screen_location.top - (this.top - top_new),\n                        left : frame.screen_location.left\n                    }\n                    this._frameOffset(frame, screen_location, animate);\n                }\n            }\n\n            // update top value\n            this.top = top_new;\n        }\n\n        // refresh\n        this._menuRefresh();\n    },\n\n    /*\n        FRAME FUNCTIONS\n    */\n\n    // frame insert at given location\n    _frameInsert: function(frame, new_loc, animate) {\n        // define\n        var place_list = [];\n\n        // frame to place\n        if (frame) {\n            // reset grid location\n            frame.grid_location = null;\n\n            // set first one to be placed\n            place_list.push([frame, this._locationRank(new_loc)]);\n        }\n\n        // search\n        var i = null;\n        for (i in this.frame_list) {\n            // get frame\n            var f = this.frame_list[i];\n\n            // check\n            if (f.grid_location !== null && !f.grid_lock) {\n                // reset grid location\n                f.grid_location = null;\n\n                // set up for placement\n                place_list.push([f, f.grid_rank]);\n            }\n        }\n\n        // sort place list by rank\n        place_list.sort(function(a, b) {\n            var i = a[1];\n            var j = b[1];\n            return i < j ? -1 : (i > j ? 1 : 0);\n        });\n\n        // place\n        for (i = 0; i < place_list.length; i++) {\n            this._framePlace(place_list[i][0], animate);\n        }\n\n        // identify maximum viewport size\n        this.top_max = 0;\n        for (var i in this.frame_list) {\n            // get frame\n            var frame = this.frame_list[i];\n\n            // skip\n            if (frame.grid_location !== null)\n                this.top_max = Math.max(this.top_max, frame.grid_location.top + frame.grid_location.height);\n        }\n\n        // mesh maximum top with window size and margin\n        this.top_max = $(window).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n\n        // fix value\n        this.top_max = Math.min(this.top_max, this.options.top_min);\n\n        // panel menu\n        this._menuRefresh();\n    },\n\n    // naive frame place\n    _framePlace: function(frame, animate) {\n        // reset grid location\n        frame.grid_location = null;\n\n        // grid coordinates of new frame\n        var g = this._toGrid(this._frameScreen(frame));\n\n        // try grid coordinates\n        var done = false;\n        for (var i = 0; i < this.options.rows; i++) {\n            // ensure that the first grid column is checked despite limited window space\n            for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n                // coordinates\n                g.top   = i;\n                g.left  = j;\n\n                // no collision\n                if (!this._isCollision(g)) {\n                    done = true;\n                    break;\n                }\n            }\n\n            // break\n            if (done) {\n                break;\n            }\n        }\n\n        // check if valid spot was found\n        if (done) {\n            this._frameGrid(frame, g, animate);\n        } else {\n            console.log(\"Grid dimensions exceeded.\");\n        }\n    },\n\n    // focus\n    _frameFocus: function(frame, has_focus) {\n        // get new z-value\n        var z = this.frame_z + (has_focus ? 1 : 0);\n\n        // update\n        $(frame.id).css('z-index', z);\n    },\n\n    // new left/top position frame\n    _frameOffset: function(frame, p, animate) {\n        // update screen location\n        frame.screen_location.left = p.left;\n        frame.screen_location.top = p.top;\n\n        // animate\n        if (animate) {\n            // set focus on animated\n            this._frameFocus(frame, true);\n\n            // prepare for callback\n            var self = this;\n\n            // animate and remove focus\n            $(frame.id).animate({top: p.top, left: p.left}, 'fast', function() {\n                self._frameFocus(frame, false);\n            });\n        } else {\n            $(frame.id).css({top: p.top, left: p.left});\n        }\n    },\n\n    // resize frame\n    _frameResize: function(frame, p) {\n        // update css\n        $(frame.id).css({width: p.width, height: p.height});\n\n        // update descriptor\n        frame.screen_location.width = p.width;\n        frame.screen_location.height = p.height;\n    },\n\n    // new grid location\n    _frameGrid: function (frame, l, animate) {\n        // update grid location\n        frame.grid_location = l;\n\n        // place frame\n        this._frameOffset(frame, this._toPixel(l), animate);\n\n        // update grid rank\n        frame.grid_rank = this._locationRank(l);\n    },\n\n    // get frame dimensions\n    _frameScreen: function(frame) {\n        var p = frame.screen_location;\n        return {top: p.top, left: p.left, width: p.width, height: p.height};\n    },\n\n    /*\n        HTML TEMPLATES\n    */\n\n    // main element\n    _template: function() {\n        return  '<div class=\"galaxy-frame\"></div>';\n    },\n\n    // fill regular frame template\n    _templateFrame: function(id, title) {\n        // check title\n        if (!title)\n            title = '';\n\n        // load template\n        return  '<div id=\"' + id + '\" class=\"frame corner\">' +\n                    '<div class=\"f-header corner\">' +\n                        '<span class=\"f-title\">' + title + '</span>' +\n                        '<span class=\"f-icon f-close fa fa-trash-o\"></span>' +\n                        '<span class=\"f-icon f-pin fa fa-thumb-tack\"></span>' +\n                    '</div>' +\n                    '<div class=\"f-content\">' +\n                        '<div class=\"f-cover\"></div>' +\n                    '</div>' +\n                    '<span class=\"f-resize f-icon corner fa fa-expand\"></span>' +\n                '</div>';\n    },\n\n    // fill regular frame template\n    _templateFrameUrl: function(id, title, url) {\n        // url\n        if (url.indexOf('?') == -1)\n            url += '?';\n        else\n            url += '&';\n        url += 'widget=True';\n\n        // element\n        var $el = $(this._templateFrame(id, title));\n        $el.find('.f-content').append('<iframe scrolling=\"auto\" class=\"f-iframe\" src=\"' + url + '\"></iframe>');\n\n        // load template\n        return $el;\n    },\n\n    // fill shadow template\n    _templateShadow: function(id) {\n        return '<div id=\"' + id + '\" class=\"frame-shadow corner\"></div>';\n    },\n\n    // fill background template in order to cover underlying iframes\n    _templateBackground: function() {\n        return '<div class=\"frame-background\"></div>';\n    },\n\n    // fill menu button template\n    _templateMenu: function() {\n        return  '<div class=\"frame-scroll-up frame-menu fa fa-chevron-up fa-2x\"></div>' +\n                '<div class=\"frame-scroll-down frame-menu fa fa-chevron-down fa-2x\"></div>';\n    }\n});\n\n// return\nreturn {\n    View: View\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-frames.js\n ** module id = 54\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils', 'mvc/ui/ui-portlet', 'mvc/ui/ui-misc'], function(Utils, Portlet, Ui) {\n\n// ui list element\nvar View = Backbone.View.extend({\n    // create portlet to keep track of selected list elements\n    initialize : function(options) {\n        // link this\n        var self = this;\n\n        // initialize options\n        this.options = options;\n        this.name = options.name || 'element';\n        this.multiple = options.multiple || false;\n\n        // create message handler\n        this.message = new Ui.Message({ cls: 'ui-margin-top' });\n\n        // create portlet\n        this.portlet = new Portlet.View({ cls: 'ui-portlet-section' });\n\n        // create select field containing the options which can be inserted into the list\n        this.select = new Ui.Select.View({ optional : options.optional });\n\n        // create insert new list element button\n        this.button = new Ui.ButtonIcon({\n            icon        : 'fa fa-sign-in',\n            floating    : 'left',\n            tooltip     : 'Insert new ' + this.name,\n            onclick     : function() {\n                self.add({\n                    id      : self.select.value(),\n                    name    : self.select.text()\n                });\n            }\n        });\n\n        // build main element\n        this.setElement(this._template(options));\n        this.$('.ui-list-message').append(this.message.$el);\n        this.$('.ui-list-portlet').append(this.portlet.$el);\n        this.$('.ui-list-button').append(this.button.$el);\n        this.$('.ui-list-select').append(this.select.$el);\n    },\n\n    /** Return/Set currently selected list elements */\n    value: function(val) {\n        // set new value\n        if (val !== undefined) {\n            this.portlet.empty();\n            if ($.isArray(val)) {\n                for (var i in val) {\n                    var v = val[i];\n                    var v_id = null;\n                    var v_name = null;\n                    if ($.type(v) != 'string') {\n                        v_id = v.id;\n                        v_name = v.name;\n                    } else {\n                        v_id = v_name = v;\n                    }\n                    if (v_id != null) {\n                        this.add({\n                            id      : v_id,\n                            name    : v_name\n                        });\n                    }\n                }\n            }\n            this._refresh();\n        }\n        // get current value\n        var lst = [];\n        this.$('.ui-list-id').each(function() {\n            lst.push({\n                id      : $(this).prop('id'),\n                name    : $(this).find('.ui-list-name').html()\n            });\n        });\n        if (lst.length == 0) {\n            return null;\n        }\n        return lst;\n    },\n\n    /** Add row */\n    add: function(options) {\n        var self = this;\n        if (this.$('[id=\"' + options.id + '\"]').length === 0) {\n            if (Utils.validate(options.id)) {\n                var $el = $(this._templateRow({\n                    id      : options.id,\n                    name    : options.name\n                }));\n                $el.on('click', function() {\n                    $el.remove();\n                    self._refresh();\n                });\n                $el.on('mouseover', function() {\n                    $el.addClass('portlet-highlight');\n                });\n                $el.on('mouseout', function() {\n                    $el.removeClass('portlet-highlight');\n                });\n                this.portlet.append($el);\n                this._refresh();\n            } else {\n                this.message.update({ message: 'Please select a valid ' + this.name + '.', status: 'danger' });\n            }\n        } else {\n            this.message.update({ message: 'This ' + this.name + ' is already in the list.' });\n        }\n    },\n\n    /** Update available options */\n    update: function(options) {\n        this.select.update(options);\n    },\n\n    /** Refresh view */\n    _refresh: function() {\n        if (this.$('.ui-list-id').length > 0) {\n            !this.multiple && this.button.disable();\n            this.$('.ui-list-portlet').show();\n        } else {\n            this.button.enable();\n            this.$('.ui-list-portlet').hide();\n        }\n        this.options.onchange && this.options.onchange();\n    },\n\n    /** Main Template */\n    _template: function(options) {\n        return  '<div class=\"ui-list\">' +\n                    '<div class=\"ui-margin-top\">' +\n                        '<span class=\"ui-list-button\"/>' +\n                        '<span class=\"ui-list-select\"/>' +\n                    '</div>' +\n                    '<div class=\"ui-list-message\"/>' +\n                    '<div class=\"ui-list-portlet\"/>' +\n                '</div>';\n    },\n\n    /** Row Template */\n    _templateRow: function(options) {\n        return  '<div id=\"' + options.id + '\" class=\"ui-list-id\">' +\n                    '<span class=\"ui-list-delete fa fa-trash\"/>' +\n                    '<span class=\"ui-list-name\">' + options.name + '</span>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-list.js\n ** module id = 55\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils', 'mvc/ui/ui-buttons'], function(Utils, Buttons) {\n\n/** Base class for options based ui elements **/\nvar Base = Backbone.View.extend({\n    // initialize\n    initialize: function(options) {\n        // link this\n        var self = this;\n\n        // configure options\n        this.options = Utils.merge(options, {\n            visible     : true,\n            data        : [],\n            id          : Utils.uid(),\n            error_text  : 'No options available.',\n            wait_text   : 'Please wait...',\n            multiple    : false\n        });\n\n        // create new element\n        this.setElement('<div class=\"ui-options\"/>');\n\n        // create elements\n        this.$message   = $('<div/>');\n        this.$options   = $(this._template(options));\n        this.$menu      = $('<div class=\"ui-options-menu\"/>');\n\n        // append\n        this.$el.append(this.$message);\n        this.$el.append(this.$menu);\n        this.$el.append(this.$options);\n\n        // add select/unselect all button\n        if (this.options.multiple) {\n            this.all_button = new Buttons.ButtonCheck({\n                onclick: function() {\n                    self.$('input').prop('checked', self.all_button.value() !== 0);\n                    self.trigger('change');\n                }\n            });\n            this.$menu.append(this.all_button.$el);\n        }\n\n        // hide input field\n        if (!this.options.visible) {\n            this.$el.hide();\n        }\n\n        // initialize data\n        this.update(this.options.data);\n\n        // set initial value\n        if (this.options.value !== undefined) {\n            this.value(this.options.value);\n        }\n\n        // add change event. fires on trigger\n        this.on('change', function() {\n            this.options.onchange && this.options.onchange(this.value());\n        });\n    },\n\n    /** Update options\n    */\n    update: function(options) {\n        // backup current value\n        var current = this._getValue();\n\n        // remove all options\n        this.$options.empty();\n\n        // add new options using single option templates or full template\n        if (this._templateOptions) {\n            // rebuild options using full template\n            this.$options.append(this._templateOptions(options));\n        } else {\n            // rebuild options using single option templates\n            for (var key in options) {\n                var $option = $(this._templateOption(options[key]));\n                $option.addClass('ui-option');\n                $option.tooltip({title: options[key].tooltip, placement: 'bottom'});\n                this.$options.append($option);\n            }\n        }\n\n        // add change events\n        var self = this;\n        this.$('input').on('change', function() {\n            self.value(self._getValue());\n            self.trigger('change');\n        });\n\n        // set previous value\n        this.value(current);\n\n        // data initialization has been completed\n        this.unwait();\n    },\n\n    /** Return/Set current value\n    */\n    value: function (new_value) {\n        // set new value if available\n        if (new_value !== undefined) {\n            // reset selection\n            this.$('input').prop('checked', false);\n            // set value\n            if (new_value !== null) {\n                // check if its an array\n                if (!(new_value instanceof Array)) {\n                    new_value = [new_value];\n                }\n                // update to new selection\n                for (var i in new_value) {\n                    this.$('input[value=\"' + new_value[i] + '\"]').first().prop('checked', true);\n                }\n            };\n        }\n        // get current value\n        var current = this._getValue();\n        if (this.all_button) {\n            var value = current;\n            if (!(value instanceof Array)) {\n                value = 0;\n            } else {\n                value = value.length;\n            }\n            this.all_button.value(value, this._size());\n        }\n        return current;\n    },\n\n    /** Check if selected value exists (or any if multiple)\n    */\n    exists: function(value) {\n        if (value !== undefined) {\n            if (!(value instanceof Array)) {\n                value = [value];\n            }\n            for (var i in value) {\n                if (this.$('input[value=\"' + value[i] + '\"]').length > 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    /** Return first available option\n    */\n    first: function() {\n        var options = this.$('input').first();\n        if (options.length > 0) {\n            return options.val();\n        } else {\n            return null;\n        }\n    },\n\n    /** Wait message during request processing\n    */\n    wait: function() {\n        if (this._size() == 0) {\n            this._messageShow(this.options.wait_text, 'info');\n            this.$options.hide();\n            this.$menu.hide();\n        }\n    },\n\n    /** Hide wait message\n    */\n    unwait: function() {\n        var total = this._size();\n        if (total == 0) {\n            this._messageShow(this.options.error_text, 'danger');\n            this.$options.hide();\n            this.$menu.hide();\n        } else {\n            this._messageHide();\n            this.$options.css('display', 'inline-block');\n            this.$menu.show();\n        }\n    },\n\n    /** Return current selection\n    */\n    _getValue: function() {\n        // track values in array\n        var selected = [];\n        this.$(':checked').each(function() {\n            selected.push($(this).val());\n        });\n\n        // get selected elements\n        if (!Utils.validate(selected)) {\n            return null;\n        }\n\n        // return multiple or single value\n        if (this.options.multiple) {\n            return selected;\n        } else {\n            return selected[0];\n        }\n    },\n\n    /** Returns the number of options\n    */\n    _size: function() {\n        return this.$('.ui-option').length;\n    },\n\n    /** Show message instead if options\n    */\n    _messageShow: function(text, status) {\n        this.$message.show();\n        this.$message.removeClass();\n        this.$message.addClass('ui-message alert alert-' + status);\n        this.$message.html(text);\n    },\n\n    /** Hide message\n    */\n    _messageHide: function() {\n        this.$message.hide();\n    },\n\n    /** Main template function\n    */\n    _template: function() {\n        return '<div class=\"ui-options-list\"/>';\n    }\n});\n\n/** Iconized **/\nvar BaseIcons = Base.extend({\n    _templateOption: function(pair) {\n        var id = Utils.uid();\n        return  '<div class=\"ui-option\">' +\n                    '<input id=\"' + id + '\" type=\"' + this.options.type + '\" name=\"' + this.options.id + '\" value=\"' + pair.value + '\"/>' +\n                    '<label class=\"ui-options-label\" for=\"' + id + '\">' + pair.label + '</label>' +\n                '</div>';\n    }\n});\n\n/** Radio button field **/\nvar Radio = {};\nRadio.View = BaseIcons.extend({\n    initialize: function(options) {\n        options.type = 'radio';\n        BaseIcons.prototype.initialize.call(this, options);\n    }\n});\n\n/** Checkbox options field **/\nvar Checkbox = {};\nCheckbox.View = BaseIcons.extend({\n    initialize: function(options) {\n        options.multiple = true;\n        options.type = 'checkbox';\n        BaseIcons.prototype.initialize.call(this, options);\n    }\n});\n\n/** Radio button options field styled as classic buttons **/\nvar RadioButton = {};\nRadioButton.View = Base.extend({\n    // initialize\n    initialize: function(options) {\n        Base.prototype.initialize.call(this, options);\n    },\n\n    /** Return/Set current value\n    */\n    value: function (new_value) {\n        // set new value\n        if (new_value !== undefined) {\n            this.$('input').prop('checked', false);\n            this.$('label').removeClass('active');\n            this.$('[value=\"' + new_value + '\"]').prop('checked', true).closest('label').addClass('active');\n        }\n\n        // get and return value\n        return this._getValue();\n    },\n\n    /** Template for a single option\n    */\n    _templateOption: function(pair) {\n        var cls = 'fa ' + pair.icon;\n        if (!pair.label) {\n            cls += ' no-padding';\n        }\n        var tmpl =  '<label class=\"btn btn-default\">';\n        if (pair.icon) {\n            tmpl +=     '<i class=\"' + cls + '\"/>';\n        }\n        tmpl +=         '<input type=\"radio\" name=\"' + this.options.id + '\" value=\"' + pair.value + '\"/>';\n        if (pair.label) {\n            tmpl +=         pair.label;\n        }\n        tmpl +=     '</label>';\n        return tmpl;\n    },\n\n    /** Main template function\n    */\n    _template: function() {\n        return '<div class=\"btn-group ui-radiobutton\" data-toggle=\"buttons\"/>';\n    }\n});\n\nreturn {\n    Base        : Base,\n    BaseIcons   : BaseIcons,\n    Radio       : Radio,\n    RadioButton : RadioButton,\n    Checkbox    : Checkbox\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-options.js\n ** module id = 56\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils'], function(Utils) {\n\n// return\nvar View = Backbone.View.extend({\n    // defaults options\n    optionsDefault: {\n        title_new       : '',\n        operations      : null,\n        onnew           : null,\n        max             : null,\n        onchange        : null\n    },\n    \n    // initialize\n    initialize : function(options) {\n        // configure\n        this.visible    = false;\n        this.$nav       = null;\n        this.$content   = null;\n        this.first_tab  = null;\n        this.current_id = null;\n            \n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n        \n        // create tabs\n        var $tabs = $(this._template(this.options));\n        \n        // link elements\n        this.$nav       = $tabs.find('.tab-navigation');\n        this.$content   = $tabs.find('.tab-content');\n        \n        // create new element\n        this.setElement($tabs);\n        \n        // clear list\n        this.list = {};\n        \n        // link this\n        var self = this;\n            \n        // append operations\n        if (this.options.operations) {\n            $.each(this.options.operations, function(name, item) {\n                item.$el.prop('id', name);\n                self.$nav.find('.operations').append(item.$el);\n            });\n        }\n        \n        // add built-in add-new-tab tab\n        if (this.options.onnew) {\n            // create tab object\n            var $tab_new = $(this._template_tab_new(this.options));\n            \n            // append to navbar\n            this.$nav.append($tab_new);\n            \n            // add tooltip\n            $tab_new.tooltip({title: 'Add a new tab', placement: 'bottom', container: self.$el});\n            \n            // link click event\n            $tab_new.on('click', function(e) {\n                $tab_new.tooltip('hide');\n                self.options.onnew();\n            });\n        }\n    },\n    \n    // size\n    size: function() {\n        return _.size(this.list);\n    },\n    \n    // front\n    current: function() {\n        return this.$el.find('.tab-pane.active').attr('id');\n    },\n    \n    // append\n    add: function(options) {\n        // self\n        var self = this;\n            \n        // get tab id\n        var id = options.id;\n\n        // create tab object\n        var $tab_title      = $(this._template_tab(options));\n        var $tab_content    = $(this._template_tab_content(options));\n        \n        // add to list\n        this.list[id] = options.ondel ? true : false;\n            \n        // add a new tab either before the add-new-tab tab or behind the last tab\n        if (this.options.onnew) {\n            this.$nav.find('#new-tab').before($tab_title);\n        } else {\n            this.$nav.append($tab_title);\n        }\n        \n        // add content\n        $tab_content.append(options.$el);\n        this.$content.append($tab_content);\n        \n        // activate this tab if this is the first tab\n        if (this.size() == 1) {\n            $tab_title.addClass('active');\n            $tab_content.addClass('active');\n            this.first_tab = id;\n        }\n        \n        // hide add tab\n        if (this.options.max && this.size() >= this.options.max) {\n            this.$el.find('#new-tab').hide();\n        }\n        \n        // add click event to remove tab\n        if (options.ondel) {\n            var $del_icon = $tab_title.find('#delete');\n            $del_icon.tooltip({title: 'Delete this tab', placement: 'bottom', container: self.$el});\n            $del_icon.on('click', function() {\n                $del_icon.tooltip('destroy');\n                self.$el.find('.tooltip').remove();\n                options.ondel();\n                return false;\n            });\n        }\n        \n        // add custom click event handler\n        $tab_title.on('click', function(e) {\n            // prevent default\n            e.preventDefault();\n            \n            // click\n            if (options.onclick) {\n                options.onclick();\n            } else {\n                self.show(id);\n            }\n        });\n        \n        // initialize current id\n        if (!this.current_id) {\n            this.current_id = id;\n        }\n    },\n    \n    // delete tab\n    del: function(id) {\n        // delete tab from dom\n        this.$el.find('#tab-' + id).remove();\n        this.$el.find('#' + id).remove();\n        \n        // check if first tab has been deleted\n        if (this.first_tab == id) {\n            this.first_tab = null;\n        }\n        \n        // show first tab\n        if (this.first_tab != null) {\n            this.show(this.first_tab);\n        }\n        \n        // delete from list\n        if (this.list[id]) {\n            delete this.list[id];\n        }\n        \n        // show add tab\n        if (this.size() < this.options.max) {\n            this.$el.find('#new-tab').show();\n        }\n    },\n    \n    // delete tab\n    delRemovable: function() {\n        for (var id in this.list) {\n            this.del(id);\n        }\n    },\n    \n    // show\n    show: function(id){\n        // show tab view\n        this.$el.fadeIn('fast');\n        this.visible = true;\n        \n        // show selected tab\n        if (id) {\n            // reassign active class\n            this.$el.find('#tab-' + this.current_id).removeClass('active');\n            this.$el.find('#' + this.current_id).removeClass('active');\n            this.$el.find('#tab-' + id).addClass('active');\n            this.$el.find('#' + id).addClass('active');\n            \n            // update current id\n            this.current_id = id;\n        }\n        \n        // change\n        if (this.options.onchange) {\n            this.options.onchange(id);\n        }\n    },\n    \n    // hide\n    hide: function(){\n        this.$el.fadeOut('fast');\n        this.visible = false;\n    },\n\n    // hide operation\n    hideOperation: function(id) {\n        this.$nav.find('#' + id).hide();\n    },\n\n    // show operation\n    showOperation: function(id) {\n        this.$nav.find('#' + id).show();\n    },\n    \n    // set operation\n    setOperation: function(id, callback) {\n        var $el = this.$nav.find('#' + id);\n        $el.off('click');\n        $el.on('click', callback);\n    },\n    \n    // title\n    title: function(id, new_title) {\n        var $el = this.$el.find('#tab-title-text-' + id);\n        if (new_title) {\n            $el.html(new_title);\n        }\n        return $el.html();\n    },\n    \n    // retitle\n    retitle: function(new_title) {\n        var index = 0;\n        for (var id in this.list) {\n            this.title(id, ++index + ': ' + new_title);\n        }\n    },\n    \n    // fill template\n    _template: function(options) {\n        return  '<div class=\"ui-tabs tabbable tabs-left\">' +\n                    '<ul id=\"tab-navigation\" class=\"tab-navigation nav nav-tabs\">' +\n                        '<div class=\"operations\" style=\"float: right; margin-bottom: 4px;\"></div>' +\n                    '</ul>'+\n                    '<div id=\"tab-content\" class=\"tab-content\"/>' +\n                '</div>';\n    },\n    \n    // fill template tab\n    _template_tab_new: function(options) {\n        return  '<li id=\"new-tab\">' +\n                    '<a href=\"javascript:void(0);\">' +\n                        '<i class=\"ui-tabs-add fa fa-plus-circle\"/>' +\n                            options.title_new +\n                    '</a>' +\n                '</li>';\n    },\n    \n    // fill template tab\n    _template_tab: function(options) {\n        var tmpl =  '<li id=\"tab-' + options.id + '\" class=\"tab-element\">' +\n                        '<a id=\"tab-title-link-' + options.id + '\" title=\"\" href=\"#' + options.id + '\" data-original-title=\"\">' +\n                            '<span id=\"tab-title-text-' + options.id + '\" class=\"tab-title-text\">' + options.title + '</span>';\n        \n        if (options.ondel) {\n            tmpl +=         '<i id=\"delete\" class=\"ui-tabs-delete fa fa-minus-circle\"/>';\n        }\n        \n        tmpl +=         '</a>' +\n                    '</li>';\n        \n        return tmpl;\n    },\n    \n    // fill template tab content\n    _template_tab_content: function(options) {\n        return  '<div id=\"' + options.id + '\" class=\"tab-pane\"/>';\n    }\n});\n\nreturn {\n    View : View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-tabs.js\n ** module id = 57\n ** module chunks = 2\n **/","/** This renders the content of the ftp popup **/\ndefine(['utils/utils'], function(Utils) {\nreturn Backbone.View.extend({\n    // render\n    initialize: function(options) {\n        // link options\n        this.options = Utils.merge(options, {\n            class_add       : 'upload-icon-button fa fa-square-o',\n            class_remove    : 'upload-icon-button fa fa-check-square-o',\n            class_partial   : 'upload-icon-button fa fa-minus-square-o',\n            collection      : null,\n            onchange        : function() {},\n            onadd           : function() {},\n            onremove        : function() {}\n        });\n\n        // link this\n        var self = this;\n\n        // link app\n        this.collection = this.options.collection;\n\n        // set template\n        this.setElement(this._template());\n\n        // list of rows\n        this.rows = [];\n\n        // load extension\n        Utils.get({\n            url     : galaxy_config.root + 'api/remote_files',\n            success : function(ftp_files) { self._fill(ftp_files); },\n            error   : function() { self._fill(); }\n        });\n    },\n\n    // events\n    events: {\n        'mousedown': function(e) { e.preventDefault(); }\n    },\n\n    // fill table\n    _fill: function(ftp_files) {\n        if (ftp_files && ftp_files.length > 0) {\n            // add table\n            this.$el.find('#upload-ftp-content').html($(this._templateTable()));\n\n            // add files to table\n            var size = 0;\n            for (index in ftp_files) {\n                this.rows.push(this._add(ftp_files[index]));\n                size += ftp_files[index].size;\n            }\n\n            // update stats\n            this.$el.find('#upload-ftp-number').html(ftp_files.length + ' files');\n            this.$el.find('#upload-ftp-disk').html(Utils.bytesToString (size, true));\n\n            // add event handler to select/unselect all\n            if (this.collection) {\n                var self = this;\n                this.$('._has_collection').show();\n                this.$select_all = $('#upload-selectall');\n                this.$select_all.addClass(this.options.class_add);\n                this.$select_all.on('click', function() {\n                    var add = self.$select_all.hasClass(self.options.class_add);\n                    for (index in ftp_files) {\n                        var ftp_file = ftp_files[index];\n                        var model_index = self._find(ftp_file);\n                        if(!model_index && add || model_index && !add) {\n                            self.rows[index].trigger('click');\n                        }\n                    }\n                });\n                this._refresh();\n            }\n        } else {\n            this.$el.find('#upload-ftp-content').html($(this._templateInfo()));\n        }\n        this.$el.find('#upload-ftp-wait').hide();\n    },\n\n    // add\n    _add: function(ftp_file) {\n        // link this\n        var self = this;\n\n        // create new item\n        var $it = $(this._templateRow(ftp_file));\n\n        // identify icon\n        var $icon = $it.find('.icon');\n\n        // append to table\n        $(this.el).find('tbody').append($it);\n\n        // collection mode with add/remove triggers\n        if (this.collection) {\n            // find model and set initial 'add' icon class\n            var icon_class = '';\n            if (this._find(ftp_file)) {\n                icon_class = this.options.class_remove;\n            } else {\n                icon_class = this.options.class_add;\n            }\n            $icon.addClass(icon_class);\n\n            // click triggers add/remove events\n            $it.on('click', function() {\n                var model_index = self._find(ftp_file);\n                $icon.removeClass();\n                if (!model_index) {\n                    self.options.onadd(ftp_file);\n                    $icon.addClass(self.options.class_remove);\n                } else {\n                    self.options.onremove(model_index);\n                    $icon.addClass(self.options.class_add);\n                }\n                self._refresh();\n            });\n        } else {\n            // click triggers only change\n            $it.on('click', function() {\n                self.options.onchange(ftp_file);\n            });\n        }\n\n        // return dom handler\n        return $it;\n    },\n\n    // refresh\n    _refresh: function() {\n        var filtered = this.collection.where({file_mode: 'ftp', enabled: true});\n        this.$select_all.removeClass();\n        if (filtered.length == 0) {\n            this.$select_all.addClass(this.options.class_add);\n        } else {\n            if (filtered.length == this.rows.length) {\n                this.$select_all.addClass(this.options.class_remove);\n            } else {\n                this.$select_all.addClass(this.options.class_partial);\n            }\n        }\n    },\n\n    // get model index\n    _find: function(ftp_file) {\n        var item = this.collection.findWhere({\n            file_path   : ftp_file.path,\n            file_mode   : 'ftp',\n            enabled     : true\n        });\n        return item && item.get('id');\n    },\n\n    // template row\n    _templateRow: function(options) {\n        return  '<tr class=\"upload-ftp-row\">' +\n                    '<td class=\"_has_collection\" style=\"display: none;\"><div class=\"icon\"/></td>' +\n                    '<td class=\"ftp-name\">' + options.path + '</td>' +\n                    '<td class=\"ftp-size\">' + Utils.bytesToString(options.size) + '</td>' +\n                    '<td class=\"ftp-time\">' + options.ctime + '</td>' +\n                '</tr>';\n    },\n\n    // load table template\n    _templateTable: function() {\n        return  '<span style=\"whitespace: nowrap; float: left;\">Available files: </span>' +\n                '<span style=\"whitespace: nowrap; float: right;\">' +\n                    '<span class=\"upload-icon fa fa-file-text-o\"/>' +\n                    '<span id=\"upload-ftp-number\"/>&nbsp;&nbsp;' +\n                    '<span class=\"upload-icon fa fa-hdd-o\"/>' +\n                    '<span id=\"upload-ftp-disk\"/>' +\n                '</span>' +\n                '<table class=\"grid\" style=\"float: left;\">' +\n                    '<thead>' +\n                        '<tr>' +\n                            '<th class=\"_has_collection\" style=\"display: none;\"><div id=\"upload-selectall\"></th>' +\n                            '<th>Name</th>' +\n                            '<th>Size</th>' +\n                            '<th>Created</th>' +\n                        '</tr>' +\n                    '</thead>' +\n                    '<tbody/>' +\n                '</table>';\n    },\n\n    // load table template\n    _templateInfo: function() {\n        return  '<div class=\"upload-ftp-warning warningmessage\">' +\n                    'Your FTP directory does not contain any files.' +\n                '</div>';\n    },\n\n    // load html template\n    _template: function() {\n        return  '<div class=\"upload-ftp\">' +\n                    '<div id=\"upload-ftp-wait\" class=\"upload-ftp-wait fa fa-spinner fa-spin\"/>' +\n                    '<div class=\"upload-ftp-help\">This Galaxy server allows you to upload files via FTP. To upload some files, log in to the FTP server at <strong>' + this.options.ftp_upload_site + '</strong> using your Galaxy credentials (email address and password).</div>' +\n                    '<div id=\"upload-ftp-content\"/>' +\n                '<div>';\n    }\n});\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/upload/upload-ftp.js\n ** module id = 58\n ** module chunks = 2\n **/","/** This renders the content of the settings popup, allowing users to specify flags i.e. for space-to-tab conversion **/\ndefine(['utils/utils'], function(Utils) {\nreturn Backbone.View.extend({\n    // options\n    options: {\n        class_check     : 'upload-icon-button fa fa-check-square-o',\n        class_uncheck   : 'upload-icon-button fa fa-square-o'\n    },\n\n    // initialize\n    initialize: function(app) {\n        // link app\n        this.app = app;\n\n        // link this\n        var self = this;\n\n        // set template\n        this.setElement(this._template());\n\n        // link model\n        this.model = this.app.model;\n\n        // ui event: space-to-tab\n        this.$('#upload-space-to-tab').on('click', function() {\n            self._switchState('#upload-space-to-tab', 'space_to_tab');\n        });\n\n        // ui event: to-posix-lines\n        this.$('#upload-to-posix-lines').on('click', function() {\n            self._switchState('#upload-to-posix-lines', 'to_posix_lines');\n        });\n\n        // render\n        this.render();\n    },\n\n    // events\n    events: {\n        'mousedown' : function(e) { e.preventDefault(); }\n    },\n\n    // render\n    render: function() {\n        // render states\n        this._renderState('#upload-space-to-tab', this.model.get('space_to_tab'));\n        this._renderState('#upload-to-posix-lines', this.model.get('to_posix_lines'));\n\n        // disable options\n        var $cover = this.$('#upload-settings-cover');\n        if (!this.model.get('enabled')) {\n            $cover.show();\n        } else {\n            $cover.hide();\n        }\n    },\n\n    // switch state\n    _switchState: function (element_id, parameter_id) {\n        if (this.model.get('enabled')) {\n            var checked = !this.model.get(parameter_id);\n            this.model.set(parameter_id, checked);\n            this._renderState(element_id, checked);\n        }\n    },\n\n    // render state\n    _renderState: function (element_id, checked) {\n        var $it = this.$(element_id);\n        $it.removeClass();\n        if (checked) {\n            $it.addClass(this.options.class_check);\n        } else {\n            $it.addClass(this.options.class_uncheck);\n        }\n    },\n\n    // load template\n    _template: function() {\n        return  '<div class=\"upload-settings\" style=\"position: relative;\">' +\n                    '<div id=\"upload-settings-cover\" class=\"upload-settings-cover\"/>' +\n                    '<table class=\"ui-table-striped\">' +\n                        '<tbody>' +\n                            '<tr>' +\n                                '<td><div id=\"upload-space-to-tab\"/></td>' +\n                                '<td>Convert spaces to tabs</td>' +\n                            '</tr>' +\n                            '<tr>' +\n                                '<td><div id=\"upload-to-posix-lines\"/></td>' +\n                                '<td>Use POSIX standard</td>' +\n                            '</tr>' +\n                        '</tbody>' +\n                    '</table>' +\n                '</div>';\n    }\n});\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/upload/upload-settings.js\n ** module id = 59\n ** module chunks = 2\n **/","(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n\n}(function () {\n//=============================================================================\n\n    jQuery.fn.extend({\n        hoverhighlight : function $hoverhighlight( scope, color ){\n            scope = scope || 'body';\n            if( !this.size() ){ return this; }\n\n            $( this ).each( function(){\n                var $this = $( this ),\n                    targetSelector = $this.data( 'target' );\n\n                if( targetSelector ){\n                    $this.mouseover( function( ev ){\n                        $( targetSelector, scope ).css({\n                            background: color\n                        });\n                    })\n                    .mouseout( function( ev ){\n                        $( targetSelector ).css({\n                            background: ''\n                        });\n                    });\n                }\n            });\n            return this;\n        }\n    });\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/ui/hoverhighlight.js\n ** module id = 62\n ** module chunks = 2\n **/","// from: https://raw.githubusercontent.com/umdjs/umd/master/jqueryPlugin.js\n// Uses AMD or browser globals to create a jQuery plugin.\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        //TODO: So...this turns out to be an all or nothing thing. If I load jQuery in the define below, it will\n        //  (of course) wipe the old jquery *and all the plugins loaded into it*. So the define below *is still\n        //  relying on jquery being loaded globally* in order to preserve plugins.\n        define([], factory);\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n\n}(function () {\n    var _l = window._l || function( s ){ return s; };\n\n    /** searchInput: (jQuery plugin)\n     *      Creates a search input, a clear button, and loading indicator\n     *      within the selected node.\n     *\n     *      When the user either presses return or enters some minimal number\n     *      of characters, a callback is called. Pressing ESC when the input\n     *      is focused will clear the input and call a separate callback.\n     */\n    function searchInput( parentNode, options ){\n//TODO: consolidate with tool menu functionality, use there\n        var KEYCODE_ESC     = 27,\n            KEYCODE_RETURN  = 13,\n            $parentNode     = $( parentNode ),\n            firstSearch     = true,\n            defaults = {\n                initialVal      : '',\n                name            : 'search',\n                placeholder     : 'search',\n                classes         : '',\n                onclear         : function(){},\n                onfirstsearch   : null,\n                onsearch        : function( inputVal ){},\n                minSearchLen    : 0,\n                escWillClear    : true,\n                oninit          : function(){}\n            };\n\n        // .................................................................... input rendering and events\n        // visually clear the search, trigger an event, and call the callback\n        function clearSearchInput( event ){\n            var $input = $( this ).parent().children( 'input' );\n            //console.debug( this, 'clear', $input );\n            $input.focus().val( '' ).trigger( 'clear:searchInput' );\n            options.onclear();\n        }\n\n        // search for searchTerms, trigger an event, call the appropo callback (based on whether this is the first)\n        function search( event, searchTerms ){\n            //console.debug( this, 'searching', searchTerms );\n            //TODO: I don't think this is classic jq custom event form? search.searchInput?\n            $( this ).trigger( 'search:searchInput', searchTerms );\n            if( typeof options.onfirstsearch === 'function' && firstSearch ){\n                firstSearch = false;\n                options.onfirstsearch( searchTerms );\n            } else {\n                options.onsearch( searchTerms );\n            }\n        }\n\n        // .................................................................... input rendering and events\n        function inputTemplate(){\n            // class search-query is bootstrap 2.3 style that now lives in base.less\n            return [ '<input type=\"text\" name=\"', options.name, '\" placeholder=\"', options.placeholder, '\" ',\n                            'class=\"search-query ', options.classes, '\" ', '/>' ].join( '' );\n        }\n\n        // the search input that responds to keyboard events and displays the search value\n        function $input(){\n            return $( inputTemplate() )\n                // select all text on a focus\n                .focus( function( event ){\n                    $( this ).select();\n                })\n                // attach behaviors to esc, return if desired, search on some min len string\n                .keyup( function( event ){\n                    event.preventDefault();\n                    event.stopPropagation();\n//TODO: doesn't work\n                    if( !$( this ).val() ){ $( this ).blur(); }\n\n                    // esc key will clear if desired\n                    if( event.which === KEYCODE_ESC && options.escWillClear ){\n                        clearSearchInput.call( this, event );\n\n                    } else {\n                        var searchTerms = $( this ).val();\n                        // return key or the search string len > minSearchLen (if not 0) triggers search\n                        if( ( event.which === KEYCODE_RETURN )\n                        ||  ( options.minSearchLen && searchTerms.length >= options.minSearchLen ) ){\n                            search.call( this, event, searchTerms );\n                        } else if( !searchTerms.length ){\n                            clearSearchInput.call( this, event );\n                        }\n                    }\n                })\n                .on( 'change', function( event ){\n                    search.call( this, event, $( this ).val() );\n                })\n                .val( options.initialVal );\n        }\n\n        // .................................................................... clear button rendering and events\n        // a button for clearing the search bar, placed on the right hand side\n        function $clearBtn(){\n            return $([ '<span class=\"search-clear fa fa-times-circle\" ',\n                             'title=\"', _l( 'clear search (esc)' ), '\"></span>' ].join('') )\n            .tooltip({ placement: 'bottom' })\n            .click( function( event ){\n                clearSearchInput.call( this, event );\n            });\n        }\n\n        // .................................................................... loadingIndicator rendering\n        // a button for clearing the search bar, placed on the right hand side\n        function $loadingIndicator(){\n            return $([ '<span class=\"search-loading fa fa-spinner fa-spin\" ',\n                             'title=\"', _l( 'loading...' ), '\"></span>' ].join('') )\n                .hide().tooltip({ placement: 'bottom' });\n        }\n\n        // .................................................................... commands\n        // visually swap the load, clear buttons\n        function toggleLoadingIndicator(){\n            $parentNode.find( '.search-loading' ).toggle();\n            $parentNode.find( '.search-clear' ).toggle();\n        }\n\n        // .................................................................... init\n        // string command (not constructor)\n        if( jQuery.type( options ) === 'string' ){\n            if( options === 'toggle-loading' ){\n                toggleLoadingIndicator();\n            }\n            return $parentNode;\n        }\n\n        // initial render\n        if( jQuery.type( options ) === 'object' ){\n            options = jQuery.extend( true, {}, defaults, options );\n        }\n        //NOTE: prepended\n        return $parentNode.addClass( 'search-input' ).prepend([ $input(), $clearBtn(), $loadingIndicator() ]);\n    }\n\n    // as jq plugin\n    jQuery.fn.extend({\n        searchInput : function $searchInput( options ){\n            return this.each( function(){\n                return searchInput( this, options );\n            });\n        }\n    });\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/ui/search-input.js\n ** module id = 63\n ** module chunks = 2\n **/","define([], function(){\n// Alphanumeric/natural sort fn\nfunction naturalSort(a, b) {\n    // setup temp-scope variables for comparison evauluation\n    var re = /(-?[0-9\\.]+)/g,\n        x = a.toString().toLowerCase() || '',\n        y = b.toString().toLowerCase() || '',\n        nC = String.fromCharCode(0),\n        xN = x.replace( re, nC + '$1' + nC ).split(nC),\n        yN = y.replace( re, nC + '$1' + nC ).split(nC),\n        xD = (new Date(x)).getTime(),\n        yD = xD ? (new Date(y)).getTime() : null;\n    // natural sorting of dates\n    if ( yD ) {\n        if ( xD < yD ) { return -1; }\n        else if ( xD > yD ) { return 1; }\n    }\n    // natural sorting through split numeric strings and default strings\n    var oFxNcL, oFyNcL;\n    for ( var cLoc = 0, numS = Math.max(xN.length, yN.length); cLoc < numS; cLoc++ ) {\n        oFxNcL = parseFloat(xN[cLoc]) || xN[cLoc];\n        oFyNcL = parseFloat(yN[cLoc]) || yN[cLoc];\n        if (oFxNcL < oFyNcL) { return -1; }\n        else if (oFxNcL > oFyNcL) { return 1; }\n    }\n    return 0;\n}\n\nreturn naturalSort;\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/utils/natural-sort.js\n ** module id = 65\n ** module chunks = 2\n **/","/*\n    galaxy upload plugins - requires FormData and XMLHttpRequest\n*/\n;(function($){\n    // add event properties\n    jQuery.event.props.push(\"dataTransfer\");\n\n    /**\n        Posts file data to the API\n    */\n    $.uploadpost = function (config) {\n        // parse options\n        var cnf = $.extend({}, {\n            data            : {},\n            success         : function() {},\n            error           : function() {},\n            progress        : function() {},\n            url             : null,\n            maxfilesize     : 2048,\n            error_filesize  : 'File exceeds 2GB. Please use an FTP client.',\n            error_default   : 'Please make sure the file is available.',\n            error_server    : 'Upload request failed.',\n            error_login     : 'Uploads require you to log in.'\n        }, config);\n\n        // link data\n        var data = cnf.data;\n\n        // check errors\n        if (data.error_message) {\n            cnf.error(data.error_message);\n            return;\n        }\n\n        // construct form data\n        var form = new FormData();\n        for (var key in data.payload) {\n            form.append(key, data.payload[key]);\n        }\n\n        // add files to submission\n        var sizes = 0;\n        for (var key in data.files) {\n            var d = data.files[key];\n            form.append(d.name, d.file, d.file.name);\n            sizes += d.file.size;\n        }\n\n        // check file size, unless it's an ftp file\n        if (sizes > 1048576 * cnf.maxfilesize) {\n            cnf.error(cnf.error_filesize);\n            return;\n        }\n\n        // prepare request\n        xhr = new XMLHttpRequest();\n        xhr.open('POST', cnf.url, true);\n        xhr.setRequestHeader('Accept', 'application/json');\n        xhr.setRequestHeader('Cache-Control', 'no-cache');\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n        // captures state changes\n        xhr.onreadystatechange = function() {\n            // check for request completed, server connection closed\n            if (xhr.readyState == xhr.DONE) {\n                // parse response\n                var response = null;\n                if (xhr.responseText) {\n                    try {\n                        response = jQuery.parseJSON(xhr.responseText);\n                    } catch (e) {\n                        response = xhr.responseText;\n                    }\n                }\n                // pass any error to the error option\n                if (xhr.status < 200 || xhr.status > 299) {\n                    var text = xhr.statusText;\n                    if (xhr.status == 403) {\n                        text = cnf.error_login;\n                    } else if (xhr.status == 0) {\n                        text = cnf.error_server;\n                    } else if (!text) {\n                        text = cnf.error_default;\n                    }\n                    cnf.error(text + ' (' + xhr.status + ')');\n                } else {\n                    cnf.success(response);\n                }\n            }\n        }\n\n        // prepare upload progress\n        xhr.upload.addEventListener('progress', function(e) {\n            if (e.lengthComputable) {\n                cnf.progress(Math.round((e.loaded * 100) / e.total));\n            }\n        }, false);\n\n        // send request\n        console.debug('uploadbox::uploadpost() - Posting following data:');\n        console.debug(cnf);\n        xhr.send(form);\n    }\n\n    /**\n        Handles the upload events drag/drop etc.\n    */\n    $.fn.uploadinput = function(options) {\n        // initialize\n        var el = this;\n        var opts = $.extend({}, {\n            ondragover  : function() {},\n            ondragleave : function() {},\n            onchange    : function() {},\n            multiple    : false\n        }, options);\n\n        // append hidden upload field\n        var $input = $('<input type=\"file\" style=\"display: none\" ' + (opts.multiple && 'multiple' || '') + '/>');\n        el.append($input).change(function (e) {\n            opts.onchange(e.target.files);\n            $(this).val('');\n        });\n\n        // drag/drop events\n        el.on('drop', function (e) {\n            opts.ondragleave(e);\n            if(e.dataTransfer) {\n                opts.onchange(e.dataTransfer.files);\n                e.preventDefault();\n            }\n        });\n        el.on('dragover',  function (e) {\n            e.preventDefault();\n            opts.ondragover(e);\n        });\n        el.on('dragleave', function (e) {\n            e.stopPropagation();\n            opts.ondragleave(e);\n        });\n\n        // exports\n        return {\n            dialog: function () {\n                $input.trigger('click');\n            }\n        }\n    }\n\n    /**\n        Handles the upload queue and events such as drag/drop etc.\n    */\n    $.fn.uploadbox = function(options) {\n        // parse options\n        var opts = $.extend({}, {\n            dragover        : function() {},\n            dragleave       : function() {},\n            announce        : function(d) {},\n            initialize      : function(d) {},\n            progress        : function(d, m) {},\n            success         : function(d, m) {},\n            error           : function(d, m) { alert(m); },\n            complete        : function() {}\n        }, options);\n\n        // file queue\n        var queue = {};\n\n        // queue index/length counter\n        var queue_index = 0;\n        var queue_length = 0;\n\n        // indicates if queue is currently running\n        var queue_running = false;\n        var queue_stop = false;\n\n        // element\n        var uploadinput = $(this).uploadinput({\n            multiple    : true,\n            onchange    : function(files) { add(files); },\n            ondragover  : options.ondragover,\n            ondragleave : options.ondragleave\n        });\n\n        // add new files to upload queue\n        function add(files) {\n            if (files && files.length && !queue_running) {\n                var current_index = queue_index;\n                for (var i = 0; i < files.length; i++) {\n                    var index = String(queue_index++);\n                    queue[index] = files[i];\n                    opts.announce(index, queue[index]);\n                    queue_length++;\n                }\n                return current_index;\n            }\n        }\n\n        // remove file from queue\n        function remove(index) {\n            if (queue[index]) {\n                delete queue[index];\n                queue_length--;\n            }\n        }\n\n        // process an upload, recursive\n        function process() {\n            // validate\n            if (queue_length == 0 || queue_stop) {\n                queue_stop = false;\n                queue_running = false;\n                opts.complete();\n                return;\n            } else {\n                queue_running = true;\n            }\n\n            // get an identifier from the queue\n            var index = -1;\n            for (var key in queue) {\n                index = key;\n                break;\n            }\n\n            // get current file from queue\n            var file = queue[index];\n\n            // remove from queue\n            remove(index)\n\n            // create and submit data\n            $.uploadpost({\n                url      : opts.url,\n                data     : opts.initialize(index),\n                success  : function(message) { opts.success(index, message); process();},\n                error    : function(message) { opts.error(index, message); process();},\n                progress : function(percentage) { opts.progress(index, percentage); }\n            });\n        }\n\n        /*\n            public interface\n        */\n\n        // open file browser for selection\n        function select() {\n            uploadinput.dialog();\n        }\n\n        // remove all entries from queue\n        function reset(index) {\n            for (index in queue) {\n                remove(index);\n            }\n        }\n\n        // initiate upload process\n        function start() {\n            if (!queue_running) {\n                queue_running = true;\n                process();\n            }\n        }\n\n        // stop upload process\n        function stop() {\n            queue_stop = true;\n        }\n\n        // set options\n        function configure(options) {\n            opts = $.extend({}, opts, options);\n            return opts;\n        }\n\n        // verify browser compatibility\n        function compatible() {\n            return window.File && window.FormData && window.XMLHttpRequest && window.FileList;\n        }\n\n        // export functions\n        return {\n            'select'        : select,\n            'add'           : add,\n            'remove'        : remove,\n            'start'         : start,\n            'stop'          : stop,\n            'reset'         : reset,\n            'configure'     : configure,\n            'compatible'    : compatible\n        };\n    }\n})(jQuery);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/utils/uploadbox.js\n ** module id = 66\n ** module chunks = 2\n **/","// dependencies\ndefine([\"galaxy.masthead\", \"mvc/ui/ui-frames\"], function(mod_masthead, Frames) {\n\n/** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\nvar GalaxyFrame = Backbone.View.extend({\n    // base element\n    el_main: 'body',\n        \n    // frame active/disabled\n    active: false,\n    \n    // button active\n    button_active: null,\n    \n    // button load\n    button_load  : null,\n    \n    // initialize\n    initialize : function(options) {\n        // add to masthead menu\n        var self = this;\n        \n        // create frames\n        this.frames = new Frames.View({\n            visible: false,\n        });\n\n        // add activate icon\n        this.button_active = new mod_masthead.GalaxyMastheadIcon({\n            icon        : 'fa-th',\n            tooltip     : 'Enable/Disable Scratchbook',\n            onclick     : function() { self._activate(); },\n            onunload    : function() {\n                if (self.frames.length() > 0) {\n                    return \"You opened \" + self.frames.length() + \" frame(s) which will be lost.\";\n                }\n            }\n        });\n        \n        // add to masthead\n        Galaxy.masthead.append(this.button_active);\n\n        // add load icon\n        this.button_load = new mod_masthead.GalaxyMastheadIcon({\n            icon        : 'fa-eye',\n            tooltip     : 'Show/Hide Scratchbook',\n            onclick     : function(e) {\n                if (self.frames.visible) {\n                    self.frames.hide();\n                } else {\n                    self.frames.show();\n                }\n            },\n            with_number : true\n        });\n\n        // add to masthead\n        Galaxy.masthead.append(this.button_load);\n        \n        // create\n        this.setElement(this.frames.$el);\n        \n        // append to main\n        $(this.el_main).append(this.$el);\n        \n        // refresh menu\n        this.frames.setOnChange(function() {\n            self._refresh();\n        });\n        this._refresh();\n    },\n\n    /**\n     * Add a dataset to the frames.\n     */\n    add_dataset: function(dataset_id) {\n        var self = this;\n        require(['mvc/data'], function(DATA) {\n            var dataset = new DATA.Dataset({ id: dataset_id });\n            $.when( dataset.fetch() ).then( function() {\n                // Construct frame config based on dataset's type.\n                var frame_config = {\n                        title: dataset.get('name')\n                    },\n                    // HACK: For now, assume 'tabular' and 'interval' are the only \n                    // modules that contain tabular files. This needs to be replaced\n                    // will a is_datatype() function.\n                    is_tabular = _.find(['tabular', 'interval'], function(data_type) { \n                        return dataset.get('data_type').indexOf(data_type) !== -1;\n                    });\n\n                // Use tabular chunked display if dataset is tabular; otherwise load via URL.\n                if (is_tabular) {\n                    var tabular_dataset = new DATA.TabularDataset(dataset.toJSON());\n                    _.extend(frame_config, {\n                        type: 'other',\n                        content: function( parent_elt ) {\n                            DATA.createTabularDatasetChunkedView({\n                                model: tabular_dataset,\n                                parent_elt: parent_elt,\n                                embedded: true,\n                                height: '100%'\n                            });\n                        }\n                    });\n                }\n                else {\n                    _.extend(frame_config, {\n                        type: 'url',\n                        content: galaxy_config.root + 'datasets/' + \n                                 dataset.id + '/display/?preview=True'\n                    });\n                }\n\n                self.add(frame_config);\n\n            });\n        });\n\n    },\n\n    /**\n     * Add a trackster visualization to the frames.\n     */\n    add_trackster_viz: function(viz_id) {\n        var self = this;\n        require(['viz/visualization', 'viz/trackster'], function(visualization, trackster) {\n            var viz = new visualization.Visualization({id: viz_id});\n            $.when( viz.fetch() ).then( function() {\n                var ui = new trackster.TracksterUI(galaxy_config.root);\n\n                // Construct frame config based on dataset's type.\n                var frame_config = {\n                        title: viz.get('name'),\n                        type: 'other',\n                        content: function(parent_elt) {\n                            // Create view config.\n                            var view_config = {\n                                container: parent_elt,\n                                name: viz.get('title'),\n                                id: viz.id,\n                                // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n                                dbkey: viz.get('dbkey'),\n                                stand_alone: false\n                            },\n                            latest_revision = viz.get('latest_revision'),\n                            drawables = latest_revision.config.view.drawables;\n\n                            // Set up datasets in drawables.\n                            _.each(drawables, function(d) {\n                                d.dataset = {\n                                    hda_ldda: d.hda_ldda,\n                                    id: d.dataset_id\n                                };\n                            });\n\n                            view = ui.create_visualization(view_config,\n                                                           latest_revision.config.viewport,\n                                                           latest_revision.config.view.drawables,\n                                                           latest_revision.config.bookmarks,\n                                                           false);\n                        }\n                    };\n\n                self.add(frame_config);\n            });\n        });\n    },\n    \n    /**\n     * Add and display a new frame/window based on options.\n     */\n    add: function(options){\n        // open new tab\n        if (options.target == '_blank'){\n            window.open(options.content);\n            return;\n        }\n        \n        // reload entire window\n        if (options.target == '_top' || options.target == '_parent' || options.target == '_self'){\n            window.location = options.content;\n            return;\n        }\n        \n        // validate\n        if (!this.active){\n            // fix url if main frame is unavailable\n            var $galaxy_main = $(window.parent.document).find('#galaxy_main');\n            if (options.target == 'galaxy_main' || options.target == 'center'){\n                if ($galaxy_main.length === 0){\n                    var href = options.content;\n                    if (href.indexOf('?') == -1)\n                        href += '?';\n                    else\n                        href += '&';\n                    href += 'use_panels=True';\n                    window.location = href;\n                } else {\n                    $galaxy_main.attr('src', options.content);\n                }\n            } else\n                window.location = options.content;\n                \n            // stop\n            return;\n        }\n\n        // add to frames view\n        this.frames.add(options);\n    },\n    \n    // activate/disable panel\n    _activate: function (){\n        // check\n        if (this.active){\n            // disable\n            this.active = false;\n\n            // toggle\n            this.button_active.untoggle();\n    \n            // hide panel\n            this.frames.hide();\n        } else {\n            // activate\n            this.active = true;\n        \n            // untoggle\n            this.button_active.toggle();\n        }\n    },\n    \n    // update frame counter\n    _refresh: function(){\n        // update on screen counter\n        this.button_load.number(this.frames.length());\n        \n        // check\n        if(this.frames.length() === 0)\n            this.button_load.hide();\n        else\n            this.button_load.show();\n            \n        // check\n        if (this.frames.visible) {\n            this.button_load.toggle();\n        } else {\n            this.button_load.untoggle();\n        }\n    }\n});\n\n// return\nreturn {\n    GalaxyFrame: GalaxyFrame\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/galaxy.frame.js\n ** module id = 69\n ** module chunks = 2\n **/","// dependencies\ndefine(['galaxy.masthead'], function( Masthead ) {\n\n/** GalaxyMenu uses the GalaxyMasthead class in order to add menu items and icons to the Masthead **/\nvar GalaxyMenu = Backbone.Model.extend({\n    initialize: function( options ) {\n        this.options = options.config;\n        this.masthead  = options.masthead;\n        this.create();\n    },\n\n    // default menu\n    create: function() {\n        //\n        // Analyze data tab.\n        //\n        var tab_analysis = new Masthead.GalaxyMastheadTab({\n            id              : 'analysis',\n            title           : 'Analyze Data',\n            content         : '',\n            title_attribute : 'Analysis home view'\n        });\n        this.masthead.append( tab_analysis );\n\n        //\n        // Workflow tab.\n        //\n\n        var workflow_options = {\n            id              : 'workflow',\n            title           : 'Workflow',\n            content         : 'workflow',\n            title_attribute : 'Chain tools into workflows'\n        }\n        if ( !Galaxy.user.id ) {\n            workflow_options.disabled = true; // disable workflows for anonymous users\n        }\n\n        var tab_workflow = new Masthead.GalaxyMastheadTab( workflow_options );\n        this.masthead.append( tab_workflow );\n\n        //\n        // 'Shared Items' or Libraries tab.\n        //\n        var tab_shared = new Masthead.GalaxyMastheadTab({\n            id              : 'shared',\n            title           : 'Shared Data',\n            content         : 'library/index',\n            title_attribute : 'Access published resources'\n        });\n\n        tab_shared.add({\n            title   : 'Data Libraries',\n            content : 'library/index'\n        });\n\n        tab_shared.add({\n            title   : 'Data Libraries Beta',\n            content : 'library/list',\n            divider : true\n        });\n\n        tab_shared.add({\n            title   : 'Published Histories',\n            content : 'history/list_published'\n        });\n\n        tab_shared.add({\n            title   : 'Published Workflows',\n            content : 'workflow/list_published'\n\n        });\n\n        tab_shared.add({\n            title   : 'Published Visualizations',\n            content : 'visualization/list_published'\n        });\n\n        tab_shared.add({\n            title   : 'Published Pages',\n            content : 'page/list_published'\n        });\n\n        this.masthead.append(tab_shared);\n\n        //\n        // Lab menu.\n        //\n        if ( this.options.user_requests ) {\n            var tab_lab = new Masthead.GalaxyMastheadTab({\n                id      : 'lab',\n                title   : 'Lab'\n            });\n            tab_lab.add({\n                title   : 'Sequencing Requests',\n                content : 'requests/index'\n            });\n            tab_lab.add({\n                title   : 'Find Samples',\n                content : 'requests/find_samples_index'\n            });\n            tab_lab.add({\n                title   : 'Help',\n                content : this.options.lims_doc_url\n            });\n            this.masthead.append( tab_lab );\n        }\n\n        //\n        // Visualization tab.\n        //\n\n        var visualization_options = {\n            id              : 'visualization',\n            title           : 'Visualization',\n            content         : 'visualization/list',\n            title_attribute : 'Visualize datasets'\n        }\n\n        // disable visualizations for anonymous users\n        if ( !Galaxy.user.id ) {\n            visualization_options.disabled = true;\n        }\n        var tab_visualization = new Masthead.GalaxyMastheadTab( visualization_options );\n\n        // add submenu only when user is logged in\n        if ( Galaxy.user.id ) {\n            tab_visualization.add({\n                title   : 'New Track Browser',\n                content : 'visualization/trackster',\n                target  : '_frame'\n            });\n            tab_visualization.add({\n                title   : 'Saved Visualizations',\n                content : 'visualization/list',\n                target  : '_frame'\n            });\n        }\n        this.masthead.append( tab_visualization );\n\n        //\n        // Admin.\n        //\n        if ( Galaxy.user.get( 'is_admin' ) ) {\n            var tab_admin = new Masthead.GalaxyMastheadTab({\n                id              : 'admin',\n                title           : 'Admin',\n                content         : 'admin',\n                extra_class     : 'admin-only',\n                title_attribute : 'Administer this Galaxy'\n            });\n            this.masthead.append( tab_admin );\n        }\n\n        //\n        // Help tab.\n        //\n        var tab_help = new Masthead.GalaxyMastheadTab({\n            id              : 'help',\n            title           : 'Help',\n            title_attribute : 'Support, contact, and community hubs'\n        });\n        if ( this.options.biostar_url ){\n            tab_help.add({\n                title   : 'Galaxy Biostar',\n                content : this.options.biostar_url_redirect,\n                target  : '_blank'\n            });\n            tab_help.add({\n                title   : 'Ask a question',\n                content : 'biostar/biostar_question_redirect',\n                target  : '_blank'\n            });\n        }\n        tab_help.add({\n            title   : 'Support',\n            content : this.options.support_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Search',\n            content : this.options.search_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Mailing Lists',\n            content : this.options.mailing_lists,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Videos',\n            content : this.options.screencasts_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Wiki',\n            content : this.options.wiki_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'How to Cite Galaxy',\n            content : this.options.citation_url,\n            target  : '_blank'\n        });\n        if (this.options.terms_url){\n            tab_help.add({\n                title   : 'Terms and Conditions',\n                content : this.options.terms_url,\n                target  : '_blank'\n            });\n        }\n        this.masthead.append( tab_help );\n\n        //\n        // User tab.\n        //\n        if ( !Galaxy.user.id ){\n            var tab_user = new Masthead.GalaxyMastheadTab({\n                id              : 'user',\n                title           : 'User',\n                extra_class     : 'loggedout-only',\n                title_attribute : 'Account registration or login'\n            });\n\n            // login\n            tab_user.add({\n                title   : 'Login',\n                content : 'user/login',\n                target  : 'galaxy_main'\n            });\n\n            // register\n            if ( this.options.allow_user_creation ){\n                tab_user.add({\n                    title   : 'Register',\n                    content : 'user/create',\n                    target  : 'galaxy_main'\n                });\n            }\n\n            // add to masthead\n            this.masthead.append( tab_user );\n        } else {\n            var tab_user = new Masthead.GalaxyMastheadTab({\n                id              : 'user',\n                title           : 'User',\n                extra_class     : 'loggedin-only',\n                title_attribute : 'Account preferences and saved data'\n            });\n\n            // show user logged in info\n            tab_user.add({\n                title   : 'Logged in as ' + Galaxy.user.get( 'email' )\n            });\n\n            tab_user.add({\n                title   : 'Preferences',\n                content : 'user?cntrller=user',\n                target  : 'galaxy_main'\n            });\n\n            tab_user.add({\n                title   : 'Custom Builds',\n                content : 'user/dbkeys',\n                target  : 'galaxy_main'\n            });\n\n            tab_user.add({\n                title   : 'Logout',\n                content : 'user/logout',\n                target  : '_top',\n                divider : true\n            });\n\n            // default tabs\n            tab_user.add({\n                title   : 'Saved Histories',\n                content : 'history/list',\n                target  : 'galaxy_main'\n            });\n            tab_user.add({\n                title   : 'Saved Datasets',\n                content : 'dataset/list',\n                target  : 'galaxy_main'\n            });\n            tab_user.add({\n                title   : 'Saved Pages',\n                content : 'page/list',\n                target  : '_top'\n            });\n\n            tab_user.add({\n                title   : 'API Keys',\n                content : 'user/api_keys?cntrller=user',\n                target  : 'galaxy_main'\n            });\n\n            if ( this.options.use_remote_user ){\n                tab_user.add({\n                    title   : 'Public Name',\n                    content : 'user/edit_username?cntrller=user',\n                    target  : 'galaxy_main'\n                });\n            }\n\n            // add to masthead\n            this.masthead.append( tab_user );\n        }\n\n        // identify active tab\n        if ( this.options.active_view ) {\n            this.masthead.highlight( this.options.active_view );\n        }\n    }\n});\n\n// return\nreturn {\n    GalaxyMenu: GalaxyMenu\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/galaxy.menu.js\n ** module id = 70\n ** module chunks = 2\n **/","define([\n    'utils/utils',\n    'mvc/tools',\n    'mvc/upload/upload-view',\n    'mvc/ui/ui-misc',\n    'mvc/history/options-menu',\n    'mvc/history/history-panel-edit-current',\n    'mvc/tools/tools-form'\n], function( Utils, Tools, Upload, Ui, optionsMenu, HistoryPanel, ToolsForm ) {\n\n    /* Builds the center panel */\n    var CenterPanel = Backbone.View.extend({\n        initialize: function( options ) {\n            this.options = Utils.merge( options, {} );\n            this.setElement( this._template() );\n            var self = this;\n\n            this.$( '#galaxy_main' ).on( 'load', function() {\n                var location = this.contentWindow && this.contentWindow.location;\n                if ( location && location.host ) {\n                    $( this ).show();\n                    self.prev && self.prev.remove();\n                    self.$( '#center-panel' ).hide();\n                    Galaxy.trigger( 'galaxy_main:load', {\n                        fullpath: location.pathname + location.search + location.hash,\n                        pathname: location.pathname,\n                        search  : location.search,\n                        hash    : location.hash\n                    });\n                }\n            });\n\n            var params = $.extend( {}, Galaxy.params );\n            if ( params.tool_id !== 'upload1' && ( params.tool_id || params.job_id ) ) {\n                params.tool_id && ( params.id = params.tool_id );\n                this.display( new ToolsForm.View( params ) );\n            } else {\n                this.$( '#galaxy_main' ).prop( 'src', Galaxy.root + (\n                    ( params.workflow_id && ( 'workflow/run?id=' + params.workflow_id ) ) ||\n                    ( params.m_c && ( params.m_c + '/' + params.m_a ) ) ||\n                    'root/welcome'\n                ));\n            }\n        },\n        display: function( view ) {\n            this.prev && this.prev.remove();\n            this.prev = view;\n            this.$( '#galaxy_main' ).hide();\n            this.$( '#center-panel' ).scrollTop( 0 ).append( view.$el ).show();\n        },\n        _template: function() {\n            return  '<div style=\"position: absolute; width: 100%; height: 100%\">' +\n                        '<iframe name=\"galaxy_main\" id=\"galaxy_main\" frameborder=\"0\" style=\"position: absolute; width: 100%; height: 100%;\"/>' +\n                        '<div id=\"center-panel\" style=\"position: absolute; width: 100%; height: 100%; padding: 10px; overflow: auto;\"/>' +\n                    '</div>';\n        }\n    });\n\n    /* Builds the tool panel on the left */\n    var LeftPanel = Backbone.View.extend({\n        initialize: function( options ) {\n            this.options = Utils.merge( options, {} );\n            this.setElement( this._template() );\n            // create tool search, tool panel, and tool panel view.\n            if ( Galaxy.user.id || !Galaxy.config.require_login ) {\n                var tool_search = new Tools.ToolSearch({\n                    spinner_url : options.spinner_url,\n                    search_url  : options.search_url,\n                    hidden      : false\n                });\n                var tools = new Tools.ToolCollection( options.toolbox );\n                var tool_panel = new Tools.ToolPanel({\n                    tool_search : tool_search,\n                    tools       : tools,\n                    layout      : options.toolbox_in_panel\n                });\n                tool_panel_view = new Tools.ToolPanelView({ model: tool_panel });\n\n                // add tool panel to Galaxy object\n                Galaxy.toolPanel = tool_panel;\n\n                // if there are tools, render panel and display everything\n                if (tool_panel.get( 'layout' ).size() > 0) {\n                    tool_panel_view.render();\n                    this.$( '.toolMenu' ).show();\n                }\n                this.$el.prepend( tool_panel_view.$el );\n\n                // add internal workflow list\n                this.$( '#internal-workflows' ).append( this._templateTool({\n                    title   : 'All workflows',\n                    href    : 'workflow/list_for_run'\n                }) )\n                for ( var i in options.stored_workflow_menu_entries ) {\n                    var m = options.stored_workflow_menu_entries[ i ];\n                    this.$( '#internal-workflows' ).append( this._templateTool({\n                        title : m.stored_workflow.name,\n                        href  : 'workflow/run?id=' + m.encoded_stored_workflow_id\n                    }) );\n                }\n\n                // minsize init hint\n                this.$( 'a[minsizehint]' ).click( function() {\n                    if ( parent.handle_minwidth_hint ) {\n                        parent.handle_minwidth_hint( $( this ).attr( 'minsizehint' ) );\n                    }\n                });\n\n                // add upload plugin\n                Galaxy.upload = new Upload( options );\n\n                // define components (is used in app-view.js)\n                this.components = {\n                    header  : {\n                        title   : 'Tools',\n                        buttons : [ Galaxy.upload ]\n                    }\n                }\n            }\n        },\n\n        _templateTool: function( options ) {\n            return  '<div class=\"toolTitle\">' +\n                        '<a href=\"' + Galaxy.root + options.href + '\" target=\"galaxy_main\">' + options.title + '</a>' +\n                    '</div>';\n        },\n\n        _template: function() {\n            return  '<div class=\"toolMenuContainer\">' +\n                        '<div class=\"toolMenu\" style=\"display: none\">' +\n                            '<div id=\"search-no-results\" style=\"display: none; padding-top: 5px\">' +\n                                '<em><strong>Search did not match any tools.</strong></em>' +\n                            '</div>' +\n                        '</div>' +\n                        '<div class=\"toolSectionPad\"/>' +\n                        '<div class=\"toolSectionPad\"/>' +\n                        '<div class=\"toolSectionTitle\" id=\"title_XXinternalXXworkflow\">' +\n                            '<span>Workflows</span>' +\n                        '</div>' +\n                        '<div id=\"internal-workflows\" class=\"toolSectionBody\">' +\n                            '<div class=\"toolSectionBg\"/>' +\n                        '</div>' +\n                    '</div>';\n        }\n    });\n\n    /* Builds the history panel on the right */\n    var RightPanel = Backbone.View.extend({\n        initialize: function(options) {\n            this.options = Utils.merge( options, {} );\n            this.setElement( this._template() );\n\n            var headerButtons = [];\n            // this button re-fetches the history and contents and re-renders the history panel\n            var buttonRefresh = new Ui.ButtonLink({\n                id      : 'history-refresh-button',\n                title   : 'Refresh history',\n                cls     : 'panel-header-button',\n                icon    : 'fa fa-refresh',\n                onclick : function() {\n                    if( top.Galaxy && top.Galaxy.currHistoryPanel ) {\n                        top.Galaxy.currHistoryPanel.loadCurrentHistory();\n                    }\n                }\n            });\n            headerButtons.push( buttonRefresh );\n\n            // opens a drop down menu with history related functions (like view all, delete, share, etc.)\n            var buttonOptions = new Ui.ButtonLink({\n                id      : 'history-options-button',\n                title   : 'History options',\n                cls     : 'panel-header-button',\n                target  : 'galaxy_main',\n                icon    : 'fa fa-cog',\n                href    : Galaxy.root + 'root/history_options'\n            });\n            headerButtons.push( buttonOptions );\n\n            // goes to a page showing all the users histories in panel form (for logged in users)\n            if( !Galaxy.user.isAnonymous() ){\n                var buttonViewMulti = new Ui.ButtonLink({\n                    id      : 'history-view-multi-button',\n                    title   : 'View all histories',\n                    cls     : 'panel-header-button',\n                    icon    : 'fa fa-columns',\n                    href    : Galaxy.root + 'history/view_multiple'\n                });\n                headerButtons.push( buttonViewMulti );\n            }\n\n            // define components (is used in app-view.js)\n            this.components = {\n                header  : {\n                    title   : 'History',\n                    cls     : 'history-panel-header',\n                    buttons : headerButtons\n                },\n                body    : {\n                    cls     : 'unified-panel-body-background',\n                }\n            };\n\n            // build history options menu\n            Galaxy.historyOptionsMenu = optionsMenu( buttonOptions.$el, {\n                anonymous    : Galaxy.user.isAnonymous(),\n                purgeAllowed : Galaxy.config.allow_user_dataset_purge,\n                root         : Galaxy.root\n            });\n\n            // load current history\n            Galaxy.currHistoryPanel = new HistoryPanel.CurrentHistoryPanel({\n                el              : this.$el,\n                purgeAllowed    : Galaxy.config.allow_user_dataset_purge,\n                linkTarget      : 'galaxy_main',\n                $scrollContainer: function(){ return this.$el.parent(); }\n            });\n            Galaxy.currHistoryPanel.connectToQuotaMeter( Galaxy.quotaMeter );\n            Galaxy.currHistoryPanel.listenToGalaxy( Galaxy );\n            Galaxy.currHistoryPanel.loadCurrentHistory();\n        },\n\n        // body template\n        _template: function() {\n            return '<div id=\"current-history-panel\" class=\"history-panel\"/>';\n        }\n    });\n\n    return {\n        left    : LeftPanel,\n        center  : CenterPanel,\n        right   : RightPanel\n    };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/app/app-analysis.js\n ** module id = 78\n ** module chunks = 2\n **/","define([], function() {\n    return {\n        center: Backbone.View.extend({\n            initialize: function() {\n                this.setElement( '<iframe src=\"' + Galaxy.root + 'user/login\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>' );\n            }\n        })\n    }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/app/app-login.js\n ** module id = 79\n ** module chunks = 2\n **/","/**\n    This is the entrance point for the Galaxy UI.\n*/\ndefine([\n    'utils/utils',\n    'galaxy.masthead',\n    'galaxy.menu',\n    'galaxy.frame',\n    'mvc/ui/ui-portlet',\n    'mvc/ui/ui-misc',\n    'mvc/ui/ui-modal',\n    'mvc/user/user-quotameter',\n    'panel',\n    'mvc/app/app-login',\n    'mvc/app/app-analysis'\n], function( Utils, Masthead, Menu, Frame, Portlet, Ui, Modal, QuotaMeter, Panel, Login, Analysis ) {\n    console.debug( 'loading app-view' );\n    console.debug( 'panel:', Panel );\n\n    return Backbone.View.extend({\n        initialize: function( options ) {\n            this.options = Utils.merge( options, {} );\n            this.setElement( this._template( options ) );\n\n            // register this view\n            Galaxy.app = this;\n\n            // url request parameters\n            Galaxy.params = this.options.params;\n\n            // shared backbone router\n            Galaxy.router = new Backbone.Router();\n\n            // configure body\n            $( 'body' ).append( this.$el );\n\n            // adjust parent container\n            var $container = $( this.$el.parent() ).attr( 'scroll', 'no' ).addClass( 'full-content' );\n            if ( this.options.message_box_visible ) {\n                $container.addClass( 'has-message-box' );\n                this.$( '#messagebox' ).show();\n            }\n            if ( this.options.show_inactivity_warning ) {\n                $container.addClass( 'has-inactivity-box' );\n                this.$( '#inactivebox' ).show();\n            }\n\n            // load global galaxy objects\n            if ( !Galaxy.masthead ) {\n                Galaxy.masthead = new Masthead.GalaxyMasthead( this.options );\n                Galaxy.modal = new Modal.View();\n                Galaxy.frame = new Frame.GalaxyFrame();\n\n                // construct default menu options\n                Galaxy.menu = new Menu.GalaxyMenu({\n                    masthead    : Galaxy.masthead,\n                    config      : this.options\n                });\n\n                // set up the quota meter (And fetch the current user data from trans)\n                // add quota meter to masthead\n                Galaxy.quotaMeter = new QuotaMeter.UserQuotaMeter({\n                    model       : Galaxy.user,\n                    el          : Galaxy.masthead.$( '.quota-meter-container' )\n                }).render();\n            }\n\n            // build page\n            if ( Galaxy.config.require_login && !Galaxy.user.id ) {\n                this.build( Login );\n            } else {\n                this.build( Analysis );\n            }\n        },\n\n        /** Display content */\n        display: function ( view, target ) {\n            // TODO: Remove this line after select2 update\n            $( '.select2-hidden-accessible' ).remove();\n            this.panels && this.panels[ target || 'center' ].display( view );\n        },\n\n        /** Build all panels **/\n        build: function( Views ) {\n            this.panels = [];\n            var options = $.extend( true, {}, this.options );\n            var panel_ids = [ 'center', 'left', 'right' ];\n            for ( var i in panel_ids ) {\n                var id = panel_ids[ i ];\n                this.$( '#' + id ).remove();\n                if ( !Views[ id ] ) {\n                    this.$( '#center' ).css( id, '0' );\n                    continue;\n                }\n                var view = this.panels[ id ] = new Views[ id ]( options );\n                if ( id == 'center' ) {\n                    this.$el.append( $( '<div id=\"' + id + '\"/>' ).addClass( 'inbound' ).append( view.$el ) );\n                } else {\n                    var components = Utils.merge( view.components, {\n                        header  : {\n                            title   : '',\n                            cls     : '',\n                            buttons : []\n                        },\n                        body    : {\n                            cls     : ''\n                        }\n                    });\n                    var $panel = $( this._templatePanel( id ) );\n                    $panel.find('.panel-header-text').html( components.header.title );\n                    $panel.find('.unified-panel-header-inner').addClass( components.header.cls );\n                    for ( var i in components.header.buttons ) {\n                        $panel.find('.panel-header-buttons').append( components.header.buttons[ i ].$el );\n                    }\n                    $panel.find('.unified-panel-body').addClass( components.body.cls ).append( view.$el );\n                    var panel = new Panel( {\n                        center  : this.$( '#center' ),\n                        panel   : $panel,\n                        drag    : $panel.find('.unified-panel-footer > .drag' ),\n                        toggle  : $panel.find('.unified-panel-footer > .panel-collapse' ),\n                        right   : id == 'right'\n                    } );\n                    this.$el.append( $panel );\n                }\n            }\n        },\n\n        /** Template for left/right panel */\n        _templatePanel: function( id ) {\n            return  '<div id=\"' + id + '\">' +\n                        '<div class=\"unified-panel-header\" unselectable=\"on\">' +\n                            '<div class=\"unified-panel-header-inner\">' +\n                                '<div class=\"panel-header-buttons\" style=\"float: right\"/>' +\n                                '<div class=\"panel-header-text\"/>' +\n                            '</div>' +\n                        '</div>' +\n                        '<div class=\"unified-panel-body\"/>' +\n                        '<div class=\"unified-panel-footer\">' +\n                            '<div class=\"panel-collapse ' + id + '\"/>' +\n                            '<div class=\"drag\"/>' +\n                        '</div>' +\n                    '</div>';\n        },\n\n        /** Main template **/\n        _template: function() {\n            return  '<div id=\"everything\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\">' +\n                        '<div id=\"background\"/>' +\n                        '<div id=\"messagebox\" class=\"panel-' + Galaxy.config.message_box_class + '-message\" style=\"display: none;\">' +\n                            Galaxy.config.message_box_content +\n                        '</div>' +\n                        '<div id=\"inactivebox\" class=\"panel-warning-message\" style=\"display: none;\">' +\n                            Galaxy.config.inactivity_box_content +\n                                ' <a href=\"' + Galaxy.root + 'user/resend_verification\">Resend verification.</a>' +\n                        '</div>' +\n                    '</div>';\n        }\n    });\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/app/app-view.js\n ** module id = 80\n ** module chunks = 2\n **/","define([\n    \"mvc/base-mvc\",\n    \"mvc/citation/citation-model\",\n    \"utils/localization\"\n], function( baseMVC, citationModel, _l ){\n\nvar CitationView = Backbone.View.extend({\n    tagName: 'div',\n    className: 'citations',\n    render: function() {\n        this.$el.append( \"<p>\" + this.formattedReference() + \"</p>\" );\n        return this;\n    },\n    formattedReference: function() {\n        var model = this.model;\n        var entryType = model.entryType();\n        var fields = model.fields();\n\n        var ref = \"\";\n        // Code inspired by...\n        // https://github.com/vkaravir/bib-publication-list/blob/master/src/bib-publication-list.js\n        var authorsAndYear = this._asSentence( (fields.author ? fields.author : \"\") + (fields.year ? (\" (\" + fields.year + \")\") : \"\") ) + \" \";\n        var title = fields.title || \"\";\n        var pages = fields.pages ? (\"pp. \" + fields.pages) : \"\";\n        var address = fields.address;\n        if( entryType == \"article\" ) {\n            var volume = (fields.volume ? fields.volume : \"\") +\n                         (fields.number ? ( \" (\" + fields.number + \")\" ) : \"\") +\n                         (pages ? \", \" + pages : \"\");\n            ref = authorsAndYear + this._asSentence(title) +\n                    (fields.journal ? (\"In <em>\" + fields.journal + \", \") : \"\") +\n                    this._asSentence(volume) + \n                    this._asSentence(fields.address) +\n                    \"<\\/em>\";\n        } else if( entryType == \"inproceedings\" || entryType == \"proceedings\" ) {\n            ref = authorsAndYear + \n                    this._asSentence(title) + \n                    (fields.booktitle ? (\"In <em>\" + fields.booktitle + \", \") : \"\") +\n                    (pages ? pages : \"\") +\n                    (address ? \", \" + address : \"\") + \n                    \".<\\/em>\";\n        } else if( entryType == \"mastersthesis\" || entryType == \"phdthesis\" ) {\n            ref = authorsAndYear + this._asSentence(title) +\n                    (fields.howpublished ? fields.howpublished + \". \" : \"\") +\n                    (fields.note ? fields.note + \".\" : \"\");\n        } else if( entryType == \"techreport\" ) {\n            ref = authorsAndYear + this._asSentence(title) +\n                    this._asSentence(fields.institution) +\n                    this._asSentence(fields.number) +\n                    this._asSentence(fields.type);\n        } else if( entryType == \"book\" || entryType == \"inbook\" || entryType == \"incollection\" ) {\n            ref = authorsAndYear + \" \" + this._formatBookInfo(fields);\n        } else {\n            ref = authorsAndYear + \" \" + this._asSentence(title) +\n                    this._asSentence(fields.howpublished) +\n                    this._asSentence(fields.note);\n        }\n        var doiUrl = \"\";\n        if( fields.doi ) {\n            doiUrl = 'http://dx.doi.org/' + fields.doi;\n            ref += '[<a href=\"' + doiUrl + '\" target=\"_blank\">doi:' + fields.doi + \"</a>]\";\n        }\n        var url = fields.url || doiUrl;\n        if( url ) {\n            ref += '[<a href=\"' + url + '\" target=\"_blank\">Link</a>]';\n        }\n        return ref;\n    },\n    _formatBookInfo: function(fields) {\n        var info = \"\";\n        if( fields.chapter ) {\n            info += fields.chapter + \" in \";\n        }\n        if( fields.title ) {\n            info += \"<em>\" + fields.title + \"<\\/em>\";\n        }\n        if( fields.editor ) {\n            info += \", Edited by \" + fields.editor + \", \";\n        }\n        if( fields.publisher) {\n            info += \", \" + fields.publisher;\n        }\n        if( fields.pages ) {\n            info += \", pp. \" + fields.pages + \"\";\n        }\n        if( fields.series ) {\n            info += \", <em>\" + fields.series + \"<\\/em>\";\n        }\n        if( fields.volume ) {\n            info += \", Vol.\" + fields.volume;\n        }\n        if( fields.issn ) {\n            info += \", ISBN: \" + fields.issn;\n        }\n        return info + \".\";\n    },\n    _asSentence: function(str) {\n        return (str && str.trim()) ? str + \". \" : \"\";\n    }\n});\n\nvar CitationListView = Backbone.View.extend({\n    el: '#citations',\n    /**\n     * Set up view.\n     */\n    initialize: function() {\n        this.listenTo( this.collection, 'add', this.renderCitation );\n    },\n\n    events: {\n        'click .citations-to-bibtex': 'showBibtex',\n        'click .citations-to-formatted': 'showFormatted'\n    },\n\n    renderCitation: function( citation ) {\n        var citationView = new CitationView( { model: citation } );\n        this.$(\".citations-formatted\").append( citationView.render().el );\n        var rawTextarea = this.$(\".citations-bibtex-text\");\n        rawTextarea.val( rawTextarea.val() + \"\\n\\r\" + citation.attributes.content );\n    },\n\n    render: function() {\n        this.$el.html(this.citationsElement());\n        this.collection.each(function( item ){\n            this.renderCitation( item );\n        }, this);\n        this.showFormatted();\n    },\n\n    showBibtex: function() {\n        this.$(\".citations-to-formatted\").show();\n        this.$(\".citations-to-bibtex\").hide();\n        this.$(\".citations-bibtex\").show();\n        this.$(\".citations-formatted\").hide();\n        this.$(\".citations-bibtex-text\").select();\n    },\n\n    showFormatted: function() {\n        this.$(\".citations-to-formatted\").hide();\n        this.$(\".citations-to-bibtex\").show();\n        this.$(\".citations-bibtex\").hide();\n        this.$(\".citations-formatted\").show();\n    },\n\n    partialWarningElement: function() {\n        if( this.collection.partial ) {\n            return [\n                '<div style=\"padding:5px 10px\">',\n                '<b>Warning: This is a experimental feature.</b> Most Galaxy tools will not annotate',\n                ' citations explicitly at this time. When writing up your analysis, please manually',\n                ' review your histories and find all references',\n                ' that should be cited in order to completely describe your work. Also, please remember to',\n                ' <a href=\"https://wiki.galaxyproject.org/CitingGalaxy\">cite Galaxy</a>.',\n                '</div>',\n            ].join('');\n        } else {\n            return '';\n        }\n    },\n\n    citationsElement: function() {\n        return [\n            '<div class=\"toolForm\">',\n                '<div class=\"toolFormTitle\">',\n                    _l(\"Citations\"),\n                    ' <button type=\"button\" class=\"btn btn-xs citations-to-bibtex\" title=\"Show all in BibTeX format.\"><i class=\"fa fa-pencil-square-o\"></i> Show BibTeX</button>',\n                    ' <button type=\"button\" class=\"btn btn-xs citations-to-formatted\" title=\"Return to formatted citation list.\"><i class=\"fa fa-times\"></i> Hide BibTeX</button>',\n                '</div>',\n                '<div class=\"toolFormBody\" style=\"padding:5px 10px\">',\n                this.partialWarningElement(),\n                '<span class=\"citations-formatted\" style=\"word-wrap: break-word;\"></span>',\n                '</div>',\n                '<div class=\"citations-bibtex toolFormBody\" style=\"padding:5px 10px\">',\n                '<textarea style=\"width: 100%; height: 500px;\" class=\"citations-bibtex-text\"></textarea>',\n                '</div>',\n            '</div>'\n        ].join( '' );\n    }\n});\n\n//==============================================================================\nreturn {\n    CitationView : CitationView,\n    CitationListView  : CitationListView\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/citation/citation-view.js\n ** module id = 81\n ** module chunks = 2\n **/","define([\n    \"mvc/collection/collection-li\",\n    \"mvc/dataset/dataset-li-edit\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( DC_LI, DATASET_LI_EDIT, BASE_MVC, _l ){\n/* global Backbone */\n//==============================================================================\nvar DCListItemView = DC_LI.DCListItemView;\n/** @class Edit view for DatasetCollection.\n */\nvar DCListItemEdit = DCListItemView.extend(\n/** @lends DCListItemEdit.prototype */{\n//TODO: may not be needed\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** override to add linkTarget */\n    initialize : function( attributes ){\n        DCListItemView.prototype.initialize.call( this, attributes );\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'DCListItemEdit(' + modelString + ')';\n    }\n});\n\n\n//==============================================================================\nvar DCEListItemView = DC_LI.DCEListItemView;\n/** @class Read only view for DatasetCollectionElement.\n */\nvar DCEListItemEdit = DCEListItemView.extend(\n/** @lends DCEListItemEdit.prototype */{\n//TODO: this might be expendable - compacted with HDAListItemView\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** set up */\n    initialize  : function( attributes ){\n        DCEListItemView.prototype.initialize.call( this, attributes );\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'DCEListItemEdit(' + modelString + ')';\n    }\n});\n\n\n//==============================================================================\n// NOTE: this does not inherit from DatasetDCEListItemView as you would expect\n//TODO: but should - if we can find something simpler than using diamond\n/** @class Editable view for a DatasetCollectionElement that is also an DatasetAssociation\n *      (a dataset contained in a dataset collection).\n */\nvar DatasetDCEListItemEdit = DATASET_LI_EDIT.DatasetListItemEdit.extend(\n/** @lends DatasetDCEListItemEdit.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** set up */\n    initialize  : function( attributes ){\n        DATASET_LI_EDIT.DatasetListItemEdit.prototype.initialize.call( this, attributes );\n    },\n\n    // NOTE: this does not inherit from DatasetDCEListItemView - so we duplicate this here\n    //TODO: fix\n    /** In this override, only get details if in the ready state.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n    _fetchModelDetails : function(){\n        var view = this;\n        if( view.model.inReadyState() && !view.model.hasDetails() ){\n            return view.model.fetch({ silent: true });\n        }\n        return jQuery.when();\n    },\n\n    /** Override to remove delete button */\n    _renderDeleteButton : function(){\n        return null;\n    },\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'DatasetDCEListItemEdit(' + modelString + ')';\n    }\n});\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nDatasetDCEListItemEdit.prototype.templates = (function(){\n\n    return _.extend( {}, DATASET_LI_EDIT.DatasetListItemEdit.prototype.templates, {\n        titleBar : DC_LI.DatasetDCEListItemView.prototype.templates.titleBar\n    });\n}());\n\n\n//==============================================================================\n/** @class Read only view for a DatasetCollectionElement that is also a DatasetCollection\n *      (a nested DC).\n */\nvar NestedDCDCEListItemEdit = DC_LI.NestedDCDCEListItemView.extend(\n/** @lends NestedDCDCEListItemEdit.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    // comment this out to suppress log output\n    //logger              : console,\n\n    // ......................................................................... misc\n    /** String representation */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'NestedDCDCEListItemEdit(' + modelString + ')';\n    }\n});\n\n\n//==============================================================================\n    return {\n        DCListItemEdit          : DCListItemEdit,\n        DCEListItemEdit         : DCEListItemEdit,\n        DatasetDCEListItemEdit  : DatasetDCEListItemEdit,\n        NestedDCDCEListItemEdit : NestedDCDCEListItemEdit\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/collection/collection-li-edit.js\n ** module id = 82\n ** module chunks = 2\n **/","define([\n    \"mvc/collection/collection-panel\",\n    \"mvc/collection/collection-model\",\n    \"mvc/collection/collection-li-edit\",\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"ui/editable-text\",\n], function( DC_PANEL, DC_MODEL, DC_EDIT, BASE_MVC, _l ){\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class editable View/Controller for a dataset collection.\n */\nvar _super = DC_PANEL.CollectionPanel;\nvar CollectionPanelEdit = _super.extend(\n/** @lends CollectionPanel.prototype */{\n    //MODEL is either a DatasetCollection (or subclass) or a DatasetCollectionElement (list of pairs)\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** sub view class used for datasets */\n    DatasetDCEViewClass : DC_EDIT.DatasetDCEListItemEdit,\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass: DC_EDIT.NestedDCDCEListItemEdit,\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes optional settings for the panel\n     */\n    initialize : function( attributes ){\n        _super.prototype.initialize.call( this, attributes );\n    },\n\n    /** In this override, make the collection name editable\n     */\n    _setUpBehaviors : function( $where ){\n        $where = $where || this.$el;\n        _super.prototype._setUpBehaviors.call( this, $where );\n        if( !this.model ){ return; }\n\n        // anon users shouldn't have access to any of the following\n        if( !Galaxy.currUser || Galaxy.currUser.isAnonymous() ){\n            return;\n        }\n\n        //TODO: extract\n        var panel = this,\n            nameSelector = '> .controls .name';\n        $where.find( nameSelector )\n            .attr( 'title', _l( 'Click to rename collection' ) )\n            .tooltip({ placement: 'bottom' })\n            .make_text_editable({\n                on_finish: function( newName ){\n                    var previousName = panel.model.get( 'name' );\n                    if( newName && newName !== previousName ){\n                        panel.$el.find( nameSelector ).text( newName );\n                        panel.model.save({ name: newName })\n                            .fail( function(){\n                                panel.$el.find( nameSelector ).text( panel.model.previous( 'name' ) );\n                            });\n                    } else {\n                        panel.$el.find( nameSelector ).text( previousName );\n                    }\n                }\n            });\n    },\n\n    // ........................................................................ misc\n    /** string rep */\n    toString    : function(){\n        return 'CollectionPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListCollectionPanelEdit = CollectionPanelEdit.extend(\n/** @lends ListCollectionPanel.prototype */{\n\n    //TODO: not strictly needed - due to switch in CollectionPanel._getContentClass\n    /** sub view class used for datasets */\n    DatasetDCEViewClass : DC_EDIT.DatasetDCEListItemEdit,\n\n    // ........................................................................ misc\n    /** string rep */\n    toString    : function(){\n        return 'ListCollectionPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n// =============================================================================\n/** @class Editable, read-only View/Controller for a dataset collection. */\nvar PairCollectionPanelEdit = ListCollectionPanelEdit.extend(\n/** @lends PairCollectionPanelEdit.prototype */{\n\n    // ........................................................................ misc\n    /** string rep */\n    toString    : function(){\n        return 'PairCollectionPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n// =============================================================================\n/** @class Editable (roughly since these collections are immutable),\n *  View/Controller for a dataset collection.\n */\nvar NestedPairCollectionPanelEdit = PairCollectionPanelEdit.extend(\n/** @lends NestedPairCollectionPanelEdit.prototype */{\n\n    /** Override to remove the editable text from the name/identifier - these collections are considered immutable */\n    _setUpBehaviors : function( $where ){\n        _super.prototype._setUpBehaviors.call( this, $where );\n    },\n\n    // ........................................................................ misc\n    /** string rep */\n    toString    : function(){\n        return 'NestedPairCollectionPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n// =============================================================================\n/** @class non-editable, read-only View/Controller for a dataset collection. */\nvar ListOfPairsCollectionPanelEdit = CollectionPanelEdit.extend(\n/** @lends ListOfPairsCollectionPanel.prototype */{\n\n    //TODO: not strictly needed - due to switch in CollectionPanel._getContentClass\n    /** sub view class used for nested collections */\n    NestedDCDCEViewClass : DC_EDIT.NestedDCDCEListItemEdit.extend({\n        foldoutPanelClass : NestedPairCollectionPanelEdit\n    }),\n\n    // ........................................................................ misc\n    /** string rep */\n    toString    : function(){\n        return 'ListOfPairsCollectionPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n//==============================================================================\n    return {\n        CollectionPanelEdit             : CollectionPanelEdit,\n        ListCollectionPanelEdit         : ListCollectionPanelEdit,\n        PairCollectionPanelEdit         : PairCollectionPanelEdit,\n        ListOfPairsCollectionPanelEdit  : ListOfPairsCollectionPanelEdit\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/collection/collection-panel-edit.js\n ** module id = 83\n ** module chunks = 2\n **/","define([\n    \"utils/levenshtein\",\n    \"utils/natural-sort\",\n    \"mvc/collection/list-collection-creator\",\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"ui/hoverhighlight\"\n], function( levenshteinDistance, naturalSort, LIST_COLLECTION_CREATOR, baseMVC, _l ){\n\nvar logNamespace = 'collections';\n/* ============================================================================\nTODO:\n\n\nPROGRAMMATICALLY:\ncurrPanel.once( 'rendered', function(){\n    currPanel.showSelectors();\n    currPanel.selectAll();\n    _.last( currPanel.actionsPopup.options ).func();\n});\n\n============================================================================ */\n/** A view for paired datasets in the collections creator.\n */\nvar PairView = Backbone.View.extend( baseMVC.LoggableMixin ).extend({\n    _logNamespace : logNamespace,\n\n    tagName     : 'li',\n    className   : 'dataset paired',\n\n    initialize : function( attributes ){\n        this.pair = attributes.pair || {};\n    },\n\n    template : _.template([\n        '<span class=\"forward-dataset-name flex-column\"><%= pair.forward.name %></span>',\n        '<span class=\"pair-name-column flex-column\">',\n            '<span class=\"pair-name\"><%= pair.name %></span>',\n        '</span>',\n        '<span class=\"reverse-dataset-name flex-column\"><%= pair.reverse.name %></span>'\n    ].join('')),\n\n    render : function(){\n        this.$el\n            .attr( 'draggable', true )\n            .data( 'pair', this.pair )\n            .html( this.template({ pair: this.pair }) )\n            .addClass( 'flex-column-container' );\n        return this;\n    },\n\n    events : {\n        'dragstart'         : '_dragstart',\n        'dragend'           : '_dragend',\n        'dragover'          : '_sendToParent',\n        'drop'              : '_sendToParent'\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragstart : function( ev ){\n        ev.currentTarget.style.opacity = '0.4';\n        if( ev.originalEvent ){ ev = ev.originalEvent; }\n\n        ev.dataTransfer.effectAllowed = 'move';\n        ev.dataTransfer.setData( 'text/plain', JSON.stringify( this.pair ) );\n\n        this.$el.parent().trigger( 'pair.dragstart', [ this ] );\n    },\n\n    /** dragging pairs for re-ordering */\n    _dragend : function( ev ){\n        ev.currentTarget.style.opacity = '1.0';\n        this.$el.parent().trigger( 'pair.dragend', [ this ] );\n    },\n\n    /** manually bubble up an event to the parent/container */\n    _sendToParent : function( ev ){\n        this.$el.parent().trigger( ev );\n    },\n\n    /** string rep */\n    toString : function(){\n        return 'PairView(' + this.pair.name + ')';\n    }\n});\n\n\n// ============================================================================\n/** returns an autopair function that uses the provided options.match function */\nfunction autoPairFnBuilder( options ){\n    options = options || {};\n    options.createPair = options.createPair || function _defaultCreatePair( params ){\n        this.debug( 'creating pair:', params.listA[ params.indexA ].name, params.listB[ params.indexB ].name );\n        params = params || {};\n        return this._pair(\n            params.listA.splice( params.indexA, 1 )[0],\n            params.listB.splice( params.indexB, 1 )[0],\n            { silent: true }\n        );\n    };\n    // compile these here outside of the loop\n    var _regexps = [];\n    function getRegExps(){\n        if( !_regexps.length ){\n            _regexps = [\n                new RegExp( this.filters[0] ),\n                new RegExp( this.filters[1] )\n            ];\n        }\n        return _regexps;\n    }\n    // mangle params as needed\n    options.preprocessMatch = options.preprocessMatch || function _defaultPreprocessMatch( params ){\n        var regexps = getRegExps.call( this );\n        return _.extend( params, {\n            matchTo     : params.matchTo.name.replace( regexps[0], '' ),\n            possible    : params.possible.name.replace( regexps[1], '' )\n        });\n    };\n\n    return function _strategy( params ){\n        this.debug( 'autopair _strategy ---------------------------' );\n        params = params || {};\n        var listA = params.listA,\n            listB = params.listB,\n            indexA = 0, indexB,\n            bestMatch = {\n                score : 0.0,\n                index : null\n            },\n            paired = [];\n        //console.debug( 'params:', JSON.stringify( params, null, '  ' ) );\n        this.debug( 'starting list lens:', listA.length, listB.length );\n        this.debug( 'bestMatch (starting):', JSON.stringify( bestMatch, null, '  ' ) );\n\n        while( indexA < listA.length ){\n            var matchTo = listA[ indexA ];\n            bestMatch.score = 0.0;\n\n            for( indexB=0; indexB<listB.length; indexB++ ){\n                var possible = listB[ indexB ];\n                this.debug( indexA + ':' + matchTo.name );\n                this.debug( indexB + ':' + possible.name );\n\n                // no matching with self\n                if( listA[ indexA ] !== listB[ indexB ] ){\n                    bestMatch = options.match.call( this, options.preprocessMatch.call( this, {\n                        matchTo : matchTo,\n                        possible: possible,\n                        index   : indexB,\n                        bestMatch : bestMatch\n                    }));\n                    this.debug( 'bestMatch:', JSON.stringify( bestMatch, null, '  ' ) );\n                    if( bestMatch.score === 1.0 ){\n                        this.debug( 'breaking early due to perfect match' );\n                        break;\n                    }\n                }\n            }\n            var scoreThreshold = options.scoreThreshold.call( this );\n            this.debug( 'scoreThreshold:', scoreThreshold );\n            this.debug( 'bestMatch.score:', bestMatch.score );\n\n            if( bestMatch.score >= scoreThreshold ){\n                this.debug( 'creating pair' );\n                paired.push( options.createPair.call( this, {\n                    listA   : listA,\n                    indexA  : indexA,\n                    listB   : listB,\n                    indexB  : bestMatch.index\n                }));\n                this.debug( 'list lens now:', listA.length, listB.length );\n            } else {\n                indexA += 1;\n            }\n            if( !listA.length || !listB.length ){\n                return paired;\n            }\n        }\n        this.debug( 'paired:', JSON.stringify( paired, null, '  ' ) );\n        this.debug( 'autopair _strategy ---------------------------' );\n        return paired;\n    };\n}\n\n\n// ============================================================================\n/** An interface for building collections of paired datasets.\n */\nvar PairedCollectionCreator = Backbone.View.extend( baseMVC.LoggableMixin ).extend({\n    _logNamespace : logNamespace,\n\n    className: 'list-of-pairs-collection-creator collection-creator flex-row-container',\n\n    /** set up initial options, instance vars, behaviors, and autopair (if set to do so) */\n    initialize : function( attributes ){\n        this.metric( 'PairedCollectionCreator.initialize', attributes );\n        //this.debug( '-- PairedCollectionCreator:', attributes );\n\n        attributes = _.defaults( attributes, {\n            datasets            : [],\n            filters             : this.DEFAULT_FILTERS,\n            automaticallyPair   : true,\n            strategy            : 'lcs',\n            matchPercentage     : 0.9,\n            twoPassAutopairing  : true\n        });\n\n        /** unordered, original list */\n        this.initialList = attributes.datasets;\n\n        /** is this from a history? if so, what's its id? */\n        this.historyId = attributes.historyId;\n\n        /** which filters should be used initially? (String[2] or name in commonFilters) */\n        this.filters = this.commonFilters[ attributes.filters ] || this.commonFilters[ this.DEFAULT_FILTERS ];\n        if( _.isArray( attributes.filters ) ){\n            this.filters = attributes.filters;\n        }\n\n        /** try to auto pair the unpaired datasets on load? */\n        this.automaticallyPair = attributes.automaticallyPair;\n\n        /** what method to use for auto pairing (will be passed aggression level) */\n        this.strategy = this.strategies[ attributes.strategy ] || this.strategies[ this.DEFAULT_STRATEGY ];\n        if( _.isFunction( attributes.strategy ) ){\n            this.strategy = attributes.strategy;\n        }\n\n        /** distance/mismatch level allowed for autopairing */\n        this.matchPercentage = attributes.matchPercentage;\n\n        /** try to autopair using simple first, then this.strategy on the remainder */\n        this.twoPassAutopairing = attributes.twoPassAutopairing;\n\n        /** remove file extensions (\\.*) from created pair names? */\n        this.removeExtensions = true;\n        //this.removeExtensions = false;\n\n        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n        this.oncancel = attributes.oncancel;\n        /** fn to call when the collection is created (scoped to this) */\n        this.oncreate = attributes.oncreate;\n\n        /** fn to call when the cancel button is clicked (scoped to this) - if falsy, no btn is displayed */\n        this.autoscrollDist = attributes.autoscrollDist || 24;\n\n        /** is the unpaired panel shown? */\n        this.unpairedPanelHidden = false;\n        /** is the paired panel shown? */\n        this.pairedPanelHidden = false;\n\n        /** DOM elements currently being dragged */\n        this.$dragging = null;\n\n        /** Used for blocking UI events during ajax/operations (don't post twice) */\n        this.blocking = false;\n\n        this._setUpBehaviors();\n        this._dataSetUp();\n    },\n\n    /** map of common filter pairs by name */\n    commonFilters : {\n        illumina        : [ '_1', '_2' ],\n        Rs              : [ '_R1', '_R2' ]\n    },\n    /** which commonFilter to use by default */\n    DEFAULT_FILTERS : 'illumina',\n\n    /** map of name->fn for autopairing */\n    strategies : {\n        'simple'        : 'autopairSimple',\n        'lcs'           : 'autopairLCS',\n        'levenshtein'   : 'autopairLevenshtein'\n    },\n    /** default autopair strategy name */\n    DEFAULT_STRATEGY : 'lcs',\n\n    // ------------------------------------------------------------------------ process raw list\n    /** set up main data: cache initialList, sort, and autopair */\n    _dataSetUp : function(){\n        //this.debug( '-- _dataSetUp' );\n\n        this.paired = [];\n        this.unpaired = [];\n\n        this.selectedIds = [];\n\n        // sort initial list, add ids if needed, and save new working copy to unpaired\n        this._sortInitialList();\n        this._ensureIds();\n        this.unpaired = this.initialList.slice( 0 );\n\n        if( this.automaticallyPair ){\n            this.autoPair();\n            this.once( 'rendered:initial', function(){\n                this.trigger( 'autopair' );\n            });\n        }\n    },\n\n    /** sort initial list */\n    _sortInitialList : function(){\n        //this.debug( '-- _sortInitialList' );\n        this._sortDatasetList( this.initialList );\n    },\n\n    /** sort a list of datasets */\n    _sortDatasetList : function( list ){\n        // currently only natural sort by name\n        list.sort( function( a, b ){ return naturalSort( a.name, b.name ); });\n        return list;\n    },\n\n    /** add ids to dataset objs in initial list if none */\n    _ensureIds : function(){\n        this.initialList.forEach( function( dataset ){\n            if( !dataset.hasOwnProperty( 'id' ) ){\n                dataset.id = _.uniqueId();\n            }\n        });\n        return this.initialList;\n    },\n\n    /** split initial list into two lists, those that pass forward filters & those passing reverse */\n    _splitByFilters : function(){\n        var regexFilters = this.filters.map( function( stringFilter ){\n                return new RegExp( stringFilter );\n            }),\n            split = [ [], [] ];\n\n        function _filter( unpaired, filter ){\n            return filter.test( unpaired.name );\n            //return dataset.name.indexOf( filter ) >= 0;\n        }\n        this.unpaired.forEach( function _filterEach( unpaired ){\n            // 90% of the time this seems to work, but:\n            //TODO: this treats *all* strings as regex which may confuse people - possibly check for // surrounding?\n            //  would need explanation in help as well\n            regexFilters.forEach( function( filter, i ){\n                if( _filter( unpaired, filter ) ){\n                    split[i].push( unpaired );\n                }\n            });\n        });\n        return split;\n    },\n\n    /** add a dataset to the unpaired list in it's proper order */\n    _addToUnpaired : function( dataset ){\n        // currently, unpaired is natural sorted by name, use binary search to find insertion point\n        var binSearchSortedIndex = function( low, hi ){\n            if( low === hi ){ return low; }\n\n            var mid = Math.floor( ( hi - low ) / 2 ) + low,\n                compared = naturalSort( dataset.name, this.unpaired[ mid ].name );\n\n            if( compared < 0 ){\n                return binSearchSortedIndex( low, mid );\n            } else if( compared > 0 ){\n                return binSearchSortedIndex( mid + 1, hi );\n            }\n            // walk the equal to find the last\n            while( this.unpaired[ mid ] && this.unpaired[ mid ].name === dataset.name ){ mid++; }\n            return mid;\n\n        }.bind( this );\n\n        this.unpaired.splice( binSearchSortedIndex( 0, this.unpaired.length ), 0, dataset );\n    },\n\n    // ------------------------------------------------------------------------ auto pairing\n    /** two passes to automatically create pairs:\n     *  use both simpleAutoPair, then the fn mentioned in strategy\n     */\n    autoPair : function( strategy ){\n        // split first using exact matching\n        var split = this._splitByFilters(),\n            paired = [];\n        if( this.twoPassAutopairing ){\n            paired = this.autopairSimple({\n                listA : split[0],\n                listB : split[1]\n            });\n            split = this._splitByFilters();\n        }\n\n        // uncomment to see printlns while running tests\n        //this.debug = function(){ console.log.apply( console, arguments ); };\n\n        // then try the remainder with something less strict\n        strategy = strategy || this.strategy;\n        split = this._splitByFilters();\n        paired = paired.concat( this[ strategy ].call( this, {\n                listA : split[0],\n                listB : split[1]\n        }));\n        return paired;\n    },\n\n    /** autopair by exact match */\n    autopairSimple : autoPairFnBuilder({\n        scoreThreshold: function(){ return 1.0; },\n        match : function _match( params ){\n            params = params || {};\n            if( params.matchTo === params.possible ){\n                return {\n                    index: params.index,\n                    score: 1.0\n                };\n            }\n            return params.bestMatch;\n        }\n    }),\n\n    /** autopair by levenshtein edit distance scoring */\n    autopairLevenshtein : autoPairFnBuilder({\n        scoreThreshold: function(){ return this.matchPercentage; },\n        match : function _matches( params ){\n            params = params || {};\n            var distance = levenshteinDistance( params.matchTo, params.possible ),\n                score = 1.0 - ( distance / ( Math.max( params.matchTo.length, params.possible.length ) ) );\n            if( score > params.bestMatch.score ){\n                return {\n                    index: params.index,\n                    score: score\n                };\n            }\n            return params.bestMatch;\n        }\n    }),\n\n    /** autopair by longest common substrings scoring */\n    autopairLCS : autoPairFnBuilder({\n        scoreThreshold: function(){ return this.matchPercentage; },\n        match : function _matches( params ){\n            params = params || {};\n            var match = this._naiveStartingAndEndingLCS( params.matchTo, params.possible ).length,\n                score = match / ( Math.max( params.matchTo.length, params.possible.length ) );\n            if( score > params.bestMatch.score ){\n                return {\n                    index: params.index,\n                    score: score\n                };\n            }\n            return params.bestMatch;\n        }\n    }),\n\n    /** return the concat'd longest common prefix and suffix from two strings */\n    _naiveStartingAndEndingLCS : function( s1, s2 ){\n        var fwdLCS = '',\n            revLCS = '',\n            i = 0, j = 0;\n        while( i < s1.length && i < s2.length ){\n            if( s1[ i ] !== s2[ i ] ){\n                break;\n            }\n            fwdLCS += s1[ i ];\n            i += 1;\n        }\n        if( i === s1.length ){ return s1; }\n        if( i === s2.length ){ return s2; }\n\n        i = ( s1.length - 1 );\n        j = ( s2.length - 1 );\n        while( i >= 0 && j >= 0 ){\n            if( s1[ i ] !== s2[ j ] ){\n                break;\n            }\n            revLCS = [ s1[ i ], revLCS ].join( '' );\n            i -= 1;\n            j -= 1;\n        }\n        return fwdLCS + revLCS;\n    },\n\n    // ------------------------------------------------------------------------ pairing / unpairing\n    /** create a pair from fwd and rev, removing them from unpaired, and placing the new pair in paired */\n    _pair : function( fwd, rev, options ){\n        options = options || {};\n        //this.debug( '_pair:', fwd, rev );\n        var pair = this._createPair( fwd, rev, options.name );\n        this.paired.push( pair );\n        this.unpaired = _.without( this.unpaired, fwd, rev );\n        if( !options.silent ){\n            this.trigger( 'pair:new', pair );\n        }\n        return pair;\n    },\n\n    /** create a pair Object from fwd and rev, adding the name attribute (will guess if not given) */\n    _createPair : function( fwd, rev, name ){\n        // ensure existance and don't pair something with itself\n        if( !( fwd && rev ) || ( fwd === rev ) ){\n            throw new Error( 'Bad pairing: ' + [ JSON.stringify( fwd ), JSON.stringify( rev ) ] );\n        }\n        name = name || this._guessNameForPair( fwd, rev );\n        return { forward : fwd, name : name, reverse : rev };\n    },\n\n    /** try to find a good pair name for the given fwd and rev datasets */\n    _guessNameForPair : function( fwd, rev, removeExtensions ){\n        removeExtensions = ( removeExtensions !== undefined )?( removeExtensions ):( this.removeExtensions );\n        var fwdName = fwd.name,\n            revName = rev.name,\n            lcs = this._naiveStartingAndEndingLCS(\n                fwdName.replace( this.filters[0], '' ),\n                revName.replace( this.filters[1], '' )\n            );\n        if( removeExtensions ){\n            var lastDotIndex = lcs.lastIndexOf( '.' );\n            if( lastDotIndex > 0 ){\n                var extension = lcs.slice( lastDotIndex, lcs.length );\n                lcs = lcs.replace( extension, '' );\n                fwdName = fwdName.replace( extension, '' );\n                revName = revName.replace( extension, '' );\n            }\n        }\n        return lcs || ( fwdName + ' & ' + revName );\n    },\n\n    /** unpair a pair, removing it from paired, and adding the fwd,rev datasets back into unpaired */\n    _unpair : function( pair, options ){\n        options = options || {};\n        if( !pair ){\n            throw new Error( 'Bad pair: ' + JSON.stringify( pair ) );\n        }\n        this.paired = _.without( this.paired, pair );\n        this._addToUnpaired( pair.forward );\n        this._addToUnpaired( pair.reverse );\n\n        if( !options.silent ){\n            this.trigger( 'pair:unpair', [ pair ] );\n        }\n        return pair;\n    },\n\n    /** unpair all paired datasets */\n    unpairAll : function(){\n        var pairs = [];\n        while( this.paired.length ){\n            pairs.push( this._unpair( this.paired[ 0 ], { silent: true }) );\n        }\n        this.trigger( 'pair:unpair', pairs );\n    },\n\n    // ------------------------------------------------------------------------ API\n    /** convert a pair into JSON compatible with the collections API */\n    _pairToJSON : function( pair, src ){\n        src = src || 'hda';\n        //TODO: consider making this the pair structure when created instead\n        return {\n            collection_type : 'paired',\n            src             : 'new_collection',\n            name            : pair.name,\n            element_identifiers : [{\n                name    : 'forward',\n                id      : pair.forward.id,\n                src     : src\n            }, {\n                name    : 'reverse',\n                id      : pair.reverse.id,\n                src     : src\n            }]\n        };\n    },\n\n    /** create the collection via the API\n     *  @returns {jQuery.xhr Object}    the jquery ajax request\n     */\n    createList : function( name ){\n        var creator = this,\n            root = ( window.Galaxy && Galaxy.options.root )? Galaxy.options.root : '/',\n            url = root + 'api/histories/' + this.historyId + '/contents/dataset_collections';\n\n        //TODO: use ListPairedCollection.create()\n        var ajaxData = {\n            type            : 'dataset_collection',\n            collection_type : 'list:paired',\n            name            : _.escape( name || creator.$( '.collection-name' ).val() ),\n            element_identifiers : creator.paired.map( function( pair ){\n                return creator._pairToJSON( pair );\n            })\n\n        };\n        //this.debug( JSON.stringify( ajaxData ) );\n        creator.blocking = true;\n        return jQuery.ajax( url, {\n            type        : 'POST',\n            contentType : 'application/json',\n            dataType    : 'json',\n            data        : JSON.stringify( ajaxData )\n        })\n        .always( function(){\n            creator.blocking = false;\n        })\n        .fail( function( xhr, status, message ){\n            creator._ajaxErrHandler( xhr, status, message );\n        })\n        .done( function( response, message, xhr ){\n            //this.info( 'ok', response, message, xhr );\n            creator.trigger( 'collection:created', response, message, xhr );\n            creator.metric( 'collection:created', response );\n            if( typeof creator.oncreate === 'function' ){\n                creator.oncreate.call( this, response, message, xhr );\n            }\n        });\n    },\n\n    /** handle ajax errors with feedback and details to the user (if available) */\n    _ajaxErrHandler : function( xhr, status, message ){\n        this.error( xhr, status, message );\n        var content = _l( 'An error occurred while creating this collection' );\n        if( xhr ){\n            if( xhr.readyState === 0 && xhr.status === 0 ){\n                content += ': ' + _l( 'Galaxy could not be reached and may be updating.' )\n                    + _l( ' Try again in a few minutes.' );\n            } else if( xhr.responseJSON ){\n                content += '<br /><pre>' + JSON.stringify( xhr.responseJSON ) + '</pre>';\n            } else {\n                content += ': ' + message;\n            }\n        }\n        creator._showAlert( content, 'alert-danger' );\n    },\n\n    // ------------------------------------------------------------------------ rendering\n    /** render the entire interface */\n    render : function( speed, callback ){\n        //this.debug( '-- _render' );\n        //this.$el.empty().html( PairedCollectionCreator.templates.main() );\n        this.$el.empty().html( PairedCollectionCreator.templates.main() );\n        this._renderHeader( speed );\n        this._renderMiddle( speed );\n        this._renderFooter( speed );\n        this._addPluginComponents();\n        this.trigger( 'rendered', this );\n        return this;\n    },\n\n    /** render the header section */\n    _renderHeader : function( speed, callback ){\n        //this.debug( '-- _renderHeader' );\n        var $header = this.$( '.header' ).empty().html( PairedCollectionCreator.templates.header() )\n            .find( '.help-content' ).prepend( $( PairedCollectionCreator.templates.helpContent() ) );\n\n        this._renderFilters();\n        return $header;\n    },\n    /** fill the filter inputs with the filter values */\n    _renderFilters : function(){\n        return    this.$( '.forward-column .column-header input' ).val( this.filters[0] )\n            .add( this.$( '.reverse-column .column-header input' ).val( this.filters[1] ) );\n    },\n\n    /** render the middle including unpaired and paired sections (which may be hidden) */\n    _renderMiddle : function( speed, callback ){\n        var $middle = this.$( '.middle' ).empty().html( PairedCollectionCreator.templates.middle() );\n\n        // (re-) hide the un/paired panels based on instance vars\n        if( this.unpairedPanelHidden ){\n            this.$( '.unpaired-columns' ).hide();\n        } else if( this.pairedPanelHidden ){\n            this.$( '.paired-columns' ).hide();\n        }\n\n        this._renderUnpaired();\n        this._renderPaired();\n        return $middle;\n    },\n    /** render the unpaired section, showing datasets accrd. to filters, update the unpaired counts */\n    _renderUnpaired : function( speed, callback ){\n        //this.debug( '-- _renderUnpaired' );\n        var creator = this,\n            $fwd, $rev, $prd = [],\n            split = this._splitByFilters();\n        // update unpaired counts\n        this.$( '.forward-column .title' )\n            .text([ split[0].length, _l( 'unpaired forward' ) ].join( ' ' ));\n        this.$( '.forward-column .unpaired-info' )\n            .text( this._renderUnpairedDisplayStr( this.unpaired.length - split[0].length ) );\n        this.$( '.reverse-column .title' )\n            .text([ split[1].length, _l( 'unpaired reverse' ) ].join( ' ' ));\n        this.$( '.reverse-column .unpaired-info' )\n            .text( this._renderUnpairedDisplayStr( this.unpaired.length - split[1].length ) );\n\n        this.$( '.unpaired-columns .column-datasets' ).empty();\n\n        // show/hide the auto pair button if any unpaired are left\n        this.$( '.autopair-link' ).toggle( this.unpaired.length !== 0 );\n        if( this.unpaired.length === 0 ){\n            this._renderUnpairedEmpty();\n            return;\n        }\n\n        // create the dataset dom arrays\n        $rev = split[1].map( function( dataset, i ){\n            // if there'll be a fwd dataset across the way, add a button to pair the row\n            if( ( split[0][ i ] !== undefined )\n            &&  ( split[0][ i ] !== dataset ) ){\n                $prd.push( creator._renderPairButton() );\n            }\n            return creator._renderUnpairedDataset( dataset );\n        });\n        $fwd = split[0].map( function( dataset ){\n            return creator._renderUnpairedDataset( dataset );\n        });\n\n        if( !$fwd.length && !$rev.length ){\n            this._renderUnpairedNotShown();\n            return;\n        }\n        // add to appropo cols\n        //TODO: not the best way to render - consider rendering the entire unpaired-columns section in a fragment\n        //  and swapping out that\n        this.$( '.unpaired-columns .forward-column .column-datasets' ).append( $fwd )\n            .add( this.$( '.unpaired-columns .paired-column .column-datasets' ).append( $prd ) )\n            .add( this.$( '.unpaired-columns .reverse-column .column-datasets' ).append( $rev ) );\n        this._adjUnpairedOnScrollbar();\n    },\n    /** return a string to display the count of filtered out datasets */\n    _renderUnpairedDisplayStr : function( numFiltered ){\n        return [ '(', numFiltered, ' ', _l( 'filtered out' ), ')' ].join('');\n    },\n    /** return an unattached jQuery DOM element to represent an unpaired dataset */\n    _renderUnpairedDataset : function( dataset ){\n        //TODO: to underscore template\n        return $( '<li/>')\n            .attr( 'id', 'dataset-' + dataset.id )\n            .addClass( 'dataset unpaired' )\n            .attr( 'draggable', true )\n            .addClass( dataset.selected? 'selected': '' )\n            .append( $( '<span/>' ).addClass( 'dataset-name' ).text( dataset.name ) )\n            //??\n            .data( 'dataset', dataset );\n    },\n    /** render the button that may go between unpaired datasets, allowing the user to pair a row */\n    _renderPairButton : function(){\n        //TODO: *not* a dataset - don't pretend like it is\n        return $( '<li/>').addClass( 'dataset unpaired' )\n            .append( $( '<span/>' ).addClass( 'dataset-name' ).text( _l( 'Pair these datasets' ) ) );\n    },\n    /** a message to display when no unpaired left */\n    _renderUnpairedEmpty : function(){\n        //this.debug( '-- renderUnpairedEmpty' );\n        var $msg = $( '<div class=\"empty-message\"></div>' )\n            .text( '(' + _l( 'no remaining unpaired datasets' ) + ')' );\n        this.$( '.unpaired-columns .paired-column .column-datasets' ).empty().prepend( $msg );\n        return $msg;\n    },\n    /** a message to display when no unpaired can be shown with the current filters */\n    _renderUnpairedNotShown : function(){\n        //this.debug( '-- renderUnpairedEmpty' );\n        var $msg = $( '<div class=\"empty-message\"></div>' )\n            .text( '(' + _l( 'no datasets were found matching the current filters' ) + ')' );\n        this.$( '.unpaired-columns .paired-column .column-datasets' ).empty().prepend( $msg );\n        return $msg;\n    },\n    /** try to detect if the unpaired section has a scrollbar and adjust left column for better centering of all */\n    _adjUnpairedOnScrollbar : function(){\n        var $unpairedColumns = this.$( '.unpaired-columns' ).last(),\n            $firstDataset = this.$( '.unpaired-columns .reverse-column .dataset' ).first();\n        if( !$firstDataset.size() ){ return; }\n        var ucRight = $unpairedColumns.offset().left + $unpairedColumns.outerWidth(),\n            dsRight = $firstDataset.offset().left + $firstDataset.outerWidth(),\n            rightDiff = Math.floor( ucRight ) - Math.floor( dsRight );\n        //this.debug( 'rightDiff:', ucRight, '-', dsRight, '=', rightDiff );\n        this.$( '.unpaired-columns .forward-column' )\n            .css( 'margin-left', ( rightDiff > 0 )? rightDiff: 0 );\n    },\n\n    /** render the paired section and update counts of paired datasets */\n    _renderPaired : function( speed, callback ){\n        //this.debug( '-- _renderPaired' );\n        this.$( '.paired-column-title .title' ).text([ this.paired.length, _l( 'paired' ) ].join( ' ' ) );\n        // show/hide the unpair all link\n        this.$( '.unpair-all-link' ).toggle( this.paired.length !== 0 );\n        if( this.paired.length === 0 ){\n            this._renderPairedEmpty();\n            return;\n            //TODO: would be best to return here (the $columns)\n        } else {\n            // show/hide 'remove extensions link' when any paired and they seem to have extensions\n            this.$( '.remove-extensions-link' ).show();\n        }\n\n        this.$( '.paired-columns .column-datasets' ).empty();\n        var creator = this;\n        this.paired.forEach( function( pair, i ){\n            //TODO: cache these?\n            var pairView = new PairView({ pair: pair });\n            creator.$( '.paired-columns .column-datasets' )\n                .append( pairView.render().$el )\n                .append([\n                    '<button class=\"unpair-btn\">',\n                        '<span class=\"fa fa-unlink\" title=\"', _l( 'Unpair' ), '\"></span>',\n                    '</button>'\n                ].join( '' ));\n        });\n    },\n    /** a message to display when none paired */\n    _renderPairedEmpty : function(){\n        var $msg = $( '<div class=\"empty-message\"></div>' )\n            .text( '(' + _l( 'no paired datasets yet' ) + ')' );\n        this.$( '.paired-columns .column-datasets' ).empty().prepend( $msg );\n        return $msg;\n    },\n\n    /** render the footer, completion controls, and cancel controls */\n    _renderFooter : function( speed, callback ){\n        var $footer = this.$( '.footer' ).empty().html( PairedCollectionCreator.templates.footer() );\n        this.$( '.remove-extensions' ).prop( 'checked', this.removeExtensions );\n        if( typeof this.oncancel === 'function' ){\n            this.$( '.cancel-create.btn' ).show();\n        }\n        return $footer;\n    },\n\n    /** add any jQuery/bootstrap/custom plugins to elements rendered */\n    _addPluginComponents : function(){\n        this._chooseFiltersPopover( '.choose-filters-link' );\n        this.$( '.help-content i' ).hoverhighlight( '.collection-creator', 'rgba( 64, 255, 255, 1.0 )' );\n    },\n\n    /** build a filter selection popover allowing selection of common filter pairs */\n    _chooseFiltersPopover : function( selector ){\n        function filterChoice( val1, val2 ){\n            return [\n                '<button class=\"filter-choice btn\" ',\n                        'data-forward=\"', val1, '\" data-reverse=\"', val2, '\">',\n                    _l( 'Forward' ), ': ', val1, ', ',\n                    _l( 'Reverse' ), ': ', val2,\n                '</button>'\n            ].join('');\n        }\n        var $popoverContent = $( _.template([\n            '<div class=\"choose-filters\">',\n                '<div class=\"help\">',\n                    _l( 'Choose from the following filters to change which unpaired reads are shown in the display' ),\n                ':</div>',\n                _.values( this.commonFilters ).map( function( filterSet ){\n                    return filterChoice( filterSet[0], filterSet[1] );\n                }).join( '' ),\n            '</div>'\n        ].join(''))({}));\n\n        return this.$( selector ).popover({\n            container   : '.collection-creator',\n            placement   : 'bottom',\n            html        : true,\n            //animation   : false,\n            content     : $popoverContent\n        });\n    },\n\n    /** add (or clear if clear is truthy) a validation warning to what */\n    _validationWarning : function( what, clear ){\n        var VALIDATION_CLASS = 'validation-warning';\n        if( what === 'name' ){\n            what = this.$( '.collection-name' ).add( this.$( '.collection-name-prompt' ) );\n            this.$( '.collection-name' ).focus().select();\n        }\n        if( clear ){\n            what = what || this.$( '.' + VALIDATION_CLASS );\n            what.removeClass( VALIDATION_CLASS );\n        } else {\n            what.addClass( VALIDATION_CLASS );\n        }\n    },\n\n    // ------------------------------------------------------------------------ events\n    /** set up event handlers on self */\n    _setUpBehaviors : function(){\n        this.once( 'rendered', function(){\n            this.trigger( 'rendered:initial', this );\n        });\n\n        this.on( 'pair:new', function(){\n            //TODO: ideally only re-render the columns (or even elements) involved\n            this._renderUnpaired();\n            this._renderPaired();\n\n            // scroll to bottom where new pairs are added\n            //TODO: this doesn't seem to work - innerHeight sticks at 133...\n            //  may have to do with improper flex columns\n            //var $pairedView = this.$( '.paired-columns' );\n            //$pairedView.scrollTop( $pairedView.innerHeight() );\n            //this.debug( $pairedView.height() )\n            this.$( '.paired-columns' ).scrollTop( 8000000 );\n        });\n        this.on( 'pair:unpair', function( pairs ){\n            //TODO: ideally only re-render the columns (or even elements) involved\n            this._renderUnpaired();\n            this._renderPaired();\n            this.splitView();\n        });\n\n        this.on( 'filter-change', function(){\n            this.filters = [\n                this.$( '.forward-unpaired-filter input' ).val(),\n                this.$( '.reverse-unpaired-filter input' ).val()\n            ];\n            this.metric( 'filter-change', this.filters );\n            this._renderFilters();\n            this._renderUnpaired();\n        });\n\n        this.on( 'autopair', function(){\n            this._renderUnpaired();\n            this._renderPaired();\n\n            var message, msgClass = null;\n            if( this.paired.length ){\n                msgClass = 'alert-success';\n                message = this.paired.length + ' ' + _l( 'pairs created' );\n                if( !this.unpaired.length ){\n                    message += ': ' + _l( 'all datasets have been successfully paired' );\n                    this.hideUnpaired();\n                    this.$( '.collection-name' ).focus();\n                }\n            } else {\n                message = _l( 'Could not automatically create any pairs from the given dataset names' );\n            }\n            this._showAlert( message, msgClass );\n        });\n\n        //this.on( 'all', function(){\n        //    this.info( arguments );\n        //});\n        return this;\n    },\n\n    events : {\n        // header\n        'click .more-help'                          : '_clickMoreHelp',\n        'click .less-help'                          : '_clickLessHelp',\n        'click .header .alert button'               : '_hideAlert',\n        'click .forward-column .column-title'       : '_clickShowOnlyUnpaired',\n        'click .reverse-column .column-title'       : '_clickShowOnlyUnpaired',\n        'click .unpair-all-link'                    : '_clickUnpairAll',\n        //TODO: this seems kinda backasswards - re-sending jq event as a backbone event, can we listen directly?\n        'change .forward-unpaired-filter input'     : function( ev ){ this.trigger( 'filter-change' ); },\n        'focus .forward-unpaired-filter input'      : function( ev ){ $( ev.currentTarget ).select(); },\n        'click .autopair-link'                      : '_clickAutopair',\n        'click .choose-filters .filter-choice'      : '_clickFilterChoice',\n        'click .clear-filters-link'                 : '_clearFilters',\n        'change .reverse-unpaired-filter input'     : function( ev ){ this.trigger( 'filter-change' ); },\n        'focus .reverse-unpaired-filter input'      : function( ev ){ $( ev.currentTarget ).select(); },\n        // unpaired\n        'click .forward-column .dataset.unpaired'   : '_clickUnpairedDataset',\n        'click .reverse-column .dataset.unpaired'   : '_clickUnpairedDataset',\n        'click .paired-column .dataset.unpaired'    : '_clickPairRow',\n        'click .unpaired-columns'                   : 'clearSelectedUnpaired',\n        'mousedown .unpaired-columns .dataset'      : '_mousedownUnpaired',\n        // divider\n        'click .paired-column-title'                : '_clickShowOnlyPaired',\n        'mousedown .flexible-partition-drag'        : '_startPartitionDrag',\n        // paired\n        'click .paired-columns .dataset.paired'     : 'selectPair',\n        'click .paired-columns'                     : 'clearSelectedPaired',\n        'click .paired-columns .pair-name'          : '_clickPairName',\n        'click .unpair-btn'                         : '_clickUnpair',\n        // paired - drop target\n        //'dragenter .paired-columns'                 : '_dragenterPairedColumns',\n        //'dragleave .paired-columns .column-datasets': '_dragleavePairedColumns',\n        'dragover .paired-columns .column-datasets' : '_dragoverPairedColumns',\n        'drop .paired-columns .column-datasets'     : '_dropPairedColumns',\n\n        'pair.dragstart .paired-columns .column-datasets' : '_pairDragstart',\n        'pair.dragend   .paired-columns .column-datasets' : '_pairDragend',\n\n        // footer\n        'change .remove-extensions'                 : function( ev ){ this.toggleExtensions(); },\n        'change .collection-name'                   : '_changeName',\n        'keydown .collection-name'                  : '_nameCheckForEnter',\n        'click .cancel-create'                      : function( ev ){\n            if( typeof this.oncancel === 'function' ){\n                this.oncancel.call( this );\n            }\n        },\n        'click .create-collection'                  : '_clickCreate'//,\n    },\n\n    // ........................................................................ header\n    /** expand help */\n    _clickMoreHelp : function( ev ){\n        this.$( '.main-help' ).addClass( 'expanded' );\n        this.$( '.more-help' ).hide();\n    },\n    /** collapse help */\n    _clickLessHelp : function( ev ){\n        this.$( '.main-help' ).removeClass( 'expanded' );\n        this.$( '.more-help' ).show();\n    },\n\n    /** show an alert on the top of the interface containing message (alertClass is bootstrap's alert-*)*/\n    _showAlert : function( message, alertClass ){\n        alertClass = alertClass || 'alert-danger';\n        this.$( '.main-help' ).hide();\n        this.$( '.header .alert' ).attr( 'class', 'alert alert-dismissable' ).addClass( alertClass ).show()\n            .find( '.alert-message' ).html( message );\n    },\n    /** hide the alerts at the top */\n    _hideAlert : function( message ){\n        this.$( '.main-help' ).show();\n        this.$( '.header .alert' ).hide();\n    },\n\n    /** toggle between showing only unpaired and split view */\n    _clickShowOnlyUnpaired : function( ev ){\n        //this.debug( 'click unpaired', ev.currentTarget );\n        if( this.$( '.paired-columns' ).is( ':visible' ) ){\n            this.hidePaired();\n        } else {\n            this.splitView();\n        }\n    },\n    /** toggle between showing only paired and split view */\n    _clickShowOnlyPaired : function( ev ){\n        //this.debug( 'click paired' );\n        if( this.$( '.unpaired-columns' ).is( ':visible' ) ){\n            this.hideUnpaired();\n        } else {\n            this.splitView();\n        }\n    },\n\n    /** hide unpaired, show paired */\n    hideUnpaired : function( speed, callback ){\n        this.unpairedPanelHidden = true;\n        this.pairedPanelHidden = false;\n        this._renderMiddle( speed, callback );\n    },\n    /** hide paired, show unpaired */\n    hidePaired : function( speed, callback ){\n        this.unpairedPanelHidden = false;\n        this.pairedPanelHidden = true;\n        this._renderMiddle( speed, callback );\n    },\n    /** show both paired and unpaired (splitting evenly) */\n    splitView : function( speed, callback ){\n        this.unpairedPanelHidden = this.pairedPanelHidden = false;\n        this._renderMiddle( speed, callback );\n        return this;\n    },\n\n    /** unpair all paired and do other super neat stuff which I'm not really sure about yet... */\n    _clickUnpairAll : function( ev ){\n        this.metric( 'unpairAll' );\n        this.unpairAll();\n    },\n\n    /** attempt to autopair */\n    _clickAutopair : function( ev ){\n        var paired = this.autoPair();\n        this.metric( 'autopair', paired.length, this.unpaired.length );\n        this.trigger( 'autopair' );\n    },\n\n    /** set the filters based on the data attributes of the button click target */\n    _clickFilterChoice : function( ev ){\n        var $selected = $( ev.currentTarget );\n        this.$( '.forward-unpaired-filter input' ).val( $selected.data( 'forward' ) );\n        this.$( '.reverse-unpaired-filter input' ).val( $selected.data( 'reverse' ) );\n        this._hideChooseFilters();\n        this.trigger( 'filter-change' );\n    },\n\n    /** hide the choose filters popover */\n    _hideChooseFilters : function(){\n        //TODO: update bootstrap and remove the following hack\n        //  see also: https://github.com/twbs/bootstrap/issues/10260\n        this.$( '.choose-filters-link' ).popover( 'hide' );\n        this.$( '.popover' ).css( 'display', 'none' );\n    },\n\n    /** clear both filters */\n    _clearFilters : function( ev ){\n        this.$( '.forward-unpaired-filter input' ).val( '' );\n        this.$( '.reverse-unpaired-filter input' ).val( '' );\n        this.trigger( 'filter-change' );\n    },\n\n    // ........................................................................ unpaired\n    /** select an unpaired dataset */\n    _clickUnpairedDataset : function( ev ){\n        ev.stopPropagation();\n        return this.toggleSelectUnpaired( $( ev.currentTarget ) );\n    },\n\n    /** Toggle the selection of an unpaired dataset representation.\n     *  @param [jQuery] $dataset        the unpaired dataset dom rep to select\n     *  @param [Boolean] options.force  if defined, force selection based on T/F; otherwise, toggle\n     */\n    toggleSelectUnpaired : function( $dataset, options ){\n        options = options || {};\n        var dataset = $dataset.data( 'dataset' ),\n            select = options.force !== undefined? options.force: !$dataset.hasClass( 'selected' );\n        //this.debug( id, options.force, $dataset, dataset );\n        if( !$dataset.size() || dataset === undefined ){ return $dataset; }\n\n        if( select ){\n            $dataset.addClass( 'selected' );\n            if( !options.waitToPair ){\n                this.pairAllSelected();\n            }\n\n        } else {\n            $dataset.removeClass( 'selected' );\n            //delete dataset.selected;\n        }\n        return $dataset;\n    },\n\n    /** pair all the currently selected unpaired datasets */\n    pairAllSelected : function( options ){\n        options = options || {};\n        var creator = this,\n            fwds = [],\n            revs = [],\n            pairs = [];\n        creator.$( '.unpaired-columns .forward-column .dataset.selected' ).each( function(){\n            fwds.push( $( this ).data( 'dataset' ) );\n        });\n        creator.$( '.unpaired-columns .reverse-column .dataset.selected' ).each( function(){\n            revs.push( $( this ).data( 'dataset' ) );\n        });\n        fwds.length = revs.length = Math.min( fwds.length, revs.length );\n        //this.debug( fwds );\n        //this.debug( revs );\n        fwds.forEach( function( fwd, i ){\n            try {\n                pairs.push( creator._pair( fwd, revs[i], { silent: true }) );\n\n            } catch( err ){\n                //TODO: preserve selected state of those that couldn't be paired\n                //TODO: warn that some could not be paired\n                creator.error( err );\n            }\n        });\n        if( pairs.length && !options.silent ){\n            this.trigger( 'pair:new', pairs );\n        }\n        return pairs;\n    },\n\n    /** clear the selection on all unpaired datasets */\n    clearSelectedUnpaired : function(){\n        this.$( '.unpaired-columns .dataset.selected' ).removeClass( 'selected' );\n    },\n\n    /** when holding down the shift key on a click, 'paint' the moused over datasets as selected */\n    _mousedownUnpaired : function( ev ){\n        if( ev.shiftKey ){\n            var creator = this,\n                $startTarget = $( ev.target ).addClass( 'selected' ),\n                moveListener = function( ev ){\n                    creator.$( ev.target ).filter( '.dataset' ).addClass( 'selected' );\n                };\n            $startTarget.parent().on( 'mousemove', moveListener );\n\n            // on any mouseup, stop listening to the move and try to pair any selected\n            $( document ).one( 'mouseup', function( ev ){\n                $startTarget.parent().off( 'mousemove', moveListener );\n                creator.pairAllSelected();\n            });\n        }\n    },\n\n    /** attempt to pair two datasets directly across from one another */\n    _clickPairRow : function( ev ){\n        //if( !ev.currentTarget ){ return true; }\n        var rowIndex = $( ev.currentTarget ).index(),\n            fwd = $( '.unpaired-columns .forward-column .dataset' ).eq( rowIndex ).data( 'dataset' ),\n            rev = $( '.unpaired-columns .reverse-column .dataset' ).eq( rowIndex ).data( 'dataset' );\n        //this.debug( 'row:', rowIndex, fwd, rev );\n        this._pair( fwd, rev );\n    },\n\n    // ........................................................................ divider/partition\n    /** start dragging the visible divider/partition between unpaired and paired panes */\n    _startPartitionDrag : function( ev ){\n        var creator = this,\n            startingY = ev.pageY;\n        //this.debug( 'partition drag START:', ev );\n        $( 'body' ).css( 'cursor', 'ns-resize' );\n        creator.$( '.flexible-partition-drag' ).css( 'color', 'black' );\n\n        function endDrag( ev ){\n            //creator.debug( 'partition drag STOP:', ev );\n            // doing this by an added class didn't really work well - kept flashing still\n            creator.$( '.flexible-partition-drag' ).css( 'color', '' );\n            $( 'body' ).css( 'cursor', '' ).unbind( 'mousemove', trackMouse );\n        }\n        function trackMouse( ev ){\n            var offset = ev.pageY - startingY;\n            //creator.debug( 'partition:', startingY, offset );\n            if( !creator.adjPartition( offset ) ){\n                //creator.debug( 'mouseup triggered' );\n                $( 'body' ).trigger( 'mouseup' );\n            }\n            creator._adjUnpairedOnScrollbar();\n            startingY += offset;\n        }\n        $( 'body' ).mousemove( trackMouse );\n        $( 'body' ).one( 'mouseup', endDrag );\n    },\n\n    /** adjust the parition up/down +/-adj pixels */\n    adjPartition : function( adj ){\n        var $unpaired = this.$( '.unpaired-columns' ),\n            $paired = this.$( '.paired-columns' ),\n            unpairedHi = parseInt( $unpaired.css( 'height' ), 10 ),\n            pairedHi = parseInt( $paired.css( 'height' ), 10 );\n        //this.debug( adj, 'hi\\'s:', unpairedHi, pairedHi, unpairedHi + adj, pairedHi - adj );\n\n        unpairedHi = Math.max( 10, unpairedHi + adj );\n        pairedHi = pairedHi - adj;\n\n        var movingUpwards = adj < 0;\n        // when the divider gets close to the top - lock into hiding the unpaired section\n        if( movingUpwards ){\n            if( this.unpairedPanelHidden ){\n                return false;\n            } else if( unpairedHi <= 10 ){\n                this.hideUnpaired();\n                return false;\n            }\n        } else {\n            if( this.unpairedPanelHidden ){\n                $unpaired.show();\n                this.unpairedPanelHidden = false;\n            }\n        }\n\n        // when the divider gets close to the bottom - lock into hiding the paired section\n        if( !movingUpwards ){\n            if( this.pairedPanelHidden ){\n                return false;\n            } else if( pairedHi <= 15 ){\n                this.hidePaired();\n                return false;\n            }\n\n        } else {\n            if( this.pairedPanelHidden ){\n                $paired.show();\n                this.pairedPanelHidden = false;\n            }\n        }\n\n        $unpaired.css({\n            height  : unpairedHi + 'px',\n            flex    : '0 0 auto'\n        });\n        return true;\n    },\n\n    // ........................................................................ paired\n    /** select a pair when clicked */\n    selectPair : function( ev ){\n        ev.stopPropagation();\n        $( ev.currentTarget ).toggleClass( 'selected' );\n    },\n\n    /** deselect all pairs */\n    clearSelectedPaired : function( ev ){\n        this.$( '.paired-columns .dataset.selected' ).removeClass( 'selected' );\n    },\n\n    /** rename a pair when the pair name is clicked */\n    _clickPairName : function( ev ){\n        ev.stopPropagation();\n        var $name = $( ev.currentTarget ),\n            $pair = $name.parent().parent(),\n            index = $pair.index( '.dataset.paired' ),\n            pair = this.paired[ index ],\n            response = prompt( 'Enter a new name for the pair:', pair.name );\n        if( response ){\n            pair.name = response;\n            // set a flag (which won't be passed in json creation) for manual naming so we don't overwrite these\n            //  when adding/removing extensions\n            //hackish\n            pair.customizedName = true;\n            $name.text( pair.name );\n        }\n    },\n\n    /** unpair this pair */\n    _clickUnpair : function( ev ){\n        //if( !ev.currentTarget ){ return true; }\n        var pairIndex = Math.floor( $( ev.currentTarget ).index( '.unpair-btn' ) );\n        //this.debug( 'pair:', pairIndex );\n        this._unpair( this.paired[ pairIndex ] );\n    },\n\n    // ........................................................................ paired - drag and drop re-ordering\n    //_dragenterPairedColumns : function( ev ){\n    //    this.debug( '_dragenterPairedColumns:', ev );\n    //},\n    //_dragleavePairedColumns : function( ev ){\n    //    //this.debug( '_dragleavePairedColumns:', ev );\n    //},\n    /** track the mouse drag over the paired list adding a placeholder to show where the drop would occur */\n    _dragoverPairedColumns : function( ev ){\n        //this.debug( '_dragoverPairedColumns:', ev );\n        ev.preventDefault();\n\n        var $list = this.$( '.paired-columns .column-datasets' );\n        this._checkForAutoscroll( $list, ev.originalEvent.clientY );\n        //this.debug( ev.originalEvent.clientX, ev.originalEvent.clientY );\n        var $nearest = this._getNearestPairedDatasetLi( ev.originalEvent.clientY );\n\n        $( '.element-drop-placeholder' ).remove();\n        var $placeholder = $( '<div class=\"element-drop-placeholder\"></div>' );\n        if( !$nearest.size() ){\n            $list.append( $placeholder );\n        } else {\n            $nearest.before( $placeholder );\n        }\n    },\n\n    /** If the mouse is near enough to the list's top or bottom, scroll the list */\n    _checkForAutoscroll : function( $element, y ){\n        var AUTOSCROLL_SPEED = 2;\n        var offset = $element.offset(),\n            scrollTop = $element.scrollTop(),\n            upperDist = y - offset.top,\n            lowerDist = ( offset.top + $element.outerHeight() ) - y;\n        //this.debug( '_checkForAutoscroll:', scrollTop, upperDist, lowerDist );\n        if( upperDist >= 0 && upperDist < this.autoscrollDist ){\n            $element.scrollTop( scrollTop - AUTOSCROLL_SPEED );\n        } else if( lowerDist >= 0 && lowerDist < this.autoscrollDist ){\n            $element.scrollTop( scrollTop + AUTOSCROLL_SPEED );\n        }\n    },\n\n    /** get the nearest *previous* paired dataset PairView based on the mouse's Y coordinate.\n     *      If the y is at the end of the list, return an empty jQuery object.\n     */\n    _getNearestPairedDatasetLi : function( y ){\n        var WIGGLE = 4,\n            lis = this.$( '.paired-columns .column-datasets li' ).toArray();\n        for( var i=0; i<lis.length; i++ ){\n            var $li = $( lis[i] ),\n                top = $li.offset().top,\n                halfHeight = Math.floor( $li.outerHeight() / 2 ) + WIGGLE;\n            if( top + halfHeight > y && top - halfHeight < y ){\n                //this.debug( y, top + halfHeight, top - halfHeight )\n                return $li;\n            }\n        }\n        return $();\n    },\n    /** drop (dragged/selected PairViews) onto the list, re-ordering both the DOM and the internal array of pairs */\n    _dropPairedColumns : function( ev ){\n        // both required for firefox\n        ev.preventDefault();\n        ev.dataTransfer.dropEffect = 'move';\n\n        var $nearest = this._getNearestPairedDatasetLi( ev.originalEvent.clientY );\n        if( $nearest.size() ){\n            this.$dragging.insertBefore( $nearest );\n\n        } else {\n            // no nearest before - insert after last element (unpair button)\n            this.$dragging.insertAfter( this.$( '.paired-columns .unpair-btn' ).last() );\n        }\n        // resync the creator's list of paired based on the new DOM order\n        this._syncPairsToDom();\n        return false;\n    },\n    /** resync the creator's list of paired based on the DOM order of pairs */\n    _syncPairsToDom : function(){\n        var newPaired = [];\n        //TODO: doesn't seem wise to use the dom to store these - can't we sync another way?\n        this.$( '.paired-columns .dataset.paired' ).each( function(){\n            newPaired.push( $( this ).data( 'pair' ) );\n        });\n        //this.debug( newPaired );\n        this.paired = newPaired;\n        this._renderPaired();\n    },\n    /** drag communication with pair sub-views: dragstart */\n    _pairDragstart : function( ev, pair ){\n        //this.debug( '_pairDragstart', ev, pair )\n        // auto select the pair causing the event and move all selected\n        pair.$el.addClass( 'selected' );\n        var $selected = this.$( '.paired-columns .dataset.selected' );\n        this.$dragging = $selected;\n    },\n    /** drag communication with pair sub-views: dragend - remove the placeholder */\n    _pairDragend : function( ev, pair ){\n        //this.debug( '_pairDragend', ev, pair )\n        $( '.element-drop-placeholder' ).remove();\n        this.$dragging = null;\n    },\n\n    // ........................................................................ footer\n    toggleExtensions : function( force ){\n        var creator = this;\n        creator.removeExtensions = ( force !== undefined )?( force ):( !creator.removeExtensions );\n\n        _.each( creator.paired, function( pair ){\n            // don't overwrite custom names\n            if( pair.customizedName ){ return; }\n            pair.name = creator._guessNameForPair( pair.forward, pair.reverse );\n        });\n\n        creator._renderPaired();\n        creator._renderFooter();\n    },\n\n    /** handle a collection name change */\n    _changeName : function( ev ){\n        this._validationWarning( 'name', !!this._getName() );\n    },\n\n    /** check for enter key press when in the collection name and submit */\n    _nameCheckForEnter : function( ev ){\n        if( ev.keyCode === 13 && !this.blocking ){\n            this._clickCreate();\n        }\n    },\n\n    /** get the current collection name */\n    _getName : function(){\n        return _.escape( this.$( '.collection-name' ).val() );\n    },\n\n    /** attempt to create the current collection */\n    _clickCreate : function( ev ){\n        var name = this._getName();\n        if( !name ){\n            this._validationWarning( 'name' );\n        } else if( !this.blocking ){\n            this.createList();\n        }\n    },\n\n    // ------------------------------------------------------------------------ misc\n    /** debug a dataset list */\n    _printList : function( list ){\n        var creator = this;\n        _.each( list, function( e ){\n            if( list === creator.paired ){\n                creator._printPair( e );\n            } else {\n                //creator.debug( e );\n            }\n        });\n    },\n\n    /** print a pair Object */\n    _printPair : function( pair ){\n        this.debug( pair.forward.name, pair.reverse.name, ': ->', pair.name );\n    },\n\n    /** string rep */\n    toString : function(){ return 'PairedCollectionCreator'; }\n});\n\n\n//TODO: move to require text plugin and load these as text\n//TODO: underscore currently unnecc. bc no vars are used\n//TODO: better way of localizing text-nodes in long strings\n/** underscore template fns attached to class */\nPairedCollectionCreator.templates = PairedCollectionCreator.templates || {\n\n    /** the skeleton */\n    main : _.template([\n        '<div class=\"header flex-row no-flex\"></div>',\n        '<div class=\"middle flex-row flex-row-container\"></div>',\n        '<div class=\"footer flex-row no-flex\">'\n    ].join('')),\n\n    /** the header (not including help text) */\n    header : _.template([\n        '<div class=\"main-help well clear\">',\n            '<a class=\"more-help\" href=\"javascript:void(0);\">', _l( 'More help' ), '</a>',\n            '<div class=\"help-content\">',\n                '<a class=\"less-help\" href=\"javascript:void(0);\">', _l( 'Less' ), '</a>',\n            '</div>',\n        '</div>',\n        '<div class=\"alert alert-dismissable\">',\n            '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>',\n            '<span class=\"alert-message\"></span>',\n        '</div>',\n\n        '<div class=\"column-headers vertically-spaced flex-column-container\">',\n            '<div class=\"forward-column flex-column column\">',\n                '<div class=\"column-header\">',\n                    '<div class=\"column-title\">',\n                        '<span class=\"title\">', _l( 'Unpaired forward' ), '</span>',\n                        '<span class=\"title-info unpaired-info\"></span>',\n                    '</div>',\n                    '<div class=\"unpaired-filter forward-unpaired-filter pull-left\">',\n                        '<input class=\"search-query\" placeholder=\"', _l( 'Filter this list' ), '\" />',\n                    '</div>',\n                '</div>',\n            '</div>',\n            '<div class=\"paired-column flex-column no-flex column\">',\n                '<div class=\"column-header\">',\n                    '<a class=\"choose-filters-link\" href=\"javascript:void(0)\">',\n                        _l( 'Choose filters' ),\n                    '</a>',\n                    '<a class=\"clear-filters-link\" href=\"javascript:void(0);\">',\n                        _l( 'Clear filters' ),\n                    '</a><br />',\n                    '<a class=\"autopair-link\" href=\"javascript:void(0);\">',\n                        _l( 'Auto-pair' ),\n                    '</a>',\n                '</div>',\n            '</div>',\n            '<div class=\"reverse-column flex-column column\">',\n                '<div class=\"column-header\">',\n                    '<div class=\"column-title\">',\n                        '<span class=\"title\">', _l( 'Unpaired reverse' ), '</span>',\n                        '<span class=\"title-info unpaired-info\"></span>',\n                    '</div>',\n                    '<div class=\"unpaired-filter reverse-unpaired-filter pull-left\">',\n                        '<input class=\"search-query\" placeholder=\"', _l( 'Filter this list' ), '\" />',\n                    '</div>',\n                '</div>',\n            '</div>',\n        '</div>'\n    ].join('')),\n\n    /** the middle: unpaired, divider, and paired */\n    middle : _.template([\n        // contains two flex rows (rows that fill available space) and a divider btwn\n        '<div class=\"unpaired-columns flex-column-container scroll-container flex-row\">',\n            '<div class=\"forward-column flex-column column\">',\n                '<ol class=\"column-datasets\"></ol>',\n            '</div>',\n            '<div class=\"paired-column flex-column no-flex column\">',\n                '<ol class=\"column-datasets\"></ol>',\n            '</div>',\n            '<div class=\"reverse-column flex-column column\">',\n                '<ol class=\"column-datasets\"></ol>',\n            '</div>',\n        '</div>',\n        '<div class=\"flexible-partition\">',\n            '<div class=\"flexible-partition-drag\" title=\"', _l( 'Drag to change' ), '\"></div>',\n            '<div class=\"column-header\">',\n                '<div class=\"column-title paired-column-title\">',\n                    '<span class=\"title\"></span>',\n                '</div>',\n                '<a class=\"unpair-all-link\" href=\"javascript:void(0);\">',\n                    _l( 'Unpair all' ),\n                '</a>',\n            '</div>',\n        '</div>',\n        '<div class=\"paired-columns flex-column-container scroll-container flex-row\">',\n            '<ol class=\"column-datasets\"></ol>',\n        '</div>'\n    ].join('')),\n\n    /** creation and cancel controls */\n    footer : _.template([\n        '<div class=\"attributes clear\">',\n            '<div class=\"clear\">',\n                '<label class=\"remove-extensions-prompt pull-right\">',\n                    _l( 'Remove file extensions from pair names' ), '?',\n                    '<input class=\"remove-extensions pull-right\" type=\"checkbox\" />',\n                '</label>',\n            '</div>',\n            '<div class=\"clear\">',\n                '<input class=\"collection-name form-control pull-right\" ',\n                    'placeholder=\"', _l( 'Enter a name for your new list' ), '\" />',\n                '<div class=\"collection-name-prompt pull-right\">', _l( 'Name' ), ':</div>',\n            '</div>',\n        '</div>',\n\n        '<div class=\"actions clear vertically-spaced\">',\n            '<div class=\"other-options pull-left\">',\n                '<button class=\"cancel-create btn\" tabindex=\"-1\">', _l( 'Cancel' ), '</button>',\n                '<div class=\"create-other btn-group dropup\">',\n                    '<button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\">',\n                          _l( 'Create a different kind of collection' ),\n                          ' <span class=\"caret\"></span>',\n                    '</button>',\n                    '<ul class=\"dropdown-menu\" role=\"menu\">',\n                          '<li><a href=\"#\">', _l( 'Create a <i>single</i> pair' ), '</a></li>',\n                          '<li><a href=\"#\">', _l( 'Create a list of <i>unpaired</i> datasets' ), '</a></li>',\n                    '</ul>',\n                '</div>',\n            '</div>',\n\n            '<div class=\"main-options pull-right\">',\n                '<button class=\"create-collection btn btn-primary\">', _l( 'Create list' ), '</button>',\n            '</div>',\n        '</div>'\n    ].join('')),\n\n    /** help content */\n    helpContent : _.template([\n        '<p>', _l([\n            'Collections of paired datasets are ordered lists of dataset pairs (often forward and reverse reads). ',\n            'These collections can be passed to tools and workflows in order to have analyses done on each member of ',\n            'the entire group. This interface allows you to create a collection, choose which datasets are paired, ',\n            'and re-order the final collection.'\n        ].join( '' )), '</p>',\n        '<p>', _l([\n            'Unpaired datasets are shown in the <i data-target=\".unpaired-columns\">unpaired section</i> ',\n            '(hover over the underlined words to highlight below). ',\n            'Paired datasets are shown in the <i data-target=\".paired-columns\">paired section</i>.',\n            '<ul>To pair datasets, you can:',\n                '<li>Click a dataset in the ',\n                    '<i data-target=\".unpaired-columns .forward-column .column-datasets,',\n                                    '.unpaired-columns .forward-column\">forward column</i> ',\n                    'to select it then click a dataset in the ',\n                    '<i data-target=\".unpaired-columns .reverse-column .column-datasets,',\n                                    '.unpaired-columns .reverse-column\">reverse column</i>.',\n                '</li>',\n                '<li>Click one of the \"Pair these datasets\" buttons in the ',\n                    '<i data-target=\".unpaired-columns .paired-column .column-datasets,',\n                                    '.unpaired-columns .paired-column\">middle column</i> ',\n                    'to pair the datasets in a particular row.',\n                '</li>',\n                '<li>Click <i data-target=\".autopair-link\">\"Auto-pair\"</i> ',\n                    'to have your datasets automatically paired based on name.',\n                '</li>',\n            '</ul>'\n        ].join( '' )), '</p>',\n        '<p>', _l([\n            '<ul>You can filter what is shown in the unpaired sections by:',\n                '<li>Entering partial dataset names in either the ',\n                    '<i data-target=\".forward-unpaired-filter input\">forward filter</i> or ',\n                    '<i data-target=\".reverse-unpaired-filter input\">reverse filter</i>.',\n                '</li>',\n                '<li>Choosing from a list of preset filters by clicking the ',\n                    '<i data-target=\".choose-filters-link\">\"Choose filters\" link</i>.',\n                '</li>',\n                '<li>Entering regular expressions to match dataset names. See: ',\n                    '<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\"',\n                        ' target=\"_blank\">MDN\\'s JavaScript Regular Expression Tutorial</a>. ',\n                    'Note: forward slashes (\\\\) are not needed.',\n                '</li>',\n                '<li>Clearing the filters by clicking the ',\n                    '<i data-target=\".clear-filters-link\">\"Clear filters\" link</i>.',\n                '</li>',\n            '</ul>'\n        ].join( '' )), '</p>',\n        '<p>', _l([\n            'To unpair individual dataset pairs, click the ',\n                '<i data-target=\".unpair-btn\">unpair buttons ( <span class=\"fa fa-unlink\"></span> )</i>. ',\n            'Click the <i data-target=\".unpair-all-link\">\"Unpair all\" link</i> to unpair all pairs.'\n        ].join( '' )), '</p>',\n        '<p>', _l([\n            'You can include or remove the file extensions (e.g. \".fastq\") from your pair names by toggling the ',\n                '<i data-target=\".remove-extensions-prompt\">\"Remove file extensions from pair names?\"</i> control.'\n        ].join( '' )), '</p>',\n        '<p>', _l([\n            'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n            'click <i data-target=\".create-collection\">\"Create list\"</i>. ',\n            '(Note: you do not have to pair all unpaired datasets to finish.)'\n        ].join( '' )), '</p>'\n    ].join(''))\n};\n\n\n//=============================================================================\n/** a modal version of the paired collection creator */\nvar pairedCollectionCreatorModal = function _pairedCollectionCreatorModal( datasets, options ){\n\n    var deferred = jQuery.Deferred(),\n        creator;\n\n    options = _.defaults( options || {}, {\n        datasets    : datasets,\n        oncancel    : function(){\n            Galaxy.modal.hide();\n            deferred.reject( 'cancelled' );\n        },\n        oncreate    : function( creator, response ){\n            Galaxy.modal.hide();\n            deferred.resolve( response );\n        }\n    });\n\n    if( !window.Galaxy || !Galaxy.modal ){\n        throw new Error( 'Galaxy or Galaxy.modal not found' );\n    }\n\n    creator = new PairedCollectionCreator( options );\n    Galaxy.modal.show({\n        title   : 'Create a collection of paired datasets',\n        body    : creator.$el,\n        width   : '80%',\n        height  : '800px',\n        closing_events: true\n    });\n    creator.render();\n    window.creator = creator;\n\n    //TODO: remove modal header\n    return deferred;\n};\n\n\n//=============================================================================\nfunction createListOfPairsCollection( collection ){\n    var elements = collection.toJSON();\n//TODO: validate elements\n    return pairedCollectionCreatorModal( elements, {\n        historyId : collection.historyId\n    });\n}\n\n\n//=============================================================================\n    return {\n        PairedCollectionCreator : PairedCollectionCreator,\n        pairedCollectionCreatorModal : pairedCollectionCreatorModal,\n        createListOfPairsCollection : createListOfPairsCollection\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/collection/list-of-pairs-collection-creator.js\n ** module id = 84\n ** module chunks = 2\n **/","define([\n    \"mvc/collection/list-collection-creator\",\n    \"mvc/history/hdca-model\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( LIST_CREATOR, HDCA, BASE_MVC, _l ){\n\nvar logNamespace = 'collections';\n/*==============================================================================\nTODO:\n    the paired creator doesn't really mesh with the list creator as parent\n        it may be better to make an abstract super class for both\n    composites may inherit from this (or vis-versa)\n    PairedDatasetCollectionElementView doesn't make a lot of sense\n\n==============================================================================*/\n/**  */\nvar PairedDatasetCollectionElementView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n    _logNamespace : logNamespace,\n\n//TODO: use proper class (DatasetDCE or NestedDCDCE (or the union of both))\n    tagName     : 'li',\n    className   : 'collection-element',\n\n    initialize : function( attributes ){\n        this.element = attributes.element || {};\n        this.identifier = attributes.identifier;\n    },\n\n    render : function(){\n        this.$el\n            .attr( 'data-element-id', this.element.id )\n            .html( this.template({ identifier: this.identifier, element: this.element }) );\n        return this;\n    },\n\n    //TODO: lots of unused space in the element - possibly load details and display them horiz.\n    template : _.template([\n        '<span class=\"identifier\"><%= identifier %></span>',\n        '<span class=\"name\"><%= element.name %></span>',\n    ].join('')),\n\n    /** remove the DOM and any listeners */\n    destroy : function(){\n        this.off();\n        this.$el.remove();\n    },\n\n    /** string rep */\n    toString : function(){\n        return 'DatasetCollectionElementView()';\n    }\n});\n\n\n// ============================================================================\nvar _super = LIST_CREATOR.ListCollectionCreator;\n\n/** An interface for building collections.\n */\nvar PairCollectionCreator = _super.extend({\n\n    /** the class used to display individual elements */\n    elementViewClass : PairedDatasetCollectionElementView,\n    /** the class this creator will create and save */\n    collectionClass : HDCA.HistoryPairDatasetCollection,\n    className : 'pair-collection-creator collection-creator flex-row-container',\n\n    /** override to no-op */\n    _mangleDuplicateNames : function(){},\n\n    // TODO: this whole pattern sucks. There needs to be two classes of problem area:\n    //      bad inital choices and\n    //      when the user has painted his/her self into a corner during creation/use-of-the-creator\n    /** render the entire interface */\n    render : function( speed, callback ){\n        if( this.workingElements.length === 2 ){\n            return _super.prototype.render.call( this, speed, callback );\n        }\n        return this._renderInvalid( speed, callback );\n    },\n\n    // ------------------------------------------------------------------------ rendering elements\n    /** render forward/reverse */\n    _renderList : function( speed, callback ){\n        //this.debug( '-- _renderList' );\n        //precondition: there are two valid elements in workingElements\n        var creator = this,\n            $tmp = jQuery( '<div/>' ),\n            $list = creator.$list();\n\n        // lose the original views, create the new, append all at once, then call their renders\n        _.each( this.elementViews, function( view ){\n            view.destroy();\n            creator.removeElementView( view );\n        });\n        $tmp.append( creator._createForwardElementView().$el );\n        $tmp.append( creator._createReverseElementView().$el );\n        $list.empty().append( $tmp.children() );\n        _.invoke( creator.elementViews, 'render' );\n    },\n\n    /** create the forward element view */\n    _createForwardElementView : function(){\n        return this._createElementView( this.workingElements[0], { identifier: 'forward' } );\n    },\n\n    /** create the forward element view */\n    _createReverseElementView : function(){\n        return this._createElementView( this.workingElements[1], { identifier: 'reverse' } );\n    },\n\n    /** create an element view, cache in elementViews, and return */\n    _createElementView : function( element, options ){\n        var elementView = new this.elementViewClass( _.extend( options, {\n            element : element,\n        }));\n        this.elementViews.push( elementView );\n        return elementView;\n    },\n\n    /** swap the forward, reverse elements and re-render */\n    swap : function(){\n        this.workingElements = [\n            this.workingElements[1],\n            this.workingElements[0],\n        ];\n        this._renderList();\n    },\n\n    events : _.extend( _.clone( _super.prototype.events ), {\n        'click .swap' : 'swap',\n    }),\n\n    // ------------------------------------------------------------------------ templates\n    //TODO: move to require text plugin and load these as text\n    //TODO: underscore currently unnecc. bc no vars are used\n    //TODO: better way of localizing text-nodes in long strings\n    /** underscore template fns attached to class */\n    templates : _.extend( _.clone( _super.prototype.templates ), {\n        /** the middle: element list */\n        middle : _.template([\n            '<div class=\"collection-elements-controls\">',\n                '<a class=\"swap\" href=\"javascript:void(0);\" title=\"', _l( 'Swap forward and reverse datasets' ), '\">',\n                    _l( 'Swap' ),\n                '</a>',\n            '</div>',\n            '<div class=\"collection-elements scroll-container flex-row\">',\n            '</div>'\n        ].join('')),\n\n        /** help content */\n        helpContent : _.template([\n            '<p>', _l([\n                'Pair collections are permanent collections containing two datasets: one forward and one reverse. ',\n                'Often these are forward and reverse reads. The pair collections can be passed to tools and ',\n                'workflows in order to have analyses done on both datasets. This interface allows ',\n                'you to create a pair, name it, and swap which is forward and which reverse.'\n            ].join( '' )), '</p>',\n            '<ul>',\n                '<li>', _l([\n                    'Click the <i data-target=\".swap\">\"Swap\"</i> link to make your forward dataset the reverse ',\n                    'and the reverse dataset forward.'\n                ].join( '' )), '</li>',\n                '<li>', _l([\n                    'Click the <i data-target=\".cancel-create\">\"Cancel\"</i> button to exit the interface.'\n                ].join( '' )), '</li>',\n            '</ul><br />',\n            '<p>', _l([\n                'Once your collection is complete, enter a <i data-target=\".collection-name\">name</i> and ',\n                'click <i data-target=\".create-collection\">\"Create list\"</i>.'\n            ].join( '' )), '</p>'\n        ].join('')),\n\n        /** a simplified page communicating what went wrong and why the user needs to reselect something else */\n        invalidInitial : _.template([\n            '<div class=\"header flex-row no-flex\">',\n                '<div class=\"alert alert-warning\" style=\"display: block\">',\n                    '<span class=\"alert-message\">',\n                        '<% if( _.size( problems ) ){ %>',\n                            _l( 'The following selections could not be included due to problems' ),\n                            '<ul><% _.each( problems, function( problem ){ %>',\n                                '<li><b><%= problem.element.name %></b>: <%= problem.text %></li>',\n                            '<% }); %></ul>',\n                        '<% } else if( _.size( elements ) === 0 ){ %>',\n                            _l( 'No datasets were selected' ), '.',\n                        '<% } else if( _.size( elements ) === 1 ){ %>',\n                            _l( 'Only one dataset was selected' ), ': <%= elements[0].name %>',\n                        '<% } else if( _.size( elements ) > 2 ){ %>',\n                            _l( 'Too many datasets were selected' ),\n                            ': <%= _.pluck( elements, \"name\" ).join( \", \") %>',\n                        '<% } %>',\n                        '<br />',\n                        _l( 'Two (and only two) elements are needed for the pair' ), '. ',\n                        _l( 'You may need to ' ),\n                        '<a class=\"cancel-create\" href=\"javascript:void(0)\">', _l( 'cancel' ), '</a> ',\n                        _l( 'and reselect new elements' ), '.',\n                    '</span>',\n                '</div>',\n            '</div>',\n            '<div class=\"footer flex-row no-flex\">',\n                '<div class=\"actions clear vertically-spaced\">',\n                    '<div class=\"other-options pull-left\">',\n                        '<button class=\"cancel-create btn\" tabindex=\"-1\">', _l( 'Cancel' ), '</button>',\n                        // _l( 'Create a different kind of collection' ),\n                    '</div>',\n                '</div>',\n            '</div>'\n        ].join('')),\n    }),\n\n    // ------------------------------------------------------------------------ misc\n    /** string rep */\n    toString : function(){ return 'PairCollectionCreator'; }\n});\n\n\n//==============================================================================\n/** List collection flavor of collectionCreatorModal. */\nvar pairCollectionCreatorModal = function _pairCollectionCreatorModal( elements, options ){\n    options = options || {};\n    options.title = _l( 'Create a collection from a pair of datasets' );\n    return LIST_CREATOR.collectionCreatorModal( elements, options, PairCollectionCreator );\n};\n\n\n//==============================================================================\n/** Use a modal to create a pair collection, then add it to the given history contents.\n *  @returns {Deferred} resolved when the collection is added to the history.\n */\nfunction createPairCollection( contents ){\n    var elements = contents.toJSON(),\n        promise = pairCollectionCreatorModal( elements, {\n            creationFn : function( elements, name ){\n                elements = [\n                    { name: \"forward\", src: \"hda\", id: elements[0].id },\n                    { name: \"reverse\", src: \"hda\", id: elements[1].id }\n                ];\n                return contents.createHDCA( elements, 'paired', name );\n            }\n        });\n    return promise;\n}\n\n//==============================================================================\n    return {\n        PairCollectionCreator       : PairCollectionCreator,\n        pairCollectionCreatorModal  : pairCollectionCreatorModal,\n        createPairCollection        : createPairCollection,\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/collection/pair-collection-creator.js\n ** module id = 85\n ** module chunks = 2\n **/","/*\n    This class maps the form dom to an api compatible javascript dictionary.\n*/\ndefine(['utils/utils'], function(Utils) {\nreturn Backbone.Model.extend({\n    // initialize\n    initialize: function(app) {\n        this.app = app;\n    },\n\n    /** Creates a checksum.\n    */\n    checksum: function() {\n        var sum = '';\n        var self = this;\n        this.app.section.$el.find('.section-row').each(function() {\n            var id = $(this).attr('id');\n            var field = self.app.field_list[id];\n            if (field) {\n                sum += id + ':' + JSON.stringify(field.value && field.value()) + ':' + field.collapsed + ';';\n            }\n        });\n        return sum;\n    },\n\n    /** Convert dom into dictionary.\n    */\n    create: function() {\n        // link this\n        var self = this;\n\n        // get raw dictionary from dom\n        var dict = {};\n        this._iterate(this.app.section.$el, dict);\n\n        // add to result dictionary\n        var result_dict = {};\n        this.map_dict = {};\n        function add(job_input_id, input_id, input_value) {\n            self.map_dict[job_input_id] = input_id;\n            result_dict[job_input_id] = input_value;\n        };\n\n        // converter between raw dictionary and job dictionary\n        function convert(identifier, head) {\n            for (var index in head) {\n                var node = head[index];\n                if (node.input) {\n                    // get node\n                    var input = node.input;\n\n                    // create identifier\n                    var job_input_id = identifier;\n                    if (identifier != '') {\n                        job_input_id += '|';\n                    }\n                    job_input_id += input.name;\n\n                    // process input type\n                    switch (input.type) {\n                        // handle repeats\n                        case 'repeat':\n                            // section identifier\n                            var section_label = 'section-';\n\n                            // collect repeat block identifiers\n                            var block_indices = [];\n                            var block_prefix = null;\n                            for (var block_label in node) {\n                                var pos = block_label.indexOf(section_label);\n                                if (pos != -1) {\n                                    pos += section_label.length;\n                                    block_indices.push(parseInt(block_label.substr(pos)));\n                                    if (!block_prefix) {\n                                        block_prefix = block_label.substr(0, pos);\n                                    }\n                                }\n                            }\n\n                            // sort repeat blocks\n                            block_indices.sort(function(a,b) { return a - b; });\n\n                            // add to response dictionary in created order\n                            var index = 0;\n                            for (var i in block_indices) {\n                                convert(job_input_id + '_' + index++, node[block_prefix + block_indices[i]]);\n                            }\n                            break;\n                        // handle conditionals\n                        case 'conditional':\n                            // get conditional value\n                            var value = self.app.field_list[input.id].value();\n                            \n                            // add conditional value\n                            add (job_input_id + '|' + input.test_param.name, input.id, value);\n\n                            // identify selected case\n                            var selectedCase = self.matchCase(input, value);\n                            if (selectedCase != -1) {\n                                convert(job_input_id, head[input.id + '-section-' + selectedCase]);\n                            }\n                            break;\n                        // handle sections\n                        case 'section':\n                            convert(!input.flat && job_input_id || '', node);\n                            break;\n                        default:\n                            // get field\n                            var field = self.app.field_list[input.id];\n                            if (field && field.value) {\n                                // validate field value\n                                var value = field.value();\n\n                                // ignore certain values\n                                if (input.ignore === undefined || input.ignore != value) {\n                                    // replace value by collapsible value\n                                    if (field.collapsed && input.collapsible_value) {\n                                        value = input.collapsible_value;\n                                    }\n\n                                    // add value to submission\n                                    add (job_input_id, input.id, value);\n\n                                    // add payload to submission\n                                    if (input.payload) {\n                                        for (var p_id in input.payload) {\n                                            add (p_id, input.id, input.payload[p_id]);\n                                        }\n                                    }\n                                }\n                            }\n                    }\n                }\n            }\n        }\n\n        // start conversion\n        convert('', dict);\n        \n        // return result\n        return result_dict;\n    },\n\n    /** Match job definition identifier to input element identifier\n    */\n    match: function (job_input_id) {\n        return this.map_dict && this.map_dict[job_input_id];\n    },\n\n    /** Match conditional values to selected cases\n    */\n    matchCase: function(input, value) {\n        // format value for boolean inputs\n        if (input.test_param.type == 'boolean') {\n            if (value == 'true') {\n                value = input.test_param.truevalue || 'true';\n            } else {\n                value = input.test_param.falsevalue || 'false';\n            }\n        }\n\n        // find selected case\n        for (var i in input.cases) {\n            if (input.cases[i].value == value) {\n                return i;\n            }\n        }\n\n        // selected case not found\n        return -1;\n    },\n\n    /** Matches identifier from api model to input elements\n    */\n    matchModel: function(model, callback) {\n        // final result dictionary\n        var result = {};\n\n        // link this\n        var self = this;\n\n        // search throughout response\n        function search (id, head) {\n            for (var i in head) {\n                var node = head[i];\n                var index = node.name;\n                if (id != '') {\n                    index = id + '|' + index;\n                }\n                switch (node.type) {\n                    case 'repeat':\n                        for (var j in node.cache) {\n                            search (index + '_' + j, node.cache[j]);\n                        }\n                        break;\n                    case 'conditional':\n                        var value = node.test_param && node.test_param.value;\n                        var selectedCase = self.matchCase(node, value);\n                        if (selectedCase != -1) {\n                            search (index, node.cases[selectedCase].inputs);\n                        }\n                        break;\n                    case 'section':\n                        search (index, node.inputs);\n                        break;\n                    default:\n                        var input_id = self.map_dict[index];\n                        if (input_id) {\n                            callback(input_id, node);\n                        }\n                }\n            }\n        }\n\n        // match all ids and return messages\n        search('', model.inputs);\n\n        // return matched results\n        return result;\n    },\n\n    /** Matches identifier from api response to input elements\n    */\n    matchResponse: function(response) {\n        // final result dictionary\n        var result = {};\n\n        // link this\n        var self = this;\n\n        // search throughout response\n        function search (id, head) {\n            if (typeof head === 'string') {\n                var input_id = self.map_dict[id];\n                if (input_id) {\n                    result[input_id] = head;\n                }\n            } else {\n                for (var i in head) {\n                    var new_id = i;\n                    if (id !== '') {\n                        var separator = '|';\n                        if (head instanceof Array) {\n                            separator = '_';\n                        }\n                        new_id = id + separator + new_id;\n                    }\n                    search (new_id, head[i]);\n                }\n            }\n        }\n\n        // match all ids and return messages\n        search('', response);\n\n        // return matched results\n        return result;\n    },\n\n    /** Iterate through the form dom and map it to the dictionary.\n    */\n    _iterate: function(parent, dict) {\n        // get child nodes\n        var self = this;\n        var children = $(parent).children();\n        children.each(function() {\n            // get child element\n            var child = this;\n\n            // get id\n            var id = $(child).attr('id');\n\n            // create new branch\n            if ($(child).hasClass('section-row')) {\n                // create sub dictionary\n                dict[id] = {};\n\n                // add input element if it exists\n                var input = self.app.input_list[id];\n                if (input) {\n                    dict[id] = {\n                        input : input\n                    }\n                }\n\n                // fill sub dictionary\n                self._iterate(child, dict[id]);\n            } else {\n                self._iterate(child, dict);\n            }\n        });\n    }\n});\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/form/form-data.js\n ** module id = 86\n ** module chunks = 2\n **/","/**\n    This class creates a form input element wrapper\n*/\ndefine([], function() {\n    return Backbone.View.extend({\n        initialize: function(app, options) {\n            // link app\n            this.app = app;\n\n            // set text labels and icons for optional button\n            this.text_enable    = app.options.text_enable || 'Enable';\n            this.text_disable   = app.options.text_disable || 'Disable';\n            this.cls_enable     = app.options.cls_enable || 'fa fa-caret-square-o-down';\n            this.cls_disable    = app.options.cls_disable || 'fa fa-caret-square-o-up';\n\n            // link field\n            this.field = options.field;\n            this.default_value = options.default_value;\n\n            // set element\n            this.setElement(this._template(options));\n\n            // link elements\n            this.$field = this.$el.find('.ui-table-form-field');\n            this.$optional = this.$el.find('.ui-table-form-optional');\n            this.$optional_icon = this.$el.find('.ui-table-form-optional').find('.icon');\n            this.$error_text = this.$el.find('.ui-table-form-error-text');\n            this.$error = this.$el.find('.ui-table-form-error');\n\n            // add field element\n            this.$field.prepend(this.field.$el);\n\n            // decide wether to expand or collapse optional fields\n            this.field.collapsed =  options.collapsible && options.value &&\n                                    JSON.stringify(options.value) == JSON.stringify(options.collapsible_value);\n\n            // refresh view\n            this._refresh();\n\n            // add optional hide/show\n            var self = this;\n            this.$optional.on('click', function() {\n                // flip flag\n                self.field.collapsed = !self.field.collapsed;\n\n                // refresh view\n                self._refresh();\n\n                // refresh state\n                self.app.trigger('change');\n            });\n        },\n\n        /** Set error text\n        */\n        error: function(text) {\n            this.$error_text.html(text);\n            this.$error.show();\n            this.$el.addClass('ui-error');\n        },\n\n        /** Reset this view\n        */\n        reset: function() {\n            this.$error.hide();\n            this.$el.removeClass('ui-error');\n        },\n\n        /** Refresh element\n        */\n        _refresh: function() {\n            // reset optional button\n            this.$optional_icon.removeClass().addClass('icon');\n\n            // identify state\n            if (!this.field.collapsed) {\n                // enable input field\n                this.$field.fadeIn('fast');\n                this._tooltip(this.text_disable, this.cls_disable);\n                this.app.trigger('change');\n            } else {\n                // disable input field\n                this.$field.hide();\n                this._tooltip(this.text_enable, this.cls_enable);\n                this.field.value && this.field.value(this.default_value);\n            }\n        },\n\n        /** Set tooltip text\n        */\n        _tooltip: function(title, cls) {\n            if (this.$optional.length) {\n                this.$optional_icon.addClass(cls)\n                                   .tooltip({ placement: 'bottom' })\n                                   .attr('data-original-title', title)\n                                   .tooltip('fixTitle').tooltip('hide');\n            }\n        },\n\n        /** Main Template\n        */\n        _template: function(options) {\n            var tmp =   '<div class=\"ui-table-form-element input-name-' + options.name + '\">' +\n                            '<div class=\"ui-table-form-error ui-error\">' +\n                                '<span class=\"fa fa-arrow-down\"/><span class=\"ui-table-form-error-text\"/>' +\n                            '</div>' +\n                            '<div class=\"ui-table-form-title\">';\n            if (options.collapsible) {\n                tmp +=          '<div class=\"ui-table-form-optional\">' +\n                                    '<i class=\"icon\"/>' + options.label +\n                                '</div>';\n            } else {\n                tmp += options.label;\n            }\n            tmp +=          '</div>' +\n                            '<div class=\"ui-table-form-field\">';\n            tmp +=              '<div class=\"ui-table-form-info\">';\n            if (options.help) {\n                tmp +=              options.help;\n                if (options.argument && options.help.indexOf('(' + options.argument + ')') == -1) {\n                    tmp += ' (' + options.argument + ')';\n                }\n            }\n            tmp +=              '</div>';\n            tmp +=          '</div>' +\n                        '</div>';\n            return tmp;\n        }\n    });\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/form/form-input.js\n ** module id = 87\n ** module chunks = 2\n **/","/**\n    This class creates input elements. New input parameter types should be added to the types dictionary.\n*/\ndefine(['utils/utils',\n        'mvc/ui/ui-misc',\n        'mvc/form/form-select-content',\n        'mvc/ui/ui-select-library',\n        'mvc/ui/ui-select-ftp',\n        'mvc/ui/ui-color-picker'],\n    function(Utils, Ui, SelectContent, SelectLibrary, SelectFtp, ColorPicker) {\n\n    // create form view\n    return Backbone.Model.extend({\n        /** Available parameter types */\n        types: {\n            'text'              : '_fieldText',\n            'select'            : '_fieldSelect',\n            'data_column'       : '_fieldSelect',\n            'genomebuild'       : '_fieldSelect',\n            'data'              : '_fieldData',\n            'data_collection'   : '_fieldData',\n            'integer'           : '_fieldSlider',\n            'float'             : '_fieldSlider',\n            'boolean'           : '_fieldBoolean',\n            'drill_down'        : '_fieldDrilldown',\n            'color'             : '_fieldColor',\n            'hidden'            : '_fieldHidden',\n            'hidden_data'       : '_fieldHidden',\n            'baseurl'           : '_fieldHidden',\n            'library_data'      : '_fieldLibrary',\n            'ftpfile'           : '_fieldFtp'\n        },\n\n        // initialize\n        initialize: function(app, options) {\n            this.app = app;\n        },\n\n        /** Returns an input field for a given field type\n        */\n        create: function(input_def) {\n            // add regular/default value if missing\n            if (input_def.value === undefined) {\n                input_def.value = null;\n            }\n            if (input_def.default_value === undefined) {\n                input_def.default_value = input_def.value;\n            }\n\n            // field wrapper\n            var field = null;\n\n            // get field class\n            var fieldClass = this.types[input_def.type];\n            if (fieldClass && typeof(this[fieldClass]) === 'function') {\n                field = this[fieldClass].call(this, input_def);\n            }\n\n            // identify field type\n            if (!field) {\n                // flag\n                this.app.incompatible = true;\n\n                // with or without options\n                if (input_def.options) {\n                    // assign select field\n                    field = this._fieldSelect(input_def);\n                } else {\n                    // assign text field\n                    field = this._fieldText(input_def);\n                }\n\n                // log\n                console.debug('tools-form::_addRow() : Auto matched field type (' + input_def.type + ').');\n            }\n\n            // set field value\n            if (input_def.value !== undefined) {\n                field.value(input_def.value);\n            }\n\n            // return field element\n            return field;\n        },\n\n        /** Data input field\n        */\n        _fieldData: function(input_def) {\n            if (this.app.options.is_workflow) {\n                input_def.info = 'Data input \\'' + input_def.name + '\\' (' + Utils.textify(input_def.extensions.toString()) + ')';\n                input_def.value = null;\n                return this._fieldHidden(input_def);\n            }\n            var self = this;\n            return new SelectContent.View(this.app, {\n                id          : 'field-' + input_def.id,\n                extensions  : input_def.extensions,\n                optional    : input_def.optional,\n                multiple    : input_def.multiple,\n                type        : input_def.type,\n                data        : input_def.options,\n                onchange    : function() {\n                    self.app.trigger('change');\n                }\n            });\n        },\n\n        /** Select/Checkbox/Radio options field\n        */\n        _fieldSelect: function (input_def) {\n            // show text field in if dynamic fields are disabled e.g. in workflow editor\n            if (input_def.options.length == 0 && this.app.options.is_workflow) {\n                return this._fieldText(input_def);\n            }\n\n            // customize properties\n            if (input_def.type == 'data_column') {\n                input_def.error_text = 'Missing columns in referenced dataset.'\n            }\n\n            // configure options fields\n            var options = [];\n            for (var i in input_def.options) {\n                var option = input_def.options[i];\n                options.push({\n                    label: option[0],\n                    value: option[1]\n                });\n            }\n\n            // identify display type\n            var SelectClass = Ui.Select;\n            switch (input_def.display) {\n                case 'checkboxes':\n                    SelectClass = Ui.Checkbox;\n                    break;\n                case 'radio':\n                    SelectClass = Ui.Radio;\n                    break;\n            }\n\n            // select field\n            var self = this;\n            return new SelectClass.View({\n                id          : 'field-' + input_def.id,\n                data        : options,\n                error_text  : input_def.error_text || 'No options available',\n                optional    : input_def.optional && input_def.default_value === null,\n                multiple    : input_def.multiple,\n                optional    : input_def.optional,\n                searchable  : input_def.searchable,\n                onchange    : function() {\n                    self.app.trigger('change');\n                }\n            });\n        },\n\n        /** Drill down options field\n        */\n        _fieldDrilldown: function (input_def) {\n            // show text field in if dynamic fields are disabled e.g. in workflow editor\n            if (input_def.options.length == 0 && this.app.options.is_workflow) {\n                return this._fieldText(input_def);\n            }\n\n            // create drill down field\n            var self = this;\n            return new Ui.Drilldown.View({\n                id          : 'field-' + input_def.id,\n                data        : input_def.options,\n                display     : input_def.display,\n                onchange    : function() {\n                    self.app.trigger('change');\n                }\n            });\n        },\n\n        /** Text input field\n        */\n        _fieldText: function(input_def) {\n            // field replaces e.g. a select field\n            if (input_def.options) {\n                // show text area if selecting multiple entries is allowed\n                input_def.area = input_def.multiple;\n\n                // validate value\n                if (!Utils.validate(input_def.value)) {\n                    input_def.value = '';\n                } else {\n                    if ($.isArray(input_def.value)) {\n                        var str_value = '';\n                        for (var i in input_def.value) {\n                            str_value += String(input_def.value[i]);\n                            if (!input_def.multiple) {\n                                break;\n                            }\n                            str_value += '\\n';\n                        }\n                        input_def.value = str_value;\n                    }\n                }\n            }\n\n            // create input element\n            var self = this;\n            return new Ui.Input({\n                id          : 'field-' + input_def.id,\n                area        : input_def.area,\n                onchange    : function() {\n                    self.app.trigger('change');\n                }\n            });\n        },\n\n        /** Slider field\n        */\n        _fieldSlider: function(input_def) {\n            var self = this;\n            return new Ui.Slider.View({\n                id          : 'field-' + input_def.id,\n                precise     : input_def.type == 'float',\n                min         : input_def.min,\n                max         : input_def.max,\n                onchange    : function() {\n                    self.app.trigger('change');\n                }\n            });\n        },\n\n        /** Hidden field\n        */\n        _fieldHidden: function(input_def) {\n            return new Ui.Hidden({\n                id          : 'field-' + input_def.id,\n                info        : input_def.info\n            });\n        },\n\n        /** Boolean field\n        */\n        _fieldBoolean: function(input_def) {\n            var self = this;\n            return new Ui.RadioButton.View({\n                id          : 'field-' + input_def.id,\n                data        : [ { label : 'Yes', value : 'true'  },\n                                { label : 'No',  value : 'false' }],\n                onchange    : function() {\n                    self.app.trigger('change');\n                }\n            });\n        },\n\n        /** Color picker field\n        */\n        _fieldColor: function(input_def) {\n            var self = this;\n            return new ColorPicker({\n                id          : 'field-' + input_def.id,\n                onchange    : function() {\n                    self.app.trigger('change');\n                }\n            });\n        },\n\n        /** Library dataset field\n        */\n        _fieldLibrary: function(input_def) {\n            var self = this;\n            return new SelectLibrary.View({\n                id          : 'field-' + input_def.id,\n                optional    : input_def.optional,\n                multiple    : input_def.multiple,\n                onchange    : function() {\n                    self.app.trigger('change');\n                }\n            });\n        },\n\n        /** FTP file field\n        */\n        _fieldFtp: function(input_def) {\n            var self = this;\n            return new SelectFtp.View({\n                id          : 'field-' + input_def.id,\n                optional    : input_def.optional,\n                multiple    : input_def.multiple,\n                onchange    : function() {\n                    self.app.trigger('change');\n                }\n            });\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/form/form-parameters.js\n ** module id = 88\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils', 'mvc/ui/ui-table', 'mvc/ui/ui-portlet', 'mvc/ui/ui-misc'],\n        function(Utils, Table, Portlet, Ui) {\n\n/** This class creates a ui component which enables the dynamic creation of portlets\n*/\nvar View = Backbone.View.extend({\n    // default options\n    optionsDefault : {\n        title   : 'Section',\n        max     : null,\n        min     : null\n    },\n\n    /** Initialize\n    */\n    initialize : function(options) {\n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n\n        // create new element\n        this.setElement('<div/>');\n\n        // link this\n        var self = this;\n\n        // create button\n        this.button_new = new Ui.ButtonIcon({\n            icon    : 'fa-plus',\n            title   : 'Insert ' + options.title_new,\n            tooltip : 'Add new ' + options.title_new + ' block',\n            floating: 'clear',\n            onclick : function() {\n                if (options.onnew) {\n                    options.onnew();\n                }\n            }\n        });\n\n        // create table\n        this.table = new Table.View({\n            cls     : 'ui-table-plain',\n            content : ''\n        });\n\n        // append button\n        this.$el.append(this.table.$el);\n\n        // add button\n        this.$el.append($('<div/>').append(this.button_new.$el));\n\n        // clear list\n        this.list = {};\n\n        // number of available repeats\n        this.n = 0;\n    },\n\n    /** Number of repeat blocks\n    */\n    size: function() {\n        return this.n;\n    },\n\n    /** Add new repeat block\n    */\n    add: function(options) {\n        // repeat block already exists\n        if (!options.id || this.list[options.id]) {\n            console.debug('form-repeat::add - Duplicate repeat block id.');\n            return;\n        }\n\n        // increase repeat block counter\n        this.n++;\n\n        // delete button\n        var button_delete = new Ui.ButtonIcon({\n            icon    : 'fa-trash-o',\n            tooltip : 'Delete this repeat block',\n            cls     : 'ui-button-icon-plain',\n            onclick : function() {\n                if (options.ondel) {\n                    options.ondel();\n                }\n            }\n        });\n\n        // create portlet\n        var portlet = new Portlet.View({\n            id              : options.id,\n            title           : 'placeholder',\n            cls             : 'ui-portlet-repeat',\n            operations      : {\n                button_delete : button_delete\n            }\n        });\n\n        // append content\n        portlet.append(options.$el);\n\n        // tag as section row\n        portlet.$el.addClass('section-row');\n\n        // append to dom\n        this.list[options.id] = portlet;\n\n        // append to dom\n        this.table.add(portlet.$el);\n        this.table.append('row_' + options.id, true);\n\n        // validate maximum\n        if (this.options.max > 0 && this.n >= this.options.max) {\n            this.button_new.disable();\n        }\n\n        // refresh view\n        this._refresh();\n    },\n\n    /** Delete repeat block\n    */\n    del: function(id) {\n        // could not find element\n        if (!this.list[id]) {\n            console.debug('form-repeat::del - Invalid repeat block id.');\n            return;\n        }\n\n        // decrease repeat block counter\n        this.n--;\n\n        // delete table row\n        var table_row = this.table.get('row_' + id);\n        table_row.remove();\n\n        // remove from list\n        delete this.list[id];\n\n        // enable new button\n        this.button_new.enable();\n\n        // refresh delete button visibility\n        this._refresh();\n    },\n\n    /** Refresh view\n    */\n    _refresh: function() {\n        var index = 0;\n        for (var id in this.list) {\n            var portlet = this.list[id];\n            portlet.title(++index + ': ' + this.options.title);\n            if (this.n > this.options.min) {\n                portlet.showOperation('button_delete');\n            } else {\n                portlet.hideOperation('button_delete');\n            }\n        }\n    }\n});\n\nreturn {\n    View : View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/form/form-repeat.js\n ** module id = 89\n ** module chunks = 2\n **/","/**\n    This class creates a form section and populates it with input elements. It also handles repeat blocks and conditionals by recursively creating new sub sections.\n*/\ndefine(['utils/utils',\n        'mvc/ui/ui-table',\n        'mvc/ui/ui-misc',\n        'mvc/ui/ui-portlet',\n        'mvc/form/form-repeat',\n        'mvc/form/form-input',\n        'mvc/form/form-parameters'],\n    function(Utils, Table, Ui, Portlet, Repeat, InputElement, Parameters) {\n\n    // create form view\n    var View = Backbone.View.extend({\n        // initialize\n        initialize: function(app, options) {\n            // link app\n            this.app = app;\n\n            // link inputs\n            this.inputs = options.inputs;\n\n            // fix table style\n            options.cls = 'ui-table-plain';\n\n            // add table class for tr tag\n            // this assist in transforming the form into a json structure\n            options.cls_tr = 'section-row';\n\n            // create table\n            this.table = new Table.View(options);\n\n            // create parameter handler\n            this.parameters = new Parameters(app, options);\n\n            // configure portlet and form table\n            this.setElement(this.table.$el);\n\n            // render section\n            this.render();\n        },\n\n        /** Render section view\n        */\n        render: function() {\n            // reset table\n            this.table.delAll();\n\n            // load settings elements into table\n            for (var i in this.inputs) {\n                this.add(this.inputs[i]);\n            }\n        },\n\n        /** Add a new input element\n        */\n        add: function(input) {\n            // link this\n            var self = this;\n\n            // clone definition\n            var input_def = jQuery.extend(true, {}, input);\n\n            // create unique id\n            input_def.id = input.id = Utils.uid();\n\n            // add to sequential list of inputs\n            this.app.input_list[input_def.id] = input_def;\n\n            // identify field type\n            var type = input_def.type;\n            switch(type) {\n                // conditional field\n                case 'conditional':\n                    this._addConditional(input_def);\n                    break;\n                // repeat block\n                case 'repeat':\n                    this._addRepeat(input_def);\n                    break;\n                // customized section\n                case 'section':\n                    this._addSection(input_def);\n                    break;\n                // default single element row\n                default:\n                    this._addRow(input_def);\n            }\n        },\n\n        /** Add a conditional block\n        */\n        _addConditional: function(input_def) {\n            // link this\n            var self = this;\n\n            // copy identifier\n            input_def.test_param.id = input_def.id;\n\n            // build test parameter\n            var field = this._addRow(input_def.test_param);\n\n            // set onchange event for test parameter\n            field.options.onchange = function(value) {\n                // identify the selected case\n                var selectedCase = self.app.data.matchCase(input_def, value);\n\n                // check value in order to hide/show options\n                for (var i in input_def.cases) {\n                    // get case\n                    var case_def = input_def.cases[i];\n\n                    // identify subsection name\n                    var section_id = input_def.id + '-section-' + i;\n\n                    // identify row\n                    var section_row = self.table.get(section_id);\n\n                    // check if non-hidden elements exist\n                    var nonhidden = false;\n                    for (var j in case_def.inputs) {\n                        if (!case_def.inputs[j].hidden) {\n                            nonhidden = true;\n                            break;\n                        }\n                    }\n\n                    // show/hide sub form\n                    if (i == selectedCase && nonhidden) {\n                        section_row.fadeIn('fast');\n                    } else {\n                        section_row.hide();\n                    }\n                }\n\n                // refresh form inputs\n                self.app.trigger('change');\n            };\n\n            // add conditional sub sections\n            for (var i in input_def.cases) {\n                // create id tag\n                var sub_section_id = input_def.id + '-section-' + i;\n\n                // create sub section\n                var sub_section = new View(this.app, {\n                    inputs  : input_def.cases[i].inputs\n                });\n\n                // displays as grouped subsection\n                sub_section.$el.addClass('ui-table-section');\n\n                // create table row\n                this.table.add(sub_section.$el);\n\n                // append to table\n                this.table.append(sub_section_id);\n            }\n\n            // trigger refresh on conditional input field after all input elements have been created\n            field.trigger('change');\n        },\n\n        /** Add a repeat block\n        */\n        _addRepeat: function(input_def) {\n            // link this\n            var self = this;\n\n            // block index\n            var block_index = 0;\n\n            // create repeat block element\n            var repeat = new Repeat.View({\n                title           : input_def.title,\n                title_new       : input_def.title,\n                min             : input_def.min,\n                max             : input_def.max,\n                onnew           : function() {\n                    // create\n                    create(input_def.inputs);\n\n                    // trigger refresh\n                    self.app.trigger('change');\n                }\n            });\n\n            // helper function to create new repeat blocks\n            function create (inputs) {\n                // create id tag\n                var sub_section_id = input_def.id + '-section-' + (block_index++);\n\n                // create sub section\n                var sub_section = new View(self.app, {\n                    inputs  : inputs\n                });\n\n                // add tab\n                repeat.add({\n                    id      : sub_section_id,\n                    $el     : sub_section.$el,\n                    ondel   : function() {\n                        // delete repeat block\n                        repeat.del(sub_section_id);\n\n                        // trigger refresh\n                        self.app.trigger('change');\n                    }\n                });\n            }\n\n            //\n            // add parsed/minimum number of repeat blocks\n            //\n            var n_min   = input_def.min;\n            var n_cache = _.size(input_def.cache);\n            for (var i = 0; i < Math.max(n_cache, n_min); i++) {\n                var inputs = null;\n                if (i < n_cache) {\n                    inputs = input_def.cache[i];\n                } else {\n                    inputs = input_def.inputs;\n                }\n\n                // create repeat block\n                create(inputs);\n            }\n\n            // create input field wrapper\n            var input_element = new InputElement(this.app, {\n                label   : input_def.title,\n                help    : input_def.help,\n                field   : repeat\n            });\n\n            // create table row\n            this.table.add(input_element.$el);\n\n            // append row to table\n            this.table.append(input_def.id);\n        },\n\n        /** Add a customized section\n        */\n        _addSection: function(input_def) {\n            // link this\n            var self = this;\n\n            // create sub section\n            var sub_section = new View(self.app, {\n                inputs  : input_def.inputs\n            });\n\n            // delete button\n            var button_visible = new Ui.ButtonIcon({\n                icon    : 'fa-eye-slash',\n                tooltip : 'Show/hide section',\n                cls     : 'ui-button-icon-plain'\n            });\n\n            // create portlet for sub section\n            var portlet = new Portlet.View({\n                title       : input_def.title,\n                cls         : 'ui-portlet-section',\n                operations  : {\n                    button_visible: button_visible\n                }\n            });\n            portlet.append(sub_section.$el);\n            portlet.append($('<div/>').addClass('ui-table-form-info').html(input_def.help));\n\n            // add event handler visibility button\n            var visible = false;\n            portlet.$content.hide();\n            portlet.$header.css('cursor', 'pointer');\n            portlet.$header.on('click', function() {\n                if (visible) {\n                    visible = false;\n                    portlet.$content.hide();\n                    button_visible.setIcon('fa-eye-slash');\n                } else {\n                    visible = true;\n                    portlet.$content.fadeIn('fast');\n                    button_visible.setIcon('fa-eye');\n                }\n            });\n\n            // add expansion event handler\n            this.app.on('expand', function(input_id) {\n                (portlet.$el.find('#' + input_id).length > 0) && !visible && portlet.$header.trigger('click');\n            });\n\n            // show sub section if requested\n            if (input_def.expanded) {\n                portlet.$header.trigger('click');\n            }\n\n            // create table row\n            this.table.add(portlet.$el);\n\n            // append row to table\n            this.table.append(input_def.id);\n        },\n\n        /** Add a single input field element\n        */\n        _addRow: function(input_def) {\n            // get id\n            var id = input_def.id;\n\n            // create input field\n            var field = this.parameters.create(input_def);\n\n            // add to field list\n            this.app.field_list[id] = field;\n\n            // create input field wrapper\n            var input_element = new InputElement(this.app, {\n                name                : input_def.name,\n                label               : input_def.label || input_def.name,\n                value               : input_def.value,\n                default_value       : input_def.default_value,\n                collapsible         : input_def.collapsible,\n                collapsible_value   : input_def.collapsible_value,\n                help                : input_def.help,\n                argument            : input_def.argument,\n                field               : field\n            });\n\n            // add to element list\n            this.app.element_list[id] = input_element;\n\n            // create table row\n            this.table.add(input_element.$el);\n\n            // append to table\n            this.table.append(id);\n\n            // hide row if neccessary\n            if (input_def.hidden) {\n                this.table.get(id).hide();\n            }\n\n            // return created field\n            return field;\n        }\n    });\n\n    return {\n        View: View\n    };\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/form/form-section.js\n ** module id = 90\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils', 'mvc/ui/ui-misc', 'mvc/ui/ui-tabs', 'mvc/tools/tools-template'],\n        function(Utils, Ui, Tabs, ToolTemplate) {\n\n// hda/hdca content selector ui element\nvar View = Backbone.View.extend({\n    // initialize\n    initialize : function(app, options) {\n        // link app and options\n        this.app = app;\n        this.options = options;\n\n        // track current history elements\n        this.history = {};\n\n\n        // link this\n        var self = this;\n\n        // add element\n        this.setElement('<div class=\"ui-select-content\"/>');\n\n        // list of select fieldsFormSection\n        this.list = {};\n\n        // radio button options\n        var radio_buttons = [];\n\n        // identify selector type\n        if (options.type == 'data_collection') {\n            this.mode = 'collection';\n        } else {\n            if (options.multiple) {\n                this.mode = 'multiple';\n            } else {\n                this.mode = 'single';\n            }\n        }\n\n        // set initial state\n        this.current = this.mode;\n        this.list = {};\n\n        // error messages\n        var extensions = Utils.textify(options.extensions);\n        var hda_error = 'No dataset available.';\n        if (extensions) {\n            hda_error = 'No ' + extensions + ' dataset available.';\n        }\n        var hdca_error = 'No dataset list available.';\n        if (extensions) {\n            hdca_error = 'No ' + extensions + ' dataset collection available.';\n        }\n\n        // add single dataset selector\n        if (this.mode == 'single') {\n            radio_buttons.push({\n                icon    : 'fa-file-o',\n                value   : 'single',\n                tooltip : 'Single dataset'\n            });\n            this.select_single = new Ui.Select.View({\n                optional    : options.optional,\n                error_text  : hda_error,\n                onchange    : function() {\n                    self.trigger('change');\n                }\n            });\n            this.list['single'] = {\n                field: this.select_single,\n                type : 'hda'\n            };\n        }\n\n        // add multiple dataset selector\n        if (this.mode == 'single' || this.mode == 'multiple') {\n            radio_buttons.push({\n                icon    : 'fa-files-o',\n                value   : 'multiple',\n                tooltip : 'Multiple datasets'\n            });\n            this.select_multiple = new Ui.Select.View({\n                multiple    : true,\n                searchable  : false,\n                optional    : options.optional,\n                error_text  : hda_error,\n                onchange    : function() {\n                    self.trigger('change');\n                }\n            });\n            this.list['multiple'] = {\n                field: this.select_multiple,\n                type : 'hda'\n            };\n        }\n\n        // add collection selector\n        if (this.mode == 'single' || this.mode == 'multiple' || this.mode == 'collection') {\n            radio_buttons.push({\n                icon    : 'fa-folder-o',\n                value   : 'collection',\n                tooltip : 'Dataset collection'\n            });\n            this.select_collection = new Ui.Select.View({\n                error_text  : hdca_error,\n                optional    : options.optional,\n                onchange    : function() {\n                    self.trigger('change');\n                }\n            });\n            this.list['collection'] = {\n                field: this.select_collection,\n                type : 'hdca'\n            };\n        }\n\n        // create button\n        this.button_type = new Ui.RadioButton.View({\n            value   : this.current,\n            data    : radio_buttons,\n            onchange: function(value) {\n                self.current = value;\n                self.refresh();\n                self.trigger('change');\n            }\n        });\n\n        // add batch mode information\n        this.$batch = $(this.template_batch());\n\n        // number of radio buttons\n        var n_buttons = _.size(this.list);\n\n        // add button to dom\n        var button_width = 0;\n        if (n_buttons > 1) {\n            this.$el.append(this.button_type.$el);\n            button_width = Math.max(0, _.size(this.list) * 35) + 'px';\n        }\n\n        // append field elements\n        for (var i in this.list) {\n            this.$el.append(this.list[i].field.$el.css({\n                'margin-left': button_width\n            }));\n        }\n\n        // append batch message\n        this.$el.append(this.$batch.css({\n            'margin-left': button_width\n        }));\n\n        // update options\n        this.update(options.data);\n\n        // set initial value\n        if (this.options.value !== undefined) {\n            this.value(this.options.value);\n        }\n\n        // refresh view\n        this.refresh();\n\n        // add change event. fires on trigger\n        this.on('change', function() {\n            if (options.onchange) {\n                options.onchange(self.value());\n            }\n        });\n    },\n\n    /** Indicate that select fields are being updated */\n    wait: function() {\n        for (var i in this.list) {\n            this.list[i].field.wait();\n        }\n    },\n\n    /** Indicate that the options update has been completed */\n    unwait: function() {\n        for (var i in this.list) {\n            this.list[i].field.unwait();\n        }\n    },\n\n    /** Update content selector */\n    update: function(options) {\n        // update a particular select field\n        var self = this;\n        function _update(field, options) {\n            if (field) {\n                // identify available options\n                var select_options = [];\n                for (var i in options) {\n                    var item = options[i];\n                    select_options.push({\n                        label: item.hid + ': ' + item.name,\n                        value: item.id\n                    });\n                    // backup to local history\n                    self.history[item.id + '_' + item.src] = item;\n                }\n                // update field\n                field.update(select_options);\n            }\n        }\n\n        // update available options\n        _update(this.select_single, options.hda);\n        _update(this.select_multiple, options.hda);\n        _update(this.select_collection, options.hdca);\n    },\n\n    /** Return the currently selected dataset values */\n    value : function (new_value) {\n        // update current value\n        if (new_value !== undefined) {\n            if (new_value && new_value.values) {\n                try {\n                    // create list with values\n                    var list = [];\n                    for (var i in new_value.values) {\n                        list.push(new_value.values[i].id);\n                    }\n                    \n                    // identify suitable select field\n                    if (new_value && new_value.values.length > 0 && new_value.values[0].src == 'hdca') {\n                        this.current = 'collection';\n                        this.select_collection.value(list[0]);\n                    } else {\n                        if (this.mode == 'multiple') {\n                            this.current = 'multiple';\n                            this.select_multiple.value(list);\n                        } else {\n                            this.current = 'single';\n                            this.select_single.value(list[0]);\n                        }\n                    }\n                } catch (err) {\n                    console.debug('tools-select-content::value() - Skipped.');\n                }\n            } else {\n                for (var i in this.list) {\n                    this.list[i].field.value(null);\n                }\n            }\n        }\n\n        // refresh view\n        this.refresh();\n\n        // validate value\n        var id_list = this._select().value();\n        if (id_list === null) {\n            return null;\n        }\n\n        // transform into an array\n        if (!(id_list instanceof Array)) {\n            id_list = [id_list];\n        }\n\n        // check if value exists\n        if (id_list.length === 0) {\n            return null;\n        }\n\n        // prepare result dict\n        var result = {\n            batch   : this._batch(),\n            values  : []\n        }\n\n        // append to dataset ids\n        for (var i in id_list) {\n            var details = this.history[id_list[i] + '_' + this.list[this.current].type];\n            if (details) {\n                result.values.push(details);\n            } else {\n                return null;\n            }\n        }\n\n        // sort by history ids\n        result.values.sort(function(a, b){\n            return a.hid - b.hid;\n        });\n\n        // return\n        return result;\n    },\n\n    /** Refreshes data selection view */\n    refresh: function() {\n        this.button_type.value(this.current);\n        for (var i in this.list) {\n            var $el = this.list[i].field.$el;\n            if (this.current == i) {\n                $el.show();\n            } else {\n                $el.hide();\n            }\n        }\n        if (this._batch()) {\n            this.$batch.show();\n        } else {\n            this.$batch.hide();\n        }\n    },\n\n    /** Assists in selecting the current field */\n    _select: function() {\n        return this.list[this.current].field;\n    },\n\n    /** Assists in identifying the batch mode */\n    _batch: function() {\n        if (this.current == 'collection') {\n            var hdca = this.history[this._select().value() + '_hdca'];\n            if (hdca && hdca.map_over_type) {\n                return true;\n            }\n        }\n        if (this.current != 'single') {\n            if (this.mode == 'single') {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    /** Batch message template */\n    template_batch: function() {\n        return  '<div class=\"ui-table-form-info\">' +\n                    '<i class=\"fa fa-sitemap\" style=\"font-size: 1.2em; padding: 2px 5px;\"/>' +\n                    'This is a batch mode input field. A separate job will be triggered for each dataset.' +\n                '</div>';\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/form/form-select-content.js\n ** module id = 91\n ** module chunks = 2\n **/","/**\n    This is the main class of the form plugin. It is referenced as 'app' in all lower level modules.\n*/\ndefine(['utils/utils', 'mvc/ui/ui-portlet', 'mvc/ui/ui-misc',\n        'mvc/form/form-section', 'mvc/form/form-data'],\n    function(Utils, Portlet, Ui, FormSection, FormData) {\n\n    // create form view\n    return Backbone.View.extend({\n        // initialize\n        initialize: function(options) {\n            // options\n            this.optionsDefault = {\n                // uses workflow editor mode i.e. text instead of select fields\n                is_workflow     : false,\n                // shows errors on start\n                initial_errors  : false,\n                // portlet style\n                cls             : 'ui-portlet-limited'\n            };\n\n            // configure options\n            this.options = Utils.merge(options, this.optionsDefault);\n\n            // log options\n            console.debug(this.options);\n\n            // link galaxy modal or create one\n            var galaxy = parent.Galaxy;\n            if (galaxy && galaxy.modal) {\n                this.modal = galaxy.modal;\n            } else {\n                this.modal = new Ui.Modal.View();\n            }\n\n            // set element\n            this.setElement('<div/>');\n\n            // build this form\n            this._build();\n        },\n\n        /** Update available options */\n        update: function(new_model){\n            var self = this;\n            this.data.matchModel(new_model, function(input_id, node) {\n                var input = self.input_list[input_id];\n                if (input && input.options) {\n                    if (!_.isEqual(input.options, node.options)) {\n                        // backup new options\n                        input.options = node.options;\n\n                        // get/update field\n                        var field = self.field_list[input_id];\n                        if (field.update) {\n                            var new_options = [];\n                            if ((['data', 'data_collection', 'drill_down']).indexOf(input.type) != -1) {\n                                new_options = input.options;\n                            } else {\n                                for (var i in node.options) {\n                                    var opt = node.options[i];\n                                    if (opt.length > 2) {\n                                        new_options.push({\n                                            'label': opt[0],\n                                            'value': opt[1]\n                                        });\n                                    }\n                                }\n                            }\n                            field.update(new_options);\n                            field.trigger('change');\n                            console.debug('Updating options for ' + input_id);\n                        }\n                    }\n                }\n            });\n        },\n\n        /** Set form into wait mode */\n        wait: function(active) {\n            for (var i in this.input_list) {\n                var field = this.field_list[i];\n                var input = this.input_list[i];\n                if (input.is_dynamic && field.wait && field.unwait) {\n                    if (active) {\n                        field.wait();\n                    } else {\n                        field.unwait();\n                    }\n                }\n            }\n        },\n\n        /** Highlight and scroll to input element (currently only used for error notifications)\n        */\n        highlight: function (input_id, message, silent) {\n            // get input field\n            var input_element = this.element_list[input_id];\n\n            // check input element\n            if (input_element) {\n                // mark error\n                input_element.error(message || 'Please verify this parameter.');\n\n                // trigger expand event for parent containers\n                this.trigger('expand', input_id);\n\n                // scroll to first input element\n                if (!silent) {\n                    if (self==top) {\n                        var $panel = this.$el.parents().filter(function() {\n                            return $(this).css('overflow') == 'auto';\n                        }).first();\n                        $panel.animate({ scrollTop : $panel.scrollTop() + input_element.$el.offset().top - 50 }, 500);\n                    } else {\n                        $('html, body').animate({ scrollTop : input_element.$el.offset().top - 20 }, 500);\n                    }\n                }\n            }\n        },\n\n        /** Highlights errors\n        */\n        errors: function(options) {\n            // hide previous error statements\n            this.trigger('reset');\n\n            // highlight all errors\n            if (options && options.errors) {\n                var error_messages = this.data.matchResponse(options.errors);\n                for (var input_id in this.element_list) {\n                    var input = this.element_list[input_id];\n                    if (error_messages[input_id]) {\n                        this.highlight(input_id, error_messages[input_id], true);\n                    }\n                }\n            }\n        },\n\n        /** Main tool form build function. This function is called once a new model is available.\n        */\n        _build: function() {\n            // link this\n            var self = this;\n\n            // reset events\n            this.off('change');\n            this.off('reset');\n\n            // reset field list, which contains the input field elements\n            this.field_list = {};\n\n            // reset sequential input definition list, which contains the input definitions as provided from the api\n            this.input_list = {};\n\n            // reset input element list, which contains the dom elements of each input element (includes also the input field)\n            this.element_list = {};\n\n            // creates a json data structure from the input form\n            this.data = new FormData(this);\n\n            // create ui elements\n            this._renderForm();\n\n            // refresh data\n            this.data.create();\n\n            // show errors on startup\n            if (this.options.initial_errors) {\n                this.errors(this.options);\n            }\n\n            // add listener which triggers on checksum change\n            var current_check = this.data.checksum();\n            this.on('change', function() {\n                var new_check = self.data.checksum();\n                if (new_check != current_check) {\n                    current_check = new_check;\n                    self.options.onchange && self.options.onchange();\n                }\n            });\n\n            // add reset listener\n            this.on('reset', function() {\n                for (var i in this.element_list) {\n                    this.element_list[i].reset();\n                }\n            });\n        },\n\n        /** Renders the UI elements required for the form\n        */\n        _renderForm: function() {\n            // create message view\n            this.message = new Ui.Message();\n\n            // create tool form section\n            this.section = new FormSection.View(this, {\n                inputs : this.options.inputs\n            });\n\n            // remove tooltips\n            $( '.tooltip' ).remove();\n\n            // create portlet\n            this.portlet = new Portlet.View({\n                icon        : 'fa-wrench',\n                title       : this.options.title,\n                cls         : this.options.cls,\n                operations  : this.options.operations,\n                buttons     : this.options.buttons\n            });\n\n            // append message\n            this.portlet.append(this.message.$el.addClass('ui-margin-top'));\n\n            // append tool section\n            this.portlet.append(this.section.$el);\n\n            // start form\n            this.$el.empty();\n            this.$el.append(this.portlet.$el);\n\n            // show message if available in model\n            if (this.options.message) {\n                this.message.update({\n                    persistent  : true,\n                    status      : 'warning',\n                    message     : this.options.message\n                });\n            }\n\n            // log\n            console.debug('tools-form-base::initialize() - Completed.');\n        }\n    });\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/form/form-view.js\n ** module id = 92\n ** module chunks = 2\n **/","define([\n    \"mvc/dataset/dataset-li-edit\",\n    \"mvc/history/hda-li\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( DATASET_LI_EDIT, HDA_LI, BASE_MVC, _l ){\n//==============================================================================\nvar _super = DATASET_LI_EDIT.DatasetListItemEdit;\n/** @class Editing view for HistoryDatasetAssociation.\n */\nvar HDAListItemEdit = _super.extend(\n/** @lends HDAListItemEdit.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    className   : _super.prototype.className + \" history-content\",\n\n    /** In this override, only get details if in the ready state, get rerunnable if in other states.\n     *  Note: fetch with no 'change' event triggering to prevent automatic rendering.\n     */\n    _fetchModelDetails : function(){\n        var view = this;\n        if( view.model.inReadyState() && !view.model.hasDetails() ){\n            return view.model.fetch({ silent: true });\n\n        // special case the need for the rerunnable and creating_job attributes\n        // needed for rendering re-run button on queued, running datasets\n        } else if( !view.model.has( 'rerunnable' ) ){\n            return view.model.fetch({ silent: true, data: {\n                // only fetch rerunnable and creating_job to keep overhead down\n                keys: [ 'rerunnable', 'creating_job' ].join(',')\n            }});\n        }\n        return jQuery.when();\n    },\n\n    /** event map */\n    events : _.extend( _.clone( _super.prototype.events ), {\n        'click .unhide-link' : function( ev ){ this.model.unhide(); return false; }\n    }),\n\n    /** string rep */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'HDAListItemEdit(' + modelString + ')';\n    }\n});\n\n\n// ............................................................................ TEMPLATES\n/** underscore templates */\nHDAListItemEdit.prototype.templates = (function(){\n//TODO: move to require text! plugin\n\n    var warnings = _.extend( {}, _super.prototype.templates.warnings, {\n        hidden : BASE_MVC.wrapTemplate([\n            '<% if( !dataset.visible ){ %>',\n                // add a link to unhide a dataset\n                '<div class=\"hidden-msg warningmessagesmall\">',\n                    _l( 'This dataset has been hidden' ),\n                    '<br /><a class=\"unhide-link\" a href=\"javascript:void(0);\">', _l( 'Unhide it' ), '</a>',\n                '</div>',\n            '<% } %>'\n        ], 'dataset' )\n    });\n\n    return _.extend( {}, _super.prototype.templates, {\n        //NOTE: *steal* the HDAListItemView titleBar\n        titleBar : HDA_LI.HDAListItemView.prototype.templates.titleBar,\n        warnings : warnings\n    });\n}());\n\n\n//==============================================================================\n    return {\n        HDAListItemEdit  : HDAListItemEdit\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/hda-li-edit.js\n ** module id = 93\n ** module chunks = 2\n **/","define([\n    \"mvc/history/hdca-li\",\n    \"mvc/collection/collection-panel-edit\",\n    \"ui/fa-icon-button\",\n    \"utils/localization\"\n], function( HDCA_LI, DC_PANEL_EDIT, faIconButton, _l ){\n//==============================================================================\nvar _super = HDCA_LI.HDCAListItemView;\n/** @class Editing view for HistoryDatasetCollectionAssociation.\n */\nvar HDCAListItemEdit = _super.extend(\n/** @lends HDCAListItemEdit.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** Override to return editable versions of the collection panels */\n    _getFoldoutPanelClass : function(){\n        switch( this.model.get( 'collection_type' ) ){\n            case 'list':\n                return DC_PANEL_EDIT.ListCollectionPanelEdit;\n            case 'paired':\n                return DC_PANEL_EDIT.PairCollectionPanelEdit;\n            case 'list:paired':\n                return DC_PANEL_EDIT.ListOfPairsCollectionPanelEdit;\n        }\n        throw new TypeError( 'Uknown collection_type: ' + this.model.get( 'collection_type' ) );\n    },\n\n    // ......................................................................... delete\n    /** In this override, add the delete button. */\n    _renderPrimaryActions : function(){\n        this.log( this + '._renderPrimaryActions' );\n        // render the display, edit attr and delete icon-buttons\n        return _super.prototype._renderPrimaryActions.call( this )\n            .concat([\n                this._renderDeleteButton()\n            ]);\n    },\n\n    /** Render icon-button to delete this collection. */\n    _renderDeleteButton : function(){\n        var self = this,\n            deleted = this.model.get( 'deleted' );\n        return faIconButton({\n            title       : deleted? _l( 'Dataset collection is already deleted' ): _l( 'Delete' ),\n            classes     : 'delete-btn',\n            faIcon      : 'fa-times',\n            disabled    : deleted,\n            onclick     : function() {\n                // ...bler... tooltips being left behind in DOM (hover out never called on deletion)\n                self.$el.find( '.icon-btn.delete-btn' ).trigger( 'mouseout' );\n                self.model[ 'delete' ]();\n            }\n        });\n    },\n\n    // ......................................................................... misc\n    /** string rep */\n    toString : function(){\n        var modelString = ( this.model )?( this.model + '' ):( '(no model)' );\n        return 'HDCAListItemEdit(' + modelString + ')';\n    }\n});\n\n//==============================================================================\n    return {\n        HDCAListItemEdit : HDCAListItemEdit\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/hdca-li-edit.js\n ** module id = 94\n ** module chunks = 2\n **/","define([\n    \"mvc/history/history-model\",\n    \"mvc/history/history-panel-edit\",\n    \"mvc/collection/collection-panel\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( HISTORY_MODEL, HPANEL_EDIT, DC_PANEL, BASE_MVC, _l ){\n// ============================================================================\n/** session storage for history panel preferences (and to maintain state)\n */\nvar HistoryPanelPrefs = BASE_MVC.SessionStorageModel.extend(\n/** @lends HistoryPanelPrefs.prototype */{\n    defaults : {\n        /** should the tags editor be shown or hidden initially? */\n        tagsEditorShown : false,\n        /** should the annotation editor be shown or hidden initially? */\n        annotationEditorShown : false,\n        ///** what is the currently focused content (dataset or collection) in the current history?\n        // *      (the history panel will highlight and scroll to the focused content view)\n        // */\n        //focusedContentId : null\n        /** Current scroll position */\n        scrollPosition : 0\n    },\n    toString : function(){\n        return 'HistoryPanelPrefs(' + JSON.stringify( this.toJSON() ) + ')';\n    }\n});\n\n/** key string to store panel prefs (made accessible on class so you can access sessionStorage directly) */\nHistoryPanelPrefs.storageKey = function storageKey(){\n    return ( 'history-panel' );\n};\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HPANEL_EDIT.HistoryPanelEdit;\n// used in root/index.mako\n/** @class View/Controller for the user's current history model as used in the history\n *      panel (current right hand panel) of the analysis page.\n *\n *  The only history panel that:\n *      will poll for updates.\n *      displays datasets in reverse hid order.\n */\nvar CurrentHistoryPanel = _super.extend(\n/** @lends CurrentHistoryPanel.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    className           : _super.prototype.className + ' current-history-panel',\n\n    emptyMsg            : _l( \"This history is empty. Click 'Get Data' on the left tool menu to start\" ),\n    noneFoundMsg        : _l( \"No matching datasets found\" ),\n\n    /**  */\n    HDCAViewClass       : _super.prototype.HDCAViewClass.extend({\n        foldoutStyle : 'drilldown'\n    }),\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events */\n    initialize : function( attributes ){\n        attributes = attributes || {};\n\n        // ---- persistent preferences\n        /** maintain state / preferences over page loads */\n        this.preferences = new HistoryPanelPrefs( _.extend({\n            id : HistoryPanelPrefs.storageKey()\n        }, _.pick( attributes, _.keys( HistoryPanelPrefs.prototype.defaults ) )));\n\n        _super.prototype.initialize.call( this, attributes );\n\n        /** sub-views that will overlay this panel (collections) */\n        this.panelStack = [];\n\n        /** id of currently focused content */\n        this.currentContentId = attributes.currentContentId || null;\n        //NOTE: purposely not sent to localstorage since panel recreation roughly lines up with a reset of this value\n    },\n\n    /** Override to cache the current scroll position with a listener */\n    _setUpListeners : function(){\n        _super.prototype._setUpListeners.call( this );\n\n        var panel = this;\n        // reset scroll position when there's a new history\n        this.on( 'new-model', function(){\n            panel.preferences.set( 'scrollPosition', 0 );\n        });\n    },\n\n    // ------------------------------------------------------------------------ loading history/item models\n    /** (re-)loads the user's current history & contents w/ details */\n    loadCurrentHistory : function( attributes ){\n        this.debug( this + '.loadCurrentHistory' );\n        // implemented as a 'fresh start' or for when there is no model (intial panel render)\n        var panel = this;\n        return this.loadHistoryWithDetails( 'current', attributes )\n            .then(function( historyData, contentsData ){\n                panel.trigger( 'current-history', panel );\n            });\n    },\n\n    /** loads a history & contents w/ details and makes them the current history */\n    switchToHistory : function( historyId, attributes ){\n        //this.info( 'switchToHistory:', historyId, attributes );\n        var panel = this,\n            historyFn = function(){\n                // make this current and get history data with one call\n                return jQuery.getJSON( galaxy_config.root + 'history/set_as_current?id=' + historyId  );\n                //    method  : 'PUT'\n                //});\n            };\n        return this.loadHistoryWithDetails( historyId, attributes, historyFn )\n            .then( function( historyData, contentsData ){\n                panel.trigger( 'switched-history', panel );\n            });\n    },\n\n    /** creates a new history on the server and sets it as the user's current history */\n    createNewHistory : function( attributes ){\n        if( !Galaxy || !Galaxy.currUser || Galaxy.currUser.isAnonymous() ){\n            this.displayMessage( 'error', _l( 'You must be logged in to create histories' ) );\n            return $.when();\n        }\n        var panel = this,\n            historyFn = function(){\n                // create a new history and save: the server will return the proper JSON\n                return jQuery.getJSON( galaxy_config.root + 'history/create_new_current'  );\n            };\n\n        // id undefined bc there is no historyId yet - the server will provide\n        //  (no need for details - nothing expanded in new history)\n        return this.loadHistory( undefined, attributes, historyFn )\n            .then(function( historyData, contentsData ){\n                panel.trigger( 'new-history', panel );\n            });\n    },\n\n    /** release/free/shutdown old models and set up panel for new models */\n    setModel : function( model, attributes, render ){\n        _super.prototype.setModel.call( this, model, attributes, render );\n        if( this.model ){\n            this.log( 'checking for updates' );\n            this.model.checkForUpdates();\n        }\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ history/content event listening\n    /** listening for collection events */\n    _setUpCollectionListeners : function(){\n        _super.prototype._setUpCollectionListeners.call( this );\n\n        //TODO:?? may not be needed? see history-panel-edit, 369\n        // if a hidden item is created (gen. by a workflow), moves thru the updater to the ready state,\n        //  then: remove it from the collection if the panel is set to NOT show hidden datasets\n        this.collection.on( 'state:ready', function( model, newState, oldState ){\n            if( ( !model.get( 'visible' ) )\n            &&  ( !this.storage.get( 'show_hidden' ) ) ){\n                this.removeItemView( model );\n            }\n        }, this );\n    },\n\n    /** listening for history events */\n    _setUpModelListeners : function(){\n        _super.prototype._setUpModelListeners.call( this );\n        // ---- history\n        // update the quota meter when current history changes size\n//TODO: global - have Galaxy listen to this instead\n        if( Galaxy && Galaxy.quotaMeter ){\n            this.listenTo( this.model, 'change:nice_size', function(){\n                //this.info( '!! model size changed:', this.model.get( 'nice_size' ) )\n                Galaxy.quotaMeter.update();\n            });\n        }\n\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** override to add a handler to capture the scroll position when the parent scrolls */\n    _setUpBehaviors : function( $where ){\n        $where = $where || this.$el;\n        // we need to call this in _setUpBehaviors which is called after render since the $el\n        // may not be attached to $el.parent and $scrollContainer() may not work\n        var panel = this;\n        _super.prototype._setUpBehaviors.call( panel, $where );\n\n        // cache the handler to remove and re-add so we don't pile up the handlers\n        if( !this._debouncedScrollCaptureHandler ){\n            this._debouncedScrollCaptureHandler = _.debounce( function scrollCapture(){\n                // cache the scroll position (only if visible)\n                if( panel.$el.is( ':visible' ) ){\n                    panel.preferences.set( 'scrollPosition', $( this ).scrollTop() );\n                }\n            }, 40 );\n        }\n\n        panel.$scrollContainer()\n            .off( 'scroll', this._debouncedScrollCaptureHandler )\n            .on( 'scroll', this._debouncedScrollCaptureHandler );\n        return panel;\n    },\n\n    /** In this override, handle null models and move the search input to the top */\n    _buildNewRender : function(){\n        if( !this.model ){ return $(); }\n        var $newRender = _super.prototype._buildNewRender.call( this );\n        //TODO: hacky\n        $newRender.find( '.search' ).prependTo( $newRender.find( '.controls' ) );\n        this._renderQuotaMessage( $newRender );\n        return $newRender;\n    },\n\n    /** render the message displayed when a user is over quota and can't run jobs */\n    _renderQuotaMessage : function( $whereTo ){\n        $whereTo = $whereTo || this.$el;\n        return $( this.templates.quotaMsg( {}, this ) ).prependTo( $whereTo.find( '.messages' ) );\n    },\n\n    /** In this override, add links to open data uploader or get data in the tools section */\n    _renderEmptyMessage : function( $whereTo ){\n        var panel = this,\n            $emptyMsg = panel.$emptyMessage( $whereTo ),\n            $toolMenu = $( '.toolMenuContainer' );\n\n        if( ( _.isEmpty( panel.views ) && !panel.searchFor )\n        &&  ( Galaxy && Galaxy.upload && $toolMenu.size() ) ){\n            $emptyMsg.empty();\n\n            $emptyMsg.html([\n                _l( 'This history is empty' ), '. ', _l( 'You can ' ),\n                '<a class=\"uploader-link\" href=\"javascript:void(0)\">',\n                    _l( 'load your own data' ),\n                '</a>',\n                _l( ' or ' ), '<a class=\"get-data-link\" href=\"javascript:void(0)\">',\n                    _l( 'get data from an external source' ),\n                '</a>'\n            ].join('') );\n            $emptyMsg.find( '.uploader-link' ).click( function( ev ){\n                Galaxy.upload.show( ev );\n            });\n            $emptyMsg.find( '.get-data-link' ).click( function( ev ){\n                $toolMenu.parent().scrollTop( 0 );\n                $toolMenu.find( 'span:contains(\"Get Data\")' )\n                    .click();\n                    //.fadeTo( 200, 0.1, function(){\n                    //    this.debug( this )\n                    //    $( this ).fadeTo( 200, 1.0 );\n                    //});\n            });\n            return $emptyMsg.show();\n        }\n        return _super.prototype._renderEmptyMessage.call( this, $whereTo );\n    },\n\n    /** In this override, get and set current panel preferences when editor is used */\n    _renderTags : function( $where ){\n        var panel = this;\n        // render tags and show/hide based on preferences\n        _super.prototype._renderTags.call( this, $where );\n        if( this.preferences.get( 'tagsEditorShown' ) ){\n            this.tagsEditor.toggle( true );\n        }\n        // store preference when shown or hidden\n        this.tagsEditor.on( 'hiddenUntilActivated:shown hiddenUntilActivated:hidden',\n            function( tagsEditor ){\n                panel.preferences.set( 'tagsEditorShown', tagsEditor.hidden );\n            });\n    },\n\n    /** In this override, get and set current panel preferences when editor is used */\n    _renderAnnotation : function( $where ){\n        var panel = this;\n        // render annotation and show/hide based on preferences\n        _super.prototype._renderAnnotation.call( this, $where );\n        if( this.preferences.get( 'annotationEditorShown' ) ){\n            this.annotationEditor.toggle( true );\n        }\n        // store preference when shown or hidden\n        this.annotationEditor.on( 'hiddenUntilActivated:shown hiddenUntilActivated:hidden',\n            function( annotationEditor ){\n                panel.preferences.set( 'annotationEditorShown', annotationEditor.hidden );\n            }\n        );\n    },\n\n    /** Override to scroll to cached position (in prefs) after swapping */\n    _swapNewRender : function( $newRender ){\n        _super.prototype._swapNewRender.call( this, $newRender );\n        var panel = this;\n        _.delay( function(){\n            var pos = panel.preferences.get( 'scrollPosition' );\n            if( pos ){\n                panel.scrollTo( pos, 0 );\n            }\n        }, 10 );\n        //TODO: is this enough of a delay on larger histories?\n\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** Override to add the current-content highlight class to currentContentId's view */\n    _attachItems : function( $whereTo ){\n        _super.prototype._attachItems.call( this, $whereTo );\n        var panel = this;\n        if( panel.currentContentId ){\n            panel._setCurrentContentById( panel.currentContentId );\n        }\n        return this;\n    },\n\n    /** Override to remove any drill down panels */\n    addItemView : function( model, collection, options ){\n        var view = _super.prototype.addItemView.call( this, model, collection, options );\n        if( !view ){ return view; }\n        if( this.panelStack.length ){ return this._collapseDrilldownPanel(); }\n        return view;\n    },\n\n    // ------------------------------------------------------------------------ collection sub-views\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners : function( view ){\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call( panel, view );\n\n        // use pub-sub to: handle drilldown expansion and collapse\n        view.on( 'expanded:drilldown', function( v, drilldown ){\n            this._expandDrilldownPanel( drilldown );\n        }, this );\n        view.on( 'collapsed:drilldown', function( v, drilldown ){\n            this._collapseDrilldownPanel( drilldown );\n        }, this );\n\n        // when content is manipulated, make it the current-content\n        // view.on( 'visualize', function( v, ev ){\n        //     this.setCurrentContent( v );\n        // }, this );\n\n        return this;\n    },\n\n    /** display 'current content': add a visible highlight and store the id of a content item */\n    setCurrentContent : function( view ){\n        this.$( '.history-content.current-content' ).removeClass( 'current-content' );\n        if( view ){\n            view.$el.addClass( 'current-content' );\n            this.currentContentId = view.model.id;\n        } else {\n            this.currentContentId = null;\n        }\n    },\n\n    /** find the view with the id and then call setCurrentContent on it */\n    _setCurrentContentById : function( id ){\n        var view = this.viewFromModelId( id ) || null;\n        this.setCurrentContent( view );\n    },\n\n    /** Handle drill down by hiding this panels list and controls and showing the sub-panel */\n    _expandDrilldownPanel : function( drilldown ){\n        this.panelStack.push( drilldown );\n        // hide this panel's controls and list, set the name for back navigation, and attach to the $el\n        this.$( '> .controls' ).add( this.$list() ).hide();\n        drilldown.parentName = this.model.get( 'name' );\n        this.$el.append( drilldown.render().$el );\n    },\n\n    /** Handle drilldown close by freeing the panel and re-rendering this panel */\n    _collapseDrilldownPanel : function( drilldown ){\n        this.panelStack.pop();\n//TODO: MEM: free the panel\n        this.render();\n    },\n\n    // ........................................................................ external objects/MVC\n    listenToGalaxy : function( galaxy ){\n        // TODO: MEM: questionable reference island / closure practice\n        galaxy.on( 'galaxy_main:load', function( data ){\n            var pathToMatch = data.fullpath,\n                useToURLRegexMap = {\n                    'display'       : /datasets\\/([a-f0-9]+)\\/display/,\n                    'edit'          : /datasets\\/([a-f0-9]+)\\/edit/,\n                    'report_error'  : /dataset\\/errors\\?id=([a-f0-9]+)/,\n                    'rerun'         : /tool_runner\\/rerun\\?id=([a-f0-9]+)/,\n                    'show_params'   : /datasets\\/([a-f0-9]+)\\/show_params/,\n                    // no great way to do this here? (leave it in the dataset event handlers above?)\n                    // 'visualization' : 'visualization',\n                },\n                hdaId = null,\n                hdaUse = null;\n            _.find( useToURLRegexMap, function( regex, use ){\n                var match = pathToMatch.match( regex );\n                if( match && match.length == 2 ){\n                    hdaId = match[1];\n                    hdaUse = use;\n                    return true;\n                }\n                return false;\n            });\n            // need to type mangle to go from web route to history contents\n            hdaId = 'dataset-' + hdaId;\n            this._setCurrentContentById( hdaId );\n        }, this );\n    },\n\n//TODO: remove quota meter from panel and remove this\n    /** add listeners to an external quota meter (mvc/user/user-quotameter.js) */\n    connectToQuotaMeter : function( quotaMeter ){\n        if( !quotaMeter ){\n            return this;\n        }\n        // show/hide the 'over quota message' in the history when the meter tells it to\n        this.listenTo( quotaMeter, 'quota:over',  this.showQuotaMessage );\n        this.listenTo( quotaMeter, 'quota:under', this.hideQuotaMessage );\n\n        // having to add this to handle re-render of hview while overquota (the above do not fire)\n        this.on( 'rendered rendered:initial', function(){\n            if( quotaMeter && quotaMeter.isOverQuota() ){\n                this.showQuotaMessage();\n            }\n        });\n        return this;\n    },\n\n//TODO: this seems more like a per user message than a history message; IOW, this doesn't belong here\n    /** Override to preserve the quota message */\n    clearMessages : function( ev ){\n        var $target = !_.isUndefined( ev )?\n            $( ev.currentTarget )\n            :this.$messages().children( '[class$=\"message\"]' );\n        $target = $target.not( '.quota-message' );\n        $target.fadeOut( this.fxSpeed, function(){\n            $( this ).remove();\n        });\n        return this;\n    },\n\n    /** Show the over quota message (which happens to be in the history panel).\n     */\n    showQuotaMessage : function(){\n        var $msg = this.$( '.quota-message' );\n        if( $msg.is( ':hidden' ) ){ $msg.slideDown( this.fxSpeed ); }\n    },\n\n//TODO: this seems more like a per user message than a history message\n    /** Hide the over quota message (which happens to be in the history panel).\n     */\n    hideQuotaMessage : function(){\n        var $msg = this.$( '.quota-message' );\n        if( !$msg.is( ':hidden' ) ){ $msg.slideUp( this.fxSpeed ); }\n    },\n\n    /** Return a string rep of the history\n     */\n    toString    : function(){\n        return 'CurrentHistoryPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n//------------------------------------------------------------------------------ TEMPLATES\nCurrentHistoryPanel.prototype.templates = (function(){\n\n    var quotaMsgTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"quota-message errormessage\">',\n            _l( 'You are over your disk quota' ), '. ',\n            _l( 'Tool execution is on hold until your disk usage drops below your allocated quota' ), '.',\n        '</div>'\n    ], 'history' );\n    return _.extend( _.clone( _super.prototype.templates ), {\n        quotaMsg : quotaMsgTemplate\n    });\n\n}());\n\n\n//==============================================================================\n    return {\n        CurrentHistoryPanel        : CurrentHistoryPanel\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/history-panel-edit-current.js\n ** module id = 95\n ** module chunks = 2\n **/","define([\n    \"mvc/history/history-panel\",\n    \"mvc/history/history-contents\",\n    \"mvc/dataset/states\",\n    \"mvc/history/hda-model\",\n    \"mvc/history/hda-li-edit\",\n    \"mvc/history/hdca-li-edit\",\n    \"mvc/tags\",\n    \"mvc/annotations\",\n    \"mvc/collection/list-collection-creator\",\n    \"mvc/collection/pair-collection-creator\",\n    \"mvc/collection/list-of-pairs-collection-creator\",\n    \"ui/fa-icon-button\",\n    \"mvc/ui/popup-menu\",\n    \"utils/localization\",\n    \"ui/editable-text\",\n], function(\n    HPANEL,\n    HISTORY_CONTENTS,\n    STATES,\n    HDA_MODEL,\n    HDA_LI_EDIT,\n    HDCA_LI_EDIT,\n    TAGS,\n    ANNOTATIONS,\n    LIST_COLLECTION_CREATOR,\n    PAIR_COLLECTION_CREATOR,\n    LIST_OF_PAIRS_COLLECTION_CREATOR,\n    faIconButton,\n    PopupMenu,\n    _l\n){\n/* =============================================================================\nTODO:\n\n============================================================================= */\nvar _super = HPANEL.HistoryPanel;\n// base class for current-history-panel and used as-is in history/view.mako\n/** @class Editable View/Controller for the history model.\n *\n *  Allows:\n *      (everything HistoryPanel allows)\n *      changing the name\n *      displaying and editing tags and annotations\n *      multi-selection and operations on mulitple content items\n */\nvar HistoryPanelEdit = _super.extend(\n/** @lends HistoryPanelEdit.prototype */{\n\n    /** logger used to record this.log messages, commonly set to console */\n    //logger              : console,\n\n    /** class to use for constructing the HistoryDatasetAssociation views */\n    HDAViewClass    : HDA_LI_EDIT.HDAListItemEdit,\n    /** class to use for constructing the HistoryDatasetCollectionAssociation views */\n    HDCAViewClass   : HDCA_LI_EDIT.HDCAListItemEdit,\n\n    // ......................................................................... SET UP\n    /** Set up the view, set up storage, bind listeners to HistoryContents events\n     *  @param {Object} attributes\n     */\n    initialize : function( attributes ){\n        attributes = attributes || {};\n        _super.prototype.initialize.call( this, attributes );\n\n        // ---- set up instance vars\n        /** editor for tags - sub-view */\n        this.tagsEditor = null;\n        /** editor for annotations - sub-view */\n        this.annotationEditor = null;\n\n        /** allow user purge of dataset files? */\n        this.purgeAllowed = attributes.purgeAllowed || false;\n\n        // states/modes the panel can be in\n        /** is the panel currently showing the dataset selection controls? */\n        this.annotationEditorShown  = attributes.annotationEditorShown || false;\n        this.tagsEditorShown  = attributes.tagsEditorShown || false;\n    },\n\n    /** Override to handle history as drag-drop target */\n    _setUpListeners : function(){\n        var panel = this;\n        _super.prototype._setUpListeners.call( panel );\n\n        panel.on( 'drop', function( ev, data ){\n            panel.dataDropped( data );\n            // remove the drop target\n            panel.dropTargetOff();\n        });\n        panel.on( 'view:attached view:removed', function(){\n            panel._renderCounts();\n        }, panel );\n    },\n\n    // ------------------------------------------------------------------------ listeners\n    /** listening for collection events */\n    _setUpCollectionListeners : function(){\n        _super.prototype._setUpCollectionListeners.call( this );\n\n        this.collection.on( 'change:deleted', this._handleHdaDeletionChange, this );\n        this.collection.on( 'change:visible', this._handleHdaVisibleChange, this );\n        this.collection.on( 'change:purged', function( model ){\n            // hafta get the new nice-size w/o the purged model\n            this.model.fetch();\n        }, this );\n        return this;\n    },\n\n    /** listening for history and HDA events */\n    _setUpModelListeners : function(){\n        _super.prototype._setUpModelListeners.call( this );\n        this.model.on( 'change:size', this.updateHistoryDiskSize, this );\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** In this override, add tag and annotation editors and a btn to toggle the selectors */\n    _buildNewRender : function(){\n        // create a new render using a skeleton template, render title buttons, render body, and set up events, etc.\n        var $newRender = _super.prototype._buildNewRender.call( this );\n        if( !this.model ){ return $newRender; }\n\n        if( Galaxy && Galaxy.currUser && Galaxy.currUser.id && Galaxy.currUser.id === this.model.get( 'user_id' ) ){\n            this._renderTags( $newRender );\n            this._renderAnnotation( $newRender );\n        }\n        return $newRender;\n    },\n\n    /** override to render counts when the items are rendered */\n    renderItems : function( $whereTo ){\n        var views = _super.prototype.renderItems.call( this, $whereTo );\n        this._renderCounts( $whereTo );\n        return views;\n    },\n\n    /** override to show counts, what's deleted/hidden, and links to toggle those */\n    _renderCounts : function( $whereTo ){\n//TODO: too complicated\n        function toggleLink( _class, text ){\n            return [ '<a class=\"', _class, '\" href=\"javascript:void(0);\">', text, '</a>' ].join( '' );\n        }\n        $whereTo = $whereTo || this.$el;\n        var deleted  = this.collection.where({ deleted: true }),\n            hidden   = this.collection.where({ visible: false }),\n            msgs = [];\n\n        if( this.views.length ){\n            msgs.push( [ this.views.length, _l( 'shown' ) ].join( ' ' ) );\n        }\n        if( deleted.length ){\n            msgs.push( ( !this.showDeleted )?\n                 ([ deleted.length, toggleLink( 'toggle-deleted-link', _l( 'deleted' ) ) ].join( ' ' ))\n                :( toggleLink( 'toggle-deleted-link', _l( 'hide deleted' ) ) )\n            );\n        }\n        if( hidden.length ){\n            msgs.push( ( !this.showHidden )?\n                 ([ hidden.length, toggleLink( 'toggle-hidden-link', _l( 'hidden' ) ) ].join( ' ' ))\n                :( toggleLink( 'toggle-hidden-link', _l( 'hide hidden' ) ) )\n            );\n        }\n        return $whereTo.find( '> .controls .subtitle' ).html( msgs.join( ', ' ) );\n    },\n\n    /** render the tags sub-view controller */\n    _renderTags : function( $where ){\n        var panel = this;\n        this.tagsEditor = new TAGS.TagsEditor({\n            model           : this.model,\n            el              : $where.find( '.controls .tags-display' ),\n            onshowFirstTime : function(){ this.render(); },\n            // show hide sub-view tag editors when this is shown/hidden\n            onshow          : function(){\n                panel.toggleHDATagEditors( true,  panel.fxSpeed );\n            },\n            onhide          : function(){\n                panel.toggleHDATagEditors( false, panel.fxSpeed );\n            },\n            $activator      : faIconButton({\n                title   : _l( 'Edit history tags' ),\n                classes : 'history-tag-btn',\n                faIcon  : 'fa-tags'\n            }).appendTo( $where.find( '.controls .actions' ) )\n        });\n    },\n    /** render the annotation sub-view controller */\n    _renderAnnotation : function( $where ){\n        var panel = this;\n        this.annotationEditor = new ANNOTATIONS.AnnotationEditor({\n            model           : this.model,\n            el              : $where.find( '.controls .annotation-display' ),\n            onshowFirstTime : function(){ this.render(); },\n            // show hide sub-view view annotation editors when this is shown/hidden\n            onshow          : function(){\n                panel.toggleHDAAnnotationEditors( true,  panel.fxSpeed );\n            },\n            onhide          : function(){\n                panel.toggleHDAAnnotationEditors( false, panel.fxSpeed );\n            },\n            $activator      : faIconButton({\n                title   : _l( 'Edit history annotation' ),\n                classes : 'history-annotate-btn',\n                faIcon  : 'fa-comment'\n            }).appendTo( $where.find( '.controls .actions' ) )\n        });\n    },\n\n    /** Set up HistoryPanelEdit js/widget behaviours\n     *  In this override, make the name editable\n     */\n    _setUpBehaviors : function( $where ){\n        $where = $where || this.$el;\n        _super.prototype._setUpBehaviors.call( this, $where );\n        if( !this.model ){ return; }\n\n        // anon users shouldn't have access to any of the following\n        if( ( !Galaxy.currUser || Galaxy.currUser.isAnonymous() )\n        ||  ( Galaxy.currUser.id !== this.model.get( 'user_id' ) ) ){\n            return;\n        }\n\n        var panel = this,\n            nameSelector = '> .controls .name';\n        $where.find( nameSelector )\n            .attr( 'title', _l( 'Click to rename history' ) )\n            .tooltip({ placement: 'bottom' })\n            .make_text_editable({\n                on_finish: function( newName ){\n                    var previousName = panel.model.get( 'name' );\n                    if( newName && newName !== previousName ){\n                        panel.$el.find( nameSelector ).text( newName );\n                        panel.model.save({ name: newName })\n                            .fail( function(){\n                                panel.$el.find( nameSelector ).text( panel.model.previous( 'name' ) );\n                            });\n                    } else {\n                        panel.$el.find( nameSelector ).text( previousName );\n                    }\n                }\n            });\n    },\n\n    /** return a new popup menu for choosing a multi selection action\n     *  ajax calls made for multiple datasets are queued\n     */\n    multiselectActions : function(){\n        var panel = this,\n            actions = [\n                {   html: _l( 'Hide datasets' ), func: function(){\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.hide;\n                        panel.getSelectedModels().ajaxQueue( action );\n                    }\n                },\n                {   html: _l( 'Unhide datasets' ), func: function(){\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.unhide;\n                        panel.getSelectedModels().ajaxQueue( action );\n                    }\n                },\n                {   html: _l( 'Delete datasets' ), func: function(){\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype['delete'];\n                        panel.getSelectedModels().ajaxQueue( action );\n                    }\n                },\n                {   html: _l( 'Undelete datasets' ), func: function(){\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.undelete;\n                        panel.getSelectedModels().ajaxQueue( action );\n                    }\n                }\n            ];\n        if( panel.purgeAllowed ){\n            actions.push({\n                html: _l( 'Permanently delete datasets' ), func: function(){\n                    if( confirm( _l( 'This will permanently remove the data in your datasets. Are you sure?' ) ) ){\n                        var action = HDA_MODEL.HistoryDatasetAssociation.prototype.purge;\n                        panel.getSelectedModels().ajaxQueue( action );\n                    }\n                }\n            });\n        }\n        actions = actions.concat( panel._collectionActions() );\n        return actions;\n    },\n\n    /**   */\n    _collectionActions : function(){\n        var panel = this;\n        return [\n            {   html: _l( 'Build Dataset List' ), func: function() {\n                    LIST_COLLECTION_CREATOR.createListCollection( panel.getSelectedModels() )\n                        .done( function(){ panel.model.refresh() });\n                }\n            },\n            // TODO: Only show quick pair if two things selected.\n            {   html: _l( 'Build Dataset Pair' ), func: function() {\n                    PAIR_COLLECTION_CREATOR.createPairCollection( panel.getSelectedModels() )\n                        .done( function(){ panel.model.refresh() });\n                }\n            },\n            {   html: _l( 'Build List of Dataset Pairs' ), func: function() {\n                    LIST_OF_PAIRS_COLLECTION_CREATOR.createListOfPairsCollection( panel.getSelectedModels() )\n                        .done( function(){ panel.model.refresh() });\n                }\n            },\n        ];\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    // reverse HID order\n    /** Override to reverse order of views - newest contents on top */\n    _attachItems : function( $whereTo ){\n        this.$list( $whereTo ).append( this.views.reverse().map( function( view ){\n            return view.$el;\n        }));\n        return this;\n    },\n\n    /** Override to add new contents at the top */\n    _attachView : function( view ){\n        var panel = this;\n        // override to control where the view is added, how/whether it's rendered\n        panel.views.unshift( view );\n        panel.$list().prepend( view.render( 0 ).$el.hide() );\n        panel.trigger( 'view:attached', view );\n        view.$el.slideDown( panel.fxSpeed, function(){\n            panel.trigger( 'view:attached:rendered' );\n        });\n    },\n\n    /** In this override, add purgeAllowed and whether tags/annotation editors should be shown */\n    _getItemViewOptions : function( model ){\n        var options = _super.prototype._getItemViewOptions.call( this, model );\n        _.extend( options, {\n            purgeAllowed            : this.purgeAllowed,\n//TODO: not working\n            tagsEditorShown         : ( this.tagsEditor && !this.tagsEditor.hidden ),\n            annotationEditorShown   : ( this.annotationEditor && !this.annotationEditor.hidden )\n        });\n        return options;\n    },\n\n    ///** Override to alter data in drag based on multiselection */\n    //_setUpItemViewListeners : function( view ){\n    //    var panel = this;\n    //    _super.prototype._setUpItemViewListeners.call( panel, view );\n    //\n    //},\n\n    /** If this item is deleted and we're not showing deleted items, remove the view\n     *  @param {Model} the item model to check\n     */\n    _handleHdaDeletionChange : function( itemModel ){\n        if( itemModel.get( 'deleted' ) && !this.showDeleted ){\n            this.removeItemView( itemModel );\n        }\n        this._renderCounts();\n    },\n\n    /** If this item is hidden and we're not showing hidden items, remove the view\n     *  @param {Model} the item model to check\n     */\n    _handleHdaVisibleChange : function( itemModel ){\n        if( itemModel.hidden() && !this.showHidden ){\n            this.removeItemView( itemModel );\n        }\n        this._renderCounts();\n    },\n\n    /** toggle the visibility of each content's tagsEditor applying all the args sent to this function */\n    toggleHDATagEditors : function( showOrHide ){\n        var args = Array.prototype.slice.call( arguments, 1 );\n        _.each( this.views, function( view ){\n            if( view.tagsEditor ){\n                view.tagsEditor.toggle.apply( view.tagsEditor, args );\n            }\n        });\n    },\n\n    /** toggle the visibility of each content's annotationEditor applying all the args sent to this function */\n    toggleHDAAnnotationEditors : function( showOrHide ){\n        var args = Array.prototype.slice.call( arguments, 1 );\n        _.each( this.views, function( view ){\n            if( view.annotationEditor ){\n                view.annotationEditor.toggle.apply( view.annotationEditor, args );\n            }\n        });\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events : _.extend( _.clone( _super.prototype.events ), {\n        'click .show-selectors-btn'                 : 'toggleSelectors',\n        'click .toggle-deleted-link'                : function( ev ){ this.toggleShowDeleted(); },\n        'click .toggle-hidden-link'                 : function( ev ){ this.toggleShowHidden(); }\n    }),\n\n    /** Update the history size display (curr. upper right of panel).\n     */\n    updateHistoryDiskSize : function(){\n        this.$el.find( '.history-size' ).text( this.model.get( 'nice_size' ) );\n    },\n\n    // ------------------------------------------------------------------------ as drop target\n    /**  */\n    dropTargetOn : function(){\n        if( this.dropTarget ){ return this; }\n        this.dropTarget = true;\n\n        //TODO: to init\n        var dropHandlers = {\n            'dragenter' : _.bind( this.dragenter, this ),\n            'dragover'  : _.bind( this.dragover,  this ),\n            'dragleave' : _.bind( this.dragleave, this ),\n            'drop'      : _.bind( this.drop, this )\n        };\n//TODO: scroll to top\n        var $dropTarget = this._renderDropTarget();\n        this.$list().before([ this._renderDropTargetHelp(), $dropTarget ]);\n        for( var evName in dropHandlers ){\n            if( dropHandlers.hasOwnProperty( evName ) ){\n                //console.debug( evName, dropHandlers[ evName ] );\n                $dropTarget.on( evName, dropHandlers[ evName ] );\n            }\n        }\n        return this;\n    },\n\n    /**  */\n    _renderDropTarget : function(){\n        this.$( '.history-drop-target' ).remove();\n        return $( '<div/>' ).addClass( 'history-drop-target' )\n            .css({\n                'height': '64px',\n                'margin': '0px 10px 10px 10px',\n                'border': '1px dashed black',\n                'border-radius' : '3px'\n            });\n    },\n\n    /**  */\n    _renderDropTargetHelp : function(){\n        this.$( '.history-drop-target-help' ).remove();\n        return $( '<div/>' ).addClass( 'history-drop-target-help' )\n            .css({\n                'margin'        : '10px 10px 4px 10px',\n                'color'         : 'grey',\n                'font-size'     : '80%',\n                'font-style'    : 'italic'\n            })\n            .text( _l( 'Drag datasets here to copy them to the current history' ) );\n    },\n\n    /**  */\n    dropTargetOff : function(){\n        if( !this.dropTarget ){ return this; }\n        //this.log( 'dropTargetOff' );\n        this.dropTarget = false;\n        var dropTarget = this.$( '.history-drop-target' ).get(0);\n        for( var evName in this._dropHandlers ){\n            if( this._dropHandlers.hasOwnProperty( evName ) ){\n                dropTarget.off( evName, this._dropHandlers[ evName ] );\n            }\n        }\n        this.$( '.history-drop-target' ).remove();\n        this.$( '.history-drop-target-help' ).remove();\n        return this;\n    },\n    /**  */\n    dropTargetToggle : function(){\n        if( this.dropTarget ){\n            this.dropTargetOff();\n        } else {\n            this.dropTargetOn();\n        }\n        return this;\n    },\n\n    /**  */\n    dragenter : function( ev ){\n        //console.debug( 'dragenter:', this, ev );\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.$( '.history-drop-target' ).css( 'border', '2px solid black' );\n    },\n    /**  */\n    dragover : function( ev ){\n        ev.preventDefault();\n        ev.stopPropagation();\n    },\n    /**  */\n    dragleave : function( ev ){\n        //console.debug( 'dragleave:', this, ev );\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.$( '.history-drop-target' ).css( 'border', '1px dashed black' );\n    },\n    /**  */\n    drop : function( ev ){\n        //console.warn( 'dataTransfer:', ev.dataTransfer.getData( 'text' ) );\n        //console.warn( 'dataTransfer:', ev.originalEvent.dataTransfer.getData( 'text' ) );\n        ev.preventDefault();\n        //ev.stopPropagation();\n        ev.dataTransfer.dropEffect = 'move';\n\n        //console.debug( 'ev.dataTransfer:', ev.dataTransfer );\n\n        var panel = this,\n            data = ev.dataTransfer.getData( \"text\" );\n        try {\n            data = JSON.parse( data );\n\n        } catch( err ){\n            this.warn( 'error parsing JSON from drop:', data );\n        }\n        this.trigger( 'droptarget:drop', ev, data, panel );\n        return false;\n    },\n\n    /**  */\n    dataDropped : function( data ){\n        var panel = this;\n        // HDA: dropping will copy it to the history\n        if( _.isObject( data ) && data.model_class === 'HistoryDatasetAssociation' && data.id ){\n            return panel.model.contents.copy( data.id );\n        }\n        return jQuery.when();\n    },\n\n    // ........................................................................ misc\n    /** Return a string rep of the history */\n    toString    : function(){\n        return 'HistoryPanelEdit(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n//==============================================================================\n    return {\n        HistoryPanelEdit : HistoryPanelEdit\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/history-panel-edit.js\n ** module id = 96\n ** module chunks = 2\n **/","define([\n    \"mvc/list/list-panel\",\n    \"mvc/history/history-model\",\n    \"mvc/history/history-contents\",\n    \"mvc/history/hda-li\",\n    \"mvc/history/hdca-li\",\n    \"mvc/collection/collection-panel\",\n    \"mvc/user/user-model\",\n    \"ui/fa-icon-button\",\n    \"mvc/ui/popup-menu\",\n    \"mvc/base-mvc\",\n    \"utils/localization\",\n    \"ui/search-input\"\n], function(\n    LIST_PANEL,\n    HISTORY_MODEL,\n    HISTORY_CONTENTS,\n    HDA_LI,\n    HDCA_LI,\n    COLLECTION_PANEL,\n    USER,\n    faIconButton,\n    PopupMenu,\n    BASE_MVC,\n    _l\n){\n\nvar logNamespace = 'history';\n// ============================================================================\n/** session storage for individual history preferences */\nvar HistoryPrefs = BASE_MVC.SessionStorageModel.extend(\n/** @lends HistoryPrefs.prototype */{\n//TODO:?? possibly mark as current T/F - have History.currId() (a class method) return that value\n    defaults : {\n//TODO:?? expandedIds to array?\n        expandedIds : {},\n        //TODO:?? move to user?\n        show_deleted : false,\n        show_hidden  : false\n        //TODO: add scroll position?\n    },\n    /** add an hda id to the hash of expanded hdas */\n    addExpanded : function( model ){\n        var key = 'expandedIds';\n//TODO:?? is this right anymore?\n        this.save( key, _.extend( this.get( key ), _.object([ model.id ], [ model.get( 'id' ) ]) ) );\n    },\n    /** remove an hda id from the hash of expanded hdas */\n    removeExpanded : function( model ){\n        var key = 'expandedIds';\n        this.save( key, _.omit( this.get( key ), model.id ) );\n    },\n    toString : function(){\n        return 'HistoryPrefs(' + this.id + ')';\n    }\n});\n// class lvl for access w/o instantiation\nHistoryPrefs.storageKeyPrefix = 'history:';\n\n/** key string to store each histories settings under */\nHistoryPrefs.historyStorageKey = function historyStorageKey( historyId ){\n    if( !historyId ){\n        throw new Error( 'HistoryPrefs.historyStorageKey needs valid id: ' + historyId );\n    }\n    // single point of change\n    return ( HistoryPrefs.storageKeyPrefix + historyId );\n};\n/** return the existing storage for the history with the given id (or create one if it doesn't exist) */\nHistoryPrefs.get = function get( historyId ){\n    return new HistoryPrefs({ id: HistoryPrefs.historyStorageKey( historyId ) });\n};\n/** clear all history related items in sessionStorage */\nHistoryPrefs.clearAll = function clearAll( historyId ){\n    for( var key in sessionStorage ){\n        if( key.indexOf( HistoryPrefs.storageKeyPrefix ) === 0 ){\n            sessionStorage.removeItem( key );\n        }\n    }\n};\n\n\n/* =============================================================================\nTODO:\n\n============================================================================= */\n/** @class  non-editable, read-only View/Controller for a history model.\n *  Allows:\n *      changing the loaded history\n *      displaying data, info, and download\n *      tracking history attrs: size, tags, annotations, name, etc.\n *  Does not allow:\n *      changing the name\n */\nvar _super = LIST_PANEL.ModelListPanel;\nvar HistoryPanel = _super.extend(\n/** @lends HistoryPanel.prototype */{\n    _logNamespace : logNamespace,\n\n    /** class to use for constructing the HDA views */\n    HDAViewClass        : HDA_LI.HDAListItemView,\n    /** class to use for constructing the HDCA views */\n    HDCAViewClass       : HDCA_LI.HDCAListItemView,\n    /** class to used for constructing collection of sub-view models */\n    collectionClass     : HISTORY_CONTENTS.HistoryContents,\n    /** key of attribute in model to assign to this.collection */\n    modelCollectionKey  : 'contents',\n\n    tagName             : 'div',\n    className           : _super.prototype.className + ' history-panel',\n\n    /** string to display when the collection is empty */\n    emptyMsg            : _l( 'This history is empty' ),\n    /** displayed when no items match the search terms */\n    noneFoundMsg        : _l( 'No matching datasets found' ),\n    /** string used for search placeholder */\n    searchPlaceholder   : _l( 'search datasets' ),\n\n    // ......................................................................... SET UP\n    /** Set up the view, bind listeners.\n     *  @param {Object} attributes optional settings for the panel\n     */\n    initialize : function( attributes ){\n        _super.prototype.initialize.call( this, attributes );\n        // ---- instance vars\n        // control contents/behavior based on where (and in what context) the panel is being used\n        /** where should pages from links be displayed? (default to new tab/window) */\n        this.linkTarget = attributes.linkTarget || '_blank';\n    },\n\n    /** In this override, clear the update timer on the model */\n    freeModel : function(){\n        _super.prototype.freeModel.call( this );\n//TODO: move to History.free()\n        if( this.model ){\n            this.model.clearUpdateTimeout();\n        }\n        return this;\n    },\n\n    /** create any event listeners for the panel\n     *  @fires: rendered:initial    on the first render\n     *  @fires: empty-history       when switching to a history with no contents or creating a new history\n     */\n    _setUpListeners : function(){\n        _super.prototype._setUpListeners.call( this );\n        this.on({\n            error : function( model, xhr, options, msg, details ){\n                this.errorHandler( model, xhr, options, msg, details );\n            },\n            'loading-done' : function(){\n                //TODO:?? if( this.collection.length ){\n                if( !this.views.length ){\n                    this.trigger( 'empty-history', this );\n                }\n            },\n            'views:ready view:attached view:removed' : function( view ){\n                this._renderSelectButton();\n            }\n        });\n        // this.on( 'all', function(){ console.debug( arguments ); });\n    },\n\n    // ------------------------------------------------------------------------ loading history/hda models\n    //NOTE: all the following fns replace the existing history model with a new model\n    // (in the following 'details' refers to the full set of contents api data (urls, display_apps, misc_info, etc.)\n    //  - contents w/o details will have summary data only (name, hid, deleted, visible, state, etc.))\n//TODO: too tangled...\n\n    /** loads a history & contents, getting details of any contents whose ids are stored in sessionStorage\n     *      (but does not make them the current history)\n     */\n    loadHistoryWithDetails : function( historyId, attributes, historyFn, contentsFn ){\n        this.info( 'loadHistoryWithDetails:', historyId, attributes, historyFn, contentsFn );\n        var detailIdsFn = function( historyData ){\n                // will be called to get content ids that need details from the api\n//TODO:! non-visible contents are getting details loaded... either stop loading them at all or filter ids thru isVisible\n                return _.values( HistoryPrefs.get( historyData.id ).get( 'expandedIds' ) );\n            };\n        return this.loadHistory( historyId, attributes, historyFn, contentsFn, detailIdsFn );\n    },\n\n    /** loads a history & contents (but does not make them the current history) */\n    loadHistory : function( historyId, attributes, historyFn, contentsFn, detailIdsFn ){\n        this.info( 'loadHistory:', historyId, attributes, historyFn, contentsFn, detailIdsFn );\n        var panel = this;\n        attributes = attributes || {};\n\n        panel.trigger( 'loading', panel );\n        //this.info( 'loadHistory:', historyId, attributes, historyFn, contentsFn, detailIdsFn );\n        var xhr = HISTORY_MODEL.History.getHistoryData( historyId, {\n                historyFn       : historyFn,\n                contentsFn      : contentsFn,\n                detailIdsFn     : attributes.initiallyExpanded || detailIdsFn\n            });\n\n        return panel._loadHistoryFromXHR( xhr, attributes )\n            .fail( function( xhr, where, history ){\n                // throw an error up for the error handler\n                panel.trigger( 'error', panel, xhr, attributes, _l( 'An error was encountered while ' + where ),\n                    { historyId: historyId, history: history || {} });\n            })\n            .always( function(){\n                // bc _hideLoadingIndicator relies on this firing\n                panel.trigger( 'loading-done', panel );\n            });\n    },\n\n    /** given an xhr that will provide both history and contents data, pass data to set model or handle xhr errors */\n    _loadHistoryFromXHR : function( xhr, attributes ){\n        var panel = this;\n        xhr.then( function( historyJSON, contentsJSON ){\n            panel.JSONToModel( historyJSON, contentsJSON, attributes );\n            panel.render();\n        });\n        xhr.fail( function( xhr, where ){\n            // render anyways - whether we get a model or not\n            panel.render();\n        });\n        return xhr;\n    },\n\n    /** convenience alias to the model. Updates the item list only (not the history) */\n    refreshContents : function( detailIds, options ){\n        if( this.model ){\n            return this.model.refresh( detailIds, options );\n        }\n        // may have callbacks - so return an empty promise\n        return $.when();\n    },\n\n//TODO:?? seems unneccesary\n//TODO: Maybe better in History?\n    /** create a new history model from JSON and call setModel on it */\n    JSONToModel : function( newHistoryJSON, newHdaJSON, attributes ){\n        this.log( 'JSONToModel:', newHistoryJSON, newHdaJSON, attributes );\n        attributes = attributes || {};\n        //this.log( 'JSONToModel:', newHistoryJSON, newHdaJSON.length, attributes );\n\n        var model = new HISTORY_MODEL.History( newHistoryJSON, newHdaJSON, attributes );\n//TODO:?? here?\n        this.setModel( model );\n        return model;\n    },\n\n    /** release/free/shutdown old models and set up panel for new models\n     *  @fires new-model with the panel as parameter\n     */\n    setModel : function( model, attributes ){\n        attributes = attributes || {};\n        _super.prototype.setModel.call( this, model, attributes );\n        if( this.model ){\n            this._setUpWebStorage( attributes.initiallyExpanded, attributes.show_deleted, attributes.show_hidden );\n        }\n    },\n\n    // ------------------------------------------------------------------------ browser stored prefs\n    /** Set up client side storage. Currently PersistanStorage keyed under 'HistoryPanel.<id>'\n     *  @param {Object} initiallyExpanded\n     *  @param {Boolean} show_deleted whether to show deleted contents (overrides stored)\n     *  @param {Boolean} show_hidden\n     *  @see PersistentStorage\n     */\n    _setUpWebStorage : function( initiallyExpanded, show_deleted, show_hidden ){\n        //if( !this.model ){ return this; }\n        //this.log( '_setUpWebStorage', initiallyExpanded, show_deleted, show_hidden );\n        if( this.storage ){\n            this.stopListening( this.storage );\n        }\n\n        this.storage = new HistoryPrefs({\n            id: HistoryPrefs.historyStorageKey( this.model.get( 'id' ) )\n        });\n\n        // expandedIds is a map of content.ids -> a boolean repr'ing whether that item's body is already expanded\n        // store any pre-expanded ids passed in\n        if( _.isObject( initiallyExpanded ) ){\n            this.storage.set( 'expandedIds', initiallyExpanded );\n        }\n\n        // get the show_deleted/hidden settings giving priority to values passed in, using web storage otherwise\n        // if the page has specifically requested show_deleted/hidden, these will be either true or false\n        //  (as opposed to undefined, null) - and we give priority to that setting\n        if( _.isBoolean( show_deleted ) ){\n            this.storage.set( 'show_deleted', show_deleted );\n        }\n        if( _.isBoolean( show_hidden ) ){\n            this.storage.set( 'show_hidden', show_hidden );\n        }\n\n        this.trigger( 'new-storage', this.storage, this );\n        this.log( this + ' (init\\'d) storage:', this.storage.get() );\n\n        this.listenTo( this.storage, {\n            'change:show_deleted' : function( view, newVal ){\n                this.showDeleted = newVal;\n            },\n            'change:show_hidden' : function( view, newVal ){\n                this.showHidden = newVal;\n            }\n        }, this );\n        this.showDeleted = ( show_deleted !== undefined )? show_deleted : this.storage.get( 'show_deleted' );\n        this.showHidden  = ( show_hidden  !== undefined )? show_hidden  : this.storage.get( 'show_hidden' );\n\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ panel rendering\n    /** In this override, add a btn to toggle the selectors */\n    _buildNewRender : function(){\n        var $newRender = _super.prototype._buildNewRender.call( this );\n        this._renderSelectButton( $newRender );\n        return $newRender;\n    },\n\n    /** button for starting select mode */\n    _renderSelectButton : function( $where ){\n        $where = $where || this.$el;\n        // do not render selector option if no actions\n        if( !this.multiselectActions().length ){\n            return null;\n        }\n        // do not render (and remove even) if nothing to select\n        if( !this.views.length ){\n            this.hideSelectors();\n            $where.find( '.controls .actions .show-selectors-btn' ).remove();\n            return null;\n        }\n        // don't bother rendering if there's one already\n        var $existing = $where.find( '.controls .actions .show-selectors-btn' );\n        if( $existing.size() ){\n            return $existing;\n        }\n\n        return faIconButton({\n            title   : _l( 'Operations on multiple datasets' ),\n            classes : 'show-selectors-btn',\n            faIcon  : 'fa-check-square-o'\n        }).prependTo( $where.find( '.controls .actions' ) );\n    },\n\n    // ------------------------------------------------------------------------ sub-views\n    /** In this override, since history contents are mixed,\n     *      get the appropo view class based on history_content_type\n     */\n    _getItemViewClass : function( model ){\n        var contentType = model.get( \"history_content_type\" );\n        switch( contentType ){\n            case 'dataset':\n                return this.HDAViewClass;\n            case 'dataset_collection':\n                return this.HDCAViewClass;\n        }\n        throw new TypeError( 'Unknown history_content_type: ' + contentType );\n    },\n\n    /** in this override, check if the contents would also display based on show_deleted/hidden */\n    _filterItem : function( model ){\n        var panel = this;\n        return ( _super.prototype._filterItem.call( panel, model )\n            && ( !model.hidden() || panel.showHidden )\n            && ( !model.isDeletedOrPurged() || panel.showDeleted ) );\n    },\n\n    /** in this override, add a linktarget, and expand if id is in web storage */\n    _getItemViewOptions : function( model ){\n        var options = _super.prototype._getItemViewOptions.call( this, model );\n        return _.extend( options, {\n            linkTarget      : this.linkTarget,\n            expanded        : !!this.storage.get( 'expandedIds' )[ model.id ],\n            hasUser         : this.model.ownedByCurrUser()\n        });\n    },\n\n    /** In this override, add/remove expanded/collapsed model ids to/from web storage */\n    _setUpItemViewListeners : function( view ){\n        var panel = this;\n        _super.prototype._setUpItemViewListeners.call( panel, view );\n\n        //TODO:?? could use 'view:expanded' here?\n        // maintain a list of items whose bodies are expanded\n        view.on( 'expanded', function( v ){\n            panel.storage.addExpanded( v.model );\n        });\n        view.on( 'collapsed', function( v ){\n            panel.storage.removeExpanded( v.model );\n        });\n        return this;\n    },\n\n    // ------------------------------------------------------------------------ selection\n    /** Override to correctly set the historyId of the new collection */\n    getSelectedModels : function(){\n        var collection = _super.prototype.getSelectedModels.call( this );\n        collection.historyId = this.collection.historyId;\n        return collection;\n    },\n\n    // ------------------------------------------------------------------------ panel events\n    /** event map */\n    events : _.extend( _.clone( _super.prototype.events ), {\n        // toggle list item selectors\n        'click .show-selectors-btn'         : 'toggleSelectors',\n        // allow (error) messages to be clicked away\n        'click .messages [class$=message]'  : 'clearMessages'\n    }),\n\n    /** Handle the user toggling the deleted visibility by:\n     *      (1) storing the new value in the persistent storage\n     *      (2) re-rendering the history\n     * @returns {Boolean} new show_deleted setting\n     */\n    toggleShowDeleted : function( show, store ){\n        show = ( show !== undefined )?( show ):( !this.showDeleted );\n        store = ( store !== undefined )?( store ):( true );\n        this.showDeleted = show;\n        if( store ){\n            this.storage.set( 'show_deleted', show );\n        }\n        //TODO:?? to events on storage('change:show_deleted')\n        this.renderItems();\n        this.trigger( 'show-deleted', show );\n        return this.showDeleted;\n    },\n\n    /** Handle the user toggling the hidden visibility by:\n     *      (1) storing the new value in the persistent storage\n     *      (2) re-rendering the history\n     * @returns {Boolean} new show_hidden setting\n     */\n    toggleShowHidden : function( show, store ){\n        show = ( show !== undefined )?( show ):( !this.showHidden );\n        store = ( store !== undefined )?( store ):( true );\n        this.showHidden = show;\n        if( store ){\n            this.storage.set( 'show_hidden', show );\n        }\n        //TODO:?? to events on storage('change:show_deleted')\n        this.renderItems();\n        this.trigger( 'show-hidden', show );\n        return this.showHidden;\n    },\n\n    /** On the first search, if there are no details - load them, then search */\n    _firstSearch : function( searchFor ){\n        var panel = this,\n            inputSelector = '.history-search-input';\n        this.log( 'onFirstSearch', searchFor );\n\n        if( panel.model.contents.haveDetails() ){\n            panel.searchItems( searchFor );\n            return;\n        }\n\n        panel.$el.find( inputSelector ).searchInput( 'toggle-loading' );\n        panel.model.contents.fetchAllDetails({ silent: true })\n            .always( function(){\n                panel.$el.find( inputSelector ).searchInput( 'toggle-loading' );\n            })\n            .done( function(){\n                panel.searchItems( panel.searchFor );\n            });\n    },\n\n//TODO: break this out\n    // ........................................................................ error handling\n    /** Event handler for errors (from the panel, the history, or the history's contents)\n     *  @param {Model or View} model    the (Backbone) source of the error\n     *  @param {XMLHTTPRequest} xhr     any ajax obj. assoc. with the error\n     *  @param {Object} options         the options map commonly used with bbone ajax\n     *  @param {String} msg             optional message passed to ease error location\n     *  @param {Object} msg             optional object containing error details\n     */\n    errorHandler : function( model, xhr, options, msg, details ){\n        this.error( model, xhr, options, msg, details );\n\n        // interrupted ajax\n        if( xhr && xhr.status === 0 && xhr.readyState === 0 ){\n            //TODO: gmail style 'retrying in Ns'\n\n        // bad gateway\n        } else if( xhr && xhr.status === 502 ){\n            //TODO: gmail style 'retrying in Ns'\n\n        // otherwise, show an error message inside the panel\n        } else {\n            // if sentry is available, attempt to get the event id\n            var parsed = this._parseErrorMessage( model, xhr, options, msg, details );\n            // it's possible to have a triggered error before the message container is rendered - wait for it to show\n            if( !this.$messages().is( ':visible' ) ){\n                this.once( 'rendered', function(){\n                    this.displayMessage( 'error', parsed.message, parsed.details );\n                });\n            } else {\n                this.displayMessage( 'error', parsed.message, parsed.details );\n            }\n        }\n    },\n\n    /** Parse an error event into an Object usable by displayMessage based on the parameters\n     *      note: see errorHandler for more info on params\n     */\n    _parseErrorMessage : function( model, xhr, options, msg, details, sentryId ){\n        //if( xhr.responseText ){\n        //    xhr.responseText = _.escape( xhr.responseText );\n        //}\n        var user = Galaxy.currUser,\n            // add the args (w/ some extra info) into an obj\n            parsed = {\n                message : this._bePolite( msg ),\n                details : {\n                    message : msg,\n                    raven   : ( window.Raven && _.isFunction( Raven.lastEventId) )?\n                                    ( Raven.lastEventId() ):( undefined ),\n                    agent   : navigator.userAgent,\n                    // add ajax data from Galaxy object cache\n                    url     : ( window.Galaxy )?( Galaxy.lastAjax.url ):( undefined ),\n                    data    : ( window.Galaxy )?( Galaxy.lastAjax.data ):( undefined ),\n                    options : ( xhr )?( _.omit( options, 'xhr' ) ):( options ),\n                    xhr     : xhr,\n                    source  : ( _.isFunction( model.toJSON ) )?( model.toJSON() ):( model + '' ),\n                    user    : ( user instanceof USER.User )?( user.toJSON() ):( user + '' )\n                }\n            };\n\n        // add any extra details passed in\n        _.extend( parsed.details, details || {} );\n        // fancy xhr.header parsing (--> obj)\n        if( xhr &&  _.isFunction( xhr.getAllResponseHeaders ) ){\n            var responseHeaders = xhr.getAllResponseHeaders();\n            responseHeaders = _.compact( responseHeaders.split( '\\n' ) );\n            responseHeaders = _.map( responseHeaders, function( header ){\n                return header.split( ': ' );\n            });\n            parsed.details.xhr.responseHeaders = _.object( responseHeaders );\n        }\n        return parsed;\n    },\n\n    /** Modify an error message to be fancy and wear a monocle. */\n    _bePolite : function( msg ){\n        msg = msg || _l( 'An error occurred while getting updates from the server' );\n        return msg + '. ' + _l( 'Please contact a Galaxy administrator if the problem persists' ) + '.';\n    },\n\n    // ........................................................................ (error) messages\n    /** Display a message in the top of the panel.\n     *  @param {String} type    type of message ('done', 'error', 'warning')\n     *  @param {String} msg     the message to display\n     *  @param {Object or HTML} modal contents displayed when the user clicks 'details' in the message\n     */\n    displayMessage : function( type, msg, details ){\n        //precondition: msgContainer must have been rendered even if there's no model\n        var panel = this;\n        //this.log( 'displayMessage', type, msg, details );\n\n        this.scrollToTop();\n        var $msgContainer = this.$messages(),\n            $msg = $( '<div/>' ).addClass( type + 'message' ).html( msg );\n        //this.log( '  ', $msgContainer );\n\n        if( !_.isEmpty( details ) ){\n            var $detailsLink = $( '<a href=\"javascript:void(0)\">Details</a>' )\n                .click( function(){\n                    Galaxy.modal.show( panel._messageToModalOptions( type, msg, details ) );\n                    return false;\n                });\n            $msg.append( ' ', $detailsLink );\n        }\n        return $msgContainer.append( $msg );\n    },\n\n    /** convert msg and details into modal options usable by Galaxy.modal */\n    _messageToModalOptions : function( type, msg, details ){\n        // only error is fleshed out here\n        var panel = this,\n            options = { title: 'Details' };\n        if( _.isObject( details ) ){\n\n            details = _.omit( details, _.functions( details ) );\n            var text = JSON.stringify( details, null, '  ' ),\n                pre = $( '<pre/>' ).text( text );\n            options.body = $( '<div/>' ).append( pre );\n\n        } else {\n            options.body = $( '<div/>' ).html( details );\n        }\n\n        options.buttons = {\n            'Ok': function(){\n                Galaxy.modal.hide();\n                panel.clearMessages();\n            }\n            //TODO: if( type === 'error' ){ options.buttons[ 'Report this error' ] = function(){} }\n        };\n        return options;\n    },\n\n    /** Remove all messages from the panel. */\n    clearMessages : function( ev ){\n        var $target = !_.isUndefined( ev )?\n            $( ev.currentTarget )\n            :this.$messages().children( '[class$=\"message\"]' );\n        $target.fadeOut( this.fxSpeed, function(){\n            $( this ).remove();\n        });\n        return this;\n    },\n\n    // ........................................................................ scrolling\n    /** Scrolls the panel to show the content sub-view with the given hid.\n     *  @param {Integer} hid    the hid of item to scroll into view\n     *  @returns {HistoryPanel} the panel\n     */\n    scrollToHid : function( hid ){\n        return this.scrollToItem( _.first( this.viewsWhereModel({ hid: hid }) ) );\n    },\n\n    // ........................................................................ misc\n    /** Return a string rep of the history */\n    toString : function(){\n        return 'HistoryPanel(' + (( this.model )?( this.model.get( 'name' )):( '' )) + ')';\n    }\n});\n\n\n//------------------------------------------------------------------------------ TEMPLATES\nHistoryPanel.prototype.templates = (function(){\n\n    var controlsTemplate = BASE_MVC.wrapTemplate([\n        '<div class=\"controls\">',\n            '<div class=\"title\">',\n                '<div class=\"name\"><%= history.name %></div>',\n            '</div>',\n            '<div class=\"subtitle\"></div>',\n            '<div class=\"history-size\"><%= history.nice_size %></div>',\n\n            '<div class=\"actions\"></div>',\n\n            '<div class=\"messages\">',\n                '<% if( history.deleted && history.purged ){ %>',\n                    '<div class=\"deleted-msg warningmessagesmall\">',\n                        _l( 'This history has been purged and deleted' ),\n                    '</div>',\n                '<% } else if( history.deleted ){ %>',\n                    '<div class=\"deleted-msg warningmessagesmall\">',\n                        _l( 'This history has been deleted' ),\n                    '</div>',\n                '<% } else if( history.purged ){ %>',\n                    '<div class=\"deleted-msg warningmessagesmall\">',\n                        _l( 'This history has been purged' ),\n                    '</div>',\n                '<% } %>',\n\n                '<% if( history.message ){ %>',\n                    // should already be localized\n                    '<div class=\"<%= history.message.level || \"info\" %>messagesmall\">',\n                        '<%= history.message.text %>',\n                    '</div>',\n                '<% } %>',\n            '</div>',\n\n            // add tags and annotations\n            '<div class=\"tags-display\"></div>',\n            '<div class=\"annotation-display\"></div>',\n\n            '<div class=\"search\">',\n                '<div class=\"search-input\"></div>',\n            '</div>',\n\n            '<div class=\"list-actions\">',\n                '<div class=\"btn-group\">',\n                    '<button class=\"select-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'All' ), '</button>',\n                    '<button class=\"deselect-all btn btn-default\"',\n                            'data-mode=\"select\">', _l( 'None' ), '</button>',\n                '</div>',\n                '<div class=\"list-action-menu btn-group\">',\n                '</div>',\n            '</div>',\n        '</div>'\n    ], 'history' );\n\n    return _.extend( _.clone( _super.prototype.templates ), {\n        controls : controlsTemplate\n    });\n}());\n\n\n//==============================================================================\n    return {\n        HistoryPanel: HistoryPanel\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/history-panel.js\n ** module id = 97\n ** module chunks = 2\n **/","define([\n    \"mvc/ui/popup-menu\",\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( PopupMenu, BASE_MVC, _l ){\n// ============================================================================\nvar menu = [\n    {\n        html    : _l( 'History Lists' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Saved Histories' ),\n        href    : 'history/list'\n    },\n    {\n        html    : _l( 'Histories Shared with Me' ),\n        href    : 'history/list_shared'\n    },\n\n    {\n        html    : _l( 'Current History' ),\n        header  : true,\n        anon    : true\n    },\n    {\n        html    : _l( 'Create New' ),\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel ){\n                Galaxy.currHistoryPanel.createNewHistory();\n            }\n        }\n    },\n    {\n        html    : _l( 'Copy History' ),\n        href    : 'history/copy'\n    },\n    {\n        html    : _l( 'Copy Datasets' ),\n        href    : 'dataset/copy_datasets'\n    },\n    {\n        html    : _l( 'Share or Publish' ),\n        href    : 'history/sharing'\n    },\n    {\n        html    : _l( 'Extract Workflow' ),\n        href    : 'workflow/build_from_current_history'\n    },\n    {\n        html    : _l( 'Dataset Security' ),\n        href    : 'root/history_set_default_permissions'\n    },\n    {\n        html    : _l( 'Resume Paused Jobs' ),\n        href    : 'history/resume_paused_jobs?current=True',\n        anon    : true\n    },\n    {\n        html    : _l( 'Collapse Expanded Datasets' ),\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel ){\n                Galaxy.currHistoryPanel.collapseAll();\n            }\n        }\n    },\n    {\n        html    : _l( 'Unhide Hidden Datasets' ),\n        anon    : true,\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really unhide all hidden datasets?' ) ) ){\n                var filtered = Galaxy.currHistoryPanel.model.contents.hidden();\n                //TODO: batch\n                filtered.ajaxQueue( Backbone.Model.prototype.save, { visible : true })\n                    .done( function(){\n                        Galaxy.currHistoryPanel.renderItems();\n                    })\n                    .fail( function(){\n                        alert( 'There was an error unhiding the datasets' );\n                        console.error( arguments );\n                    });\n            }\n        }\n    },\n    {\n        html    : _l( 'Delete Hidden Datasets' ),\n        anon    : true,\n        func    : function() {\n            if( Galaxy && Galaxy.currHistoryPanel && confirm( _l( 'Really delete all hidden datasets?' ) ) ){\n                var filtered = Galaxy.currHistoryPanel.model.contents.hidden();\n                //TODO: batch\n                // both delete *and* unhide them\n                filtered.ajaxQueue( Backbone.Model.prototype.save, { deleted : true, visible: true })\n                    .done( function(){\n                        Galaxy.currHistoryPanel.renderItems();\n                    })\n                    .fail( function(){\n                        alert( 'There was an error deleting the datasets' );\n                        console.error( arguments );\n                    });\n            }\n        }\n    },\n    {\n        html    : _l( 'Purge Deleted Datasets' ),\n        confirm : _l( 'Really delete all deleted datasets permanently? This cannot be undone.' ),\n        href    : 'history/purge_deleted_datasets',\n        purge   : true,\n        anon    : true\n    },\n    {\n        html    : _l( 'Show Structure' ),\n        href    : 'history/display_structured',\n        anon    : true\n    },\n    {\n        html    : _l( 'Export Citations' ),\n        href    : 'history/citations',\n        anon    : true\n    },\n    {\n        html    : _l( 'Export to File' ),\n        href    : 'history/export_archive?preview=True',\n        anon    : true\n    },\n    {\n        html    : _l( 'Delete' ),\n        confirm : _l( 'Really delete the current history?' ),\n        href    : 'history/delete_current'\n    },\n    {\n        html    : _l( 'Delete Permanently' ),\n        confirm : _l( 'Really delete the current history permanently? This cannot be undone.' ),\n        href    : 'history/delete_current?purge=True',\n        purge   : true,\n        anon    : true\n    },\n\n    {\n        html    : _l( 'Other Actions' ),\n        header  : true\n    },\n    {\n        html    : _l( 'Import from File' ),\n        href    : 'history/import_archive'\n    }\n];\n\nfunction buildMenu( isAnon, purgeAllowed, urlRoot ){\n    return _.clone( menu ).filter( function( menuOption ){\n        if( isAnon && !menuOption.anon ){\n            return false;\n        }\n        if( !purgeAllowed && menuOption.purge ){\n            return false;\n        }\n\n        //TODO:?? hard-coded galaxy_main\n        if( menuOption.href ){\n            menuOption.href = urlRoot + menuOption.href;\n            menuOption.target = 'galaxy_main';\n        }\n        if( menuOption.confirm ){\n            menuOption.func = function(){\n                if( confirm( menuOption.confirm ) ){\n                    galaxy_main.location = menuOption.href;\n                }\n            };\n        }\n        return true;\n    });\n}\n\nvar create = function( $button, options ){\n    options = options || {};\n    var isAnon = options.anonymous === undefined? true : options.anonymous,\n        purgeAllowed = options.purgeAllowed || false,\n        root = options.root || ( ( Galaxy && Galaxy.options )? Galaxy.options.root: '/' ),\n        menu = buildMenu( isAnon, purgeAllowed, root );\n    //console.debug( 'menu:', menu );\n    return new PopupMenu( $button, menu );\n};\n\n\n// ============================================================================\n    return create;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/history/options-menu.js\n ** module id = 98\n ** module chunks = 2\n **/","/**\n    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n*/\ndefine(['utils/utils', 'utils/deferred', 'mvc/ui/ui-misc', 'mvc/form/form-view',\n        'mvc/tools/tools-template', 'mvc/citation/citation-model', 'mvc/citation/citation-view'],\n    function(Utils, Deferred, Ui, Form, ToolTemplate, CitationModel, CitationView) {\n\n    // create form view\n    return Backbone.View.extend({\n        // initialize\n        initialize: function(options) {\n            this.options = Utils.merge(options, {});\n            this.setElement('<div/>');\n\n            // create deferred processing queue handler\n            // this handler reduces the number of requests to the api by filtering redundant requests\n            this.deferred = new Deferred();\n\n            // create form\n            if (options.inputs) {\n                this._buildForm(options);\n            } else {\n                var self = this;\n                this.deferred.execute(function(process) {\n                    self._buildModel(process, options, true);\n                });\n            }\n        },\n\n        /** Wait for deferred build processes before removal */\n        remove: function() {\n            var self = this;\n            this.$el.hide();\n            this.deferred.execute(function(){\n                Backbone.View.prototype.remove.call(self);\n                console.debug('tools-form-base::remove() - Destroy view.');\n            });\n        },\n\n        /** Build form */\n        _buildForm: function(options) {\n            // link this\n            var self = this;\n\n            // merge form options\n            this.options = Utils.merge(options, this.options);\n            this.options = Utils.merge({\n                icon            : 'fa-wrench',\n                title           : '<b>' + options.name + '</b> ' + options.description + ' (Galaxy Tool Version ' + options.version + ')',\n                operations      : this._operations(),\n                onchange        : function() {\n                    self.deferred.reset();\n                    self.deferred.execute(function(process) {\n                        self._updateModel(process);\n                    });\n                }\n            }, this.options);\n\n            // allow option customization\n            this.options.customize && this.options.customize( this.options );\n\n            // create form\n            this.form = new Form(this.options);\n\n            // create footer\n            this._footer();\n\n            // create element\n            this.$el.empty();\n            this.$el.append(this.form.$el);\n        },\n\n        /** Builds a new model through api call and recreates the entire form\n        */\n        _buildModel: function(process, options, hide_message) {\n            var self = this;\n            this.options.id = options.id;\n            this.options.version = options.version;\n\n            // build request url\n            var build_url = '';\n            var build_data = {};\n            if ( options.job_id ) {\n                build_url = Galaxy.root + 'api/jobs/' + options.job_id + '/build_for_rerun';\n            } else {\n                build_url = Galaxy.root + 'api/tools/' + options.id + '/build';\n                if ( Galaxy.params && Galaxy.params.tool_id == options.id ) {\n                    build_data = $.extend( {}, Galaxy.params );\n                    options.version && ( build_data[ 'tool_version' ] = options.version );\n                }\n            }\n\n            // get initial model\n            Utils.request({\n                type    : 'GET',\n                url     : build_url,\n                data    : build_data,\n                success : function(new_model) {\n                    self._buildForm(new_model['tool_model'] || new_model);\n                    !hide_message && self.form.message.update({\n                        status      : 'success',\n                        message     : 'Now you are using \\'' + self.options.name + '\\' version ' + self.options.version + '.',\n                        persistent  : false\n                    });\n                    console.debug('tools-form::initialize() - Initial tool model ready.');\n                    console.debug(new_model);\n                    process.resolve();\n\n                },\n                error   : function(response) {\n                    var error_message = ( response && response.err_msg ) || 'Uncaught error.';\n                    if ( self.$el.is(':empty') ) {\n                        self.$el.prepend((new Ui.Message({\n                            message     : error_message,\n                            status      : 'danger',\n                            persistent  : true,\n                            large       : true\n                        })).$el);\n                    } else {\n                        Galaxy.modal.show({\n                            title   : 'Tool request failed',\n                            body    : error_message,\n                            buttons : {\n                                'Close' : function() {\n                                    Galaxy.modal.hide();\n                                }\n                            }\n                        });\n                    }\n                    console.debug('tools-form::initialize() - Initial tool model request failed.');\n                    console.debug(response);\n                    process.reject();\n                }\n            });\n        },\n\n        /** Request a new model for an already created tool form and updates the form inputs\n        */\n        _updateModel: function(process) {\n            // model url for request\n            var model_url = this.options.update_url || Galaxy.root + 'api/tools/' + this.options.id + '/build';\n\n            // link this\n            var self = this;\n\n            // create the request dictionary\n            var form = this.form;\n\n            // create the request dictionary\n            var current_state = {\n                tool_id         : this.options.id,\n                tool_version    : this.options.version,\n                inputs          : $.extend(true, {}, self.form.data.create())\n            }\n\n            // set wait mode\n            form.wait(true);\n\n            // log tool state\n            console.debug('tools-form-base::_updateModel() - Sending current state (see below).');\n            console.debug(current_state);\n\n            // post job\n            Utils.request({\n                type    : 'POST',\n                url     : model_url,\n                data    : current_state,\n                success : function(new_model) {\n                    self.form.update(new_model['tool_model'] || new_model);\n                    self.options.update && self.options.update(new_model);\n                    form.wait(false);\n                    console.debug('tools-form-base::_updateModel() - Received new model (see below).');\n                    console.debug(new_model);\n                    process.resolve();\n                },\n                error   : function(response) {\n                    console.debug('tools-form-base::_updateModel() - Refresh request failed.');\n                    console.debug(response);\n                    process.reject();\n                }\n            });\n        },\n\n        // create tool operation menu\n        _operations: function() {\n            // link this\n            var self = this;\n            var options = this.options;\n\n            // button for version selection\n            var versions_button = new Ui.ButtonMenu({\n                icon    : 'fa-cubes',\n                title   : (!options.narrow && 'Versions') || null,\n                tooltip : 'Select another tool version'\n            });\n            if (!options.is_workflow && options.versions && options.versions.length > 1) {\n                for (var i in options.versions) {\n                    var version = options.versions[i];\n                    if (version != options.version) {\n                        versions_button.addMenu({\n                            title   : 'Switch to ' + version,\n                            version : version,\n                            icon    : 'fa-cube',\n                            onclick : function() {\n                                // here we update the tool version (some tools encode the version also in the id)\n                                var id = options.id.replace(options.version, this.version);\n                                var version = this.version;\n                                // queue model request\n                                self.deferred.reset();\n                                self.deferred.execute(function(process) {\n                                    self._buildModel(process, {id: id, version: version})\n                                });\n                            }\n                        });\n                    }\n                }\n            } else {\n                versions_button.$el.hide();\n            }\n\n            // button menu\n            var menu_button = new Ui.ButtonMenu({\n                icon    : 'fa-caret-down',\n                title   : (!options.narrow && 'Options') || null,\n                tooltip : 'View available options'\n            });\n\n            // configure button selection\n            if(options.biostar_url) {\n                // add question option\n                menu_button.addMenu({\n                    icon    : 'fa-question-circle',\n                    title   : 'Question?',\n                    tooltip : 'Ask a question about this tool (Biostar)',\n                    onclick : function() {\n                        window.open(options.biostar_url + '/p/new/post/');\n                    }\n                });\n\n                // create search button\n                menu_button.addMenu({\n                    icon    : 'fa-search',\n                    title   : 'Search',\n                    tooltip : 'Search help for this tool (Biostar)',\n                    onclick : function() {\n                        window.open(options.biostar_url + '/local/search/page/?q=' + options.name);\n                    }\n                });\n            };\n\n            // create share button\n            menu_button.addMenu({\n                icon    : 'fa-share',\n                title   : 'Share',\n                tooltip : 'Share this tool',\n                onclick : function() {\n                    prompt('Copy to clipboard: Ctrl+C, Enter', window.location.origin + Galaxy.root + 'root?tool_id=' + options.id);\n                }\n            });\n\n            // add admin operations\n            if (Galaxy.user && Galaxy.user.get('is_admin')) {\n                // create download button\n                menu_button.addMenu({\n                    icon    : 'fa-download',\n                    title   : 'Download',\n                    tooltip : 'Download this tool',\n                    onclick : function() {\n                        window.location.href = Galaxy.root + 'api/tools/' + options.id + '/download';\n                    }\n                });\n            }\n\n            // button for version selection\n            if (options.requirements && options.requirements.length > 0) {\n                menu_button.addMenu({\n                    icon    : 'fa-info-circle',\n                    title   : 'Requirements',\n                    tooltip : 'Display tool requirements',\n                    onclick : function() {\n                        if (!this.visible) {\n                            this.visible = true;\n                            self.form.message.update({\n                                persistent  : true,\n                                message     : ToolTemplate.requirements(options),\n                                status      : 'info'\n                            });\n                        } else {\n                            this.visible = false;\n                            self.form.message.update({\n                                message     : ''\n                            });\n                        }\n                    }\n                });\n            }\n\n            // add toolshed url\n            if (options.sharable_url) {\n                menu_button.addMenu({\n                    icon    : 'fa-external-link',\n                    title   : 'See in Tool Shed',\n                    tooltip : 'Access the repository',\n                    onclick : function() {\n                        window.open(options.sharable_url);\n                    }\n                });\n            }\n\n            // return operations\n            return {\n                menu        : menu_button,\n                versions    : versions_button\n            }\n        },\n\n        // create footer\n        _footer: function() {\n            // link options\n            var options = this.options;\n\n            // append help\n            if (options.help != '') {\n                this.form.$el.append(ToolTemplate.help(options));\n            }\n\n            // create and append tool citations\n            if (options.citations) {\n                var $citations = $('<div/>');\n                var citations = new CitationModel.ToolCitationCollection();\n                citations.tool_id = options.id;\n                var citation_list_view = new CitationView.CitationListView({ el: $citations, collection: citations } );\n                citation_list_view.render();\n                citations.fetch();\n                this.form.$el.append($citations);\n            }\n        }\n    });\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/tools/tools-form-base.js\n ** module id = 99\n ** module chunks = 2\n **/","/**\n    This class handles job submissions and validations.\n*/\ndefine(['utils/utils', 'mvc/tools/tools-template'], function(Utils, ToolTemplate) {\nreturn {\n    submit: function(form, options, callback) {\n        // link this\n        var self = this;\n\n        // create job definition for submission to tools api\n        var job_def = {\n            tool_id         : options.id,\n            tool_version    : options.version,\n            inputs          : form.data.create()\n        }\n\n        // reset\n        form.trigger('reset');\n\n        // validate job definition\n        if (!this._validation(form, job_def)) {\n            console.debug('tools-jobs::submit - Submission canceled. Validation failed.');\n            callback && callback();\n            return;\n        }\n\n        // debug\n        console.debug(job_def);\n\n        // post job\n        Utils.request({\n            type    : 'POST',\n            url     : galaxy_config.root + 'api/tools',\n            data    : job_def,\n            success : function(response) {\n                callback && callback();\n                form.$el.replaceWith( ToolTemplate.success( response ) );\n                // begin checking the history for updates\n                self._refreshHdas();\n            },\n            error   : function(response) {\n                callback && callback();\n                console.debug(response);\n                if (response && response.err_data) {\n                    var error_messages = form.data.matchResponse(response.err_data);\n                    for (var input_id in error_messages) {\n                        form.highlight(input_id, error_messages[input_id]);\n                        break;\n                    }\n                } else {\n                    form.modal.show({\n                        title   : 'Job submission failed',\n                        body    : ( response && response.err_msg ) || ToolTemplate.error( job_def ),\n                        buttons : {\n                            'Close' : function() {\n                                form.modal.hide();\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    /** Validate job definition\n    */\n    _validation: function(form, job_def) {\n        // get input parameters\n        var job_inputs = job_def.inputs;\n\n        // counter for values declared in batch mode\n        var batch_n = -1;\n        var batch_src = null;\n\n        // validation\n        for (var job_input_id in job_inputs) {\n            // get current value\n            var input_value = job_inputs[job_input_id];\n\n            // collect input field properties\n            var input_id = form.data.match(job_input_id);\n            var input_field = form.field_list[input_id];\n            var input_def = form.input_list[input_id];\n\n            // check if objects where properly identified\n            if (!input_id || !input_def || !input_field) {\n                console.debug('tools-jobs::_validation - Retrieving input objects failed.');\n                continue;\n            }\n\n            // validate non-optional fields\n            if (!input_def.optional && input_value == null) {\n                form.highlight(input_id);\n                return false;\n            }\n\n            // check if input field is in batch mode\n            if (input_value && input_value.batch) {\n                // get values\n                var n = input_value.values.length;\n\n                // get source\n                var src = null;\n                if (n > 0) {\n                    src = input_value.values[0] && input_value.values[0].src;\n                }\n\n                // check source type\n                if (src) {\n                    if (batch_src === null) {\n                        batch_src = src;\n                    } else {\n                        if (batch_src !== src) {\n                            form.highlight(input_id, 'Please select either dataset or dataset list fields for all batch mode fields.');\n                            return false;\n                        }\n                    }\n                }\n\n                // check number of inputs\n                if (batch_n === -1) {\n                    batch_n = n;\n                } else {\n                    if (batch_n !== n) {\n                        form.highlight(input_id, 'Please make sure that you select the same number of inputs for all batch mode fields. This field contains <b>' + n + '</b> selection(s) while a previous field contains <b>' + batch_n + '</b>.');\n                        return false;\n                    }\n                }\n            }\n        }\n\n        // return validation result\n        return true;\n    },\n\n    /** Refreshes the history panel\n    */\n    _refreshHdas: function(detailIds, options) {\n        if (parent.Galaxy && parent.Galaxy.currHistoryPanel) {\n            parent.Galaxy.currHistoryPanel.refreshContents(detailIds, options);\n        }\n    }\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/tools/tools-jobs.js\n ** module id = 100\n ** module chunks = 2\n **/","/** Renders the color picker used e.g. in the tool form **/\ndefine(['utils/utils'], function( Utils ) {\n    return Backbone.View.extend({\n        colors: {\n            standard: ['c00000','ff0000','ffc000','ffff00','92d050','00b050','00b0f0','0070c0','002060','7030a0'],\n            base    : ['ffffff','000000','eeece1','1f497d','4f81bd','c0504d','9bbb59','8064a2','4bacc6','f79646'],\n            theme   :[['f2f2f2','7f7f7f','ddd9c3','c6d9f0','dbe5f1','f2dcdb','ebf1dd','e5e0ec','dbeef3','fdeada'],\n                      ['d8d8d8','595959','c4bd97','8db3e2','b8cce4','e5b9b7','d7e3bc','ccc1d9','b7dde8','fbd5b5'],\n                      ['bfbfbf','3f3f3f','938953','548dd4','95b3d7','d99694','c3d69b','b2a2c7','92cddc','fac08f'],\n                      ['a5a5a5','262626','494429','17365d','366092','953734','76923c','5f497a','31859b','e36c09'],\n                      ['7f7f7e','0c0c0c','1d1b10','0f243e','244061','632423','4f6128','3f3151','205867','974806']]\n        },\n        initialize : function( options ) {\n            this.options = Utils.merge( options, {} );\n            this.setElement( this._template() );\n\n            // link components\n            this.$panel = this.$( '.ui-color-picker-panel' );\n            this.$view = this.$( '.ui-color-picker-view' );\n            this.$value = this.$( '.ui-color-picker-value' );\n            this.$header = this.$( '.ui-color-picker-header' );\n\n            // build panel\n            this._build();\n\n            // hide panel on start up\n            this.visible = false;\n\n            // set initial value\n            this.value( this.options.value );\n\n            // link boxes\n            this.$boxes = this.$( '.ui-color-picker-box' );\n\n            // add event handler\n            var self = this;\n            this.$boxes.on( 'click', function() {\n                self.value( $( this ).css( 'background-color' ) );\n                self.$header.trigger( 'click' );\n            } );\n            this.$header.on( 'click', function() {\n                self.visible = !self.visible;\n                if ( self.visible ) {\n                    self.$view.fadeIn( 'fast' );\n                } else {\n                    self.$view.fadeOut( 'fast' );\n                }\n            } );\n        },\n\n        // value\n        value : function ( new_val ) {\n            if ( new_val !== undefined && new_val !== null ) {\n                // update color value\n                this.$value.css( 'background-color', new_val );\n            \n                // check selected color in panel\n                this.$( '.ui-color-picker-box' ).empty();\n                this.$( this._getValue() ).html( this._templateCheck() );\n\n                // trigger custom event\n                this.options.onchange && this.options.onchange( new_val );\n            }\n\n            // return current value\n            return this._getValue();\n        },\n\n        // get value from dom\n        _getValue: function() {\n            var rgb = this.$value.css( 'background-color' );\n            rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n            if ( rgb ) {\n                function hex( x ) {\n                    return ( '0' + parseInt( x ).toString( 16 ) ).slice( -2 );\n                }\n                return '#' + hex( rgb[ 1] ) + hex( rgb[ 2 ] ) + hex( rgb[ 3 ] );\n            } else {\n                return null;\n            }\n        },\n\n        // build panel\n        _build: function() {\n            var $content = this._content({\n                label       : 'Theme Colors',\n                colors      : this.colors.base,\n                padding     : 10\n            });\n            for ( var i in this.colors.theme ) {\n                var line_def = {};\n                if ( i == 0 ) {\n                    line_def[ 'bottom' ] = true;\n                } else {\n                    if ( i != this.colors.theme.length - 1 ) {\n                        line_def[ 'top' ]     = true;\n                        line_def[ 'bottom' ]  = true;\n                    } else {\n                        line_def[ 'top' ]     = true;\n                        line_def[ 'padding' ] = 5;\n                    }\n                }\n                line_def[ 'colors' ] = this.colors.theme[ i ];\n                this._content( line_def );\n            }\n            this._content({\n                label       : 'Standard Colors',\n                colors      : this.colors.standard,\n                padding     : 5\n            });\n        },\n\n        // create content\n        _content: function( options ) {\n            // get parameters\n            var label       = options.label;\n            var colors      = options.colors;\n            var padding     = options.padding;\n            var top         = options.top;\n            var bottom      = options.bottom;\n\n            // create lines\n            var $content = $( this._templateContent() );\n\n            // set label\n            var $label = $content.find( '.label' );\n            if ( options.label ) {\n                $label.html( options.label );\n            } else {\n                $label.hide();\n            }\n\n            // build line\n            var $line = $content.find( '.line' );\n            this.$panel.append( $content );\n            for ( var i in colors ) {\n                var $box = $( this._templateBox( colors[ i ] ) );\n                if ( top ) {\n                    $box.css( 'border-top', 'none' );\n                    $box.css( 'border-top-left-radius', '0px' );\n                    $box.css( 'border-top-right-radius', '0px' );\n                }\n                if ( bottom ) {\n                    $box.css( 'border-bottom', 'none' );\n                    $box.css( 'border-bottom-left-radius', '0px' );\n                    $box.css( 'border-bottom-right-radius', '0px' );\n                }\n                $line.append( $box );\n            }\n            if (padding) {\n                $line.css( 'padding-bottom', padding );\n            }\n            return $content;\n        },\n\n        // check icon\n        _templateCheck: function() {\n            return  '<div class=\"ui-color-picker-check fa fa-check\"/>';\n        },\n\n        // content template\n        _templateContent: function() {\n            return  '<div class=\"ui-color-picker-content\">' +\n                        '<div class=\"label\"/>' +\n                        '<div class=\"line\"/>' +\n                    '</div>';\n        },\n\n        // box template\n        _templateBox: function( color ) {\n            return '<div id=\"' + color + '\" class=\"ui-color-picker-box\" style=\"background-color: #' + color + ';\"/>';\n        },\n\n        // template\n        _template: function() {\n            return  '<div class=\"ui-color-picker\">' +\n                        '<div class=\"ui-color-picker-header\">' +\n                            '<div class=\"ui-color-picker-value\"/>' +\n                            '<div class=\"ui-color-picker-label\">Select a color</div>' +\n                        '</div>' +\n                        '<div class=\"ui-color-picker-view ui-input\">' +\n                            '<div class=\"ui-color-picker-panel\"/>' +\n                        '</div>'\n                    '</div>';\n        }\n    });\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-color-picker.js\n ** module id = 101\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils', 'mvc/ui/ui-options'], function(Utils, Options) {\n\n/**\n *  This class creates/wraps a drill down element.\n */\nvar View = Options.BaseIcons.extend({\n    // initialize\n    initialize: function(options) {\n        options.type     = options.display || 'checkbox';\n        options.multiple = (options.display == 'checkbox');\n        Options.BaseIcons.prototype.initialize.call(this, options);\n        this.initial = true;\n    },\n\n    // set expand states for initial value\n    value: function (new_val) {\n        var val = Options.BaseIcons.prototype.value.call(this, new_val);\n        if (this.initial && val !== null && this.header_index) {\n            this.initial = false;\n            var values = val;\n            if (!$.isArray(values)) {\n                values = [values];\n            }\n            for (var i in values) {\n                var list = this.header_index[values[i]];\n                for (var j in list) {\n                    this._setState(list[j], true);\n                }\n            }\n        }\n        return val;\n    },\n\n    /** Expand/collapse a sub group\n    */\n    _setState: function (header_id, is_expanded) {\n        var $button = this.$('.button-' + header_id);\n        var $subgroup = this.$('.subgroup-' + header_id);\n        $button.data('is_expanded', is_expanded);\n        if (is_expanded) {\n            $subgroup.fadeIn('fast')\n            $button.removeClass('toggle-expand');\n            $button.addClass('toggle');\n        } else {\n            $subgroup.hide();\n            $button.removeClass('toggle');\n            $button.addClass('toggle-expand');\n        }\n    },\n\n    /** Template to create options tree\n    */\n    _templateOptions: function(options) {\n        // link this\n        var self = this;\n\n        // link data\n        this.header_index = {};\n        \n        // attach event handler\n        function attach($el, header_id) {\n            var $button = $el.find('.button-' + header_id);\n            $button.on('click', function() {\n                self._setState(header_id, !$button.data('is_expanded'));\n            });\n        }\n\n        // recursive function which iterates through options\n        function iterate ($tmpl, options, header) {\n            header = header || [];\n            for (i in options) {\n                // current option level in hierarchy\n                var level = options[i];\n\n                // check for options\n                var has_options = level.options.length > 0;\n\n                // copy current header list\n                var new_header = header.slice(0);\n\n                // keep track of header list\n                self.header_index[level.value] = new_header.slice(0);\n\n                // build template\n                var $group = $('<div/>');\n                if (has_options) {\n                    // create button and subgroup\n                    var header_id = Utils.uid();\n                    var $button = $('<span class=\"button-' + header_id + ' ui-drilldown-button form-toggle icon-button toggle-expand\"/>');\n                    var $subgroup = $('<div class=\"subgroup-' + header_id + '\" style=\"display: none; margin-left: 25px;\"/>');\n\n                    // keep track of button and subgroup\n                    new_header.push(header_id);\n\n                    // create expandable header section\n                    var $buttongroup = $('<div/>');\n                    $buttongroup.append($button);\n                    $buttongroup.append(self._templateOption({\n                        label: level.name,\n                        value: level.value\n                    }));\n                    $group.append($buttongroup);\n                    iterate($subgroup, level.options, new_header);\n                    $group.append($subgroup);\n\n                    // attach expand/collapse events\n                    attach($group, header_id);\n                } else {\n                    // append child options\n                    $group.append(self._templateOption({\n                        label: level.name,\n                        value: level.value\n                    }));\n                }\n                $tmpl.append($group);\n            }\n        }\n\n        // iterate through options and create dom\n        var $tmpl = $('<div/>');\n        iterate($tmpl, options);\n\n        // return template\n        return $tmpl;\n    },\n\n    /** Template for drill down view\n    */\n    _template: function(options) {\n        return '<div class=\"ui-options-list drilldown-container\" id=\"' + options.id + '\"/>';\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-drilldown.js\n ** module id = 102\n ** module chunks = 2\n **/","/**\n *  This class creates/wraps a default html select field as backbone class.\n */\ndefine(['utils/utils', 'mvc/ui/ui-buttons'], function(Utils, Buttons) {\nvar View = Backbone.View.extend({\n    // options\n    optionsDefault: {\n        id          : Utils.uid(),\n        cls         : 'ui-select',\n        error_text  : 'No options available',\n        empty_text  : 'Nothing selected',\n        visible     : true,\n        wait        : false,\n        multiple    : false,\n        searchable  : true,\n        optional    : false\n    },\n\n    // initialize\n    initialize: function(options) {\n        // link this\n        var self = this;\n\n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n\n        // create new element\n        this.setElement(this._template(this.options));\n\n        // link elements\n        this.$select = this.$el.find('.select');\n        this.$icon = this.$el.find('.icon');\n        this.$button = this.$el.find('.button');\n\n        // multiple select fields have an additional button and other custom properties\n        if (this.options.multiple) {\n            // create select all button\n            if (this.options.searchable) {\n                this.all_button = new Buttons.ButtonCheck({\n                    onclick: function() {\n                        var new_value = [];\n                        if (self.all_button.value() !== 0) {\n                            new_value = self._availableOptions();\n                        }\n                        self.value(new_value);\n                        self.trigger('change');\n                    }\n                });\n                this.$el.prepend(this.all_button.$el);\n            }\n            // customize style and content\n            this.$el.addClass('ui-select-multiple');\n            this.$select.prop('multiple', true);\n            this.$button.remove();\n        }\n\n        // update initial options\n        this.update(this.options.data);\n\n        // set initial value\n        if (this.options.value !== undefined) {\n            this.value(this.options.value);\n        }\n\n        // show/hide\n        if (!this.options.visible) {\n            this.hide();\n        }\n\n        // wait\n        if (this.options.wait) {\n            this.wait();\n        } else {\n            this.show();\n        }\n\n        // add change event. fires only on user activity\n        this.$select.on('change', function() {\n            self.trigger('change');\n        });\n\n        // add change event. fires on trigger\n        this.on('change', function() {\n            self.options.onchange && self.options.onchange(this.value());\n        });\n    },\n\n    /** Return/Set current selection\n    */\n    value: function (new_value) {\n        // set new value\n        if (new_value !== undefined) {\n            if (new_value === null) {\n                new_value = '__null__';\n            }\n            if (this.exists(new_value) || this.options.multiple) {\n                this.$select.val(new_value);\n                if (this.$select.select2) {\n                    this.$select.select2('val', new_value);\n                }\n            }\n        }\n        // get current value\n        var current = this._getValue();\n        if (this.all_button) {\n            this.all_button.value($.isArray(current) && current.length || 0, this._size());\n        }\n        return current;\n    },\n\n    /** Return the first select option\n    */\n    first: function() {\n        var options = this.$select.find('option').first();\n        if (options.length > 0) {\n            return options.val();\n        } else {\n            return null;\n        }\n    },\n\n    /** Return the label/text of the current selection\n    */\n    text: function () {\n        return this.$select.find('option:selected').text();\n    },\n\n    /** Show the select field\n    */\n    show: function() {\n        this.unwait();\n        this.$select.show();\n        this.$el.show();\n    },\n\n    /** Hide the select field\n    */\n    hide: function() {\n        this.$el.hide();\n    },\n\n    /** Show a spinner indicating that the select options are currently loaded\n    */\n    wait: function() {\n        this.$icon.removeClass();\n        this.$icon.addClass('fa fa-spinner fa-spin');\n    },\n\n    /** Hide spinner indicating that the request has been completed\n    */\n    unwait: function() {\n        this.$icon.removeClass();\n        this.$icon.addClass('fa fa-caret-down');\n    },\n\n    /** Returns true if the field is disabled\n    */\n    disabled: function() {\n        return this.$select.is(':disabled');\n    },\n\n    /** Enable the select field\n    */\n    enable: function() {\n        this.$select.prop('disabled', false);\n    },\n\n    /** Disable the select field\n    */\n    disable: function() {\n        this.$select.prop('disabled', true);\n    },\n\n    /** Update all available options at once\n    */\n    update: function(options) {\n        // backup current value\n        var current = this._getValue();\n\n        // remove all options\n        this.$select.find('option').remove();\n\n        // add optional field\n        if (!this.options.multiple && this.options.optional) {\n            this.$select.append(this._templateOption({value : '__null__', label : this.options.empty_text}));\n        }\n\n        // add new options\n        for (var key in options) {\n            this.$select.append(this._templateOption(options[key]));\n        }\n\n        // count remaining entries\n        if (this._size() == 0) {\n            // disable select field\n            this.disable();\n\n            // create placeholder\n            this.$select.append(this._templateOption({value : '__null__', label : this.options.error_text}));\n        } else {\n            // enable select field\n            this.enable();\n        }\n\n        // update to searchable field (in this case select2)\n        if (this.options.searchable) {\n            this.$select.select2('destroy');\n            this.$select.select2();\n            this.$( '.select2-container .select2-search input' ).off( 'blur' );\n        }\n\n        // set previous value\n        this.value(current);\n\n        // check if any value was set\n        if (this._getValue() === null && !(this.options.multiple && this.options.optional)) {\n            this.value(this.first());\n        }\n    },\n\n    /** Set the custom onchange callback function\n    */\n    setOnChange: function(callback) {\n        this.options.onchange = callback;\n    },\n\n    /** Check if a value is an existing option\n    */\n    exists: function(value) {\n        return this.$select.find('option[value=\"' + value + '\"]').length > 0;\n    },\n\n    /** Get current value from dom\n    */\n    _getValue: function() {\n        var val = this.$select.val();\n        if (!Utils.validate(val)) {\n            return null;\n        }\n        return val;\n    },\n\n    /** Returns all currently available options\n    */\n    _availableOptions: function() {\n        var available = [];\n        this.$select.find('option').each(function(i, e){\n            available.push($(e).attr('value'));\n        });\n        return available;\n    },\n\n    /** Number of available options\n    */\n    _size: function() {\n        return this.$select.find('option').length;\n    },\n\n    /** Template for select options\n    */\n    _templateOption: function(options) {\n        return '<option value=\"' + options.value + '\">' + options.label + '</option>';\n    },\n\n    /** Template for select view\n    */\n    _template: function(options) {\n        return  '<div id=\"' + options.id + '\" class=\"' + options.cls + '\">' +\n                    '<select id=\"' + options.id + '_select\" class=\"select\"/>' +\n                    '<div class=\"button\">' +\n                        '<i class=\"icon\"/>' +\n                    '</div>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-select-default.js\n ** module id = 103\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils', 'mvc/ui/ui-list'],\n        function(Utils, List) {\n\n/**\n * FTP file selector\n */\nvar View = Backbone.View.extend({\n    // initialize\n    initialize : function(options) {\n        // link this\n        var self = this;\n\n        // create ui-list view to keep track of selected ftp files\n        this.ftpfile_list = new List.View({\n            name        : 'file',\n            optional    : options.optional,\n            multiple    : options.multiple,\n            onchange    : function() {\n                options.onchange && options.onchange(self.value());\n            }\n        });\n\n        // create elements\n        this.setElement(this.ftpfile_list.$el);\n\n        // initial fetch of ftps\n        Utils.get({\n            url     : galaxy_config.root + 'api/remote_files',\n            success : function(response) {\n                var data = [];\n                for (var i in response) {\n                    data.push({\n                        value   : response[i]['path'],\n                        label   : response[i]['path']\n                    });\n                }\n                self.ftpfile_list.update(data);\n            }\n        });\n    },\n\n    /** Return/Set currently selected ftp datasets */\n    value: function(val) {\n        return this.ftpfile_list.value(val);\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-select-ftp.js\n ** module id = 104\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils', 'mvc/ui/ui-misc', 'mvc/ui/ui-table', 'mvc/ui/ui-list'],\n        function(Utils, Ui, Table, List) {\n\n// collection of libraries\nvar Libraries = Backbone.Collection.extend({\n    url: galaxy_config.root + 'api/libraries?deleted=false'\n});\n\n// collection of dataset\nvar LibraryDatasets = Backbone.Collection.extend({\n    initialize: function() {\n        var self = this;\n        this.config = new Backbone.Model({ library_id: null });\n        this.config.on('change', function() {\n            self.fetch({ reset: true });\n        });\n    },\n    url: function() {\n        return galaxy_config.root + 'api/libraries/' + this.config.get('library_id') + '/contents'\n    }\n});\n\n// hda/hdca content selector ui element\nvar View = Backbone.View.extend({\n    // initialize\n    initialize : function(options) {\n        // link this\n        var self = this;\n\n        // collections\n        this.libraries  = new Libraries();\n        this.datasets   = new LibraryDatasets();\n\n        // link app and options\n        this.options = options;\n\n        // select field for the library\n        // TODO: Remove this once the library API supports searching for library datasets\n        this.library_select = new Ui.Select.View({\n            onchange    : function(value) {\n                self.datasets.config.set('library_id', value);\n            }\n        });\n\n        // create ui-list view to keep track of selected data libraries\n        this.dataset_list = new List.View({\n            name        : 'dataset',\n            optional    : options.optional,\n            multiple    : options.multiple,\n            onchange    : function() {\n                self.trigger('change');\n            }\n        });\n\n        // add reset handler for fetched libraries\n        this.libraries.on('reset', function() {\n            var data = [];\n            self.libraries.each(function(model) {\n                data.push({\n                    value   : model.id,\n                    label   : model.get('name')\n                });\n            });\n            self.library_select.update(data);\n        });\n\n        // add reset handler for fetched library datasets\n        this.datasets.on('reset', function() {\n            var data = [];\n            var library_current = self.library_select.text();\n            if (library_current !== null) {\n                self.datasets.each(function(model) {\n                    if (model.get('type') === 'file') {\n                        data.push({\n                            value   : model.id,\n                            label   : model.get('name')\n                        });\n                    }\n                });\n            }\n            self.dataset_list.update(data);\n        });\n\n        // add change event. fires on trigger\n        this.on('change', function() {\n            options.onchange && options.onchange(self.value());\n        });\n\n        // create elements\n        this.setElement(this._template());\n        this.$('.library-select').append(this.library_select.$el);\n        this.$el.append(this.dataset_list.$el);\n\n        // initial fetch of libraries\n        this.libraries.fetch({\n            reset: true,\n            success: function() {\n                self.library_select.trigger('change');\n                if (self.options.value !== undefined) {\n                    self.value(self.options.value);\n                }\n            }\n        });\n    },\n\n    /** Return/Set currently selected library datasets */\n    value: function(val) {\n        return this.dataset_list.value(val);\n    },\n\n    /** Template */\n    _template: function() {\n        return  '<div class=\"ui-select-library\">' +\n                    '<div class=\"library ui-margin-bottom\">' +\n                        '<span class=\"library-title\">Select Library</span>' +\n                        '<span class=\"library-select\"/>' +\n                    '</div>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View: View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-select-library.js\n ** module id = 105\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils'], function(Utils) {\n\n// plugin\nvar View = Backbone.View.extend({\n    // options\n    optionsDefault: {\n        id      : Utils.uid(),\n        min     : null,\n        max     : null,\n        step    : null,\n        precise : false,\n        split   : 10000\n    },\n\n    // initialize\n    initialize : function(options) {\n        // link this\n        var self = this;\n\n        // configure options\n        this.options = Utils.merge(options, this.optionsDefault);\n\n        // create new element\n        this.setElement(this._template(this.options));\n\n        // determine wether to use the slider\n        this.useslider = this.options.max !== null && this.options.min !== null && this.options.max > this.options.min;\n\n        // set default step size\n        if (this.options.step === null) {\n            this.options.step = 1;\n            if (this.options.precise && this.useslider) {\n                this.options.step = (this.options.max - this.options.min) / this.options.split;\n            }\n        }\n\n        // create slider if min and max are defined properly\n        if (this.useslider) {\n            this.$slider = this.$el.find('#slider');\n            this.$slider.slider(this.options);\n            this.$slider.on('slide', function (event, ui) {\n                self.value(ui.value);\n            });\n        } else {\n            this.$el.find('.ui-form-slider-text').css('width', '100%');\n        }\n\n        // link text input field\n        this.$text = this.$el.find('#text');\n\n        // set initial value\n        if (this.options.value !== undefined) {\n            this.value(this.options.value);\n        }\n\n        // add text field event\n        this.$text.on('change', function () {\n            self.value($(this).val());\n        });\n\n        // add text field event\n        var pressed = [];\n        this.$text.on('keyup', function(e) {\n            pressed[e.which] = false;\n            self.options.onchange && self.options.onchange($(this).val());\n        });\n        this.$text.on('keydown', function (e) {\n            var v = e.which;\n            pressed[v] = true;\n            if (!(v == 8 || v == 9 || v == 13 || v == 37 || v == 39 || (v >= 48 && v <= 57) || (v >= 96 && v <= 105)\n                || ((v == 190 || v == 110) && $(this).val().indexOf('.') == -1 && self.options.precise)\n                || ((v == 189 || v == 109) && $(this).val().indexOf('-') == -1)\n                || pressed[91] || pressed[17])) {\n                event.preventDefault();\n            }\n        });\n    },\n\n    // value\n    value : function (new_val) {\n        if (new_val !== undefined) {\n            if (new_val !== null && new_val !== '') {\n                // check if its a number\n                if (isNaN(new_val)) {\n                    new_val = 0;\n                }\n\n                // apply limit\n                if (this.options.max !== null) {\n                    new_val = Math.min(new_val, this.options.max);\n                }\n                if (this.options.min !== null) {\n                    new_val = Math.max(new_val, this.options.min);\n                }\n            }\n\n            // set values\n            this.$slider && this.$slider.slider('value', new_val);\n            this.$text.val(new_val);\n\n            // trigger on change event\n            this.options.onchange && this.options.onchange(new_val);\n        }\n\n        // return current value\n        return this.$text.val();\n    },\n\n    // element\n    _template: function(options) {\n        return  '<div id=\"' + options.id + '\" class=\"ui-form-slider\">' +\n                    '<input id=\"text\" type=\"text\" class=\"ui-form-slider-text\"/>' +\n                    '<div id=\"slider\" class=\"ui-form-slider-element\"/>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View : View\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-slider.js\n ** module id = 106\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils',\n        'mvc/upload/upload-settings',\n        'mvc/upload/upload-ftp',\n        'mvc/ui/ui-popover',\n        'mvc/ui/ui-misc',\n        'mvc/ui/ui-select',\n        'utils/uploadbox'],\n\n        function(   Utils,\n                    UploadSettings,\n                    UploadFtp,\n                    Popover,\n                    Ui,\n                    Select\n                ) {\n\n// renders the composite upload row view\nreturn Backbone.View.extend({\n    // states\n    status_classes : {\n        init    : 'upload-mode fa fa-exclamation text-primary',\n        ready   : 'upload-mode fa fa-check text-success',\n        running : 'upload-mode fa fa-spinner fa-spin',\n        success : 'upload-mode fa fa-check',\n        error   : 'upload-mode fa fa-exclamation-triangle'\n    },\n\n    // initialize\n    initialize: function(app, options) {\n        // link app\n        this.app = app;\n\n        // link this\n        var self = this;\n\n        // create model\n        this.model = options.model;\n\n        // add upload row\n        this.setElement(this._template(options.model));\n\n        // build upload functions\n        this.uploadinput = this.$el.uploadinput({\n            ondragover: function() {\n                if (self.model.get('enabled')) {\n                    self.$el.addClass('warning');\n                }\n            },\n            ondragleave: function() {\n                self.$el.removeClass('warning');\n            },\n            onchange: function(files) {\n                if (self.model.get('status') != 'running' && files && files.length > 0) {\n                    self.model.reset({\n                        'file_data': files[0],\n                        'file_name': files[0].name,\n                        'file_size': files[0].size,\n                        'file_mode': files[0].mode || 'local'\n                    });\n                    self._refreshReady();\n                }\n            }\n        });\n\n        // source selection popup\n        this.button_menu = new Ui.ButtonMenu({\n            icon        : 'fa-caret-down',\n            title       : 'Select',\n            pull        : 'left'\n        });\n        this.$('#source').append(this.button_menu.$el);\n        this.button_menu.addMenu({\n            icon        : 'fa-laptop',\n            title       : 'Choose local file',\n            onclick     : function() {\n                self.uploadinput.dialog();\n            }\n        });\n        if (this.app.ftp_upload_site) {\n            this.button_menu.addMenu({\n                icon        : 'fa-folder-open-o',\n                title       : 'Choose FTP file',\n                onclick     : function() {\n                    self._showFtp();\n                }\n            });\n        }\n        this.button_menu.addMenu({\n            icon        : 'fa-edit',\n            title       : 'Paste/Fetch data',\n            onclick     : function() {\n                self.model.reset({\n                    'file_mode': 'new',\n                    'file_name': 'New File'\n                });\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title       : 'Choose FTP file:',\n            container   : this.$('#source').find('.ui-button-menu'),\n            placement   : 'right'\n        });\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title       : 'Upload configuration',\n            container   : this.$('#settings'),\n            placement   : 'bottom'\n        });\n\n        //\n        // ui events\n        //\n\n        // handle text editing event\n        this.$('#text-content').on('change input', function(e) {\n            self.model.set('url_paste', $(e.target).val());\n            self.model.set('file_size', $(e.target).val().length);\n            self._refreshReady();\n        });\n\n        // handle settings popover\n        this.$('#settings').on('click' , function(e) { self._showSettings(); })\n                           .on('mousedown', function(e) { e.preventDefault(); });\n\n        //\n        // model events\n        //\n        this.model.on('change:percentage', function() {\n            self._refreshPercentage();\n        });\n        this.model.on('change:status', function() {\n            self._refreshStatus();\n        });\n        this.model.on('change:info', function() {\n            self._refreshInfo();\n        });\n        this.model.on('change:file_name', function() {\n            self._refreshFileName();\n        });\n        this.model.on('change:file_mode', function() {\n            self._refreshMode();\n        });\n        this.model.on('change:file_size', function() {\n            self._refreshFileSize();\n        });\n        this.model.on('remove', function() {\n            self.remove();\n        });\n        this.app.collection.on('reset', function() {\n            self.remove();\n        });\n    },\n\n    // render\n    render: function() {\n        this.$('#file_name').html(this.model.get('file_name') || '-');\n        this.$('#file_desc').html(this.model.get('file_desc') || 'Unavailable');\n        this.$('#file_size').html(Utils.bytesToString (this.model.get('file_size')));\n        this.$('#status').removeClass().addClass(this.status_classes.init);\n    },\n\n    // remove\n    remove: function() {\n        // call the base class remove method\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    //\n    // handle model events\n    //\n\n    // refresh ready or not states\n    _refreshReady: function() {\n        this.app.collection.each(function(model) {\n            model.set('status', (model.get('file_size') > 0) && 'ready' || 'init');\n        });\n    },\n\n    // refresh mode and e.g. show/hide textarea field\n    _refreshMode: function() {\n        var file_mode = this.model.get('file_mode');\n        if (file_mode == 'new') {\n            this.height = this.$el.height();\n            this.$('#text').css({\n                'width' : this.$el.width() - 16 + 'px',\n                'top'   : this.$el.height() - 8 + 'px'\n            }).show();\n            this.$el.height(this.$el.height() - 8 + this.$('#text').height() + 16);\n            this.$('#text-content').val('').trigger('keyup');\n        } else {\n            this.$el.height(this.height);\n            this.$('#text').hide();\n        }\n    },\n\n    // information\n    _refreshInfo: function() {\n        var info = this.model.get('info');\n        if (info) {\n            this.$('#info-text').html('<strong>Failed: </strong>' + info).show();\n        } else {\n            this.$('#info-text').hide();\n        }\n    },\n\n    // percentage\n    _refreshPercentage : function() {\n        var percentage = parseInt(this.model.get('percentage'));\n        if (percentage != 0) {\n            this.$('.progress-bar').css({ width : percentage + '%' });\n        } else {\n            this.$('.progress-bar').addClass('no-transition');\n            this.$('.progress-bar').css({ width : '0%' });\n            this.$('.progress-bar')[0].offsetHeight;\n            this.$('.progress-bar').removeClass('no-transition');\n        }\n        if (percentage != 100) {\n            this.$('#percentage').html(percentage + '%');\n        } else {\n            this.$('#percentage').html('Adding to history...');\n        }\n    },\n\n    // status\n    _refreshStatus : function() {\n        // identify new status\n        var status = this.model.get('status');\n\n        // identify symbol and reset classes\n        this.$('#status').removeClass().addClass(this.status_classes[status]);\n\n        // enable/disable model flag\n        this.model.set('enabled', status != 'running');\n\n        // enable/disable row fields\n        this.$('#text-content').attr('disabled', !this.model.get('enabled'));\n\n        // remove status classes\n        this.$el.removeClass('success danger warning');\n\n        // set status classes\n        if (status == 'running' || status == 'ready') {\n            this.model.set('percentage', 0);\n        }\n        if (status == 'running') {\n            this.$('#source').find('.button').addClass('disabled');\n        } else {\n            this.$('#source').find('.button').removeClass('disabled');\n        }\n        if (status == 'success') {\n            this.$el.addClass('success');\n            this.model.set('percentage', 100);\n            this.$('#percentage').html('100%');\n        }\n        if (status == 'error') {\n            this.$el.addClass('danger');\n            this.model.set('percentage', 0);\n            this.$('#info-progress').hide();\n            this.$('#info-text').show();\n        } else {\n            this.$('#info-progress').show();\n            this.$('#info-text').hide();\n        }\n    },\n\n    // file name\n    _refreshFileName: function() {\n        this.$('#file_name').html(this.model.get('file_name') || '-');\n    },\n\n    // file size\n    _refreshFileSize: function() {\n        this.$('#file_size').html(Utils.bytesToString (this.model.get('file_size')));\n    },\n\n    // show/hide ftp popup\n    _showFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append((new UploadFtp({\n                ftp_upload_site: this.app.ftp_upload_site,\n                onchange: function(ftp_file) {\n                    self.ftp.hide();\n                    if (self.model.get('status') != 'running' && ftp_file) {\n                        self.model.reset({\n                            'file_mode': 'ftp',\n                            'file_name': ftp_file.path,\n                            'file_size': ftp_file.size,\n                            'file_path': ftp_file.path\n                        });\n                        self._refreshReady();\n                    }\n                }\n            })).$el);\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    // show/hide settings popup\n    _showSettings : function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append((new UploadSettings(this)).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    // template\n    _template: function(options) {\n        return  '<tr id=\"upload-row-' + options.id + '\" class=\"upload-row\">' +\n                    '<td>' +\n                        '<div id=\"source\"/>' +\n                        '<div class=\"upload-text-column\">' +\n                            '<div id=\"text\" class=\"text\">' +\n                                '<div class=\"text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n                                '<textarea id=\"text-content\" class=\"text-content form-control\"/>' +\n                            '</div>' +\n                        '</div>' +\n                    '</td>' +\n                    '<td>' +\n                        '<div id=\"status\"/>' +\n                    '</td>' +\n                    '<td>' +\n                        '<div id=\"file_desc\" class=\"upload-title\"/>' +\n                    '</td>' +\n                    '<td>' +\n                        '<div id=\"file_name\" class=\"upload-title\"/>' +\n                    '</td>' +\n                    '<td>' +\n                        '<div id=\"file_size\" class=\"upload-size\"/>' +\n                    '</td>' +\n                    '<td><div id=\"settings\" class=\"upload-icon-button fa fa-gear\"/></td>' +\n                    '<td>' +\n                        '<div id=\"info\" class=\"upload-info\">' +\n                            '<div id=\"info-text\"/>' +\n                            '<div id=\"info-progress\" class=\"progress\">' +\n                                '<div class=\"progress-bar progress-bar-success\"/>' +\n                                '<div id=\"percentage\" class=\"percentage\">0%</div>' +\n                            '</div>' +\n                        '</div>' +\n                    '</td>' +\n                '</tr>';\n    }\n});\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/upload/composite/composite-row.js\n ** module id = 107\n ** module chunks = 2\n **/","/** Renders contents of the composite uploader */\ndefine(['utils/utils',\n        'mvc/upload/upload-model',\n        'mvc/upload/composite/composite-row',\n        'mvc/ui/ui-popover',\n        'mvc/ui/ui-select',\n        'mvc/ui/ui-misc'],\n\n        function(   Utils,\n                    UploadModel,\n                    UploadRow,\n                    Popover,\n                    Select,\n                    Ui\n                ) {\n\nreturn Backbone.View.extend({\n    // extension selector\n    select_extension: null,\n\n    // genome selector\n    select_genome: null,\n\n    // collection\n    collection: new UploadModel.Collection(),\n\n    // initialize\n    initialize: function(app) {\n        // link app\n        this.app                = app;\n        this.options            = app.options;\n        this.list_extensions    = app.list_extensions;\n        this.list_genomes       = app.list_genomes;\n        this.ftp_upload_site    = app.currentFtp();\n\n        // link this\n        var self = this;\n\n        // set element\n        this.setElement(this._template());\n\n        // create button section\n        this.btnStart = new Ui.Button({ title: 'Start', onclick: function() { self._eventStart(); } });\n        this.btnClose = new Ui.Button({ title: 'Close', onclick: function() { self.app.modal.hide(); } });\n\n        // append buttons to dom\n        var buttons = [ this.btnStart, this.btnClose ];\n        for (var i in buttons) {\n            this.$('#upload-buttons').prepend(buttons[i].$el);\n        }\n\n        // select extension\n        this.select_extension = new Select.View({\n            css         : 'footer-selection',\n            container   : this.$('#footer-extension'),\n            data        : _.filter(this.list_extensions, function(ext) { return ext.composite_files }),\n            onchange    : function(extension) {\n                self.collection.reset();\n                var details = _.findWhere(self.list_extensions, { id : extension });\n                if (details && details.composite_files) {\n                    for (var i in details.composite_files) {\n                        var item = details.composite_files[i];\n                        self.collection.add({\n                            id          : self.collection.size(),\n                            file_desc   : item['description'] || item['name']\n                        });\n                    }\n                }\n            }\n        });\n\n        // handle extension info popover\n        this.$('#footer-extension-info').on('click', function(e) {\n            self._showExtensionInfo({\n                $el         : $(e.target),\n                title       : self.select_extension.text(),\n                extension   : self.select_extension.value(),\n                placement   : 'top'\n            });\n        }).on('mousedown', function(e) { e.preventDefault(); });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css         : 'footer-selection',\n            container   : this.$('#footer-genome'),\n            data        : this.list_genomes,\n            value       : this.options.default_genome\n        });\n\n        // listener for collection triggers on change in composite datatype\n        this.collection.on('add', function (model) {\n            self._eventAnnounce(model);\n        });\n        this.collection.on('change add', function() {\n            self._updateScreen();\n        }).trigger('change');\n\n        // trigger initial onchange event\n        this.select_extension.options.onchange(this.select_extension.value());\n    },\n\n    //\n    // upload events / process pipeline\n    //\n\n    // builds the basic ui with placeholder rows for each composite data type file\n    _eventAnnounce: function(model) {\n        // create view/model\n        var upload_row = new UploadRow(this, { model : model });\n\n        // add upload row element to table\n        this.$('#upload-table > tbody:first').append(upload_row.$el);\n\n        // render\n        upload_row.render();\n\n        // table visibility\n        if (this.collection.length > 0) {\n            this.$('#upload-table').show();\n        } else {\n            this.$('#upload-table').hide();\n        }\n    },\n\n    // start upload process\n    _eventStart: function() {\n        var self = this;\n        this.collection.each(function(model) {\n            model.set('genome', self.select_genome.value());\n            model.set('extension', self.select_extension.value());\n        });\n        $.uploadpost({\n            url      : this.app.options.nginx_upload_path,\n            data     : this.app.toData(this.collection.filter()),\n            success  : function(message) { self._eventSuccess(message); },\n            error    : function(message) { self._eventError(message); },\n            progress : function(percentage) { self._eventProgress(percentage); }\n        });\n    },\n\n    // progress\n    _eventProgress: function(percentage) {\n        this.collection.each(function(it) { it.set('percentage', percentage); });\n    },\n\n    // success\n    _eventSuccess: function(message) {\n        this.collection.each(function(it) {\n            it.set('status', 'success');\n        });\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    // error\n    _eventError: function(message) {\n        this.collection.each(function(it) {\n            it.set('status', 'error');\n            it.set('info', message);\n        });\n    },\n\n    // display extension info popup\n    _showExtensionInfo: function(options) {\n        // initialize\n        var self = this;\n        var $el = options.$el;\n        var extension = options.extension;\n        var title = options.title;\n        var description = _.findWhere(this.list_extensions, { id : extension });\n\n        // create popup\n        this.extension_popup && this.extension_popup.remove();\n        this.extension_popup = new Popover.View({\n            placement: options.placement || 'bottom',\n            container: $el,\n            destroy: true\n        });\n\n        // add content and show popup\n        this.extension_popup.title(title);\n        this.extension_popup.empty();\n        this.extension_popup.append(this._templateDescription(description));\n        this.extension_popup.show();\n    },\n\n    // set screen\n    _updateScreen: function () {\n        // show start button if components have been selected\n        var model = this.collection.first();\n        if (model && model.get('status') == 'running') {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        } else {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        }\n        if (this.collection.where({ status : 'ready' }).length == this.collection.length && this.collection.length > 0) {\n            this.btnStart.enable();\n            this.btnStart.$el.addClass('btn-primary');\n        } else {\n            this.btnStart.disable();\n            this.btnStart.$el.removeClass('btn-primary');\n        }\n\n        // table visibility\n        if (this.collection.length > 0) {\n            this.$('#upload-table').show();\n        } else {\n            this.$('#upload-table').hide();\n        }\n    },\n\n    // template for extensions description\n    _templateDescription: function(options) {\n        if (options.description) {\n            var tmpl = options.description;\n            if (options.description_url) {\n                tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n            }\n            return tmpl;\n        } else {\n            return 'There is no description available for this file extension.';\n        }\n    },\n\n    // load html template\n    _template: function() {\n        return  '<div class=\"upload-view-composite\">' +\n                    '<div id=\"upload-footer\" class=\"upload-footer\">' +\n                        '<span class=\"footer-title\">Composite Type:</span>' +\n                        '<span id=\"footer-extension\"/>' +\n                        '<span id=\"footer-extension-info\" class=\"upload-icon-button fa fa-search\"/> ' +\n                        '<span class=\"footer-title\">Genome/Build:</span>' +\n                        '<span id=\"footer-genome\"/>' +\n                    '</div>' +\n                    '<div id=\"upload-box\" class=\"upload-box\">' +\n                        '<table id=\"upload-table\" class=\"ui-table-striped\" style=\"display: none;\">' +\n                            '<thead>' +\n                                '<tr>' +\n                                    '<th/>' +\n                                    '<th/>' +\n                                    '<th>Description</th>' +\n                                    '<th>Name</th>' +\n                                    '<th>Size</th>' +\n                                    '<th>Settings</th>' +\n                                    '<th>Status</th>' +\n                                '</tr>' +\n                            '</thead>' +\n                            '<tbody></tbody>' +\n                        '</table>' +\n                    '</div>' +\n                    '<div id=\"upload-buttons\" class=\"upload-buttons\"/>' +\n                '</div>';\n    }\n});\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/upload/composite/composite-view.js\n ** module id = 108\n ** module chunks = 2\n **/","// dependencies\ndefine(['utils/utils',\n        'mvc/upload/upload-model',\n        'mvc/upload/upload-settings',\n        'mvc/ui/ui-popover',\n        'mvc/ui/ui-select'],\n\n        function(   Utils,\n                    UploadModel,\n                    UploadSettings,\n                    Popover,\n                    Select\n                ) {\n\n// row view\nreturn Backbone.View.extend({\n    // states\n    status_classes : {\n        init    : 'upload-icon-button fa fa-trash-o',\n        queued  : 'upload-icon fa fa-spinner fa-spin',\n        running : 'upload-icon fa fa-spinner fa-spin',\n        success : 'upload-icon-button fa fa-check',\n        error   : 'upload-icon-button fa fa-exclamation-triangle'\n    },\n\n    // handle for settings popover\n    settings: null,\n\n    // genome selector\n    select_genome : null,\n\n    // extension selector\n    select_extension : null,\n\n    // render\n    initialize: function(app, options) {\n        // link app\n        this.app = app;\n\n        // link this\n        var self = this;\n\n        // create model\n        this.model = options.model;\n\n        // add upload row\n        this.setElement(this._template(options.model));\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title       : 'Upload configuration',\n            container   : this.$('#settings'),\n            placement   : 'bottom'\n        });\n\n        // initialize default genome through default select field\n        var default_genome = this.app.select_genome.value();\n        \n        // select genomes\n        this.select_genome = new Select.View({\n            css: 'upload-genome',\n            onchange : function(genome) {\n                self.model.set('genome', genome);\n                self.app.updateGenome(genome, true);\n            },\n            data: self.app.list_genomes,\n            container: this.$('#genome'),\n            value: default_genome\n        });\n\n        // initialize genome\n        this.model.set('genome', default_genome);\n\n        // initialize default extension through default select field\n        var default_extension = this.app.select_extension.value();\n        \n        // select extension\n        this.select_extension = new Select.View({\n            css: 'upload-extension',\n            onchange : function(extension) {\n                self.model.set('extension', extension);\n                self.app.updateExtension(extension, true);\n            },\n            data: self.app.list_extensions,\n            container: this.$('#extension'),\n            value: default_extension\n        });\n\n        // initialize extension\n        this.model.set('extension', default_extension);\n        \n        //\n        // ui events\n        //\n\n        // handle click event\n        this.$('#symbol').on('click', function() { self._removeRow(); });\n\n        // handle extension info popover\n        this.$('#extension-info').on('click' , function(e) {\n            self.app.showExtensionInfo({\n                $el         : $(e.target),\n                title       : self.select_extension.text(),\n                extension   : self.select_extension.value()\n            });\n        }).on('mousedown', function(e) { e.preventDefault(); });\n\n        // handle settings popover\n        this.$('#settings').on('click' , function(e) { self._showSettings(); })\n                            .on('mousedown', function(e) { e.preventDefault(); });\n\n        // handle text editing event\n        this.$('#text-content').on('change input', function(e) {\n            self.model.set('url_paste', $(e.target).val());\n            self.model.set('file_size', $(e.target).val().length);\n        });\n\n        //\n        // model events\n        //\n        this.model.on('change:percentage', function() {\n            self._refreshPercentage();\n        });\n        this.model.on('change:status', function() {\n            self._refreshStatus();\n        });\n        this.model.on('change:info', function() {\n            self._refreshInfo();\n        });\n        this.model.on('change:genome', function() {\n            self._refreshGenome();\n        });\n        this.model.on('change:extension', function() {\n            self._refreshExtension();\n        });\n        this.model.on('change:file_size', function() {\n            self._refreshFileSize();\n        });\n        this.model.on('remove', function() {\n            self.remove();\n        });\n        this.app.collection.on('reset', function() {\n            self.remove();\n        });\n    },\n\n    // render\n    render: function() {\n        // read model\n        var file_name   = this.model.get('file_name');\n        var file_size   = this.model.get('file_size');\n        var file_mode   = this.model.get('file_mode');\n\n        // update title\n        this.$('#title').html(file_name);\n\n        // update info\n        this.$('#size').html(Utils.bytesToString (file_size));\n\n        // remove mode class\n        this.$('#mode')\n            .removeClass()\n            .addClass('upload-mode')\n            .addClass('text-primary');\n\n        // activate text field if file is new\n        if (file_mode == 'new') {\n            this.$('#text').css({\n                'width' : this.$el.width() - 16 + 'px',\n                'top'   : this.$el.height() - 8 + 'px'\n            }).show();\n            this.$el.height(this.$el.height() - 8 + this.$('#text').height() + 16);\n            this.$('#mode').addClass('fa fa-edit');\n        }\n\n        // file from local disk\n        if (file_mode == 'local') {\n            this.$('#mode').addClass('fa fa-laptop');\n        }\n\n        // file from ftp\n        if (file_mode == 'ftp') {\n            this.$('#mode').addClass('fa fa-folder-open-o');\n        }\n    },\n\n    // remove\n    remove: function() {\n        // trigger remove event\n        this.select_genome.remove();\n        this.select_extension.remove();\n\n        // call the base class remove method\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    //\n    // handle model events\n    //\n\n    // update extension\n    _refreshExtension: function() {\n        this.select_extension.value(this.model.get('extension'));\n    },\n    \n    // update genome\n    _refreshGenome: function() {\n        this.select_genome.value(this.model.get('genome'));\n    },\n\n    // progress\n    _refreshInfo: function() {\n        // write error message\n        var info = this.model.get('info');\n        if (info) {\n            this.$('#info').html('<strong>Failed: </strong>' + info).show();\n        } else {\n            this.$('#info').hide();\n        }\n    },\n\n    // progress\n    _refreshPercentage : function() {\n        var percentage = parseInt(this.model.get('percentage'));\n        this.$('.progress-bar').css({ width : percentage + '%' });\n        if (percentage != 100)\n            this.$('#percentage').html(percentage + '%');\n        else\n            this.$('#percentage').html('Adding to history...');\n    },\n\n    // status\n    _refreshStatus : function() {\n        // identify new status\n        var status = this.model.get('status');\n\n        // identify symbol and reset classes\n        this.$('#symbol').removeClass().addClass(this.status_classes[status]);\n\n        // enable/disable model flag\n        this.model.set('enabled', status == 'init');\n\n        // enable/disable row fields\n        var enabled = this.model.get('enabled');\n        this.$('#text-content').attr('disabled', !enabled);\n        if (enabled) {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        } else {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        }\n\n        // success\n        if (status == 'success') {\n            this.$el.addClass('success');\n            this.$('#percentage').html('100%');\n        }\n\n        // error\n        if (status == 'error') {\n            this.$el.addClass('danger');\n            this.$('.progress').remove();\n        }\n    },\n\n    // refresh size\n    _refreshFileSize: function() {\n        var count = this.model.get('file_size');\n        this.$('#size').html(Utils.bytesToString (count));\n    },\n\n    //\n    // handle ui events\n    //\n\n    // remove row\n    _removeRow: function() {\n        // get current status\n        var status = this.model.get('status');\n\n        // only remove from queue if not in processing line\n        if (status == 'init' || status == 'success' || status == 'error') {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    // attach file info popup\n    _showSettings : function() {\n        // check if popover is visible\n        if (!this.settings.visible) {\n            // show popover\n            this.settings.empty();\n            this.settings.append((new UploadSettings(this)).$el);\n            this.settings.show();\n        } else {\n            // hide popover\n            this.settings.hide();\n        }\n    },\n\n    // template\n    _template: function(options) {\n        return  '<tr id=\"upload-row-' + options.id + '\" class=\"upload-row\">' +\n                    '<td>' +\n                        '<div class=\"upload-text-column\">' +\n                            '<div id=\"mode\"/>' +\n                            '<div id=\"title\" class=\"upload-title\"/>' +\n                            '<div id=\"text\" class=\"text\">' +\n                                '<div class=\"text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n                                '<textarea id=\"text-content\" class=\"text-content form-control\"/>' +\n                            '</div>' +\n                        '</div>' +\n                    '</td>' +\n                    '<td>' +\n                        '<div id=\"size\" class=\"upload-size\"/>' +\n                    '</td>' +\n                    '<td>' +\n                        '<div id=\"extension\" class=\"upload-extension\" style=\"float: left;\"/>&nbsp;&nbsp' +\n                        '<div id=\"extension-info\" class=\"upload-icon-button fa fa-search\"/>' +\n                    '</td>' +\n                    '<td>' +\n                        '<div id=\"genome\" class=\"upload-genome\"/>' +\n                    '</td>' +\n                    '<td><div id=\"settings\" class=\"upload-icon-button fa fa-gear\"/></td>' +\n                    '<td>' +\n                        '<div id=\"info\" class=\"upload-info\">' +\n                            '<div class=\"progress\">' +\n                                '<div class=\"progress-bar progress-bar-success\"/>' +\n                                '<div id=\"percentage\" class=\"percentage\">0%</div>' +\n                            '</div>' +\n                        '</div>' +\n                    '</td>' +\n                    '<td>' +\n                        '<div id=\"symbol\" class=\"' + this.status_classes.init + '\"/>' +\n                    '</td>' +\n                '</tr>';\n    }\n\n});\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/upload/default/default-row.js\n ** module id = 109\n ** module chunks = 2\n **/","/** Renders contents of the default uploader */\ndefine(['utils/utils',\n        'mvc/upload/upload-model',\n        'mvc/upload/default/default-row',\n        'mvc/upload/upload-ftp',\n        'mvc/ui/ui-popover',\n        'mvc/ui/ui-select',\n        'mvc/ui/ui-misc',\n        'utils/uploadbox'],\n\n        function(   Utils,\n                    UploadModel,\n                    UploadRow,\n                    UploadFtp,\n                    Popover,\n                    Select,\n                    Ui\n                ) {\n\nreturn Backbone.View.extend({\n    // extension selector\n    select_extension : null,\n\n    // genome selector\n    select_genome: null,\n\n    // jquery uploadbox plugin\n    uploadbox: null,\n\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection : new UploadModel.Collection(),\n\n    // ftp file viewer\n    ftp : null,\n\n    // keeps track of the current uploader state\n    counter : {\n        announce    : 0,\n        success     : 0,\n        error       : 0,\n        running     : 0,\n        reset : function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    // initialize\n    initialize : function(app) {\n        // link app\n        this.app                = app;\n        this.options            = app.options;\n        this.list_extensions    = app.list_extensions;\n        this.list_genomes       = app.list_genomes;\n        this.ui_button          = app.ui_button;\n        this.ftp_upload_site    = app.currentFtp();\n\n        // link this\n        var self = this;\n\n        // set element\n        this.setElement(this._template());\n\n        // create button section\n        this.btnLocal    = new Ui.Button({ id: 'btn-local', title: 'Choose local file',   onclick: function() { self.uploadbox.select(); }, icon: 'fa fa-laptop' });\n        this.btnFtp      = new Ui.Button({ id: 'btn-ftp',   title: 'Choose FTP file',     onclick: function() { self._eventFtp(); }, icon: 'fa fa-folder-open-o' });\n        this.btnCreate   = new Ui.Button({ id: 'btn-new',   title: 'Paste/Fetch data',    onclick: function() { self._eventCreate(); }, icon: 'fa fa-edit' });\n        this.btnStart    = new Ui.Button({ id: 'btn-start', title: 'Start',               onclick: function() { self._eventStart(); } });\n        this.btnStop     = new Ui.Button({ id: 'btn-stop',  title: 'Pause',               onclick: function() { self._eventStop(); } });\n        this.btnReset    = new Ui.Button({ id: 'btn-reset', title: 'Reset',               onclick: function() { self._eventReset(); } });\n        this.btnClose    = new Ui.Button({ id: 'btn-close', title: 'Close',               onclick: function() { self.app.modal.hide(); } });\n\n        // append buttons to dom\n        var buttons = [ this.btnLocal, this.btnFtp, this.btnCreate, this.btnStop, this.btnReset, this.btnStart, this.btnClose ];\n        for (var i in buttons) {\n            this.$('#upload-buttons').prepend(buttons[i].$el);\n        }\n\n        // file upload\n        var self = this;\n        this.uploadbox = this.$('#upload-box').uploadbox({\n            url             : this.app.options.nginx_upload_path,\n            announce        : function(index, file) { self._eventAnnounce(index, file) },\n            initialize      : function(index) { return self.app.toData([ self.collection.get(index) ], self.history_id) },\n            progress        : function(index, percentage) { self._eventProgress(index, percentage) },\n            success         : function(index, message) { self._eventSuccess(index, message) },\n            error           : function(index, message) { self._eventError(index, message) },\n            complete        : function() { self._eventComplete() },\n            ondragover      : function() { self.$('.upload-box').addClass('highlight'); },\n            ondragleave     : function() { self.$('.upload-box').removeClass('highlight'); }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title       : 'FTP files',\n            container   : this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css         : 'footer-selection',\n            container   : this.$('#footer-extension'),\n            data        : _.filter(this.list_extensions, function(ext) { return !ext.composite_files }),\n            value       : this.options.default_extension,\n            onchange    : function(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        // handle extension info popover\n        self.$('#footer-extension-info').on('click', function(e) {\n            self.showExtensionInfo({\n                $el         : $(e.target),\n                title       : self.select_extension.text(),\n                extension   : self.select_extension.value(),\n                placement   : 'top'\n            });\n        }).on('mousedown', function(e) { e.preventDefault(); });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css         : 'footer-selection',\n            container   : this.$('#footer-genome'),\n            data        : this.list_genomes,\n            value       : this.options.default_genome,\n            onchange    : function(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on('remove', function(model) {\n            self._eventRemove(model);\n        });\n\n        // setup info\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by the upload box plugin\n    //\n\n    // a new file has been dropped/selected through the uploadbox plugin\n    _eventAnnounce: function(index, file) {\n        // update counter\n        this.counter.announce++;\n\n        // create if model has not been created yet\n        var new_model = new UploadModel.Model({\n            id          : index,\n            file_name   : file.name,\n            file_size   : file.size,\n            file_mode   : file.mode || 'local',\n            file_path   : file.path,\n            file_data   : file\n        });\n\n        // add model to collection\n        this.collection.add(new_model);\n\n        // create view/model\n        var upload_row = new UploadRow(this, { model: new_model });\n\n        // add upload row element to table\n        this.$('#upload-table > tbody:first').append(upload_row.$el);\n\n        // show on screen info\n        this._updateScreen();\n\n        // render\n        upload_row.render();\n    },\n\n    // progress\n    _eventProgress: function(index, percentage) {\n        // set progress for row\n        var it = this.collection.get(index);\n        it.set('percentage', percentage);\n\n        // update ui button\n        this.ui_button.set('percentage', this._uploadPercentage(percentage, it.get('file_size')));\n    },\n\n    // success\n    _eventSuccess: function(index, message) {\n        // update status\n        var it = this.collection.get(index);\n        it.set('percentage', 100);\n        it.set('status', 'success');\n\n        // update ui button\n        this.ui_button.set('percentage', this._uploadPercentage(100, it.get('file_size')));\n\n        // update completed\n        this.upload_completed += it.get('file_size') * 100;\n\n        // update counter\n        this.counter.announce--;\n        this.counter.success++;\n\n        // update on screen info\n        this._updateScreen();\n\n        // update galaxy history\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    // error\n    _eventError: function(index, message) {\n        // get element\n        var it = this.collection.get(index);\n\n        // update status\n        it.set('percentage', 100);\n        it.set('status', 'error');\n        it.set('info', message);\n\n        // update ui button\n        this.ui_button.set('percentage', this._uploadPercentage(100, it.get('file_size')));\n        this.ui_button.set('status', 'danger');\n\n        // update completed\n        this.upload_completed += it.get('file_size') * 100;\n\n        // update counter\n        this.counter.announce--;\n        this.counter.error++;\n\n        // update on screen info\n        this._updateScreen();\n    },\n\n    // queue is done\n    _eventComplete: function() {\n        // reset queued upload to initial status\n        this.collection.each(function(model) {\n            if(model.get('status') == 'queued') {\n                model.set('status', 'init');\n            }\n        });\n\n        // update running\n        this.counter.running = 0;\n\n        // update on screen info\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by collection\n    //\n\n    // remove model from upload list\n    _eventRemove: function(model) {\n        // update status\n        var status = model.get('status');\n\n        // reduce counter\n        if (status == 'success') {\n            this.counter.success--;\n        } else if (status == 'error') {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n\n        // remove from queue\n        this.uploadbox.remove(model.id);\n\n        // show on screen info\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    // [public] display extension info popup\n    showExtensionInfo: function(options) {\n        // initialize\n        var self = this;\n        var $el = options.$el;\n        var extension = options.extension;\n        var title = options.title;\n        var description = _.findWhere(self.list_extensions, {'id': extension});\n\n        // create popup\n        this.extension_popup && this.extension_popup.remove();\n        this.extension_popup = new Popover.View({\n            placement: options.placement || 'bottom',\n            container: $el,\n            destroy: true\n        });\n\n        // add content and show popup\n        this.extension_popup.title(title);\n        this.extension_popup.empty();\n        this.extension_popup.append(this._templateDescription(description));\n        this.extension_popup.show();\n    },\n\n    // show/hide ftp popup\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append((new UploadFtp({\n                collection      : this.collection,\n                ftp_upload_site : this.ftp_upload_site,\n                onadd: function(ftp_file) {\n                    self.uploadbox.add([{\n                        mode: 'ftp',\n                        name: ftp_file.path,\n                        size: ftp_file.size,\n                        path: ftp_file.path\n                    }]);\n                },\n                onremove: function(model_index) {\n                    self.collection.remove(model_index);\n                }\n            })).$el);\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    // create a new file\n    _eventCreate: function (){\n        this.uploadbox.add([{\n            name    : 'New File',\n            size    : 0,\n            mode    : 'new'\n        }]);\n    },\n\n    // start upload process\n    _eventStart: function() {\n        // check\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n\n        // reset current size\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        // switch icons for new uploads\n        this.collection.each(function(model) {\n            if(model.get('status') == 'init') {\n                model.set('status', 'queued');\n                self.upload_size += model.get('file_size');\n            }\n        });\n\n        // reset progress\n        this.ui_button.set('percentage', 0);\n        this.ui_button.set('status', 'success');\n\n        // update running\n        this.counter.running = this.counter.announce;\n\n        // set current history id\n        this.history_id = this.app.currentHistory();\n\n        // initiate upload procedure in plugin\n        this.uploadbox.start();\n\n        // update on screen info\n        this._updateScreen();\n    },\n\n    // pause upload process\n    _eventStop: function() {\n        // check\n        if (this.counter.running > 0) {\n            // show upload has paused\n            this.ui_button.set('status', 'info');\n\n            // set html content\n            $('#upload-info').html('Queue will pause after completing the current file...');\n\n            // request pause\n            this.uploadbox.stop();\n        }\n    },\n\n    // remove all\n    _eventReset: function() {\n        // make sure queue is not running\n        if (this.counter.running == 0){\n            // reset collection\n            this.collection.reset();\n\n            // reset counter\n            this.counter.reset();\n\n            // remove from queue\n            this.uploadbox.reset();\n\n            // reset value for universal type drop-down\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n\n            // reset button\n            this.ui_button.set('percentage', 0);\n\n            // show on screen info\n            this._updateScreen();\n        }\n    },\n\n    // update extension for all models\n    updateExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (model.get('status') == 'init' && (model.get('extension') == self.options.default_extension || !defaults_only)) {\n                model.set('extension', extension);\n            }\n        });\n    },\n\n    // update genome for all models\n    updateGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(function(model) {\n            if (model.get('status') == 'init' && (model.get('genome') == self.options.default_genome || !defaults_only)) {\n                model.set('genome', genome);\n            }\n        });\n    },\n\n    // set screen\n    _updateScreen: function () {\n        /*\n            update on screen info\n        */\n\n        // check default message\n        if(this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = '&nbsp;';\n            } else {\n                message = 'Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.';\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = 'You added ' + this.counter.announce + ' file(s) to the queue. Add more files or click \\'Start\\' to proceed.';\n            } else {\n                message = 'Please wait...' + this.counter.announce + ' out of ' + this.counter.running + ' remaining.';\n            }\n        }\n\n        // set html content\n        this.$('#upload-info').html(message);\n\n        /*\n            update button status\n        */\n\n        // update reset button\n        if (this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0) {\n            this.btnReset.enable();\n        } else {\n            this.btnReset.disable();\n        }\n\n        // update upload button\n        if (this.counter.running == 0 && this.counter.announce > 0) {\n            this.btnStart.enable();\n            this.btnStart.$el.addClass('btn-primary');\n        } else {\n            this.btnStart.disable();\n            this.btnStart.$el.removeClass('btn-primary');\n        }\n\n        // pause upload button\n        if (this.counter.running > 0) {\n            this.btnStop.enable();\n        } else {\n            this.btnStop.disable();\n        }\n\n        // select upload button\n        if (this.counter.running == 0) {\n            this.btnLocal.enable();\n            this.btnFtp.enable();\n            this.btnCreate.enable();\n        } else {\n            this.btnLocal.disable();\n            this.btnFtp.disable();\n            this.btnCreate.disable();\n        }\n\n        // ftp button\n        if (this.ftp_upload_site) {\n            this.btnFtp.$el.show();\n        } else {\n            this.btnFtp.$el.hide();\n        }\n\n        // table visibility\n        if (this.counter.announce + this.counter.success + this.counter.error > 0) {\n            this.$('#upload-table').show();\n            this.$('.upload-helper').hide();\n        } else {\n            this.$('#upload-table').hide();\n            this.$('.upload-helper').show();\n        }\n    },\n\n    // calculate percentage of all queued uploads\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + (percentage * size)) / this.upload_size;\n    },\n\n    // template for extensions description\n    _templateDescription: function(options) {\n        if (options.description) {\n            var tmpl = options.description;\n            if (options.description_url) {\n                tmpl += '&nbsp;(<a href=\"' + options.description_url + '\" target=\"_blank\">read more</a>)';\n            }\n            return tmpl;\n        } else {\n            return 'There is no description available for this file extension.';\n        }\n    },\n\n    // load html template\n    _template: function() {\n        return  '<div class=\"upload-view-default\">' +\n                    '<div class=\"upload-top\">' +\n                        '<h6 id=\"upload-info\" class=\"upload-info\"/>' +\n                    '</div>' +\n                    '<div id=\"upload-box\" class=\"upload-box\">' +\n                        '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n                        '<table id=\"upload-table\" class=\"ui-table-striped\" style=\"display: none;\">' +\n                            '<thead>' +\n                                '<tr>' +\n                                    '<th>Name</th>' +\n                                    '<th>Size</th>' +\n                                    '<th>Type</th>' +\n                                    '<th>Genome</th>' +\n                                    '<th>Settings</th>' +\n                                    '<th>Status</th>' +\n                                    '<th/>' +\n                                '</tr>' +\n                            '</thead>' +\n                            '<tbody/>' +\n                        '</table>' +\n                    '</div>' +\n                    '<div id=\"upload-footer\" class=\"upload-footer\">' +\n                        '<span class=\"footer-title\">Type (set all):</span>' +\n                        '<span id=\"footer-extension\"/>' +\n                        '<span id=\"footer-extension-info\" class=\"upload-icon-button fa fa-search\"/> ' +\n                        '<span class=\"footer-title\">Genome (set all):</span>' +\n                        '<span id=\"footer-genome\"/>' +\n                    '</div>' +\n                    '<div id=\"upload-buttons\" class=\"upload-buttons\"/>' +\n                '</div>';\n    }\n});\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/upload/default/default-view.js\n ** module id = 110\n ** module chunks = 2\n **/","// dependencies\ndefine([], function() {\n\n// model for upload/progress bar button\nvar Model = Backbone.Model.extend({\n    defaults: {\n        icon        : 'fa-upload',\n        tooltip     : 'Download from URL or upload files from disk',\n        label       : 'Load Data',\n        percentage  : 0,\n        status      : ''\n    }\n});\n\n// view for upload/progress bar button\nvar View = Backbone.View.extend({\n    // model\n    model : null,\n\n    // initialize\n    initialize : function( options ) {\n        // link this\n        var self = this;\n\n        // create model\n        var model = options.model;\n\n        // create new element\n        this.setElement( this._template() );\n\n        // add event\n        this.$el.on( 'click', function( e ) { options.onclick( e ); });\n\n        // add tooltip\n        this.$el.tooltip( { title: model.get('tooltip'), placement: 'bottom' } );\n\n        // events\n        model.on( 'change:percentage', function() {\n            self._percentage( model.get( 'percentage' ) );\n        });\n        model.on( 'change:status', function() {\n            self._status( model.get( 'status' ) );\n        });\n\n        // unload event\n        var self = this;\n        $( window ).on( 'beforeunload', function() {\n            var text = \"\";\n            if ( options.onunload ) {\n                text = options.onunload();\n            }\n            if ( text != \"\" ) {\n                return text;\n            }\n        });\n    },\n\n    // set status\n    _status: function( value ) {\n        var $el = this.$el.find( '.progress-bar' );\n        $el.removeClass();\n        $el.addClass( 'progress-bar' );\n        $el.addClass( 'progress-bar-notransition' );\n        if ( value != '' ) {\n            $el.addClass( 'progress-bar-' + value );\n        }\n    },\n\n    // set percentage\n    _percentage: function( value ) {\n        var $el = this.$el.find( '.progress-bar' );\n        $el.css( { width : value + '%' } );\n    },\n\n    // template\n    _template: function() {\n        return  '<div class=\"upload-button\">' +\n                    '<div class=\"progress\">' +\n                        '<div class=\"progress-bar\"></div>' +\n                    '</div>' +\n                    '<div id=\"label\" class=\"label\">' +\n                        '<a class=\"panel-header-button\" href=\"javascript:void(0)\">' +\n                            '<span class=\"fa fa-upload\"></span>' +\n                        '</a>' +\n                    '</div>' +\n                '</div>';\n    }\n});\n\nreturn {\n    Model   : Model,\n    View    : View\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/upload/upload-button.js\n ** module id = 111\n ** module chunks = 2\n **/","/** Upload app contains the upload progress button and upload modal, compiles model data for API request **/\ndefine(['utils/utils',\n        'mvc/ui/ui-modal',\n        'mvc/ui/ui-tabs',\n        'mvc/upload/upload-button',\n        'mvc/upload/default/default-view',\n        'mvc/upload/composite/composite-view'],\n        function(   Utils,\n                    Modal,\n                    Tabs,\n                    UploadButton,\n                    UploadViewDefault,\n                    UploadViewComposite ) {\nreturn Backbone.View.extend({\n    // default options\n    options : {\n        nginx_upload_path   : '',\n        ftp_upload_site     : 'n/a',\n        default_genome      : '?',\n        default_extension   : 'auto',\n        height              : 500,\n        width               : 900,\n        auto                : {\n            id          : 'auto',\n            text        : 'Auto-detect',\n            description : 'This system will try to detect the file type automatically. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be.  You can also upload compressed files, which will automatically be decompressed.'\n        }\n    },\n\n    // upload modal container\n    modal: null,\n\n    // progress button in panel\n    ui_button: null,\n\n    // current history identifier\n    current_history: null,\n\n    // contains all available dataset extensions/types\n    list_extensions: [],\n\n    // contains all available genomes\n    list_genomes: [],\n\n    // initialize\n    initialize: function( options ) {\n        // link this\n        var self = this;\n\n        // merge parsed options\n        this.options = Utils.merge( options, this.options );\n\n        // create model for upload/progress button\n        this.ui_button = new UploadButton.Model();\n\n        // create view for upload/progress button\n        this.ui_button_view = new UploadButton.View({\n            model       : this.ui_button,\n            onclick     : function(e) {\n                e.preventDefault();\n                self.show()\n            },\n            onunload    : function() {\n                var percentage = self.ui_button.get('percentage', 0);\n                if (percentage > 0 && percentage < 100) {\n                    return 'Several uploads are queued.';\n                }\n            }\n        });\n\n        // set element to button view\n        this.setElement( this.ui_button_view.$el );\n\n        // load extensions\n        var self = this;\n        Utils.get({\n            url     : galaxy_config.root + 'api/datatypes?extension_only=False',\n            success : function( datatypes ) {\n                for ( key in datatypes ) {\n                    self.list_extensions.push({\n                        id              : datatypes[ key ].extension,\n                        text            : datatypes[ key ].extension,\n                        description     : datatypes[ key ].description,\n                        description_url : datatypes[ key ].description_url,\n                        composite_files : datatypes[ key ].composite_files\n                    });\n                }\n                self.list_extensions.sort( function( a, b ) {\n                    var a_text = a.text && a.text.toLowerCase();\n                    var b_text = b.text && b.text.toLowerCase();\n                    return a_text > b_text ? 1 : a_text < b_text ? -1 : 0;\n                });\n                if ( !self.options.datatypes_disable_auto ) {\n                    self.list_extensions.unshift( self.options.auto );\n                }\n            }\n        });\n\n        // load genomes\n        Utils.get({\n            url     : galaxy_config.root + 'api/genomes',\n            success : function( genomes ) {\n                for ( key in genomes ) {\n                    self.list_genomes.push({\n                        id      : genomes[ key ][ 1 ],\n                        text    : genomes[ key ][ 0 ]\n                    });\n                }\n                self.list_genomes.sort( function( a, b ) {\n                    if ( a.id == self.options.default_genome ) { return -1; }\n                    if ( b.id == self.options.default_genome ) { return 1; }\n                    return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\n                });\n            }\n        });\n    },\n\n    //\n    // event triggered by upload button\n    //\n\n    // show/hide upload frame\n    show: function () {\n        // wait for galaxy history panel\n        var self = this;\n        if ( !Galaxy.currHistoryPanel || !Galaxy.currHistoryPanel.model ) {\n            window.setTimeout(function() { self.show() }, 500)\n            return;\n        }\n\n        // set current user\n        this.current_user = Galaxy.user.id;\n\n        // create modal\n        if ( !this.modal ) {\n            // build tabs\n            this.tabs = new Tabs.View();\n\n            // add tabs\n            this.default_view = new UploadViewDefault( this );\n            this.tabs.add({\n                id      : 'regular',\n                title   : 'Regular',\n                $el     : this.default_view.$el\n            });\n            this.composite_view = new UploadViewComposite( this );\n            this.tabs.add({\n                id      : 'composite',\n                title   : 'Composite',\n                $el     : this.composite_view.$el\n            });\n\n            // make modal\n            this.modal = new Modal.View({\n                title           : 'Download from web or upload from disk',\n                body            : this.tabs.$el,\n                height          : this.options.height,\n                width           : this.options.width,\n                closing_events  : true,\n                title_separator : false\n            });\n        }\n\n        // show modal\n        this.modal.show();\n    },\n\n    // refresh user and current history\n    currentHistory: function() {\n        return this.current_user && Galaxy.currHistoryPanel.model.get( 'id' );\n    },\n\n    // get ftp configuration\n    currentFtp: function() {\n        return this.current_user && this.options.ftp_upload_site;\n    },\n\n    /**\n      * Package API data from array of models\n      * @param{Array} items - Upload items/rows filtered from a collection\n    */\n    toData: function( items, history_id ) {\n        // create dictionary for data submission\n        var data = {\n            payload: {\n                'tool_id'       : 'upload1',\n                'history_id'    : history_id || this.currentHistory(),\n                'inputs'        : {}\n            },\n            files: [],\n            error_message: null\n        }\n        // add upload tools input data\n        if ( items && items.length > 0 ) {\n            var inputs = {};\n            inputs[ 'dbkey' ] = items[0].get( 'genome', null );\n            inputs[ 'file_type' ] = items[0].get( 'extension', null );\n            for ( var index in items ) {\n                var it = items[ index ];\n                it.set( 'status', 'running' );\n                if ( it.get( 'file_size' ) > 0 ) {\n                    var prefix = 'files_' + index + '|';\n                    inputs[ prefix + 'type' ] = 'upload_dataset';\n                    inputs[ prefix + 'space_to_tab' ] = it.get( 'space_to_tab' ) && 'Yes' || null;\n                    inputs[ prefix + 'to_posix_lines' ] = it.get( 'to_posix_lines' ) && 'Yes' || null;\n                    switch ( it.get( 'file_mode' ) ) {\n                        case 'new':\n                            inputs[ prefix + 'url_paste' ] = it.get( 'url_paste' );\n                            break;\n                        case 'ftp':\n                            inputs[ prefix + 'ftp_files' ] = it.get( 'file_path' );\n                            break;\n                        case 'local':\n                            data.files.push( { name: prefix + 'file_data', file: it.get( 'file_data' ) } );\n                    }\n                } else {\n                    data.error_message = 'Upload content incomplete.';\n                    it.set( 'status', 'error' );\n                    it.set( 'info', data.error_message );\n                    break;\n                }\n            }\n            data.payload.inputs = JSON.stringify( inputs );\n        }\n        return data;\n    }\n});\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/upload/upload-view.js\n ** module id = 112\n ** module chunks = 2\n **/","define([\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( baseMVC, _l ){\n\nvar logNamespace = 'user';\n//==============================================================================\n/** @class View to display a user's disk/storage usage\n *      either as a progress bar representing the percentage of a quota used\n *      or a simple text element displaying the human readable size used.\n *  @name UserQuotaMeter\n *  @augments Backbone.View\n */\nvar UserQuotaMeter = Backbone.View.extend( baseMVC.LoggableMixin ).extend(\n/** @lends UserQuotaMeter.prototype */{\n    _logNamespace : logNamespace,\n\n    /** Defaults for optional settings passed to initialize */\n    options : {\n        warnAtPercent   : 85,\n        errorAtPercent  : 100\n    },\n\n    /** Set up, accept options, and bind events */\n    initialize : function( options ){\n        this.log( this + '.initialize:', options );\n        _.extend( this.options, options );\n\n        //this.bind( 'all', function( event, data ){ this.log( this + ' event:', event, data ); }, this );\n        this.model.bind( 'change:quota_percent change:total_disk_usage', this.render, this );\n    },\n\n    /** Re-load user model data from the api */\n    update : function( options ){\n        this.log( this + ' updating user data...', options );\n        this.model.loadFromApi( this.model.get( 'id' ), options );\n        return this;\n    },\n\n    /** Is the user over their quota (if there is one)?\n     * @returns {Boolean} true if over quota, false if no quota or under quota\n     */\n    isOverQuota : function(){\n        return ( this.model.get( 'quota_percent' ) !== null\n              && this.model.get( 'quota_percent' ) >= this.options.errorAtPercent );\n    },\n\n    /** Render the meter when they have an applicable quota. Will render as a progress bar\n     *      with their percentage of that quota in text over the bar.\n     *  @fires quota:over when user is over quota (>= this.errorAtPercent)\n     *  @fires quota:under when user is under quota\n     *  @fires quota:under:approaching when user is >= this.warnAtPercent of their quota\n     *  @fires quota:under:ok when user is below this.warnAtPercent\n     *  @returns {jQuery} the rendered meter\n     */\n    _render_quota : function(){\n        var modelJson = this.model.toJSON(),\n            //prevPercent = this.model.previous( 'quota_percent' ),\n            percent = modelJson.quota_percent,\n            //meter = $( UserQuotaMeter.templates.quota( modelJson ) );\n            $meter = $( this._templateQuotaMeter( modelJson ) ),\n            $bar = $meter.find( '.progress-bar' );\n        //this.log( this + '.rendering quota, percent:', percent, 'meter:', meter );\n\n        // OVER QUOTA: color the quota bar and show the quota error message\n        if( this.isOverQuota() ){\n            //this.log( '\\t over quota' );\n            $bar.attr( 'class', 'progress-bar progress-bar-danger' );\n            $meter.find( '.quota-meter-text' ).css( 'color', 'white' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:over', modelJson );\n\n        // APPROACHING QUOTA: color the quota bar\n        } else if( percent >= this.options.warnAtPercent ){\n            //this.log( '\\t approaching quota' );\n            $bar.attr( 'class', 'progress-bar progress-bar-warning' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:under quota:under:approaching', modelJson );\n\n        // otherwise, hide/don't use the msg box\n        } else {\n            $bar.attr( 'class', 'progress-bar progress-bar-success' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:under quota:under:ok', modelJson );\n        }\n        return $meter;\n    },\n\n    /** Render the meter when the user has NO applicable quota. Will render as text\n     *      showing the human readable sum storage their data is using.\n     *  @returns {jQuery} the rendered text\n     */\n    _render_usage : function(){\n        //var usage = $( UserQuotaMeter.templates.usage( this.model.toJSON() ) );\n        var usage = $( this._templateUsage( this.model.toJSON() ) );\n        this.log( this + '.rendering usage:', usage );\n        return usage;\n    },\n\n    /** Render either the quota percentage meter or the human readable disk usage\n     *      depending on whether the user model has quota info (quota_percent === null -> no quota)\n     *  @returns {Object} this UserQuotaMeter\n     */\n    render : function(){\n        //this.log( this + '.rendering' );\n        var meterHtml = null;\n\n        // no quota on server ('quota_percent' === null (can be valid at 0)), show usage instead\n        this.log( this + '.model.quota_percent:', this.model.get( 'quota_percent' ) );\n        if( ( this.model.get( 'quota_percent' ) === null )\n        ||  ( this.model.get( 'quota_percent' ) === undefined ) ){\n            meterHtml = this._render_usage();\n\n        // otherwise, render percent of quota (and warning, error)\n        } else {\n            meterHtml = this._render_quota();\n            //TODO: add the original text for unregistered quotas\n            //tooltip = \"Your disk quota is %s.  You can increase your quota by registering a Galaxy account.\"\n        }\n\n        this.$el.html( meterHtml );\n        this.$el.find( '.quota-meter-text' ).tooltip();\n        return this;\n    },\n\n    _templateQuotaMeter : function( data ){\n        return [\n            '<div id=\"quota-meter\" class=\"quota-meter progress\">',\n                '<div class=\"progress-bar\" style=\"width: ', data.quota_percent, '%\"></div>',\n                '<div class=\"quota-meter-text\" style=\"top: 6px\"',\n                    (( data.nice_total_disk_usage )?( ' title=\"Using ' + data.nice_total_disk_usage + '\">' ):( '>' )),\n                    _l( 'Using' ), ' ', data.quota_percent, '%',\n                '</div>',\n            '</div>'\n        ].join( '' );\n    },\n\n    _templateUsage : function( data ){\n        return [\n            '<div id=\"quota-meter\" class=\"quota-meter\" style=\"background-color: transparent\">',\n                '<div class=\"quota-meter-text\" style=\"top: 6px; color: white\">',\n                    (( data.nice_total_disk_usage )?( _l( 'Using ' ) + data.nice_total_disk_usage ):( '' )),\n                '</div>',\n            '</div>'\n        ].join( '' );\n    },\n\n    toString : function(){\n        return 'UserQuotaMeter(' + this.model + ')';\n    }\n});\n\n\n//==============================================================================\nreturn {\n    UserQuotaMeter : UserQuotaMeter\n};});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/user/user-quotameter.js\n ** module id = 113\n ** module chunks = 2\n **/","this[\"Handlebars\"] = this[\"Handlebars\"] || {};\nthis[\"Handlebars\"][\"templates\"] = this[\"Handlebars\"][\"templates\"] || {};\n\nthis[\"Handlebars\"][\"templates\"][\"panel_section\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\n  return \"<div class=\\\"toolSectionTitle\\\" id=\\\"title_\"\n    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\">\\n    <a href=\\\"javascript:void(0)\\\"><span>\"\n    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"name\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</span></a>\\n</div>\\n<div id=\\\"\"\n    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" class=\\\"toolSectionBody\\\" style=\\\"display: none; \\\">\\n    <div class=\\\"toolSectionBg\\\"></div>\\n<div>\";\n},\"useData\":true});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/templates/compiled/panel_section.js\n ** module id = 116\n ** module chunks = 2\n **/","this[\"Handlebars\"] = this[\"Handlebars\"] || {};\nthis[\"Handlebars\"][\"templates\"] = this[\"Handlebars\"][\"templates\"] || {};\n\nthis[\"Handlebars\"][\"templates\"][\"tool_form\"] = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n    var stack1, helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\n  return \"        <div class=\\\"form-row\\\">\\n            <label for=\\\"\"\n    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"name\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\">\"\n    + alias3(((helper = (helper = helpers.label || (depth0 != null ? depth0.label : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"label\",\"hash\":{},\"data\":data}) : helper)))\n    + \":</label>\\n            <div class=\\\"form-row-input\\\">\\n                \"\n    + ((stack1 = ((helper = (helper = helpers.html || (depth0 != null ? depth0.html : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"html\",\"hash\":{},\"data\":data}) : helper))) != null ? stack1 : \"\")\n    + \"\\n            </div>\\n            <div class=\\\"toolParamHelp\\\" style=\\\"clear: both;\\\">\\n                \"\n    + alias3(((helper = (helper = helpers.help || (depth0 != null ? depth0.help : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"help\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\n            </div>\\n            <div style=\\\"clear: both;\\\"></div>\\n        </div>\\n\";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1, helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\n  return \"<div class=\\\"toolFormTitle\\\">\"\n    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"name\",\"hash\":{},\"data\":data}) : helper)))\n    + \" (version \"\n    + alias3(((helper = (helper = helpers.version || (depth0 != null ? depth0.version : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"version\",\"hash\":{},\"data\":data}) : helper)))\n    + \")</div>\\n    <div class=\\\"toolFormBody\\\">\\n\"\n    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.inputs : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"    </div>\\n    <div class=\\\"form-row form-actions\\\">\\n    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"runtool_btn\\\" value=\\\"Execute\\\">\\n</div>\\n<div class=\\\"toolHelp\\\">\\n    <div class=\\\"toolHelpBody\\\">\"\n    + alias3(((helper = (helper = helpers.help || (depth0 != null ? depth0.help : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"help\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</div>\\n</div>\";\n},\"useData\":true});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/templates/compiled/tool_form.js\n ** module id = 117\n ** module chunks = 2\n **/","this[\"Handlebars\"] = this[\"Handlebars\"] || {};\nthis[\"Handlebars\"][\"templates\"] = this[\"Handlebars\"][\"templates\"] || {};\n\nthis[\"Handlebars\"][\"templates\"][\"tool_link\"] = Handlebars.template({\"1\":function(depth0,helpers,partials,data) {\n    var alias1=this.lambda, alias2=this.escapeExpression;\n\n  return \"<span class=\\\"label label-default label-\"\n    + alias2(alias1(depth0, depth0))\n    + \"\\\">\"\n    + alias2(alias1(depth0, depth0))\n    + \"</span> \";\n},\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var stack1, helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\n  return \"<span class=\\\"labels\\\">\"\n    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.labels : depth0),{\"name\":\"each\",\"hash\":{},\"fn\":this.program(1, data, 0),\"inverse\":this.noop,\"data\":data})) != null ? stack1 : \"\")\n    + \"</span>\\n<a class=\\\"\"\n    + alias3(((helper = (helper = helpers.id || (depth0 != null ? depth0.id : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"id\",\"hash\":{},\"data\":data}) : helper)))\n    + \" tool-link\\\" href=\\\"\"\n    + alias3(((helper = (helper = helpers.link || (depth0 != null ? depth0.link : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"link\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" target=\\\"\"\n    + alias3(((helper = (helper = helpers.target || (depth0 != null ? depth0.target : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"target\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" minsizehint=\\\"\"\n    + alias3(((helper = (helper = helpers.min_width || (depth0 != null ? depth0.min_width : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"min_width\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\">\"\n    + alias3(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"name\",\"hash\":{},\"data\":data}) : helper)))\n    + \"</a>\\n\"\n    + alias3(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"description\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\n\";\n},\"useData\":true});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/templates/compiled/tool_link.js\n ** module id = 118\n ** module chunks = 2\n **/","this[\"Handlebars\"] = this[\"Handlebars\"] || {};\nthis[\"Handlebars\"][\"templates\"] = this[\"Handlebars\"][\"templates\"] || {};\n\nthis[\"Handlebars\"][\"templates\"][\"tool_search\"] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper, alias1=helpers.helperMissing, alias2=\"function\", alias3=this.escapeExpression;\n\n  return \"<input type=\\\"text\\\" name=\\\"query\\\" placeholder=\\\"\"\n    + alias3(((helper = (helper = helpers.search_hint_string || (depth0 != null ? depth0.search_hint_string : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"search_hint_string\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" id=\\\"tool-search-query\\\" autocomplete=\\\"off\\\" class=\\\"search-query parent-width\\\" />\\n<a id=\\\"search-clear-btn\\\" title=\\\"clear search (esc)\\\"> </a>\\n<img src=\\\"\"\n    + alias3(((helper = (helper = helpers.spinner_url || (depth0 != null ? depth0.spinner_url : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{\"name\":\"spinner_url\",\"hash\":{},\"data\":data}) : helper)))\n    + \"\\\" id=\\\"search-spinner\\\" class=\\\"search-spinner\\\"/>\\n\";\n},\"useData\":true});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/templates/compiled/tool_search.js\n ** module id = 119\n ** module chunks = 2\n **/","(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else {\n        // Browser globals\n        root.LoadingIndicator = factory();\n    }\n\n//============================================================================\n}(this, function () {\n    //TODO: too specific to history panel\n    function LoadingIndicator( $where, options ){\n\n        var self = this;\n        // defaults\n        options = jQuery.extend({\n            cover       : false\n        }, options || {} );\n\n        function render(){\n            var html = [\n                '<div class=\"loading-indicator\">',\n                    '<div class=\"loading-indicator-text\">',\n                        '<span class=\"fa fa-spinner fa-spin fa-lg\"></span>',\n                        '<span class=\"loading-indicator-message\">loading...</span>',\n                    '</div>',\n                '</div>'\n            ].join( '\\n' );\n\n            var $indicator = $( html ).hide().css( options.css || {\n                    position    : 'fixed'\n                }),\n                $text = $indicator.children( '.loading-indicator-text' );\n\n            if( options.cover ){\n                $indicator.css({\n                    'z-index'   : 2,\n                    top         : $where.css( 'top' ),\n                    bottom      : $where.css( 'bottom' ),\n                    left        : $where.css( 'left' ),\n                    right       : $where.css( 'right' ),\n                    opacity     : 0.5,\n                    'background-color': 'white',\n                    'text-align': 'center'\n                });\n                $text = $indicator.children( '.loading-indicator-text' ).css({\n                    'margin-top'        : '20px'\n                });\n\n            } else {\n                $text = $indicator.children( '.loading-indicator-text' ).css({\n                    margin              : '12px 0px 0px 10px',\n                    opacity             : '0.85',\n                    color               : 'grey'\n                });\n                $text.children( '.loading-indicator-message' ).css({\n                    margin          : '0px 8px 0px 0px',\n                    'font-style'    : 'italic'\n                });\n            }\n            return $indicator;\n        }\n\n        self.show = function( msg, speed, callback ){\n            msg = msg || 'loading...';\n            speed = speed || 'fast';\n            // remove previous\n            $where.parent().find( '.loading-indicator' ).remove();\n            // since position is fixed - we insert as sibling\n            self.$indicator = render().insertBefore( $where );\n            self.message( msg );\n            self.$indicator.fadeIn( speed, callback );\n            return self;\n        };\n\n        self.message = function( msg ){\n            self.$indicator.find( 'i' ).text( msg );\n        };\n\n        self.hide = function( speed, callback ){\n            speed = speed || 'fast';\n            if( self.$indicator && self.$indicator.size() ){\n                self.$indicator.fadeOut( speed, function(){\n                    self.$indicator.remove();\n                    if( callback ){ callback(); }\n                });\n            } else {\n                if( callback ){ callback(); }\n            }\n            return self;\n        };\n        return self;\n    }\n\n//============================================================================\n    return LoadingIndicator;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/ui/loading-indicator.js\n ** module id = 120\n ** module chunks = 2\n **/","/**\n *  This class defines a queue to ensure that multiple deferred callbacks are executed sequentially.\n */\ndefine(['utils/utils'], function( Utils ) {\nreturn Backbone.Model.extend({\n    initialize: function(){\n        this.active = {};\n        this.last = null;\n    },\n\n    /** Adds a callback to the queue. Upon execution a deferred object is parsed to the callback i.e. callback( deferred ).\n     *  If the callback does not take any arguments, the deferred is resolved instantly.\n    */\n    execute: function( callback ) {\n        var self = this;\n        var id = Utils.uid();\n        var has_deferred = callback.length > 0;\n\n        // register process\n        this.active[ id ] = true;\n\n        // deferred process\n        var process = $.Deferred();\n        process.promise().always(function() {\n            delete self.active[ id ];\n            has_deferred && console.debug( 'Deferred::execute() - ' + this.state() + ' ' + id );\n        });\n\n        // deferred queue\n        $.when( this.last ).always(function() {\n            if ( self.active[ id ] ) {\n                has_deferred && console.debug( 'Deferred::execute() - running ' + id );\n                callback( process );\n                !has_deferred && process.resolve();\n            } else {\n                process.reject();\n            }\n        });\n        this.last = process.promise();\n    },\n\n    /** Resets the promise queue. All currently queued but unexecuted callbacks/promises will be rejected.\n    */\n    reset: function() {\n        console.debug('Deferred::execute() - reset');\n        for ( var i in this.active ) {\n            this.active[ i ] = false;\n        }\n    },\n\n    /** Returns true if all processes are done.\n    */\n    ready: function() {\n        return $.isEmptyObject( this.active );\n    }\n});\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/utils/deferred.js\n ** module id = 123\n ** module chunks = 2\n **/","define([\n], function(){\n//=============================================================================\n/**\n(Imported for edit distance algorith. From: https://gist.github.com/andrei-m/982927)\nCopyright (c) 2011 Andrei Mackenzie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n// Compute the edit distance between the two given strings\n//exports.getEditDistance = function(a, b){\nfunction levenshteinDistance(a, b){\n  if(a.length === 0){ return b.length; }\n  if(b.length === 0){ return a.length; }\n\n  var matrix = [];\n\n  // increment along the first column of each row\n  var i;\n  for(i = 0; i <= b.length; i++){\n    matrix[i] = [i];\n  }\n\n  // increment each column in the first row\n  var j;\n  for(j = 0; j <= a.length; j++){\n    matrix[0][j] = j;\n  }\n\n  // Fill in the rest of the matrix\n  for(i = 1; i <= b.length; i++){\n    for(j = 1; j <= a.length; j++){\n      if(b.charAt(i-1) === a.charAt(j-1)){\n        matrix[i][j] = matrix[i-1][j-1];\n      } else {\n        matrix[i][j] = Math.min(matrix[i-1][j-1] + 1, // substitution\n                                Math.min(matrix[i][j-1] + 1, // insertion\n                                         matrix[i-1][j] + 1)); // deletion\n      }\n    }\n  }\n\n  //console.debug( '\\t\\t levenshteinDistance', a, b, matrix[b.length][a.length] );\n  return matrix[b.length][a.length];\n}\n\n//=============================================================================\n    return levenshteinDistance;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/utils/levenshtein.js\n ** module id = 124\n ** module chunks = 2\n **/"],"sourceRoot":""}