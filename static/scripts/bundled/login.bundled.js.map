{"version":3,"sources":["webpack:///./galaxy/scripts/apps/login.js","webpack:///./galaxy/scripts/mvc/ui/ui-modal.js?120e","webpack:///./galaxy/scripts/mvc/ui/ui-frames.js?d017","webpack:///./galaxy/scripts/utils/utils.js?d2e7","webpack:///./galaxy/scripts/layout/page.js?047e","webpack:///./galaxy/scripts/layout/masthead.js?08fd","webpack:///./galaxy/scripts/layout/menu.js?9a2d","webpack:///./galaxy/scripts/layout/scratchbook.js?f9ea","webpack:///./galaxy/scripts/mvc/user/user-quotameter.js?f822"],"names":[],"mappings":";;;;;;;;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAAyC,iBAAiB;AAC1D;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uFAAsF,cAAc;AACpG,MAAK;AACL;;;;;;;;;;;;uHCtCA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,mBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,sEAAqE,aAAa,EAAE;AACpF;;AAEA;AACA;AACA,0CAAyC,4CAA4C;AACrF;AACA,MAAK;;AAEL;AACA;AACA;AACA,6EAA4E;AAC5E;AACA;AACA;AACA,2FAA0F,SAAS;AACnG;AACA;AACA,8EAA6E;AAC7E;AACA,2EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA,EAAC;;;;;;;;;;;;iEC3MD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iCAAgC;AAChC,iCAAgC;AAChC;AACA;AACA;;AAEA;AACA,+CAA8C,oBAAoB;;AAElE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA,iCAAgC,mE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8G;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAgC;AAChC,iCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAkC,6CAA6C;;AAE/E;AACA,mCAAkC,gBAAgB;;AAElD;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C,2BAA2B;AAC1E,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA,4BAA2B,sCAAsC;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAiC,yBAAyB;AAC1D;AACA,cAAa;AACb,UAAS;AACT,8BAA6B,yBAAyB;AACtD;AACA,MAAK;;AAEL;AACA;AACA;AACA,0BAAyB,iCAAiC;;AAE1D;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,iBAAgB;AAChB,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;;;;;;iEC5gCD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU,OAAO;AACjB;AACA;AACA,qBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA,WAAU,OAAO;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU,OAAO;AACjB,WAAU,SAAS;AACnB,WAAU,SAAS;AACnB,WAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB,WAAU,SAAS;AACnB,WAAU,SAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB;AACA;AACA;AACA,kBAAiB,aAAa;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,QAAQ;AAClB,WAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA,qBAAoB,kBAAkB,aAAa,EAAE;AACrD,qBAAoB,kBAAkB,aAAa,EAAE;AACrD,qBAAoB,kBAAkB,aAAa,EAAE;AACrD,qBAAoB,kBAAkB,aAAa,EAAE;AACrD,oBAAmB,YAAY;AAC/B,WAAU,iDAAiD;AAC3D;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;;;;;;uHCnRD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,6DAA4D,QAAQ,SAAS,aAAa,cAAc;AACxG;AACA;AACA,4DAA2D;AAC3D,2FAA0F;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,2BAA0B,yBAAyB;AACnD,EAAC;;AAED;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;;;oHC3JD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA,oCAAmC;AACnC,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAoD,aAAa,aAAa;AAC9E,iEAAgE,oBAAoB,YAAY;AAChG;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE,oBAAoB,WAAW,aAAa,cAAc;AAC9H;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;;;;;;iECxKD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,yBAAwB,uBAAuB;AAC/C,MAAK;;AAEL;AACA;AACA,yBAAwB,sBAAsB;AAC9C,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,qCAAqC;AAC9C;AACA;AACA,cAAa;AACb,UAAS;AACT,OAAM;;AAEN;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;;;;;;iECtfD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,uCAAsC,kBAAkB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,+E,4CAAA;AACA,6CAA4C,iBAAiB;AAC7D;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB,sEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA,cAAa;AACb,U;yHAAS;;AAET,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,+E,4CAAA;AACA,wDAAuD,WAAW;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb,U;yHAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,oBAAoB;AAC1D;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2CAA0C,iDAAiD;AAC3F;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,yBAAwB,uBAAuB;AAC/C,MAAK;;AAEL;AACA;AACA,yBAAwB,sBAAsB;AAC9C,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;;;;;;;;;;uHCxVD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA,qDAAoD,2CAA2C,EAAE;AACjG;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gEAA+D;AAC/D;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA,IAAG","file":"login.bundled.js","sourcesContent":["\nvar jQuery = require( 'jquery' ),\n    $ = jQuery,\n    PANEL = require( 'layout/panel' ),\n    _l = require( 'utils/localization' ),\n    PAGE = require( 'layout/page' );\n\nwindow.app = function app( options, bootstrapped ){\n    console.debug( 'building app:', options, bootstrapped );\n\n    // TODO: remove iframe for user login (at least) and render login page from here\n    // then remove this redirect\n    if( !options.show_welcome_with_login ){\n        window.location.href = Galaxy.root + 'user/login?use_panels=True';\n        return;\n    }\n\n    var loginPage = new PAGE.PageLayoutView( _.extend( options, {\n        el      : 'body',\n        center  : new PANEL.CenterPanel({ el : '#center' }),\n        right   : new PANEL.RightPanel({\n            title : _l( 'Login required' ),\n            el : '#right'\n        }),\n    }));\n\n    $(function(){\n        // TODO: incorporate *actual* referrer/redirect info as the original page does\n        var loginUrl = Galaxy.root + 'user/login?redirect=' + encodeURI( Galaxy.root );\n        loginPage.render();\n\n        // welcome page (probably) needs to remain sandboxed\n        loginPage.center.$( '#galaxy_main' ).prop( 'src', options.welcome_url );\n\n        loginPage.right.$( '.unified-panel-body' )\n            .css( 'overflow', 'hidden' )\n            .html( '<iframe src=\"' + loginUrl + '\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>' );\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/apps/login.js\n ** module id = 0\n ** module chunks = 6\n **/","define([], function() {\n\nvar View = Backbone.View.extend({\n\n    // base element\n    elMain: 'body',\n    \n    // defaults options\n    optionsDefault: {\n        title            : 'ui-modal',\n        body             : '',\n        backdrop         : true,\n        height           : null,\n        width            : null,\n        closing_events   : false,\n        closing_callback : null,\n        title_separator  : true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize : function(options) {\n        if (options){\n            this._create(options);\n        }\n    },\n    \n    // adds and displays a new frame/window\n    show: function(options) {\n        // create\n        this.initialize(options);\n        \n        // fix height\n        if (this.options.height){\n            this.$body.css('height', this.options.height);\n            this.$body.css('overflow', 'hidden');\n        } else {\n            this.$body.css('max-height', $(window).height() / 2);\n        }\n\n        // fix width\n        if (this.options.width) {\n            this.$dialog.css('width', this.options.width);\n        }\n\n        // show\n        if (this.visible) {\n            this.$el.show();\n        } else {\n            this.$el.fadeIn('fast');\n        }\n\n        // set visible flag\n        this.visible = true;\n    },\n\n    // hide\n    hide: function() {\n        this.visible = false;\n        this.$el.fadeOut('fast');\n        if (this.options.closing_callback){\n            this.options.closing_callback();\n        }\n    },\n\n    // enable buttons\n    enableButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).prop('disabled', false);\n    },\n\n    // disable buttons\n    disableButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).prop('disabled', true);\n    },\n    \n    // show buttons\n    showButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).show();\n    },\n\n    // hide buttons\n    hideButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).hide();\n    },\n    \n    // get button\n    getButton: function(name) {\n        var button_id = this.buttonList[name];\n        return this.$buttons.find('#' + button_id);\n    },\n    \n    // returns scroll top for body element\n    scrollTop: function() {\n        return this.$body.scrollTop();\n    },\n\n    // create\n    _create: function(options) {\n        // link this\n        var self = this;\n        \n        // configure options\n        this.options = _.defaults(options, this.optionsDefault);\n        \n        // check for progress bar request\n        if (this.options.body == 'progress'){\n            this.options.body = $('<div class=\"progress progress-striped active\"><div class=\"progress-bar progress-bar-info\" style=\"width:100%\"></div></div>');\n        }\n            \n        // remove former element\n        if (this.$el) {\n            // remove element\n            this.$el.remove();\n            \n            // remove escape event\n            $(document).off('keyup.ui-modal');\n        }\n        \n        // create new element\n        this.setElement(this._template(this.options.title));\n        \n        // link elements\n        this.$dialog = (this.$el).find('.modal-dialog');\n        this.$body = (this.$el).find('.modal-body');\n        this.$footer  = (this.$el).find('.modal-footer');\n        this.$buttons = (this.$el).find('.buttons');\n        this.$backdrop = (this.$el).find('.modal-backdrop');\n        \n        // append body\n        this.$body.html(this.options.body);\n        \n        // configure background\n        if (!this.options.backdrop){\n            this.$backdrop.removeClass('in');\n        }\n                        \n        // append buttons\n        if (this.options.buttons) {\n            // reset button list\n            this.buttonList = {};\n            var counter = 0;\n            $.each(this.options.buttons, function(name, value) {\n                var button_id = 'button-' + counter++;\n                self.$buttons.append($('<button id=\"' + button_id + '\"></button>').text(name).click(value)).append(\" \");\n                self.buttonList[name] = button_id;\n            });\n        } else {\n            // hide footer\n            this.$footer.hide();\n        }\n        \n        // append to main element\n        $(this.elMain).append($(this.el));\n\n        // bind additional closing events\n        if (this.options.closing_events) {\n            // bind the ESC key to hide() function\n            $(document).on('keyup.ui-modal', function(e) {\n                if (e.keyCode == 27) {\n                    self.hide();\n                }\n            });\n            \n            // hide modal if background is clicked\n            this.$el.find('.modal-backdrop').on('click', function() { self.hide(); });\n        }\n\n        // removes the default separator line\n        if (!this.options.title_separator) {\n            this.$('.modal-header').css({ 'border': 'none', 'padding-bottom': '0px' });\n        }\n    },\n    \n    // fill regular modal template\n    _template: function(title) {\n        return  '<div class=\"ui-modal modal\">' +\n                    '<div class=\"modal-backdrop fade in\" style=\"z-index: -1;\"></div>' +\n                    '<div class=\"modal-dialog\">' +\n                        '<div class=\"modal-content\">' +\n                            '<div class=\"modal-header\">' +\n                                '<button type=\"button\" class=\"close\" style=\"display: none;\">&times;</button>' +\n                                '<h4 class=\"title\">' + title + '</h4>' +\n                            '</div>' +\n                            '<div class=\"modal-body\" style=\"position: static;\"></div>' +\n                            '<div class=\"modal-footer\">' +\n                                '<div class=\"buttons\" style=\"float: right;\"></div>' +\n                            '</div>' +\n                        '</div' +\n                    '</div>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View : View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-modal.js\n ** module id = 14\n ** module chunks = 0 6\n **/","// dependencies\ndefine([], function() {\n\n// frame manager\nvar View = Backbone.View.extend({\n    // defaults inputs\n    options: {\n        // default frame size\n        frame: {\n            cols : 6,\n            rows : 3\n        },\n\n        // maximum number of rows\n        rows: 1000,\n\n        // cell size in px\n        cell: 130,\n\n        // margin\n        margin: 5,\n\n        // scroll speed\n        scroll: 5,\n\n        // minimum top\n        top_min: 40,\n\n        // maximum number of frames\n        frame_max: 9,\n\n        // visible\n        visible: true,\n\n        // onchange\n        onchange: null\n    },\n\n    // number of columns\n    cols: 0,\n\n    // scroll/element top\n    top: 0,\n\n    // viewport scrolling state\n    top_max: 0,\n\n    // frame z-index\n    frame_z : 0,\n\n    // frame counter\n    frame_counter: 0,\n\n    // frame counter\n    frame_counter_id: 0,\n\n    // frame list\n    frame_list: [],\n\n    // frame shadow\n    frame_shadow: null,\n\n    // frame panel visible\n    visible: null,\n\n    // initialize\n    initialize : function(options) {\n        // add to masthead menu\n        var self = this;\n\n        // read in defaults\n        if (options) {\n            this.options = _.defaults(options, this.options);\n        }\n\n        // set visibility\n        this.visible = this.options.visible;\n\n        // initialize top\n        this.top = this.top_max = this.options.top_min;\n\n        // create\n        this.setElement(this._template());\n\n        // load background\n        $(this.el).append(this._templateBackground());\n\n        // load menu buttons\n        $(this.el).append(this._templateMenu());\n\n        // load to main frame\n        $(this.el_main).append($(this.el));\n\n        //\n        // define shadow frame\n        //\n        var id_shadow = '#frame-shadow';\n\n        // add shadow template\n        $(this.el).append(this._templateShadow(id_shadow.substring(1)));\n\n        // initialize frame\n        this.frame_shadow = {\n            id              : id_shadow,\n            screen_location : {},\n            grid_location   : {},\n            grid_rank       : null,\n            grid_lock       : false\n        };\n\n        // initialize size\n        this._frameResize(this.frame_shadow, {width: 0, height: 0});\n\n        // add shadow to frame list\n        this.frame_list[id_shadow] = this.frame_shadow;\n\n        // initialize panel\n        this._panelRefresh();\n\n        // apply visibility\n        if (!this.visible) {\n            this.hide();\n        } else {\n            this.show();\n        }\n\n        // catch window resize event\n        var self = this;\n        $(window).resize(function () {\n            if (self.visible)\n                self._panelRefresh();\n        });\n    },\n\n    /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  type: 'url' or 'other' ; if 'url', 'content' is treated as a URL and loaded into an iframe; \n     *        if 'other', content is treated as a function or raw HTML. content function is passed a single \n     *        argument that is the frame's content DOM element\n     *  content: the content to be loaded into the frame.\n     */\n    add: function(options) {\n        // frame default options\n        var frameOptions = {\n            title: '',\n            content: null,\n            target: '',\n            type: null\n        };\n\n        // read in defaults\n        if (options) {\n            options = _.defaults(options, frameOptions);\n        } else {\n            options = frameOptions;\n        }\n\n        // check for content\n        if(!options.content) {\n            return;\n        }\n\n        // check for number of frames\n        if (this.frame_counter >= this.options.frame_max) {\n            alert(\"You have reached the maximum number of allowed frames (\" + this.options.frame_max + \").\");   \n            return;\n        }\n\n        // generate frame identifier\n        var frame_id = '#frame-' + (this.frame_counter_id++);\n\n        // check if frame exists\n        if ($(frame_id).length !== 0) {\n            alert(\"This frame already exists. This page might contain multiple frame managers.\");\n            return;\n        }\n\n        // reset top\n        this.top = this.options.top_min;\n\n        // append\n        var $frame_el = null;\n        if (options.type === 'url') {\n            $frame_el = $(this._templateFrameUrl(frame_id.substring(1), options.title, options.content));\n        } else if (options.type === 'other') {\n            $frame_el = $(this._templateFrame(frame_id.substring(1), options.title));\n\n            // Load content into frame.\n            var content_elt = $frame_el.find('.f-content');\n            if (_.isFunction(options.content)) {\n                options.content(content_elt);\n            }\n            else {\n                content_elt.append(options.content);\n            }\n        }\n        $(this.el).append($frame_el);\n\n        // construct a new frame\n        var frame = {\n            id              : frame_id,\n            screen_location : {},\n            grid_location   : {},\n            grid_rank       : null,\n            grid_lock       : false\n        };\n\n        // set dimensions\n        options.width   = this._toPixelCoord('width', this.options.frame.cols);\n        options.height  = this._toPixelCoord('height', this.options.frame.rows);\n\n        // default z-index\n        this.frame_z = parseInt($(frame.id).css('z-index'));\n\n        // add to frame list\n        this.frame_list[frame_id] = frame;\n\n        // increase frame counter\n        this.frame_counter++;\n\n        // resize\n        this._frameResize(frame, {width: options.width, height: options.height});\n\n        // place frame\n        this._frameInsert(frame, {top: 0, left: 0}, true);\n\n        // show frames if hidden\n        if (!this.visible) {\n            this.show();\n        }\n    },\n\n    // show panel\n    show: function() {\n        // show\n        this.visible = true;\n\n        // show\n        this.$el.find(\".frame\").fadeIn('fast');\n\n        // hide shadow\n        this.$el.find(this.frame_shadow.id).hide();\n\n        // show background\n        this.$el.find(\".frame-background\").show();\n\n        // show panel\n        this._panelRefresh();\n\n        // refresh\n        this._menuRefresh();\n    },\n\n    // hide panel\n    hide: function() {\n        // make sure that no event is currently processing\n        if (this.event.type !== null)\n            return;\n\n        // hide\n        this.visible = false;\n\n        // hide \n        this.$el.find(\".frame\").fadeOut('fast');\n\n        // hide background\n        this.$el.find(\".frame-background\").hide();\n\n        // hide menu\n        this.$el.find(\".frame-menu\").hide();\n\n        // refresh\n        this._menuRefresh();\n    },\n\n    // length\n    length: function() {\n        return this.frame_counter;\n    },\n\n    // set onchange event\n    setOnChange: function(callback) {\n        this.options.onchange = callback;\n    },\n\n    /*\n        EVENT HANDLING\n    */\n\n    // event\n    event: {\n        type    : null,\n        target  : null,\n        xy      : null\n    },\n\n    // events\n    events: {\n        // global frame events\n        'mousemove'                         : '_eventFrameMouseMove',\n        'mouseup'                           : '_eventFrameMouseUp',\n        'mouseleave'                        : '_eventFrameMouseUp',\n        'mousewheel'                        : '_eventPanelScroll',\n        'DOMMouseScroll'                    : '_eventPanelScroll',\n\n        // events fixed to elements\n        'mousedown .frame'                  : '_eventFrameMouseDown',\n        'mousedown .frame-background'       : '_eventHide',\n        'mousedown .frame-scroll-up'        : '_eventPanelScroll_up',\n        'mousedown .frame-scroll-down'      : '_eventPanelScroll_down',\n        'mousedown .f-close'                : '_eventFrameClose',\n        'mousedown .f-pin'                  : '_eventFrameLock'\n    },\n\n    // drag start\n    _eventFrameMouseDown: function (e) {\n        // skip if event is already active\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // check for drag event\n        if ($(e.target).hasClass('f-header') || $(e.target).hasClass('f-title')) {\n            this.event.type = 'drag';\n        }\n\n        // check for resize event\n        if ($(e.target).hasClass('f-resize')) {\n            this.event.type = 'resize';\n        }\n\n        // skip if no event has to be handled\n        if (this.event.type === null) {\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // identify frame\n        this.event.target = this._frameIdentify(e.target);\n\n        // check if frame is locked\n        if (this.event.target.grid_lock) {\n            this.event.type = null;\n            return;\n        }\n\n        // backup event details\n        this.event.xy = {\n            x: e.originalEvent.pageX,\n            y: e.originalEvent.pageY\n        };\n\n        // prepare drag/resize\n        this._frameDragStart(this.event.target);\n    },\n\n    // mouse move event\n    _eventFrameMouseMove: function (e) {\n        // check\n        if (this.event.type != 'drag' && this.event.type != 'resize') {\n            return;\n        }\n\n        // current position\n        var event_xy_new = {\n            x : e.originalEvent.pageX,\n            y : e.originalEvent.pageY\n        };\n\n        // position delta\n        var event_xy_delta = {\n            x : event_xy_new.x - this.event.xy.x,\n            y : event_xy_new.y - this.event.xy.y\n        };\n\n        // update\n        this.event.xy = event_xy_new;\n\n        // object position / size\n        var p = this._frameScreen (this.event.target);\n\n        // resize event\n        if (this.event.type == 'resize') {\n            // update\n            p.width  += event_xy_delta.x;\n            p.height += event_xy_delta.y;\n\n            // check size\n            var min_dim = this.options.cell - this.options.margin - 1;\n            p.width = Math.max(p.width, min_dim);\n            p.height = Math.max(p.height, min_dim);\n\n            // apply resize to frame\n            this._frameResize(this.event.target, p);\n\n            // break down to grid coordinates\n            p.width = this._toGridCoord('width', p.width) + 1;\n            p.height = this._toGridCoord('height', p.height) + 1;\n\n            // transfer back to pixels\n            p.width = this._toPixelCoord('width', p.width);\n            p.height = this._toPixelCoord('height', p.height);\n\n            // apply\n            this._frameResize(this.frame_shadow, p);\n\n            // fix position\n            this._frameInsert(this.frame_shadow, {\n                top     : this._toGridCoord('top', p.top),\n                left    : this._toGridCoord('left', p.left)\n            });\n        }\n\n        // drag event\n        if (this.event.type == 'drag') {\n            // update\n            p.left  += event_xy_delta.x;\n            p.top   += event_xy_delta.y;\n\n            // apply\n            this._frameOffset(this.event.target, p);\n\n            // get location of shadow\n            var l = {\n                top     : this._toGridCoord('top', p.top),\n                left    : this._toGridCoord('left', p.left)\n            };\n\n            // increase priority of current frame\n            if (l.left !== 0) {\n                l.left++;\n            }\n\n            // fix position\n            this._frameInsert(this.frame_shadow, l);\n        }\n    },\n\n    // mouse up\n    _eventFrameMouseUp: function (e) {\n        // check\n        if (this.event.type != 'drag' && this.event.type != 'resize') {\n            return;\n        }\n\n        // stop\n        this._frameDragStop(this.event.target);\n\n        // reset event\n        this.event.type = null;\n    },\n\n    // drag start\n    _eventFrameClose: function (e) {\n        // check\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // get frame\n        var frame = this._frameIdentify(e.target);\n        var self  = this;\n\n        // fade out\n        $(frame.id).fadeOut('fast', function() {\n            // remove element\n            $(frame.id).remove();\n\n            // remove from dictionary\n            delete self.frame_list[frame.id];\n\n            // reduce frame counter\n            self.frame_counter--;\n\n            // reload\n            self._panelRefresh(true);\n\n            // refresh scroll state once all animations completed\n            self._panelAnimationComplete();\n\n            // hide if no frames left\n            if (self.visible && self.frame_counter == 0)\n                self.hide();\n        });\n    },\n\n    // drag start\n    _eventFrameLock: function (e) {\n        // check\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // get frame\n        var frame = this._frameIdentify(e.target);\n\n        // check\n        if (frame.grid_lock) {\n            // unlock\n            frame.grid_lock = false;\n\n            // remove class\n            $(frame.id).find('.f-pin').removeClass('toggle');\n            $(frame.id).find('.f-header').removeClass('f-not-allowed');\n            $(frame.id).find('.f-title').removeClass('f-not-allowed');\n            $(frame.id).find('.f-resize').show();\n            $(frame.id).find('.f-close').show();\n        } else {\n            // lock\n            frame.grid_lock = true;\n\n            // add class\n            $(frame.id).find('.f-pin').addClass('toggle');\n            $(frame.id).find('.f-header').addClass('f-not-allowed');\n            $(frame.id).find('.f-title').addClass('f-not-allowed');\n            $(frame.id).find('.f-resize').hide();\n            $(frame.id).find('.f-close').hide();\n        }\n    },\n\n    // show/hide panel\n    _eventHide: function (e) {\n        // check\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // hide panel\n        this.hide();\n    },\n\n    /**\n     * Fired when scrolling occurs on panel.\n     */\n    _eventPanelScroll: function(e) {\n        // check\n        if (this.event.type !== null || !this.visible) {\n            return;\n        }\n\n        // Stop propagation if scrolling is happening inside a frame.\n        // TODO: could propagate scrolling if at top/bottom of frame.\n        var frames = $(e.srcElement).parents('.frame')\n        if (frames.length !== 0) {\n            e.stopPropagation();\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // get wheel delta\n        var delta = e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3;\n\n        // refresh panel\n        this._panelScroll(delta);\n    },\n\n    // scroll up\n    _eventPanelScroll_up: function(e) {\n        // check\n        if (this.event.type !== null)\n            return;\n  \n        // prevent\n        e.preventDefault();\n\n        // scroll up\n        this._panelScroll(-this.options.scroll);\n    },\n\n    // scroll down\n    _eventPanelScroll_down: function(e) {\n        // check\n        if (this.event.type !== null)\n            return;\n\n        // prevent\n        e.preventDefault();\n\n        // scroll down\n        this._panelScroll(this.options.scroll);\n    },\n\n    /*\n        FRAME EVENTS SUPPORT\n    */\n\n    // identify\n    _frameIdentify: function(target) {\n        return this.frame_list['#' + $(target).closest('.frame').attr('id')];\n    },\n\n    // drag start\n    _frameDragStart : function (frame) {\n        // set focus\n        this._frameFocus(frame, true);\n\n        // get current dimensions\n        var p = this._frameScreen (frame);\n\n        // initialize shadow\n        this._frameResize(this.frame_shadow, p);\n        this._frameGrid(this.frame_shadow, frame.grid_location);\n\n        // reset location\n        frame.grid_location = null;\n\n        // show shadow\n        $(this.frame_shadow.id).show();\n\n        // load frame cover\n        $('.f-cover').show();\n    },\n\n    // drag stop\n    _frameDragStop : function (frame) {\n        // remove focus\n        this._frameFocus(frame, false);\n\n        // get new dimensions\n        var p = this._frameScreen(this.frame_shadow);\n\n        // update frame\n        this._frameResize(frame, p);\n        this._frameGrid(frame, this.frame_shadow.grid_location, true);\n\n        // reset location of shadow\n        this.frame_shadow.grid_location = null;\n\n        // hide shadow\n        $(this.frame_shadow.id).hide();\n\n        // hide frame cover\n        $('.f-cover').hide();\n\n        // refresh scroll state once all animations completed\n        this._panelAnimationComplete();\n    },\n\n    /*\n        GRID/PIXEL CONVERTER\n    */\n\n    // converts a pixel coordinate to grids\n    _toGridCoord: function (type, px) {\n        var sign = (type == 'width' || type == 'height') ? 1 : -1;\n        if (type == 'top') px -= this.top;\n        return parseInt((px + sign * this.options.margin) / this.options.cell, 10);\n    },\n    \n    // converts a grid coordinate to pixels\n    _toPixelCoord: function (type, g) {\n        var sign = (type == 'width' || type == 'height') ? 1 : -1;\n        var px = (g * this.options.cell) - sign * this.options.margin;\n        if (type == 'top') px += this.top;\n        return px;\n    },\n\n    // get grid coordinates\n    _toGrid: function (px) {\n        return {\n            top     : this._toGridCoord('top', px.top),\n            left    : this._toGridCoord('left', px.left),\n            width   : this._toGridCoord('width', px.width),\n            height  : this._toGridCoord('height', px.height)\n        };\n    },\n\n    // get pixel coordinates\n    _toPixel: function(g) {\n        return {\n            top     : this._toPixelCoord('top', g.top),\n            left    : this._toPixelCoord('left', g.left),\n            width   : this._toPixelCoord('width', g.width),\n            height  : this._toPixelCoord('height', g.height)\n        };\n    },\n\n    /* \n        COLLISION DETECTION\n    */\n\n    // check collision\n    _isCollision: function(g) {\n        // is collision pair\n        function is_collision_pair (a, b) {\n            return !(a.left > b.left + b.width - 1 || a.left + a.width - 1 < b.left ||\n                     a.top > b.top + b.height  - 1 || a.top + a.height - 1 < b.top);\n        }\n\n        // search\n        for (var i in this.frame_list) {\n            // get frame\n            var frame = this.frame_list[i];\n\n            // skip\n            if (frame.grid_location === null)\n                continue;\n\n            // check if g collides with frame\n            if (is_collision_pair (g, frame.grid_location))\n                return true;\n        }\n\n        // return\n        return false;\n    },\n\n    // location/grid rank\n    _locationRank: function(loc) {\n        return (loc.top * this.cols) + loc.left;\n    },\n\n    /*\n        ONSCREEN MENU\n    */\n\n    // update frame counter\n    _menuRefresh: function() {\n        // scroll up possible?\n        if (this.visible) {\n            if (this.top == this.options.top_min)\n                $(\".frame-scroll-up\").hide();\n            else\n                $(\".frame-scroll-up\").show();\n\n            // scroll down possible?\n            if (this.top == this.top_max)\n                $(\".frame-scroll-down\").hide();\n            else\n                $(\".frame-scroll-down\").show();\n        }\n\n        // trigger onchange\n        if (this.options.onchange) {\n            this.options.onchange();\n        }\n    },\n\n    /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n    // panel on animation complete / frames not moving\n    _panelAnimationComplete: function() {\n        var self = this;\n        $(\".frame\").promise().done(function() {self._panelScroll(0, true)});\n    },\n\n    // refresh panel\n    _panelRefresh: function(animate) {\n        // get current size\n        this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n\n        // recalculate frame positions\n        this._frameInsert(null, null, animate);\n    },\n\n    // update scroll\n    _panelScroll: function(delta, animate) {\n        // new top value\n        var top_new = this.top - this.options.scroll * delta;\n\n        // update top\n        top_new = Math.max(top_new, this.top_max);\n        top_new = Math.min(top_new, this.options.top_min);\n\n        // update screen if necessary\n        if (this.top != top_new) {\n            // update screen\n            for (var i in this.frame_list) {\n                // get frame\n                var frame = this.frame_list[i];\n\n                // skip\n                if (frame.grid_location !== null) {\n                    var screen_location = {\n                        top  : frame.screen_location.top - (this.top - top_new),\n                        left : frame.screen_location.left\n                    }\n                    this._frameOffset(frame, screen_location, animate);\n                }\n            }\n\n            // update top value\n            this.top = top_new;\n        }\n\n        // refresh\n        this._menuRefresh();\n    },\n\n    /*\n        FRAME FUNCTIONS\n    */\n\n    // frame insert at given location\n    _frameInsert: function(frame, new_loc, animate) {\n        // define\n        var place_list = [];\n\n        // frame to place\n        if (frame) {\n            // reset grid location\n            frame.grid_location = null;\n\n            // set first one to be placed\n            place_list.push([frame, this._locationRank(new_loc)]);\n        }\n\n        // search\n        var i = null;\n        for (i in this.frame_list) {\n            // get frame\n            var f = this.frame_list[i];\n\n            // check\n            if (f.grid_location !== null && !f.grid_lock) {\n                // reset grid location\n                f.grid_location = null;\n\n                // set up for placement\n                place_list.push([f, f.grid_rank]);\n            }\n        }\n\n        // sort place list by rank\n        place_list.sort(function(a, b) {\n            var i = a[1];\n            var j = b[1];\n            return i < j ? -1 : (i > j ? 1 : 0);\n        });\n\n        // place\n        for (i = 0; i < place_list.length; i++) {\n            this._framePlace(place_list[i][0], animate);\n        }\n\n        // identify maximum viewport size\n        this.top_max = 0;\n        for (var i in this.frame_list) {\n            // get frame\n            var frame = this.frame_list[i];\n\n            // skip\n            if (frame.grid_location !== null)\n                this.top_max = Math.max(this.top_max, frame.grid_location.top + frame.grid_location.height);\n        }\n\n        // mesh maximum top with window size and margin\n        this.top_max = $(window).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n\n        // fix value\n        this.top_max = Math.min(this.top_max, this.options.top_min);\n\n        // panel menu\n        this._menuRefresh();\n    },\n\n    // naive frame place\n    _framePlace: function(frame, animate) {\n        // reset grid location\n        frame.grid_location = null;\n\n        // grid coordinates of new frame\n        var g = this._toGrid(this._frameScreen(frame));\n\n        // try grid coordinates\n        var done = false;\n        for (var i = 0; i < this.options.rows; i++) {\n            // ensure that the first grid column is checked despite limited window space\n            for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n                // coordinates\n                g.top   = i;\n                g.left  = j;\n\n                // no collision\n                if (!this._isCollision(g)) {\n                    done = true;\n                    break;\n                }\n            }\n\n            // break\n            if (done) {\n                break;\n            }\n        }\n\n        // check if valid spot was found\n        if (done) {\n            this._frameGrid(frame, g, animate);\n        } else {\n            console.log(\"Grid dimensions exceeded.\");\n        }\n    },\n\n    // focus\n    _frameFocus: function(frame, has_focus) {\n        // get new z-value\n        var z = this.frame_z + (has_focus ? 1 : 0);\n\n        // update\n        $(frame.id).css('z-index', z);\n    },\n\n    // new left/top position frame\n    _frameOffset: function(frame, p, animate) {\n        // update screen location\n        frame.screen_location.left = p.left;\n        frame.screen_location.top = p.top;\n\n        // animate\n        if (animate) {\n            // set focus on animated\n            this._frameFocus(frame, true);\n\n            // prepare for callback\n            var self = this;\n\n            // animate and remove focus\n            $(frame.id).animate({top: p.top, left: p.left}, 'fast', function() {\n                self._frameFocus(frame, false);\n            });\n        } else {\n            $(frame.id).css({top: p.top, left: p.left});\n        }\n    },\n\n    // resize frame\n    _frameResize: function(frame, p) {\n        // update css\n        $(frame.id).css({width: p.width, height: p.height});\n\n        // update descriptor\n        frame.screen_location.width = p.width;\n        frame.screen_location.height = p.height;\n    },\n\n    // new grid location\n    _frameGrid: function (frame, l, animate) {\n        // update grid location\n        frame.grid_location = l;\n\n        // place frame\n        this._frameOffset(frame, this._toPixel(l), animate);\n\n        // update grid rank\n        frame.grid_rank = this._locationRank(l);\n    },\n\n    // get frame dimensions\n    _frameScreen: function(frame) {\n        var p = frame.screen_location;\n        return {top: p.top, left: p.left, width: p.width, height: p.height};\n    },\n\n    /*\n        HTML TEMPLATES\n    */\n\n    // main element\n    _template: function() {\n        return  '<div class=\"galaxy-frame\"></div>';\n    },\n\n    // fill regular frame template\n    _templateFrame: function(id, title) {\n        // check title\n        if (!title)\n            title = '';\n\n        // load template\n        return  '<div id=\"' + id + '\" class=\"frame corner\">' +\n                    '<div class=\"f-header corner\">' +\n                        '<span class=\"f-title\">' + title + '</span>' +\n                        '<span class=\"f-icon f-close fa fa-trash-o\"></span>' +\n                        '<span class=\"f-icon f-pin fa fa-thumb-tack\"></span>' +\n                    '</div>' +\n                    '<div class=\"f-content\">' +\n                        '<div class=\"f-cover\"></div>' +\n                    '</div>' +\n                    '<span class=\"f-resize f-icon corner fa fa-expand\"></span>' +\n                '</div>';\n    },\n\n    // fill regular frame template\n    _templateFrameUrl: function(id, title, url) {\n        // url\n        if (url.indexOf('?') == -1)\n            url += '?';\n        else\n            url += '&';\n        url += 'widget=True';\n\n        // element\n        var $el = $(this._templateFrame(id, title));\n        $el.find('.f-content').append('<iframe scrolling=\"auto\" class=\"f-iframe\" src=\"' + url + '\"></iframe>');\n\n        // load template\n        return $el;\n    },\n\n    // fill shadow template\n    _templateShadow: function(id) {\n        return '<div id=\"' + id + '\" class=\"frame-shadow corner\"></div>';\n    },\n\n    // fill background template in order to cover underlying iframes\n    _templateBackground: function() {\n        return '<div class=\"frame-background\"></div>';\n    },\n\n    // fill menu button template\n    _templateMenu: function() {\n        return  '<div class=\"frame-scroll-up frame-menu fa fa-chevron-up fa-2x\"></div>' +\n                '<div class=\"frame-scroll-down frame-menu fa fa-chevron-down fa-2x\"></div>';\n    }\n});\n\n// return\nreturn {\n    View: View\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-frames.js\n ** module id = 15\n ** module chunks = 0 6\n **/","/**\n * Galaxy utilities comprises small functions, which at this point\n * do not require their own classes/files\n*/\n\n// dependencies\ndefine([], function() {\n\n/** Traverse through json\n*/\nfunction deepeach(dict, callback) {\n    for (var i in dict) {\n        var d = dict[i];\n        if (d && typeof(d) == \"object\") {\n            callback(d);\n            deepeach(d, callback);\n        }\n    }\n}\n\n/**\n * Check if a string is a json string\n * @param{String}   text - Content to be validated\n */\nfunction isJSON(text) {\n    return /^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').\n        replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n        replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''));\n};\n\n/**\n * Sanitize/escape a string\n * @param{String}   content - Content to be sanitized\n */\nfunction sanitize(content) {\n    return $('<div/>').text(content).html();\n};\n\n/**\n * Validate atomic values or list of values\n * usually used for selectable options\n * @param{String}   value - Value or list to be validated\n */\nfunction validate (value) {\n    if (!(value instanceof Array)) {\n        value = [value];\n    }\n    if (value.length === 0) {\n        return false;\n    }\n    for (var i in value) {\n        if (['__null__', '__undefined__', null, undefined].indexOf(value[i]) > -1) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * Convert list to pretty string\n * @param{String}   lst - List of strings to be converted in human readable list sentence\n */\nfunction textify(lst) {\n    var lst = lst.toString();\n    if (lst) {\n        lst = lst.replace(/,/g, ', ');\n        var pos = lst.lastIndexOf(', ');\n        if (pos != -1) {\n            lst = lst.substr(0, pos) + ' or ' + lst.substr(pos+1);\n        }\n        return lst;\n    }\n    return '';\n};\n\n/**\n * Request handler for GET\n * @param{String}   url     - Url request is made to\n * @param{Function} success - Callback on success\n * @param{Function} error   - Callback on error\n * @param{Boolean}  cache   - Use cached data if available\n */\nfunction get (options) {\n    top.__utils__get__ = top.__utils__get__ || {};\n    if (options.cache && top.__utils__get__[options.url]) {\n        options.success && options.success(top.__utils__get__[options.url]);\n        console.debug('utils.js::get() - Fetching from cache [' + options.url + '].');\n    } else {\n        request({\n            url     : options.url,\n            data    : options.data,\n            success : function(response) {\n                top.__utils__get__[options.url] = response;\n                options.success && options.success(response);\n            },\n            error : function(response) {\n                options.error && options.error(response);\n            }\n        });\n    }\n};\n\n/**\n * Request handler\n * @param{String}   method  - Request method ['GET', 'POST', 'DELETE', 'PUT']\n * @param{String}   url     - Url request is made to\n * @param{Object}   data    - Data send to url\n * @param{Function} success - Callback on success\n * @param{Function} error   - Callback on error\n */\nfunction request (options) {\n    // prepare ajax\n    var ajaxConfig = {\n        contentType : 'application/json',\n        type        : options.type || 'GET',\n        data        : options.data || {},\n        url         : options.url\n    }\n\n    // encode data into url\n    if (ajaxConfig.type == 'GET' || ajaxConfig.type == 'DELETE') {\n        if (ajaxConfig.url.indexOf('?') == -1) {\n            ajaxConfig.url += '?';\n        } else {\n            ajaxConfig.url += '&';\n        }\n        ajaxConfig.url      = ajaxConfig.url + $.param(ajaxConfig.data, true);\n        ajaxConfig.data     = null;\n    } else {\n        ajaxConfig.dataType = 'json';\n        ajaxConfig.url      = ajaxConfig.url;\n        ajaxConfig.data     = JSON.stringify(ajaxConfig.data);\n    }\n\n    // make request\n    $.ajax(ajaxConfig)\n    .done(function(response) {\n        if (typeof response === 'string') {\n            try {\n                response = response.replace('Infinity,', '\"Infinity\",');\n                response = jQuery.parseJSON(response);\n            } catch (e) {\n                console.debug(e);\n            }\n        }\n        options.success && options.success(response);\n    })\n    .fail(function(response) {\n        var response_text = null;\n        try {\n            response_text = jQuery.parseJSON(response.responseText);\n        } catch (e) {\n            response_text = response.responseText;\n        }\n        options.error && options.error(response_text, response);\n    });\n};\n\n/**\n * Read a property value from CSS\n * @param{String}   classname   - CSS class\n * @param{String}   name        - CSS property\n */\nfunction cssGetAttribute (classname, name) {\n    var el = $('<div class=\"' + classname + '\"></div>');\n    el.appendTo(':eq(0)');\n    var value = el.css(name);\n    el.remove();\n    return value;\n};\n\n/**\n * Load a CSS file\n * @param{String}   url - Url of CSS file\n */\nfunction cssLoadFile (url) {\n    if (!$('link[href^=\"' + url + '\"]').length) {\n        $('<link href=\"' + Galaxy.root + url + '\" rel=\"stylesheet\">').appendTo('head');\n    }\n};\n\n/**\n * Safely merge to dictionaries\n * @param{Object}   options         - Target dictionary\n * @param{Object}   optionsDefault  - Source dictionary\n */\nfunction merge (options, optionsDefault) {\n    if (options) {\n        return _.defaults(options, optionsDefault);\n    } else {\n        return optionsDefault;\n    }\n};\n\n\n/**\n * Round floaing point 'number' to 'numPlaces' number of decimal places.\n * @param{Object}   number      a floaing point number\n * @param{Object}   numPlaces   number of decimal places\n */\nfunction roundToDecimalPlaces( number, numPlaces ){\n    var placesMultiplier = 1;\n    for( var i=0; i<numPlaces; i++ ){\n        placesMultiplier *= 10;\n    }\n    return Math.round( number * placesMultiplier ) / placesMultiplier;\n}\n\n// calculate on import\nvar kb = 1024,\n    mb = kb * kb,\n    gb = mb * kb,\n    tb = gb * kb;\n/**\n * Format byte size to string with units\n * @param{Integer}   size           - Size in bytes\n * @param{Boolean}   normal_font    - Switches font between normal and bold\n */\nfunction bytesToString (size, normal_font, numberPlaces) {\n    numberPlaces = numberPlaces !== undefined? numberPlaces: 1;\n    // identify unit\n    var unit = \"\";\n    if (size >= tb){ size = size / tb; unit = 'TB'; } else\n    if (size >= gb){ size = size / gb; unit = 'GB'; } else\n    if (size >= mb){ size = size / mb; unit = 'MB'; } else\n    if (size >= kb){ size = size / kb; unit = 'KB'; } else\n    if (size >  0){ unit = 'b'; }\n    else { return normal_font? '0 b': '<strong>-</strong>'; }\n    // return formatted string\n    var rounded = unit == 'b'? size: roundToDecimalPlaces( size, numberPlaces );\n    if (normal_font) {\n       return  rounded + ' ' + unit;\n    } else {\n        return '<strong>' + rounded + '</strong> ' + unit;\n    }\n};\n\n/**\n * Create a unique id\n */\nfunction uid(){\n    top.__utils__uid__ = top.__utils__uid__ || 0;\n    return 'uid-' + top.__utils__uid__++;\n};\n\n/**\n * Create a time stamp\n */\nfunction time() {\n    var d = new Date();\n    var hours = (d.getHours() < 10 ? \"0\" : \"\") + d.getHours();\n    var minutes = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes()\n    return datetime = d.getDate() + \"/\"\n                + (d.getMonth() + 1)  + \"/\"\n                + d.getFullYear() + \", \"\n                + hours + \":\"\n                + minutes;\n};\n\nreturn {\n    cssLoadFile: cssLoadFile,\n    cssGetAttribute: cssGetAttribute,\n    get: get,\n    merge: merge,\n    bytesToString: bytesToString,\n    uid: uid,\n    time: time,\n    request: request,\n    sanitize: sanitize,\n    textify: textify,\n    validate: validate,\n    deepeach: deepeach,\n    isJSON: isJSON\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/utils/utils.js\n ** module id = 18\n ** module chunks = 0 6\n **/","define([\n    'layout/masthead',\n    'layout/panel',\n    'mvc/ui/ui-modal',\n    'mvc/base-mvc'\n], function( MASTHEAD, PANEL, MODAL, BASE_MVC ) {\n\n// ============================================================================\nvar PageLayoutView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n    _logNamespace : 'layout',\n\n    el : 'body',\n    className : 'full-content',\n\n    _panelIds : [\n        'left', 'center', 'right'\n    ],\n\n    defaultOptions : {\n        message_box_visible : false,\n        message_box_content : '',\n        message_box_class   : 'info',\n\n        show_inactivity_warning : false,\n        inactivity_box_content  : '',\n    },\n\n    initialize : function( options ){\n        this.log( this + '.initialize:', options );\n        _.extend( this, _.pick( options, this._panelIds ) );\n        this.options = _.defaults( _.omit( options, this._panelIds ), this.defaultOptions );\n\n        // TODO: remove globals\n        Galaxy.modal = this.modal = new MODAL.View();\n    },\n\n    /**  */\n    $everything : function(){\n        return this.$( '#everything' );\n    },\n\n    render : function(){\n        this.log( this + '.render:' );\n        this.$el.attr( 'scroll', 'no' );\n        this.$el.html( this.template( this.options ) );\n\n        //TODO: no render on masthead, needs init each time\n        Galaxy.masthead = this.masthead = new MASTHEAD.GalaxyMasthead( _.extend( this.options.config, {\n            el: this.$( '#masthead' ).get(0)\n        }));\n\n        if( this.options.message_box_visible ){\n            this.messageBox( this.options.message_box_content, this.options.message_box_class );\n        }\n        if( this.options.show_inactivity_warning ){\n            this.inactivityWarning( this.options.inactivity_box_content );\n        }\n\n        this.renderPanels();\n        return this;\n    },\n\n    /**  */\n    messageBox : function( content, level ){\n        content = content || '';\n        level = level || 'info';\n        this.$el.addClass( 'has-message-box' );\n        this.$( '#messagebox' )\n            .attr( 'class', 'panel-' + level + '-message' )\n            .html( content )\n            .toggle( !!content );\n        return this;\n    },\n\n    /**  */\n    inactivityWarning : function( content ){\n        var verificationLink = '<a href=\"' + Galaxy.root + 'user/resend_verification\">Resend verification.</a>';\n        this.$el.addClass( 'has-inactivity-box' );\n        this.$( '#inactivebox' )\n            .html( content )\n            .append( ' ' + verificationLink )\n            .toggle( !!content );\n        return this;\n    },\n\n    /**  */\n    renderPanels : function(){\n        var page = this;\n        // TODO: Remove this line after select2 update\n        $( '.select2-hidden-accessible' ).remove();\n        this._panelIds.forEach( function( panelId ){\n            if( _.has( page, panelId ) ){\n                var panelView = page[ panelId ];\n                panelView.setElement( '#' + panelId );\n                panelView.render();\n            }\n        });\n        if( !this.left ){\n            this.center.$el.css( 'left', 0 );\n        }\n        if( !this.right ){\n            this.center.$el.css( 'right', 0 );\n        }\n        return this;\n    },\n\n    /** body template */\n    //TODO: to underscore\n    template: function( options ){\n        //TODO: remove inline styling\n        return [\n            '<div id=\"everything\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\">',\n                '<div id=\"background\"/>',\n                '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\"></div>',\n                '<div id=\"messagebox\" style=\"display: none;\"></div>',\n                '<div id=\"inactivebox\" class=\"panel-warning-message\" style=\"display: none;\"></div>',\n                // content here\n                // TODO: wrapping div\n                this.left?   '<div id=\"left\"/>' : '',\n                this.center? '<div id=\"center\" class=\"inbound\"/>' : '',\n                this.right?  '<div id=\"right\"/>' : '',\n            '</div>',\n            // a dropdown overlay for capturing clicks/drags\n            '<div id=\"dd-helper\" style=\"display: none;\"></div>',\n            // display message when js is disabled\n            '<noscript>',\n                '<div class=\"overlay overlay-background noscript-overlay\">',\n                    '<div>',\n                        '<h3 class=\"title\">Javascript Required for Galaxy</h3>',\n                        '<div>',\n                            'The Galaxy analysis interface requires a browser with Javascript enabled.<br>',\n                            'Please enable Javascript and refresh this page',\n                        '</div>',\n                    '</div>',\n                '</div>',\n            '</noscript>'\n        ].join('');\n    },\n\n    hideSidePanels : function(){\n        if( this.left ){\n            this.left.hide();\n        }\n        if( this.right ){\n            this.right.hide();\n        }\n    },\n\n    toString : function(){ return 'PageLayoutView'; }\n});\n\n// ============================================================================\n    return {\n        PageLayoutView: PageLayoutView\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/layout/page.js\n ** module id = 120\n ** module chunks = 0 6\n **/","define([\n    'utils/utils',\n    'layout/menu',\n    'layout/scratchbook',\n    'mvc/user/user-quotameter',\n], function(Utils, Menu, Scratchbook, QuotaMeter) {\n\n/** Masthead **/\nvar GalaxyMasthead = Backbone.View.extend({\n    // base element\n    el_masthead: '#everything',\n\n    // options\n    options : null,\n\n    // background\n    $background: null,\n\n    // list\n    list: [],\n\n    // initialize\n    initialize : function(options) {\n        // update options\n        this.options = options;\n\n        // HACK: due to body events defined in panel.js\n        $(\"body\").off();\n\n        // define this element\n        this.setElement($(this._template(options)));\n        // add to page\n        $( '#masthead' ).replaceWith( this.$el );\n\n        // assign background\n        this.$background = $(this.el).find('#masthead-background');\n\n        // loop through unload functions if the user attempts to unload the page\n        var self = this;\n        $(window).on('beforeunload', function() {\n            var text = \"\";\n            for (var key in self.list) {\n                if (self.list[key].options.onunload) {\n                    var q = self.list[key].options.onunload();\n                    if (q) text += q + \" \";\n                }\n            }\n            if (text !== \"\") {\n                return text;\n            }\n        });\n\n        // construct default menu options\n        this.menu = Galaxy.menu = new Menu.GalaxyMenu({\n            masthead    : this,\n            config      : this.options\n        });\n\n        // scratchpad\n        this.frame = Galaxy.frame = new Scratchbook.GalaxyFrame({\n            masthead    : this,\n        });\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = new QuotaMeter.UserQuotaMeter({\n            model       : Galaxy.user,\n            el          : this.$( '.quota-meter-container' )\n        }).render();\n    },\n\n    // configure events\n    events: {\n        'click'     : '_click',\n        'mousedown' : function(e) { e.preventDefault() }\n    },\n\n    // adds a new item to the masthead\n    append : function(item) {\n        return this._add(item, true);\n    },\n\n    // adds a new item to the masthead\n    prepend : function(item) {\n        return this._add(item, false);\n    },\n\n    // activate\n    highlight: function(id) {\n        var current = $(this.el).find('#' + id + '> li');\n        if (current) {\n            current.addClass('active');\n        }\n    },\n\n    // adds a new item to the masthead\n    _add : function(item, append) {\n        var $loc = $(this.el).find('#' + item.location);\n        if ($loc){\n            // create frame for new item\n            var $current = $(item.el);\n\n            // configure class in order to mark new items\n            $current.addClass('masthead-item');\n\n            // append to masthead\n            if (append) {\n                $loc.append($current);\n            } else {\n                $loc.prepend($current);\n            }\n\n            // add to list\n            this.list.push(item);\n        }\n\n        // location not found\n        return null;\n    },\n\n    // handle click event\n    _click: function(e) {\n        // close all popups\n        var $all = $(this.el).find('.popup');\n        if ($all) {\n            $all.hide();\n        }\n\n        // open current item\n        var $current = $(e.target).closest('.masthead-item').find('.popup');\n        if ($(e.target).hasClass('head')) {\n            $current.show();\n            this.$background.show();\n        } else {\n            this.$background.hide();\n        }\n    },\n\n    /*\n        HTML TEMPLATES\n    */\n\n    // fill template\n    _template: function(options) {\n        var brand_text = options.brand ? (\"/ \" + options.brand) : \"\" ;\n        return  '<div><div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n                    '<div style=\"position: relative; right: -50%; float: left;\">' +\n                        '<div id=\"navbar\" style=\"display: block; position: relative; right: 50%;\"></div>' +\n                    '</div>' +\n                   '<div class=\"navbar-brand\">' +\n                        '<a href=\"' + options.logo_url + '\">' +\n                            '<img style=\"margin-left: 0.35em;\" border=\"0\" src=\"' + Galaxy.root + 'static/images/galaxyIcon_noText.png\">' +\n                            '<span id=\"brand\"> Galaxy ' + brand_text + '</span>' +\n                        '</a>' +\n                    '</div>' +\n                    '<div class=\"quota-meter-container\"></div>' +\n                    '<div id=\"iconbar\" class=\"iconbar\"></div>' +\n                '</div>' +\n                '<div id=\"masthead-background\" style=\"display: none; position: absolute; top: 33px; width: 100%; height: 100%; z-index: 1010\"></div>' +\n                '</div>';\n    }\n});\n\n// return\nreturn {\n    GalaxyMasthead: GalaxyMasthead\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/layout/masthead.js\n ** module id = 121\n ** module chunks = 0 6\n **/","// dependencies\ndefine([], function() {\n\n/** GalaxyMenu uses the GalaxyMasthead class in order to add menu items and icons to the Masthead **/\nvar GalaxyMenu = Backbone.Model.extend({\n    initialize: function( options ) {\n        this.options = options.config;\n        this.masthead  = options.masthead;\n        this.create();\n    },\n\n    // default menu\n    create: function() {\n        //\n        // Analyze data tab.\n        //\n        var tab_analysis = new GalaxyMastheadTab({\n            id              : 'analysis',\n            title           : 'Analyze Data',\n            content         : '',\n            title_attribute : 'Analysis home view'\n        });\n        this.masthead.append( tab_analysis );\n\n        //\n        // Workflow tab.\n        //\n\n        var workflow_options = {\n            id              : 'workflow',\n            title           : 'Workflow',\n            content         : 'workflow',\n            title_attribute : 'Chain tools into workflows'\n        }\n        if ( !Galaxy.user.id ) {\n            workflow_options.disabled = true; // disable workflows for anonymous users\n        }\n\n        var tab_workflow = new GalaxyMastheadTab( workflow_options );\n        this.masthead.append( tab_workflow );\n\n        //\n        // 'Shared Items' or Libraries tab.\n        //\n        var tab_shared = new GalaxyMastheadTab({\n            id              : 'shared',\n            title           : 'Shared Data',\n            content         : 'library/index',\n            title_attribute : 'Access published resources'\n        });\n\n        tab_shared.add({\n            title   : 'Data Libraries',\n            content : 'library/index'\n        });\n\n        tab_shared.add({\n            title   : 'Data Libraries Beta',\n            content : 'library/list',\n            divider : true\n        });\n\n        tab_shared.add({\n            title   : 'Published Histories',\n            content : 'history/list_published'\n        });\n\n        tab_shared.add({\n            title   : 'Published Workflows',\n            content : 'workflow/list_published'\n\n        });\n\n        tab_shared.add({\n            title   : 'Published Visualizations',\n            content : 'visualization/list_published'\n        });\n\n        tab_shared.add({\n            title   : 'Published Pages',\n            content : 'page/list_published'\n        });\n\n        this.masthead.append(tab_shared);\n\n        //\n        // Lab menu.\n        //\n        if ( this.options.user_requests ) {\n            var tab_lab = new GalaxyMastheadTab({\n                id      : 'lab',\n                title   : 'Lab'\n            });\n            tab_lab.add({\n                title   : 'Sequencing Requests',\n                content : 'requests/index'\n            });\n            tab_lab.add({\n                title   : 'Find Samples',\n                content : 'requests/find_samples_index'\n            });\n            tab_lab.add({\n                title   : 'Help',\n                content : this.options.lims_doc_url\n            });\n            this.masthead.append( tab_lab );\n        }\n\n        //\n        // Visualization tab.\n        //\n\n        var visualization_options = {\n            id              : 'visualization',\n            title           : 'Visualization',\n            content         : 'visualization/list',\n            title_attribute : 'Visualize datasets'\n        }\n\n        // disable visualizations for anonymous users\n        if ( !Galaxy.user.id ) {\n            visualization_options.disabled = true;\n        }\n        var tab_visualization = new GalaxyMastheadTab( visualization_options );\n\n        // add submenu only when user is logged in\n        if ( Galaxy.user.id ) {\n            tab_visualization.add({\n                title   : 'New Track Browser',\n                content : 'visualization/trackster',\n                target  : '_frame'\n            });\n            tab_visualization.add({\n                title   : 'Saved Visualizations',\n                content : 'visualization/list',\n                target  : '_frame'\n            });\n        }\n        this.masthead.append( tab_visualization );\n\n        //\n        // Admin.\n        //\n        if ( Galaxy.user.get( 'is_admin' ) ) {\n            var tab_admin = new GalaxyMastheadTab({\n                id              : 'admin',\n                title           : 'Admin',\n                content         : 'admin',\n                extra_class     : 'admin-only',\n                title_attribute : 'Administer this Galaxy'\n            });\n            this.masthead.append( tab_admin );\n        }\n\n        //\n        // Help tab.\n        //\n        var tab_help = new GalaxyMastheadTab({\n            id              : 'help',\n            title           : 'Help',\n            title_attribute : 'Support, contact, and community hubs'\n        });\n        if ( this.options.biostar_url ){\n            tab_help.add({\n                title   : 'Galaxy Biostar',\n                content : this.options.biostar_url_redirect,\n                target  : '_blank'\n            });\n            tab_help.add({\n                title   : 'Ask a question',\n                content : 'biostar/biostar_question_redirect',\n                target  : '_blank'\n            });\n        }\n        tab_help.add({\n            title   : 'Support',\n            content : this.options.support_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Search',\n            content : this.options.search_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Mailing Lists',\n            content : this.options.mailing_lists,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Videos',\n            content : this.options.screencasts_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Wiki',\n            content : this.options.wiki_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'How to Cite Galaxy',\n            content : this.options.citation_url,\n            target  : '_blank'\n        });\n        if (this.options.terms_url){\n            tab_help.add({\n                title   : 'Terms and Conditions',\n                content : this.options.terms_url,\n                target  : '_blank'\n            });\n        }\n        this.masthead.append( tab_help );\n\n        //\n        // User tab.\n        //\n        if ( !Galaxy.user.id ){\n            var tab_user = new GalaxyMastheadTab({\n                id              : 'user',\n                title           : 'User',\n                extra_class     : 'loggedout-only',\n                title_attribute : 'Account registration or login'\n            });\n\n            // login\n            tab_user.add({\n                title   : 'Login',\n                content : 'user/login',\n                target  : 'galaxy_main'\n            });\n\n            // register\n            if ( this.options.allow_user_creation ){\n                tab_user.add({\n                    title   : 'Register',\n                    content : 'user/create',\n                    target  : 'galaxy_main'\n                });\n            }\n\n            // add to masthead\n            this.masthead.append( tab_user );\n        } else {\n            var tab_user = new GalaxyMastheadTab({\n                id              : 'user',\n                title           : 'User',\n                extra_class     : 'loggedin-only',\n                title_attribute : 'Account preferences and saved data'\n            });\n\n            // show user logged in info\n            tab_user.add({\n                title   : 'Logged in as ' + Galaxy.user.get( 'email' )\n            });\n\n            tab_user.add({\n                title   : 'Preferences',\n                content : 'user?cntrller=user',\n                target  : 'galaxy_main'\n            });\n\n            tab_user.add({\n                title   : 'Custom Builds',\n                content : 'user/dbkeys',\n                target  : 'galaxy_main'\n            });\n\n            tab_user.add({\n                title   : 'Logout',\n                content : 'user/logout',\n                target  : '_top',\n                divider : true\n            });\n\n            // default tabs\n            tab_user.add({\n                title   : 'Saved Histories',\n                content : 'history/list',\n                target  : 'galaxy_main'\n            });\n            tab_user.add({\n                title   : 'Saved Datasets',\n                content : 'dataset/list',\n                target  : 'galaxy_main'\n            });\n            tab_user.add({\n                title   : 'Saved Pages',\n                content : 'page/list',\n                target  : '_top'\n            });\n\n            tab_user.add({\n                title   : 'API Keys',\n                content : 'user/api_keys?cntrller=user',\n                target  : 'galaxy_main'\n            });\n\n            if ( this.options.use_remote_user ){\n                tab_user.add({\n                    title   : 'Public Name',\n                    content : 'user/edit_username?cntrller=user',\n                    target  : 'galaxy_main'\n                });\n            }\n\n            // add to masthead\n            this.masthead.append( tab_user );\n        }\n\n        // identify active tab\n        if ( this.options.active_view ) {\n            this.masthead.highlight( this.options.active_view );\n        }\n    }\n});\n\n/** Masthead tab **/\nvar GalaxyMastheadTab = Backbone.View.extend({\n    // main options\n    options:{\n        id              : '',\n        title           : '',\n        target          : '_parent',\n        content         : '',\n        type            : 'url',\n        scratchbook     : false,\n        onunload        : null,\n        visible         : true,\n        disabled        : false,\n        title_attribute : ''\n    },\n\n    // location\n    location: 'navbar',\n\n    // optional sub menu\n    $menu: null,\n\n    // events\n    events:{\n        'click .head' : '_head'\n    },\n\n    // initialize\n    initialize: function ( options ){\n        // read in defaults\n        if ( options ){\n            this.options = _.defaults( options, this.options );\n        }\n\n        // update url\n        if ( this.options.content !== undefined && this.options.content.indexOf( '//' ) === -1 ){\n            this.options.content = Galaxy.root + this.options.content;\n        }\n\n        // add template for tab\n        this.setElement( $( this._template( this.options ) ) );\n\n        // disable menu items that are not available to anonymous user\n        // also show title to explain why they are disabled\n        if ( this.options.disabled ){\n            $( this.el ).find( '.root' ).addClass( 'disabled' );\n            this._attachPopover();\n        }\n\n        // visiblity\n        if ( !this.options.visible ){\n            this.hide();\n        }\n    },\n\n    // show\n    show: function(){\n        $(this.el).css({visibility : 'visible'});\n    },\n\n    // show\n    hide: function(){\n        $(this.el).css({visibility : 'hidden'});\n    },\n\n    // add menu item\n    add: function (options){\n        // menu option defaults\n        var menuOptions = {\n            title       : 'Title',\n            content     : '',\n            type        : 'url',\n            target      : '_parent',\n            scratchbook : false,\n            divider     : false\n        }\n\n        // read in defaults\n        if (options)\n            menuOptions = _.defaults(options, menuOptions);\n\n        // update url\n        if (menuOptions.content && menuOptions.content.indexOf('//') === -1)\n            menuOptions.content = Galaxy.root + menuOptions.content;\n\n        // check if submenu element is available\n        if (!this.$menu){\n            // insert submenu element into root\n            $(this.el).find('.root').append(this._templateMenu());\n\n            // show caret\n            $(this.el).find('.symbol').addClass('caret');\n\n            // update element link\n            this.$menu = $(this.el).find('.popup');\n        }\n\n        // create\n        var $item = $(this._templateMenuItem(menuOptions));\n\n        // append menu\n        this.$menu.append($item);\n\n        // add events\n        var self = this;\n        $item.on('click', function(e){\n            // prevent default\n            e.preventDefault();\n\n            // no modifications if new tab is requested\n            if (self.options.target === '_blank')\n                return true;\n\n            // load into frame\n            Galaxy.frame.add(options);\n        });\n\n        // append divider\n        if (menuOptions.divider)\n            this.$menu.append($(this._templateDivider()));\n    },\n\n    // show menu on header click\n    _head: function(e){\n        // prevent default\n        e.preventDefault();\n\n        if (this.options.disabled){\n            return // prevent link following if menu item is disabled\n        }\n\n        // check for menu options\n        if (!this.$menu) {\n            Galaxy.frame.add(this.options);\n        }\n    },\n\n    _attachPopover : function(){\n        var $popover_element = $(this.el).find('.head');\n        $popover_element.popover({\n            html: true,\n            content: 'Please <a href=\"' + Galaxy.root + 'user/login?use_panels=True\">log in</a> or <a href=\"' + Galaxy.root + 'user/create?use_panels=True\">register</a> to use this feature.',\n            placement: 'bottom'\n        }).on('shown.bs.popover', function() { // hooking on bootstrap event to automatically hide popovers after delay\n            setTimeout(function() {\n                $popover_element.popover('hide');\n            }, 5000);\n        });\n     },\n\n    // fill template header\n    _templateMenuItem: function (options){\n        return '<li><a href=\"' + options.content + '\" target=\"' + options.target + '\">' + options.title + '</a></li>';\n    },\n\n    // fill template header\n    _templateMenu: function (){\n        return '<ul class=\"popup dropdown-menu\"></ul>';\n    },\n\n    _templateDivider: function(){\n        return '<li class=\"divider\"></li>';\n    },\n\n    // fill template\n    _template: function (options){\n        // start template\n        var tmpl =  '<ul id=\"' + options.id + '\" class=\"nav navbar-nav\" border=\"0\" cellspacing=\"0\">' +\n                        '<li class=\"root dropdown\" style=\"\">' +\n                            '<a class=\"head dropdown-toggle\" data-toggle=\"dropdown\" target=\"' + options.target + '\" href=\"' + options.content + '\" title=\"' + options.title_attribute + '\">' +\n                                options.title + '<b class=\"symbol\"></b>' +\n                            '</a>' +\n                        '</li>' +\n                    '</ul>';\n\n        // return template\n        return tmpl;\n    }\n});\n\n// return\nreturn {\n    GalaxyMenu: GalaxyMenu,\n    GalaxyMastheadTab: GalaxyMastheadTab\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/layout/menu.js\n ** module id = 122\n ** module chunks = 0 6\n **/","// dependencies\ndefine([\"mvc/ui/ui-frames\"], function(Frames) {\n\n/** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\nvar GalaxyFrame = Backbone.View.extend({\n    // base element\n    el_main: 'body',\n\n    // frame active/disabled\n    active: false,\n\n    // button active\n    button_active: null,\n\n    // button load\n    button_load  : null,\n\n    // initialize\n    initialize : function(options) {\n        options = options || {};\n\n        // add to masthead menu\n        var self = this;\n\n        // create frames\n        this.frames = new Frames.View({\n            visible: false,\n        });\n\n        // add activate icon\n        this.button_active = new GalaxyMastheadIcon({\n            icon        : 'fa-th',\n            tooltip     : 'Enable/Disable Scratchbook',\n            onclick     : function() { self._activate(); },\n            onunload    : function() {\n                if (self.frames.length() > 0) {\n                    return \"You opened \" + self.frames.length() + \" frame(s) which will be lost.\";\n                }\n            }\n        });\n\n        // add load icon\n        this.button_load = new GalaxyMastheadIcon({\n            icon        : 'fa-eye',\n            tooltip     : 'Show/Hide Scratchbook',\n            onclick     : function(e) {\n                if (self.frames.visible) {\n                    self.frames.hide();\n                } else {\n                    self.frames.show();\n                }\n            },\n            with_number : true\n        });\n\n        // add to masthead\n        if( options.masthead ){\n            options.masthead.append(this.button_active);\n            options.masthead.append(this.button_load);\n        }\n\n        // create\n        this.setElement(this.frames.$el);\n\n        // append to main\n        $(this.el_main).append(this.$el);\n\n        // refresh menu\n        this.frames.setOnChange(function() {\n            self._refresh();\n        });\n        this._refresh();\n    },\n\n    /**\n     * Add a dataset to the frames.\n     */\n    add_dataset: function(dataset_id) {\n        var self = this;\n        require(['mvc/dataset/data'], function(DATA) {\n            var dataset = new DATA.Dataset({ id: dataset_id });\n            $.when( dataset.fetch() ).then( function() {\n                // Construct frame config based on dataset's type.\n                var frame_config = {\n                        title: dataset.get('name')\n                    },\n                    // HACK: For now, assume 'tabular' and 'interval' are the only\n                    // modules that contain tabular files. This needs to be replaced\n                    // will a is_datatype() function.\n                    is_tabular = _.find(['tabular', 'interval'], function(data_type) {\n                        return dataset.get('data_type').indexOf(data_type) !== -1;\n                    });\n\n                // Use tabular chunked display if dataset is tabular; otherwise load via URL.\n                if (is_tabular) {\n                    var tabular_dataset = new DATA.TabularDataset(dataset.toJSON());\n                    _.extend(frame_config, {\n                        type: 'other',\n                        content: function( parent_elt ) {\n                            DATA.createTabularDatasetChunkedView({\n                                model: tabular_dataset,\n                                parent_elt: parent_elt,\n                                embedded: true,\n                                height: '100%'\n                            });\n                        }\n                    });\n                }\n                else {\n                    _.extend(frame_config, {\n                        type: 'url',\n                        content: Galaxy.root + 'datasets/' +\n                                 dataset.id + '/display/?preview=True'\n                    });\n                }\n\n                self.add(frame_config);\n\n            });\n        });\n\n    },\n\n    /**\n     * Add a trackster visualization to the frames.\n     */\n    add_trackster_viz: function(viz_id) {\n        var self = this;\n        require(['viz/visualization', 'viz/trackster'], function(visualization, trackster) {\n            var viz = new visualization.Visualization({id: viz_id});\n            $.when( viz.fetch() ).then( function() {\n                var ui = new trackster.TracksterUI(Galaxy.root);\n\n                // Construct frame config based on dataset's type.\n                var frame_config = {\n                        title: viz.get('name'),\n                        type: 'other',\n                        content: function(parent_elt) {\n                            // Create view config.\n                            var view_config = {\n                                container: parent_elt,\n                                name: viz.get('title'),\n                                id: viz.id,\n                                // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n                                dbkey: viz.get('dbkey'),\n                                stand_alone: false\n                            },\n                            latest_revision = viz.get('latest_revision'),\n                            drawables = latest_revision.config.view.drawables;\n\n                            // Set up datasets in drawables.\n                            _.each(drawables, function(d) {\n                                d.dataset = {\n                                    hda_ldda: d.hda_ldda,\n                                    id: d.dataset_id\n                                };\n                            });\n\n                            view = ui.create_visualization(view_config,\n                                                           latest_revision.config.viewport,\n                                                           latest_revision.config.view.drawables,\n                                                           latest_revision.config.bookmarks,\n                                                           false);\n                        }\n                    };\n\n                self.add(frame_config);\n            });\n        });\n    },\n\n    /**\n     * Add and display a new frame/window based on options.\n     */\n    add: function(options){\n        // open new tab\n        if (options.target == '_blank'){\n            window.open(options.content);\n            return;\n        }\n\n        // reload entire window\n        if (options.target == '_top' || options.target == '_parent' || options.target == '_self'){\n            window.location = options.content;\n            return;\n        }\n\n        // validate\n        if (!this.active){\n            // fix url if main frame is unavailable\n            var $galaxy_main = $(window.parent.document).find('#galaxy_main');\n            if (options.target == 'galaxy_main' || options.target == 'center'){\n                if ($galaxy_main.length === 0){\n                    var href = options.content;\n                    if (href.indexOf('?') == -1)\n                        href += '?';\n                    else\n                        href += '&';\n                    href += 'use_panels=True';\n                    window.location = href;\n                } else {\n                    $galaxy_main.attr('src', options.content);\n                }\n            } else\n                window.location = options.content;\n\n            // stop\n            return;\n        }\n\n        // add to frames view\n        this.frames.add(options);\n    },\n\n    // activate/disable panel\n    _activate: function (){\n        // check\n        if (this.active){\n            // disable\n            this.active = false;\n\n            // toggle\n            this.button_active.untoggle();\n\n            // hide panel\n            this.frames.hide();\n        } else {\n            // activate\n            this.active = true;\n\n            // untoggle\n            this.button_active.toggle();\n        }\n    },\n\n    // update frame counter\n    _refresh: function(){\n        // update on screen counter\n        this.button_load.number(this.frames.length());\n\n        // check\n        if(this.frames.length() === 0)\n            this.button_load.hide();\n        else\n            this.button_load.show();\n\n        // check\n        if (this.frames.visible) {\n            this.button_load.toggle();\n        } else {\n            this.button_load.untoggle();\n        }\n    }\n});\n\n/** Masthead icon **/\nvar GalaxyMastheadIcon = Backbone.View.extend({\n    // icon options\n    options:{\n        id              : '',\n        icon            : 'fa-cog',\n        tooltip         : '',\n        with_number     : false,\n        onclick         : function() { alert ('clicked') },\n        onunload        : null,\n        visible         : true\n    },\n\n    // location identifier for masthead class\n    location: 'iconbar',\n\n    // initialize\n    initialize: function (options){\n        // read in defaults\n        if (options)\n            this.options = _.defaults(options, this.options);\n\n        // add template for icon\n        this.setElement($(this._template(this.options)));\n\n        // configure icon\n        var self = this;\n        $(this.el).find('.icon').tooltip({title: this.options.tooltip, placement: 'bottom'})\n                                .on('mouseup', self.options.onclick);\n\n        // visiblity\n        if (!this.options.visible)\n            this.hide();\n    },\n\n    // show\n    show: function(){\n        $(this.el).css({visibility : 'visible'});\n    },\n\n    // show\n    hide: function(){\n        $(this.el).css({visibility : 'hidden'});\n    },\n\n    // switch icon\n    icon: function (new_icon){\n        // update icon class\n        $(this.el).find('.icon').removeClass(this.options.icon)\n                                .addClass(new_icon);\n\n        // update icon\n        this.options.icon = new_icon;\n    },\n\n    // toggle\n    toggle: function(){\n        $(this.el).addClass('toggle');\n    },\n\n    // untoggle\n    untoggle: function(){\n        $(this.el).removeClass('toggle');\n    },\n\n    // set/get number\n    number: function(new_number){\n        $(this.el).find('.number').text(new_number);\n    },\n\n    // fill template icon\n    _template: function (options){\n        var tmpl =  '<div id=\"' + options.id + '\" class=\"symbol\">' +\n                        '<div class=\"icon fa fa-2x ' + options.icon + '\"></div>';\n        if (options.with_number)\n            tmpl+=      '<div class=\"number\"></div>';\n        tmpl +=     '</div>';\n\n        // return template\n        return tmpl;\n    }\n});\n\n// return\nreturn {\n    GalaxyFrame: GalaxyFrame,\n    GalaxyMastheadIcon: GalaxyMastheadIcon\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/layout/scratchbook.js\n ** module id = 123\n ** module chunks = 0 6\n **/","define([\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( baseMVC, _l ){\n\nvar logNamespace = 'user';\n//==============================================================================\n/** @class View to display a user's disk/storage usage\n *      either as a progress bar representing the percentage of a quota used\n *      or a simple text element displaying the human readable size used.\n *  @name UserQuotaMeter\n *  @augments Backbone.View\n */\nvar UserQuotaMeter = Backbone.View.extend( baseMVC.LoggableMixin ).extend(\n/** @lends UserQuotaMeter.prototype */{\n    _logNamespace : logNamespace,\n\n    /** Defaults for optional settings passed to initialize */\n    options : {\n        warnAtPercent   : 85,\n        errorAtPercent  : 100\n    },\n\n    /** Set up, accept options, and bind events */\n    initialize : function( options ){\n        this.log( this + '.initialize:', options );\n        _.extend( this.options, options );\n\n        //this.bind( 'all', function( event, data ){ this.log( this + ' event:', event, data ); }, this );\n        this.model.bind( 'change:quota_percent change:total_disk_usage', this.render, this );\n    },\n\n    /** Re-load user model data from the api */\n    update : function( options ){\n        this.log( this + ' updating user data...', options );\n        this.model.loadFromApi( this.model.get( 'id' ), options );\n        return this;\n    },\n\n    /** Is the user over their quota (if there is one)?\n     * @returns {Boolean} true if over quota, false if no quota or under quota\n     */\n    isOverQuota : function(){\n        return ( this.model.get( 'quota_percent' ) !== null\n              && this.model.get( 'quota_percent' ) >= this.options.errorAtPercent );\n    },\n\n    /** Render the meter when they have an applicable quota. Will render as a progress bar\n     *      with their percentage of that quota in text over the bar.\n     *  @fires quota:over when user is over quota (>= this.errorAtPercent)\n     *  @fires quota:under when user is under quota\n     *  @fires quota:under:approaching when user is >= this.warnAtPercent of their quota\n     *  @fires quota:under:ok when user is below this.warnAtPercent\n     *  @returns {jQuery} the rendered meter\n     */\n    _render_quota : function(){\n        var modelJson = this.model.toJSON(),\n            //prevPercent = this.model.previous( 'quota_percent' ),\n            percent = modelJson.quota_percent,\n            //meter = $( UserQuotaMeter.templates.quota( modelJson ) );\n            $meter = $( this._templateQuotaMeter( modelJson ) ),\n            $bar = $meter.find( '.progress-bar' );\n        //this.log( this + '.rendering quota, percent:', percent, 'meter:', meter );\n\n        // OVER QUOTA: color the quota bar and show the quota error message\n        if( this.isOverQuota() ){\n            //this.log( '\\t over quota' );\n            $bar.attr( 'class', 'progress-bar progress-bar-danger' );\n            $meter.find( '.quota-meter-text' ).css( 'color', 'white' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:over', modelJson );\n\n        // APPROACHING QUOTA: color the quota bar\n        } else if( percent >= this.options.warnAtPercent ){\n            //this.log( '\\t approaching quota' );\n            $bar.attr( 'class', 'progress-bar progress-bar-warning' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:under quota:under:approaching', modelJson );\n\n        // otherwise, hide/don't use the msg box\n        } else {\n            $bar.attr( 'class', 'progress-bar progress-bar-success' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:under quota:under:ok', modelJson );\n        }\n        return $meter;\n    },\n\n    /** Render the meter when the user has NO applicable quota. Will render as text\n     *      showing the human readable sum storage their data is using.\n     *  @returns {jQuery} the rendered text\n     */\n    _render_usage : function(){\n        //var usage = $( UserQuotaMeter.templates.usage( this.model.toJSON() ) );\n        var usage = $( this._templateUsage( this.model.toJSON() ) );\n        this.log( this + '.rendering usage:', usage );\n        return usage;\n    },\n\n    /** Render either the quota percentage meter or the human readable disk usage\n     *      depending on whether the user model has quota info (quota_percent === null -> no quota)\n     *  @returns {Object} this UserQuotaMeter\n     */\n    render : function(){\n        //this.log( this + '.rendering' );\n        var meterHtml = null;\n\n        // no quota on server ('quota_percent' === null (can be valid at 0)), show usage instead\n        this.log( this + '.model.quota_percent:', this.model.get( 'quota_percent' ) );\n        if( ( this.model.get( 'quota_percent' ) === null )\n        ||  ( this.model.get( 'quota_percent' ) === undefined ) ){\n            meterHtml = this._render_usage();\n\n        // otherwise, render percent of quota (and warning, error)\n        } else {\n            meterHtml = this._render_quota();\n            //TODO: add the original text for unregistered quotas\n            //tooltip = \"Your disk quota is %s.  You can increase your quota by registering a Galaxy account.\"\n        }\n\n        this.$el.html( meterHtml );\n        this.$el.find( '.quota-meter-text' ).tooltip();\n        return this;\n    },\n\n    _templateQuotaMeter : function( data ){\n        return [\n            '<div id=\"quota-meter\" class=\"quota-meter progress\">',\n                '<div class=\"progress-bar\" style=\"width: ', data.quota_percent, '%\"></div>',\n                '<div class=\"quota-meter-text\" style=\"top: 6px\"',\n                    (( data.nice_total_disk_usage )?( ' title=\"Using ' + data.nice_total_disk_usage + '\">' ):( '>' )),\n                    _l( 'Using' ), ' ', data.quota_percent, '%',\n                '</div>',\n            '</div>'\n        ].join( '' );\n    },\n\n    _templateUsage : function( data ){\n        return [\n            '<div id=\"quota-meter\" class=\"quota-meter\" style=\"background-color: transparent\">',\n                '<div class=\"quota-meter-text\" style=\"top: 6px; color: white\">',\n                    (( data.nice_total_disk_usage )?( _l( 'Using ' ) + data.nice_total_disk_usage ):( '' )),\n                '</div>',\n            '</div>'\n        ].join( '' );\n    },\n\n    toString : function(){\n        return 'UserQuotaMeter(' + this.model + ')';\n    }\n});\n\n\n//==============================================================================\nreturn {\n    UserQuotaMeter : UserQuotaMeter\n};});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/user/user-quotameter.js\n ** module id = 140\n ** module chunks = 0 6\n **/"],"sourceRoot":""}