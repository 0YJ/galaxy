{"version":3,"sources":["webpack:///login.bundled.js","webpack:///./galaxy/scripts/apps/login.js","webpack:///./galaxy/scripts/utils/utils.js?d2e7","webpack:///./galaxy/scripts/mvc/ui/ui-modal.js?120e","webpack:///./galaxy/scripts/mvc/ui/ui-frames.js?d017","webpack:///./galaxy/scripts/layout/masthead.js?08fd","webpack:///./galaxy/scripts/layout/menu.js?9a2d","webpack:///./galaxy/scripts/layout/page.js?047e","webpack:///./galaxy/scripts/layout/scratchbook.js?f9ea","webpack:///./galaxy/scripts/mvc/user/user-quotameter.js?f822"],"names":["webpackJsonp",0,"module","exports","__webpack_require__","_","jQuery","$","PANEL","_l","PAGE","window","app","options","bootstrapped","console","debug","show_welcome_with_login","location","href","Galaxy","root","loginPage","PageLayoutView","extend","el","center","CenterPanel","right","RightPanel","title","loginUrl","encodeURI","render","prop","welcome_url","css","html","call",4,"__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","iframe","src","deepeach","dict","callback","i","d","isJSON","text","test","replace","sanitize","content","validate","value","Array","length","undefined","indexOf","textify","lst","toString","pos","lastIndexOf","substr","get","top","__utils__get__","cache","url","success","request","data","response","error","ajaxConfig","contentType","type","param","dataType","JSON","stringify","ajax","done","parseJSON","e","fail","response_text","responseText","cssGetAttribute","classname","name","appendTo","remove","cssLoadFile","merge","optionsDefault","defaults","roundToDecimalPlaces","number","numPlaces","placesMultiplier","Math","round","bytesToString","size","normal_font","numberPlaces","unit","tb","gb","mb","kb","rounded","uid","__utils__uid__","time","Date","hours","getHours","minutes","getMinutes","datetime","getDate","getMonth","getFullYear","apply",10,"Backbone","View","elMain","body","backdrop","height","width","closing_events","closing_callback","title_separator","buttonList","initialize","this","_create","show","$body","$dialog","visible","$el","fadeIn","hide","fadeOut","enableButton","button_id","$buttons","find","disableButton","showButton","hideButton","getButton","scrollTop","self","document","off","setElement","_template","$footer","$backdrop","removeClass","buttons","counter","each","append","click","on","keyCode","border","padding-bottom",20,"frame","cols","rows","cell","margin","scroll","top_min","frame_max","onchange","top_max","frame_z","frame_counter","frame_counter_id","frame_list","frame_shadow","_templateBackground","_templateMenu","el_main","id_shadow","_templateShadow","substring","id","screen_location","grid_location","grid_rank","grid_lock","_frameResize","_panelRefresh","resize","add","frameOptions","target","alert","frame_id","$frame_el","_templateFrameUrl","_templateFrame","content_elt","isFunction","_toPixelCoord","parseInt","_frameInsert","left","_menuRefresh","event","setOnChange","xy","events","mousemove","mouseup","mouseleave","mousewheel","DOMMouseScroll","mousedown .frame","mousedown .frame-background","mousedown .frame-scroll-up","mousedown .frame-scroll-down","mousedown .f-close","mousedown .f-pin","_eventFrameMouseDown","hasClass","preventDefault","_frameIdentify","x","originalEvent","pageX","y","pageY","_frameDragStart","_eventFrameMouseMove","event_xy_new","event_xy_delta","p","_frameScreen","min_dim","max","_toGridCoord","_frameOffset","l","_eventFrameMouseUp","_frameDragStop","_eventFrameClose","_panelAnimationComplete","_eventFrameLock","addClass","_eventHide","_eventPanelScroll","frames","srcElement","parents","stopPropagation","delta","detail","wheelDelta","_panelScroll","_eventPanelScroll_up","_eventPanelScroll_down","closest","attr","_frameFocus","_frameGrid","px","sign","g","_toGrid","_toPixel","_isCollision","is_collision_pair","a","b","_locationRank","loc","promise","animate","top_new","min","new_loc","place_list","push","f","sort","j","_framePlace","log","has_focus","z",33,"Utils","Menu","Scratchbook","QuotaMeter","GalaxyMasthead","el_masthead","$background","list","replaceWith","key","onunload","q","menu","GalaxyMenu","masthead","config","GalaxyFrame","quotaMeter","UserQuotaMeter","model","user","mousedown","item","_add","prepend","highlight","current","$loc","$current","_click","$all","brand_text","brand","logo_url",34,"Model","create","tab_analysis","GalaxyMastheadTab","title_attribute","workflow_options","disabled","tab_workflow","tab_shared","divider","user_requests","tab_lab","lims_doc_url","visualization_options","tab_visualization","tab_admin","extra_class","tab_help","biostar_url","biostar_url_redirect","support_url","search_url","mailing_lists","screencasts_url","wiki_url","citation_url","terms_url","tab_user","use_remote_user","allow_user_creation","active_view","scratchbook","$menu","click .head","_attachPopover","visibility","menuOptions","$item","_templateMenuItem","_templateDivider","_head","$popover_element","popover","placement","setTimeout","tmpl",35,"MASTHEAD","MODAL","BASE_MVC","LoggableMixin","_logNamespace","className","_panelIds","defaultOptions","message_box_visible","message_box_content","message_box_class","show_inactivity_warning","inactivity_box_content","pick","omit","modal","$everything","template","messageBox","inactivityWarning","renderPanels","level","toggle","verificationLink","page","forEach","panelId","has","panelView","join","hideSidePanels",36,"Frames","active","button_active","button_load","GalaxyMastheadIcon","icon","tooltip","onclick","_activate","with_number","_refresh","add_dataset","dataset_id","__WEBPACK_AMD_REQUIRE_ARRAY__","DATA","dataset","Dataset","when","fetch","then","frame_config","is_tabular","data_type","tabular_dataset","TabularDataset","toJSON","parent_elt","createTabularDatasetChunkedView","embedded","add_trackster_viz","viz_id","visualization","trackster","viz","Visualization","ui","TracksterUI","view_config","container","dbkey","stand_alone","latest_revision","drawables","view","hda_ldda","create_visualization","viewport","bookmarks","open","$galaxy_main","parent","untoggle","new_icon","new_number",66,"baseMVC","logNamespace","warnAtPercent","errorAtPercent","bind","update","loadFromApi","isOverQuota","_render_quota","modelJson","percent","quota_percent","$meter","_templateQuotaMeter","$bar","trigger","_render_usage","usage","_templateUsage","meterHtml","nice_total_disk_usage"],"mappings":"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","file":"login.bundled.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(_) {\n\tvar jQuery = __webpack_require__( 1 ),\n\t    $ = jQuery,\n\t    PANEL = __webpack_require__( 13 ),\n\t    _l = __webpack_require__( 5 ),\n\t    PAGE = __webpack_require__( 35 );\n\t\n\twindow.app = function app( options, bootstrapped ){\n\t    console.debug( 'building app:', options, bootstrapped );\n\t\n\t    // TODO: remove iframe for user login (at least) and render login page from here\n\t    // then remove this redirect\n\t    if( !options.show_welcome_with_login ){\n\t        window.location.href = Galaxy.root + 'user/login?use_panels=True';\n\t        return;\n\t    }\n\t\n\t    var loginPage = new PAGE.PageLayoutView( _.extend( options, {\n\t        el      : 'body',\n\t        center  : new PANEL.CenterPanel({ el : '#center' }),\n\t        right   : new PANEL.RightPanel({\n\t            title : _l( 'Login required' ),\n\t            el : '#right'\n\t        }),\n\t    }));\n\t\n\t    $(function(){\n\t        // TODO: incorporate *actual* referrer/redirect info as the original page does\n\t        var loginUrl = Galaxy.root + 'user/login?redirect=' + encodeURI( Galaxy.root );\n\t        loginPage.render();\n\t\n\t        // welcome page (probably) needs to remain sandboxed\n\t        loginPage.center.$( '#galaxy_main' ).prop( 'src', options.welcome_url );\n\t\n\t        loginPage.right.$( '.unified-panel-body' )\n\t            .css( 'overflow', 'hidden' )\n\t            .html( '<iframe src=\"' + loginUrl + '\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>' );\n\t    });\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ },\n\n/***/ 4:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function($, jQuery, _) {/**\n\t * Galaxy utilities comprises small functions, which at this point\n\t * do not require their own classes/files\n\t*/\n\t\n\t// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\t/** Builds a basic iframe\n\t*/\n\tfunction iframe( src ) {\n\t    return '<iframe src=\"' + src + '\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>';\n\t}\n\t\n\t/** Traverse through json\n\t*/\n\tfunction deepeach(dict, callback) {\n\t    for (var i in dict) {\n\t        var d = dict[i];\n\t        if (d && typeof(d) == \"object\") {\n\t            callback(d);\n\t            deepeach(d, callback);\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * Check if a string is a json string\n\t * @param{String}   text - Content to be validated\n\t */\n\tfunction isJSON(text) {\n\t    return /^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').\n\t        replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n\t        replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''));\n\t};\n\t\n\t/**\n\t * Sanitize/escape a string\n\t * @param{String}   content - Content to be sanitized\n\t */\n\tfunction sanitize(content) {\n\t    return $('<div/>').text(content).html();\n\t};\n\t\n\t/**\n\t * Validate atomic values or list of values\n\t * usually used for selectable options\n\t * @param{String}   value - Value or list to be validated\n\t */\n\tfunction validate (value) {\n\t    if (!(value instanceof Array)) {\n\t        value = [value];\n\t    }\n\t    if (value.length === 0) {\n\t        return false;\n\t    }\n\t    for (var i in value) {\n\t        if (['__null__', '__undefined__', null, undefined].indexOf(value[i]) > -1) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t};\n\t\n\t/**\n\t * Convert list to pretty string\n\t * @param{String}   lst - List of strings to be converted in human readable list sentence\n\t */\n\tfunction textify(lst) {\n\t    var lst = lst.toString();\n\t    if (lst) {\n\t        lst = lst.replace(/,/g, ', ');\n\t        var pos = lst.lastIndexOf(', ');\n\t        if (pos != -1) {\n\t            lst = lst.substr(0, pos) + ' or ' + lst.substr(pos+1);\n\t        }\n\t        return lst;\n\t    }\n\t    return '';\n\t};\n\t\n\t/**\n\t * Request handler for GET\n\t * @param{String}   url     - Url request is made to\n\t * @param{Function} success - Callback on success\n\t * @param{Function} error   - Callback on error\n\t * @param{Boolean}  cache   - Use cached data if available\n\t */\n\tfunction get (options) {\n\t    top.__utils__get__ = top.__utils__get__ || {};\n\t    if (options.cache && top.__utils__get__[options.url]) {\n\t        options.success && options.success(top.__utils__get__[options.url]);\n\t        console.debug('utils.js::get() - Fetching from cache [' + options.url + '].');\n\t    } else {\n\t        request({\n\t            url     : options.url,\n\t            data    : options.data,\n\t            success : function(response) {\n\t                top.__utils__get__[options.url] = response;\n\t                options.success && options.success(response);\n\t            },\n\t            error : function(response) {\n\t                options.error && options.error(response);\n\t            }\n\t        });\n\t    }\n\t};\n\t\n\t/**\n\t * Request handler\n\t * @param{String}   method  - Request method ['GET', 'POST', 'DELETE', 'PUT']\n\t * @param{String}   url     - Url request is made to\n\t * @param{Object}   data    - Data send to url\n\t * @param{Function} success - Callback on success\n\t * @param{Function} error   - Callback on error\n\t */\n\tfunction request (options) {\n\t    // prepare ajax\n\t    var ajaxConfig = {\n\t        contentType : 'application/json',\n\t        type        : options.type || 'GET',\n\t        data        : options.data || {},\n\t        url         : options.url\n\t    }\n\t\n\t    // encode data into url\n\t    if (ajaxConfig.type == 'GET' || ajaxConfig.type == 'DELETE') {\n\t        if (ajaxConfig.url.indexOf('?') == -1) {\n\t            ajaxConfig.url += '?';\n\t        } else {\n\t            ajaxConfig.url += '&';\n\t        }\n\t        ajaxConfig.url      = ajaxConfig.url + $.param(ajaxConfig.data, true);\n\t        ajaxConfig.data     = null;\n\t    } else {\n\t        ajaxConfig.dataType = 'json';\n\t        ajaxConfig.url      = ajaxConfig.url;\n\t        ajaxConfig.data     = JSON.stringify(ajaxConfig.data);\n\t    }\n\t\n\t    // make request\n\t    $.ajax(ajaxConfig)\n\t    .done(function(response) {\n\t        if (typeof response === 'string') {\n\t            try {\n\t                response = response.replace('Infinity,', '\"Infinity\",');\n\t                response = jQuery.parseJSON(response);\n\t            } catch (e) {\n\t                console.debug(e);\n\t            }\n\t        }\n\t        options.success && options.success(response);\n\t    })\n\t    .fail(function(response) {\n\t        var response_text = null;\n\t        try {\n\t            response_text = jQuery.parseJSON(response.responseText);\n\t        } catch (e) {\n\t            response_text = response.responseText;\n\t        }\n\t        options.error && options.error(response_text, response);\n\t    });\n\t};\n\t\n\t/**\n\t * Read a property value from CSS\n\t * @param{String}   classname   - CSS class\n\t * @param{String}   name        - CSS property\n\t */\n\tfunction cssGetAttribute (classname, name) {\n\t    var el = $('<div class=\"' + classname + '\"></div>');\n\t    el.appendTo(':eq(0)');\n\t    var value = el.css(name);\n\t    el.remove();\n\t    return value;\n\t};\n\t\n\t/**\n\t * Load a CSS file\n\t * @param{String}   url - Url of CSS file\n\t */\n\tfunction cssLoadFile (url) {\n\t    if (!$('link[href^=\"' + url + '\"]').length) {\n\t        $('<link href=\"' + Galaxy.root + url + '\" rel=\"stylesheet\">').appendTo('head');\n\t    }\n\t};\n\t\n\t/**\n\t * Safely merge to dictionaries\n\t * @param{Object}   options         - Target dictionary\n\t * @param{Object}   optionsDefault  - Source dictionary\n\t */\n\tfunction merge (options, optionsDefault) {\n\t    if (options) {\n\t        return _.defaults(options, optionsDefault);\n\t    } else {\n\t        return optionsDefault;\n\t    }\n\t};\n\t\n\t\n\t/**\n\t * Round floaing point 'number' to 'numPlaces' number of decimal places.\n\t * @param{Object}   number      a floaing point number\n\t * @param{Object}   numPlaces   number of decimal places\n\t */\n\tfunction roundToDecimalPlaces( number, numPlaces ){\n\t    var placesMultiplier = 1;\n\t    for( var i=0; i<numPlaces; i++ ){\n\t        placesMultiplier *= 10;\n\t    }\n\t    return Math.round( number * placesMultiplier ) / placesMultiplier;\n\t}\n\t\n\t// calculate on import\n\tvar kb = 1024,\n\t    mb = kb * kb,\n\t    gb = mb * kb,\n\t    tb = gb * kb;\n\t/**\n\t * Format byte size to string with units\n\t * @param{Integer}   size           - Size in bytes\n\t * @param{Boolean}   normal_font    - Switches font between normal and bold\n\t */\n\tfunction bytesToString (size, normal_font, numberPlaces) {\n\t    numberPlaces = numberPlaces !== undefined? numberPlaces: 1;\n\t    // identify unit\n\t    var unit = \"\";\n\t    if (size >= tb){ size = size / tb; unit = 'TB'; } else\n\t    if (size >= gb){ size = size / gb; unit = 'GB'; } else\n\t    if (size >= mb){ size = size / mb; unit = 'MB'; } else\n\t    if (size >= kb){ size = size / kb; unit = 'KB'; } else\n\t    if (size >  0){ unit = 'b'; }\n\t    else { return normal_font? '0 b': '<strong>-</strong>'; }\n\t    // return formatted string\n\t    var rounded = unit == 'b'? size: roundToDecimalPlaces( size, numberPlaces );\n\t    if (normal_font) {\n\t       return  rounded + ' ' + unit;\n\t    } else {\n\t        return '<strong>' + rounded + '</strong> ' + unit;\n\t    }\n\t};\n\t\n\t/**\n\t * Create a unique id\n\t */\n\tfunction uid(){\n\t    top.__utils__uid__ = top.__utils__uid__ || 0;\n\t    return 'uid-' + top.__utils__uid__++;\n\t};\n\t\n\t/**\n\t * Create a time stamp\n\t */\n\tfunction time() {\n\t    var d = new Date();\n\t    var hours = (d.getHours() < 10 ? \"0\" : \"\") + d.getHours();\n\t    var minutes = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes()\n\t    return datetime = d.getDate() + \"/\"\n\t                + (d.getMonth() + 1)  + \"/\"\n\t                + d.getFullYear() + \", \"\n\t                + hours + \":\"\n\t                + minutes;\n\t};\n\t\n\treturn {\n\t    cssLoadFile: cssLoadFile,\n\t    cssGetAttribute: cssGetAttribute,\n\t    get: get,\n\t    merge: merge,\n\t    iframe: iframe,\n\t    bytesToString: bytesToString,\n\t    uid: uid,\n\t    time: time,\n\t    request: request,\n\t    sanitize: sanitize,\n\t    textify: textify,\n\t    validate: validate,\n\t    deepeach: deepeach,\n\t    isJSON: isJSON\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n\n/***/ 10:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\tvar View = Backbone.View.extend({\n\t\n\t    // base element\n\t    elMain: 'body',\n\t    \n\t    // defaults options\n\t    optionsDefault: {\n\t        title            : 'ui-modal',\n\t        body             : '',\n\t        backdrop         : true,\n\t        height           : null,\n\t        width            : null,\n\t        closing_events   : false,\n\t        closing_callback : null,\n\t        title_separator  : true\n\t    },\n\t\n\t    // button list\n\t    buttonList: {},\n\t\n\t    // initialize\n\t    initialize : function(options) {\n\t        if (options){\n\t            this._create(options);\n\t        }\n\t    },\n\t    \n\t    // adds and displays a new frame/window\n\t    show: function(options) {\n\t        // create\n\t        this.initialize(options);\n\t        \n\t        // fix height\n\t        if (this.options.height){\n\t            this.$body.css('height', this.options.height);\n\t            this.$body.css('overflow', 'hidden');\n\t        } else {\n\t            this.$body.css('max-height', $(window).height() / 2);\n\t        }\n\t\n\t        // fix width\n\t        if (this.options.width) {\n\t            this.$dialog.css('width', this.options.width);\n\t        }\n\t\n\t        // show\n\t        if (this.visible) {\n\t            this.$el.show();\n\t        } else {\n\t            this.$el.fadeIn('fast');\n\t        }\n\t\n\t        // set visible flag\n\t        this.visible = true;\n\t    },\n\t\n\t    // hide\n\t    hide: function() {\n\t        this.visible = false;\n\t        this.$el.fadeOut('fast');\n\t        if (this.options.closing_callback){\n\t            this.options.closing_callback();\n\t        }\n\t    },\n\t\n\t    // enable buttons\n\t    enableButton: function(name) {\n\t        var button_id = this.buttonList[name];\n\t        this.$buttons.find('#' + button_id).prop('disabled', false);\n\t    },\n\t\n\t    // disable buttons\n\t    disableButton: function(name) {\n\t        var button_id = this.buttonList[name];\n\t        this.$buttons.find('#' + button_id).prop('disabled', true);\n\t    },\n\t    \n\t    // show buttons\n\t    showButton: function(name) {\n\t        var button_id = this.buttonList[name];\n\t        this.$buttons.find('#' + button_id).show();\n\t    },\n\t\n\t    // hide buttons\n\t    hideButton: function(name) {\n\t        var button_id = this.buttonList[name];\n\t        this.$buttons.find('#' + button_id).hide();\n\t    },\n\t    \n\t    // get button\n\t    getButton: function(name) {\n\t        var button_id = this.buttonList[name];\n\t        return this.$buttons.find('#' + button_id);\n\t    },\n\t    \n\t    // returns scroll top for body element\n\t    scrollTop: function() {\n\t        return this.$body.scrollTop();\n\t    },\n\t\n\t    // create\n\t    _create: function(options) {\n\t        // link this\n\t        var self = this;\n\t        \n\t        // configure options\n\t        this.options = _.defaults(options, this.optionsDefault);\n\t        \n\t        // check for progress bar request\n\t        if (this.options.body == 'progress'){\n\t            this.options.body = $('<div class=\"progress progress-striped active\"><div class=\"progress-bar progress-bar-info\" style=\"width:100%\"></div></div>');\n\t        }\n\t            \n\t        // remove former element\n\t        if (this.$el) {\n\t            // remove element\n\t            this.$el.remove();\n\t            \n\t            // remove escape event\n\t            $(document).off('keyup.ui-modal');\n\t        }\n\t        \n\t        // create new element\n\t        this.setElement(this._template(this.options.title));\n\t        \n\t        // link elements\n\t        this.$dialog = (this.$el).find('.modal-dialog');\n\t        this.$body = (this.$el).find('.modal-body');\n\t        this.$footer  = (this.$el).find('.modal-footer');\n\t        this.$buttons = (this.$el).find('.buttons');\n\t        this.$backdrop = (this.$el).find('.modal-backdrop');\n\t        \n\t        // append body\n\t        this.$body.html(this.options.body);\n\t        \n\t        // configure background\n\t        if (!this.options.backdrop){\n\t            this.$backdrop.removeClass('in');\n\t        }\n\t                        \n\t        // append buttons\n\t        if (this.options.buttons) {\n\t            // reset button list\n\t            this.buttonList = {};\n\t            var counter = 0;\n\t            $.each(this.options.buttons, function(name, value) {\n\t                var button_id = 'button-' + counter++;\n\t                self.$buttons.append($('<button id=\"' + button_id + '\"></button>').text(name).click(value)).append(\" \");\n\t                self.buttonList[name] = button_id;\n\t            });\n\t        } else {\n\t            // hide footer\n\t            this.$footer.hide();\n\t        }\n\t        \n\t        // append to main element\n\t        $(this.elMain).append($(this.el));\n\t\n\t        // bind additional closing events\n\t        if (this.options.closing_events) {\n\t            // bind the ESC key to hide() function\n\t            $(document).on('keyup.ui-modal', function(e) {\n\t                if (e.keyCode == 27) {\n\t                    self.hide();\n\t                }\n\t            });\n\t            \n\t            // hide modal if background is clicked\n\t            this.$el.find('.modal-backdrop').on('click', function() { self.hide(); });\n\t        }\n\t\n\t        // removes the default separator line\n\t        if (!this.options.title_separator) {\n\t            this.$('.modal-header').css({ 'border': 'none', 'padding-bottom': '0px' });\n\t        }\n\t    },\n\t    \n\t    // fill regular modal template\n\t    _template: function(title) {\n\t        return  '<div class=\"ui-modal modal\">' +\n\t                    '<div class=\"modal-backdrop fade in\" style=\"z-index: -1;\"></div>' +\n\t                    '<div class=\"modal-dialog\">' +\n\t                        '<div class=\"modal-content\">' +\n\t                            '<div class=\"modal-header\">' +\n\t                                '<button type=\"button\" class=\"close\" style=\"display: none;\">&times;</button>' +\n\t                                '<h4 class=\"title\">' + title + '</h4>' +\n\t                            '</div>' +\n\t                            '<div class=\"modal-body\" style=\"position: static;\"></div>' +\n\t                            '<div class=\"modal-footer\">' +\n\t                                '<div class=\"buttons\" style=\"float: right;\"></div>' +\n\t                            '</div>' +\n\t                        '</div' +\n\t                    '</div>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\treturn {\n\t    View : View\n\t}\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n\n/***/ 20:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\t// frame manager\n\tvar View = Backbone.View.extend({\n\t    // defaults inputs\n\t    options: {\n\t        // default frame size\n\t        frame: {\n\t            cols : 6,\n\t            rows : 3\n\t        },\n\t\n\t        // maximum number of rows\n\t        rows: 1000,\n\t\n\t        // cell size in px\n\t        cell: 130,\n\t\n\t        // margin\n\t        margin: 5,\n\t\n\t        // scroll speed\n\t        scroll: 5,\n\t\n\t        // minimum top\n\t        top_min: 40,\n\t\n\t        // maximum number of frames\n\t        frame_max: 9,\n\t\n\t        // visible\n\t        visible: true,\n\t\n\t        // onchange\n\t        onchange: null\n\t    },\n\t\n\t    // number of columns\n\t    cols: 0,\n\t\n\t    // scroll/element top\n\t    top: 0,\n\t\n\t    // viewport scrolling state\n\t    top_max: 0,\n\t\n\t    // frame z-index\n\t    frame_z : 0,\n\t\n\t    // frame counter\n\t    frame_counter: 0,\n\t\n\t    // frame counter\n\t    frame_counter_id: 0,\n\t\n\t    // frame list\n\t    frame_list: [],\n\t\n\t    // frame shadow\n\t    frame_shadow: null,\n\t\n\t    // frame panel visible\n\t    visible: null,\n\t\n\t    // initialize\n\t    initialize : function(options) {\n\t        // add to masthead menu\n\t        var self = this;\n\t\n\t        // read in defaults\n\t        if (options) {\n\t            this.options = _.defaults(options, this.options);\n\t        }\n\t\n\t        // set visibility\n\t        this.visible = this.options.visible;\n\t\n\t        // initialize top\n\t        this.top = this.top_max = this.options.top_min;\n\t\n\t        // create\n\t        this.setElement(this._template());\n\t\n\t        // load background\n\t        $(this.el).append(this._templateBackground());\n\t\n\t        // load menu buttons\n\t        $(this.el).append(this._templateMenu());\n\t\n\t        // load to main frame\n\t        $(this.el_main).append($(this.el));\n\t\n\t        //\n\t        // define shadow frame\n\t        //\n\t        var id_shadow = '#frame-shadow';\n\t\n\t        // add shadow template\n\t        $(this.el).append(this._templateShadow(id_shadow.substring(1)));\n\t\n\t        // initialize frame\n\t        this.frame_shadow = {\n\t            id              : id_shadow,\n\t            screen_location : {},\n\t            grid_location   : {},\n\t            grid_rank       : null,\n\t            grid_lock       : false\n\t        };\n\t\n\t        // initialize size\n\t        this._frameResize(this.frame_shadow, {width: 0, height: 0});\n\t\n\t        // add shadow to frame list\n\t        this.frame_list[id_shadow] = this.frame_shadow;\n\t\n\t        // initialize panel\n\t        this._panelRefresh();\n\t\n\t        // apply visibility\n\t        if (!this.visible) {\n\t            this.hide();\n\t        } else {\n\t            this.show();\n\t        }\n\t\n\t        // catch window resize event\n\t        var self = this;\n\t        $(window).resize(function () {\n\t            if (self.visible)\n\t                self._panelRefresh();\n\t        });\n\t    },\n\t\n\t    /**\n\t     * Adds and displays a new frame.\n\t     *\n\t     * options:\n\t     *  type: 'url' or 'other' ; if 'url', 'content' is treated as a URL and loaded into an iframe; \n\t     *        if 'other', content is treated as a function or raw HTML. content function is passed a single \n\t     *        argument that is the frame's content DOM element\n\t     *  content: the content to be loaded into the frame.\n\t     */\n\t    add: function(options) {\n\t        // frame default options\n\t        var frameOptions = {\n\t            title: '',\n\t            content: null,\n\t            target: '',\n\t            type: null\n\t        };\n\t\n\t        // read in defaults\n\t        if (options) {\n\t            options = _.defaults(options, frameOptions);\n\t        } else {\n\t            options = frameOptions;\n\t        }\n\t\n\t        // check for content\n\t        if(!options.content) {\n\t            return;\n\t        }\n\t\n\t        // check for number of frames\n\t        if (this.frame_counter >= this.options.frame_max) {\n\t            alert(\"You have reached the maximum number of allowed frames (\" + this.options.frame_max + \").\");   \n\t            return;\n\t        }\n\t\n\t        // generate frame identifier\n\t        var frame_id = '#frame-' + (this.frame_counter_id++);\n\t\n\t        // check if frame exists\n\t        if ($(frame_id).length !== 0) {\n\t            alert(\"This frame already exists. This page might contain multiple frame managers.\");\n\t            return;\n\t        }\n\t\n\t        // reset top\n\t        this.top = this.options.top_min;\n\t\n\t        // append\n\t        var $frame_el = null;\n\t        if (options.type === 'url') {\n\t            $frame_el = $(this._templateFrameUrl(frame_id.substring(1), options.title, options.content));\n\t        } else if (options.type === 'other') {\n\t            $frame_el = $(this._templateFrame(frame_id.substring(1), options.title));\n\t\n\t            // Load content into frame.\n\t            var content_elt = $frame_el.find('.f-content');\n\t            if (_.isFunction(options.content)) {\n\t                options.content(content_elt);\n\t            }\n\t            else {\n\t                content_elt.append(options.content);\n\t            }\n\t        }\n\t        $(this.el).append($frame_el);\n\t\n\t        // construct a new frame\n\t        var frame = {\n\t            id              : frame_id,\n\t            screen_location : {},\n\t            grid_location   : {},\n\t            grid_rank       : null,\n\t            grid_lock       : false\n\t        };\n\t\n\t        // set dimensions\n\t        options.width   = this._toPixelCoord('width', this.options.frame.cols);\n\t        options.height  = this._toPixelCoord('height', this.options.frame.rows);\n\t\n\t        // default z-index\n\t        this.frame_z = parseInt($(frame.id).css('z-index'));\n\t\n\t        // add to frame list\n\t        this.frame_list[frame_id] = frame;\n\t\n\t        // increase frame counter\n\t        this.frame_counter++;\n\t\n\t        // resize\n\t        this._frameResize(frame, {width: options.width, height: options.height});\n\t\n\t        // place frame\n\t        this._frameInsert(frame, {top: 0, left: 0}, true);\n\t\n\t        // show frames if hidden\n\t        if (!this.visible) {\n\t            this.show();\n\t        }\n\t    },\n\t\n\t    // show panel\n\t    show: function() {\n\t        // show\n\t        this.visible = true;\n\t\n\t        // show\n\t        this.$el.find(\".frame\").fadeIn('fast');\n\t\n\t        // hide shadow\n\t        this.$el.find(this.frame_shadow.id).hide();\n\t\n\t        // show background\n\t        this.$el.find(\".frame-background\").show();\n\t\n\t        // show panel\n\t        this._panelRefresh();\n\t\n\t        // refresh\n\t        this._menuRefresh();\n\t    },\n\t\n\t    // hide panel\n\t    hide: function() {\n\t        // make sure that no event is currently processing\n\t        if (this.event.type !== null)\n\t            return;\n\t\n\t        // hide\n\t        this.visible = false;\n\t\n\t        // hide \n\t        this.$el.find(\".frame\").fadeOut('fast');\n\t\n\t        // hide background\n\t        this.$el.find(\".frame-background\").hide();\n\t\n\t        // hide menu\n\t        this.$el.find(\".frame-menu\").hide();\n\t\n\t        // refresh\n\t        this._menuRefresh();\n\t    },\n\t\n\t    // length\n\t    length: function() {\n\t        return this.frame_counter;\n\t    },\n\t\n\t    // set onchange event\n\t    setOnChange: function(callback) {\n\t        this.options.onchange = callback;\n\t    },\n\t\n\t    /*\n\t        EVENT HANDLING\n\t    */\n\t\n\t    // event\n\t    event: {\n\t        type    : null,\n\t        target  : null,\n\t        xy      : null\n\t    },\n\t\n\t    // events\n\t    events: {\n\t        // global frame events\n\t        'mousemove'                         : '_eventFrameMouseMove',\n\t        'mouseup'                           : '_eventFrameMouseUp',\n\t        'mouseleave'                        : '_eventFrameMouseUp',\n\t        'mousewheel'                        : '_eventPanelScroll',\n\t        'DOMMouseScroll'                    : '_eventPanelScroll',\n\t\n\t        // events fixed to elements\n\t        'mousedown .frame'                  : '_eventFrameMouseDown',\n\t        'mousedown .frame-background'       : '_eventHide',\n\t        'mousedown .frame-scroll-up'        : '_eventPanelScroll_up',\n\t        'mousedown .frame-scroll-down'      : '_eventPanelScroll_down',\n\t        'mousedown .f-close'                : '_eventFrameClose',\n\t        'mousedown .f-pin'                  : '_eventFrameLock'\n\t    },\n\t\n\t    // drag start\n\t    _eventFrameMouseDown: function (e) {\n\t        // skip if event is already active\n\t        if (this.event.type !== null) {\n\t            return;\n\t        }\n\t\n\t        // check for drag event\n\t        if ($(e.target).hasClass('f-header') || $(e.target).hasClass('f-title')) {\n\t            this.event.type = 'drag';\n\t        }\n\t\n\t        // check for resize event\n\t        if ($(e.target).hasClass('f-resize')) {\n\t            this.event.type = 'resize';\n\t        }\n\t\n\t        // skip if no event has to be handled\n\t        if (this.event.type === null) {\n\t            return;\n\t        }\n\t\n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // identify frame\n\t        this.event.target = this._frameIdentify(e.target);\n\t\n\t        // check if frame is locked\n\t        if (this.event.target.grid_lock) {\n\t            this.event.type = null;\n\t            return;\n\t        }\n\t\n\t        // backup event details\n\t        this.event.xy = {\n\t            x: e.originalEvent.pageX,\n\t            y: e.originalEvent.pageY\n\t        };\n\t\n\t        // prepare drag/resize\n\t        this._frameDragStart(this.event.target);\n\t    },\n\t\n\t    // mouse move event\n\t    _eventFrameMouseMove: function (e) {\n\t        // check\n\t        if (this.event.type != 'drag' && this.event.type != 'resize') {\n\t            return;\n\t        }\n\t\n\t        // current position\n\t        var event_xy_new = {\n\t            x : e.originalEvent.pageX,\n\t            y : e.originalEvent.pageY\n\t        };\n\t\n\t        // position delta\n\t        var event_xy_delta = {\n\t            x : event_xy_new.x - this.event.xy.x,\n\t            y : event_xy_new.y - this.event.xy.y\n\t        };\n\t\n\t        // update\n\t        this.event.xy = event_xy_new;\n\t\n\t        // object position / size\n\t        var p = this._frameScreen (this.event.target);\n\t\n\t        // resize event\n\t        if (this.event.type == 'resize') {\n\t            // update\n\t            p.width  += event_xy_delta.x;\n\t            p.height += event_xy_delta.y;\n\t\n\t            // check size\n\t            var min_dim = this.options.cell - this.options.margin - 1;\n\t            p.width = Math.max(p.width, min_dim);\n\t            p.height = Math.max(p.height, min_dim);\n\t\n\t            // apply resize to frame\n\t            this._frameResize(this.event.target, p);\n\t\n\t            // break down to grid coordinates\n\t            p.width = this._toGridCoord('width', p.width) + 1;\n\t            p.height = this._toGridCoord('height', p.height) + 1;\n\t\n\t            // transfer back to pixels\n\t            p.width = this._toPixelCoord('width', p.width);\n\t            p.height = this._toPixelCoord('height', p.height);\n\t\n\t            // apply\n\t            this._frameResize(this.frame_shadow, p);\n\t\n\t            // fix position\n\t            this._frameInsert(this.frame_shadow, {\n\t                top     : this._toGridCoord('top', p.top),\n\t                left    : this._toGridCoord('left', p.left)\n\t            });\n\t        }\n\t\n\t        // drag event\n\t        if (this.event.type == 'drag') {\n\t            // update\n\t            p.left  += event_xy_delta.x;\n\t            p.top   += event_xy_delta.y;\n\t\n\t            // apply\n\t            this._frameOffset(this.event.target, p);\n\t\n\t            // get location of shadow\n\t            var l = {\n\t                top     : this._toGridCoord('top', p.top),\n\t                left    : this._toGridCoord('left', p.left)\n\t            };\n\t\n\t            // increase priority of current frame\n\t            if (l.left !== 0) {\n\t                l.left++;\n\t            }\n\t\n\t            // fix position\n\t            this._frameInsert(this.frame_shadow, l);\n\t        }\n\t    },\n\t\n\t    // mouse up\n\t    _eventFrameMouseUp: function (e) {\n\t        // check\n\t        if (this.event.type != 'drag' && this.event.type != 'resize') {\n\t            return;\n\t        }\n\t\n\t        // stop\n\t        this._frameDragStop(this.event.target);\n\t\n\t        // reset event\n\t        this.event.type = null;\n\t    },\n\t\n\t    // drag start\n\t    _eventFrameClose: function (e) {\n\t        // check\n\t        if (this.event.type !== null) {\n\t            return;\n\t        }\n\t\n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // get frame\n\t        var frame = this._frameIdentify(e.target);\n\t        var self  = this;\n\t\n\t        // fade out\n\t        $(frame.id).fadeOut('fast', function() {\n\t            // remove element\n\t            $(frame.id).remove();\n\t\n\t            // remove from dictionary\n\t            delete self.frame_list[frame.id];\n\t\n\t            // reduce frame counter\n\t            self.frame_counter--;\n\t\n\t            // reload\n\t            self._panelRefresh(true);\n\t\n\t            // refresh scroll state once all animations completed\n\t            self._panelAnimationComplete();\n\t\n\t            // hide if no frames left\n\t            if (self.visible && self.frame_counter == 0)\n\t                self.hide();\n\t        });\n\t    },\n\t\n\t    // drag start\n\t    _eventFrameLock: function (e) {\n\t        // check\n\t        if (this.event.type !== null) {\n\t            return;\n\t        }\n\t\n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // get frame\n\t        var frame = this._frameIdentify(e.target);\n\t\n\t        // check\n\t        if (frame.grid_lock) {\n\t            // unlock\n\t            frame.grid_lock = false;\n\t\n\t            // remove class\n\t            $(frame.id).find('.f-pin').removeClass('toggle');\n\t            $(frame.id).find('.f-header').removeClass('f-not-allowed');\n\t            $(frame.id).find('.f-title').removeClass('f-not-allowed');\n\t            $(frame.id).find('.f-resize').show();\n\t            $(frame.id).find('.f-close').show();\n\t        } else {\n\t            // lock\n\t            frame.grid_lock = true;\n\t\n\t            // add class\n\t            $(frame.id).find('.f-pin').addClass('toggle');\n\t            $(frame.id).find('.f-header').addClass('f-not-allowed');\n\t            $(frame.id).find('.f-title').addClass('f-not-allowed');\n\t            $(frame.id).find('.f-resize').hide();\n\t            $(frame.id).find('.f-close').hide();\n\t        }\n\t    },\n\t\n\t    // show/hide panel\n\t    _eventHide: function (e) {\n\t        // check\n\t        if (this.event.type !== null) {\n\t            return;\n\t        }\n\t\n\t        // hide panel\n\t        this.hide();\n\t    },\n\t\n\t    /**\n\t     * Fired when scrolling occurs on panel.\n\t     */\n\t    _eventPanelScroll: function(e) {\n\t        // check\n\t        if (this.event.type !== null || !this.visible) {\n\t            return;\n\t        }\n\t\n\t        // Stop propagation if scrolling is happening inside a frame.\n\t        // TODO: could propagate scrolling if at top/bottom of frame.\n\t        var frames = $(e.srcElement).parents('.frame')\n\t        if (frames.length !== 0) {\n\t            e.stopPropagation();\n\t            return;\n\t        }\n\t\n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // get wheel delta\n\t        var delta = e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3;\n\t\n\t        // refresh panel\n\t        this._panelScroll(delta);\n\t    },\n\t\n\t    // scroll up\n\t    _eventPanelScroll_up: function(e) {\n\t        // check\n\t        if (this.event.type !== null)\n\t            return;\n\t  \n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // scroll up\n\t        this._panelScroll(-this.options.scroll);\n\t    },\n\t\n\t    // scroll down\n\t    _eventPanelScroll_down: function(e) {\n\t        // check\n\t        if (this.event.type !== null)\n\t            return;\n\t\n\t        // prevent\n\t        e.preventDefault();\n\t\n\t        // scroll down\n\t        this._panelScroll(this.options.scroll);\n\t    },\n\t\n\t    /*\n\t        FRAME EVENTS SUPPORT\n\t    */\n\t\n\t    // identify\n\t    _frameIdentify: function(target) {\n\t        return this.frame_list['#' + $(target).closest('.frame').attr('id')];\n\t    },\n\t\n\t    // drag start\n\t    _frameDragStart : function (frame) {\n\t        // set focus\n\t        this._frameFocus(frame, true);\n\t\n\t        // get current dimensions\n\t        var p = this._frameScreen (frame);\n\t\n\t        // initialize shadow\n\t        this._frameResize(this.frame_shadow, p);\n\t        this._frameGrid(this.frame_shadow, frame.grid_location);\n\t\n\t        // reset location\n\t        frame.grid_location = null;\n\t\n\t        // show shadow\n\t        $(this.frame_shadow.id).show();\n\t\n\t        // load frame cover\n\t        $('.f-cover').show();\n\t    },\n\t\n\t    // drag stop\n\t    _frameDragStop : function (frame) {\n\t        // remove focus\n\t        this._frameFocus(frame, false);\n\t\n\t        // get new dimensions\n\t        var p = this._frameScreen(this.frame_shadow);\n\t\n\t        // update frame\n\t        this._frameResize(frame, p);\n\t        this._frameGrid(frame, this.frame_shadow.grid_location, true);\n\t\n\t        // reset location of shadow\n\t        this.frame_shadow.grid_location = null;\n\t\n\t        // hide shadow\n\t        $(this.frame_shadow.id).hide();\n\t\n\t        // hide frame cover\n\t        $('.f-cover').hide();\n\t\n\t        // refresh scroll state once all animations completed\n\t        this._panelAnimationComplete();\n\t    },\n\t\n\t    /*\n\t        GRID/PIXEL CONVERTER\n\t    */\n\t\n\t    // converts a pixel coordinate to grids\n\t    _toGridCoord: function (type, px) {\n\t        var sign = (type == 'width' || type == 'height') ? 1 : -1;\n\t        if (type == 'top') px -= this.top;\n\t        return parseInt((px + sign * this.options.margin) / this.options.cell, 10);\n\t    },\n\t    \n\t    // converts a grid coordinate to pixels\n\t    _toPixelCoord: function (type, g) {\n\t        var sign = (type == 'width' || type == 'height') ? 1 : -1;\n\t        var px = (g * this.options.cell) - sign * this.options.margin;\n\t        if (type == 'top') px += this.top;\n\t        return px;\n\t    },\n\t\n\t    // get grid coordinates\n\t    _toGrid: function (px) {\n\t        return {\n\t            top     : this._toGridCoord('top', px.top),\n\t            left    : this._toGridCoord('left', px.left),\n\t            width   : this._toGridCoord('width', px.width),\n\t            height  : this._toGridCoord('height', px.height)\n\t        };\n\t    },\n\t\n\t    // get pixel coordinates\n\t    _toPixel: function(g) {\n\t        return {\n\t            top     : this._toPixelCoord('top', g.top),\n\t            left    : this._toPixelCoord('left', g.left),\n\t            width   : this._toPixelCoord('width', g.width),\n\t            height  : this._toPixelCoord('height', g.height)\n\t        };\n\t    },\n\t\n\t    /* \n\t        COLLISION DETECTION\n\t    */\n\t\n\t    // check collision\n\t    _isCollision: function(g) {\n\t        // is collision pair\n\t        function is_collision_pair (a, b) {\n\t            return !(a.left > b.left + b.width - 1 || a.left + a.width - 1 < b.left ||\n\t                     a.top > b.top + b.height  - 1 || a.top + a.height - 1 < b.top);\n\t        }\n\t\n\t        // search\n\t        for (var i in this.frame_list) {\n\t            // get frame\n\t            var frame = this.frame_list[i];\n\t\n\t            // skip\n\t            if (frame.grid_location === null)\n\t                continue;\n\t\n\t            // check if g collides with frame\n\t            if (is_collision_pair (g, frame.grid_location))\n\t                return true;\n\t        }\n\t\n\t        // return\n\t        return false;\n\t    },\n\t\n\t    // location/grid rank\n\t    _locationRank: function(loc) {\n\t        return (loc.top * this.cols) + loc.left;\n\t    },\n\t\n\t    /*\n\t        ONSCREEN MENU\n\t    */\n\t\n\t    // update frame counter\n\t    _menuRefresh: function() {\n\t        // scroll up possible?\n\t        if (this.visible) {\n\t            if (this.top == this.options.top_min)\n\t                $(\".frame-scroll-up\").hide();\n\t            else\n\t                $(\".frame-scroll-up\").show();\n\t\n\t            // scroll down possible?\n\t            if (this.top == this.top_max)\n\t                $(\".frame-scroll-down\").hide();\n\t            else\n\t                $(\".frame-scroll-down\").show();\n\t        }\n\t\n\t        // trigger onchange\n\t        if (this.options.onchange) {\n\t            this.options.onchange();\n\t        }\n\t    },\n\t\n\t    /*\n\t        PANEL/WINDOW FUNCTIONS\n\t    */\n\t\n\t    // panel on animation complete / frames not moving\n\t    _panelAnimationComplete: function() {\n\t        var self = this;\n\t        $(\".frame\").promise().done(function() {self._panelScroll(0, true)});\n\t    },\n\t\n\t    // refresh panel\n\t    _panelRefresh: function(animate) {\n\t        // get current size\n\t        this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n\t\n\t        // recalculate frame positions\n\t        this._frameInsert(null, null, animate);\n\t    },\n\t\n\t    // update scroll\n\t    _panelScroll: function(delta, animate) {\n\t        // new top value\n\t        var top_new = this.top - this.options.scroll * delta;\n\t\n\t        // update top\n\t        top_new = Math.max(top_new, this.top_max);\n\t        top_new = Math.min(top_new, this.options.top_min);\n\t\n\t        // update screen if necessary\n\t        if (this.top != top_new) {\n\t            // update screen\n\t            for (var i in this.frame_list) {\n\t                // get frame\n\t                var frame = this.frame_list[i];\n\t\n\t                // skip\n\t                if (frame.grid_location !== null) {\n\t                    var screen_location = {\n\t                        top  : frame.screen_location.top - (this.top - top_new),\n\t                        left : frame.screen_location.left\n\t                    }\n\t                    this._frameOffset(frame, screen_location, animate);\n\t                }\n\t            }\n\t\n\t            // update top value\n\t            this.top = top_new;\n\t        }\n\t\n\t        // refresh\n\t        this._menuRefresh();\n\t    },\n\t\n\t    /*\n\t        FRAME FUNCTIONS\n\t    */\n\t\n\t    // frame insert at given location\n\t    _frameInsert: function(frame, new_loc, animate) {\n\t        // define\n\t        var place_list = [];\n\t\n\t        // frame to place\n\t        if (frame) {\n\t            // reset grid location\n\t            frame.grid_location = null;\n\t\n\t            // set first one to be placed\n\t            place_list.push([frame, this._locationRank(new_loc)]);\n\t        }\n\t\n\t        // search\n\t        var i = null;\n\t        for (i in this.frame_list) {\n\t            // get frame\n\t            var f = this.frame_list[i];\n\t\n\t            // check\n\t            if (f.grid_location !== null && !f.grid_lock) {\n\t                // reset grid location\n\t                f.grid_location = null;\n\t\n\t                // set up for placement\n\t                place_list.push([f, f.grid_rank]);\n\t            }\n\t        }\n\t\n\t        // sort place list by rank\n\t        place_list.sort(function(a, b) {\n\t            var i = a[1];\n\t            var j = b[1];\n\t            return i < j ? -1 : (i > j ? 1 : 0);\n\t        });\n\t\n\t        // place\n\t        for (i = 0; i < place_list.length; i++) {\n\t            this._framePlace(place_list[i][0], animate);\n\t        }\n\t\n\t        // identify maximum viewport size\n\t        this.top_max = 0;\n\t        for (var i in this.frame_list) {\n\t            // get frame\n\t            var frame = this.frame_list[i];\n\t\n\t            // skip\n\t            if (frame.grid_location !== null)\n\t                this.top_max = Math.max(this.top_max, frame.grid_location.top + frame.grid_location.height);\n\t        }\n\t\n\t        // mesh maximum top with window size and margin\n\t        this.top_max = $(window).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n\t\n\t        // fix value\n\t        this.top_max = Math.min(this.top_max, this.options.top_min);\n\t\n\t        // panel menu\n\t        this._menuRefresh();\n\t    },\n\t\n\t    // naive frame place\n\t    _framePlace: function(frame, animate) {\n\t        // reset grid location\n\t        frame.grid_location = null;\n\t\n\t        // grid coordinates of new frame\n\t        var g = this._toGrid(this._frameScreen(frame));\n\t\n\t        // try grid coordinates\n\t        var done = false;\n\t        for (var i = 0; i < this.options.rows; i++) {\n\t            // ensure that the first grid column is checked despite limited window space\n\t            for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n\t                // coordinates\n\t                g.top   = i;\n\t                g.left  = j;\n\t\n\t                // no collision\n\t                if (!this._isCollision(g)) {\n\t                    done = true;\n\t                    break;\n\t                }\n\t            }\n\t\n\t            // break\n\t            if (done) {\n\t                break;\n\t            }\n\t        }\n\t\n\t        // check if valid spot was found\n\t        if (done) {\n\t            this._frameGrid(frame, g, animate);\n\t        } else {\n\t            console.log(\"Grid dimensions exceeded.\");\n\t        }\n\t    },\n\t\n\t    // focus\n\t    _frameFocus: function(frame, has_focus) {\n\t        // get new z-value\n\t        var z = this.frame_z + (has_focus ? 1 : 0);\n\t\n\t        // update\n\t        $(frame.id).css('z-index', z);\n\t    },\n\t\n\t    // new left/top position frame\n\t    _frameOffset: function(frame, p, animate) {\n\t        // update screen location\n\t        frame.screen_location.left = p.left;\n\t        frame.screen_location.top = p.top;\n\t\n\t        // animate\n\t        if (animate) {\n\t            // set focus on animated\n\t            this._frameFocus(frame, true);\n\t\n\t            // prepare for callback\n\t            var self = this;\n\t\n\t            // animate and remove focus\n\t            $(frame.id).animate({top: p.top, left: p.left}, 'fast', function() {\n\t                self._frameFocus(frame, false);\n\t            });\n\t        } else {\n\t            $(frame.id).css({top: p.top, left: p.left});\n\t        }\n\t    },\n\t\n\t    // resize frame\n\t    _frameResize: function(frame, p) {\n\t        // update css\n\t        $(frame.id).css({width: p.width, height: p.height});\n\t\n\t        // update descriptor\n\t        frame.screen_location.width = p.width;\n\t        frame.screen_location.height = p.height;\n\t    },\n\t\n\t    // new grid location\n\t    _frameGrid: function (frame, l, animate) {\n\t        // update grid location\n\t        frame.grid_location = l;\n\t\n\t        // place frame\n\t        this._frameOffset(frame, this._toPixel(l), animate);\n\t\n\t        // update grid rank\n\t        frame.grid_rank = this._locationRank(l);\n\t    },\n\t\n\t    // get frame dimensions\n\t    _frameScreen: function(frame) {\n\t        var p = frame.screen_location;\n\t        return {top: p.top, left: p.left, width: p.width, height: p.height};\n\t    },\n\t\n\t    /*\n\t        HTML TEMPLATES\n\t    */\n\t\n\t    // main element\n\t    _template: function() {\n\t        return  '<div class=\"galaxy-frame\"></div>';\n\t    },\n\t\n\t    // fill regular frame template\n\t    _templateFrame: function(id, title) {\n\t        // check title\n\t        if (!title)\n\t            title = '';\n\t\n\t        // load template\n\t        return  '<div id=\"' + id + '\" class=\"frame corner\">' +\n\t                    '<div class=\"f-header corner\">' +\n\t                        '<span class=\"f-title\">' + title + '</span>' +\n\t                        '<span class=\"f-icon f-close fa fa-trash-o\"></span>' +\n\t                        '<span class=\"f-icon f-pin fa fa-thumb-tack\"></span>' +\n\t                    '</div>' +\n\t                    '<div class=\"f-content\">' +\n\t                        '<div class=\"f-cover\"></div>' +\n\t                    '</div>' +\n\t                    '<span class=\"f-resize f-icon corner fa fa-expand\"></span>' +\n\t                '</div>';\n\t    },\n\t\n\t    // fill regular frame template\n\t    _templateFrameUrl: function(id, title, url) {\n\t        // url\n\t        if (url.indexOf('?') == -1)\n\t            url += '?';\n\t        else\n\t            url += '&';\n\t        url += 'widget=True';\n\t\n\t        // element\n\t        var $el = $(this._templateFrame(id, title));\n\t        $el.find('.f-content').append('<iframe scrolling=\"auto\" class=\"f-iframe\" src=\"' + url + '\"></iframe>');\n\t\n\t        // load template\n\t        return $el;\n\t    },\n\t\n\t    // fill shadow template\n\t    _templateShadow: function(id) {\n\t        return '<div id=\"' + id + '\" class=\"frame-shadow corner\"></div>';\n\t    },\n\t\n\t    // fill background template in order to cover underlying iframes\n\t    _templateBackground: function() {\n\t        return '<div class=\"frame-background\"></div>';\n\t    },\n\t\n\t    // fill menu button template\n\t    _templateMenu: function() {\n\t        return  '<div class=\"frame-scroll-up frame-menu fa fa-chevron-up fa-2x\"></div>' +\n\t                '<div class=\"frame-scroll-down frame-menu fa fa-chevron-down fa-2x\"></div>';\n\t    }\n\t});\n\t\n\t// return\n\treturn {\n\t    View: View\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(4),\n\t    __webpack_require__(34),\n\t    __webpack_require__(36),\n\t    __webpack_require__(66),\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function(Utils, Menu, Scratchbook, QuotaMeter) {\n\t\n\t/** Masthead **/\n\tvar GalaxyMasthead = Backbone.View.extend({\n\t    // base element\n\t    el_masthead: '#everything',\n\t\n\t    // options\n\t    options : null,\n\t\n\t    // background\n\t    $background: null,\n\t\n\t    // list\n\t    list: [],\n\t\n\t    // initialize\n\t    initialize : function(options) {\n\t        // update options\n\t        this.options = options;\n\t\n\t        // HACK: due to body events defined in panel.js\n\t        $(\"body\").off();\n\t\n\t        // define this element\n\t        this.setElement($(this._template(options)));\n\t        // add to page\n\t        $( '#masthead' ).replaceWith( this.$el );\n\t\n\t        // assign background\n\t        this.$background = $(this.el).find('#masthead-background');\n\t\n\t        // loop through unload functions if the user attempts to unload the page\n\t        var self = this;\n\t        $(window).on('beforeunload', function() {\n\t            var text = \"\";\n\t            for (var key in self.list) {\n\t                if (self.list[key].options.onunload) {\n\t                    var q = self.list[key].options.onunload();\n\t                    if (q) text += q + \" \";\n\t                }\n\t            }\n\t            if (text !== \"\") {\n\t                return text;\n\t            }\n\t        });\n\t\n\t        // construct default menu options\n\t        this.menu = Galaxy.menu = new Menu.GalaxyMenu({\n\t            masthead    : this,\n\t            config      : this.options\n\t        });\n\t\n\t        // scratchpad\n\t        this.frame = Galaxy.frame = new Scratchbook.GalaxyFrame({\n\t            masthead    : this,\n\t        });\n\t\n\t        // set up the quota meter (And fetch the current user data from trans)\n\t        // add quota meter to masthead\n\t        Galaxy.quotaMeter = new QuotaMeter.UserQuotaMeter({\n\t            model       : Galaxy.user,\n\t            el          : this.$( '.quota-meter-container' )\n\t        }).render();\n\t    },\n\t\n\t    // configure events\n\t    events: {\n\t        'click'     : '_click',\n\t        'mousedown' : function(e) { e.preventDefault() }\n\t    },\n\t\n\t    // adds a new item to the masthead\n\t    append : function(item) {\n\t        return this._add(item, true);\n\t    },\n\t\n\t    // adds a new item to the masthead\n\t    prepend : function(item) {\n\t        return this._add(item, false);\n\t    },\n\t\n\t    // activate\n\t    highlight: function(id) {\n\t        var current = $(this.el).find('#' + id + '> li');\n\t        if (current) {\n\t            current.addClass('active');\n\t        }\n\t    },\n\t\n\t    // adds a new item to the masthead\n\t    _add : function(item, append) {\n\t        var $loc = $(this.el).find('#' + item.location);\n\t        if ($loc){\n\t            // create frame for new item\n\t            var $current = $(item.el);\n\t\n\t            // configure class in order to mark new items\n\t            $current.addClass('masthead-item');\n\t\n\t            // append to masthead\n\t            if (append) {\n\t                $loc.append($current);\n\t            } else {\n\t                $loc.prepend($current);\n\t            }\n\t\n\t            // add to list\n\t            this.list.push(item);\n\t        }\n\t\n\t        // location not found\n\t        return null;\n\t    },\n\t\n\t    // handle click event\n\t    _click: function(e) {\n\t        // close all popups\n\t        var $all = $(this.el).find('.popup');\n\t        if ($all) {\n\t            $all.hide();\n\t        }\n\t\n\t        // open current item\n\t        var $current = $(e.target).closest('.masthead-item').find('.popup');\n\t        if ($(e.target).hasClass('head')) {\n\t            $current.show();\n\t            this.$background.show();\n\t        } else {\n\t            this.$background.hide();\n\t        }\n\t    },\n\t\n\t    /*\n\t        HTML TEMPLATES\n\t    */\n\t\n\t    // fill template\n\t    _template: function(options) {\n\t        var brand_text = options.brand ? (\"/ \" + options.brand) : \"\" ;\n\t        return  '<div><div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n\t                    '<div style=\"position: relative; right: -50%; float: left;\">' +\n\t                        '<div id=\"navbar\" style=\"display: block; position: relative; right: 50%;\"></div>' +\n\t                    '</div>' +\n\t                   '<div class=\"navbar-brand\">' +\n\t                        '<a href=\"' + options.logo_url + '\">' +\n\t                            '<img style=\"margin-left: 0.35em;\" border=\"0\" src=\"' + Galaxy.root + 'static/images/galaxyIcon_noText.png\">' +\n\t                            '<span id=\"brand\"> Galaxy ' + brand_text + '</span>' +\n\t                        '</a>' +\n\t                    '</div>' +\n\t                    '<div class=\"quota-meter-container\"></div>' +\n\t                    '<div id=\"iconbar\" class=\"iconbar\"></div>' +\n\t                '</div>' +\n\t                '<div id=\"masthead-background\" style=\"display: none; position: absolute; top: 33px; width: 100%; height: 100%; z-index: 1010\"></div>' +\n\t                '</div>';\n\t    }\n\t});\n\t\n\t// return\n\treturn {\n\t    GalaxyMasthead: GalaxyMasthead\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\n\t/** GalaxyMenu uses the GalaxyMasthead class in order to add menu items and icons to the Masthead **/\n\tvar GalaxyMenu = Backbone.Model.extend({\n\t    initialize: function( options ) {\n\t        this.options = options.config;\n\t        this.masthead  = options.masthead;\n\t        this.create();\n\t    },\n\t\n\t    // default menu\n\t    create: function() {\n\t        //\n\t        // Analyze data tab.\n\t        //\n\t        var tab_analysis = new GalaxyMastheadTab({\n\t            id              : 'analysis',\n\t            title           : 'Analyze Data',\n\t            content         : '',\n\t            title_attribute : 'Analysis home view'\n\t        });\n\t        this.masthead.append( tab_analysis );\n\t\n\t        //\n\t        // Workflow tab.\n\t        //\n\t\n\t        var workflow_options = {\n\t            id              : 'workflow',\n\t            title           : 'Workflow',\n\t            content         : 'workflow',\n\t            title_attribute : 'Chain tools into workflows'\n\t        }\n\t        if ( !Galaxy.user.id ) {\n\t            workflow_options.disabled = true; // disable workflows for anonymous users\n\t        }\n\t\n\t        var tab_workflow = new GalaxyMastheadTab( workflow_options );\n\t        this.masthead.append( tab_workflow );\n\t\n\t        //\n\t        // 'Shared Items' or Libraries tab.\n\t        //\n\t        var tab_shared = new GalaxyMastheadTab({\n\t            id              : 'shared',\n\t            title           : 'Shared Data',\n\t            content         : 'library/index',\n\t            title_attribute : 'Access published resources'\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Data Libraries deprecated',\n\t            content : 'library/index'\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Data Libraries',\n\t            content : 'library/list',\n\t            divider : true\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Published Histories',\n\t            content : 'history/list_published'\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Published Workflows',\n\t            content : 'workflow/list_published'\n\t\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Published Visualizations',\n\t            content : 'visualization/list_published'\n\t        });\n\t\n\t        tab_shared.add({\n\t            title   : 'Published Pages',\n\t            content : 'page/list_published'\n\t        });\n\t\n\t        this.masthead.append(tab_shared);\n\t\n\t        //\n\t        // Lab menu.\n\t        //\n\t        if ( this.options.user_requests ) {\n\t            var tab_lab = new GalaxyMastheadTab({\n\t                id      : 'lab',\n\t                title   : 'Lab'\n\t            });\n\t            tab_lab.add({\n\t                title   : 'Sequencing Requests',\n\t                content : 'requests/index'\n\t            });\n\t            tab_lab.add({\n\t                title   : 'Find Samples',\n\t                content : 'requests/find_samples_index'\n\t            });\n\t            tab_lab.add({\n\t                title   : 'Help',\n\t                content : this.options.lims_doc_url\n\t            });\n\t            this.masthead.append( tab_lab );\n\t        }\n\t\n\t        //\n\t        // Visualization tab.\n\t        //\n\t\n\t        var visualization_options = {\n\t            id              : 'visualization',\n\t            title           : 'Visualization',\n\t            content         : 'visualization/list',\n\t            title_attribute : 'Visualize datasets'\n\t        }\n\t\n\t        // disable visualizations for anonymous users\n\t        if ( !Galaxy.user.id ) {\n\t            visualization_options.disabled = true;\n\t        }\n\t        var tab_visualization = new GalaxyMastheadTab( visualization_options );\n\t\n\t        // add submenu only when user is logged in\n\t        if ( Galaxy.user.id ) {\n\t            tab_visualization.add({\n\t                title   : 'New Track Browser',\n\t                content : 'visualization/trackster',\n\t                target  : '_frame'\n\t            });\n\t            tab_visualization.add({\n\t                title   : 'Saved Visualizations',\n\t                content : 'visualization/list',\n\t                target  : '_frame'\n\t            });\n\t        }\n\t        this.masthead.append( tab_visualization );\n\t\n\t        //\n\t        // Admin.\n\t        //\n\t        if ( Galaxy.user.get( 'is_admin' ) ) {\n\t            var tab_admin = new GalaxyMastheadTab({\n\t                id              : 'admin',\n\t                title           : 'Admin',\n\t                content         : 'admin',\n\t                extra_class     : 'admin-only',\n\t                title_attribute : 'Administer this Galaxy'\n\t            });\n\t            this.masthead.append( tab_admin );\n\t        }\n\t\n\t        //\n\t        // Help tab.\n\t        //\n\t        var tab_help = new GalaxyMastheadTab({\n\t            id              : 'help',\n\t            title           : 'Help',\n\t            title_attribute : 'Support, contact, and community hubs'\n\t        });\n\t        if ( this.options.biostar_url ){\n\t            tab_help.add({\n\t                title   : 'Galaxy Biostar',\n\t                content : this.options.biostar_url_redirect,\n\t                target  : '_blank'\n\t            });\n\t            tab_help.add({\n\t                title   : 'Ask a question',\n\t                content : 'biostar/biostar_question_redirect',\n\t                target  : '_blank'\n\t            });\n\t        }\n\t        tab_help.add({\n\t            title   : 'Support',\n\t            content : this.options.support_url,\n\t            target  : '_blank'\n\t        });\n\t        tab_help.add({\n\t            title   : 'Search',\n\t            content : this.options.search_url,\n\t            target  : '_blank'\n\t        });\n\t        tab_help.add({\n\t            title   : 'Mailing Lists',\n\t            content : this.options.mailing_lists,\n\t            target  : '_blank'\n\t        });\n\t        tab_help.add({\n\t            title   : 'Videos',\n\t            content : this.options.screencasts_url,\n\t            target  : '_blank'\n\t        });\n\t        tab_help.add({\n\t            title   : 'Wiki',\n\t            content : this.options.wiki_url,\n\t            target  : '_blank'\n\t        });\n\t        tab_help.add({\n\t            title   : 'How to Cite Galaxy',\n\t            content : this.options.citation_url,\n\t            target  : '_blank'\n\t        });\n\t        if (this.options.terms_url){\n\t            tab_help.add({\n\t                title   : 'Terms and Conditions',\n\t                content : this.options.terms_url,\n\t                target  : '_blank'\n\t            });\n\t        }\n\t        this.masthead.append( tab_help );\n\t\n\t        //\n\t        // User tab.\n\t        //\n\t        if ( !Galaxy.user.id ){\n\t            var tab_user = new GalaxyMastheadTab({\n\t                id              : 'user',\n\t                title           : 'User',\n\t                extra_class     : 'loggedout-only',\n\t                title_attribute : 'Account registration or login'\n\t            });\n\t\n\t            // login\n\t            tab_user.add({\n\t                title   : 'Login',\n\t                content : 'user/login',\n\t                target  : 'galaxy_main'\n\t            });\n\t\n\t            // register\n\t            if ( this.options.allow_user_creation ){\n\t                tab_user.add({\n\t                    title   : 'Register',\n\t                    content : 'user/create',\n\t                    target  : 'galaxy_main'\n\t                });\n\t            }\n\t\n\t            // add to masthead\n\t            this.masthead.append( tab_user );\n\t        } else {\n\t            var tab_user = new GalaxyMastheadTab({\n\t                id              : 'user',\n\t                title           : 'User',\n\t                extra_class     : 'loggedin-only',\n\t                title_attribute : 'Account preferences and saved data'\n\t            });\n\t\n\t            // show user logged in info\n\t            tab_user.add({\n\t                title   : 'Logged in as ' + Galaxy.user.get( 'email' )\n\t            });\n\t\n\t            tab_user.add({\n\t                title   : 'Preferences',\n\t                content : 'user?cntrller=user',\n\t                target  : 'galaxy_main'\n\t            });\n\t\n\t            tab_user.add({\n\t                title   : 'Custom Builds',\n\t                content : 'user/dbkeys',\n\t                target  : 'galaxy_main'\n\t            });\n\t\n\t            tab_user.add({\n\t                title   : 'Logout',\n\t                content : 'user/logout',\n\t                target  : '_top',\n\t                divider : true\n\t            });\n\t\n\t            // default tabs\n\t            tab_user.add({\n\t                title   : 'Saved Histories',\n\t                content : 'history/list',\n\t                target  : 'galaxy_main'\n\t            });\n\t            tab_user.add({\n\t                title   : 'Saved Datasets',\n\t                content : 'dataset/list',\n\t                target  : 'galaxy_main'\n\t            });\n\t            tab_user.add({\n\t                title   : 'Saved Pages',\n\t                content : 'page/list',\n\t                target  : '_top'\n\t            });\n\t\n\t            tab_user.add({\n\t                title   : 'API Keys',\n\t                content : 'user/api_keys?cntrller=user',\n\t                target  : 'galaxy_main'\n\t            });\n\t\n\t            if ( this.options.use_remote_user ){\n\t                tab_user.add({\n\t                    title   : 'Public Name',\n\t                    content : 'user/edit_username?cntrller=user',\n\t                    target  : 'galaxy_main'\n\t                });\n\t            }\n\t\n\t            // add to masthead\n\t            this.masthead.append( tab_user );\n\t        }\n\t\n\t        // identify active tab\n\t        if ( this.options.active_view ) {\n\t            this.masthead.highlight( this.options.active_view );\n\t        }\n\t    }\n\t});\n\t\n\t/** Masthead tab **/\n\tvar GalaxyMastheadTab = Backbone.View.extend({\n\t    // main options\n\t    options:{\n\t        id              : '',\n\t        title           : '',\n\t        target          : '_parent',\n\t        content         : '',\n\t        type            : 'url',\n\t        scratchbook     : false,\n\t        onunload        : null,\n\t        visible         : true,\n\t        disabled        : false,\n\t        title_attribute : ''\n\t    },\n\t\n\t    // location\n\t    location: 'navbar',\n\t\n\t    // optional sub menu\n\t    $menu: null,\n\t\n\t    // events\n\t    events:{\n\t        'click .head' : '_head'\n\t    },\n\t\n\t    // initialize\n\t    initialize: function ( options ){\n\t        // read in defaults\n\t        if ( options ){\n\t            this.options = _.defaults( options, this.options );\n\t        }\n\t\n\t        // update url\n\t        if ( this.options.content !== undefined && this.options.content.indexOf( '//' ) === -1 ){\n\t            this.options.content = Galaxy.root + this.options.content;\n\t        }\n\t\n\t        // add template for tab\n\t        this.setElement( $( this._template( this.options ) ) );\n\t\n\t        // disable menu items that are not available to anonymous user\n\t        // also show title to explain why they are disabled\n\t        if ( this.options.disabled ){\n\t            $( this.el ).find( '.root' ).addClass( 'disabled' );\n\t            this._attachPopover();\n\t        }\n\t\n\t        // visiblity\n\t        if ( !this.options.visible ){\n\t            this.hide();\n\t        }\n\t    },\n\t\n\t    // show\n\t    show: function(){\n\t        $(this.el).css({visibility : 'visible'});\n\t    },\n\t\n\t    // show\n\t    hide: function(){\n\t        $(this.el).css({visibility : 'hidden'});\n\t    },\n\t\n\t    // add menu item\n\t    add: function (options){\n\t        // menu option defaults\n\t        var menuOptions = {\n\t            title       : 'Title',\n\t            content     : '',\n\t            type        : 'url',\n\t            target      : '_parent',\n\t            scratchbook : false,\n\t            divider     : false\n\t        }\n\t\n\t        // read in defaults\n\t        if (options)\n\t            menuOptions = _.defaults(options, menuOptions);\n\t\n\t        // update url\n\t        if (menuOptions.content && menuOptions.content.indexOf('//') === -1)\n\t            menuOptions.content = Galaxy.root + menuOptions.content;\n\t\n\t        // check if submenu element is available\n\t        if (!this.$menu){\n\t            // insert submenu element into root\n\t            $(this.el).find('.root').append(this._templateMenu());\n\t\n\t            // show caret\n\t            $(this.el).find('.symbol').addClass('caret');\n\t\n\t            // update element link\n\t            this.$menu = $(this.el).find('.popup');\n\t        }\n\t\n\t        // create\n\t        var $item = $(this._templateMenuItem(menuOptions));\n\t\n\t        // append menu\n\t        this.$menu.append($item);\n\t\n\t        // add events\n\t        var self = this;\n\t        $item.on('click', function(e){\n\t            // prevent default\n\t            e.preventDefault();\n\t\n\t            // no modifications if new tab is requested\n\t            if (self.options.target === '_blank')\n\t                return true;\n\t\n\t            // load into frame\n\t            Galaxy.frame.add(options);\n\t        });\n\t\n\t        // append divider\n\t        if (menuOptions.divider)\n\t            this.$menu.append($(this._templateDivider()));\n\t    },\n\t\n\t    // show menu on header click\n\t    _head: function(e){\n\t        // prevent default\n\t        e.preventDefault();\n\t\n\t        if (this.options.disabled){\n\t            return // prevent link following if menu item is disabled\n\t        }\n\t\n\t        // check for menu options\n\t        if (!this.$menu) {\n\t            Galaxy.frame.add(this.options);\n\t        }\n\t    },\n\t\n\t    _attachPopover : function(){\n\t        var $popover_element = $(this.el).find('.head');\n\t        $popover_element.popover({\n\t            html: true,\n\t            content: 'Please <a href=\"' + Galaxy.root + 'user/login?use_panels=True\">log in</a> or <a href=\"' + Galaxy.root + 'user/create?use_panels=True\">register</a> to use this feature.',\n\t            placement: 'bottom'\n\t        }).on('shown.bs.popover', function() { // hooking on bootstrap event to automatically hide popovers after delay\n\t            setTimeout(function() {\n\t                $popover_element.popover('hide');\n\t            }, 5000);\n\t        });\n\t     },\n\t\n\t    // fill template header\n\t    _templateMenuItem: function (options){\n\t        return '<li><a href=\"' + options.content + '\" target=\"' + options.target + '\">' + options.title + '</a></li>';\n\t    },\n\t\n\t    // fill template header\n\t    _templateMenu: function (){\n\t        return '<ul class=\"popup dropdown-menu\"></ul>';\n\t    },\n\t\n\t    _templateDivider: function(){\n\t        return '<li class=\"divider\"></li>';\n\t    },\n\t\n\t    // fill template\n\t    _template: function (options){\n\t        // start template\n\t        var tmpl =  '<ul id=\"' + options.id + '\" class=\"nav navbar-nav\" border=\"0\" cellspacing=\"0\">' +\n\t                        '<li class=\"root dropdown\" style=\"\">' +\n\t                            '<a class=\"head dropdown-toggle\" data-toggle=\"dropdown\" target=\"' + options.target + '\" href=\"' + options.content + '\" title=\"' + options.title_attribute + '\">' +\n\t                                options.title + '<b class=\"symbol\"></b>' +\n\t                            '</a>' +\n\t                        '</li>' +\n\t                    '</ul>';\n\t\n\t        // return template\n\t        return tmpl;\n\t    }\n\t});\n\t\n\t// return\n\treturn {\n\t    GalaxyMenu: GalaxyMenu,\n\t    GalaxyMastheadTab: GalaxyMastheadTab\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(33),\n\t    __webpack_require__(13),\n\t    __webpack_require__(10),\n\t    __webpack_require__(6)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( MASTHEAD, PANEL, MODAL, BASE_MVC ) {\n\t\n\t// ============================================================================\n\tvar PageLayoutView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n\t    _logNamespace : 'layout',\n\t\n\t    el : 'body',\n\t    className : 'full-content',\n\t\n\t    _panelIds : [\n\t        'left', 'center', 'right'\n\t    ],\n\t\n\t    defaultOptions : {\n\t        message_box_visible : false,\n\t        message_box_content : '',\n\t        message_box_class   : 'info',\n\t\n\t        show_inactivity_warning : false,\n\t        inactivity_box_content  : '',\n\t    },\n\t\n\t    initialize : function( options ){\n\t        this.log( this + '.initialize:', options );\n\t        _.extend( this, _.pick( options, this._panelIds ) );\n\t        this.options = _.defaults( _.omit( options, this._panelIds ), this.defaultOptions );\n\t\n\t        // TODO: remove globals\n\t        Galaxy.modal = this.modal = new MODAL.View();\n\t    },\n\t\n\t    /**  */\n\t    $everything : function(){\n\t        return this.$( '#everything' );\n\t    },\n\t\n\t    render : function(){\n\t        this.log( this + '.render:' );\n\t        this.$el.attr( 'scroll', 'no' );\n\t        this.$el.html( this.template( this.options ) );\n\t\n\t        //TODO: no render on masthead, needs init each time\n\t        Galaxy.masthead = this.masthead = new MASTHEAD.GalaxyMasthead( _.extend( this.options.config, {\n\t            el: this.$( '#masthead' ).get(0)\n\t        }));\n\t\n\t        if( this.options.message_box_visible ){\n\t            this.messageBox( this.options.message_box_content, this.options.message_box_class );\n\t        }\n\t        if( this.options.show_inactivity_warning ){\n\t            this.inactivityWarning( this.options.inactivity_box_content );\n\t        }\n\t\n\t        this.renderPanels();\n\t        return this;\n\t    },\n\t\n\t    /**  */\n\t    messageBox : function( content, level ){\n\t        content = content || '';\n\t        level = level || 'info';\n\t        this.$el.addClass( 'has-message-box' );\n\t        this.$( '#messagebox' )\n\t            .attr( 'class', 'panel-' + level + '-message' )\n\t            .html( content )\n\t            .toggle( !!content );\n\t        return this;\n\t    },\n\t\n\t    /**  */\n\t    inactivityWarning : function( content ){\n\t        var verificationLink = '<a href=\"' + Galaxy.root + 'user/resend_verification\">Resend verification.</a>';\n\t        this.$el.addClass( 'has-inactivity-box' );\n\t        this.$( '#inactivebox' )\n\t            .html( content )\n\t            .append( ' ' + verificationLink )\n\t            .toggle( !!content );\n\t        return this;\n\t    },\n\t\n\t    /**  */\n\t    renderPanels : function(){\n\t        var page = this;\n\t        // TODO: Remove this line after select2 update\n\t        $( '.select2-hidden-accessible' ).remove();\n\t        this._panelIds.forEach( function( panelId ){\n\t            if( _.has( page, panelId ) ){\n\t                var panelView = page[ panelId ];\n\t                panelView.setElement( '#' + panelId );\n\t                panelView.render();\n\t            }\n\t        });\n\t        if( !this.left ){\n\t            this.center.$el.css( 'left', 0 );\n\t        }\n\t        if( !this.right ){\n\t            this.center.$el.css( 'right', 0 );\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /** body template */\n\t    //TODO: to underscore\n\t    template: function( options ){\n\t        //TODO: remove inline styling\n\t        return [\n\t            '<div id=\"everything\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\">',\n\t                '<div id=\"background\"/>',\n\t                '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\"></div>',\n\t                '<div id=\"messagebox\" style=\"display: none;\"></div>',\n\t                '<div id=\"inactivebox\" class=\"panel-warning-message\" style=\"display: none;\"></div>',\n\t                // content here\n\t                // TODO: wrapping div\n\t                this.left?   '<div id=\"left\"/>' : '',\n\t                this.center? '<div id=\"center\" class=\"inbound\"/>' : '',\n\t                this.right?  '<div id=\"right\"/>' : '',\n\t            '</div>',\n\t            // a dropdown overlay for capturing clicks/drags\n\t            '<div id=\"dd-helper\" style=\"display: none;\"></div>',\n\t            // display message when js is disabled\n\t            '<noscript>',\n\t                '<div class=\"overlay overlay-background noscript-overlay\">',\n\t                    '<div>',\n\t                        '<h3 class=\"title\">Javascript Required for Galaxy</h3>',\n\t                        '<div>',\n\t                            'The Galaxy analysis interface requires a browser with Javascript enabled.<br>',\n\t                            'Please enable Javascript and refresh this page',\n\t                        '</div>',\n\t                    '</div>',\n\t                '</div>',\n\t            '</noscript>'\n\t        ].join('');\n\t    },\n\t\n\t    hideSidePanels : function(){\n\t        if( this.left ){\n\t            this.left.hide();\n\t        }\n\t        if( this.right ){\n\t            this.right.hide();\n\t        }\n\t    },\n\t\n\t    toString : function(){ return 'PageLayoutView'; }\n\t});\n\t\n\t// ============================================================================\n\t    return {\n\t        PageLayoutView: PageLayoutView\n\t    };\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, $, _) {// dependencies\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(20)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Frames) {\n\t\n\t/** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\n\tvar GalaxyFrame = Backbone.View.extend({\n\t    // base element\n\t    el_main: 'body',\n\t\n\t    // frame active/disabled\n\t    active: false,\n\t\n\t    // button active\n\t    button_active: null,\n\t\n\t    // button load\n\t    button_load  : null,\n\t\n\t    // initialize\n\t    initialize : function(options) {\n\t        options = options || {};\n\t\n\t        // add to masthead menu\n\t        var self = this;\n\t\n\t        // create frames\n\t        this.frames = new Frames.View({\n\t            visible: false,\n\t        });\n\t\n\t        // add activate icon\n\t        this.button_active = new GalaxyMastheadIcon({\n\t            icon        : 'fa-th',\n\t            tooltip     : 'Enable/Disable Scratchbook',\n\t            onclick     : function() { self._activate(); },\n\t            onunload    : function() {\n\t                if (self.frames.length() > 0) {\n\t                    return \"You opened \" + self.frames.length() + \" frame(s) which will be lost.\";\n\t                }\n\t            }\n\t        });\n\t\n\t        // add load icon\n\t        this.button_load = new GalaxyMastheadIcon({\n\t            icon        : 'fa-eye',\n\t            tooltip     : 'Show/Hide Scratchbook',\n\t            onclick     : function(e) {\n\t                if (self.frames.visible) {\n\t                    self.frames.hide();\n\t                } else {\n\t                    self.frames.show();\n\t                }\n\t            },\n\t            with_number : true\n\t        });\n\t\n\t        // add to masthead\n\t        if( options.masthead ){\n\t            options.masthead.append(this.button_active);\n\t            options.masthead.append(this.button_load);\n\t        }\n\t\n\t        // create\n\t        this.setElement(this.frames.$el);\n\t\n\t        // append to main\n\t        $(this.el_main).append(this.$el);\n\t\n\t        // refresh menu\n\t        this.frames.setOnChange(function() {\n\t            self._refresh();\n\t        });\n\t        this._refresh();\n\t    },\n\t\n\t    /**\n\t     * Add a dataset to the frames.\n\t     */\n\t    add_dataset: function(dataset_id) {\n\t        var self = this;\n\t        __webpack_require__.e/* require */(1, function(__webpack_require__) { /* WEBPACK VAR INJECTION */(function($, _) {var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(14)]; (function(DATA) {\n\t            var dataset = new DATA.Dataset({ id: dataset_id });\n\t            $.when( dataset.fetch() ).then( function() {\n\t                // Construct frame config based on dataset's type.\n\t                var frame_config = {\n\t                        title: dataset.get('name')\n\t                    },\n\t                    // HACK: For now, assume 'tabular' and 'interval' are the only\n\t                    // modules that contain tabular files. This needs to be replaced\n\t                    // will a is_datatype() function.\n\t                    is_tabular = _.find(['tabular', 'interval'], function(data_type) {\n\t                        return dataset.get('data_type').indexOf(data_type) !== -1;\n\t                    });\n\t\n\t                // Use tabular chunked display if dataset is tabular; otherwise load via URL.\n\t                if (is_tabular) {\n\t                    var tabular_dataset = new DATA.TabularDataset(dataset.toJSON());\n\t                    _.extend(frame_config, {\n\t                        type: 'other',\n\t                        content: function( parent_elt ) {\n\t                            DATA.createTabularDatasetChunkedView({\n\t                                model: tabular_dataset,\n\t                                parent_elt: parent_elt,\n\t                                embedded: true,\n\t                                height: '100%'\n\t                            });\n\t                        }\n\t                    });\n\t                }\n\t                else {\n\t                    _.extend(frame_config, {\n\t                        type: 'url',\n\t                        content: Galaxy.root + 'datasets/' +\n\t                                 dataset.id + '/display/?preview=True'\n\t                    });\n\t                }\n\t\n\t                self.add(frame_config);\n\t\n\t            });\n\t        }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));\n\t/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1), __webpack_require__(3)))});\n\t\n\t    },\n\t\n\t    /**\n\t     * Add a trackster visualization to the frames.\n\t     */\n\t    add_trackster_viz: function(viz_id) {\n\t        var self = this;\n\t        __webpack_require__.e/* require */(0, function(__webpack_require__) { /* WEBPACK VAR INJECTION */(function($, _) {var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(32), __webpack_require__(114)]; (function(visualization, trackster) {\n\t            var viz = new visualization.Visualization({id: viz_id});\n\t            $.when( viz.fetch() ).then( function() {\n\t                var ui = new trackster.TracksterUI(Galaxy.root);\n\t\n\t                // Construct frame config based on dataset's type.\n\t                var frame_config = {\n\t                        title: viz.get('name'),\n\t                        type: 'other',\n\t                        content: function(parent_elt) {\n\t                            // Create view config.\n\t                            var view_config = {\n\t                                container: parent_elt,\n\t                                name: viz.get('title'),\n\t                                id: viz.id,\n\t                                // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n\t                                dbkey: viz.get('dbkey'),\n\t                                stand_alone: false\n\t                            },\n\t                            latest_revision = viz.get('latest_revision'),\n\t                            drawables = latest_revision.config.view.drawables;\n\t\n\t                            // Set up datasets in drawables.\n\t                            _.each(drawables, function(d) {\n\t                                d.dataset = {\n\t                                    hda_ldda: d.hda_ldda,\n\t                                    id: d.dataset_id\n\t                                };\n\t                            });\n\t\n\t                            view = ui.create_visualization(view_config,\n\t                                                           latest_revision.config.viewport,\n\t                                                           latest_revision.config.view.drawables,\n\t                                                           latest_revision.config.bookmarks,\n\t                                                           false);\n\t                        }\n\t                    };\n\t\n\t                self.add(frame_config);\n\t            });\n\t        }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));\n\t/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(1), __webpack_require__(3)))});\n\t    },\n\t\n\t    /**\n\t     * Add and display a new frame/window based on options.\n\t     */\n\t    add: function(options){\n\t        // open new tab\n\t        if (options.target == '_blank'){\n\t            window.open(options.content);\n\t            return;\n\t        }\n\t\n\t        // reload entire window\n\t        if (options.target == '_top' || options.target == '_parent' || options.target == '_self'){\n\t            window.location = options.content;\n\t            return;\n\t        }\n\t\n\t        // validate\n\t        if (!this.active){\n\t            // fix url if main frame is unavailable\n\t            var $galaxy_main = $(window.parent.document).find('#galaxy_main');\n\t            if (options.target == 'galaxy_main' || options.target == 'center'){\n\t                if ($galaxy_main.length === 0){\n\t                    var href = options.content;\n\t                    if (href.indexOf('?') == -1)\n\t                        href += '?';\n\t                    else\n\t                        href += '&';\n\t                    href += 'use_panels=True';\n\t                    window.location = href;\n\t                } else {\n\t                    $galaxy_main.attr('src', options.content);\n\t                }\n\t            } else\n\t                window.location = options.content;\n\t\n\t            // stop\n\t            return;\n\t        }\n\t\n\t        // add to frames view\n\t        this.frames.add(options);\n\t    },\n\t\n\t    // activate/disable panel\n\t    _activate: function (){\n\t        // check\n\t        if (this.active){\n\t            // disable\n\t            this.active = false;\n\t\n\t            // toggle\n\t            this.button_active.untoggle();\n\t\n\t            // hide panel\n\t            this.frames.hide();\n\t        } else {\n\t            // activate\n\t            this.active = true;\n\t\n\t            // untoggle\n\t            this.button_active.toggle();\n\t        }\n\t    },\n\t\n\t    // update frame counter\n\t    _refresh: function(){\n\t        // update on screen counter\n\t        this.button_load.number(this.frames.length());\n\t\n\t        // check\n\t        if(this.frames.length() === 0)\n\t            this.button_load.hide();\n\t        else\n\t            this.button_load.show();\n\t\n\t        // check\n\t        if (this.frames.visible) {\n\t            this.button_load.toggle();\n\t        } else {\n\t            this.button_load.untoggle();\n\t        }\n\t    }\n\t});\n\t\n\t/** Masthead icon **/\n\tvar GalaxyMastheadIcon = Backbone.View.extend({\n\t    // icon options\n\t    options:{\n\t        id              : '',\n\t        icon            : 'fa-cog',\n\t        tooltip         : '',\n\t        with_number     : false,\n\t        onclick         : function() { alert ('clicked') },\n\t        onunload        : null,\n\t        visible         : true\n\t    },\n\t\n\t    // location identifier for masthead class\n\t    location: 'iconbar',\n\t\n\t    // initialize\n\t    initialize: function (options){\n\t        // read in defaults\n\t        if (options)\n\t            this.options = _.defaults(options, this.options);\n\t\n\t        // add template for icon\n\t        this.setElement($(this._template(this.options)));\n\t\n\t        // configure icon\n\t        var self = this;\n\t        $(this.el).find('.icon').tooltip({title: this.options.tooltip, placement: 'bottom'})\n\t                                .on('mouseup', self.options.onclick);\n\t\n\t        // visiblity\n\t        if (!this.options.visible)\n\t            this.hide();\n\t    },\n\t\n\t    // show\n\t    show: function(){\n\t        $(this.el).css({visibility : 'visible'});\n\t    },\n\t\n\t    // show\n\t    hide: function(){\n\t        $(this.el).css({visibility : 'hidden'});\n\t    },\n\t\n\t    // switch icon\n\t    icon: function (new_icon){\n\t        // update icon class\n\t        $(this.el).find('.icon').removeClass(this.options.icon)\n\t                                .addClass(new_icon);\n\t\n\t        // update icon\n\t        this.options.icon = new_icon;\n\t    },\n\t\n\t    // toggle\n\t    toggle: function(){\n\t        $(this.el).addClass('toggle');\n\t    },\n\t\n\t    // untoggle\n\t    untoggle: function(){\n\t        $(this.el).removeClass('toggle');\n\t    },\n\t\n\t    // set/get number\n\t    number: function(new_number){\n\t        $(this.el).find('.number').text(new_number);\n\t    },\n\t\n\t    // fill template icon\n\t    _template: function (options){\n\t        var tmpl =  '<div id=\"' + options.id + '\" class=\"symbol\">' +\n\t                        '<div class=\"icon fa fa-2x ' + options.icon + '\"></div>';\n\t        if (options.with_number)\n\t            tmpl+=      '<div class=\"number\"></div>';\n\t        tmpl +=     '</div>';\n\t\n\t        // return template\n\t        return tmpl;\n\t    }\n\t});\n\t\n\t// return\n\treturn {\n\t    GalaxyFrame: GalaxyFrame,\n\t    GalaxyMastheadIcon: GalaxyMastheadIcon\n\t};\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(1), __webpack_require__(3)))\n\n/***/ },\n\n/***/ 66:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Backbone, _, $) {!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(6),\n\t    __webpack_require__(5)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function( baseMVC, _l ){\n\t\n\tvar logNamespace = 'user';\n\t//==============================================================================\n\t/** @class View to display a user's disk/storage usage\n\t *      either as a progress bar representing the percentage of a quota used\n\t *      or a simple text element displaying the human readable size used.\n\t *  @name UserQuotaMeter\n\t *  @augments Backbone.View\n\t */\n\tvar UserQuotaMeter = Backbone.View.extend( baseMVC.LoggableMixin ).extend(\n\t/** @lends UserQuotaMeter.prototype */{\n\t    _logNamespace : logNamespace,\n\t\n\t    /** Defaults for optional settings passed to initialize */\n\t    options : {\n\t        warnAtPercent   : 85,\n\t        errorAtPercent  : 100\n\t    },\n\t\n\t    /** Set up, accept options, and bind events */\n\t    initialize : function( options ){\n\t        this.log( this + '.initialize:', options );\n\t        _.extend( this.options, options );\n\t\n\t        //this.bind( 'all', function( event, data ){ this.log( this + ' event:', event, data ); }, this );\n\t        this.model.bind( 'change:quota_percent change:total_disk_usage', this.render, this );\n\t    },\n\t\n\t    /** Re-load user model data from the api */\n\t    update : function( options ){\n\t        this.log( this + ' updating user data...', options );\n\t        this.model.loadFromApi( this.model.get( 'id' ), options );\n\t        return this;\n\t    },\n\t\n\t    /** Is the user over their quota (if there is one)?\n\t     * @returns {Boolean} true if over quota, false if no quota or under quota\n\t     */\n\t    isOverQuota : function(){\n\t        return ( this.model.get( 'quota_percent' ) !== null\n\t              && this.model.get( 'quota_percent' ) >= this.options.errorAtPercent );\n\t    },\n\t\n\t    /** Render the meter when they have an applicable quota. Will render as a progress bar\n\t     *      with their percentage of that quota in text over the bar.\n\t     *  @fires quota:over when user is over quota (>= this.errorAtPercent)\n\t     *  @fires quota:under when user is under quota\n\t     *  @fires quota:under:approaching when user is >= this.warnAtPercent of their quota\n\t     *  @fires quota:under:ok when user is below this.warnAtPercent\n\t     *  @returns {jQuery} the rendered meter\n\t     */\n\t    _render_quota : function(){\n\t        var modelJson = this.model.toJSON(),\n\t            //prevPercent = this.model.previous( 'quota_percent' ),\n\t            percent = modelJson.quota_percent,\n\t            //meter = $( UserQuotaMeter.templates.quota( modelJson ) );\n\t            $meter = $( this._templateQuotaMeter( modelJson ) ),\n\t            $bar = $meter.find( '.progress-bar' );\n\t        //this.log( this + '.rendering quota, percent:', percent, 'meter:', meter );\n\t\n\t        // OVER QUOTA: color the quota bar and show the quota error message\n\t        if( this.isOverQuota() ){\n\t            //this.log( '\\t over quota' );\n\t            $bar.attr( 'class', 'progress-bar progress-bar-danger' );\n\t            $meter.find( '.quota-meter-text' ).css( 'color', 'white' );\n\t            //TODO: only trigger event if state has changed\n\t            this.trigger( 'quota:over', modelJson );\n\t\n\t        // APPROACHING QUOTA: color the quota bar\n\t        } else if( percent >= this.options.warnAtPercent ){\n\t            //this.log( '\\t approaching quota' );\n\t            $bar.attr( 'class', 'progress-bar progress-bar-warning' );\n\t            //TODO: only trigger event if state has changed\n\t            this.trigger( 'quota:under quota:under:approaching', modelJson );\n\t\n\t        // otherwise, hide/don't use the msg box\n\t        } else {\n\t            $bar.attr( 'class', 'progress-bar progress-bar-success' );\n\t            //TODO: only trigger event if state has changed\n\t            this.trigger( 'quota:under quota:under:ok', modelJson );\n\t        }\n\t        return $meter;\n\t    },\n\t\n\t    /** Render the meter when the user has NO applicable quota. Will render as text\n\t     *      showing the human readable sum storage their data is using.\n\t     *  @returns {jQuery} the rendered text\n\t     */\n\t    _render_usage : function(){\n\t        //var usage = $( UserQuotaMeter.templates.usage( this.model.toJSON() ) );\n\t        var usage = $( this._templateUsage( this.model.toJSON() ) );\n\t        this.log( this + '.rendering usage:', usage );\n\t        return usage;\n\t    },\n\t\n\t    /** Render either the quota percentage meter or the human readable disk usage\n\t     *      depending on whether the user model has quota info (quota_percent === null -> no quota)\n\t     *  @returns {Object} this UserQuotaMeter\n\t     */\n\t    render : function(){\n\t        //this.log( this + '.rendering' );\n\t        var meterHtml = null;\n\t\n\t        // no quota on server ('quota_percent' === null (can be valid at 0)), show usage instead\n\t        this.log( this + '.model.quota_percent:', this.model.get( 'quota_percent' ) );\n\t        if( ( this.model.get( 'quota_percent' ) === null )\n\t        ||  ( this.model.get( 'quota_percent' ) === undefined ) ){\n\t            meterHtml = this._render_usage();\n\t\n\t        // otherwise, render percent of quota (and warning, error)\n\t        } else {\n\t            meterHtml = this._render_quota();\n\t            //TODO: add the original text for unregistered quotas\n\t            //tooltip = \"Your disk quota is %s.  You can increase your quota by registering a Galaxy account.\"\n\t        }\n\t\n\t        this.$el.html( meterHtml );\n\t        this.$el.find( '.quota-meter-text' ).tooltip();\n\t        return this;\n\t    },\n\t\n\t    _templateQuotaMeter : function( data ){\n\t        return [\n\t            '<div id=\"quota-meter\" class=\"quota-meter progress\">',\n\t                '<div class=\"progress-bar\" style=\"width: ', data.quota_percent, '%\"></div>',\n\t                '<div class=\"quota-meter-text\" style=\"top: 6px\"',\n\t                    (( data.nice_total_disk_usage )?( ' title=\"Using ' + data.nice_total_disk_usage + '\">' ):( '>' )),\n\t                    _l( 'Using' ), ' ', data.quota_percent, '%',\n\t                '</div>',\n\t            '</div>'\n\t        ].join( '' );\n\t    },\n\t\n\t    _templateUsage : function( data ){\n\t        return [\n\t            '<div id=\"quota-meter\" class=\"quota-meter\" style=\"background-color: transparent\">',\n\t                '<div class=\"quota-meter-text\" style=\"top: 6px; color: white\">',\n\t                    (( data.nice_total_disk_usage )?( _l( 'Using ' ) + data.nice_total_disk_usage ):( '' )),\n\t                '</div>',\n\t            '</div>'\n\t        ].join( '' );\n\t    },\n\t\n\t    toString : function(){\n\t        return 'UserQuotaMeter(' + this.model + ')';\n\t    }\n\t});\n\t\n\t\n\t//==============================================================================\n\treturn {\n\t    UserQuotaMeter : UserQuotaMeter\n\t};}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), __webpack_require__(3), __webpack_require__(1)))\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** login.bundled.js\n **/","\nvar jQuery = require( 'jquery' ),\n    $ = jQuery,\n    PANEL = require( 'layout/panel' ),\n    _l = require( 'utils/localization' ),\n    PAGE = require( 'layout/page' );\n\nwindow.app = function app( options, bootstrapped ){\n    console.debug( 'building app:', options, bootstrapped );\n\n    // TODO: remove iframe for user login (at least) and render login page from here\n    // then remove this redirect\n    if( !options.show_welcome_with_login ){\n        window.location.href = Galaxy.root + 'user/login?use_panels=True';\n        return;\n    }\n\n    var loginPage = new PAGE.PageLayoutView( _.extend( options, {\n        el      : 'body',\n        center  : new PANEL.CenterPanel({ el : '#center' }),\n        right   : new PANEL.RightPanel({\n            title : _l( 'Login required' ),\n            el : '#right'\n        }),\n    }));\n\n    $(function(){\n        // TODO: incorporate *actual* referrer/redirect info as the original page does\n        var loginUrl = Galaxy.root + 'user/login?redirect=' + encodeURI( Galaxy.root );\n        loginPage.render();\n\n        // welcome page (probably) needs to remain sandboxed\n        loginPage.center.$( '#galaxy_main' ).prop( 'src', options.welcome_url );\n\n        loginPage.right.$( '.unified-panel-body' )\n            .css( 'overflow', 'hidden' )\n            .html( '<iframe src=\"' + loginUrl + '\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>' );\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/apps/login.js\n ** module id = 0\n ** module chunks = 4\n **/","/**\n * Galaxy utilities comprises small functions, which at this point\n * do not require their own classes/files\n*/\n\n// dependencies\ndefine([], function() {\n\n/** Builds a basic iframe\n*/\nfunction iframe( src ) {\n    return '<iframe src=\"' + src + '\" frameborder=\"0\" style=\"width: 100%; height: 100%;\"/>';\n}\n\n/** Traverse through json\n*/\nfunction deepeach(dict, callback) {\n    for (var i in dict) {\n        var d = dict[i];\n        if (d && typeof(d) == \"object\") {\n            callback(d);\n            deepeach(d, callback);\n        }\n    }\n}\n\n/**\n * Check if a string is a json string\n * @param{String}   text - Content to be validated\n */\nfunction isJSON(text) {\n    return /^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').\n        replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n        replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''));\n};\n\n/**\n * Sanitize/escape a string\n * @param{String}   content - Content to be sanitized\n */\nfunction sanitize(content) {\n    return $('<div/>').text(content).html();\n};\n\n/**\n * Validate atomic values or list of values\n * usually used for selectable options\n * @param{String}   value - Value or list to be validated\n */\nfunction validate (value) {\n    if (!(value instanceof Array)) {\n        value = [value];\n    }\n    if (value.length === 0) {\n        return false;\n    }\n    for (var i in value) {\n        if (['__null__', '__undefined__', null, undefined].indexOf(value[i]) > -1) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * Convert list to pretty string\n * @param{String}   lst - List of strings to be converted in human readable list sentence\n */\nfunction textify(lst) {\n    var lst = lst.toString();\n    if (lst) {\n        lst = lst.replace(/,/g, ', ');\n        var pos = lst.lastIndexOf(', ');\n        if (pos != -1) {\n            lst = lst.substr(0, pos) + ' or ' + lst.substr(pos+1);\n        }\n        return lst;\n    }\n    return '';\n};\n\n/**\n * Request handler for GET\n * @param{String}   url     - Url request is made to\n * @param{Function} success - Callback on success\n * @param{Function} error   - Callback on error\n * @param{Boolean}  cache   - Use cached data if available\n */\nfunction get (options) {\n    top.__utils__get__ = top.__utils__get__ || {};\n    if (options.cache && top.__utils__get__[options.url]) {\n        options.success && options.success(top.__utils__get__[options.url]);\n        console.debug('utils.js::get() - Fetching from cache [' + options.url + '].');\n    } else {\n        request({\n            url     : options.url,\n            data    : options.data,\n            success : function(response) {\n                top.__utils__get__[options.url] = response;\n                options.success && options.success(response);\n            },\n            error : function(response) {\n                options.error && options.error(response);\n            }\n        });\n    }\n};\n\n/**\n * Request handler\n * @param{String}   method  - Request method ['GET', 'POST', 'DELETE', 'PUT']\n * @param{String}   url     - Url request is made to\n * @param{Object}   data    - Data send to url\n * @param{Function} success - Callback on success\n * @param{Function} error   - Callback on error\n */\nfunction request (options) {\n    // prepare ajax\n    var ajaxConfig = {\n        contentType : 'application/json',\n        type        : options.type || 'GET',\n        data        : options.data || {},\n        url         : options.url\n    }\n\n    // encode data into url\n    if (ajaxConfig.type == 'GET' || ajaxConfig.type == 'DELETE') {\n        if (ajaxConfig.url.indexOf('?') == -1) {\n            ajaxConfig.url += '?';\n        } else {\n            ajaxConfig.url += '&';\n        }\n        ajaxConfig.url      = ajaxConfig.url + $.param(ajaxConfig.data, true);\n        ajaxConfig.data     = null;\n    } else {\n        ajaxConfig.dataType = 'json';\n        ajaxConfig.url      = ajaxConfig.url;\n        ajaxConfig.data     = JSON.stringify(ajaxConfig.data);\n    }\n\n    // make request\n    $.ajax(ajaxConfig)\n    .done(function(response) {\n        if (typeof response === 'string') {\n            try {\n                response = response.replace('Infinity,', '\"Infinity\",');\n                response = jQuery.parseJSON(response);\n            } catch (e) {\n                console.debug(e);\n            }\n        }\n        options.success && options.success(response);\n    })\n    .fail(function(response) {\n        var response_text = null;\n        try {\n            response_text = jQuery.parseJSON(response.responseText);\n        } catch (e) {\n            response_text = response.responseText;\n        }\n        options.error && options.error(response_text, response);\n    });\n};\n\n/**\n * Read a property value from CSS\n * @param{String}   classname   - CSS class\n * @param{String}   name        - CSS property\n */\nfunction cssGetAttribute (classname, name) {\n    var el = $('<div class=\"' + classname + '\"></div>');\n    el.appendTo(':eq(0)');\n    var value = el.css(name);\n    el.remove();\n    return value;\n};\n\n/**\n * Load a CSS file\n * @param{String}   url - Url of CSS file\n */\nfunction cssLoadFile (url) {\n    if (!$('link[href^=\"' + url + '\"]').length) {\n        $('<link href=\"' + Galaxy.root + url + '\" rel=\"stylesheet\">').appendTo('head');\n    }\n};\n\n/**\n * Safely merge to dictionaries\n * @param{Object}   options         - Target dictionary\n * @param{Object}   optionsDefault  - Source dictionary\n */\nfunction merge (options, optionsDefault) {\n    if (options) {\n        return _.defaults(options, optionsDefault);\n    } else {\n        return optionsDefault;\n    }\n};\n\n\n/**\n * Round floaing point 'number' to 'numPlaces' number of decimal places.\n * @param{Object}   number      a floaing point number\n * @param{Object}   numPlaces   number of decimal places\n */\nfunction roundToDecimalPlaces( number, numPlaces ){\n    var placesMultiplier = 1;\n    for( var i=0; i<numPlaces; i++ ){\n        placesMultiplier *= 10;\n    }\n    return Math.round( number * placesMultiplier ) / placesMultiplier;\n}\n\n// calculate on import\nvar kb = 1024,\n    mb = kb * kb,\n    gb = mb * kb,\n    tb = gb * kb;\n/**\n * Format byte size to string with units\n * @param{Integer}   size           - Size in bytes\n * @param{Boolean}   normal_font    - Switches font between normal and bold\n */\nfunction bytesToString (size, normal_font, numberPlaces) {\n    numberPlaces = numberPlaces !== undefined? numberPlaces: 1;\n    // identify unit\n    var unit = \"\";\n    if (size >= tb){ size = size / tb; unit = 'TB'; } else\n    if (size >= gb){ size = size / gb; unit = 'GB'; } else\n    if (size >= mb){ size = size / mb; unit = 'MB'; } else\n    if (size >= kb){ size = size / kb; unit = 'KB'; } else\n    if (size >  0){ unit = 'b'; }\n    else { return normal_font? '0 b': '<strong>-</strong>'; }\n    // return formatted string\n    var rounded = unit == 'b'? size: roundToDecimalPlaces( size, numberPlaces );\n    if (normal_font) {\n       return  rounded + ' ' + unit;\n    } else {\n        return '<strong>' + rounded + '</strong> ' + unit;\n    }\n};\n\n/**\n * Create a unique id\n */\nfunction uid(){\n    top.__utils__uid__ = top.__utils__uid__ || 0;\n    return 'uid-' + top.__utils__uid__++;\n};\n\n/**\n * Create a time stamp\n */\nfunction time() {\n    var d = new Date();\n    var hours = (d.getHours() < 10 ? \"0\" : \"\") + d.getHours();\n    var minutes = (d.getMinutes() < 10 ? \"0\" : \"\") + d.getMinutes()\n    return datetime = d.getDate() + \"/\"\n                + (d.getMonth() + 1)  + \"/\"\n                + d.getFullYear() + \", \"\n                + hours + \":\"\n                + minutes;\n};\n\nreturn {\n    cssLoadFile: cssLoadFile,\n    cssGetAttribute: cssGetAttribute,\n    get: get,\n    merge: merge,\n    iframe: iframe,\n    bytesToString: bytesToString,\n    uid: uid,\n    time: time,\n    request: request,\n    sanitize: sanitize,\n    textify: textify,\n    validate: validate,\n    deepeach: deepeach,\n    isJSON: isJSON\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/utils/utils.js\n ** module id = 4\n ** module chunks = 3 4\n **/","define([], function() {\n\nvar View = Backbone.View.extend({\n\n    // base element\n    elMain: 'body',\n    \n    // defaults options\n    optionsDefault: {\n        title            : 'ui-modal',\n        body             : '',\n        backdrop         : true,\n        height           : null,\n        width            : null,\n        closing_events   : false,\n        closing_callback : null,\n        title_separator  : true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize : function(options) {\n        if (options){\n            this._create(options);\n        }\n    },\n    \n    // adds and displays a new frame/window\n    show: function(options) {\n        // create\n        this.initialize(options);\n        \n        // fix height\n        if (this.options.height){\n            this.$body.css('height', this.options.height);\n            this.$body.css('overflow', 'hidden');\n        } else {\n            this.$body.css('max-height', $(window).height() / 2);\n        }\n\n        // fix width\n        if (this.options.width) {\n            this.$dialog.css('width', this.options.width);\n        }\n\n        // show\n        if (this.visible) {\n            this.$el.show();\n        } else {\n            this.$el.fadeIn('fast');\n        }\n\n        // set visible flag\n        this.visible = true;\n    },\n\n    // hide\n    hide: function() {\n        this.visible = false;\n        this.$el.fadeOut('fast');\n        if (this.options.closing_callback){\n            this.options.closing_callback();\n        }\n    },\n\n    // enable buttons\n    enableButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).prop('disabled', false);\n    },\n\n    // disable buttons\n    disableButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).prop('disabled', true);\n    },\n    \n    // show buttons\n    showButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).show();\n    },\n\n    // hide buttons\n    hideButton: function(name) {\n        var button_id = this.buttonList[name];\n        this.$buttons.find('#' + button_id).hide();\n    },\n    \n    // get button\n    getButton: function(name) {\n        var button_id = this.buttonList[name];\n        return this.$buttons.find('#' + button_id);\n    },\n    \n    // returns scroll top for body element\n    scrollTop: function() {\n        return this.$body.scrollTop();\n    },\n\n    // create\n    _create: function(options) {\n        // link this\n        var self = this;\n        \n        // configure options\n        this.options = _.defaults(options, this.optionsDefault);\n        \n        // check for progress bar request\n        if (this.options.body == 'progress'){\n            this.options.body = $('<div class=\"progress progress-striped active\"><div class=\"progress-bar progress-bar-info\" style=\"width:100%\"></div></div>');\n        }\n            \n        // remove former element\n        if (this.$el) {\n            // remove element\n            this.$el.remove();\n            \n            // remove escape event\n            $(document).off('keyup.ui-modal');\n        }\n        \n        // create new element\n        this.setElement(this._template(this.options.title));\n        \n        // link elements\n        this.$dialog = (this.$el).find('.modal-dialog');\n        this.$body = (this.$el).find('.modal-body');\n        this.$footer  = (this.$el).find('.modal-footer');\n        this.$buttons = (this.$el).find('.buttons');\n        this.$backdrop = (this.$el).find('.modal-backdrop');\n        \n        // append body\n        this.$body.html(this.options.body);\n        \n        // configure background\n        if (!this.options.backdrop){\n            this.$backdrop.removeClass('in');\n        }\n                        \n        // append buttons\n        if (this.options.buttons) {\n            // reset button list\n            this.buttonList = {};\n            var counter = 0;\n            $.each(this.options.buttons, function(name, value) {\n                var button_id = 'button-' + counter++;\n                self.$buttons.append($('<button id=\"' + button_id + '\"></button>').text(name).click(value)).append(\" \");\n                self.buttonList[name] = button_id;\n            });\n        } else {\n            // hide footer\n            this.$footer.hide();\n        }\n        \n        // append to main element\n        $(this.elMain).append($(this.el));\n\n        // bind additional closing events\n        if (this.options.closing_events) {\n            // bind the ESC key to hide() function\n            $(document).on('keyup.ui-modal', function(e) {\n                if (e.keyCode == 27) {\n                    self.hide();\n                }\n            });\n            \n            // hide modal if background is clicked\n            this.$el.find('.modal-backdrop').on('click', function() { self.hide(); });\n        }\n\n        // removes the default separator line\n        if (!this.options.title_separator) {\n            this.$('.modal-header').css({ 'border': 'none', 'padding-bottom': '0px' });\n        }\n    },\n    \n    // fill regular modal template\n    _template: function(title) {\n        return  '<div class=\"ui-modal modal\">' +\n                    '<div class=\"modal-backdrop fade in\" style=\"z-index: -1;\"></div>' +\n                    '<div class=\"modal-dialog\">' +\n                        '<div class=\"modal-content\">' +\n                            '<div class=\"modal-header\">' +\n                                '<button type=\"button\" class=\"close\" style=\"display: none;\">&times;</button>' +\n                                '<h4 class=\"title\">' + title + '</h4>' +\n                            '</div>' +\n                            '<div class=\"modal-body\" style=\"position: static;\"></div>' +\n                            '<div class=\"modal-footer\">' +\n                                '<div class=\"buttons\" style=\"float: right;\"></div>' +\n                            '</div>' +\n                        '</div' +\n                    '</div>' +\n                '</div>';\n    }\n});\n\nreturn {\n    View : View\n}\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-modal.js\n ** module id = 10\n ** module chunks = 3 4\n **/","// dependencies\ndefine([], function() {\n\n// frame manager\nvar View = Backbone.View.extend({\n    // defaults inputs\n    options: {\n        // default frame size\n        frame: {\n            cols : 6,\n            rows : 3\n        },\n\n        // maximum number of rows\n        rows: 1000,\n\n        // cell size in px\n        cell: 130,\n\n        // margin\n        margin: 5,\n\n        // scroll speed\n        scroll: 5,\n\n        // minimum top\n        top_min: 40,\n\n        // maximum number of frames\n        frame_max: 9,\n\n        // visible\n        visible: true,\n\n        // onchange\n        onchange: null\n    },\n\n    // number of columns\n    cols: 0,\n\n    // scroll/element top\n    top: 0,\n\n    // viewport scrolling state\n    top_max: 0,\n\n    // frame z-index\n    frame_z : 0,\n\n    // frame counter\n    frame_counter: 0,\n\n    // frame counter\n    frame_counter_id: 0,\n\n    // frame list\n    frame_list: [],\n\n    // frame shadow\n    frame_shadow: null,\n\n    // frame panel visible\n    visible: null,\n\n    // initialize\n    initialize : function(options) {\n        // add to masthead menu\n        var self = this;\n\n        // read in defaults\n        if (options) {\n            this.options = _.defaults(options, this.options);\n        }\n\n        // set visibility\n        this.visible = this.options.visible;\n\n        // initialize top\n        this.top = this.top_max = this.options.top_min;\n\n        // create\n        this.setElement(this._template());\n\n        // load background\n        $(this.el).append(this._templateBackground());\n\n        // load menu buttons\n        $(this.el).append(this._templateMenu());\n\n        // load to main frame\n        $(this.el_main).append($(this.el));\n\n        //\n        // define shadow frame\n        //\n        var id_shadow = '#frame-shadow';\n\n        // add shadow template\n        $(this.el).append(this._templateShadow(id_shadow.substring(1)));\n\n        // initialize frame\n        this.frame_shadow = {\n            id              : id_shadow,\n            screen_location : {},\n            grid_location   : {},\n            grid_rank       : null,\n            grid_lock       : false\n        };\n\n        // initialize size\n        this._frameResize(this.frame_shadow, {width: 0, height: 0});\n\n        // add shadow to frame list\n        this.frame_list[id_shadow] = this.frame_shadow;\n\n        // initialize panel\n        this._panelRefresh();\n\n        // apply visibility\n        if (!this.visible) {\n            this.hide();\n        } else {\n            this.show();\n        }\n\n        // catch window resize event\n        var self = this;\n        $(window).resize(function () {\n            if (self.visible)\n                self._panelRefresh();\n        });\n    },\n\n    /**\n     * Adds and displays a new frame.\n     *\n     * options:\n     *  type: 'url' or 'other' ; if 'url', 'content' is treated as a URL and loaded into an iframe; \n     *        if 'other', content is treated as a function or raw HTML. content function is passed a single \n     *        argument that is the frame's content DOM element\n     *  content: the content to be loaded into the frame.\n     */\n    add: function(options) {\n        // frame default options\n        var frameOptions = {\n            title: '',\n            content: null,\n            target: '',\n            type: null\n        };\n\n        // read in defaults\n        if (options) {\n            options = _.defaults(options, frameOptions);\n        } else {\n            options = frameOptions;\n        }\n\n        // check for content\n        if(!options.content) {\n            return;\n        }\n\n        // check for number of frames\n        if (this.frame_counter >= this.options.frame_max) {\n            alert(\"You have reached the maximum number of allowed frames (\" + this.options.frame_max + \").\");   \n            return;\n        }\n\n        // generate frame identifier\n        var frame_id = '#frame-' + (this.frame_counter_id++);\n\n        // check if frame exists\n        if ($(frame_id).length !== 0) {\n            alert(\"This frame already exists. This page might contain multiple frame managers.\");\n            return;\n        }\n\n        // reset top\n        this.top = this.options.top_min;\n\n        // append\n        var $frame_el = null;\n        if (options.type === 'url') {\n            $frame_el = $(this._templateFrameUrl(frame_id.substring(1), options.title, options.content));\n        } else if (options.type === 'other') {\n            $frame_el = $(this._templateFrame(frame_id.substring(1), options.title));\n\n            // Load content into frame.\n            var content_elt = $frame_el.find('.f-content');\n            if (_.isFunction(options.content)) {\n                options.content(content_elt);\n            }\n            else {\n                content_elt.append(options.content);\n            }\n        }\n        $(this.el).append($frame_el);\n\n        // construct a new frame\n        var frame = {\n            id              : frame_id,\n            screen_location : {},\n            grid_location   : {},\n            grid_rank       : null,\n            grid_lock       : false\n        };\n\n        // set dimensions\n        options.width   = this._toPixelCoord('width', this.options.frame.cols);\n        options.height  = this._toPixelCoord('height', this.options.frame.rows);\n\n        // default z-index\n        this.frame_z = parseInt($(frame.id).css('z-index'));\n\n        // add to frame list\n        this.frame_list[frame_id] = frame;\n\n        // increase frame counter\n        this.frame_counter++;\n\n        // resize\n        this._frameResize(frame, {width: options.width, height: options.height});\n\n        // place frame\n        this._frameInsert(frame, {top: 0, left: 0}, true);\n\n        // show frames if hidden\n        if (!this.visible) {\n            this.show();\n        }\n    },\n\n    // show panel\n    show: function() {\n        // show\n        this.visible = true;\n\n        // show\n        this.$el.find(\".frame\").fadeIn('fast');\n\n        // hide shadow\n        this.$el.find(this.frame_shadow.id).hide();\n\n        // show background\n        this.$el.find(\".frame-background\").show();\n\n        // show panel\n        this._panelRefresh();\n\n        // refresh\n        this._menuRefresh();\n    },\n\n    // hide panel\n    hide: function() {\n        // make sure that no event is currently processing\n        if (this.event.type !== null)\n            return;\n\n        // hide\n        this.visible = false;\n\n        // hide \n        this.$el.find(\".frame\").fadeOut('fast');\n\n        // hide background\n        this.$el.find(\".frame-background\").hide();\n\n        // hide menu\n        this.$el.find(\".frame-menu\").hide();\n\n        // refresh\n        this._menuRefresh();\n    },\n\n    // length\n    length: function() {\n        return this.frame_counter;\n    },\n\n    // set onchange event\n    setOnChange: function(callback) {\n        this.options.onchange = callback;\n    },\n\n    /*\n        EVENT HANDLING\n    */\n\n    // event\n    event: {\n        type    : null,\n        target  : null,\n        xy      : null\n    },\n\n    // events\n    events: {\n        // global frame events\n        'mousemove'                         : '_eventFrameMouseMove',\n        'mouseup'                           : '_eventFrameMouseUp',\n        'mouseleave'                        : '_eventFrameMouseUp',\n        'mousewheel'                        : '_eventPanelScroll',\n        'DOMMouseScroll'                    : '_eventPanelScroll',\n\n        // events fixed to elements\n        'mousedown .frame'                  : '_eventFrameMouseDown',\n        'mousedown .frame-background'       : '_eventHide',\n        'mousedown .frame-scroll-up'        : '_eventPanelScroll_up',\n        'mousedown .frame-scroll-down'      : '_eventPanelScroll_down',\n        'mousedown .f-close'                : '_eventFrameClose',\n        'mousedown .f-pin'                  : '_eventFrameLock'\n    },\n\n    // drag start\n    _eventFrameMouseDown: function (e) {\n        // skip if event is already active\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // check for drag event\n        if ($(e.target).hasClass('f-header') || $(e.target).hasClass('f-title')) {\n            this.event.type = 'drag';\n        }\n\n        // check for resize event\n        if ($(e.target).hasClass('f-resize')) {\n            this.event.type = 'resize';\n        }\n\n        // skip if no event has to be handled\n        if (this.event.type === null) {\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // identify frame\n        this.event.target = this._frameIdentify(e.target);\n\n        // check if frame is locked\n        if (this.event.target.grid_lock) {\n            this.event.type = null;\n            return;\n        }\n\n        // backup event details\n        this.event.xy = {\n            x: e.originalEvent.pageX,\n            y: e.originalEvent.pageY\n        };\n\n        // prepare drag/resize\n        this._frameDragStart(this.event.target);\n    },\n\n    // mouse move event\n    _eventFrameMouseMove: function (e) {\n        // check\n        if (this.event.type != 'drag' && this.event.type != 'resize') {\n            return;\n        }\n\n        // current position\n        var event_xy_new = {\n            x : e.originalEvent.pageX,\n            y : e.originalEvent.pageY\n        };\n\n        // position delta\n        var event_xy_delta = {\n            x : event_xy_new.x - this.event.xy.x,\n            y : event_xy_new.y - this.event.xy.y\n        };\n\n        // update\n        this.event.xy = event_xy_new;\n\n        // object position / size\n        var p = this._frameScreen (this.event.target);\n\n        // resize event\n        if (this.event.type == 'resize') {\n            // update\n            p.width  += event_xy_delta.x;\n            p.height += event_xy_delta.y;\n\n            // check size\n            var min_dim = this.options.cell - this.options.margin - 1;\n            p.width = Math.max(p.width, min_dim);\n            p.height = Math.max(p.height, min_dim);\n\n            // apply resize to frame\n            this._frameResize(this.event.target, p);\n\n            // break down to grid coordinates\n            p.width = this._toGridCoord('width', p.width) + 1;\n            p.height = this._toGridCoord('height', p.height) + 1;\n\n            // transfer back to pixels\n            p.width = this._toPixelCoord('width', p.width);\n            p.height = this._toPixelCoord('height', p.height);\n\n            // apply\n            this._frameResize(this.frame_shadow, p);\n\n            // fix position\n            this._frameInsert(this.frame_shadow, {\n                top     : this._toGridCoord('top', p.top),\n                left    : this._toGridCoord('left', p.left)\n            });\n        }\n\n        // drag event\n        if (this.event.type == 'drag') {\n            // update\n            p.left  += event_xy_delta.x;\n            p.top   += event_xy_delta.y;\n\n            // apply\n            this._frameOffset(this.event.target, p);\n\n            // get location of shadow\n            var l = {\n                top     : this._toGridCoord('top', p.top),\n                left    : this._toGridCoord('left', p.left)\n            };\n\n            // increase priority of current frame\n            if (l.left !== 0) {\n                l.left++;\n            }\n\n            // fix position\n            this._frameInsert(this.frame_shadow, l);\n        }\n    },\n\n    // mouse up\n    _eventFrameMouseUp: function (e) {\n        // check\n        if (this.event.type != 'drag' && this.event.type != 'resize') {\n            return;\n        }\n\n        // stop\n        this._frameDragStop(this.event.target);\n\n        // reset event\n        this.event.type = null;\n    },\n\n    // drag start\n    _eventFrameClose: function (e) {\n        // check\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // get frame\n        var frame = this._frameIdentify(e.target);\n        var self  = this;\n\n        // fade out\n        $(frame.id).fadeOut('fast', function() {\n            // remove element\n            $(frame.id).remove();\n\n            // remove from dictionary\n            delete self.frame_list[frame.id];\n\n            // reduce frame counter\n            self.frame_counter--;\n\n            // reload\n            self._panelRefresh(true);\n\n            // refresh scroll state once all animations completed\n            self._panelAnimationComplete();\n\n            // hide if no frames left\n            if (self.visible && self.frame_counter == 0)\n                self.hide();\n        });\n    },\n\n    // drag start\n    _eventFrameLock: function (e) {\n        // check\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // get frame\n        var frame = this._frameIdentify(e.target);\n\n        // check\n        if (frame.grid_lock) {\n            // unlock\n            frame.grid_lock = false;\n\n            // remove class\n            $(frame.id).find('.f-pin').removeClass('toggle');\n            $(frame.id).find('.f-header').removeClass('f-not-allowed');\n            $(frame.id).find('.f-title').removeClass('f-not-allowed');\n            $(frame.id).find('.f-resize').show();\n            $(frame.id).find('.f-close').show();\n        } else {\n            // lock\n            frame.grid_lock = true;\n\n            // add class\n            $(frame.id).find('.f-pin').addClass('toggle');\n            $(frame.id).find('.f-header').addClass('f-not-allowed');\n            $(frame.id).find('.f-title').addClass('f-not-allowed');\n            $(frame.id).find('.f-resize').hide();\n            $(frame.id).find('.f-close').hide();\n        }\n    },\n\n    // show/hide panel\n    _eventHide: function (e) {\n        // check\n        if (this.event.type !== null) {\n            return;\n        }\n\n        // hide panel\n        this.hide();\n    },\n\n    /**\n     * Fired when scrolling occurs on panel.\n     */\n    _eventPanelScroll: function(e) {\n        // check\n        if (this.event.type !== null || !this.visible) {\n            return;\n        }\n\n        // Stop propagation if scrolling is happening inside a frame.\n        // TODO: could propagate scrolling if at top/bottom of frame.\n        var frames = $(e.srcElement).parents('.frame')\n        if (frames.length !== 0) {\n            e.stopPropagation();\n            return;\n        }\n\n        // prevent\n        e.preventDefault();\n\n        // get wheel delta\n        var delta = e.originalEvent.detail ? e.originalEvent.detail : e.originalEvent.wheelDelta / -3;\n\n        // refresh panel\n        this._panelScroll(delta);\n    },\n\n    // scroll up\n    _eventPanelScroll_up: function(e) {\n        // check\n        if (this.event.type !== null)\n            return;\n  \n        // prevent\n        e.preventDefault();\n\n        // scroll up\n        this._panelScroll(-this.options.scroll);\n    },\n\n    // scroll down\n    _eventPanelScroll_down: function(e) {\n        // check\n        if (this.event.type !== null)\n            return;\n\n        // prevent\n        e.preventDefault();\n\n        // scroll down\n        this._panelScroll(this.options.scroll);\n    },\n\n    /*\n        FRAME EVENTS SUPPORT\n    */\n\n    // identify\n    _frameIdentify: function(target) {\n        return this.frame_list['#' + $(target).closest('.frame').attr('id')];\n    },\n\n    // drag start\n    _frameDragStart : function (frame) {\n        // set focus\n        this._frameFocus(frame, true);\n\n        // get current dimensions\n        var p = this._frameScreen (frame);\n\n        // initialize shadow\n        this._frameResize(this.frame_shadow, p);\n        this._frameGrid(this.frame_shadow, frame.grid_location);\n\n        // reset location\n        frame.grid_location = null;\n\n        // show shadow\n        $(this.frame_shadow.id).show();\n\n        // load frame cover\n        $('.f-cover').show();\n    },\n\n    // drag stop\n    _frameDragStop : function (frame) {\n        // remove focus\n        this._frameFocus(frame, false);\n\n        // get new dimensions\n        var p = this._frameScreen(this.frame_shadow);\n\n        // update frame\n        this._frameResize(frame, p);\n        this._frameGrid(frame, this.frame_shadow.grid_location, true);\n\n        // reset location of shadow\n        this.frame_shadow.grid_location = null;\n\n        // hide shadow\n        $(this.frame_shadow.id).hide();\n\n        // hide frame cover\n        $('.f-cover').hide();\n\n        // refresh scroll state once all animations completed\n        this._panelAnimationComplete();\n    },\n\n    /*\n        GRID/PIXEL CONVERTER\n    */\n\n    // converts a pixel coordinate to grids\n    _toGridCoord: function (type, px) {\n        var sign = (type == 'width' || type == 'height') ? 1 : -1;\n        if (type == 'top') px -= this.top;\n        return parseInt((px + sign * this.options.margin) / this.options.cell, 10);\n    },\n    \n    // converts a grid coordinate to pixels\n    _toPixelCoord: function (type, g) {\n        var sign = (type == 'width' || type == 'height') ? 1 : -1;\n        var px = (g * this.options.cell) - sign * this.options.margin;\n        if (type == 'top') px += this.top;\n        return px;\n    },\n\n    // get grid coordinates\n    _toGrid: function (px) {\n        return {\n            top     : this._toGridCoord('top', px.top),\n            left    : this._toGridCoord('left', px.left),\n            width   : this._toGridCoord('width', px.width),\n            height  : this._toGridCoord('height', px.height)\n        };\n    },\n\n    // get pixel coordinates\n    _toPixel: function(g) {\n        return {\n            top     : this._toPixelCoord('top', g.top),\n            left    : this._toPixelCoord('left', g.left),\n            width   : this._toPixelCoord('width', g.width),\n            height  : this._toPixelCoord('height', g.height)\n        };\n    },\n\n    /* \n        COLLISION DETECTION\n    */\n\n    // check collision\n    _isCollision: function(g) {\n        // is collision pair\n        function is_collision_pair (a, b) {\n            return !(a.left > b.left + b.width - 1 || a.left + a.width - 1 < b.left ||\n                     a.top > b.top + b.height  - 1 || a.top + a.height - 1 < b.top);\n        }\n\n        // search\n        for (var i in this.frame_list) {\n            // get frame\n            var frame = this.frame_list[i];\n\n            // skip\n            if (frame.grid_location === null)\n                continue;\n\n            // check if g collides with frame\n            if (is_collision_pair (g, frame.grid_location))\n                return true;\n        }\n\n        // return\n        return false;\n    },\n\n    // location/grid rank\n    _locationRank: function(loc) {\n        return (loc.top * this.cols) + loc.left;\n    },\n\n    /*\n        ONSCREEN MENU\n    */\n\n    // update frame counter\n    _menuRefresh: function() {\n        // scroll up possible?\n        if (this.visible) {\n            if (this.top == this.options.top_min)\n                $(\".frame-scroll-up\").hide();\n            else\n                $(\".frame-scroll-up\").show();\n\n            // scroll down possible?\n            if (this.top == this.top_max)\n                $(\".frame-scroll-down\").hide();\n            else\n                $(\".frame-scroll-down\").show();\n        }\n\n        // trigger onchange\n        if (this.options.onchange) {\n            this.options.onchange();\n        }\n    },\n\n    /*\n        PANEL/WINDOW FUNCTIONS\n    */\n\n    // panel on animation complete / frames not moving\n    _panelAnimationComplete: function() {\n        var self = this;\n        $(\".frame\").promise().done(function() {self._panelScroll(0, true)});\n    },\n\n    // refresh panel\n    _panelRefresh: function(animate) {\n        // get current size\n        this.cols = parseInt($(window).width() / this.options.cell, 10) + 1;\n\n        // recalculate frame positions\n        this._frameInsert(null, null, animate);\n    },\n\n    // update scroll\n    _panelScroll: function(delta, animate) {\n        // new top value\n        var top_new = this.top - this.options.scroll * delta;\n\n        // update top\n        top_new = Math.max(top_new, this.top_max);\n        top_new = Math.min(top_new, this.options.top_min);\n\n        // update screen if necessary\n        if (this.top != top_new) {\n            // update screen\n            for (var i in this.frame_list) {\n                // get frame\n                var frame = this.frame_list[i];\n\n                // skip\n                if (frame.grid_location !== null) {\n                    var screen_location = {\n                        top  : frame.screen_location.top - (this.top - top_new),\n                        left : frame.screen_location.left\n                    }\n                    this._frameOffset(frame, screen_location, animate);\n                }\n            }\n\n            // update top value\n            this.top = top_new;\n        }\n\n        // refresh\n        this._menuRefresh();\n    },\n\n    /*\n        FRAME FUNCTIONS\n    */\n\n    // frame insert at given location\n    _frameInsert: function(frame, new_loc, animate) {\n        // define\n        var place_list = [];\n\n        // frame to place\n        if (frame) {\n            // reset grid location\n            frame.grid_location = null;\n\n            // set first one to be placed\n            place_list.push([frame, this._locationRank(new_loc)]);\n        }\n\n        // search\n        var i = null;\n        for (i in this.frame_list) {\n            // get frame\n            var f = this.frame_list[i];\n\n            // check\n            if (f.grid_location !== null && !f.grid_lock) {\n                // reset grid location\n                f.grid_location = null;\n\n                // set up for placement\n                place_list.push([f, f.grid_rank]);\n            }\n        }\n\n        // sort place list by rank\n        place_list.sort(function(a, b) {\n            var i = a[1];\n            var j = b[1];\n            return i < j ? -1 : (i > j ? 1 : 0);\n        });\n\n        // place\n        for (i = 0; i < place_list.length; i++) {\n            this._framePlace(place_list[i][0], animate);\n        }\n\n        // identify maximum viewport size\n        this.top_max = 0;\n        for (var i in this.frame_list) {\n            // get frame\n            var frame = this.frame_list[i];\n\n            // skip\n            if (frame.grid_location !== null)\n                this.top_max = Math.max(this.top_max, frame.grid_location.top + frame.grid_location.height);\n        }\n\n        // mesh maximum top with window size and margin\n        this.top_max = $(window).height() - this.top_max * this.options.cell - 2 * this.options.margin;\n\n        // fix value\n        this.top_max = Math.min(this.top_max, this.options.top_min);\n\n        // panel menu\n        this._menuRefresh();\n    },\n\n    // naive frame place\n    _framePlace: function(frame, animate) {\n        // reset grid location\n        frame.grid_location = null;\n\n        // grid coordinates of new frame\n        var g = this._toGrid(this._frameScreen(frame));\n\n        // try grid coordinates\n        var done = false;\n        for (var i = 0; i < this.options.rows; i++) {\n            // ensure that the first grid column is checked despite limited window space\n            for (var j = 0; j < Math.max(1, this.cols - g.width); j++) {\n                // coordinates\n                g.top   = i;\n                g.left  = j;\n\n                // no collision\n                if (!this._isCollision(g)) {\n                    done = true;\n                    break;\n                }\n            }\n\n            // break\n            if (done) {\n                break;\n            }\n        }\n\n        // check if valid spot was found\n        if (done) {\n            this._frameGrid(frame, g, animate);\n        } else {\n            console.log(\"Grid dimensions exceeded.\");\n        }\n    },\n\n    // focus\n    _frameFocus: function(frame, has_focus) {\n        // get new z-value\n        var z = this.frame_z + (has_focus ? 1 : 0);\n\n        // update\n        $(frame.id).css('z-index', z);\n    },\n\n    // new left/top position frame\n    _frameOffset: function(frame, p, animate) {\n        // update screen location\n        frame.screen_location.left = p.left;\n        frame.screen_location.top = p.top;\n\n        // animate\n        if (animate) {\n            // set focus on animated\n            this._frameFocus(frame, true);\n\n            // prepare for callback\n            var self = this;\n\n            // animate and remove focus\n            $(frame.id).animate({top: p.top, left: p.left}, 'fast', function() {\n                self._frameFocus(frame, false);\n            });\n        } else {\n            $(frame.id).css({top: p.top, left: p.left});\n        }\n    },\n\n    // resize frame\n    _frameResize: function(frame, p) {\n        // update css\n        $(frame.id).css({width: p.width, height: p.height});\n\n        // update descriptor\n        frame.screen_location.width = p.width;\n        frame.screen_location.height = p.height;\n    },\n\n    // new grid location\n    _frameGrid: function (frame, l, animate) {\n        // update grid location\n        frame.grid_location = l;\n\n        // place frame\n        this._frameOffset(frame, this._toPixel(l), animate);\n\n        // update grid rank\n        frame.grid_rank = this._locationRank(l);\n    },\n\n    // get frame dimensions\n    _frameScreen: function(frame) {\n        var p = frame.screen_location;\n        return {top: p.top, left: p.left, width: p.width, height: p.height};\n    },\n\n    /*\n        HTML TEMPLATES\n    */\n\n    // main element\n    _template: function() {\n        return  '<div class=\"galaxy-frame\"></div>';\n    },\n\n    // fill regular frame template\n    _templateFrame: function(id, title) {\n        // check title\n        if (!title)\n            title = '';\n\n        // load template\n        return  '<div id=\"' + id + '\" class=\"frame corner\">' +\n                    '<div class=\"f-header corner\">' +\n                        '<span class=\"f-title\">' + title + '</span>' +\n                        '<span class=\"f-icon f-close fa fa-trash-o\"></span>' +\n                        '<span class=\"f-icon f-pin fa fa-thumb-tack\"></span>' +\n                    '</div>' +\n                    '<div class=\"f-content\">' +\n                        '<div class=\"f-cover\"></div>' +\n                    '</div>' +\n                    '<span class=\"f-resize f-icon corner fa fa-expand\"></span>' +\n                '</div>';\n    },\n\n    // fill regular frame template\n    _templateFrameUrl: function(id, title, url) {\n        // url\n        if (url.indexOf('?') == -1)\n            url += '?';\n        else\n            url += '&';\n        url += 'widget=True';\n\n        // element\n        var $el = $(this._templateFrame(id, title));\n        $el.find('.f-content').append('<iframe scrolling=\"auto\" class=\"f-iframe\" src=\"' + url + '\"></iframe>');\n\n        // load template\n        return $el;\n    },\n\n    // fill shadow template\n    _templateShadow: function(id) {\n        return '<div id=\"' + id + '\" class=\"frame-shadow corner\"></div>';\n    },\n\n    // fill background template in order to cover underlying iframes\n    _templateBackground: function() {\n        return '<div class=\"frame-background\"></div>';\n    },\n\n    // fill menu button template\n    _templateMenu: function() {\n        return  '<div class=\"frame-scroll-up frame-menu fa fa-chevron-up fa-2x\"></div>' +\n                '<div class=\"frame-scroll-down frame-menu fa fa-chevron-down fa-2x\"></div>';\n    }\n});\n\n// return\nreturn {\n    View: View\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/ui/ui-frames.js\n ** module id = 20\n ** module chunks = 3 4\n **/","define([\n    'utils/utils',\n    'layout/menu',\n    'layout/scratchbook',\n    'mvc/user/user-quotameter',\n], function(Utils, Menu, Scratchbook, QuotaMeter) {\n\n/** Masthead **/\nvar GalaxyMasthead = Backbone.View.extend({\n    // base element\n    el_masthead: '#everything',\n\n    // options\n    options : null,\n\n    // background\n    $background: null,\n\n    // list\n    list: [],\n\n    // initialize\n    initialize : function(options) {\n        // update options\n        this.options = options;\n\n        // HACK: due to body events defined in panel.js\n        $(\"body\").off();\n\n        // define this element\n        this.setElement($(this._template(options)));\n        // add to page\n        $( '#masthead' ).replaceWith( this.$el );\n\n        // assign background\n        this.$background = $(this.el).find('#masthead-background');\n\n        // loop through unload functions if the user attempts to unload the page\n        var self = this;\n        $(window).on('beforeunload', function() {\n            var text = \"\";\n            for (var key in self.list) {\n                if (self.list[key].options.onunload) {\n                    var q = self.list[key].options.onunload();\n                    if (q) text += q + \" \";\n                }\n            }\n            if (text !== \"\") {\n                return text;\n            }\n        });\n\n        // construct default menu options\n        this.menu = Galaxy.menu = new Menu.GalaxyMenu({\n            masthead    : this,\n            config      : this.options\n        });\n\n        // scratchpad\n        this.frame = Galaxy.frame = new Scratchbook.GalaxyFrame({\n            masthead    : this,\n        });\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = new QuotaMeter.UserQuotaMeter({\n            model       : Galaxy.user,\n            el          : this.$( '.quota-meter-container' )\n        }).render();\n    },\n\n    // configure events\n    events: {\n        'click'     : '_click',\n        'mousedown' : function(e) { e.preventDefault() }\n    },\n\n    // adds a new item to the masthead\n    append : function(item) {\n        return this._add(item, true);\n    },\n\n    // adds a new item to the masthead\n    prepend : function(item) {\n        return this._add(item, false);\n    },\n\n    // activate\n    highlight: function(id) {\n        var current = $(this.el).find('#' + id + '> li');\n        if (current) {\n            current.addClass('active');\n        }\n    },\n\n    // adds a new item to the masthead\n    _add : function(item, append) {\n        var $loc = $(this.el).find('#' + item.location);\n        if ($loc){\n            // create frame for new item\n            var $current = $(item.el);\n\n            // configure class in order to mark new items\n            $current.addClass('masthead-item');\n\n            // append to masthead\n            if (append) {\n                $loc.append($current);\n            } else {\n                $loc.prepend($current);\n            }\n\n            // add to list\n            this.list.push(item);\n        }\n\n        // location not found\n        return null;\n    },\n\n    // handle click event\n    _click: function(e) {\n        // close all popups\n        var $all = $(this.el).find('.popup');\n        if ($all) {\n            $all.hide();\n        }\n\n        // open current item\n        var $current = $(e.target).closest('.masthead-item').find('.popup');\n        if ($(e.target).hasClass('head')) {\n            $current.show();\n            this.$background.show();\n        } else {\n            this.$background.hide();\n        }\n    },\n\n    /*\n        HTML TEMPLATES\n    */\n\n    // fill template\n    _template: function(options) {\n        var brand_text = options.brand ? (\"/ \" + options.brand) : \"\" ;\n        return  '<div><div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n                    '<div style=\"position: relative; right: -50%; float: left;\">' +\n                        '<div id=\"navbar\" style=\"display: block; position: relative; right: 50%;\"></div>' +\n                    '</div>' +\n                   '<div class=\"navbar-brand\">' +\n                        '<a href=\"' + options.logo_url + '\">' +\n                            '<img style=\"margin-left: 0.35em;\" border=\"0\" src=\"' + Galaxy.root + 'static/images/galaxyIcon_noText.png\">' +\n                            '<span id=\"brand\"> Galaxy ' + brand_text + '</span>' +\n                        '</a>' +\n                    '</div>' +\n                    '<div class=\"quota-meter-container\"></div>' +\n                    '<div id=\"iconbar\" class=\"iconbar\"></div>' +\n                '</div>' +\n                '<div id=\"masthead-background\" style=\"display: none; position: absolute; top: 33px; width: 100%; height: 100%; z-index: 1010\"></div>' +\n                '</div>';\n    }\n});\n\n// return\nreturn {\n    GalaxyMasthead: GalaxyMasthead\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/layout/masthead.js\n ** module id = 33\n ** module chunks = 3 4\n **/","// dependencies\ndefine([], function() {\n\n/** GalaxyMenu uses the GalaxyMasthead class in order to add menu items and icons to the Masthead **/\nvar GalaxyMenu = Backbone.Model.extend({\n    initialize: function( options ) {\n        this.options = options.config;\n        this.masthead  = options.masthead;\n        this.create();\n    },\n\n    // default menu\n    create: function() {\n        //\n        // Analyze data tab.\n        //\n        var tab_analysis = new GalaxyMastheadTab({\n            id              : 'analysis',\n            title           : 'Analyze Data',\n            content         : '',\n            title_attribute : 'Analysis home view'\n        });\n        this.masthead.append( tab_analysis );\n\n        //\n        // Workflow tab.\n        //\n\n        var workflow_options = {\n            id              : 'workflow',\n            title           : 'Workflow',\n            content         : 'workflow',\n            title_attribute : 'Chain tools into workflows'\n        }\n        if ( !Galaxy.user.id ) {\n            workflow_options.disabled = true; // disable workflows for anonymous users\n        }\n\n        var tab_workflow = new GalaxyMastheadTab( workflow_options );\n        this.masthead.append( tab_workflow );\n\n        //\n        // 'Shared Items' or Libraries tab.\n        //\n        var tab_shared = new GalaxyMastheadTab({\n            id              : 'shared',\n            title           : 'Shared Data',\n            content         : 'library/index',\n            title_attribute : 'Access published resources'\n        });\n\n        tab_shared.add({\n            title   : 'Data Libraries deprecated',\n            content : 'library/index'\n        });\n\n        tab_shared.add({\n            title   : 'Data Libraries',\n            content : 'library/list',\n            divider : true\n        });\n\n        tab_shared.add({\n            title   : 'Published Histories',\n            content : 'history/list_published'\n        });\n\n        tab_shared.add({\n            title   : 'Published Workflows',\n            content : 'workflow/list_published'\n\n        });\n\n        tab_shared.add({\n            title   : 'Published Visualizations',\n            content : 'visualization/list_published'\n        });\n\n        tab_shared.add({\n            title   : 'Published Pages',\n            content : 'page/list_published'\n        });\n\n        this.masthead.append(tab_shared);\n\n        //\n        // Lab menu.\n        //\n        if ( this.options.user_requests ) {\n            var tab_lab = new GalaxyMastheadTab({\n                id      : 'lab',\n                title   : 'Lab'\n            });\n            tab_lab.add({\n                title   : 'Sequencing Requests',\n                content : 'requests/index'\n            });\n            tab_lab.add({\n                title   : 'Find Samples',\n                content : 'requests/find_samples_index'\n            });\n            tab_lab.add({\n                title   : 'Help',\n                content : this.options.lims_doc_url\n            });\n            this.masthead.append( tab_lab );\n        }\n\n        //\n        // Visualization tab.\n        //\n\n        var visualization_options = {\n            id              : 'visualization',\n            title           : 'Visualization',\n            content         : 'visualization/list',\n            title_attribute : 'Visualize datasets'\n        }\n\n        // disable visualizations for anonymous users\n        if ( !Galaxy.user.id ) {\n            visualization_options.disabled = true;\n        }\n        var tab_visualization = new GalaxyMastheadTab( visualization_options );\n\n        // add submenu only when user is logged in\n        if ( Galaxy.user.id ) {\n            tab_visualization.add({\n                title   : 'New Track Browser',\n                content : 'visualization/trackster',\n                target  : '_frame'\n            });\n            tab_visualization.add({\n                title   : 'Saved Visualizations',\n                content : 'visualization/list',\n                target  : '_frame'\n            });\n        }\n        this.masthead.append( tab_visualization );\n\n        //\n        // Admin.\n        //\n        if ( Galaxy.user.get( 'is_admin' ) ) {\n            var tab_admin = new GalaxyMastheadTab({\n                id              : 'admin',\n                title           : 'Admin',\n                content         : 'admin',\n                extra_class     : 'admin-only',\n                title_attribute : 'Administer this Galaxy'\n            });\n            this.masthead.append( tab_admin );\n        }\n\n        //\n        // Help tab.\n        //\n        var tab_help = new GalaxyMastheadTab({\n            id              : 'help',\n            title           : 'Help',\n            title_attribute : 'Support, contact, and community hubs'\n        });\n        if ( this.options.biostar_url ){\n            tab_help.add({\n                title   : 'Galaxy Biostar',\n                content : this.options.biostar_url_redirect,\n                target  : '_blank'\n            });\n            tab_help.add({\n                title   : 'Ask a question',\n                content : 'biostar/biostar_question_redirect',\n                target  : '_blank'\n            });\n        }\n        tab_help.add({\n            title   : 'Support',\n            content : this.options.support_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Search',\n            content : this.options.search_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Mailing Lists',\n            content : this.options.mailing_lists,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Videos',\n            content : this.options.screencasts_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'Wiki',\n            content : this.options.wiki_url,\n            target  : '_blank'\n        });\n        tab_help.add({\n            title   : 'How to Cite Galaxy',\n            content : this.options.citation_url,\n            target  : '_blank'\n        });\n        if (this.options.terms_url){\n            tab_help.add({\n                title   : 'Terms and Conditions',\n                content : this.options.terms_url,\n                target  : '_blank'\n            });\n        }\n        this.masthead.append( tab_help );\n\n        //\n        // User tab.\n        //\n        if ( !Galaxy.user.id ){\n            var tab_user = new GalaxyMastheadTab({\n                id              : 'user',\n                title           : 'User',\n                extra_class     : 'loggedout-only',\n                title_attribute : 'Account registration or login'\n            });\n\n            // login\n            tab_user.add({\n                title   : 'Login',\n                content : 'user/login',\n                target  : 'galaxy_main'\n            });\n\n            // register\n            if ( this.options.allow_user_creation ){\n                tab_user.add({\n                    title   : 'Register',\n                    content : 'user/create',\n                    target  : 'galaxy_main'\n                });\n            }\n\n            // add to masthead\n            this.masthead.append( tab_user );\n        } else {\n            var tab_user = new GalaxyMastheadTab({\n                id              : 'user',\n                title           : 'User',\n                extra_class     : 'loggedin-only',\n                title_attribute : 'Account preferences and saved data'\n            });\n\n            // show user logged in info\n            tab_user.add({\n                title   : 'Logged in as ' + Galaxy.user.get( 'email' )\n            });\n\n            tab_user.add({\n                title   : 'Preferences',\n                content : 'user?cntrller=user',\n                target  : 'galaxy_main'\n            });\n\n            tab_user.add({\n                title   : 'Custom Builds',\n                content : 'user/dbkeys',\n                target  : 'galaxy_main'\n            });\n\n            tab_user.add({\n                title   : 'Logout',\n                content : 'user/logout',\n                target  : '_top',\n                divider : true\n            });\n\n            // default tabs\n            tab_user.add({\n                title   : 'Saved Histories',\n                content : 'history/list',\n                target  : 'galaxy_main'\n            });\n            tab_user.add({\n                title   : 'Saved Datasets',\n                content : 'dataset/list',\n                target  : 'galaxy_main'\n            });\n            tab_user.add({\n                title   : 'Saved Pages',\n                content : 'page/list',\n                target  : '_top'\n            });\n\n            tab_user.add({\n                title   : 'API Keys',\n                content : 'user/api_keys?cntrller=user',\n                target  : 'galaxy_main'\n            });\n\n            if ( this.options.use_remote_user ){\n                tab_user.add({\n                    title   : 'Public Name',\n                    content : 'user/edit_username?cntrller=user',\n                    target  : 'galaxy_main'\n                });\n            }\n\n            // add to masthead\n            this.masthead.append( tab_user );\n        }\n\n        // identify active tab\n        if ( this.options.active_view ) {\n            this.masthead.highlight( this.options.active_view );\n        }\n    }\n});\n\n/** Masthead tab **/\nvar GalaxyMastheadTab = Backbone.View.extend({\n    // main options\n    options:{\n        id              : '',\n        title           : '',\n        target          : '_parent',\n        content         : '',\n        type            : 'url',\n        scratchbook     : false,\n        onunload        : null,\n        visible         : true,\n        disabled        : false,\n        title_attribute : ''\n    },\n\n    // location\n    location: 'navbar',\n\n    // optional sub menu\n    $menu: null,\n\n    // events\n    events:{\n        'click .head' : '_head'\n    },\n\n    // initialize\n    initialize: function ( options ){\n        // read in defaults\n        if ( options ){\n            this.options = _.defaults( options, this.options );\n        }\n\n        // update url\n        if ( this.options.content !== undefined && this.options.content.indexOf( '//' ) === -1 ){\n            this.options.content = Galaxy.root + this.options.content;\n        }\n\n        // add template for tab\n        this.setElement( $( this._template( this.options ) ) );\n\n        // disable menu items that are not available to anonymous user\n        // also show title to explain why they are disabled\n        if ( this.options.disabled ){\n            $( this.el ).find( '.root' ).addClass( 'disabled' );\n            this._attachPopover();\n        }\n\n        // visiblity\n        if ( !this.options.visible ){\n            this.hide();\n        }\n    },\n\n    // show\n    show: function(){\n        $(this.el).css({visibility : 'visible'});\n    },\n\n    // show\n    hide: function(){\n        $(this.el).css({visibility : 'hidden'});\n    },\n\n    // add menu item\n    add: function (options){\n        // menu option defaults\n        var menuOptions = {\n            title       : 'Title',\n            content     : '',\n            type        : 'url',\n            target      : '_parent',\n            scratchbook : false,\n            divider     : false\n        }\n\n        // read in defaults\n        if (options)\n            menuOptions = _.defaults(options, menuOptions);\n\n        // update url\n        if (menuOptions.content && menuOptions.content.indexOf('//') === -1)\n            menuOptions.content = Galaxy.root + menuOptions.content;\n\n        // check if submenu element is available\n        if (!this.$menu){\n            // insert submenu element into root\n            $(this.el).find('.root').append(this._templateMenu());\n\n            // show caret\n            $(this.el).find('.symbol').addClass('caret');\n\n            // update element link\n            this.$menu = $(this.el).find('.popup');\n        }\n\n        // create\n        var $item = $(this._templateMenuItem(menuOptions));\n\n        // append menu\n        this.$menu.append($item);\n\n        // add events\n        var self = this;\n        $item.on('click', function(e){\n            // prevent default\n            e.preventDefault();\n\n            // no modifications if new tab is requested\n            if (self.options.target === '_blank')\n                return true;\n\n            // load into frame\n            Galaxy.frame.add(options);\n        });\n\n        // append divider\n        if (menuOptions.divider)\n            this.$menu.append($(this._templateDivider()));\n    },\n\n    // show menu on header click\n    _head: function(e){\n        // prevent default\n        e.preventDefault();\n\n        if (this.options.disabled){\n            return // prevent link following if menu item is disabled\n        }\n\n        // check for menu options\n        if (!this.$menu) {\n            Galaxy.frame.add(this.options);\n        }\n    },\n\n    _attachPopover : function(){\n        var $popover_element = $(this.el).find('.head');\n        $popover_element.popover({\n            html: true,\n            content: 'Please <a href=\"' + Galaxy.root + 'user/login?use_panels=True\">log in</a> or <a href=\"' + Galaxy.root + 'user/create?use_panels=True\">register</a> to use this feature.',\n            placement: 'bottom'\n        }).on('shown.bs.popover', function() { // hooking on bootstrap event to automatically hide popovers after delay\n            setTimeout(function() {\n                $popover_element.popover('hide');\n            }, 5000);\n        });\n     },\n\n    // fill template header\n    _templateMenuItem: function (options){\n        return '<li><a href=\"' + options.content + '\" target=\"' + options.target + '\">' + options.title + '</a></li>';\n    },\n\n    // fill template header\n    _templateMenu: function (){\n        return '<ul class=\"popup dropdown-menu\"></ul>';\n    },\n\n    _templateDivider: function(){\n        return '<li class=\"divider\"></li>';\n    },\n\n    // fill template\n    _template: function (options){\n        // start template\n        var tmpl =  '<ul id=\"' + options.id + '\" class=\"nav navbar-nav\" border=\"0\" cellspacing=\"0\">' +\n                        '<li class=\"root dropdown\" style=\"\">' +\n                            '<a class=\"head dropdown-toggle\" data-toggle=\"dropdown\" target=\"' + options.target + '\" href=\"' + options.content + '\" title=\"' + options.title_attribute + '\">' +\n                                options.title + '<b class=\"symbol\"></b>' +\n                            '</a>' +\n                        '</li>' +\n                    '</ul>';\n\n        // return template\n        return tmpl;\n    }\n});\n\n// return\nreturn {\n    GalaxyMenu: GalaxyMenu,\n    GalaxyMastheadTab: GalaxyMastheadTab\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/layout/menu.js\n ** module id = 34\n ** module chunks = 3 4\n **/","define([\n    'layout/masthead',\n    'layout/panel',\n    'mvc/ui/ui-modal',\n    'mvc/base-mvc'\n], function( MASTHEAD, PANEL, MODAL, BASE_MVC ) {\n\n// ============================================================================\nvar PageLayoutView = Backbone.View.extend( BASE_MVC.LoggableMixin ).extend({\n    _logNamespace : 'layout',\n\n    el : 'body',\n    className : 'full-content',\n\n    _panelIds : [\n        'left', 'center', 'right'\n    ],\n\n    defaultOptions : {\n        message_box_visible : false,\n        message_box_content : '',\n        message_box_class   : 'info',\n\n        show_inactivity_warning : false,\n        inactivity_box_content  : '',\n    },\n\n    initialize : function( options ){\n        this.log( this + '.initialize:', options );\n        _.extend( this, _.pick( options, this._panelIds ) );\n        this.options = _.defaults( _.omit( options, this._panelIds ), this.defaultOptions );\n\n        // TODO: remove globals\n        Galaxy.modal = this.modal = new MODAL.View();\n    },\n\n    /**  */\n    $everything : function(){\n        return this.$( '#everything' );\n    },\n\n    render : function(){\n        this.log( this + '.render:' );\n        this.$el.attr( 'scroll', 'no' );\n        this.$el.html( this.template( this.options ) );\n\n        //TODO: no render on masthead, needs init each time\n        Galaxy.masthead = this.masthead = new MASTHEAD.GalaxyMasthead( _.extend( this.options.config, {\n            el: this.$( '#masthead' ).get(0)\n        }));\n\n        if( this.options.message_box_visible ){\n            this.messageBox( this.options.message_box_content, this.options.message_box_class );\n        }\n        if( this.options.show_inactivity_warning ){\n            this.inactivityWarning( this.options.inactivity_box_content );\n        }\n\n        this.renderPanels();\n        return this;\n    },\n\n    /**  */\n    messageBox : function( content, level ){\n        content = content || '';\n        level = level || 'info';\n        this.$el.addClass( 'has-message-box' );\n        this.$( '#messagebox' )\n            .attr( 'class', 'panel-' + level + '-message' )\n            .html( content )\n            .toggle( !!content );\n        return this;\n    },\n\n    /**  */\n    inactivityWarning : function( content ){\n        var verificationLink = '<a href=\"' + Galaxy.root + 'user/resend_verification\">Resend verification.</a>';\n        this.$el.addClass( 'has-inactivity-box' );\n        this.$( '#inactivebox' )\n            .html( content )\n            .append( ' ' + verificationLink )\n            .toggle( !!content );\n        return this;\n    },\n\n    /**  */\n    renderPanels : function(){\n        var page = this;\n        // TODO: Remove this line after select2 update\n        $( '.select2-hidden-accessible' ).remove();\n        this._panelIds.forEach( function( panelId ){\n            if( _.has( page, panelId ) ){\n                var panelView = page[ panelId ];\n                panelView.setElement( '#' + panelId );\n                panelView.render();\n            }\n        });\n        if( !this.left ){\n            this.center.$el.css( 'left', 0 );\n        }\n        if( !this.right ){\n            this.center.$el.css( 'right', 0 );\n        }\n        return this;\n    },\n\n    /** body template */\n    //TODO: to underscore\n    template: function( options ){\n        //TODO: remove inline styling\n        return [\n            '<div id=\"everything\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\">',\n                '<div id=\"background\"/>',\n                '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\"></div>',\n                '<div id=\"messagebox\" style=\"display: none;\"></div>',\n                '<div id=\"inactivebox\" class=\"panel-warning-message\" style=\"display: none;\"></div>',\n                // content here\n                // TODO: wrapping div\n                this.left?   '<div id=\"left\"/>' : '',\n                this.center? '<div id=\"center\" class=\"inbound\"/>' : '',\n                this.right?  '<div id=\"right\"/>' : '',\n            '</div>',\n            // a dropdown overlay for capturing clicks/drags\n            '<div id=\"dd-helper\" style=\"display: none;\"></div>',\n            // display message when js is disabled\n            '<noscript>',\n                '<div class=\"overlay overlay-background noscript-overlay\">',\n                    '<div>',\n                        '<h3 class=\"title\">Javascript Required for Galaxy</h3>',\n                        '<div>',\n                            'The Galaxy analysis interface requires a browser with Javascript enabled.<br>',\n                            'Please enable Javascript and refresh this page',\n                        '</div>',\n                    '</div>',\n                '</div>',\n            '</noscript>'\n        ].join('');\n    },\n\n    hideSidePanels : function(){\n        if( this.left ){\n            this.left.hide();\n        }\n        if( this.right ){\n            this.right.hide();\n        }\n    },\n\n    toString : function(){ return 'PageLayoutView'; }\n});\n\n// ============================================================================\n    return {\n        PageLayoutView: PageLayoutView\n    };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/layout/page.js\n ** module id = 35\n ** module chunks = 3 4\n **/","// dependencies\ndefine([\"mvc/ui/ui-frames\"], function(Frames) {\n\n/** Frame manager uses the ui-frames to create the scratch book masthead icon and functionality **/\nvar GalaxyFrame = Backbone.View.extend({\n    // base element\n    el_main: 'body',\n\n    // frame active/disabled\n    active: false,\n\n    // button active\n    button_active: null,\n\n    // button load\n    button_load  : null,\n\n    // initialize\n    initialize : function(options) {\n        options = options || {};\n\n        // add to masthead menu\n        var self = this;\n\n        // create frames\n        this.frames = new Frames.View({\n            visible: false,\n        });\n\n        // add activate icon\n        this.button_active = new GalaxyMastheadIcon({\n            icon        : 'fa-th',\n            tooltip     : 'Enable/Disable Scratchbook',\n            onclick     : function() { self._activate(); },\n            onunload    : function() {\n                if (self.frames.length() > 0) {\n                    return \"You opened \" + self.frames.length() + \" frame(s) which will be lost.\";\n                }\n            }\n        });\n\n        // add load icon\n        this.button_load = new GalaxyMastheadIcon({\n            icon        : 'fa-eye',\n            tooltip     : 'Show/Hide Scratchbook',\n            onclick     : function(e) {\n                if (self.frames.visible) {\n                    self.frames.hide();\n                } else {\n                    self.frames.show();\n                }\n            },\n            with_number : true\n        });\n\n        // add to masthead\n        if( options.masthead ){\n            options.masthead.append(this.button_active);\n            options.masthead.append(this.button_load);\n        }\n\n        // create\n        this.setElement(this.frames.$el);\n\n        // append to main\n        $(this.el_main).append(this.$el);\n\n        // refresh menu\n        this.frames.setOnChange(function() {\n            self._refresh();\n        });\n        this._refresh();\n    },\n\n    /**\n     * Add a dataset to the frames.\n     */\n    add_dataset: function(dataset_id) {\n        var self = this;\n        require(['mvc/dataset/data'], function(DATA) {\n            var dataset = new DATA.Dataset({ id: dataset_id });\n            $.when( dataset.fetch() ).then( function() {\n                // Construct frame config based on dataset's type.\n                var frame_config = {\n                        title: dataset.get('name')\n                    },\n                    // HACK: For now, assume 'tabular' and 'interval' are the only\n                    // modules that contain tabular files. This needs to be replaced\n                    // will a is_datatype() function.\n                    is_tabular = _.find(['tabular', 'interval'], function(data_type) {\n                        return dataset.get('data_type').indexOf(data_type) !== -1;\n                    });\n\n                // Use tabular chunked display if dataset is tabular; otherwise load via URL.\n                if (is_tabular) {\n                    var tabular_dataset = new DATA.TabularDataset(dataset.toJSON());\n                    _.extend(frame_config, {\n                        type: 'other',\n                        content: function( parent_elt ) {\n                            DATA.createTabularDatasetChunkedView({\n                                model: tabular_dataset,\n                                parent_elt: parent_elt,\n                                embedded: true,\n                                height: '100%'\n                            });\n                        }\n                    });\n                }\n                else {\n                    _.extend(frame_config, {\n                        type: 'url',\n                        content: Galaxy.root + 'datasets/' +\n                                 dataset.id + '/display/?preview=True'\n                    });\n                }\n\n                self.add(frame_config);\n\n            });\n        });\n\n    },\n\n    /**\n     * Add a trackster visualization to the frames.\n     */\n    add_trackster_viz: function(viz_id) {\n        var self = this;\n        require(['viz/visualization', 'viz/trackster'], function(visualization, trackster) {\n            var viz = new visualization.Visualization({id: viz_id});\n            $.when( viz.fetch() ).then( function() {\n                var ui = new trackster.TracksterUI(Galaxy.root);\n\n                // Construct frame config based on dataset's type.\n                var frame_config = {\n                        title: viz.get('name'),\n                        type: 'other',\n                        content: function(parent_elt) {\n                            // Create view config.\n                            var view_config = {\n                                container: parent_elt,\n                                name: viz.get('title'),\n                                id: viz.id,\n                                // FIXME: this will not work with custom builds b/c the dbkey needed to be encoded.\n                                dbkey: viz.get('dbkey'),\n                                stand_alone: false\n                            },\n                            latest_revision = viz.get('latest_revision'),\n                            drawables = latest_revision.config.view.drawables;\n\n                            // Set up datasets in drawables.\n                            _.each(drawables, function(d) {\n                                d.dataset = {\n                                    hda_ldda: d.hda_ldda,\n                                    id: d.dataset_id\n                                };\n                            });\n\n                            view = ui.create_visualization(view_config,\n                                                           latest_revision.config.viewport,\n                                                           latest_revision.config.view.drawables,\n                                                           latest_revision.config.bookmarks,\n                                                           false);\n                        }\n                    };\n\n                self.add(frame_config);\n            });\n        });\n    },\n\n    /**\n     * Add and display a new frame/window based on options.\n     */\n    add: function(options){\n        // open new tab\n        if (options.target == '_blank'){\n            window.open(options.content);\n            return;\n        }\n\n        // reload entire window\n        if (options.target == '_top' || options.target == '_parent' || options.target == '_self'){\n            window.location = options.content;\n            return;\n        }\n\n        // validate\n        if (!this.active){\n            // fix url if main frame is unavailable\n            var $galaxy_main = $(window.parent.document).find('#galaxy_main');\n            if (options.target == 'galaxy_main' || options.target == 'center'){\n                if ($galaxy_main.length === 0){\n                    var href = options.content;\n                    if (href.indexOf('?') == -1)\n                        href += '?';\n                    else\n                        href += '&';\n                    href += 'use_panels=True';\n                    window.location = href;\n                } else {\n                    $galaxy_main.attr('src', options.content);\n                }\n            } else\n                window.location = options.content;\n\n            // stop\n            return;\n        }\n\n        // add to frames view\n        this.frames.add(options);\n    },\n\n    // activate/disable panel\n    _activate: function (){\n        // check\n        if (this.active){\n            // disable\n            this.active = false;\n\n            // toggle\n            this.button_active.untoggle();\n\n            // hide panel\n            this.frames.hide();\n        } else {\n            // activate\n            this.active = true;\n\n            // untoggle\n            this.button_active.toggle();\n        }\n    },\n\n    // update frame counter\n    _refresh: function(){\n        // update on screen counter\n        this.button_load.number(this.frames.length());\n\n        // check\n        if(this.frames.length() === 0)\n            this.button_load.hide();\n        else\n            this.button_load.show();\n\n        // check\n        if (this.frames.visible) {\n            this.button_load.toggle();\n        } else {\n            this.button_load.untoggle();\n        }\n    }\n});\n\n/** Masthead icon **/\nvar GalaxyMastheadIcon = Backbone.View.extend({\n    // icon options\n    options:{\n        id              : '',\n        icon            : 'fa-cog',\n        tooltip         : '',\n        with_number     : false,\n        onclick         : function() { alert ('clicked') },\n        onunload        : null,\n        visible         : true\n    },\n\n    // location identifier for masthead class\n    location: 'iconbar',\n\n    // initialize\n    initialize: function (options){\n        // read in defaults\n        if (options)\n            this.options = _.defaults(options, this.options);\n\n        // add template for icon\n        this.setElement($(this._template(this.options)));\n\n        // configure icon\n        var self = this;\n        $(this.el).find('.icon').tooltip({title: this.options.tooltip, placement: 'bottom'})\n                                .on('mouseup', self.options.onclick);\n\n        // visiblity\n        if (!this.options.visible)\n            this.hide();\n    },\n\n    // show\n    show: function(){\n        $(this.el).css({visibility : 'visible'});\n    },\n\n    // show\n    hide: function(){\n        $(this.el).css({visibility : 'hidden'});\n    },\n\n    // switch icon\n    icon: function (new_icon){\n        // update icon class\n        $(this.el).find('.icon').removeClass(this.options.icon)\n                                .addClass(new_icon);\n\n        // update icon\n        this.options.icon = new_icon;\n    },\n\n    // toggle\n    toggle: function(){\n        $(this.el).addClass('toggle');\n    },\n\n    // untoggle\n    untoggle: function(){\n        $(this.el).removeClass('toggle');\n    },\n\n    // set/get number\n    number: function(new_number){\n        $(this.el).find('.number').text(new_number);\n    },\n\n    // fill template icon\n    _template: function (options){\n        var tmpl =  '<div id=\"' + options.id + '\" class=\"symbol\">' +\n                        '<div class=\"icon fa fa-2x ' + options.icon + '\"></div>';\n        if (options.with_number)\n            tmpl+=      '<div class=\"number\"></div>';\n        tmpl +=     '</div>';\n\n        // return template\n        return tmpl;\n    }\n});\n\n// return\nreturn {\n    GalaxyFrame: GalaxyFrame,\n    GalaxyMastheadIcon: GalaxyMastheadIcon\n};\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/layout/scratchbook.js\n ** module id = 36\n ** module chunks = 3 4\n **/","define([\n    \"mvc/base-mvc\",\n    \"utils/localization\"\n], function( baseMVC, _l ){\n\nvar logNamespace = 'user';\n//==============================================================================\n/** @class View to display a user's disk/storage usage\n *      either as a progress bar representing the percentage of a quota used\n *      or a simple text element displaying the human readable size used.\n *  @name UserQuotaMeter\n *  @augments Backbone.View\n */\nvar UserQuotaMeter = Backbone.View.extend( baseMVC.LoggableMixin ).extend(\n/** @lends UserQuotaMeter.prototype */{\n    _logNamespace : logNamespace,\n\n    /** Defaults for optional settings passed to initialize */\n    options : {\n        warnAtPercent   : 85,\n        errorAtPercent  : 100\n    },\n\n    /** Set up, accept options, and bind events */\n    initialize : function( options ){\n        this.log( this + '.initialize:', options );\n        _.extend( this.options, options );\n\n        //this.bind( 'all', function( event, data ){ this.log( this + ' event:', event, data ); }, this );\n        this.model.bind( 'change:quota_percent change:total_disk_usage', this.render, this );\n    },\n\n    /** Re-load user model data from the api */\n    update : function( options ){\n        this.log( this + ' updating user data...', options );\n        this.model.loadFromApi( this.model.get( 'id' ), options );\n        return this;\n    },\n\n    /** Is the user over their quota (if there is one)?\n     * @returns {Boolean} true if over quota, false if no quota or under quota\n     */\n    isOverQuota : function(){\n        return ( this.model.get( 'quota_percent' ) !== null\n              && this.model.get( 'quota_percent' ) >= this.options.errorAtPercent );\n    },\n\n    /** Render the meter when they have an applicable quota. Will render as a progress bar\n     *      with their percentage of that quota in text over the bar.\n     *  @fires quota:over when user is over quota (>= this.errorAtPercent)\n     *  @fires quota:under when user is under quota\n     *  @fires quota:under:approaching when user is >= this.warnAtPercent of their quota\n     *  @fires quota:under:ok when user is below this.warnAtPercent\n     *  @returns {jQuery} the rendered meter\n     */\n    _render_quota : function(){\n        var modelJson = this.model.toJSON(),\n            //prevPercent = this.model.previous( 'quota_percent' ),\n            percent = modelJson.quota_percent,\n            //meter = $( UserQuotaMeter.templates.quota( modelJson ) );\n            $meter = $( this._templateQuotaMeter( modelJson ) ),\n            $bar = $meter.find( '.progress-bar' );\n        //this.log( this + '.rendering quota, percent:', percent, 'meter:', meter );\n\n        // OVER QUOTA: color the quota bar and show the quota error message\n        if( this.isOverQuota() ){\n            //this.log( '\\t over quota' );\n            $bar.attr( 'class', 'progress-bar progress-bar-danger' );\n            $meter.find( '.quota-meter-text' ).css( 'color', 'white' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:over', modelJson );\n\n        // APPROACHING QUOTA: color the quota bar\n        } else if( percent >= this.options.warnAtPercent ){\n            //this.log( '\\t approaching quota' );\n            $bar.attr( 'class', 'progress-bar progress-bar-warning' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:under quota:under:approaching', modelJson );\n\n        // otherwise, hide/don't use the msg box\n        } else {\n            $bar.attr( 'class', 'progress-bar progress-bar-success' );\n            //TODO: only trigger event if state has changed\n            this.trigger( 'quota:under quota:under:ok', modelJson );\n        }\n        return $meter;\n    },\n\n    /** Render the meter when the user has NO applicable quota. Will render as text\n     *      showing the human readable sum storage their data is using.\n     *  @returns {jQuery} the rendered text\n     */\n    _render_usage : function(){\n        //var usage = $( UserQuotaMeter.templates.usage( this.model.toJSON() ) );\n        var usage = $( this._templateUsage( this.model.toJSON() ) );\n        this.log( this + '.rendering usage:', usage );\n        return usage;\n    },\n\n    /** Render either the quota percentage meter or the human readable disk usage\n     *      depending on whether the user model has quota info (quota_percent === null -> no quota)\n     *  @returns {Object} this UserQuotaMeter\n     */\n    render : function(){\n        //this.log( this + '.rendering' );\n        var meterHtml = null;\n\n        // no quota on server ('quota_percent' === null (can be valid at 0)), show usage instead\n        this.log( this + '.model.quota_percent:', this.model.get( 'quota_percent' ) );\n        if( ( this.model.get( 'quota_percent' ) === null )\n        ||  ( this.model.get( 'quota_percent' ) === undefined ) ){\n            meterHtml = this._render_usage();\n\n        // otherwise, render percent of quota (and warning, error)\n        } else {\n            meterHtml = this._render_quota();\n            //TODO: add the original text for unregistered quotas\n            //tooltip = \"Your disk quota is %s.  You can increase your quota by registering a Galaxy account.\"\n        }\n\n        this.$el.html( meterHtml );\n        this.$el.find( '.quota-meter-text' ).tooltip();\n        return this;\n    },\n\n    _templateQuotaMeter : function( data ){\n        return [\n            '<div id=\"quota-meter\" class=\"quota-meter progress\">',\n                '<div class=\"progress-bar\" style=\"width: ', data.quota_percent, '%\"></div>',\n                '<div class=\"quota-meter-text\" style=\"top: 6px\"',\n                    (( data.nice_total_disk_usage )?( ' title=\"Using ' + data.nice_total_disk_usage + '\">' ):( '>' )),\n                    _l( 'Using' ), ' ', data.quota_percent, '%',\n                '</div>',\n            '</div>'\n        ].join( '' );\n    },\n\n    _templateUsage : function( data ){\n        return [\n            '<div id=\"quota-meter\" class=\"quota-meter\" style=\"background-color: transparent\">',\n                '<div class=\"quota-meter-text\" style=\"top: 6px; color: white\">',\n                    (( data.nice_total_disk_usage )?( _l( 'Using ' ) + data.nice_total_disk_usage ):( '' )),\n                '</div>',\n            '</div>'\n        ].join( '' );\n    },\n\n    toString : function(){\n        return 'UserQuotaMeter(' + this.model + ')';\n    }\n});\n\n\n//==============================================================================\nreturn {\n    UserQuotaMeter : UserQuotaMeter\n};});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./galaxy/scripts/mvc/user/user-quotameter.js\n ** module id = 66\n ** module chunks = 3 4\n **/"],"sourceRoot":""}